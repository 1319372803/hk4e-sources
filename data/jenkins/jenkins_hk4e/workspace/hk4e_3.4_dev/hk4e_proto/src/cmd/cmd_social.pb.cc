// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_social.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_social.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class SocialShowAvatarInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SocialShowAvatarInfo>
     _instance;
} _SocialShowAvatarInfo_default_instance_;
class SocialDetailDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SocialDetail>
     _instance;
} _SocialDetail_default_instance_;
class FriendBriefDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FriendBrief>
     _instance;
} _FriendBrief_default_instance_;
class ChatEmojiCollectionDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChatEmojiCollectionData>
     _instance;
} _ChatEmojiCollectionData_default_instance_;
class GetPlayerFriendListReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetPlayerFriendListReq>
     _instance;
} _GetPlayerFriendListReq_default_instance_;
class GetPlayerFriendListRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetPlayerFriendListRsp>
     _instance;
} _GetPlayerFriendListRsp_default_instance_;
class AskAddFriendReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AskAddFriendReq>
     _instance;
} _AskAddFriendReq_default_instance_;
class AskAddFriendRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AskAddFriendRsp>
     _instance;
} _AskAddFriendRsp_default_instance_;
class DealAddFriendReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DealAddFriendReq>
     _instance;
} _DealAddFriendReq_default_instance_;
class DealAddFriendRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DealAddFriendRsp>
     _instance;
} _DealAddFriendRsp_default_instance_;
class GetPlayerSocialDetailReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetPlayerSocialDetailReq>
     _instance;
} _GetPlayerSocialDetailReq_default_instance_;
class GetPlayerSocialDetailRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetPlayerSocialDetailRsp>
     _instance;
} _GetPlayerSocialDetailRsp_default_instance_;
class DeleteFriendReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DeleteFriendReq>
     _instance;
} _DeleteFriendReq_default_instance_;
class DeleteFriendRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DeleteFriendRsp>
     _instance;
} _DeleteFriendRsp_default_instance_;
class SetPlayerBirthdayReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPlayerBirthdayReq>
     _instance;
} _SetPlayerBirthdayReq_default_instance_;
class SetPlayerBirthdayRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPlayerBirthdayRsp>
     _instance;
} _SetPlayerBirthdayRsp_default_instance_;
class SetPlayerSignatureReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPlayerSignatureReq>
     _instance;
} _SetPlayerSignatureReq_default_instance_;
class SetPlayerSignatureRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPlayerSignatureRsp>
     _instance;
} _SetPlayerSignatureRsp_default_instance_;
class SetPlayerHeadImageReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPlayerHeadImageReq>
     _instance;
} _SetPlayerHeadImageReq_default_instance_;
class SetPlayerHeadImageRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPlayerHeadImageRsp>
     _instance;
} _SetPlayerHeadImageRsp_default_instance_;
class UpdatePS4FriendListNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UpdatePS4FriendListNotify>
     _instance;
} _UpdatePS4FriendListNotify_default_instance_;
class DeleteFriendNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DeleteFriendNotify>
     _instance;
} _DeleteFriendNotify_default_instance_;
class AddFriendNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddFriendNotify>
     _instance;
} _AddFriendNotify_default_instance_;
class AskAddFriendNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AskAddFriendNotify>
     _instance;
} _AskAddFriendNotify_default_instance_;
class SetNameCardReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetNameCardReq>
     _instance;
} _SetNameCardReq_default_instance_;
class SetNameCardRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetNameCardRsp>
     _instance;
} _SetNameCardRsp_default_instance_;
class GetAllUnlockNameCardReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetAllUnlockNameCardReq>
     _instance;
} _GetAllUnlockNameCardReq_default_instance_;
class GetAllUnlockNameCardRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetAllUnlockNameCardRsp>
     _instance;
} _GetAllUnlockNameCardRsp_default_instance_;
class AddBlacklistReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddBlacklistReq>
     _instance;
} _AddBlacklistReq_default_instance_;
class AddBlacklistRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddBlacklistRsp>
     _instance;
} _AddBlacklistRsp_default_instance_;
class RemoveBlacklistReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RemoveBlacklistReq>
     _instance;
} _RemoveBlacklistReq_default_instance_;
class RemoveBlacklistRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RemoveBlacklistRsp>
     _instance;
} _RemoveBlacklistRsp_default_instance_;
class UnlockNameCardNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UnlockNameCardNotify>
     _instance;
} _UnlockNameCardNotify_default_instance_;
class GetRecentMpPlayerListReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetRecentMpPlayerListReq>
     _instance;
} _GetRecentMpPlayerListReq_default_instance_;
class GetRecentMpPlayerListRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetRecentMpPlayerListRsp>
     _instance;
} _GetRecentMpPlayerListRsp_default_instance_;
class SocialDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SocialDataNotify>
     _instance;
} _SocialDataNotify_default_instance_;
class TakeFirstShareRewardReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TakeFirstShareRewardReq>
     _instance;
} _TakeFirstShareRewardReq_default_instance_;
class TakeFirstShareRewardRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TakeFirstShareRewardRsp>
     _instance;
} _TakeFirstShareRewardRsp_default_instance_;
class UpdatePS4BlockListReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UpdatePS4BlockListReq>
     _instance;
} _UpdatePS4BlockListReq_default_instance_;
class UpdatePS4BlockListRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UpdatePS4BlockListRsp>
     _instance;
} _UpdatePS4BlockListRsp_default_instance_;
class GetPlayerBlacklistReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetPlayerBlacklistReq>
     _instance;
} _GetPlayerBlacklistReq_default_instance_;
class GetPlayerBlacklistRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetPlayerBlacklistRsp>
     _instance;
} _GetPlayerBlacklistRsp_default_instance_;
class PlayerReportReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerReportReq>
     _instance;
} _PlayerReportReq_default_instance_;
class PlayerReportRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerReportRsp>
     _instance;
} _PlayerReportRsp_default_instance_;
class SetFriendRemarkNameReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetFriendRemarkNameReq>
     _instance;
} _SetFriendRemarkNameReq_default_instance_;
class SetFriendRemarkNameRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetFriendRemarkNameRsp>
     _instance;
} _SetFriendRemarkNameRsp_default_instance_;
class UpdatePlayerShowAvatarListReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UpdatePlayerShowAvatarListReq>
     _instance;
} _UpdatePlayerShowAvatarListReq_default_instance_;
class UpdatePlayerShowAvatarListRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UpdatePlayerShowAvatarListRsp>
     _instance;
} _UpdatePlayerShowAvatarListRsp_default_instance_;
class GetFriendShowAvatarInfoReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetFriendShowAvatarInfoReq>
     _instance;
} _GetFriendShowAvatarInfoReq_default_instance_;
class GetFriendShowAvatarInfoRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetFriendShowAvatarInfoRsp>
     _instance;
} _GetFriendShowAvatarInfoRsp_default_instance_;
class UpdatePlayerShowNameCardListReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UpdatePlayerShowNameCardListReq>
     _instance;
} _UpdatePlayerShowNameCardListReq_default_instance_;
class UpdatePlayerShowNameCardListRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UpdatePlayerShowNameCardListRsp>
     _instance;
} _UpdatePlayerShowNameCardListRsp_default_instance_;
class GetFriendShowNameCardInfoReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetFriendShowNameCardInfoReq>
     _instance;
} _GetFriendShowNameCardInfoReq_default_instance_;
class GetFriendShowNameCardInfoRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetFriendShowNameCardInfoRsp>
     _instance;
} _GetFriendShowNameCardInfoRsp_default_instance_;
class ForceAddPlayerFriendReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ForceAddPlayerFriendReq>
     _instance;
} _ForceAddPlayerFriendReq_default_instance_;
class ForceAddPlayerFriendRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ForceAddPlayerFriendRsp>
     _instance;
} _ForceAddPlayerFriendRsp_default_instance_;
class ProfilePictureChangeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ProfilePictureChangeNotify>
     _instance;
} _ProfilePictureChangeNotify_default_instance_;
class PSNFriendListNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PSNFriendListNotify>
     _instance;
} _PSNFriendListNotify_default_instance_;
class PSNBlackListNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PSNBlackListNotify>
     _instance;
} _PSNBlackListNotify_default_instance_;
class GetPlayerAskFriendListReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetPlayerAskFriendListReq>
     _instance;
} _GetPlayerAskFriendListReq_default_instance_;
class GetPlayerAskFriendListRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetPlayerAskFriendListRsp>
     _instance;
} _GetPlayerAskFriendListRsp_default_instance_;
class GetChatEmojiCollectionReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetChatEmojiCollectionReq>
     _instance;
} _GetChatEmojiCollectionReq_default_instance_;
class GetChatEmojiCollectionRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetChatEmojiCollectionRsp>
     _instance;
} _GetChatEmojiCollectionRsp_default_instance_;
class SetChatEmojiCollectionReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetChatEmojiCollectionReq>
     _instance;
} _SetChatEmojiCollectionReq_default_instance_;
class SetChatEmojiCollectionRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetChatEmojiCollectionRsp>
     _instance;
} _SetChatEmojiCollectionRsp_default_instance_;
class UpdatePS4FriendListReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UpdatePS4FriendListReq>
     _instance;
} _UpdatePS4FriendListReq_default_instance_;
class UpdatePS4FriendListRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UpdatePS4FriendListRsp>
     _instance;
} _UpdatePS4FriendListRsp_default_instance_;
class FriendInfoChangeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FriendInfoChangeNotify>
     _instance;
} _FriendInfoChangeNotify_default_instance_;
class PlayerSignatureAuditDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerSignatureAuditDataNotify>
     _instance;
} _PlayerSignatureAuditDataNotify_default_instance_;
class PlayerSignatureNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerSignatureNotify>
     _instance;
} _PlayerSignatureNotify_default_instance_;
class SignatureAuditConfigNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SignatureAuditConfigNotify>
     _instance;
} _SignatureAuditConfigNotify_default_instance_;
class ReadSignatureAuditReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ReadSignatureAuditReq>
     _instance;
} _ReadSignatureAuditReq_default_instance_;
class ReadSignatureAuditRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ReadSignatureAuditRsp>
     _instance;
} _ReadSignatureAuditRsp_default_instance_;

namespace protobuf_cmd_2fcmd_5fsocial_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[73];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialShowAvatarInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialShowAvatarInfo, avatar_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialShowAvatarInfo, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialShowAvatarInfo, costume_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, avatar_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, birthday_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, world_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, reserved_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, online_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, is_friend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, is_mp_mode_available_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, online_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, name_card_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, is_in_blacklist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, is_chat_no_disturb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, remark_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, finish_achievement_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, tower_floor_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, tower_level_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, is_show_avatar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, show_avatar_info_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, show_name_card_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, friend_enter_home_option_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, profile_picture_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, ip_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, avatar_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, world_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, online_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, is_mp_mode_available_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, online_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, last_active_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, name_card_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, mp_player_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, is_chat_no_disturb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, chat_sequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, remark_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, show_avatar_info_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, friend_enter_home_option_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, profile_picture_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, is_game_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, is_psn_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, platform_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatEmojiCollectionData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatEmojiCollectionData, emoji_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerFriendListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerFriendListRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerFriendListRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerFriendListRsp, ask_friend_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerFriendListRsp, friend_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskAddFriendReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskAddFriendReq, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskAddFriendRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskAddFriendRsp, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskAddFriendRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskAddFriendRsp, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealAddFriendReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealAddFriendReq, deal_add_friend_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealAddFriendReq, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealAddFriendRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealAddFriendRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealAddFriendRsp, target_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealAddFriendRsp, deal_add_friend_result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerSocialDetailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerSocialDetailReq, uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerSocialDetailRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerSocialDetailRsp, detail_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerSocialDetailRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteFriendReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteFriendReq, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteFriendRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteFriendRsp, target_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteFriendRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerBirthdayReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerBirthdayReq, birthday_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerBirthdayRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerBirthdayRsp, birthday_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerBirthdayRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerSignatureReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerSignatureReq, signature_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerSignatureRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerSignatureRsp, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerSignatureRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerHeadImageReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerHeadImageReq, avatar_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerHeadImageRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerHeadImageRsp, profile_picture_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerHeadImageRsp, avatar_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerHeadImageRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePS4FriendListNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePS4FriendListNotify, psn_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteFriendNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteFriendNotify, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFriendNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFriendNotify, target_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFriendNotify, target_friend_brief_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskAddFriendNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskAddFriendNotify, target_friend_brief_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskAddFriendNotify, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetNameCardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetNameCardReq, name_card_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetNameCardRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetNameCardRsp, name_card_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetNameCardRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAllUnlockNameCardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAllUnlockNameCardRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAllUnlockNameCardRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAllUnlockNameCardRsp, name_card_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBlacklistReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBlacklistReq, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBlacklistRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBlacklistRsp, target_friend_brief_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBlacklistRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveBlacklistReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveBlacklistReq, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveBlacklistRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveBlacklistRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveBlacklistRsp, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockNameCardNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockNameCardNotify, name_card_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRecentMpPlayerListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRecentMpPlayerListRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRecentMpPlayerListRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRecentMpPlayerListRsp, recent_mp_player_brief_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDataNotify, is_have_first_share_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeFirstShareRewardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeFirstShareRewardRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeFirstShareRewardRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePS4BlockListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePS4BlockListReq, psn_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePS4BlockListRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePS4BlockListRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerBlacklistReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerBlacklistRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerBlacklistRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerBlacklistRsp, blacklist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerReportReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerReportReq, reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerReportReq, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerReportReq, target_home_module_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerReportReq, target_home_module_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerReportReq, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerReportRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerReportRsp, cd_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerReportRsp, target_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerReportRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFriendRemarkNameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFriendRemarkNameReq, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFriendRemarkNameReq, remark_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFriendRemarkNameRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFriendRemarkNameRsp, remark_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFriendRemarkNameRsp, is_clear_remark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFriendRemarkNameRsp, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFriendRemarkNameRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePlayerShowAvatarListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePlayerShowAvatarListReq, is_show_avatar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePlayerShowAvatarListReq, show_avatar_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePlayerShowAvatarListRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePlayerShowAvatarListRsp, show_avatar_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePlayerShowAvatarListRsp, is_show_avatar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePlayerShowAvatarListRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFriendShowAvatarInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFriendShowAvatarInfoReq, uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFriendShowAvatarInfoRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFriendShowAvatarInfoRsp, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFriendShowAvatarInfoRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFriendShowAvatarInfoRsp, show_avatar_info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePlayerShowNameCardListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePlayerShowNameCardListReq, show_name_card_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePlayerShowNameCardListRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePlayerShowNameCardListRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePlayerShowNameCardListRsp, show_name_card_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFriendShowNameCardInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFriendShowNameCardInfoReq, uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFriendShowNameCardInfoRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFriendShowNameCardInfoRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFriendShowNameCardInfoRsp, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFriendShowNameCardInfoRsp, show_name_card_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForceAddPlayerFriendReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForceAddPlayerFriendReq, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForceAddPlayerFriendRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForceAddPlayerFriendRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForceAddPlayerFriendRsp, target_friend_brief_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForceAddPlayerFriendRsp, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilePictureChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilePictureChangeNotify, profile_picture_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSNFriendListNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSNFriendListNotify, psn_friend_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSNBlackListNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSNBlackListNotify, psn_blacklist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerAskFriendListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerAskFriendListRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerAskFriendListRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerAskFriendListRsp, ask_friend_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetChatEmojiCollectionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetChatEmojiCollectionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetChatEmojiCollectionRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetChatEmojiCollectionRsp, chat_emoji_collection_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetChatEmojiCollectionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetChatEmojiCollectionReq, chat_emoji_collection_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetChatEmojiCollectionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetChatEmojiCollectionRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePS4FriendListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePS4FriendListReq, psn_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePS4FriendListRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePS4FriendListRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePS4FriendListRsp, psn_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendInfoChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendInfoChangeNotify, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendInfoChangeNotify, online_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerSignatureAuditDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerSignatureAuditDataNotify, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerSignatureNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerSignatureNotify, signature_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignatureAuditConfigNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignatureAuditConfigNotify, is_open_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignatureAuditConfigNotify, submit_limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadSignatureAuditReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadSignatureAuditRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadSignatureAuditRsp, retcode_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(SocialShowAvatarInfo)},
  { 8, -1, sizeof(SocialDetail)},
  { 39, -1, sizeof(FriendBrief)},
  { 66, -1, sizeof(ChatEmojiCollectionData)},
  { 72, -1, sizeof(GetPlayerFriendListReq)},
  { 77, -1, sizeof(GetPlayerFriendListRsp)},
  { 85, -1, sizeof(AskAddFriendReq)},
  { 91, -1, sizeof(AskAddFriendRsp)},
  { 99, -1, sizeof(DealAddFriendReq)},
  { 106, -1, sizeof(DealAddFriendRsp)},
  { 114, -1, sizeof(GetPlayerSocialDetailReq)},
  { 120, -1, sizeof(GetPlayerSocialDetailRsp)},
  { 127, -1, sizeof(DeleteFriendReq)},
  { 133, -1, sizeof(DeleteFriendRsp)},
  { 140, -1, sizeof(SetPlayerBirthdayReq)},
  { 146, -1, sizeof(SetPlayerBirthdayRsp)},
  { 153, -1, sizeof(SetPlayerSignatureReq)},
  { 159, -1, sizeof(SetPlayerSignatureRsp)},
  { 166, -1, sizeof(SetPlayerHeadImageReq)},
  { 172, -1, sizeof(SetPlayerHeadImageRsp)},
  { 180, -1, sizeof(UpdatePS4FriendListNotify)},
  { 186, -1, sizeof(DeleteFriendNotify)},
  { 192, -1, sizeof(AddFriendNotify)},
  { 199, -1, sizeof(AskAddFriendNotify)},
  { 206, -1, sizeof(SetNameCardReq)},
  { 212, -1, sizeof(SetNameCardRsp)},
  { 219, -1, sizeof(GetAllUnlockNameCardReq)},
  { 224, -1, sizeof(GetAllUnlockNameCardRsp)},
  { 231, -1, sizeof(AddBlacklistReq)},
  { 237, -1, sizeof(AddBlacklistRsp)},
  { 244, -1, sizeof(RemoveBlacklistReq)},
  { 250, -1, sizeof(RemoveBlacklistRsp)},
  { 257, -1, sizeof(UnlockNameCardNotify)},
  { 263, -1, sizeof(GetRecentMpPlayerListReq)},
  { 268, -1, sizeof(GetRecentMpPlayerListRsp)},
  { 275, -1, sizeof(SocialDataNotify)},
  { 281, -1, sizeof(TakeFirstShareRewardReq)},
  { 286, -1, sizeof(TakeFirstShareRewardRsp)},
  { 292, -1, sizeof(UpdatePS4BlockListReq)},
  { 298, -1, sizeof(UpdatePS4BlockListRsp)},
  { 304, -1, sizeof(GetPlayerBlacklistReq)},
  { 309, -1, sizeof(GetPlayerBlacklistRsp)},
  { 316, -1, sizeof(PlayerReportReq)},
  { 326, -1, sizeof(PlayerReportRsp)},
  { 334, -1, sizeof(SetFriendRemarkNameReq)},
  { 341, -1, sizeof(SetFriendRemarkNameRsp)},
  { 350, -1, sizeof(UpdatePlayerShowAvatarListReq)},
  { 357, -1, sizeof(UpdatePlayerShowAvatarListRsp)},
  { 365, -1, sizeof(GetFriendShowAvatarInfoReq)},
  { 371, -1, sizeof(GetFriendShowAvatarInfoRsp)},
  { 379, -1, sizeof(UpdatePlayerShowNameCardListReq)},
  { 385, -1, sizeof(UpdatePlayerShowNameCardListRsp)},
  { 392, -1, sizeof(GetFriendShowNameCardInfoReq)},
  { 398, -1, sizeof(GetFriendShowNameCardInfoRsp)},
  { 406, -1, sizeof(ForceAddPlayerFriendReq)},
  { 412, -1, sizeof(ForceAddPlayerFriendRsp)},
  { 420, -1, sizeof(ProfilePictureChangeNotify)},
  { 426, -1, sizeof(PSNFriendListNotify)},
  { 432, -1, sizeof(PSNBlackListNotify)},
  { 438, -1, sizeof(GetPlayerAskFriendListReq)},
  { 443, -1, sizeof(GetPlayerAskFriendListRsp)},
  { 450, -1, sizeof(GetChatEmojiCollectionReq)},
  { 455, -1, sizeof(GetChatEmojiCollectionRsp)},
  { 462, -1, sizeof(SetChatEmojiCollectionReq)},
  { 468, -1, sizeof(SetChatEmojiCollectionRsp)},
  { 474, -1, sizeof(UpdatePS4FriendListReq)},
  { 480, -1, sizeof(UpdatePS4FriendListRsp)},
  { 487, -1, sizeof(FriendInfoChangeNotify)},
  { 494, -1, sizeof(PlayerSignatureAuditDataNotify)},
  { 500, -1, sizeof(PlayerSignatureNotify)},
  { 506, -1, sizeof(SignatureAuditConfigNotify)},
  { 513, -1, sizeof(ReadSignatureAuditReq)},
  { 518, -1, sizeof(ReadSignatureAuditRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SocialShowAvatarInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SocialDetail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FriendBrief_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatEmojiCollectionData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetPlayerFriendListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetPlayerFriendListRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AskAddFriendReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AskAddFriendRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DealAddFriendReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DealAddFriendRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetPlayerSocialDetailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetPlayerSocialDetailRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteFriendReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteFriendRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPlayerBirthdayReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPlayerBirthdayRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPlayerSignatureReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPlayerSignatureRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPlayerHeadImageReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPlayerHeadImageRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdatePS4FriendListNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteFriendNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddFriendNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AskAddFriendNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetNameCardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetNameCardRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAllUnlockNameCardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAllUnlockNameCardRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddBlacklistReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddBlacklistRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RemoveBlacklistReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RemoveBlacklistRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnlockNameCardNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetRecentMpPlayerListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetRecentMpPlayerListRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SocialDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TakeFirstShareRewardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TakeFirstShareRewardRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdatePS4BlockListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdatePS4BlockListRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetPlayerBlacklistReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetPlayerBlacklistRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerReportReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerReportRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetFriendRemarkNameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetFriendRemarkNameRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdatePlayerShowAvatarListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdatePlayerShowAvatarListRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetFriendShowAvatarInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetFriendShowAvatarInfoRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdatePlayerShowNameCardListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdatePlayerShowNameCardListRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetFriendShowNameCardInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetFriendShowNameCardInfoRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ForceAddPlayerFriendReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ForceAddPlayerFriendRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProfilePictureChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PSNFriendListNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PSNBlackListNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetPlayerAskFriendListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetPlayerAskFriendListRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetChatEmojiCollectionReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetChatEmojiCollectionRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetChatEmojiCollectionReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetChatEmojiCollectionRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdatePS4FriendListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdatePS4FriendListRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FriendInfoChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerSignatureAuditDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerSignatureNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SignatureAuditConfigNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReadSignatureAuditReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReadSignatureAuditRsp_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_social.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 73);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _SocialShowAvatarInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SocialShowAvatarInfo_default_instance_);_SocialDetail_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SocialDetail_default_instance_);_FriendBrief_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FriendBrief_default_instance_);_ChatEmojiCollectionData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChatEmojiCollectionData_default_instance_);_GetPlayerFriendListReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetPlayerFriendListReq_default_instance_);_GetPlayerFriendListRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetPlayerFriendListRsp_default_instance_);_AskAddFriendReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AskAddFriendReq_default_instance_);_AskAddFriendRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AskAddFriendRsp_default_instance_);_DealAddFriendReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DealAddFriendReq_default_instance_);_DealAddFriendRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DealAddFriendRsp_default_instance_);_GetPlayerSocialDetailReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetPlayerSocialDetailReq_default_instance_);_GetPlayerSocialDetailRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetPlayerSocialDetailRsp_default_instance_);_DeleteFriendReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DeleteFriendReq_default_instance_);_DeleteFriendRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DeleteFriendRsp_default_instance_);_SetPlayerBirthdayReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPlayerBirthdayReq_default_instance_);_SetPlayerBirthdayRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPlayerBirthdayRsp_default_instance_);_SetPlayerSignatureReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPlayerSignatureReq_default_instance_);_SetPlayerSignatureRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPlayerSignatureRsp_default_instance_);_SetPlayerHeadImageReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPlayerHeadImageReq_default_instance_);_SetPlayerHeadImageRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPlayerHeadImageRsp_default_instance_);_UpdatePS4FriendListNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UpdatePS4FriendListNotify_default_instance_);_DeleteFriendNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DeleteFriendNotify_default_instance_);_AddFriendNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddFriendNotify_default_instance_);_AskAddFriendNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AskAddFriendNotify_default_instance_);_SetNameCardReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetNameCardReq_default_instance_);_SetNameCardRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetNameCardRsp_default_instance_);_GetAllUnlockNameCardReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetAllUnlockNameCardReq_default_instance_);_GetAllUnlockNameCardRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetAllUnlockNameCardRsp_default_instance_);_AddBlacklistReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddBlacklistReq_default_instance_);_AddBlacklistRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddBlacklistRsp_default_instance_);_RemoveBlacklistReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RemoveBlacklistReq_default_instance_);_RemoveBlacklistRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RemoveBlacklistRsp_default_instance_);_UnlockNameCardNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UnlockNameCardNotify_default_instance_);_GetRecentMpPlayerListReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetRecentMpPlayerListReq_default_instance_);_GetRecentMpPlayerListRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetRecentMpPlayerListRsp_default_instance_);_SocialDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SocialDataNotify_default_instance_);_TakeFirstShareRewardReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TakeFirstShareRewardReq_default_instance_);_TakeFirstShareRewardRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TakeFirstShareRewardRsp_default_instance_);_UpdatePS4BlockListReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UpdatePS4BlockListReq_default_instance_);_UpdatePS4BlockListRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UpdatePS4BlockListRsp_default_instance_);_GetPlayerBlacklistReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetPlayerBlacklistReq_default_instance_);_GetPlayerBlacklistRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetPlayerBlacklistRsp_default_instance_);_PlayerReportReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerReportReq_default_instance_);_PlayerReportRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerReportRsp_default_instance_);_SetFriendRemarkNameReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetFriendRemarkNameReq_default_instance_);_SetFriendRemarkNameRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetFriendRemarkNameRsp_default_instance_);_UpdatePlayerShowAvatarListReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UpdatePlayerShowAvatarListReq_default_instance_);_UpdatePlayerShowAvatarListRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UpdatePlayerShowAvatarListRsp_default_instance_);_GetFriendShowAvatarInfoReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetFriendShowAvatarInfoReq_default_instance_);_GetFriendShowAvatarInfoRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetFriendShowAvatarInfoRsp_default_instance_);_UpdatePlayerShowNameCardListReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UpdatePlayerShowNameCardListReq_default_instance_);_UpdatePlayerShowNameCardListRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UpdatePlayerShowNameCardListRsp_default_instance_);_GetFriendShowNameCardInfoReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetFriendShowNameCardInfoReq_default_instance_);_GetFriendShowNameCardInfoRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetFriendShowNameCardInfoRsp_default_instance_);_ForceAddPlayerFriendReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ForceAddPlayerFriendReq_default_instance_);_ForceAddPlayerFriendRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ForceAddPlayerFriendRsp_default_instance_);_ProfilePictureChangeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ProfilePictureChangeNotify_default_instance_);_PSNFriendListNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PSNFriendListNotify_default_instance_);_PSNBlackListNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PSNBlackListNotify_default_instance_);_GetPlayerAskFriendListReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetPlayerAskFriendListReq_default_instance_);_GetPlayerAskFriendListRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetPlayerAskFriendListRsp_default_instance_);_GetChatEmojiCollectionReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetChatEmojiCollectionReq_default_instance_);_GetChatEmojiCollectionRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetChatEmojiCollectionRsp_default_instance_);_SetChatEmojiCollectionReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetChatEmojiCollectionReq_default_instance_);_SetChatEmojiCollectionRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetChatEmojiCollectionRsp_default_instance_);_UpdatePS4FriendListReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UpdatePS4FriendListReq_default_instance_);_UpdatePS4FriendListRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UpdatePS4FriendListRsp_default_instance_);_FriendInfoChangeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FriendInfoChangeNotify_default_instance_);_PlayerSignatureAuditDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerSignatureAuditDataNotify_default_instance_);_PlayerSignatureNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerSignatureNotify_default_instance_);_SignatureAuditConfigNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SignatureAuditConfigNotify_default_instance_);_ReadSignatureAuditReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ReadSignatureAuditReq_default_instance_);_ReadSignatureAuditRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ReadSignatureAuditRsp_default_instance_);_SocialDetail_default_instance_._instance.get_mutable()->birthday_ = const_cast< ::proto::Birthday*>(
      ::proto::Birthday::internal_default_instance());
  _SocialDetail_default_instance_._instance.get_mutable()->profile_picture_ = const_cast< ::proto::ProfilePicture*>(
      ::proto::ProfilePicture::internal_default_instance());
  _FriendBrief_default_instance_._instance.get_mutable()->profile_picture_ = const_cast< ::proto::ProfilePicture*>(
      ::proto::ProfilePicture::internal_default_instance());
  _GetPlayerSocialDetailRsp_default_instance_._instance.get_mutable()->detail_data_ = const_cast< ::proto::SocialDetail*>(
      ::proto::SocialDetail::internal_default_instance());
  _SetPlayerBirthdayReq_default_instance_._instance.get_mutable()->birthday_ = const_cast< ::proto::Birthday*>(
      ::proto::Birthday::internal_default_instance());
  _SetPlayerBirthdayRsp_default_instance_._instance.get_mutable()->birthday_ = const_cast< ::proto::Birthday*>(
      ::proto::Birthday::internal_default_instance());
  _SetPlayerHeadImageRsp_default_instance_._instance.get_mutable()->profile_picture_ = const_cast< ::proto::ProfilePicture*>(
      ::proto::ProfilePicture::internal_default_instance());
  _AddFriendNotify_default_instance_._instance.get_mutable()->target_friend_brief_ = const_cast< ::proto::FriendBrief*>(
      ::proto::FriendBrief::internal_default_instance());
  _AskAddFriendNotify_default_instance_._instance.get_mutable()->target_friend_brief_ = const_cast< ::proto::FriendBrief*>(
      ::proto::FriendBrief::internal_default_instance());
  _AddBlacklistRsp_default_instance_._instance.get_mutable()->target_friend_brief_ = const_cast< ::proto::FriendBrief*>(
      ::proto::FriendBrief::internal_default_instance());
  _ForceAddPlayerFriendRsp_default_instance_._instance.get_mutable()->target_friend_brief_ = const_cast< ::proto::FriendBrief*>(
      ::proto::FriendBrief::internal_default_instance());
  _ProfilePictureChangeNotify_default_instance_._instance.get_mutable()->profile_picture_ = const_cast< ::proto::ProfilePicture*>(
      ::proto::ProfilePicture::internal_default_instance());
  _GetChatEmojiCollectionRsp_default_instance_._instance.get_mutable()->chat_emoji_collection_data_ = const_cast< ::proto::ChatEmojiCollectionData*>(
      ::proto::ChatEmojiCollectionData::internal_default_instance());
  _SetChatEmojiCollectionReq_default_instance_._instance.get_mutable()->chat_emoji_collection_data_ = const_cast< ::proto::ChatEmojiCollectionData*>(
      ::proto::ChatEmojiCollectionData::internal_default_instance());
  _PlayerSignatureAuditDataNotify_default_instance_._instance.get_mutable()->info_ = const_cast< ::proto::ContentAuditInfo*>(
      ::proto::ContentAuditInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024cmd/cmd_social.proto\022\005proto\032\014define.pr"
      "oto\"L\n\024SocialShowAvatarInfo\022\021\n\tavatar_id"
      "\030\001 \001(\r\022\r\n\005level\030\002 \001(\r\022\022\n\ncostume_id\030\003 \001("
      "\r\"\337\005\n\014SocialDetail\022\013\n\003uid\030\001 \001(\r\022\020\n\010nickn"
      "ame\030\002 \001(\t\022\r\n\005level\030\003 \001(\r\022\021\n\tavatar_id\030\004 "
      "\001(\r\022\021\n\tsignature\030\005 \001(\t\022!\n\010birthday\030\006 \001(\013"
      "2\017.proto.Birthday\022\023\n\013world_level\030\007 \001(\r\022\025"
      "\n\rreserved_list\030\010 \003(\r\022.\n\014online_state\030\t "
      "\001(\0162\030.proto.FriendOnlineState\022\r\n\005param\030\n"
      " \001(\r\022\021\n\tis_friend\030\013 \001(\010\022\034\n\024is_mp_mode_av"
      "ailable\030\014 \001(\010\022\021\n\tonline_id\030\r \001(\t\022\024\n\014name"
      "_card_id\030\016 \001(\r\022\027\n\017is_in_blacklist\030\017 \001(\010\022"
      "\032\n\022is_chat_no_disturb\030\020 \001(\010\022\023\n\013remark_na"
      "me\030\021 \001(\t\022\036\n\026finish_achievement_num\030\022 \001(\r"
      "\022\031\n\021tower_floor_index\030\023 \001(\r\022\031\n\021tower_lev"
      "el_index\030\024 \001(\r\022\026\n\016is_show_avatar\030\025 \001(\010\022:"
      "\n\025show_avatar_info_list\030\026 \003(\0132\033.proto.So"
      "cialShowAvatarInfo\022\036\n\026show_name_card_id_"
      "list\030\027 \003(\r\022>\n\030friend_enter_home_option\030\030"
      " \001(\0162\034.proto.FriendEnterHomeOption\022.\n\017pr"
      "ofile_picture\030\031 \001(\0132\025.proto.ProfilePictu"
      "re\022\017\n\007ip_code\030\032 \001(\t\"\374\004\n\013FriendBrief\022\013\n\003u"
      "id\030\001 \001(\r\022\020\n\010nickname\030\002 \001(\t\022\r\n\005level\030\003 \001("
      "\r\022\021\n\tavatar_id\030\004 \001(\r\022\023\n\013world_level\030\005 \001("
      "\r\022\021\n\tsignature\030\006 \001(\t\022.\n\014online_state\030\007 \001"
      "(\0162\030.proto.FriendOnlineState\022\r\n\005param\030\010 "
      "\001(\r\022\034\n\024is_mp_mode_available\030\n \001(\010\022\021\n\tonl"
      "ine_id\030\013 \001(\t\022\030\n\020last_active_time\030\014 \001(\r\022\024"
      "\n\014name_card_id\030\r \001(\r\022\025\n\rmp_player_num\030\016 "
      "\001(\r\022\032\n\022is_chat_no_disturb\030\017 \001(\010\022\025\n\rchat_"
      "sequence\030\020 \001(\r\022\023\n\013remark_name\030\021 \001(\t\022:\n\025s"
      "how_avatar_info_list\030\026 \003(\0132\033.proto.Socia"
      "lShowAvatarInfo\022>\n\030friend_enter_home_opt"
      "ion\030\027 \001(\0162\034.proto.FriendEnterHomeOption\022"
      ".\n\017profile_picture\030\030 \001(\0132\025.proto.Profile"
      "Picture\022\026\n\016is_game_source\030\031 \001(\010\022\025\n\ris_ps"
      "n_source\030\032 \001(\010\022*\n\rplatform_type\030\033 \001(\0162\023."
      "proto.PlatformType\"0\n\027ChatEmojiCollectio"
      "nData\022\025\n\remoji_id_list\030\001 \003(\r\"\030\n\026GetPlaye"
      "rFriendListReq\"\177\n\026GetPlayerFriendListRsp"
      "\022\017\n\007retcode\030\t \001(\005\022+\n\017ask_friend_list\030\010 \003"
      "(\0132\022.proto.FriendBrief\022\'\n\013friend_list\030\016 "
      "\003(\0132\022.proto.FriendBrief\"%\n\017AskAddFriendR"
      "eq\022\022\n\ntarget_uid\030\007 \001(\r\"E\n\017AskAddFriendRs"
      "p\022\r\n\005param\030\010 \001(\r\022\017\n\007retcode\030\007 \001(\005\022\022\n\ntar"
      "get_uid\030\004 \001(\r\"f\n\020DealAddFriendReq\022>\n\026dea"
      "l_add_friend_result\030\014 \001(\0162\036.proto.DealAd"
      "dFriendResultType\022\022\n\ntarget_uid\030\n \001(\r\"w\n"
      "\020DealAddFriendRsp\022\017\n\007retcode\030\001 \001(\005\022\022\n\nta"
      "rget_uid\030\005 \001(\r\022>\n\026deal_add_friend_result"
      "\030\006 \001(\0162\036.proto.DealAddFriendResultType\"\'"
      "\n\030GetPlayerSocialDetailReq\022\013\n\003uid\030\t \001(\r\""
      "U\n\030GetPlayerSocialDetailRsp\022(\n\013detail_da"
      "ta\030\014 \001(\0132\023.proto.SocialDetail\022\017\n\007retcode"
      "\030\001 \001(\005\"%\n\017DeleteFriendReq\022\022\n\ntarget_uid\030"
      "\r \001(\r\"6\n\017DeleteFriendRsp\022\022\n\ntarget_uid\030\016"
      " \001(\r\022\017\n\007retcode\030\005 \001(\005\"9\n\024SetPlayerBirthd"
      "ayReq\022!\n\010birthday\030\t \001(\0132\017.proto.Birthday"
      "\"J\n\024SetPlayerBirthdayRsp\022!\n\010birthday\030\002 \001"
      "(\0132\017.proto.Birthday\022\017\n\007retcode\030\005 \001(\005\"*\n\025"
      "SetPlayerSignatureReq\022\021\n\tsignature\030\003 \001(\t"
      "\";\n\025SetPlayerSignatureRsp\022\021\n\tsignature\030\001"
      " \001(\t\022\017\n\007retcode\030\004 \001(\005\"*\n\025SetPlayerHeadIm"
      "ageReq\022\021\n\tavatar_id\030\007 \001(\r\"k\n\025SetPlayerHe"
      "adImageRsp\022.\n\017profile_picture\030\006 \001(\0132\025.pr"
      "oto.ProfilePicture\022\021\n\tavatar_id\030\005 \001(\r\022\017\n"
      "\007retcode\030\001 \001(\005\"0\n\031UpdatePS4FriendListNot"
      "ify\022\023\n\013psn_id_list\030\017 \003(\t\"(\n\022DeleteFriend"
      "Notify\022\022\n\ntarget_uid\030\014 \001(\r\"V\n\017AddFriendN"
      "otify\022\022\n\ntarget_uid\030\013 \001(\r\022/\n\023target_frie"
      "nd_brief\030\n \001(\0132\022.proto.FriendBrief\"Y\n\022As"
      "kAddFriendNotify\022/\n\023target_friend_brief\030"
      "\017 \001(\0132\022.proto.FriendBrief\022\022\n\ntarget_uid\030"
      "\t \001(\r\"&\n\016SetNameCardReq\022\024\n\014name_card_id\030"
      "\n \001(\r\"7\n\016SetNameCardRsp\022\024\n\014name_card_id\030"
      "\013 \001(\r\022\017\n\007retcode\030\014 \001(\005\"\031\n\027GetAllUnlockNa"
      "meCardReq\"B\n\027GetAllUnlockNameCardRsp\022\017\n\007"
      "retcode\030\004 \001(\005\022\026\n\016name_card_list\030\016 \003(\r\"%\n"
      "\017AddBlacklistReq\022\022\n\ntarget_uid\030\002 \001(\r\"S\n\017"
      "AddBlacklistRsp\022/\n\023target_friend_brief\030\r"
      " \001(\0132\022.proto.FriendBrief\022\017\n\007retcode\030\007 \001("
      "\005\"(\n\022RemoveBlacklistReq\022\022\n\ntarget_uid\030\r "
      "\001(\r\"9\n\022RemoveBlacklistRsp\022\017\n\007retcode\030\014 \001"
      "(\005\022\022\n\ntarget_uid\030\007 \001(\r\",\n\024UnlockNameCard"
      "Notify\022\024\n\014name_card_id\030\010 \001(\r\"\032\n\030GetRecen"
      "tMpPlayerListReq\"d\n\030GetRecentMpPlayerLis"
      "tRsp\022\017\n\007retcode\030\r \001(\005\0227\n\033recent_mp_playe"
      "r_brief_list\030\016 \003(\0132\022.proto.FriendBrief\"/"
      "\n\020SocialDataNotify\022\033\n\023is_have_first_shar"
      "e\030\013 \001(\010\"\031\n\027TakeFirstShareRewardReq\"*\n\027Ta"
      "keFirstShareRewardRsp\022\017\n\007retcode\030\017 \001(\005\","
      "\n\025UpdatePS4BlockListReq\022\023\n\013psn_id_list\030\n"
      " \003(\t\"(\n\025UpdatePS4BlockListRsp\022\017\n\007retcode"
      "\030\007 \001(\005\"\027\n\025GetPlayerBlacklistReq\"O\n\025GetPl"
      "ayerBlacklistRsp\022\017\n\007retcode\030\002 \001(\005\022%\n\tbla"
      "cklist\030\003 \003(\0132\022.proto.FriendBrief\"\237\001\n\017Pla"
      "yerReportReq\022\'\n\006reason\030\014 \001(\0162\027.proto.Rep"
      "ortReasonType\022\017\n\007content\030\010 \001(\t\022\035\n\025target"
      "_home_module_id\030\005 \001(\r\022\037\n\027target_home_mod"
      "ule_name\030\006 \001(\t\022\022\n\ntarget_uid\030\016 \001(\r\"G\n\017Pl"
      "ayerReportRsp\022\017\n\007cd_time\030\013 \001(\r\022\022\n\ntarget"
      "_uid\030\006 \001(\r\022\017\n\007retcode\030\014 \001(\005\":\n\026SetFriend"
      "RemarkNameReq\022\013\n\003uid\030\n \001(\r\022\023\n\013remark_nam"
      "e\030\010 \001(\t\"d\n\026SetFriendRemarkNameRsp\022\023\n\013rem"
      "ark_name\030\r \001(\t\022\027\n\017is_clear_remark\030\003 \001(\010\022"
      "\013\n\003uid\030\n \001(\r\022\017\n\007retcode\030\001 \001(\005\"T\n\035UpdateP"
      "layerShowAvatarListReq\022\026\n\016is_show_avatar"
      "\030\017 \001(\010\022\033\n\023show_avatar_id_list\030\r \003(\r\"e\n\035U"
      "pdatePlayerShowAvatarListRsp\022\033\n\023show_ava"
      "tar_id_list\030\001 \003(\r\022\026\n\016is_show_avatar\030\003 \001("
      "\010\022\017\n\007retcode\030\n \001(\005\")\n\032GetFriendShowAvata"
      "rInfoReq\022\013\n\003uid\030\017 \001(\r\"p\n\032GetFriendShowAv"
      "atarInfoRsp\022\013\n\003uid\030\006 \001(\r\022\017\n\007retcode\030\003 \001("
      "\005\0224\n\025show_avatar_info_list\030\t \003(\0132\025.proto"
      ".ShowAvatarInfo\"A\n\037UpdatePlayerShowNameC"
      "ardListReq\022\036\n\026show_name_card_id_list\030\017 \003"
      "(\r\"R\n\037UpdatePlayerShowNameCardListRsp\022\017\n"
      "\007retcode\030\r \001(\005\022\036\n\026show_name_card_id_list"
      "\030\014 \003(\r\"+\n\034GetFriendShowNameCardInfoReq\022\013"
      "\n\003uid\030\003 \001(\r\"\\\n\034GetFriendShowNameCardInfo"
      "Rsp\022\017\n\007retcode\030\017 \001(\005\022\013\n\003uid\030\007 \001(\r\022\036\n\026sho"
      "w_name_card_id_list\030\n \003(\r\"-\n\027ForceAddPla"
      "yerFriendReq\022\022\n\ntarget_uid\030\017 \001(\r\"o\n\027Forc"
      "eAddPlayerFriendRsp\022\017\n\007retcode\030\005 \001(\005\022/\n\023"
      "target_friend_brief\030\002 \001(\0132\022.proto.Friend"
      "Brief\022\022\n\ntarget_uid\030\t \001(\r\"L\n\032ProfilePict"
      "ureChangeNotify\022.\n\017profile_picture\030\014 \001(\013"
      "2\025.proto.ProfilePicture\"B\n\023PSNFriendList"
      "Notify\022+\n\017psn_friend_list\030\010 \003(\0132\022.proto."
      "FriendBrief\"\?\n\022PSNBlackListNotify\022)\n\rpsn"
      "_blacklist\030\013 \003(\0132\022.proto.FriendBrief\"\033\n\031"
      "GetPlayerAskFriendListReq\"Y\n\031GetPlayerAs"
      "kFriendListRsp\022\017\n\007retcode\030\r \001(\005\022+\n\017ask_f"
      "riend_list\030\017 \003(\0132\022.proto.FriendBrief\"\033\n\031"
      "GetChatEmojiCollectionReq\"p\n\031GetChatEmoj"
      "iCollectionRsp\022\017\n\007retcode\030\017 \001(\005\022B\n\032chat_"
      "emoji_collection_data\030\010 \001(\0132\036.proto.Chat"
      "EmojiCollectionData\"_\n\031SetChatEmojiColle"
      "ctionReq\022B\n\032chat_emoji_collection_data\030\014"
      " \001(\0132\036.proto.ChatEmojiCollectionData\",\n\031"
      "SetChatEmojiCollectionRsp\022\017\n\007retcode\030\014 \001"
      "(\005\"-\n\026UpdatePS4FriendListReq\022\023\n\013psn_id_l"
      "ist\030\004 \003(\t\">\n\026UpdatePS4FriendListRsp\022\017\n\007r"
      "etcode\030\005 \001(\005\022\023\n\013psn_id_list\030\002 \003(\t\"8\n\026Fri"
      "endInfoChangeNotify\022\013\n\003uid\030\001 \001(\r\022\021\n\tonli"
      "ne_id\030\t \001(\t\"G\n\036PlayerSignatureAuditDataN"
      "otify\022%\n\004info\030\016 \001(\0132\027.proto.ContentAudit"
      "Info\"*\n\025PlayerSignatureNotify\022\021\n\tsignatu"
      "re\030\014 \001(\t\"C\n\032SignatureAuditConfigNotify\022\017"
      "\n\007is_open\030\t \001(\010\022\024\n\014submit_limit\030\n \001(\r\"\027\n"
      "\025ReadSignatureAuditReq\"(\n\025ReadSignatureA"
      "uditRsp\022\017\n\007retcode\030\t \001(\005*>\n\021FriendOnline"
      "State\022\026\n\022FREIEND_DISCONNECT\020\000\022\021\n\rFRIEND_"
      "ONLINE\020\001*Q\n\027DealAddFriendResultType\022\032\n\026D"
      "EAL_ADD_FRIEND_REJECT\020\000\022\032\n\026DEAL_ADD_FRIE"
      "ND_ACCEPT\020\001B(Z&github.com/teyvat-helper/"
      "hk4e-proto/pbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 6261);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_social.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5fsocial_2eproto

const ::google::protobuf::EnumDescriptor* FriendOnlineState_descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_enum_descriptors[0];
}
bool FriendOnlineState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DealAddFriendResultType_descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_enum_descriptors[1];
}
bool DealAddFriendResultType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SocialShowAvatarInfo::kAvatarIdFieldNumber;
const int SocialShowAvatarInfo::kLevelFieldNumber;
const int SocialShowAvatarInfo::kCostumeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SocialShowAvatarInfo::SocialShowAvatarInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SocialShowAvatarInfo)
}
SocialShowAvatarInfo::SocialShowAvatarInfo(const SocialShowAvatarInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&avatar_id_, &from.avatar_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&costume_id_) -
    reinterpret_cast<char*>(&avatar_id_)) + sizeof(costume_id_));
  // @@protoc_insertion_point(copy_constructor:proto.SocialShowAvatarInfo)
}

void SocialShowAvatarInfo::SharedCtor() {
  ::memset(&avatar_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&costume_id_) -
      reinterpret_cast<char*>(&avatar_id_)) + sizeof(costume_id_));
  _cached_size_ = 0;
}

SocialShowAvatarInfo::~SocialShowAvatarInfo() {
  // @@protoc_insertion_point(destructor:proto.SocialShowAvatarInfo)
  SharedDtor();
}

void SocialShowAvatarInfo::SharedDtor() {
}

void SocialShowAvatarInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SocialShowAvatarInfo::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SocialShowAvatarInfo& SocialShowAvatarInfo::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SocialShowAvatarInfo* SocialShowAvatarInfo::New(::google::protobuf::Arena* arena) const {
  SocialShowAvatarInfo* n = new SocialShowAvatarInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SocialShowAvatarInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SocialShowAvatarInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&avatar_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&costume_id_) -
      reinterpret_cast<char*>(&avatar_id_)) + sizeof(costume_id_));
  _internal_metadata_.Clear();
}

bool SocialShowAvatarInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SocialShowAvatarInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 avatar_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 costume_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &costume_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SocialShowAvatarInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SocialShowAvatarInfo)
  return false;
#undef DO_
}

void SocialShowAvatarInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SocialShowAvatarInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->avatar_id(), output);
  }

  // uint32 level = 2;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  // uint32 costume_id = 3;
  if (this->costume_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->costume_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SocialShowAvatarInfo)
}

::google::protobuf::uint8* SocialShowAvatarInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SocialShowAvatarInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->avatar_id(), target);
  }

  // uint32 level = 2;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  // uint32 costume_id = 3;
  if (this->costume_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->costume_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SocialShowAvatarInfo)
  return target;
}

size_t SocialShowAvatarInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SocialShowAvatarInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_id());
  }

  // uint32 level = 2;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 costume_id = 3;
  if (this->costume_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->costume_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SocialShowAvatarInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SocialShowAvatarInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SocialShowAvatarInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SocialShowAvatarInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SocialShowAvatarInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SocialShowAvatarInfo)
    MergeFrom(*source);
  }
}

void SocialShowAvatarInfo::MergeFrom(const SocialShowAvatarInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SocialShowAvatarInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_id() != 0) {
    set_avatar_id(from.avatar_id());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.costume_id() != 0) {
    set_costume_id(from.costume_id());
  }
}

void SocialShowAvatarInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SocialShowAvatarInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SocialShowAvatarInfo::CopyFrom(const SocialShowAvatarInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SocialShowAvatarInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SocialShowAvatarInfo::IsInitialized() const {
  return true;
}

void SocialShowAvatarInfo::Swap(SocialShowAvatarInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SocialShowAvatarInfo::InternalSwap(SocialShowAvatarInfo* other) {
  using std::swap;
  swap(avatar_id_, other->avatar_id_);
  swap(level_, other->level_);
  swap(costume_id_, other->costume_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SocialShowAvatarInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SocialShowAvatarInfo

// uint32 avatar_id = 1;
void SocialShowAvatarInfo::clear_avatar_id() {
  avatar_id_ = 0u;
}
::google::protobuf::uint32 SocialShowAvatarInfo::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.SocialShowAvatarInfo.avatar_id)
  return avatar_id_;
}
void SocialShowAvatarInfo::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialShowAvatarInfo.avatar_id)
}

// uint32 level = 2;
void SocialShowAvatarInfo::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 SocialShowAvatarInfo::level() const {
  // @@protoc_insertion_point(field_get:proto.SocialShowAvatarInfo.level)
  return level_;
}
void SocialShowAvatarInfo::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialShowAvatarInfo.level)
}

// uint32 costume_id = 3;
void SocialShowAvatarInfo::clear_costume_id() {
  costume_id_ = 0u;
}
::google::protobuf::uint32 SocialShowAvatarInfo::costume_id() const {
  // @@protoc_insertion_point(field_get:proto.SocialShowAvatarInfo.costume_id)
  return costume_id_;
}
void SocialShowAvatarInfo::set_costume_id(::google::protobuf::uint32 value) {
  
  costume_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialShowAvatarInfo.costume_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SocialDetail::kUidFieldNumber;
const int SocialDetail::kNicknameFieldNumber;
const int SocialDetail::kLevelFieldNumber;
const int SocialDetail::kAvatarIdFieldNumber;
const int SocialDetail::kSignatureFieldNumber;
const int SocialDetail::kBirthdayFieldNumber;
const int SocialDetail::kWorldLevelFieldNumber;
const int SocialDetail::kReservedListFieldNumber;
const int SocialDetail::kOnlineStateFieldNumber;
const int SocialDetail::kParamFieldNumber;
const int SocialDetail::kIsFriendFieldNumber;
const int SocialDetail::kIsMpModeAvailableFieldNumber;
const int SocialDetail::kOnlineIdFieldNumber;
const int SocialDetail::kNameCardIdFieldNumber;
const int SocialDetail::kIsInBlacklistFieldNumber;
const int SocialDetail::kIsChatNoDisturbFieldNumber;
const int SocialDetail::kRemarkNameFieldNumber;
const int SocialDetail::kFinishAchievementNumFieldNumber;
const int SocialDetail::kTowerFloorIndexFieldNumber;
const int SocialDetail::kTowerLevelIndexFieldNumber;
const int SocialDetail::kIsShowAvatarFieldNumber;
const int SocialDetail::kShowAvatarInfoListFieldNumber;
const int SocialDetail::kShowNameCardIdListFieldNumber;
const int SocialDetail::kFriendEnterHomeOptionFieldNumber;
const int SocialDetail::kProfilePictureFieldNumber;
const int SocialDetail::kIpCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SocialDetail::SocialDetail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SocialDetail)
}
SocialDetail::SocialDetail(const SocialDetail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      reserved_list_(from.reserved_list_),
      show_avatar_info_list_(from.show_avatar_info_list_),
      show_name_card_id_list_(from.show_name_card_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  online_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.online_id().size() > 0) {
    online_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_id_);
  }
  remark_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remark_name().size() > 0) {
    remark_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_name_);
  }
  ip_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_code().size() > 0) {
    ip_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_code_);
  }
  if (from.has_birthday()) {
    birthday_ = new ::proto::Birthday(*from.birthday_);
  } else {
    birthday_ = NULL;
  }
  if (from.has_profile_picture()) {
    profile_picture_ = new ::proto::ProfilePicture(*from.profile_picture_);
  } else {
    profile_picture_ = NULL;
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&friend_enter_home_option_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(friend_enter_home_option_));
  // @@protoc_insertion_point(copy_constructor:proto.SocialDetail)
}

void SocialDetail::SharedCtor() {
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&birthday_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_enter_home_option_) -
      reinterpret_cast<char*>(&birthday_)) + sizeof(friend_enter_home_option_));
  _cached_size_ = 0;
}

SocialDetail::~SocialDetail() {
  // @@protoc_insertion_point(destructor:proto.SocialDetail)
  SharedDtor();
}

void SocialDetail::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete birthday_;
  if (this != internal_default_instance()) delete profile_picture_;
}

void SocialDetail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SocialDetail::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SocialDetail& SocialDetail::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SocialDetail* SocialDetail::New(::google::protobuf::Arena* arena) const {
  SocialDetail* n = new SocialDetail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SocialDetail::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SocialDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reserved_list_.Clear();
  show_avatar_info_list_.Clear();
  show_name_card_id_list_.Clear();
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && birthday_ != NULL) {
    delete birthday_;
  }
  birthday_ = NULL;
  if (GetArenaNoVirtual() == NULL && profile_picture_ != NULL) {
    delete profile_picture_;
  }
  profile_picture_ = NULL;
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_enter_home_option_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(friend_enter_home_option_));
  _internal_metadata_.Clear();
}

bool SocialDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SocialDetail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nickname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SocialDetail.nickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 avatar_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string signature = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signature().data(), static_cast<int>(this->signature().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SocialDetail.signature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Birthday birthday = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_birthday()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 world_level = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &world_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 reserved_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_reserved_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 66u, input, this->mutable_reserved_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FriendOnlineState online_state = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_online_state(static_cast< ::proto::FriendOnlineState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 param = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_friend = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_friend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_mp_mode_available = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_mp_mode_available_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string online_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_online_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->online_id().data(), static_cast<int>(this->online_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SocialDetail.online_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 name_card_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &name_card_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_in_blacklist = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_in_blacklist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_chat_no_disturb = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_chat_no_disturb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remark_name = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remark_name().data(), static_cast<int>(this->remark_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SocialDetail.remark_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 finish_achievement_num = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &finish_achievement_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tower_floor_index = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tower_floor_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tower_level_index = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tower_level_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_show_avatar = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_show_avatar_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.SocialShowAvatarInfo show_avatar_info_list = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_show_avatar_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 show_name_card_id_list = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_show_name_card_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 186u, input, this->mutable_show_name_card_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FriendEnterHomeOption friend_enter_home_option = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_friend_enter_home_option(static_cast< ::proto::FriendEnterHomeOption >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ProfilePicture profile_picture = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_profile_picture()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip_code = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_code().data(), static_cast<int>(this->ip_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SocialDetail.ip_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SocialDetail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SocialDetail)
  return false;
#undef DO_
}

void SocialDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SocialDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // string nickname = 2;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SocialDetail.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nickname(), output);
  }

  // uint32 level = 3;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  // uint32 avatar_id = 4;
  if (this->avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->avatar_id(), output);
  }

  // string signature = 5;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SocialDetail.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->signature(), output);
  }

  // .proto.Birthday birthday = 6;
  if (this->has_birthday()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->birthday_, output);
  }

  // uint32 world_level = 7;
  if (this->world_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->world_level(), output);
  }

  // repeated uint32 reserved_list = 8;
  if (this->reserved_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _reserved_list_cached_byte_size_));
  }
  for (int i = 0, n = this->reserved_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->reserved_list(i), output);
  }

  // .proto.FriendOnlineState online_state = 9;
  if (this->online_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->online_state(), output);
  }

  // uint32 param = 10;
  if (this->param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->param(), output);
  }

  // bool is_friend = 11;
  if (this->is_friend() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_friend(), output);
  }

  // bool is_mp_mode_available = 12;
  if (this->is_mp_mode_available() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->is_mp_mode_available(), output);
  }

  // string online_id = 13;
  if (this->online_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->online_id().data(), static_cast<int>(this->online_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SocialDetail.online_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->online_id(), output);
  }

  // uint32 name_card_id = 14;
  if (this->name_card_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->name_card_id(), output);
  }

  // bool is_in_blacklist = 15;
  if (this->is_in_blacklist() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->is_in_blacklist(), output);
  }

  // bool is_chat_no_disturb = 16;
  if (this->is_chat_no_disturb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->is_chat_no_disturb(), output);
  }

  // string remark_name = 17;
  if (this->remark_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark_name().data(), static_cast<int>(this->remark_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SocialDetail.remark_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->remark_name(), output);
  }

  // uint32 finish_achievement_num = 18;
  if (this->finish_achievement_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->finish_achievement_num(), output);
  }

  // uint32 tower_floor_index = 19;
  if (this->tower_floor_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->tower_floor_index(), output);
  }

  // uint32 tower_level_index = 20;
  if (this->tower_level_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->tower_level_index(), output);
  }

  // bool is_show_avatar = 21;
  if (this->is_show_avatar() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(21, this->is_show_avatar(), output);
  }

  // repeated .proto.SocialShowAvatarInfo show_avatar_info_list = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->show_avatar_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->show_avatar_info_list(static_cast<int>(i)), output);
  }

  // repeated uint32 show_name_card_id_list = 23;
  if (this->show_name_card_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(23, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _show_name_card_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->show_name_card_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->show_name_card_id_list(i), output);
  }

  // .proto.FriendEnterHomeOption friend_enter_home_option = 24;
  if (this->friend_enter_home_option() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      24, this->friend_enter_home_option(), output);
  }

  // .proto.ProfilePicture profile_picture = 25;
  if (this->has_profile_picture()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, *this->profile_picture_, output);
  }

  // string ip_code = 26;
  if (this->ip_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_code().data(), static_cast<int>(this->ip_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SocialDetail.ip_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      26, this->ip_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SocialDetail)
}

::google::protobuf::uint8* SocialDetail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SocialDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // string nickname = 2;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SocialDetail.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nickname(), target);
  }

  // uint32 level = 3;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  // uint32 avatar_id = 4;
  if (this->avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->avatar_id(), target);
  }

  // string signature = 5;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SocialDetail.signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->signature(), target);
  }

  // .proto.Birthday birthday = 6;
  if (this->has_birthday()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->birthday_, deterministic, target);
  }

  // uint32 world_level = 7;
  if (this->world_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->world_level(), target);
  }

  // repeated uint32 reserved_list = 8;
  if (this->reserved_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _reserved_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->reserved_list_, target);
  }

  // .proto.FriendOnlineState online_state = 9;
  if (this->online_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->online_state(), target);
  }

  // uint32 param = 10;
  if (this->param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->param(), target);
  }

  // bool is_friend = 11;
  if (this->is_friend() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_friend(), target);
  }

  // bool is_mp_mode_available = 12;
  if (this->is_mp_mode_available() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->is_mp_mode_available(), target);
  }

  // string online_id = 13;
  if (this->online_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->online_id().data(), static_cast<int>(this->online_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SocialDetail.online_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->online_id(), target);
  }

  // uint32 name_card_id = 14;
  if (this->name_card_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->name_card_id(), target);
  }

  // bool is_in_blacklist = 15;
  if (this->is_in_blacklist() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->is_in_blacklist(), target);
  }

  // bool is_chat_no_disturb = 16;
  if (this->is_chat_no_disturb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->is_chat_no_disturb(), target);
  }

  // string remark_name = 17;
  if (this->remark_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark_name().data(), static_cast<int>(this->remark_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SocialDetail.remark_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->remark_name(), target);
  }

  // uint32 finish_achievement_num = 18;
  if (this->finish_achievement_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->finish_achievement_num(), target);
  }

  // uint32 tower_floor_index = 19;
  if (this->tower_floor_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->tower_floor_index(), target);
  }

  // uint32 tower_level_index = 20;
  if (this->tower_level_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->tower_level_index(), target);
  }

  // bool is_show_avatar = 21;
  if (this->is_show_avatar() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(21, this->is_show_avatar(), target);
  }

  // repeated .proto.SocialShowAvatarInfo show_avatar_info_list = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->show_avatar_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        22, this->show_avatar_info_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 show_name_card_id_list = 23;
  if (this->show_name_card_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      23,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _show_name_card_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->show_name_card_id_list_, target);
  }

  // .proto.FriendEnterHomeOption friend_enter_home_option = 24;
  if (this->friend_enter_home_option() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      24, this->friend_enter_home_option(), target);
  }

  // .proto.ProfilePicture profile_picture = 25;
  if (this->has_profile_picture()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        25, *this->profile_picture_, deterministic, target);
  }

  // string ip_code = 26;
  if (this->ip_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_code().data(), static_cast<int>(this->ip_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SocialDetail.ip_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->ip_code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SocialDetail)
  return target;
}

size_t SocialDetail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SocialDetail)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 reserved_list = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->reserved_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _reserved_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.SocialShowAvatarInfo show_avatar_info_list = 22;
  {
    unsigned int count = static_cast<unsigned int>(this->show_avatar_info_list_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->show_avatar_info_list(static_cast<int>(i)));
    }
  }

  // repeated uint32 show_name_card_id_list = 23;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->show_name_card_id_list_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _show_name_card_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string nickname = 2;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  // string signature = 5;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature());
  }

  // string online_id = 13;
  if (this->online_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->online_id());
  }

  // string remark_name = 17;
  if (this->remark_name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remark_name());
  }

  // string ip_code = 26;
  if (this->ip_code().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_code());
  }

  // .proto.Birthday birthday = 6;
  if (this->has_birthday()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->birthday_);
  }

  // .proto.ProfilePicture profile_picture = 25;
  if (this->has_profile_picture()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->profile_picture_);
  }

  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 avatar_id = 4;
  if (this->avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_id());
  }

  // uint32 world_level = 7;
  if (this->world_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->world_level());
  }

  // .proto.FriendOnlineState online_state = 9;
  if (this->online_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->online_state());
  }

  // uint32 param = 10;
  if (this->param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->param());
  }

  // bool is_friend = 11;
  if (this->is_friend() != 0) {
    total_size += 1 + 1;
  }

  // bool is_mp_mode_available = 12;
  if (this->is_mp_mode_available() != 0) {
    total_size += 1 + 1;
  }

  // bool is_in_blacklist = 15;
  if (this->is_in_blacklist() != 0) {
    total_size += 1 + 1;
  }

  // bool is_chat_no_disturb = 16;
  if (this->is_chat_no_disturb() != 0) {
    total_size += 2 + 1;
  }

  // uint32 name_card_id = 14;
  if (this->name_card_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->name_card_id());
  }

  // uint32 finish_achievement_num = 18;
  if (this->finish_achievement_num() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->finish_achievement_num());
  }

  // uint32 tower_floor_index = 19;
  if (this->tower_floor_index() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tower_floor_index());
  }

  // uint32 tower_level_index = 20;
  if (this->tower_level_index() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tower_level_index());
  }

  // bool is_show_avatar = 21;
  if (this->is_show_avatar() != 0) {
    total_size += 2 + 1;
  }

  // .proto.FriendEnterHomeOption friend_enter_home_option = 24;
  if (this->friend_enter_home_option() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->friend_enter_home_option());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SocialDetail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SocialDetail)
  GOOGLE_DCHECK_NE(&from, this);
  const SocialDetail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SocialDetail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SocialDetail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SocialDetail)
    MergeFrom(*source);
  }
}

void SocialDetail::MergeFrom(const SocialDetail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SocialDetail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reserved_list_.MergeFrom(from.reserved_list_);
  show_avatar_info_list_.MergeFrom(from.show_avatar_info_list_);
  show_name_card_id_list_.MergeFrom(from.show_name_card_id_list_);
  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.online_id().size() > 0) {

    online_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_id_);
  }
  if (from.remark_name().size() > 0) {

    remark_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_name_);
  }
  if (from.ip_code().size() > 0) {

    ip_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_code_);
  }
  if (from.has_birthday()) {
    mutable_birthday()->::proto::Birthday::MergeFrom(from.birthday());
  }
  if (from.has_profile_picture()) {
    mutable_profile_picture()->::proto::ProfilePicture::MergeFrom(from.profile_picture());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.avatar_id() != 0) {
    set_avatar_id(from.avatar_id());
  }
  if (from.world_level() != 0) {
    set_world_level(from.world_level());
  }
  if (from.online_state() != 0) {
    set_online_state(from.online_state());
  }
  if (from.param() != 0) {
    set_param(from.param());
  }
  if (from.is_friend() != 0) {
    set_is_friend(from.is_friend());
  }
  if (from.is_mp_mode_available() != 0) {
    set_is_mp_mode_available(from.is_mp_mode_available());
  }
  if (from.is_in_blacklist() != 0) {
    set_is_in_blacklist(from.is_in_blacklist());
  }
  if (from.is_chat_no_disturb() != 0) {
    set_is_chat_no_disturb(from.is_chat_no_disturb());
  }
  if (from.name_card_id() != 0) {
    set_name_card_id(from.name_card_id());
  }
  if (from.finish_achievement_num() != 0) {
    set_finish_achievement_num(from.finish_achievement_num());
  }
  if (from.tower_floor_index() != 0) {
    set_tower_floor_index(from.tower_floor_index());
  }
  if (from.tower_level_index() != 0) {
    set_tower_level_index(from.tower_level_index());
  }
  if (from.is_show_avatar() != 0) {
    set_is_show_avatar(from.is_show_avatar());
  }
  if (from.friend_enter_home_option() != 0) {
    set_friend_enter_home_option(from.friend_enter_home_option());
  }
}

void SocialDetail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SocialDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SocialDetail::CopyFrom(const SocialDetail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SocialDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SocialDetail::IsInitialized() const {
  return true;
}

void SocialDetail::Swap(SocialDetail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SocialDetail::InternalSwap(SocialDetail* other) {
  using std::swap;
  reserved_list_.InternalSwap(&other->reserved_list_);
  show_avatar_info_list_.InternalSwap(&other->show_avatar_info_list_);
  show_name_card_id_list_.InternalSwap(&other->show_name_card_id_list_);
  nickname_.Swap(&other->nickname_);
  signature_.Swap(&other->signature_);
  online_id_.Swap(&other->online_id_);
  remark_name_.Swap(&other->remark_name_);
  ip_code_.Swap(&other->ip_code_);
  swap(birthday_, other->birthday_);
  swap(profile_picture_, other->profile_picture_);
  swap(uid_, other->uid_);
  swap(level_, other->level_);
  swap(avatar_id_, other->avatar_id_);
  swap(world_level_, other->world_level_);
  swap(online_state_, other->online_state_);
  swap(param_, other->param_);
  swap(is_friend_, other->is_friend_);
  swap(is_mp_mode_available_, other->is_mp_mode_available_);
  swap(is_in_blacklist_, other->is_in_blacklist_);
  swap(is_chat_no_disturb_, other->is_chat_no_disturb_);
  swap(name_card_id_, other->name_card_id_);
  swap(finish_achievement_num_, other->finish_achievement_num_);
  swap(tower_floor_index_, other->tower_floor_index_);
  swap(tower_level_index_, other->tower_level_index_);
  swap(is_show_avatar_, other->is_show_avatar_);
  swap(friend_enter_home_option_, other->friend_enter_home_option_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SocialDetail::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SocialDetail

// uint32 uid = 1;
void SocialDetail::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 SocialDetail::uid() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.uid)
  return uid_;
}
void SocialDetail::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.uid)
}

// string nickname = 2;
void SocialDetail::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SocialDetail::nickname() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.nickname)
  return nickname_.GetNoArena();
}
void SocialDetail::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SocialDetail.nickname)
}
#if LANG_CXX11
void SocialDetail::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SocialDetail.nickname)
}
#endif
void SocialDetail::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SocialDetail.nickname)
}
void SocialDetail::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SocialDetail.nickname)
}
::std::string* SocialDetail::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.SocialDetail.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SocialDetail::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.SocialDetail.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SocialDetail::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.SocialDetail.nickname)
}

// uint32 level = 3;
void SocialDetail::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 SocialDetail::level() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.level)
  return level_;
}
void SocialDetail::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.level)
}

// uint32 avatar_id = 4;
void SocialDetail::clear_avatar_id() {
  avatar_id_ = 0u;
}
::google::protobuf::uint32 SocialDetail::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.avatar_id)
  return avatar_id_;
}
void SocialDetail::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.avatar_id)
}

// string signature = 5;
void SocialDetail::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SocialDetail::signature() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.signature)
  return signature_.GetNoArena();
}
void SocialDetail::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SocialDetail.signature)
}
#if LANG_CXX11
void SocialDetail::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SocialDetail.signature)
}
#endif
void SocialDetail::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SocialDetail.signature)
}
void SocialDetail::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SocialDetail.signature)
}
::std::string* SocialDetail::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:proto.SocialDetail.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SocialDetail::release_signature() {
  // @@protoc_insertion_point(field_release:proto.SocialDetail.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SocialDetail::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:proto.SocialDetail.signature)
}

// .proto.Birthday birthday = 6;
bool SocialDetail::has_birthday() const {
  return this != internal_default_instance() && birthday_ != NULL;
}
void SocialDetail::clear_birthday() {
  if (GetArenaNoVirtual() == NULL && birthday_ != NULL) delete birthday_;
  birthday_ = NULL;
}
const ::proto::Birthday& SocialDetail::birthday() const {
  const ::proto::Birthday* p = birthday_;
  // @@protoc_insertion_point(field_get:proto.SocialDetail.birthday)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Birthday*>(
      &::proto::_Birthday_default_instance_);
}
::proto::Birthday* SocialDetail::mutable_birthday() {
  
  if (birthday_ == NULL) {
    birthday_ = new ::proto::Birthday;
  }
  // @@protoc_insertion_point(field_mutable:proto.SocialDetail.birthday)
  return birthday_;
}
::proto::Birthday* SocialDetail::release_birthday() {
  // @@protoc_insertion_point(field_release:proto.SocialDetail.birthday)
  
  ::proto::Birthday* temp = birthday_;
  birthday_ = NULL;
  return temp;
}
void SocialDetail::set_allocated_birthday(::proto::Birthday* birthday) {
  delete birthday_;
  birthday_ = birthday;
  if (birthday) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SocialDetail.birthday)
}

// uint32 world_level = 7;
void SocialDetail::clear_world_level() {
  world_level_ = 0u;
}
::google::protobuf::uint32 SocialDetail::world_level() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.world_level)
  return world_level_;
}
void SocialDetail::set_world_level(::google::protobuf::uint32 value) {
  
  world_level_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.world_level)
}

// repeated uint32 reserved_list = 8;
int SocialDetail::reserved_list_size() const {
  return reserved_list_.size();
}
void SocialDetail::clear_reserved_list() {
  reserved_list_.Clear();
}
::google::protobuf::uint32 SocialDetail::reserved_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.reserved_list)
  return reserved_list_.Get(index);
}
void SocialDetail::set_reserved_list(int index, ::google::protobuf::uint32 value) {
  reserved_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SocialDetail.reserved_list)
}
void SocialDetail::add_reserved_list(::google::protobuf::uint32 value) {
  reserved_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SocialDetail.reserved_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SocialDetail::reserved_list() const {
  // @@protoc_insertion_point(field_list:proto.SocialDetail.reserved_list)
  return reserved_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SocialDetail::mutable_reserved_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SocialDetail.reserved_list)
  return &reserved_list_;
}

// .proto.FriendOnlineState online_state = 9;
void SocialDetail::clear_online_state() {
  online_state_ = 0;
}
::proto::FriendOnlineState SocialDetail::online_state() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.online_state)
  return static_cast< ::proto::FriendOnlineState >(online_state_);
}
void SocialDetail::set_online_state(::proto::FriendOnlineState value) {
  
  online_state_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.online_state)
}

// uint32 param = 10;
void SocialDetail::clear_param() {
  param_ = 0u;
}
::google::protobuf::uint32 SocialDetail::param() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.param)
  return param_;
}
void SocialDetail::set_param(::google::protobuf::uint32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.param)
}

// bool is_friend = 11;
void SocialDetail::clear_is_friend() {
  is_friend_ = false;
}
bool SocialDetail::is_friend() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.is_friend)
  return is_friend_;
}
void SocialDetail::set_is_friend(bool value) {
  
  is_friend_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.is_friend)
}

// bool is_mp_mode_available = 12;
void SocialDetail::clear_is_mp_mode_available() {
  is_mp_mode_available_ = false;
}
bool SocialDetail::is_mp_mode_available() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.is_mp_mode_available)
  return is_mp_mode_available_;
}
void SocialDetail::set_is_mp_mode_available(bool value) {
  
  is_mp_mode_available_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.is_mp_mode_available)
}

// string online_id = 13;
void SocialDetail::clear_online_id() {
  online_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SocialDetail::online_id() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.online_id)
  return online_id_.GetNoArena();
}
void SocialDetail::set_online_id(const ::std::string& value) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SocialDetail.online_id)
}
#if LANG_CXX11
void SocialDetail::set_online_id(::std::string&& value) {
  
  online_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SocialDetail.online_id)
}
#endif
void SocialDetail::set_online_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SocialDetail.online_id)
}
void SocialDetail::set_online_id(const char* value, size_t size) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SocialDetail.online_id)
}
::std::string* SocialDetail::mutable_online_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.SocialDetail.online_id)
  return online_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SocialDetail::release_online_id() {
  // @@protoc_insertion_point(field_release:proto.SocialDetail.online_id)
  
  return online_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SocialDetail::set_allocated_online_id(::std::string* online_id) {
  if (online_id != NULL) {
    
  } else {
    
  }
  online_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), online_id);
  // @@protoc_insertion_point(field_set_allocated:proto.SocialDetail.online_id)
}

// uint32 name_card_id = 14;
void SocialDetail::clear_name_card_id() {
  name_card_id_ = 0u;
}
::google::protobuf::uint32 SocialDetail::name_card_id() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.name_card_id)
  return name_card_id_;
}
void SocialDetail::set_name_card_id(::google::protobuf::uint32 value) {
  
  name_card_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.name_card_id)
}

// bool is_in_blacklist = 15;
void SocialDetail::clear_is_in_blacklist() {
  is_in_blacklist_ = false;
}
bool SocialDetail::is_in_blacklist() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.is_in_blacklist)
  return is_in_blacklist_;
}
void SocialDetail::set_is_in_blacklist(bool value) {
  
  is_in_blacklist_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.is_in_blacklist)
}

// bool is_chat_no_disturb = 16;
void SocialDetail::clear_is_chat_no_disturb() {
  is_chat_no_disturb_ = false;
}
bool SocialDetail::is_chat_no_disturb() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.is_chat_no_disturb)
  return is_chat_no_disturb_;
}
void SocialDetail::set_is_chat_no_disturb(bool value) {
  
  is_chat_no_disturb_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.is_chat_no_disturb)
}

// string remark_name = 17;
void SocialDetail::clear_remark_name() {
  remark_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SocialDetail::remark_name() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.remark_name)
  return remark_name_.GetNoArena();
}
void SocialDetail::set_remark_name(const ::std::string& value) {
  
  remark_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SocialDetail.remark_name)
}
#if LANG_CXX11
void SocialDetail::set_remark_name(::std::string&& value) {
  
  remark_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SocialDetail.remark_name)
}
#endif
void SocialDetail::set_remark_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  remark_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SocialDetail.remark_name)
}
void SocialDetail::set_remark_name(const char* value, size_t size) {
  
  remark_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SocialDetail.remark_name)
}
::std::string* SocialDetail::mutable_remark_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.SocialDetail.remark_name)
  return remark_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SocialDetail::release_remark_name() {
  // @@protoc_insertion_point(field_release:proto.SocialDetail.remark_name)
  
  return remark_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SocialDetail::set_allocated_remark_name(::std::string* remark_name) {
  if (remark_name != NULL) {
    
  } else {
    
  }
  remark_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), remark_name);
  // @@protoc_insertion_point(field_set_allocated:proto.SocialDetail.remark_name)
}

// uint32 finish_achievement_num = 18;
void SocialDetail::clear_finish_achievement_num() {
  finish_achievement_num_ = 0u;
}
::google::protobuf::uint32 SocialDetail::finish_achievement_num() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.finish_achievement_num)
  return finish_achievement_num_;
}
void SocialDetail::set_finish_achievement_num(::google::protobuf::uint32 value) {
  
  finish_achievement_num_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.finish_achievement_num)
}

// uint32 tower_floor_index = 19;
void SocialDetail::clear_tower_floor_index() {
  tower_floor_index_ = 0u;
}
::google::protobuf::uint32 SocialDetail::tower_floor_index() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.tower_floor_index)
  return tower_floor_index_;
}
void SocialDetail::set_tower_floor_index(::google::protobuf::uint32 value) {
  
  tower_floor_index_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.tower_floor_index)
}

// uint32 tower_level_index = 20;
void SocialDetail::clear_tower_level_index() {
  tower_level_index_ = 0u;
}
::google::protobuf::uint32 SocialDetail::tower_level_index() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.tower_level_index)
  return tower_level_index_;
}
void SocialDetail::set_tower_level_index(::google::protobuf::uint32 value) {
  
  tower_level_index_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.tower_level_index)
}

// bool is_show_avatar = 21;
void SocialDetail::clear_is_show_avatar() {
  is_show_avatar_ = false;
}
bool SocialDetail::is_show_avatar() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.is_show_avatar)
  return is_show_avatar_;
}
void SocialDetail::set_is_show_avatar(bool value) {
  
  is_show_avatar_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.is_show_avatar)
}

// repeated .proto.SocialShowAvatarInfo show_avatar_info_list = 22;
int SocialDetail::show_avatar_info_list_size() const {
  return show_avatar_info_list_.size();
}
void SocialDetail::clear_show_avatar_info_list() {
  show_avatar_info_list_.Clear();
}
const ::proto::SocialShowAvatarInfo& SocialDetail::show_avatar_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.show_avatar_info_list)
  return show_avatar_info_list_.Get(index);
}
::proto::SocialShowAvatarInfo* SocialDetail::mutable_show_avatar_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SocialDetail.show_avatar_info_list)
  return show_avatar_info_list_.Mutable(index);
}
::proto::SocialShowAvatarInfo* SocialDetail::add_show_avatar_info_list() {
  // @@protoc_insertion_point(field_add:proto.SocialDetail.show_avatar_info_list)
  return show_avatar_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::SocialShowAvatarInfo >*
SocialDetail::mutable_show_avatar_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SocialDetail.show_avatar_info_list)
  return &show_avatar_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::SocialShowAvatarInfo >&
SocialDetail::show_avatar_info_list() const {
  // @@protoc_insertion_point(field_list:proto.SocialDetail.show_avatar_info_list)
  return show_avatar_info_list_;
}

// repeated uint32 show_name_card_id_list = 23;
int SocialDetail::show_name_card_id_list_size() const {
  return show_name_card_id_list_.size();
}
void SocialDetail::clear_show_name_card_id_list() {
  show_name_card_id_list_.Clear();
}
::google::protobuf::uint32 SocialDetail::show_name_card_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.show_name_card_id_list)
  return show_name_card_id_list_.Get(index);
}
void SocialDetail::set_show_name_card_id_list(int index, ::google::protobuf::uint32 value) {
  show_name_card_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SocialDetail.show_name_card_id_list)
}
void SocialDetail::add_show_name_card_id_list(::google::protobuf::uint32 value) {
  show_name_card_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SocialDetail.show_name_card_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SocialDetail::show_name_card_id_list() const {
  // @@protoc_insertion_point(field_list:proto.SocialDetail.show_name_card_id_list)
  return show_name_card_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SocialDetail::mutable_show_name_card_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SocialDetail.show_name_card_id_list)
  return &show_name_card_id_list_;
}

// .proto.FriendEnterHomeOption friend_enter_home_option = 24;
void SocialDetail::clear_friend_enter_home_option() {
  friend_enter_home_option_ = 0;
}
::proto::FriendEnterHomeOption SocialDetail::friend_enter_home_option() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.friend_enter_home_option)
  return static_cast< ::proto::FriendEnterHomeOption >(friend_enter_home_option_);
}
void SocialDetail::set_friend_enter_home_option(::proto::FriendEnterHomeOption value) {
  
  friend_enter_home_option_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.friend_enter_home_option)
}

// .proto.ProfilePicture profile_picture = 25;
bool SocialDetail::has_profile_picture() const {
  return this != internal_default_instance() && profile_picture_ != NULL;
}
void SocialDetail::clear_profile_picture() {
  if (GetArenaNoVirtual() == NULL && profile_picture_ != NULL) delete profile_picture_;
  profile_picture_ = NULL;
}
const ::proto::ProfilePicture& SocialDetail::profile_picture() const {
  const ::proto::ProfilePicture* p = profile_picture_;
  // @@protoc_insertion_point(field_get:proto.SocialDetail.profile_picture)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ProfilePicture*>(
      &::proto::_ProfilePicture_default_instance_);
}
::proto::ProfilePicture* SocialDetail::mutable_profile_picture() {
  
  if (profile_picture_ == NULL) {
    profile_picture_ = new ::proto::ProfilePicture;
  }
  // @@protoc_insertion_point(field_mutable:proto.SocialDetail.profile_picture)
  return profile_picture_;
}
::proto::ProfilePicture* SocialDetail::release_profile_picture() {
  // @@protoc_insertion_point(field_release:proto.SocialDetail.profile_picture)
  
  ::proto::ProfilePicture* temp = profile_picture_;
  profile_picture_ = NULL;
  return temp;
}
void SocialDetail::set_allocated_profile_picture(::proto::ProfilePicture* profile_picture) {
  delete profile_picture_;
  profile_picture_ = profile_picture;
  if (profile_picture) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SocialDetail.profile_picture)
}

// string ip_code = 26;
void SocialDetail::clear_ip_code() {
  ip_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SocialDetail::ip_code() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.ip_code)
  return ip_code_.GetNoArena();
}
void SocialDetail::set_ip_code(const ::std::string& value) {
  
  ip_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SocialDetail.ip_code)
}
#if LANG_CXX11
void SocialDetail::set_ip_code(::std::string&& value) {
  
  ip_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SocialDetail.ip_code)
}
#endif
void SocialDetail::set_ip_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SocialDetail.ip_code)
}
void SocialDetail::set_ip_code(const char* value, size_t size) {
  
  ip_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SocialDetail.ip_code)
}
::std::string* SocialDetail::mutable_ip_code() {
  
  // @@protoc_insertion_point(field_mutable:proto.SocialDetail.ip_code)
  return ip_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SocialDetail::release_ip_code() {
  // @@protoc_insertion_point(field_release:proto.SocialDetail.ip_code)
  
  return ip_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SocialDetail::set_allocated_ip_code(::std::string* ip_code) {
  if (ip_code != NULL) {
    
  } else {
    
  }
  ip_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_code);
  // @@protoc_insertion_point(field_set_allocated:proto.SocialDetail.ip_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FriendBrief::kUidFieldNumber;
const int FriendBrief::kNicknameFieldNumber;
const int FriendBrief::kLevelFieldNumber;
const int FriendBrief::kAvatarIdFieldNumber;
const int FriendBrief::kWorldLevelFieldNumber;
const int FriendBrief::kSignatureFieldNumber;
const int FriendBrief::kOnlineStateFieldNumber;
const int FriendBrief::kParamFieldNumber;
const int FriendBrief::kIsMpModeAvailableFieldNumber;
const int FriendBrief::kOnlineIdFieldNumber;
const int FriendBrief::kLastActiveTimeFieldNumber;
const int FriendBrief::kNameCardIdFieldNumber;
const int FriendBrief::kMpPlayerNumFieldNumber;
const int FriendBrief::kIsChatNoDisturbFieldNumber;
const int FriendBrief::kChatSequenceFieldNumber;
const int FriendBrief::kRemarkNameFieldNumber;
const int FriendBrief::kShowAvatarInfoListFieldNumber;
const int FriendBrief::kFriendEnterHomeOptionFieldNumber;
const int FriendBrief::kProfilePictureFieldNumber;
const int FriendBrief::kIsGameSourceFieldNumber;
const int FriendBrief::kIsPsnSourceFieldNumber;
const int FriendBrief::kPlatformTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FriendBrief::FriendBrief()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FriendBrief)
}
FriendBrief::FriendBrief(const FriendBrief& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      show_avatar_info_list_(from.show_avatar_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  online_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.online_id().size() > 0) {
    online_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_id_);
  }
  remark_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remark_name().size() > 0) {
    remark_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_name_);
  }
  if (from.has_profile_picture()) {
    profile_picture_ = new ::proto::ProfilePicture(*from.profile_picture_);
  } else {
    profile_picture_ = NULL;
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&platform_type_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(platform_type_));
  // @@protoc_insertion_point(copy_constructor:proto.FriendBrief)
}

void FriendBrief::SharedCtor() {
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&profile_picture_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&platform_type_) -
      reinterpret_cast<char*>(&profile_picture_)) + sizeof(platform_type_));
  _cached_size_ = 0;
}

FriendBrief::~FriendBrief() {
  // @@protoc_insertion_point(destructor:proto.FriendBrief)
  SharedDtor();
}

void FriendBrief::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete profile_picture_;
}

void FriendBrief::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendBrief::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FriendBrief& FriendBrief::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

FriendBrief* FriendBrief::New(::google::protobuf::Arena* arena) const {
  FriendBrief* n = new FriendBrief;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FriendBrief::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FriendBrief)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_avatar_info_list_.Clear();
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && profile_picture_ != NULL) {
    delete profile_picture_;
  }
  profile_picture_ = NULL;
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&platform_type_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(platform_type_));
  _internal_metadata_.Clear();
}

bool FriendBrief::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FriendBrief)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nickname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.FriendBrief.nickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 avatar_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 world_level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &world_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string signature = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signature().data(), static_cast<int>(this->signature().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.FriendBrief.signature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FriendOnlineState online_state = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_online_state(static_cast< ::proto::FriendOnlineState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 param = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_mp_mode_available = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_mp_mode_available_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string online_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_online_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->online_id().data(), static_cast<int>(this->online_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.FriendBrief.online_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 last_active_time = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_active_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 name_card_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &name_card_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mp_player_num = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mp_player_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_chat_no_disturb = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_chat_no_disturb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 chat_sequence = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chat_sequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remark_name = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remark_name().data(), static_cast<int>(this->remark_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.FriendBrief.remark_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.SocialShowAvatarInfo show_avatar_info_list = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_show_avatar_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FriendEnterHomeOption friend_enter_home_option = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_friend_enter_home_option(static_cast< ::proto::FriendEnterHomeOption >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ProfilePicture profile_picture = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_profile_picture()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_game_source = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_game_source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_psn_source = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_psn_source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PlatformType platform_type = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_platform_type(static_cast< ::proto::PlatformType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FriendBrief)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FriendBrief)
  return false;
#undef DO_
}

void FriendBrief::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FriendBrief)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // string nickname = 2;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.FriendBrief.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nickname(), output);
  }

  // uint32 level = 3;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  // uint32 avatar_id = 4;
  if (this->avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->avatar_id(), output);
  }

  // uint32 world_level = 5;
  if (this->world_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->world_level(), output);
  }

  // string signature = 6;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.FriendBrief.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->signature(), output);
  }

  // .proto.FriendOnlineState online_state = 7;
  if (this->online_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->online_state(), output);
  }

  // uint32 param = 8;
  if (this->param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->param(), output);
  }

  // bool is_mp_mode_available = 10;
  if (this->is_mp_mode_available() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_mp_mode_available(), output);
  }

  // string online_id = 11;
  if (this->online_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->online_id().data(), static_cast<int>(this->online_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.FriendBrief.online_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->online_id(), output);
  }

  // uint32 last_active_time = 12;
  if (this->last_active_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->last_active_time(), output);
  }

  // uint32 name_card_id = 13;
  if (this->name_card_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->name_card_id(), output);
  }

  // uint32 mp_player_num = 14;
  if (this->mp_player_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->mp_player_num(), output);
  }

  // bool is_chat_no_disturb = 15;
  if (this->is_chat_no_disturb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->is_chat_no_disturb(), output);
  }

  // uint32 chat_sequence = 16;
  if (this->chat_sequence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->chat_sequence(), output);
  }

  // string remark_name = 17;
  if (this->remark_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark_name().data(), static_cast<int>(this->remark_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.FriendBrief.remark_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->remark_name(), output);
  }

  // repeated .proto.SocialShowAvatarInfo show_avatar_info_list = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->show_avatar_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->show_avatar_info_list(static_cast<int>(i)), output);
  }

  // .proto.FriendEnterHomeOption friend_enter_home_option = 23;
  if (this->friend_enter_home_option() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      23, this->friend_enter_home_option(), output);
  }

  // .proto.ProfilePicture profile_picture = 24;
  if (this->has_profile_picture()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, *this->profile_picture_, output);
  }

  // bool is_game_source = 25;
  if (this->is_game_source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(25, this->is_game_source(), output);
  }

  // bool is_psn_source = 26;
  if (this->is_psn_source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(26, this->is_psn_source(), output);
  }

  // .proto.PlatformType platform_type = 27;
  if (this->platform_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      27, this->platform_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FriendBrief)
}

::google::protobuf::uint8* FriendBrief::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FriendBrief)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // string nickname = 2;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.FriendBrief.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nickname(), target);
  }

  // uint32 level = 3;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  // uint32 avatar_id = 4;
  if (this->avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->avatar_id(), target);
  }

  // uint32 world_level = 5;
  if (this->world_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->world_level(), target);
  }

  // string signature = 6;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.FriendBrief.signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->signature(), target);
  }

  // .proto.FriendOnlineState online_state = 7;
  if (this->online_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->online_state(), target);
  }

  // uint32 param = 8;
  if (this->param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->param(), target);
  }

  // bool is_mp_mode_available = 10;
  if (this->is_mp_mode_available() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_mp_mode_available(), target);
  }

  // string online_id = 11;
  if (this->online_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->online_id().data(), static_cast<int>(this->online_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.FriendBrief.online_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->online_id(), target);
  }

  // uint32 last_active_time = 12;
  if (this->last_active_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->last_active_time(), target);
  }

  // uint32 name_card_id = 13;
  if (this->name_card_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->name_card_id(), target);
  }

  // uint32 mp_player_num = 14;
  if (this->mp_player_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->mp_player_num(), target);
  }

  // bool is_chat_no_disturb = 15;
  if (this->is_chat_no_disturb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->is_chat_no_disturb(), target);
  }

  // uint32 chat_sequence = 16;
  if (this->chat_sequence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->chat_sequence(), target);
  }

  // string remark_name = 17;
  if (this->remark_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark_name().data(), static_cast<int>(this->remark_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.FriendBrief.remark_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->remark_name(), target);
  }

  // repeated .proto.SocialShowAvatarInfo show_avatar_info_list = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->show_avatar_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        22, this->show_avatar_info_list(static_cast<int>(i)), deterministic, target);
  }

  // .proto.FriendEnterHomeOption friend_enter_home_option = 23;
  if (this->friend_enter_home_option() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      23, this->friend_enter_home_option(), target);
  }

  // .proto.ProfilePicture profile_picture = 24;
  if (this->has_profile_picture()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        24, *this->profile_picture_, deterministic, target);
  }

  // bool is_game_source = 25;
  if (this->is_game_source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(25, this->is_game_source(), target);
  }

  // bool is_psn_source = 26;
  if (this->is_psn_source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(26, this->is_psn_source(), target);
  }

  // .proto.PlatformType platform_type = 27;
  if (this->platform_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      27, this->platform_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FriendBrief)
  return target;
}

size_t FriendBrief::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FriendBrief)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.SocialShowAvatarInfo show_avatar_info_list = 22;
  {
    unsigned int count = static_cast<unsigned int>(this->show_avatar_info_list_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->show_avatar_info_list(static_cast<int>(i)));
    }
  }

  // string nickname = 2;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  // string signature = 6;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature());
  }

  // string online_id = 11;
  if (this->online_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->online_id());
  }

  // string remark_name = 17;
  if (this->remark_name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remark_name());
  }

  // .proto.ProfilePicture profile_picture = 24;
  if (this->has_profile_picture()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->profile_picture_);
  }

  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 avatar_id = 4;
  if (this->avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_id());
  }

  // uint32 world_level = 5;
  if (this->world_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->world_level());
  }

  // .proto.FriendOnlineState online_state = 7;
  if (this->online_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->online_state());
  }

  // uint32 param = 8;
  if (this->param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->param());
  }

  // uint32 last_active_time = 12;
  if (this->last_active_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_active_time());
  }

  // uint32 name_card_id = 13;
  if (this->name_card_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->name_card_id());
  }

  // uint32 mp_player_num = 14;
  if (this->mp_player_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mp_player_num());
  }

  // uint32 chat_sequence = 16;
  if (this->chat_sequence() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->chat_sequence());
  }

  // bool is_mp_mode_available = 10;
  if (this->is_mp_mode_available() != 0) {
    total_size += 1 + 1;
  }

  // bool is_chat_no_disturb = 15;
  if (this->is_chat_no_disturb() != 0) {
    total_size += 1 + 1;
  }

  // bool is_game_source = 25;
  if (this->is_game_source() != 0) {
    total_size += 2 + 1;
  }

  // bool is_psn_source = 26;
  if (this->is_psn_source() != 0) {
    total_size += 2 + 1;
  }

  // .proto.FriendEnterHomeOption friend_enter_home_option = 23;
  if (this->friend_enter_home_option() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->friend_enter_home_option());
  }

  // .proto.PlatformType platform_type = 27;
  if (this->platform_type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->platform_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriendBrief::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FriendBrief)
  GOOGLE_DCHECK_NE(&from, this);
  const FriendBrief* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FriendBrief>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FriendBrief)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FriendBrief)
    MergeFrom(*source);
  }
}

void FriendBrief::MergeFrom(const FriendBrief& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FriendBrief)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  show_avatar_info_list_.MergeFrom(from.show_avatar_info_list_);
  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.online_id().size() > 0) {

    online_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_id_);
  }
  if (from.remark_name().size() > 0) {

    remark_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_name_);
  }
  if (from.has_profile_picture()) {
    mutable_profile_picture()->::proto::ProfilePicture::MergeFrom(from.profile_picture());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.avatar_id() != 0) {
    set_avatar_id(from.avatar_id());
  }
  if (from.world_level() != 0) {
    set_world_level(from.world_level());
  }
  if (from.online_state() != 0) {
    set_online_state(from.online_state());
  }
  if (from.param() != 0) {
    set_param(from.param());
  }
  if (from.last_active_time() != 0) {
    set_last_active_time(from.last_active_time());
  }
  if (from.name_card_id() != 0) {
    set_name_card_id(from.name_card_id());
  }
  if (from.mp_player_num() != 0) {
    set_mp_player_num(from.mp_player_num());
  }
  if (from.chat_sequence() != 0) {
    set_chat_sequence(from.chat_sequence());
  }
  if (from.is_mp_mode_available() != 0) {
    set_is_mp_mode_available(from.is_mp_mode_available());
  }
  if (from.is_chat_no_disturb() != 0) {
    set_is_chat_no_disturb(from.is_chat_no_disturb());
  }
  if (from.is_game_source() != 0) {
    set_is_game_source(from.is_game_source());
  }
  if (from.is_psn_source() != 0) {
    set_is_psn_source(from.is_psn_source());
  }
  if (from.friend_enter_home_option() != 0) {
    set_friend_enter_home_option(from.friend_enter_home_option());
  }
  if (from.platform_type() != 0) {
    set_platform_type(from.platform_type());
  }
}

void FriendBrief::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FriendBrief)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendBrief::CopyFrom(const FriendBrief& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FriendBrief)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendBrief::IsInitialized() const {
  return true;
}

void FriendBrief::Swap(FriendBrief* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FriendBrief::InternalSwap(FriendBrief* other) {
  using std::swap;
  show_avatar_info_list_.InternalSwap(&other->show_avatar_info_list_);
  nickname_.Swap(&other->nickname_);
  signature_.Swap(&other->signature_);
  online_id_.Swap(&other->online_id_);
  remark_name_.Swap(&other->remark_name_);
  swap(profile_picture_, other->profile_picture_);
  swap(uid_, other->uid_);
  swap(level_, other->level_);
  swap(avatar_id_, other->avatar_id_);
  swap(world_level_, other->world_level_);
  swap(online_state_, other->online_state_);
  swap(param_, other->param_);
  swap(last_active_time_, other->last_active_time_);
  swap(name_card_id_, other->name_card_id_);
  swap(mp_player_num_, other->mp_player_num_);
  swap(chat_sequence_, other->chat_sequence_);
  swap(is_mp_mode_available_, other->is_mp_mode_available_);
  swap(is_chat_no_disturb_, other->is_chat_no_disturb_);
  swap(is_game_source_, other->is_game_source_);
  swap(is_psn_source_, other->is_psn_source_);
  swap(friend_enter_home_option_, other->friend_enter_home_option_);
  swap(platform_type_, other->platform_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FriendBrief::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FriendBrief

// uint32 uid = 1;
void FriendBrief::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 FriendBrief::uid() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.uid)
  return uid_;
}
void FriendBrief::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.uid)
}

// string nickname = 2;
void FriendBrief::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FriendBrief::nickname() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.nickname)
  return nickname_.GetNoArena();
}
void FriendBrief::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.FriendBrief.nickname)
}
#if LANG_CXX11
void FriendBrief::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.FriendBrief.nickname)
}
#endif
void FriendBrief::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.FriendBrief.nickname)
}
void FriendBrief::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.FriendBrief.nickname)
}
::std::string* FriendBrief::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.FriendBrief.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FriendBrief::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.FriendBrief.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendBrief::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.FriendBrief.nickname)
}

// uint32 level = 3;
void FriendBrief::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 FriendBrief::level() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.level)
  return level_;
}
void FriendBrief::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.level)
}

// uint32 avatar_id = 4;
void FriendBrief::clear_avatar_id() {
  avatar_id_ = 0u;
}
::google::protobuf::uint32 FriendBrief::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.avatar_id)
  return avatar_id_;
}
void FriendBrief::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.avatar_id)
}

// uint32 world_level = 5;
void FriendBrief::clear_world_level() {
  world_level_ = 0u;
}
::google::protobuf::uint32 FriendBrief::world_level() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.world_level)
  return world_level_;
}
void FriendBrief::set_world_level(::google::protobuf::uint32 value) {
  
  world_level_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.world_level)
}

// string signature = 6;
void FriendBrief::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FriendBrief::signature() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.signature)
  return signature_.GetNoArena();
}
void FriendBrief::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.FriendBrief.signature)
}
#if LANG_CXX11
void FriendBrief::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.FriendBrief.signature)
}
#endif
void FriendBrief::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.FriendBrief.signature)
}
void FriendBrief::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.FriendBrief.signature)
}
::std::string* FriendBrief::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:proto.FriendBrief.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FriendBrief::release_signature() {
  // @@protoc_insertion_point(field_release:proto.FriendBrief.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendBrief::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:proto.FriendBrief.signature)
}

// .proto.FriendOnlineState online_state = 7;
void FriendBrief::clear_online_state() {
  online_state_ = 0;
}
::proto::FriendOnlineState FriendBrief::online_state() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.online_state)
  return static_cast< ::proto::FriendOnlineState >(online_state_);
}
void FriendBrief::set_online_state(::proto::FriendOnlineState value) {
  
  online_state_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.online_state)
}

// uint32 param = 8;
void FriendBrief::clear_param() {
  param_ = 0u;
}
::google::protobuf::uint32 FriendBrief::param() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.param)
  return param_;
}
void FriendBrief::set_param(::google::protobuf::uint32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.param)
}

// bool is_mp_mode_available = 10;
void FriendBrief::clear_is_mp_mode_available() {
  is_mp_mode_available_ = false;
}
bool FriendBrief::is_mp_mode_available() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.is_mp_mode_available)
  return is_mp_mode_available_;
}
void FriendBrief::set_is_mp_mode_available(bool value) {
  
  is_mp_mode_available_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.is_mp_mode_available)
}

// string online_id = 11;
void FriendBrief::clear_online_id() {
  online_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FriendBrief::online_id() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.online_id)
  return online_id_.GetNoArena();
}
void FriendBrief::set_online_id(const ::std::string& value) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.FriendBrief.online_id)
}
#if LANG_CXX11
void FriendBrief::set_online_id(::std::string&& value) {
  
  online_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.FriendBrief.online_id)
}
#endif
void FriendBrief::set_online_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.FriendBrief.online_id)
}
void FriendBrief::set_online_id(const char* value, size_t size) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.FriendBrief.online_id)
}
::std::string* FriendBrief::mutable_online_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.FriendBrief.online_id)
  return online_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FriendBrief::release_online_id() {
  // @@protoc_insertion_point(field_release:proto.FriendBrief.online_id)
  
  return online_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendBrief::set_allocated_online_id(::std::string* online_id) {
  if (online_id != NULL) {
    
  } else {
    
  }
  online_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), online_id);
  // @@protoc_insertion_point(field_set_allocated:proto.FriendBrief.online_id)
}

// uint32 last_active_time = 12;
void FriendBrief::clear_last_active_time() {
  last_active_time_ = 0u;
}
::google::protobuf::uint32 FriendBrief::last_active_time() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.last_active_time)
  return last_active_time_;
}
void FriendBrief::set_last_active_time(::google::protobuf::uint32 value) {
  
  last_active_time_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.last_active_time)
}

// uint32 name_card_id = 13;
void FriendBrief::clear_name_card_id() {
  name_card_id_ = 0u;
}
::google::protobuf::uint32 FriendBrief::name_card_id() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.name_card_id)
  return name_card_id_;
}
void FriendBrief::set_name_card_id(::google::protobuf::uint32 value) {
  
  name_card_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.name_card_id)
}

// uint32 mp_player_num = 14;
void FriendBrief::clear_mp_player_num() {
  mp_player_num_ = 0u;
}
::google::protobuf::uint32 FriendBrief::mp_player_num() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.mp_player_num)
  return mp_player_num_;
}
void FriendBrief::set_mp_player_num(::google::protobuf::uint32 value) {
  
  mp_player_num_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.mp_player_num)
}

// bool is_chat_no_disturb = 15;
void FriendBrief::clear_is_chat_no_disturb() {
  is_chat_no_disturb_ = false;
}
bool FriendBrief::is_chat_no_disturb() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.is_chat_no_disturb)
  return is_chat_no_disturb_;
}
void FriendBrief::set_is_chat_no_disturb(bool value) {
  
  is_chat_no_disturb_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.is_chat_no_disturb)
}

// uint32 chat_sequence = 16;
void FriendBrief::clear_chat_sequence() {
  chat_sequence_ = 0u;
}
::google::protobuf::uint32 FriendBrief::chat_sequence() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.chat_sequence)
  return chat_sequence_;
}
void FriendBrief::set_chat_sequence(::google::protobuf::uint32 value) {
  
  chat_sequence_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.chat_sequence)
}

// string remark_name = 17;
void FriendBrief::clear_remark_name() {
  remark_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FriendBrief::remark_name() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.remark_name)
  return remark_name_.GetNoArena();
}
void FriendBrief::set_remark_name(const ::std::string& value) {
  
  remark_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.FriendBrief.remark_name)
}
#if LANG_CXX11
void FriendBrief::set_remark_name(::std::string&& value) {
  
  remark_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.FriendBrief.remark_name)
}
#endif
void FriendBrief::set_remark_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  remark_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.FriendBrief.remark_name)
}
void FriendBrief::set_remark_name(const char* value, size_t size) {
  
  remark_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.FriendBrief.remark_name)
}
::std::string* FriendBrief::mutable_remark_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.FriendBrief.remark_name)
  return remark_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FriendBrief::release_remark_name() {
  // @@protoc_insertion_point(field_release:proto.FriendBrief.remark_name)
  
  return remark_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendBrief::set_allocated_remark_name(::std::string* remark_name) {
  if (remark_name != NULL) {
    
  } else {
    
  }
  remark_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), remark_name);
  // @@protoc_insertion_point(field_set_allocated:proto.FriendBrief.remark_name)
}

// repeated .proto.SocialShowAvatarInfo show_avatar_info_list = 22;
int FriendBrief::show_avatar_info_list_size() const {
  return show_avatar_info_list_.size();
}
void FriendBrief::clear_show_avatar_info_list() {
  show_avatar_info_list_.Clear();
}
const ::proto::SocialShowAvatarInfo& FriendBrief::show_avatar_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.show_avatar_info_list)
  return show_avatar_info_list_.Get(index);
}
::proto::SocialShowAvatarInfo* FriendBrief::mutable_show_avatar_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.FriendBrief.show_avatar_info_list)
  return show_avatar_info_list_.Mutable(index);
}
::proto::SocialShowAvatarInfo* FriendBrief::add_show_avatar_info_list() {
  // @@protoc_insertion_point(field_add:proto.FriendBrief.show_avatar_info_list)
  return show_avatar_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::SocialShowAvatarInfo >*
FriendBrief::mutable_show_avatar_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.FriendBrief.show_avatar_info_list)
  return &show_avatar_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::SocialShowAvatarInfo >&
FriendBrief::show_avatar_info_list() const {
  // @@protoc_insertion_point(field_list:proto.FriendBrief.show_avatar_info_list)
  return show_avatar_info_list_;
}

// .proto.FriendEnterHomeOption friend_enter_home_option = 23;
void FriendBrief::clear_friend_enter_home_option() {
  friend_enter_home_option_ = 0;
}
::proto::FriendEnterHomeOption FriendBrief::friend_enter_home_option() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.friend_enter_home_option)
  return static_cast< ::proto::FriendEnterHomeOption >(friend_enter_home_option_);
}
void FriendBrief::set_friend_enter_home_option(::proto::FriendEnterHomeOption value) {
  
  friend_enter_home_option_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.friend_enter_home_option)
}

// .proto.ProfilePicture profile_picture = 24;
bool FriendBrief::has_profile_picture() const {
  return this != internal_default_instance() && profile_picture_ != NULL;
}
void FriendBrief::clear_profile_picture() {
  if (GetArenaNoVirtual() == NULL && profile_picture_ != NULL) delete profile_picture_;
  profile_picture_ = NULL;
}
const ::proto::ProfilePicture& FriendBrief::profile_picture() const {
  const ::proto::ProfilePicture* p = profile_picture_;
  // @@protoc_insertion_point(field_get:proto.FriendBrief.profile_picture)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ProfilePicture*>(
      &::proto::_ProfilePicture_default_instance_);
}
::proto::ProfilePicture* FriendBrief::mutable_profile_picture() {
  
  if (profile_picture_ == NULL) {
    profile_picture_ = new ::proto::ProfilePicture;
  }
  // @@protoc_insertion_point(field_mutable:proto.FriendBrief.profile_picture)
  return profile_picture_;
}
::proto::ProfilePicture* FriendBrief::release_profile_picture() {
  // @@protoc_insertion_point(field_release:proto.FriendBrief.profile_picture)
  
  ::proto::ProfilePicture* temp = profile_picture_;
  profile_picture_ = NULL;
  return temp;
}
void FriendBrief::set_allocated_profile_picture(::proto::ProfilePicture* profile_picture) {
  delete profile_picture_;
  profile_picture_ = profile_picture;
  if (profile_picture) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.FriendBrief.profile_picture)
}

// bool is_game_source = 25;
void FriendBrief::clear_is_game_source() {
  is_game_source_ = false;
}
bool FriendBrief::is_game_source() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.is_game_source)
  return is_game_source_;
}
void FriendBrief::set_is_game_source(bool value) {
  
  is_game_source_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.is_game_source)
}

// bool is_psn_source = 26;
void FriendBrief::clear_is_psn_source() {
  is_psn_source_ = false;
}
bool FriendBrief::is_psn_source() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.is_psn_source)
  return is_psn_source_;
}
void FriendBrief::set_is_psn_source(bool value) {
  
  is_psn_source_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.is_psn_source)
}

// .proto.PlatformType platform_type = 27;
void FriendBrief::clear_platform_type() {
  platform_type_ = 0;
}
::proto::PlatformType FriendBrief::platform_type() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.platform_type)
  return static_cast< ::proto::PlatformType >(platform_type_);
}
void FriendBrief::set_platform_type(::proto::PlatformType value) {
  
  platform_type_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.platform_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatEmojiCollectionData::kEmojiIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatEmojiCollectionData::ChatEmojiCollectionData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChatEmojiCollectionData)
}
ChatEmojiCollectionData::ChatEmojiCollectionData(const ChatEmojiCollectionData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      emoji_id_list_(from.emoji_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.ChatEmojiCollectionData)
}

void ChatEmojiCollectionData::SharedCtor() {
  _cached_size_ = 0;
}

ChatEmojiCollectionData::~ChatEmojiCollectionData() {
  // @@protoc_insertion_point(destructor:proto.ChatEmojiCollectionData)
  SharedDtor();
}

void ChatEmojiCollectionData::SharedDtor() {
}

void ChatEmojiCollectionData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatEmojiCollectionData::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatEmojiCollectionData& ChatEmojiCollectionData::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatEmojiCollectionData* ChatEmojiCollectionData::New(::google::protobuf::Arena* arena) const {
  ChatEmojiCollectionData* n = new ChatEmojiCollectionData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatEmojiCollectionData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChatEmojiCollectionData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  emoji_id_list_.Clear();
  _internal_metadata_.Clear();
}

bool ChatEmojiCollectionData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChatEmojiCollectionData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 emoji_id_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_emoji_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_emoji_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChatEmojiCollectionData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChatEmojiCollectionData)
  return false;
#undef DO_
}

void ChatEmojiCollectionData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChatEmojiCollectionData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 emoji_id_list = 1;
  if (this->emoji_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _emoji_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->emoji_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->emoji_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChatEmojiCollectionData)
}

::google::protobuf::uint8* ChatEmojiCollectionData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChatEmojiCollectionData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 emoji_id_list = 1;
  if (this->emoji_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _emoji_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->emoji_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChatEmojiCollectionData)
  return target;
}

size_t ChatEmojiCollectionData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChatEmojiCollectionData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 emoji_id_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->emoji_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _emoji_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatEmojiCollectionData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChatEmojiCollectionData)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatEmojiCollectionData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatEmojiCollectionData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChatEmojiCollectionData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChatEmojiCollectionData)
    MergeFrom(*source);
  }
}

void ChatEmojiCollectionData::MergeFrom(const ChatEmojiCollectionData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChatEmojiCollectionData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  emoji_id_list_.MergeFrom(from.emoji_id_list_);
}

void ChatEmojiCollectionData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChatEmojiCollectionData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatEmojiCollectionData::CopyFrom(const ChatEmojiCollectionData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChatEmojiCollectionData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatEmojiCollectionData::IsInitialized() const {
  return true;
}

void ChatEmojiCollectionData::Swap(ChatEmojiCollectionData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatEmojiCollectionData::InternalSwap(ChatEmojiCollectionData* other) {
  using std::swap;
  emoji_id_list_.InternalSwap(&other->emoji_id_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatEmojiCollectionData::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatEmojiCollectionData

// repeated uint32 emoji_id_list = 1;
int ChatEmojiCollectionData::emoji_id_list_size() const {
  return emoji_id_list_.size();
}
void ChatEmojiCollectionData::clear_emoji_id_list() {
  emoji_id_list_.Clear();
}
::google::protobuf::uint32 ChatEmojiCollectionData::emoji_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ChatEmojiCollectionData.emoji_id_list)
  return emoji_id_list_.Get(index);
}
void ChatEmojiCollectionData::set_emoji_id_list(int index, ::google::protobuf::uint32 value) {
  emoji_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ChatEmojiCollectionData.emoji_id_list)
}
void ChatEmojiCollectionData::add_emoji_id_list(::google::protobuf::uint32 value) {
  emoji_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ChatEmojiCollectionData.emoji_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ChatEmojiCollectionData::emoji_id_list() const {
  // @@protoc_insertion_point(field_list:proto.ChatEmojiCollectionData.emoji_id_list)
  return emoji_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ChatEmojiCollectionData::mutable_emoji_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ChatEmojiCollectionData.emoji_id_list)
  return &emoji_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPlayerFriendListReq::GetPlayerFriendListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetPlayerFriendListReq)
}
GetPlayerFriendListReq::GetPlayerFriendListReq(const GetPlayerFriendListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GetPlayerFriendListReq)
}

void GetPlayerFriendListReq::SharedCtor() {
  _cached_size_ = 0;
}

GetPlayerFriendListReq::~GetPlayerFriendListReq() {
  // @@protoc_insertion_point(destructor:proto.GetPlayerFriendListReq)
  SharedDtor();
}

void GetPlayerFriendListReq::SharedDtor() {
}

void GetPlayerFriendListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPlayerFriendListReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPlayerFriendListReq& GetPlayerFriendListReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetPlayerFriendListReq* GetPlayerFriendListReq::New(::google::protobuf::Arena* arena) const {
  GetPlayerFriendListReq* n = new GetPlayerFriendListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPlayerFriendListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetPlayerFriendListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetPlayerFriendListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetPlayerFriendListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetPlayerFriendListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetPlayerFriendListReq)
  return false;
#undef DO_
}

void GetPlayerFriendListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetPlayerFriendListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetPlayerFriendListReq)
}

::google::protobuf::uint8* GetPlayerFriendListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetPlayerFriendListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetPlayerFriendListReq)
  return target;
}

size_t GetPlayerFriendListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetPlayerFriendListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPlayerFriendListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetPlayerFriendListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPlayerFriendListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPlayerFriendListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetPlayerFriendListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetPlayerFriendListReq)
    MergeFrom(*source);
  }
}

void GetPlayerFriendListReq::MergeFrom(const GetPlayerFriendListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetPlayerFriendListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetPlayerFriendListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetPlayerFriendListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPlayerFriendListReq::CopyFrom(const GetPlayerFriendListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetPlayerFriendListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPlayerFriendListReq::IsInitialized() const {
  return true;
}

void GetPlayerFriendListReq::Swap(GetPlayerFriendListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPlayerFriendListReq::InternalSwap(GetPlayerFriendListReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPlayerFriendListReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPlayerFriendListReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPlayerFriendListRsp::kRetcodeFieldNumber;
const int GetPlayerFriendListRsp::kAskFriendListFieldNumber;
const int GetPlayerFriendListRsp::kFriendListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPlayerFriendListRsp::GetPlayerFriendListRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetPlayerFriendListRsp)
}
GetPlayerFriendListRsp::GetPlayerFriendListRsp(const GetPlayerFriendListRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ask_friend_list_(from.ask_friend_list_),
      friend_list_(from.friend_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GetPlayerFriendListRsp)
}

void GetPlayerFriendListRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

GetPlayerFriendListRsp::~GetPlayerFriendListRsp() {
  // @@protoc_insertion_point(destructor:proto.GetPlayerFriendListRsp)
  SharedDtor();
}

void GetPlayerFriendListRsp::SharedDtor() {
}

void GetPlayerFriendListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPlayerFriendListRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPlayerFriendListRsp& GetPlayerFriendListRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetPlayerFriendListRsp* GetPlayerFriendListRsp::New(::google::protobuf::Arena* arena) const {
  GetPlayerFriendListRsp* n = new GetPlayerFriendListRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPlayerFriendListRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetPlayerFriendListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ask_friend_list_.Clear();
  friend_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool GetPlayerFriendListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetPlayerFriendListRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.FriendBrief ask_friend_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ask_friend_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.FriendBrief friend_list = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friend_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetPlayerFriendListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetPlayerFriendListRsp)
  return false;
#undef DO_
}

void GetPlayerFriendListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetPlayerFriendListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.FriendBrief ask_friend_list = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ask_friend_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->ask_friend_list(static_cast<int>(i)), output);
  }

  // int32 retcode = 9;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->retcode(), output);
  }

  // repeated .proto.FriendBrief friend_list = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->friend_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetPlayerFriendListRsp)
}

::google::protobuf::uint8* GetPlayerFriendListRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetPlayerFriendListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.FriendBrief ask_friend_list = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ask_friend_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->ask_friend_list(static_cast<int>(i)), deterministic, target);
  }

  // int32 retcode = 9;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->retcode(), target);
  }

  // repeated .proto.FriendBrief friend_list = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, this->friend_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetPlayerFriendListRsp)
  return target;
}

size_t GetPlayerFriendListRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetPlayerFriendListRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.FriendBrief ask_friend_list = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->ask_friend_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ask_friend_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.FriendBrief friend_list = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->friend_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friend_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 9;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPlayerFriendListRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetPlayerFriendListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPlayerFriendListRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPlayerFriendListRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetPlayerFriendListRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetPlayerFriendListRsp)
    MergeFrom(*source);
  }
}

void GetPlayerFriendListRsp::MergeFrom(const GetPlayerFriendListRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetPlayerFriendListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ask_friend_list_.MergeFrom(from.ask_friend_list_);
  friend_list_.MergeFrom(from.friend_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetPlayerFriendListRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetPlayerFriendListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPlayerFriendListRsp::CopyFrom(const GetPlayerFriendListRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetPlayerFriendListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPlayerFriendListRsp::IsInitialized() const {
  return true;
}

void GetPlayerFriendListRsp::Swap(GetPlayerFriendListRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPlayerFriendListRsp::InternalSwap(GetPlayerFriendListRsp* other) {
  using std::swap;
  ask_friend_list_.InternalSwap(&other->ask_friend_list_);
  friend_list_.InternalSwap(&other->friend_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPlayerFriendListRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPlayerFriendListRsp

// int32 retcode = 9;
void GetPlayerFriendListRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetPlayerFriendListRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerFriendListRsp.retcode)
  return retcode_;
}
void GetPlayerFriendListRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerFriendListRsp.retcode)
}

// repeated .proto.FriendBrief ask_friend_list = 8;
int GetPlayerFriendListRsp::ask_friend_list_size() const {
  return ask_friend_list_.size();
}
void GetPlayerFriendListRsp::clear_ask_friend_list() {
  ask_friend_list_.Clear();
}
const ::proto::FriendBrief& GetPlayerFriendListRsp::ask_friend_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerFriendListRsp.ask_friend_list)
  return ask_friend_list_.Get(index);
}
::proto::FriendBrief* GetPlayerFriendListRsp::mutable_ask_friend_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerFriendListRsp.ask_friend_list)
  return ask_friend_list_.Mutable(index);
}
::proto::FriendBrief* GetPlayerFriendListRsp::add_ask_friend_list() {
  // @@protoc_insertion_point(field_add:proto.GetPlayerFriendListRsp.ask_friend_list)
  return ask_friend_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
GetPlayerFriendListRsp::mutable_ask_friend_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetPlayerFriendListRsp.ask_friend_list)
  return &ask_friend_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
GetPlayerFriendListRsp::ask_friend_list() const {
  // @@protoc_insertion_point(field_list:proto.GetPlayerFriendListRsp.ask_friend_list)
  return ask_friend_list_;
}

// repeated .proto.FriendBrief friend_list = 14;
int GetPlayerFriendListRsp::friend_list_size() const {
  return friend_list_.size();
}
void GetPlayerFriendListRsp::clear_friend_list() {
  friend_list_.Clear();
}
const ::proto::FriendBrief& GetPlayerFriendListRsp::friend_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerFriendListRsp.friend_list)
  return friend_list_.Get(index);
}
::proto::FriendBrief* GetPlayerFriendListRsp::mutable_friend_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerFriendListRsp.friend_list)
  return friend_list_.Mutable(index);
}
::proto::FriendBrief* GetPlayerFriendListRsp::add_friend_list() {
  // @@protoc_insertion_point(field_add:proto.GetPlayerFriendListRsp.friend_list)
  return friend_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
GetPlayerFriendListRsp::mutable_friend_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetPlayerFriendListRsp.friend_list)
  return &friend_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
GetPlayerFriendListRsp::friend_list() const {
  // @@protoc_insertion_point(field_list:proto.GetPlayerFriendListRsp.friend_list)
  return friend_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AskAddFriendReq::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AskAddFriendReq::AskAddFriendReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AskAddFriendReq)
}
AskAddFriendReq::AskAddFriendReq(const AskAddFriendReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.AskAddFriendReq)
}

void AskAddFriendReq::SharedCtor() {
  target_uid_ = 0u;
  _cached_size_ = 0;
}

AskAddFriendReq::~AskAddFriendReq() {
  // @@protoc_insertion_point(destructor:proto.AskAddFriendReq)
  SharedDtor();
}

void AskAddFriendReq::SharedDtor() {
}

void AskAddFriendReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AskAddFriendReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AskAddFriendReq& AskAddFriendReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

AskAddFriendReq* AskAddFriendReq::New(::google::protobuf::Arena* arena) const {
  AskAddFriendReq* n = new AskAddFriendReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AskAddFriendReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AskAddFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool AskAddFriendReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AskAddFriendReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AskAddFriendReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AskAddFriendReq)
  return false;
#undef DO_
}

void AskAddFriendReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AskAddFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 7;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AskAddFriendReq)
}

::google::protobuf::uint8* AskAddFriendReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AskAddFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 7;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AskAddFriendReq)
  return target;
}

size_t AskAddFriendReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AskAddFriendReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 7;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AskAddFriendReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AskAddFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AskAddFriendReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AskAddFriendReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AskAddFriendReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AskAddFriendReq)
    MergeFrom(*source);
  }
}

void AskAddFriendReq::MergeFrom(const AskAddFriendReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AskAddFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void AskAddFriendReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AskAddFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AskAddFriendReq::CopyFrom(const AskAddFriendReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AskAddFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AskAddFriendReq::IsInitialized() const {
  return true;
}

void AskAddFriendReq::Swap(AskAddFriendReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AskAddFriendReq::InternalSwap(AskAddFriendReq* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AskAddFriendReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AskAddFriendReq

// uint32 target_uid = 7;
void AskAddFriendReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 AskAddFriendReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.AskAddFriendReq.target_uid)
  return target_uid_;
}
void AskAddFriendReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.AskAddFriendReq.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AskAddFriendRsp::kParamFieldNumber;
const int AskAddFriendRsp::kRetcodeFieldNumber;
const int AskAddFriendRsp::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AskAddFriendRsp::AskAddFriendRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AskAddFriendRsp)
}
AskAddFriendRsp::AskAddFriendRsp(const AskAddFriendRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&param_, &from.param_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&param_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.AskAddFriendRsp)
}

void AskAddFriendRsp::SharedCtor() {
  ::memset(&param_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&param_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

AskAddFriendRsp::~AskAddFriendRsp() {
  // @@protoc_insertion_point(destructor:proto.AskAddFriendRsp)
  SharedDtor();
}

void AskAddFriendRsp::SharedDtor() {
}

void AskAddFriendRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AskAddFriendRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AskAddFriendRsp& AskAddFriendRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

AskAddFriendRsp* AskAddFriendRsp::New(::google::protobuf::Arena* arena) const {
  AskAddFriendRsp* n = new AskAddFriendRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AskAddFriendRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AskAddFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&param_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&param_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool AskAddFriendRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AskAddFriendRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 param = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AskAddFriendRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AskAddFriendRsp)
  return false;
#undef DO_
}

void AskAddFriendRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AskAddFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 4;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->target_uid(), output);
  }

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->retcode(), output);
  }

  // uint32 param = 8;
  if (this->param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->param(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AskAddFriendRsp)
}

::google::protobuf::uint8* AskAddFriendRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AskAddFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 4;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->target_uid(), target);
  }

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->retcode(), target);
  }

  // uint32 param = 8;
  if (this->param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->param(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AskAddFriendRsp)
  return target;
}

size_t AskAddFriendRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AskAddFriendRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 param = 8;
  if (this->param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->param());
  }

  // uint32 target_uid = 4;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AskAddFriendRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AskAddFriendRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AskAddFriendRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AskAddFriendRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AskAddFriendRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AskAddFriendRsp)
    MergeFrom(*source);
  }
}

void AskAddFriendRsp::MergeFrom(const AskAddFriendRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AskAddFriendRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.param() != 0) {
    set_param(from.param());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void AskAddFriendRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AskAddFriendRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AskAddFriendRsp::CopyFrom(const AskAddFriendRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AskAddFriendRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AskAddFriendRsp::IsInitialized() const {
  return true;
}

void AskAddFriendRsp::Swap(AskAddFriendRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AskAddFriendRsp::InternalSwap(AskAddFriendRsp* other) {
  using std::swap;
  swap(param_, other->param_);
  swap(target_uid_, other->target_uid_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AskAddFriendRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AskAddFriendRsp

// uint32 param = 8;
void AskAddFriendRsp::clear_param() {
  param_ = 0u;
}
::google::protobuf::uint32 AskAddFriendRsp::param() const {
  // @@protoc_insertion_point(field_get:proto.AskAddFriendRsp.param)
  return param_;
}
void AskAddFriendRsp::set_param(::google::protobuf::uint32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:proto.AskAddFriendRsp.param)
}

// int32 retcode = 7;
void AskAddFriendRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 AskAddFriendRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AskAddFriendRsp.retcode)
  return retcode_;
}
void AskAddFriendRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AskAddFriendRsp.retcode)
}

// uint32 target_uid = 4;
void AskAddFriendRsp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 AskAddFriendRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.AskAddFriendRsp.target_uid)
  return target_uid_;
}
void AskAddFriendRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.AskAddFriendRsp.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DealAddFriendReq::kDealAddFriendResultFieldNumber;
const int DealAddFriendReq::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DealAddFriendReq::DealAddFriendReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DealAddFriendReq)
}
DealAddFriendReq::DealAddFriendReq(const DealAddFriendReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_uid_, &from.target_uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&deal_add_friend_result_) -
    reinterpret_cast<char*>(&target_uid_)) + sizeof(deal_add_friend_result_));
  // @@protoc_insertion_point(copy_constructor:proto.DealAddFriendReq)
}

void DealAddFriendReq::SharedCtor() {
  ::memset(&target_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deal_add_friend_result_) -
      reinterpret_cast<char*>(&target_uid_)) + sizeof(deal_add_friend_result_));
  _cached_size_ = 0;
}

DealAddFriendReq::~DealAddFriendReq() {
  // @@protoc_insertion_point(destructor:proto.DealAddFriendReq)
  SharedDtor();
}

void DealAddFriendReq::SharedDtor() {
}

void DealAddFriendReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DealAddFriendReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DealAddFriendReq& DealAddFriendReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

DealAddFriendReq* DealAddFriendReq::New(::google::protobuf::Arena* arena) const {
  DealAddFriendReq* n = new DealAddFriendReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DealAddFriendReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DealAddFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&target_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deal_add_friend_result_) -
      reinterpret_cast<char*>(&target_uid_)) + sizeof(deal_add_friend_result_));
  _internal_metadata_.Clear();
}

bool DealAddFriendReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DealAddFriendReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.DealAddFriendResultType deal_add_friend_result = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_deal_add_friend_result(static_cast< ::proto::DealAddFriendResultType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DealAddFriendReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DealAddFriendReq)
  return false;
#undef DO_
}

void DealAddFriendReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DealAddFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 10;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->target_uid(), output);
  }

  // .proto.DealAddFriendResultType deal_add_friend_result = 12;
  if (this->deal_add_friend_result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->deal_add_friend_result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DealAddFriendReq)
}

::google::protobuf::uint8* DealAddFriendReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DealAddFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 10;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->target_uid(), target);
  }

  // .proto.DealAddFriendResultType deal_add_friend_result = 12;
  if (this->deal_add_friend_result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->deal_add_friend_result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DealAddFriendReq)
  return target;
}

size_t DealAddFriendReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DealAddFriendReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 10;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  // .proto.DealAddFriendResultType deal_add_friend_result = 12;
  if (this->deal_add_friend_result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->deal_add_friend_result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DealAddFriendReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DealAddFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DealAddFriendReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DealAddFriendReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DealAddFriendReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DealAddFriendReq)
    MergeFrom(*source);
  }
}

void DealAddFriendReq::MergeFrom(const DealAddFriendReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DealAddFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  if (from.deal_add_friend_result() != 0) {
    set_deal_add_friend_result(from.deal_add_friend_result());
  }
}

void DealAddFriendReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DealAddFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DealAddFriendReq::CopyFrom(const DealAddFriendReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DealAddFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DealAddFriendReq::IsInitialized() const {
  return true;
}

void DealAddFriendReq::Swap(DealAddFriendReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DealAddFriendReq::InternalSwap(DealAddFriendReq* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  swap(deal_add_friend_result_, other->deal_add_friend_result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DealAddFriendReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DealAddFriendReq

// .proto.DealAddFriendResultType deal_add_friend_result = 12;
void DealAddFriendReq::clear_deal_add_friend_result() {
  deal_add_friend_result_ = 0;
}
::proto::DealAddFriendResultType DealAddFriendReq::deal_add_friend_result() const {
  // @@protoc_insertion_point(field_get:proto.DealAddFriendReq.deal_add_friend_result)
  return static_cast< ::proto::DealAddFriendResultType >(deal_add_friend_result_);
}
void DealAddFriendReq::set_deal_add_friend_result(::proto::DealAddFriendResultType value) {
  
  deal_add_friend_result_ = value;
  // @@protoc_insertion_point(field_set:proto.DealAddFriendReq.deal_add_friend_result)
}

// uint32 target_uid = 10;
void DealAddFriendReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 DealAddFriendReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.DealAddFriendReq.target_uid)
  return target_uid_;
}
void DealAddFriendReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.DealAddFriendReq.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DealAddFriendRsp::kRetcodeFieldNumber;
const int DealAddFriendRsp::kTargetUidFieldNumber;
const int DealAddFriendRsp::kDealAddFriendResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DealAddFriendRsp::DealAddFriendRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DealAddFriendRsp)
}
DealAddFriendRsp::DealAddFriendRsp(const DealAddFriendRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&deal_add_friend_result_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(deal_add_friend_result_));
  // @@protoc_insertion_point(copy_constructor:proto.DealAddFriendRsp)
}

void DealAddFriendRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deal_add_friend_result_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(deal_add_friend_result_));
  _cached_size_ = 0;
}

DealAddFriendRsp::~DealAddFriendRsp() {
  // @@protoc_insertion_point(destructor:proto.DealAddFriendRsp)
  SharedDtor();
}

void DealAddFriendRsp::SharedDtor() {
}

void DealAddFriendRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DealAddFriendRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DealAddFriendRsp& DealAddFriendRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

DealAddFriendRsp* DealAddFriendRsp::New(::google::protobuf::Arena* arena) const {
  DealAddFriendRsp* n = new DealAddFriendRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DealAddFriendRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DealAddFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deal_add_friend_result_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(deal_add_friend_result_));
  _internal_metadata_.Clear();
}

bool DealAddFriendRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DealAddFriendRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.DealAddFriendResultType deal_add_friend_result = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_deal_add_friend_result(static_cast< ::proto::DealAddFriendResultType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DealAddFriendRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DealAddFriendRsp)
  return false;
#undef DO_
}

void DealAddFriendRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DealAddFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 target_uid = 5;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->target_uid(), output);
  }

  // .proto.DealAddFriendResultType deal_add_friend_result = 6;
  if (this->deal_add_friend_result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->deal_add_friend_result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DealAddFriendRsp)
}

::google::protobuf::uint8* DealAddFriendRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DealAddFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 target_uid = 5;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->target_uid(), target);
  }

  // .proto.DealAddFriendResultType deal_add_friend_result = 6;
  if (this->deal_add_friend_result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->deal_add_friend_result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DealAddFriendRsp)
  return target;
}

size_t DealAddFriendRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DealAddFriendRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 target_uid = 5;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  // .proto.DealAddFriendResultType deal_add_friend_result = 6;
  if (this->deal_add_friend_result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->deal_add_friend_result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DealAddFriendRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DealAddFriendRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DealAddFriendRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DealAddFriendRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DealAddFriendRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DealAddFriendRsp)
    MergeFrom(*source);
  }
}

void DealAddFriendRsp::MergeFrom(const DealAddFriendRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DealAddFriendRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  if (from.deal_add_friend_result() != 0) {
    set_deal_add_friend_result(from.deal_add_friend_result());
  }
}

void DealAddFriendRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DealAddFriendRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DealAddFriendRsp::CopyFrom(const DealAddFriendRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DealAddFriendRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DealAddFriendRsp::IsInitialized() const {
  return true;
}

void DealAddFriendRsp::Swap(DealAddFriendRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DealAddFriendRsp::InternalSwap(DealAddFriendRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(target_uid_, other->target_uid_);
  swap(deal_add_friend_result_, other->deal_add_friend_result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DealAddFriendRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DealAddFriendRsp

// int32 retcode = 1;
void DealAddFriendRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 DealAddFriendRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.DealAddFriendRsp.retcode)
  return retcode_;
}
void DealAddFriendRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.DealAddFriendRsp.retcode)
}

// uint32 target_uid = 5;
void DealAddFriendRsp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 DealAddFriendRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.DealAddFriendRsp.target_uid)
  return target_uid_;
}
void DealAddFriendRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.DealAddFriendRsp.target_uid)
}

// .proto.DealAddFriendResultType deal_add_friend_result = 6;
void DealAddFriendRsp::clear_deal_add_friend_result() {
  deal_add_friend_result_ = 0;
}
::proto::DealAddFriendResultType DealAddFriendRsp::deal_add_friend_result() const {
  // @@protoc_insertion_point(field_get:proto.DealAddFriendRsp.deal_add_friend_result)
  return static_cast< ::proto::DealAddFriendResultType >(deal_add_friend_result_);
}
void DealAddFriendRsp::set_deal_add_friend_result(::proto::DealAddFriendResultType value) {
  
  deal_add_friend_result_ = value;
  // @@protoc_insertion_point(field_set:proto.DealAddFriendRsp.deal_add_friend_result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPlayerSocialDetailReq::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPlayerSocialDetailReq::GetPlayerSocialDetailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetPlayerSocialDetailReq)
}
GetPlayerSocialDetailReq::GetPlayerSocialDetailReq(const GetPlayerSocialDetailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:proto.GetPlayerSocialDetailReq)
}

void GetPlayerSocialDetailReq::SharedCtor() {
  uid_ = 0u;
  _cached_size_ = 0;
}

GetPlayerSocialDetailReq::~GetPlayerSocialDetailReq() {
  // @@protoc_insertion_point(destructor:proto.GetPlayerSocialDetailReq)
  SharedDtor();
}

void GetPlayerSocialDetailReq::SharedDtor() {
}

void GetPlayerSocialDetailReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPlayerSocialDetailReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPlayerSocialDetailReq& GetPlayerSocialDetailReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetPlayerSocialDetailReq* GetPlayerSocialDetailReq::New(::google::protobuf::Arena* arena) const {
  GetPlayerSocialDetailReq* n = new GetPlayerSocialDetailReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPlayerSocialDetailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetPlayerSocialDetailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_ = 0u;
  _internal_metadata_.Clear();
}

bool GetPlayerSocialDetailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetPlayerSocialDetailReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetPlayerSocialDetailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetPlayerSocialDetailReq)
  return false;
#undef DO_
}

void GetPlayerSocialDetailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetPlayerSocialDetailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 9;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetPlayerSocialDetailReq)
}

::google::protobuf::uint8* GetPlayerSocialDetailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetPlayerSocialDetailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 9;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetPlayerSocialDetailReq)
  return target;
}

size_t GetPlayerSocialDetailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetPlayerSocialDetailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 uid = 9;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPlayerSocialDetailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetPlayerSocialDetailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPlayerSocialDetailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPlayerSocialDetailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetPlayerSocialDetailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetPlayerSocialDetailReq)
    MergeFrom(*source);
  }
}

void GetPlayerSocialDetailReq::MergeFrom(const GetPlayerSocialDetailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetPlayerSocialDetailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void GetPlayerSocialDetailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetPlayerSocialDetailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPlayerSocialDetailReq::CopyFrom(const GetPlayerSocialDetailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetPlayerSocialDetailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPlayerSocialDetailReq::IsInitialized() const {
  return true;
}

void GetPlayerSocialDetailReq::Swap(GetPlayerSocialDetailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPlayerSocialDetailReq::InternalSwap(GetPlayerSocialDetailReq* other) {
  using std::swap;
  swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPlayerSocialDetailReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPlayerSocialDetailReq

// uint32 uid = 9;
void GetPlayerSocialDetailReq::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 GetPlayerSocialDetailReq::uid() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerSocialDetailReq.uid)
  return uid_;
}
void GetPlayerSocialDetailReq::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerSocialDetailReq.uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPlayerSocialDetailRsp::kDetailDataFieldNumber;
const int GetPlayerSocialDetailRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPlayerSocialDetailRsp::GetPlayerSocialDetailRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetPlayerSocialDetailRsp)
}
GetPlayerSocialDetailRsp::GetPlayerSocialDetailRsp(const GetPlayerSocialDetailRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_detail_data()) {
    detail_data_ = new ::proto::SocialDetail(*from.detail_data_);
  } else {
    detail_data_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GetPlayerSocialDetailRsp)
}

void GetPlayerSocialDetailRsp::SharedCtor() {
  ::memset(&detail_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&detail_data_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

GetPlayerSocialDetailRsp::~GetPlayerSocialDetailRsp() {
  // @@protoc_insertion_point(destructor:proto.GetPlayerSocialDetailRsp)
  SharedDtor();
}

void GetPlayerSocialDetailRsp::SharedDtor() {
  if (this != internal_default_instance()) delete detail_data_;
}

void GetPlayerSocialDetailRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPlayerSocialDetailRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPlayerSocialDetailRsp& GetPlayerSocialDetailRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetPlayerSocialDetailRsp* GetPlayerSocialDetailRsp::New(::google::protobuf::Arena* arena) const {
  GetPlayerSocialDetailRsp* n = new GetPlayerSocialDetailRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPlayerSocialDetailRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetPlayerSocialDetailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && detail_data_ != NULL) {
    delete detail_data_;
  }
  detail_data_ = NULL;
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool GetPlayerSocialDetailRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetPlayerSocialDetailRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SocialDetail detail_data = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_detail_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetPlayerSocialDetailRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetPlayerSocialDetailRsp)
  return false;
#undef DO_
}

void GetPlayerSocialDetailRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetPlayerSocialDetailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // .proto.SocialDetail detail_data = 12;
  if (this->has_detail_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->detail_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetPlayerSocialDetailRsp)
}

::google::protobuf::uint8* GetPlayerSocialDetailRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetPlayerSocialDetailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // .proto.SocialDetail detail_data = 12;
  if (this->has_detail_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->detail_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetPlayerSocialDetailRsp)
  return target;
}

size_t GetPlayerSocialDetailRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetPlayerSocialDetailRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.SocialDetail detail_data = 12;
  if (this->has_detail_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->detail_data_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPlayerSocialDetailRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetPlayerSocialDetailRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPlayerSocialDetailRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPlayerSocialDetailRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetPlayerSocialDetailRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetPlayerSocialDetailRsp)
    MergeFrom(*source);
  }
}

void GetPlayerSocialDetailRsp::MergeFrom(const GetPlayerSocialDetailRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetPlayerSocialDetailRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_detail_data()) {
    mutable_detail_data()->::proto::SocialDetail::MergeFrom(from.detail_data());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetPlayerSocialDetailRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetPlayerSocialDetailRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPlayerSocialDetailRsp::CopyFrom(const GetPlayerSocialDetailRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetPlayerSocialDetailRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPlayerSocialDetailRsp::IsInitialized() const {
  return true;
}

void GetPlayerSocialDetailRsp::Swap(GetPlayerSocialDetailRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPlayerSocialDetailRsp::InternalSwap(GetPlayerSocialDetailRsp* other) {
  using std::swap;
  swap(detail_data_, other->detail_data_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPlayerSocialDetailRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPlayerSocialDetailRsp

// .proto.SocialDetail detail_data = 12;
bool GetPlayerSocialDetailRsp::has_detail_data() const {
  return this != internal_default_instance() && detail_data_ != NULL;
}
void GetPlayerSocialDetailRsp::clear_detail_data() {
  if (GetArenaNoVirtual() == NULL && detail_data_ != NULL) delete detail_data_;
  detail_data_ = NULL;
}
const ::proto::SocialDetail& GetPlayerSocialDetailRsp::detail_data() const {
  const ::proto::SocialDetail* p = detail_data_;
  // @@protoc_insertion_point(field_get:proto.GetPlayerSocialDetailRsp.detail_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SocialDetail*>(
      &::proto::_SocialDetail_default_instance_);
}
::proto::SocialDetail* GetPlayerSocialDetailRsp::mutable_detail_data() {
  
  if (detail_data_ == NULL) {
    detail_data_ = new ::proto::SocialDetail;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerSocialDetailRsp.detail_data)
  return detail_data_;
}
::proto::SocialDetail* GetPlayerSocialDetailRsp::release_detail_data() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerSocialDetailRsp.detail_data)
  
  ::proto::SocialDetail* temp = detail_data_;
  detail_data_ = NULL;
  return temp;
}
void GetPlayerSocialDetailRsp::set_allocated_detail_data(::proto::SocialDetail* detail_data) {
  delete detail_data_;
  detail_data_ = detail_data;
  if (detail_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerSocialDetailRsp.detail_data)
}

// int32 retcode = 1;
void GetPlayerSocialDetailRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetPlayerSocialDetailRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerSocialDetailRsp.retcode)
  return retcode_;
}
void GetPlayerSocialDetailRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerSocialDetailRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteFriendReq::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteFriendReq::DeleteFriendReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DeleteFriendReq)
}
DeleteFriendReq::DeleteFriendReq(const DeleteFriendReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.DeleteFriendReq)
}

void DeleteFriendReq::SharedCtor() {
  target_uid_ = 0u;
  _cached_size_ = 0;
}

DeleteFriendReq::~DeleteFriendReq() {
  // @@protoc_insertion_point(destructor:proto.DeleteFriendReq)
  SharedDtor();
}

void DeleteFriendReq::SharedDtor() {
}

void DeleteFriendReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteFriendReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteFriendReq& DeleteFriendReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteFriendReq* DeleteFriendReq::New(::google::protobuf::Arena* arena) const {
  DeleteFriendReq* n = new DeleteFriendReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteFriendReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeleteFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool DeleteFriendReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DeleteFriendReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DeleteFriendReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DeleteFriendReq)
  return false;
#undef DO_
}

void DeleteFriendReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DeleteFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 13;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DeleteFriendReq)
}

::google::protobuf::uint8* DeleteFriendReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeleteFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 13;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeleteFriendReq)
  return target;
}

size_t DeleteFriendReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeleteFriendReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 13;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteFriendReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DeleteFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteFriendReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteFriendReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DeleteFriendReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DeleteFriendReq)
    MergeFrom(*source);
  }
}

void DeleteFriendReq::MergeFrom(const DeleteFriendReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DeleteFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void DeleteFriendReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DeleteFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteFriendReq::CopyFrom(const DeleteFriendReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeleteFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteFriendReq::IsInitialized() const {
  return true;
}

void DeleteFriendReq::Swap(DeleteFriendReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteFriendReq::InternalSwap(DeleteFriendReq* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteFriendReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteFriendReq

// uint32 target_uid = 13;
void DeleteFriendReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 DeleteFriendReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.DeleteFriendReq.target_uid)
  return target_uid_;
}
void DeleteFriendReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.DeleteFriendReq.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteFriendRsp::kTargetUidFieldNumber;
const int DeleteFriendRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteFriendRsp::DeleteFriendRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DeleteFriendRsp)
}
DeleteFriendRsp::DeleteFriendRsp(const DeleteFriendRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_uid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.DeleteFriendRsp)
}

void DeleteFriendRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  _cached_size_ = 0;
}

DeleteFriendRsp::~DeleteFriendRsp() {
  // @@protoc_insertion_point(destructor:proto.DeleteFriendRsp)
  SharedDtor();
}

void DeleteFriendRsp::SharedDtor() {
}

void DeleteFriendRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteFriendRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteFriendRsp& DeleteFriendRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteFriendRsp* DeleteFriendRsp::New(::google::protobuf::Arena* arena) const {
  DeleteFriendRsp* n = new DeleteFriendRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteFriendRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeleteFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  _internal_metadata_.Clear();
}

bool DeleteFriendRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DeleteFriendRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DeleteFriendRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DeleteFriendRsp)
  return false;
#undef DO_
}

void DeleteFriendRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DeleteFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->retcode(), output);
  }

  // uint32 target_uid = 14;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DeleteFriendRsp)
}

::google::protobuf::uint8* DeleteFriendRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeleteFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->retcode(), target);
  }

  // uint32 target_uid = 14;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeleteFriendRsp)
  return target;
}

size_t DeleteFriendRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeleteFriendRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 5;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 target_uid = 14;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteFriendRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DeleteFriendRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteFriendRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteFriendRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DeleteFriendRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DeleteFriendRsp)
    MergeFrom(*source);
  }
}

void DeleteFriendRsp::MergeFrom(const DeleteFriendRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DeleteFriendRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void DeleteFriendRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DeleteFriendRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteFriendRsp::CopyFrom(const DeleteFriendRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeleteFriendRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteFriendRsp::IsInitialized() const {
  return true;
}

void DeleteFriendRsp::Swap(DeleteFriendRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteFriendRsp::InternalSwap(DeleteFriendRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteFriendRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteFriendRsp

// uint32 target_uid = 14;
void DeleteFriendRsp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 DeleteFriendRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.DeleteFriendRsp.target_uid)
  return target_uid_;
}
void DeleteFriendRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.DeleteFriendRsp.target_uid)
}

// int32 retcode = 5;
void DeleteFriendRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 DeleteFriendRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.DeleteFriendRsp.retcode)
  return retcode_;
}
void DeleteFriendRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.DeleteFriendRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerBirthdayReq::kBirthdayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerBirthdayReq::SetPlayerBirthdayReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPlayerBirthdayReq)
}
SetPlayerBirthdayReq::SetPlayerBirthdayReq(const SetPlayerBirthdayReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_birthday()) {
    birthday_ = new ::proto::Birthday(*from.birthday_);
  } else {
    birthday_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.SetPlayerBirthdayReq)
}

void SetPlayerBirthdayReq::SharedCtor() {
  birthday_ = NULL;
  _cached_size_ = 0;
}

SetPlayerBirthdayReq::~SetPlayerBirthdayReq() {
  // @@protoc_insertion_point(destructor:proto.SetPlayerBirthdayReq)
  SharedDtor();
}

void SetPlayerBirthdayReq::SharedDtor() {
  if (this != internal_default_instance()) delete birthday_;
}

void SetPlayerBirthdayReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerBirthdayReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPlayerBirthdayReq& SetPlayerBirthdayReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPlayerBirthdayReq* SetPlayerBirthdayReq::New(::google::protobuf::Arena* arena) const {
  SetPlayerBirthdayReq* n = new SetPlayerBirthdayReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerBirthdayReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPlayerBirthdayReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && birthday_ != NULL) {
    delete birthday_;
  }
  birthday_ = NULL;
  _internal_metadata_.Clear();
}

bool SetPlayerBirthdayReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPlayerBirthdayReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.Birthday birthday = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_birthday()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPlayerBirthdayReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPlayerBirthdayReq)
  return false;
#undef DO_
}

void SetPlayerBirthdayReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPlayerBirthdayReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Birthday birthday = 9;
  if (this->has_birthday()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->birthday_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPlayerBirthdayReq)
}

::google::protobuf::uint8* SetPlayerBirthdayReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPlayerBirthdayReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Birthday birthday = 9;
  if (this->has_birthday()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->birthday_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPlayerBirthdayReq)
  return target;
}

size_t SetPlayerBirthdayReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPlayerBirthdayReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Birthday birthday = 9;
  if (this->has_birthday()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->birthday_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerBirthdayReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPlayerBirthdayReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPlayerBirthdayReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerBirthdayReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPlayerBirthdayReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPlayerBirthdayReq)
    MergeFrom(*source);
  }
}

void SetPlayerBirthdayReq::MergeFrom(const SetPlayerBirthdayReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPlayerBirthdayReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_birthday()) {
    mutable_birthday()->::proto::Birthday::MergeFrom(from.birthday());
  }
}

void SetPlayerBirthdayReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPlayerBirthdayReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerBirthdayReq::CopyFrom(const SetPlayerBirthdayReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPlayerBirthdayReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerBirthdayReq::IsInitialized() const {
  return true;
}

void SetPlayerBirthdayReq::Swap(SetPlayerBirthdayReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerBirthdayReq::InternalSwap(SetPlayerBirthdayReq* other) {
  using std::swap;
  swap(birthday_, other->birthday_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerBirthdayReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerBirthdayReq

// .proto.Birthday birthday = 9;
bool SetPlayerBirthdayReq::has_birthday() const {
  return this != internal_default_instance() && birthday_ != NULL;
}
void SetPlayerBirthdayReq::clear_birthday() {
  if (GetArenaNoVirtual() == NULL && birthday_ != NULL) delete birthday_;
  birthday_ = NULL;
}
const ::proto::Birthday& SetPlayerBirthdayReq::birthday() const {
  const ::proto::Birthday* p = birthday_;
  // @@protoc_insertion_point(field_get:proto.SetPlayerBirthdayReq.birthday)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Birthday*>(
      &::proto::_Birthday_default_instance_);
}
::proto::Birthday* SetPlayerBirthdayReq::mutable_birthday() {
  
  if (birthday_ == NULL) {
    birthday_ = new ::proto::Birthday;
  }
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerBirthdayReq.birthday)
  return birthday_;
}
::proto::Birthday* SetPlayerBirthdayReq::release_birthday() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerBirthdayReq.birthday)
  
  ::proto::Birthday* temp = birthday_;
  birthday_ = NULL;
  return temp;
}
void SetPlayerBirthdayReq::set_allocated_birthday(::proto::Birthday* birthday) {
  delete birthday_;
  birthday_ = birthday;
  if (birthday) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerBirthdayReq.birthday)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerBirthdayRsp::kBirthdayFieldNumber;
const int SetPlayerBirthdayRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerBirthdayRsp::SetPlayerBirthdayRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPlayerBirthdayRsp)
}
SetPlayerBirthdayRsp::SetPlayerBirthdayRsp(const SetPlayerBirthdayRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_birthday()) {
    birthday_ = new ::proto::Birthday(*from.birthday_);
  } else {
    birthday_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.SetPlayerBirthdayRsp)
}

void SetPlayerBirthdayRsp::SharedCtor() {
  ::memset(&birthday_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&birthday_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

SetPlayerBirthdayRsp::~SetPlayerBirthdayRsp() {
  // @@protoc_insertion_point(destructor:proto.SetPlayerBirthdayRsp)
  SharedDtor();
}

void SetPlayerBirthdayRsp::SharedDtor() {
  if (this != internal_default_instance()) delete birthday_;
}

void SetPlayerBirthdayRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerBirthdayRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPlayerBirthdayRsp& SetPlayerBirthdayRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPlayerBirthdayRsp* SetPlayerBirthdayRsp::New(::google::protobuf::Arena* arena) const {
  SetPlayerBirthdayRsp* n = new SetPlayerBirthdayRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerBirthdayRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPlayerBirthdayRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && birthday_ != NULL) {
    delete birthday_;
  }
  birthday_ = NULL;
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool SetPlayerBirthdayRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPlayerBirthdayRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.Birthday birthday = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_birthday()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPlayerBirthdayRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPlayerBirthdayRsp)
  return false;
#undef DO_
}

void SetPlayerBirthdayRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPlayerBirthdayRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Birthday birthday = 2;
  if (this->has_birthday()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->birthday_, output);
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPlayerBirthdayRsp)
}

::google::protobuf::uint8* SetPlayerBirthdayRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPlayerBirthdayRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Birthday birthday = 2;
  if (this->has_birthday()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->birthday_, deterministic, target);
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPlayerBirthdayRsp)
  return target;
}

size_t SetPlayerBirthdayRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPlayerBirthdayRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Birthday birthday = 2;
  if (this->has_birthday()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->birthday_);
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerBirthdayRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPlayerBirthdayRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPlayerBirthdayRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerBirthdayRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPlayerBirthdayRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPlayerBirthdayRsp)
    MergeFrom(*source);
  }
}

void SetPlayerBirthdayRsp::MergeFrom(const SetPlayerBirthdayRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPlayerBirthdayRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_birthday()) {
    mutable_birthday()->::proto::Birthday::MergeFrom(from.birthday());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetPlayerBirthdayRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPlayerBirthdayRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerBirthdayRsp::CopyFrom(const SetPlayerBirthdayRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPlayerBirthdayRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerBirthdayRsp::IsInitialized() const {
  return true;
}

void SetPlayerBirthdayRsp::Swap(SetPlayerBirthdayRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerBirthdayRsp::InternalSwap(SetPlayerBirthdayRsp* other) {
  using std::swap;
  swap(birthday_, other->birthday_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerBirthdayRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerBirthdayRsp

// .proto.Birthday birthday = 2;
bool SetPlayerBirthdayRsp::has_birthday() const {
  return this != internal_default_instance() && birthday_ != NULL;
}
void SetPlayerBirthdayRsp::clear_birthday() {
  if (GetArenaNoVirtual() == NULL && birthday_ != NULL) delete birthday_;
  birthday_ = NULL;
}
const ::proto::Birthday& SetPlayerBirthdayRsp::birthday() const {
  const ::proto::Birthday* p = birthday_;
  // @@protoc_insertion_point(field_get:proto.SetPlayerBirthdayRsp.birthday)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Birthday*>(
      &::proto::_Birthday_default_instance_);
}
::proto::Birthday* SetPlayerBirthdayRsp::mutable_birthday() {
  
  if (birthday_ == NULL) {
    birthday_ = new ::proto::Birthday;
  }
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerBirthdayRsp.birthday)
  return birthday_;
}
::proto::Birthday* SetPlayerBirthdayRsp::release_birthday() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerBirthdayRsp.birthday)
  
  ::proto::Birthday* temp = birthday_;
  birthday_ = NULL;
  return temp;
}
void SetPlayerBirthdayRsp::set_allocated_birthday(::proto::Birthday* birthday) {
  delete birthday_;
  birthday_ = birthday;
  if (birthday) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerBirthdayRsp.birthday)
}

// int32 retcode = 5;
void SetPlayerBirthdayRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SetPlayerBirthdayRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerBirthdayRsp.retcode)
  return retcode_;
}
void SetPlayerBirthdayRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerBirthdayRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerSignatureReq::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerSignatureReq::SetPlayerSignatureReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPlayerSignatureReq)
}
SetPlayerSignatureReq::SetPlayerSignatureReq(const SetPlayerSignatureReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.SetPlayerSignatureReq)
}

void SetPlayerSignatureReq::SharedCtor() {
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SetPlayerSignatureReq::~SetPlayerSignatureReq() {
  // @@protoc_insertion_point(destructor:proto.SetPlayerSignatureReq)
  SharedDtor();
}

void SetPlayerSignatureReq::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetPlayerSignatureReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerSignatureReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPlayerSignatureReq& SetPlayerSignatureReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPlayerSignatureReq* SetPlayerSignatureReq::New(::google::protobuf::Arena* arena) const {
  SetPlayerSignatureReq* n = new SetPlayerSignatureReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerSignatureReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPlayerSignatureReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SetPlayerSignatureReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPlayerSignatureReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string signature = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signature().data(), static_cast<int>(this->signature().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SetPlayerSignatureReq.signature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPlayerSignatureReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPlayerSignatureReq)
  return false;
#undef DO_
}

void SetPlayerSignatureReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPlayerSignatureReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string signature = 3;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SetPlayerSignatureReq.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->signature(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPlayerSignatureReq)
}

::google::protobuf::uint8* SetPlayerSignatureReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPlayerSignatureReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string signature = 3;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SetPlayerSignatureReq.signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->signature(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPlayerSignatureReq)
  return target;
}

size_t SetPlayerSignatureReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPlayerSignatureReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string signature = 3;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerSignatureReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPlayerSignatureReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPlayerSignatureReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerSignatureReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPlayerSignatureReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPlayerSignatureReq)
    MergeFrom(*source);
  }
}

void SetPlayerSignatureReq::MergeFrom(const SetPlayerSignatureReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPlayerSignatureReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
}

void SetPlayerSignatureReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPlayerSignatureReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerSignatureReq::CopyFrom(const SetPlayerSignatureReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPlayerSignatureReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerSignatureReq::IsInitialized() const {
  return true;
}

void SetPlayerSignatureReq::Swap(SetPlayerSignatureReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerSignatureReq::InternalSwap(SetPlayerSignatureReq* other) {
  using std::swap;
  signature_.Swap(&other->signature_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerSignatureReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerSignatureReq

// string signature = 3;
void SetPlayerSignatureReq::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetPlayerSignatureReq::signature() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerSignatureReq.signature)
  return signature_.GetNoArena();
}
void SetPlayerSignatureReq::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetPlayerSignatureReq.signature)
}
#if LANG_CXX11
void SetPlayerSignatureReq::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetPlayerSignatureReq.signature)
}
#endif
void SetPlayerSignatureReq::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetPlayerSignatureReq.signature)
}
void SetPlayerSignatureReq::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetPlayerSignatureReq.signature)
}
::std::string* SetPlayerSignatureReq::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerSignatureReq.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetPlayerSignatureReq::release_signature() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerSignatureReq.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetPlayerSignatureReq::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerSignatureReq.signature)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerSignatureRsp::kSignatureFieldNumber;
const int SetPlayerSignatureRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerSignatureRsp::SetPlayerSignatureRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPlayerSignatureRsp)
}
SetPlayerSignatureRsp::SetPlayerSignatureRsp(const SetPlayerSignatureRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.SetPlayerSignatureRsp)
}

void SetPlayerSignatureRsp::SharedCtor() {
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retcode_ = 0;
  _cached_size_ = 0;
}

SetPlayerSignatureRsp::~SetPlayerSignatureRsp() {
  // @@protoc_insertion_point(destructor:proto.SetPlayerSignatureRsp)
  SharedDtor();
}

void SetPlayerSignatureRsp::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetPlayerSignatureRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerSignatureRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPlayerSignatureRsp& SetPlayerSignatureRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPlayerSignatureRsp* SetPlayerSignatureRsp::New(::google::protobuf::Arena* arena) const {
  SetPlayerSignatureRsp* n = new SetPlayerSignatureRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerSignatureRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPlayerSignatureRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool SetPlayerSignatureRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPlayerSignatureRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string signature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signature().data(), static_cast<int>(this->signature().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SetPlayerSignatureRsp.signature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPlayerSignatureRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPlayerSignatureRsp)
  return false;
#undef DO_
}

void SetPlayerSignatureRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPlayerSignatureRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string signature = 1;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SetPlayerSignatureRsp.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->signature(), output);
  }

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPlayerSignatureRsp)
}

::google::protobuf::uint8* SetPlayerSignatureRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPlayerSignatureRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string signature = 1;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SetPlayerSignatureRsp.signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->signature(), target);
  }

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPlayerSignatureRsp)
  return target;
}

size_t SetPlayerSignatureRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPlayerSignatureRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string signature = 1;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature());
  }

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerSignatureRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPlayerSignatureRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPlayerSignatureRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerSignatureRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPlayerSignatureRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPlayerSignatureRsp)
    MergeFrom(*source);
  }
}

void SetPlayerSignatureRsp::MergeFrom(const SetPlayerSignatureRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPlayerSignatureRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetPlayerSignatureRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPlayerSignatureRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerSignatureRsp::CopyFrom(const SetPlayerSignatureRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPlayerSignatureRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerSignatureRsp::IsInitialized() const {
  return true;
}

void SetPlayerSignatureRsp::Swap(SetPlayerSignatureRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerSignatureRsp::InternalSwap(SetPlayerSignatureRsp* other) {
  using std::swap;
  signature_.Swap(&other->signature_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerSignatureRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerSignatureRsp

// string signature = 1;
void SetPlayerSignatureRsp::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetPlayerSignatureRsp::signature() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerSignatureRsp.signature)
  return signature_.GetNoArena();
}
void SetPlayerSignatureRsp::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetPlayerSignatureRsp.signature)
}
#if LANG_CXX11
void SetPlayerSignatureRsp::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetPlayerSignatureRsp.signature)
}
#endif
void SetPlayerSignatureRsp::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetPlayerSignatureRsp.signature)
}
void SetPlayerSignatureRsp::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetPlayerSignatureRsp.signature)
}
::std::string* SetPlayerSignatureRsp::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerSignatureRsp.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetPlayerSignatureRsp::release_signature() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerSignatureRsp.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetPlayerSignatureRsp::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerSignatureRsp.signature)
}

// int32 retcode = 4;
void SetPlayerSignatureRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SetPlayerSignatureRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerSignatureRsp.retcode)
  return retcode_;
}
void SetPlayerSignatureRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerSignatureRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerHeadImageReq::kAvatarIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerHeadImageReq::SetPlayerHeadImageReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPlayerHeadImageReq)
}
SetPlayerHeadImageReq::SetPlayerHeadImageReq(const SetPlayerHeadImageReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  avatar_id_ = from.avatar_id_;
  // @@protoc_insertion_point(copy_constructor:proto.SetPlayerHeadImageReq)
}

void SetPlayerHeadImageReq::SharedCtor() {
  avatar_id_ = 0u;
  _cached_size_ = 0;
}

SetPlayerHeadImageReq::~SetPlayerHeadImageReq() {
  // @@protoc_insertion_point(destructor:proto.SetPlayerHeadImageReq)
  SharedDtor();
}

void SetPlayerHeadImageReq::SharedDtor() {
}

void SetPlayerHeadImageReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerHeadImageReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPlayerHeadImageReq& SetPlayerHeadImageReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPlayerHeadImageReq* SetPlayerHeadImageReq::New(::google::protobuf::Arena* arena) const {
  SetPlayerHeadImageReq* n = new SetPlayerHeadImageReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerHeadImageReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPlayerHeadImageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  avatar_id_ = 0u;
  _internal_metadata_.Clear();
}

bool SetPlayerHeadImageReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPlayerHeadImageReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 avatar_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPlayerHeadImageReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPlayerHeadImageReq)
  return false;
#undef DO_
}

void SetPlayerHeadImageReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPlayerHeadImageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 7;
  if (this->avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->avatar_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPlayerHeadImageReq)
}

::google::protobuf::uint8* SetPlayerHeadImageReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPlayerHeadImageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 7;
  if (this->avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->avatar_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPlayerHeadImageReq)
  return target;
}

size_t SetPlayerHeadImageReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPlayerHeadImageReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 avatar_id = 7;
  if (this->avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerHeadImageReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPlayerHeadImageReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPlayerHeadImageReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerHeadImageReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPlayerHeadImageReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPlayerHeadImageReq)
    MergeFrom(*source);
  }
}

void SetPlayerHeadImageReq::MergeFrom(const SetPlayerHeadImageReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPlayerHeadImageReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_id() != 0) {
    set_avatar_id(from.avatar_id());
  }
}

void SetPlayerHeadImageReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPlayerHeadImageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerHeadImageReq::CopyFrom(const SetPlayerHeadImageReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPlayerHeadImageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerHeadImageReq::IsInitialized() const {
  return true;
}

void SetPlayerHeadImageReq::Swap(SetPlayerHeadImageReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerHeadImageReq::InternalSwap(SetPlayerHeadImageReq* other) {
  using std::swap;
  swap(avatar_id_, other->avatar_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerHeadImageReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerHeadImageReq

// uint32 avatar_id = 7;
void SetPlayerHeadImageReq::clear_avatar_id() {
  avatar_id_ = 0u;
}
::google::protobuf::uint32 SetPlayerHeadImageReq::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerHeadImageReq.avatar_id)
  return avatar_id_;
}
void SetPlayerHeadImageReq::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerHeadImageReq.avatar_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerHeadImageRsp::kProfilePictureFieldNumber;
const int SetPlayerHeadImageRsp::kAvatarIdFieldNumber;
const int SetPlayerHeadImageRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerHeadImageRsp::SetPlayerHeadImageRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPlayerHeadImageRsp)
}
SetPlayerHeadImageRsp::SetPlayerHeadImageRsp(const SetPlayerHeadImageRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_profile_picture()) {
    profile_picture_ = new ::proto::ProfilePicture(*from.profile_picture_);
  } else {
    profile_picture_ = NULL;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&avatar_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(avatar_id_));
  // @@protoc_insertion_point(copy_constructor:proto.SetPlayerHeadImageRsp)
}

void SetPlayerHeadImageRsp::SharedCtor() {
  ::memset(&profile_picture_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avatar_id_) -
      reinterpret_cast<char*>(&profile_picture_)) + sizeof(avatar_id_));
  _cached_size_ = 0;
}

SetPlayerHeadImageRsp::~SetPlayerHeadImageRsp() {
  // @@protoc_insertion_point(destructor:proto.SetPlayerHeadImageRsp)
  SharedDtor();
}

void SetPlayerHeadImageRsp::SharedDtor() {
  if (this != internal_default_instance()) delete profile_picture_;
}

void SetPlayerHeadImageRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerHeadImageRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPlayerHeadImageRsp& SetPlayerHeadImageRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPlayerHeadImageRsp* SetPlayerHeadImageRsp::New(::google::protobuf::Arena* arena) const {
  SetPlayerHeadImageRsp* n = new SetPlayerHeadImageRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerHeadImageRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPlayerHeadImageRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && profile_picture_ != NULL) {
    delete profile_picture_;
  }
  profile_picture_ = NULL;
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avatar_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(avatar_id_));
  _internal_metadata_.Clear();
}

bool SetPlayerHeadImageRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPlayerHeadImageRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 avatar_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ProfilePicture profile_picture = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_profile_picture()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPlayerHeadImageRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPlayerHeadImageRsp)
  return false;
#undef DO_
}

void SetPlayerHeadImageRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPlayerHeadImageRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 avatar_id = 5;
  if (this->avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->avatar_id(), output);
  }

  // .proto.ProfilePicture profile_picture = 6;
  if (this->has_profile_picture()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->profile_picture_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPlayerHeadImageRsp)
}

::google::protobuf::uint8* SetPlayerHeadImageRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPlayerHeadImageRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 avatar_id = 5;
  if (this->avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->avatar_id(), target);
  }

  // .proto.ProfilePicture profile_picture = 6;
  if (this->has_profile_picture()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->profile_picture_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPlayerHeadImageRsp)
  return target;
}

size_t SetPlayerHeadImageRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPlayerHeadImageRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.ProfilePicture profile_picture = 6;
  if (this->has_profile_picture()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->profile_picture_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 avatar_id = 5;
  if (this->avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerHeadImageRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPlayerHeadImageRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPlayerHeadImageRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerHeadImageRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPlayerHeadImageRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPlayerHeadImageRsp)
    MergeFrom(*source);
  }
}

void SetPlayerHeadImageRsp::MergeFrom(const SetPlayerHeadImageRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPlayerHeadImageRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_profile_picture()) {
    mutable_profile_picture()->::proto::ProfilePicture::MergeFrom(from.profile_picture());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.avatar_id() != 0) {
    set_avatar_id(from.avatar_id());
  }
}

void SetPlayerHeadImageRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPlayerHeadImageRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerHeadImageRsp::CopyFrom(const SetPlayerHeadImageRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPlayerHeadImageRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerHeadImageRsp::IsInitialized() const {
  return true;
}

void SetPlayerHeadImageRsp::Swap(SetPlayerHeadImageRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerHeadImageRsp::InternalSwap(SetPlayerHeadImageRsp* other) {
  using std::swap;
  swap(profile_picture_, other->profile_picture_);
  swap(retcode_, other->retcode_);
  swap(avatar_id_, other->avatar_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerHeadImageRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerHeadImageRsp

// .proto.ProfilePicture profile_picture = 6;
bool SetPlayerHeadImageRsp::has_profile_picture() const {
  return this != internal_default_instance() && profile_picture_ != NULL;
}
void SetPlayerHeadImageRsp::clear_profile_picture() {
  if (GetArenaNoVirtual() == NULL && profile_picture_ != NULL) delete profile_picture_;
  profile_picture_ = NULL;
}
const ::proto::ProfilePicture& SetPlayerHeadImageRsp::profile_picture() const {
  const ::proto::ProfilePicture* p = profile_picture_;
  // @@protoc_insertion_point(field_get:proto.SetPlayerHeadImageRsp.profile_picture)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ProfilePicture*>(
      &::proto::_ProfilePicture_default_instance_);
}
::proto::ProfilePicture* SetPlayerHeadImageRsp::mutable_profile_picture() {
  
  if (profile_picture_ == NULL) {
    profile_picture_ = new ::proto::ProfilePicture;
  }
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerHeadImageRsp.profile_picture)
  return profile_picture_;
}
::proto::ProfilePicture* SetPlayerHeadImageRsp::release_profile_picture() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerHeadImageRsp.profile_picture)
  
  ::proto::ProfilePicture* temp = profile_picture_;
  profile_picture_ = NULL;
  return temp;
}
void SetPlayerHeadImageRsp::set_allocated_profile_picture(::proto::ProfilePicture* profile_picture) {
  delete profile_picture_;
  profile_picture_ = profile_picture;
  if (profile_picture) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerHeadImageRsp.profile_picture)
}

// uint32 avatar_id = 5;
void SetPlayerHeadImageRsp::clear_avatar_id() {
  avatar_id_ = 0u;
}
::google::protobuf::uint32 SetPlayerHeadImageRsp::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerHeadImageRsp.avatar_id)
  return avatar_id_;
}
void SetPlayerHeadImageRsp::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerHeadImageRsp.avatar_id)
}

// int32 retcode = 1;
void SetPlayerHeadImageRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SetPlayerHeadImageRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerHeadImageRsp.retcode)
  return retcode_;
}
void SetPlayerHeadImageRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerHeadImageRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdatePS4FriendListNotify::kPsnIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdatePS4FriendListNotify::UpdatePS4FriendListNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UpdatePS4FriendListNotify)
}
UpdatePS4FriendListNotify::UpdatePS4FriendListNotify(const UpdatePS4FriendListNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      psn_id_list_(from.psn_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.UpdatePS4FriendListNotify)
}

void UpdatePS4FriendListNotify::SharedCtor() {
  _cached_size_ = 0;
}

UpdatePS4FriendListNotify::~UpdatePS4FriendListNotify() {
  // @@protoc_insertion_point(destructor:proto.UpdatePS4FriendListNotify)
  SharedDtor();
}

void UpdatePS4FriendListNotify::SharedDtor() {
}

void UpdatePS4FriendListNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdatePS4FriendListNotify::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdatePS4FriendListNotify& UpdatePS4FriendListNotify::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdatePS4FriendListNotify* UpdatePS4FriendListNotify::New(::google::protobuf::Arena* arena) const {
  UpdatePS4FriendListNotify* n = new UpdatePS4FriendListNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdatePS4FriendListNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdatePS4FriendListNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  psn_id_list_.Clear();
  _internal_metadata_.Clear();
}

bool UpdatePS4FriendListNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UpdatePS4FriendListNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string psn_id_list = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_psn_id_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->psn_id_list(this->psn_id_list_size() - 1).data(),
            static_cast<int>(this->psn_id_list(this->psn_id_list_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.UpdatePS4FriendListNotify.psn_id_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UpdatePS4FriendListNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UpdatePS4FriendListNotify)
  return false;
#undef DO_
}

void UpdatePS4FriendListNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UpdatePS4FriendListNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string psn_id_list = 15;
  for (int i = 0, n = this->psn_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->psn_id_list(i).data(), static_cast<int>(this->psn_id_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.UpdatePS4FriendListNotify.psn_id_list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->psn_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UpdatePS4FriendListNotify)
}

::google::protobuf::uint8* UpdatePS4FriendListNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdatePS4FriendListNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string psn_id_list = 15;
  for (int i = 0, n = this->psn_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->psn_id_list(i).data(), static_cast<int>(this->psn_id_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.UpdatePS4FriendListNotify.psn_id_list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(15, this->psn_id_list(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdatePS4FriendListNotify)
  return target;
}

size_t UpdatePS4FriendListNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdatePS4FriendListNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string psn_id_list = 15;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->psn_id_list_size());
  for (int i = 0, n = this->psn_id_list_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->psn_id_list(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdatePS4FriendListNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UpdatePS4FriendListNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdatePS4FriendListNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdatePS4FriendListNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UpdatePS4FriendListNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UpdatePS4FriendListNotify)
    MergeFrom(*source);
  }
}

void UpdatePS4FriendListNotify::MergeFrom(const UpdatePS4FriendListNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdatePS4FriendListNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  psn_id_list_.MergeFrom(from.psn_id_list_);
}

void UpdatePS4FriendListNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UpdatePS4FriendListNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdatePS4FriendListNotify::CopyFrom(const UpdatePS4FriendListNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdatePS4FriendListNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatePS4FriendListNotify::IsInitialized() const {
  return true;
}

void UpdatePS4FriendListNotify::Swap(UpdatePS4FriendListNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdatePS4FriendListNotify::InternalSwap(UpdatePS4FriendListNotify* other) {
  using std::swap;
  psn_id_list_.InternalSwap(&other->psn_id_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdatePS4FriendListNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdatePS4FriendListNotify

// repeated string psn_id_list = 15;
int UpdatePS4FriendListNotify::psn_id_list_size() const {
  return psn_id_list_.size();
}
void UpdatePS4FriendListNotify::clear_psn_id_list() {
  psn_id_list_.Clear();
}
const ::std::string& UpdatePS4FriendListNotify::psn_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UpdatePS4FriendListNotify.psn_id_list)
  return psn_id_list_.Get(index);
}
::std::string* UpdatePS4FriendListNotify::mutable_psn_id_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.UpdatePS4FriendListNotify.psn_id_list)
  return psn_id_list_.Mutable(index);
}
void UpdatePS4FriendListNotify::set_psn_id_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.UpdatePS4FriendListNotify.psn_id_list)
  psn_id_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void UpdatePS4FriendListNotify::set_psn_id_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.UpdatePS4FriendListNotify.psn_id_list)
  psn_id_list_.Mutable(index)->assign(std::move(value));
}
#endif
void UpdatePS4FriendListNotify::set_psn_id_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  psn_id_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.UpdatePS4FriendListNotify.psn_id_list)
}
void UpdatePS4FriendListNotify::set_psn_id_list(int index, const char* value, size_t size) {
  psn_id_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.UpdatePS4FriendListNotify.psn_id_list)
}
::std::string* UpdatePS4FriendListNotify::add_psn_id_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.UpdatePS4FriendListNotify.psn_id_list)
  return psn_id_list_.Add();
}
void UpdatePS4FriendListNotify::add_psn_id_list(const ::std::string& value) {
  psn_id_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.UpdatePS4FriendListNotify.psn_id_list)
}
#if LANG_CXX11
void UpdatePS4FriendListNotify::add_psn_id_list(::std::string&& value) {
  psn_id_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.UpdatePS4FriendListNotify.psn_id_list)
}
#endif
void UpdatePS4FriendListNotify::add_psn_id_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  psn_id_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.UpdatePS4FriendListNotify.psn_id_list)
}
void UpdatePS4FriendListNotify::add_psn_id_list(const char* value, size_t size) {
  psn_id_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.UpdatePS4FriendListNotify.psn_id_list)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
UpdatePS4FriendListNotify::psn_id_list() const {
  // @@protoc_insertion_point(field_list:proto.UpdatePS4FriendListNotify.psn_id_list)
  return psn_id_list_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
UpdatePS4FriendListNotify::mutable_psn_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UpdatePS4FriendListNotify.psn_id_list)
  return &psn_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteFriendNotify::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteFriendNotify::DeleteFriendNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DeleteFriendNotify)
}
DeleteFriendNotify::DeleteFriendNotify(const DeleteFriendNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.DeleteFriendNotify)
}

void DeleteFriendNotify::SharedCtor() {
  target_uid_ = 0u;
  _cached_size_ = 0;
}

DeleteFriendNotify::~DeleteFriendNotify() {
  // @@protoc_insertion_point(destructor:proto.DeleteFriendNotify)
  SharedDtor();
}

void DeleteFriendNotify::SharedDtor() {
}

void DeleteFriendNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteFriendNotify::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteFriendNotify& DeleteFriendNotify::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteFriendNotify* DeleteFriendNotify::New(::google::protobuf::Arena* arena) const {
  DeleteFriendNotify* n = new DeleteFriendNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteFriendNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeleteFriendNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool DeleteFriendNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DeleteFriendNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DeleteFriendNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DeleteFriendNotify)
  return false;
#undef DO_
}

void DeleteFriendNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DeleteFriendNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 12;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DeleteFriendNotify)
}

::google::protobuf::uint8* DeleteFriendNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeleteFriendNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 12;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeleteFriendNotify)
  return target;
}

size_t DeleteFriendNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeleteFriendNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 12;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteFriendNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DeleteFriendNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteFriendNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteFriendNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DeleteFriendNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DeleteFriendNotify)
    MergeFrom(*source);
  }
}

void DeleteFriendNotify::MergeFrom(const DeleteFriendNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DeleteFriendNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void DeleteFriendNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DeleteFriendNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteFriendNotify::CopyFrom(const DeleteFriendNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeleteFriendNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteFriendNotify::IsInitialized() const {
  return true;
}

void DeleteFriendNotify::Swap(DeleteFriendNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteFriendNotify::InternalSwap(DeleteFriendNotify* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteFriendNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteFriendNotify

// uint32 target_uid = 12;
void DeleteFriendNotify::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 DeleteFriendNotify::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.DeleteFriendNotify.target_uid)
  return target_uid_;
}
void DeleteFriendNotify::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.DeleteFriendNotify.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddFriendNotify::kTargetUidFieldNumber;
const int AddFriendNotify::kTargetFriendBriefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddFriendNotify::AddFriendNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddFriendNotify)
}
AddFriendNotify::AddFriendNotify(const AddFriendNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_target_friend_brief()) {
    target_friend_brief_ = new ::proto::FriendBrief(*from.target_friend_brief_);
  } else {
    target_friend_brief_ = NULL;
  }
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.AddFriendNotify)
}

void AddFriendNotify::SharedCtor() {
  ::memset(&target_friend_brief_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&target_friend_brief_)) + sizeof(target_uid_));
  _cached_size_ = 0;
}

AddFriendNotify::~AddFriendNotify() {
  // @@protoc_insertion_point(destructor:proto.AddFriendNotify)
  SharedDtor();
}

void AddFriendNotify::SharedDtor() {
  if (this != internal_default_instance()) delete target_friend_brief_;
}

void AddFriendNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddFriendNotify::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddFriendNotify& AddFriendNotify::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddFriendNotify* AddFriendNotify::New(::google::protobuf::Arena* arena) const {
  AddFriendNotify* n = new AddFriendNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddFriendNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddFriendNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && target_friend_brief_ != NULL) {
    delete target_friend_brief_;
  }
  target_friend_brief_ = NULL;
  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool AddFriendNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddFriendNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.FriendBrief target_friend_brief = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_target_friend_brief()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddFriendNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddFriendNotify)
  return false;
#undef DO_
}

void AddFriendNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddFriendNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.FriendBrief target_friend_brief = 10;
  if (this->has_target_friend_brief()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->target_friend_brief_, output);
  }

  // uint32 target_uid = 11;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddFriendNotify)
}

::google::protobuf::uint8* AddFriendNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddFriendNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.FriendBrief target_friend_brief = 10;
  if (this->has_target_friend_brief()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->target_friend_brief_, deterministic, target);
  }

  // uint32 target_uid = 11;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddFriendNotify)
  return target;
}

size_t AddFriendNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddFriendNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.FriendBrief target_friend_brief = 10;
  if (this->has_target_friend_brief()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->target_friend_brief_);
  }

  // uint32 target_uid = 11;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddFriendNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddFriendNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AddFriendNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddFriendNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddFriendNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddFriendNotify)
    MergeFrom(*source);
  }
}

void AddFriendNotify::MergeFrom(const AddFriendNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddFriendNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_target_friend_brief()) {
    mutable_target_friend_brief()->::proto::FriendBrief::MergeFrom(from.target_friend_brief());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void AddFriendNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddFriendNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddFriendNotify::CopyFrom(const AddFriendNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddFriendNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddFriendNotify::IsInitialized() const {
  return true;
}

void AddFriendNotify::Swap(AddFriendNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddFriendNotify::InternalSwap(AddFriendNotify* other) {
  using std::swap;
  swap(target_friend_brief_, other->target_friend_brief_);
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddFriendNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddFriendNotify

// uint32 target_uid = 11;
void AddFriendNotify::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 AddFriendNotify::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.AddFriendNotify.target_uid)
  return target_uid_;
}
void AddFriendNotify::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.AddFriendNotify.target_uid)
}

// .proto.FriendBrief target_friend_brief = 10;
bool AddFriendNotify::has_target_friend_brief() const {
  return this != internal_default_instance() && target_friend_brief_ != NULL;
}
void AddFriendNotify::clear_target_friend_brief() {
  if (GetArenaNoVirtual() == NULL && target_friend_brief_ != NULL) delete target_friend_brief_;
  target_friend_brief_ = NULL;
}
const ::proto::FriendBrief& AddFriendNotify::target_friend_brief() const {
  const ::proto::FriendBrief* p = target_friend_brief_;
  // @@protoc_insertion_point(field_get:proto.AddFriendNotify.target_friend_brief)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::FriendBrief*>(
      &::proto::_FriendBrief_default_instance_);
}
::proto::FriendBrief* AddFriendNotify::mutable_target_friend_brief() {
  
  if (target_friend_brief_ == NULL) {
    target_friend_brief_ = new ::proto::FriendBrief;
  }
  // @@protoc_insertion_point(field_mutable:proto.AddFriendNotify.target_friend_brief)
  return target_friend_brief_;
}
::proto::FriendBrief* AddFriendNotify::release_target_friend_brief() {
  // @@protoc_insertion_point(field_release:proto.AddFriendNotify.target_friend_brief)
  
  ::proto::FriendBrief* temp = target_friend_brief_;
  target_friend_brief_ = NULL;
  return temp;
}
void AddFriendNotify::set_allocated_target_friend_brief(::proto::FriendBrief* target_friend_brief) {
  delete target_friend_brief_;
  target_friend_brief_ = target_friend_brief;
  if (target_friend_brief) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AddFriendNotify.target_friend_brief)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AskAddFriendNotify::kTargetFriendBriefFieldNumber;
const int AskAddFriendNotify::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AskAddFriendNotify::AskAddFriendNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AskAddFriendNotify)
}
AskAddFriendNotify::AskAddFriendNotify(const AskAddFriendNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_target_friend_brief()) {
    target_friend_brief_ = new ::proto::FriendBrief(*from.target_friend_brief_);
  } else {
    target_friend_brief_ = NULL;
  }
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.AskAddFriendNotify)
}

void AskAddFriendNotify::SharedCtor() {
  ::memset(&target_friend_brief_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&target_friend_brief_)) + sizeof(target_uid_));
  _cached_size_ = 0;
}

AskAddFriendNotify::~AskAddFriendNotify() {
  // @@protoc_insertion_point(destructor:proto.AskAddFriendNotify)
  SharedDtor();
}

void AskAddFriendNotify::SharedDtor() {
  if (this != internal_default_instance()) delete target_friend_brief_;
}

void AskAddFriendNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AskAddFriendNotify::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AskAddFriendNotify& AskAddFriendNotify::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

AskAddFriendNotify* AskAddFriendNotify::New(::google::protobuf::Arena* arena) const {
  AskAddFriendNotify* n = new AskAddFriendNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AskAddFriendNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AskAddFriendNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && target_friend_brief_ != NULL) {
    delete target_friend_brief_;
  }
  target_friend_brief_ = NULL;
  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool AskAddFriendNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AskAddFriendNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FriendBrief target_friend_brief = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_target_friend_brief()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AskAddFriendNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AskAddFriendNotify)
  return false;
#undef DO_
}

void AskAddFriendNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AskAddFriendNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 9;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->target_uid(), output);
  }

  // .proto.FriendBrief target_friend_brief = 15;
  if (this->has_target_friend_brief()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->target_friend_brief_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AskAddFriendNotify)
}

::google::protobuf::uint8* AskAddFriendNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AskAddFriendNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 9;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->target_uid(), target);
  }

  // .proto.FriendBrief target_friend_brief = 15;
  if (this->has_target_friend_brief()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->target_friend_brief_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AskAddFriendNotify)
  return target;
}

size_t AskAddFriendNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AskAddFriendNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.FriendBrief target_friend_brief = 15;
  if (this->has_target_friend_brief()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->target_friend_brief_);
  }

  // uint32 target_uid = 9;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AskAddFriendNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AskAddFriendNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AskAddFriendNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AskAddFriendNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AskAddFriendNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AskAddFriendNotify)
    MergeFrom(*source);
  }
}

void AskAddFriendNotify::MergeFrom(const AskAddFriendNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AskAddFriendNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_target_friend_brief()) {
    mutable_target_friend_brief()->::proto::FriendBrief::MergeFrom(from.target_friend_brief());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void AskAddFriendNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AskAddFriendNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AskAddFriendNotify::CopyFrom(const AskAddFriendNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AskAddFriendNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AskAddFriendNotify::IsInitialized() const {
  return true;
}

void AskAddFriendNotify::Swap(AskAddFriendNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AskAddFriendNotify::InternalSwap(AskAddFriendNotify* other) {
  using std::swap;
  swap(target_friend_brief_, other->target_friend_brief_);
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AskAddFriendNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AskAddFriendNotify

// .proto.FriendBrief target_friend_brief = 15;
bool AskAddFriendNotify::has_target_friend_brief() const {
  return this != internal_default_instance() && target_friend_brief_ != NULL;
}
void AskAddFriendNotify::clear_target_friend_brief() {
  if (GetArenaNoVirtual() == NULL && target_friend_brief_ != NULL) delete target_friend_brief_;
  target_friend_brief_ = NULL;
}
const ::proto::FriendBrief& AskAddFriendNotify::target_friend_brief() const {
  const ::proto::FriendBrief* p = target_friend_brief_;
  // @@protoc_insertion_point(field_get:proto.AskAddFriendNotify.target_friend_brief)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::FriendBrief*>(
      &::proto::_FriendBrief_default_instance_);
}
::proto::FriendBrief* AskAddFriendNotify::mutable_target_friend_brief() {
  
  if (target_friend_brief_ == NULL) {
    target_friend_brief_ = new ::proto::FriendBrief;
  }
  // @@protoc_insertion_point(field_mutable:proto.AskAddFriendNotify.target_friend_brief)
  return target_friend_brief_;
}
::proto::FriendBrief* AskAddFriendNotify::release_target_friend_brief() {
  // @@protoc_insertion_point(field_release:proto.AskAddFriendNotify.target_friend_brief)
  
  ::proto::FriendBrief* temp = target_friend_brief_;
  target_friend_brief_ = NULL;
  return temp;
}
void AskAddFriendNotify::set_allocated_target_friend_brief(::proto::FriendBrief* target_friend_brief) {
  delete target_friend_brief_;
  target_friend_brief_ = target_friend_brief;
  if (target_friend_brief) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AskAddFriendNotify.target_friend_brief)
}

// uint32 target_uid = 9;
void AskAddFriendNotify::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 AskAddFriendNotify::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.AskAddFriendNotify.target_uid)
  return target_uid_;
}
void AskAddFriendNotify::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.AskAddFriendNotify.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetNameCardReq::kNameCardIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetNameCardReq::SetNameCardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetNameCardReq)
}
SetNameCardReq::SetNameCardReq(const SetNameCardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_card_id_ = from.name_card_id_;
  // @@protoc_insertion_point(copy_constructor:proto.SetNameCardReq)
}

void SetNameCardReq::SharedCtor() {
  name_card_id_ = 0u;
  _cached_size_ = 0;
}

SetNameCardReq::~SetNameCardReq() {
  // @@protoc_insertion_point(destructor:proto.SetNameCardReq)
  SharedDtor();
}

void SetNameCardReq::SharedDtor() {
}

void SetNameCardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetNameCardReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetNameCardReq& SetNameCardReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetNameCardReq* SetNameCardReq::New(::google::protobuf::Arena* arena) const {
  SetNameCardReq* n = new SetNameCardReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetNameCardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetNameCardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_card_id_ = 0u;
  _internal_metadata_.Clear();
}

bool SetNameCardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetNameCardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 name_card_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &name_card_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetNameCardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetNameCardReq)
  return false;
#undef DO_
}

void SetNameCardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetNameCardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 name_card_id = 10;
  if (this->name_card_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->name_card_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetNameCardReq)
}

::google::protobuf::uint8* SetNameCardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetNameCardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 name_card_id = 10;
  if (this->name_card_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->name_card_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetNameCardReq)
  return target;
}

size_t SetNameCardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetNameCardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 name_card_id = 10;
  if (this->name_card_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->name_card_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetNameCardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetNameCardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetNameCardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetNameCardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetNameCardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetNameCardReq)
    MergeFrom(*source);
  }
}

void SetNameCardReq::MergeFrom(const SetNameCardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetNameCardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name_card_id() != 0) {
    set_name_card_id(from.name_card_id());
  }
}

void SetNameCardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetNameCardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetNameCardReq::CopyFrom(const SetNameCardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetNameCardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetNameCardReq::IsInitialized() const {
  return true;
}

void SetNameCardReq::Swap(SetNameCardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetNameCardReq::InternalSwap(SetNameCardReq* other) {
  using std::swap;
  swap(name_card_id_, other->name_card_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetNameCardReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetNameCardReq

// uint32 name_card_id = 10;
void SetNameCardReq::clear_name_card_id() {
  name_card_id_ = 0u;
}
::google::protobuf::uint32 SetNameCardReq::name_card_id() const {
  // @@protoc_insertion_point(field_get:proto.SetNameCardReq.name_card_id)
  return name_card_id_;
}
void SetNameCardReq::set_name_card_id(::google::protobuf::uint32 value) {
  
  name_card_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetNameCardReq.name_card_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetNameCardRsp::kNameCardIdFieldNumber;
const int SetNameCardRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetNameCardRsp::SetNameCardRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetNameCardRsp)
}
SetNameCardRsp::SetNameCardRsp(const SetNameCardRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&name_card_id_, &from.name_card_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&name_card_id_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.SetNameCardRsp)
}

void SetNameCardRsp::SharedCtor() {
  ::memset(&name_card_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&name_card_id_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

SetNameCardRsp::~SetNameCardRsp() {
  // @@protoc_insertion_point(destructor:proto.SetNameCardRsp)
  SharedDtor();
}

void SetNameCardRsp::SharedDtor() {
}

void SetNameCardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetNameCardRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetNameCardRsp& SetNameCardRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetNameCardRsp* SetNameCardRsp::New(::google::protobuf::Arena* arena) const {
  SetNameCardRsp* n = new SetNameCardRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetNameCardRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetNameCardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&name_card_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&name_card_id_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool SetNameCardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetNameCardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 name_card_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &name_card_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetNameCardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetNameCardRsp)
  return false;
#undef DO_
}

void SetNameCardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetNameCardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 name_card_id = 11;
  if (this->name_card_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->name_card_id(), output);
  }

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetNameCardRsp)
}

::google::protobuf::uint8* SetNameCardRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetNameCardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 name_card_id = 11;
  if (this->name_card_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->name_card_id(), target);
  }

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetNameCardRsp)
  return target;
}

size_t SetNameCardRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetNameCardRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 name_card_id = 11;
  if (this->name_card_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->name_card_id());
  }

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetNameCardRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetNameCardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetNameCardRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetNameCardRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetNameCardRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetNameCardRsp)
    MergeFrom(*source);
  }
}

void SetNameCardRsp::MergeFrom(const SetNameCardRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetNameCardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name_card_id() != 0) {
    set_name_card_id(from.name_card_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetNameCardRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetNameCardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetNameCardRsp::CopyFrom(const SetNameCardRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetNameCardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetNameCardRsp::IsInitialized() const {
  return true;
}

void SetNameCardRsp::Swap(SetNameCardRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetNameCardRsp::InternalSwap(SetNameCardRsp* other) {
  using std::swap;
  swap(name_card_id_, other->name_card_id_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetNameCardRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetNameCardRsp

// uint32 name_card_id = 11;
void SetNameCardRsp::clear_name_card_id() {
  name_card_id_ = 0u;
}
::google::protobuf::uint32 SetNameCardRsp::name_card_id() const {
  // @@protoc_insertion_point(field_get:proto.SetNameCardRsp.name_card_id)
  return name_card_id_;
}
void SetNameCardRsp::set_name_card_id(::google::protobuf::uint32 value) {
  
  name_card_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetNameCardRsp.name_card_id)
}

// int32 retcode = 12;
void SetNameCardRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SetNameCardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetNameCardRsp.retcode)
  return retcode_;
}
void SetNameCardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetNameCardRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAllUnlockNameCardReq::GetAllUnlockNameCardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetAllUnlockNameCardReq)
}
GetAllUnlockNameCardReq::GetAllUnlockNameCardReq(const GetAllUnlockNameCardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GetAllUnlockNameCardReq)
}

void GetAllUnlockNameCardReq::SharedCtor() {
  _cached_size_ = 0;
}

GetAllUnlockNameCardReq::~GetAllUnlockNameCardReq() {
  // @@protoc_insertion_point(destructor:proto.GetAllUnlockNameCardReq)
  SharedDtor();
}

void GetAllUnlockNameCardReq::SharedDtor() {
}

void GetAllUnlockNameCardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAllUnlockNameCardReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAllUnlockNameCardReq& GetAllUnlockNameCardReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAllUnlockNameCardReq* GetAllUnlockNameCardReq::New(::google::protobuf::Arena* arena) const {
  GetAllUnlockNameCardReq* n = new GetAllUnlockNameCardReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAllUnlockNameCardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetAllUnlockNameCardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetAllUnlockNameCardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetAllUnlockNameCardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetAllUnlockNameCardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetAllUnlockNameCardReq)
  return false;
#undef DO_
}

void GetAllUnlockNameCardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetAllUnlockNameCardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetAllUnlockNameCardReq)
}

::google::protobuf::uint8* GetAllUnlockNameCardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetAllUnlockNameCardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetAllUnlockNameCardReq)
  return target;
}

size_t GetAllUnlockNameCardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetAllUnlockNameCardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAllUnlockNameCardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetAllUnlockNameCardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllUnlockNameCardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAllUnlockNameCardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetAllUnlockNameCardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetAllUnlockNameCardReq)
    MergeFrom(*source);
  }
}

void GetAllUnlockNameCardReq::MergeFrom(const GetAllUnlockNameCardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetAllUnlockNameCardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetAllUnlockNameCardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetAllUnlockNameCardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllUnlockNameCardReq::CopyFrom(const GetAllUnlockNameCardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetAllUnlockNameCardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllUnlockNameCardReq::IsInitialized() const {
  return true;
}

void GetAllUnlockNameCardReq::Swap(GetAllUnlockNameCardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAllUnlockNameCardReq::InternalSwap(GetAllUnlockNameCardReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAllUnlockNameCardReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAllUnlockNameCardReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAllUnlockNameCardRsp::kRetcodeFieldNumber;
const int GetAllUnlockNameCardRsp::kNameCardListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAllUnlockNameCardRsp::GetAllUnlockNameCardRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetAllUnlockNameCardRsp)
}
GetAllUnlockNameCardRsp::GetAllUnlockNameCardRsp(const GetAllUnlockNameCardRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      name_card_list_(from.name_card_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GetAllUnlockNameCardRsp)
}

void GetAllUnlockNameCardRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

GetAllUnlockNameCardRsp::~GetAllUnlockNameCardRsp() {
  // @@protoc_insertion_point(destructor:proto.GetAllUnlockNameCardRsp)
  SharedDtor();
}

void GetAllUnlockNameCardRsp::SharedDtor() {
}

void GetAllUnlockNameCardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAllUnlockNameCardRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAllUnlockNameCardRsp& GetAllUnlockNameCardRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAllUnlockNameCardRsp* GetAllUnlockNameCardRsp::New(::google::protobuf::Arena* arena) const {
  GetAllUnlockNameCardRsp* n = new GetAllUnlockNameCardRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAllUnlockNameCardRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetAllUnlockNameCardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_card_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool GetAllUnlockNameCardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetAllUnlockNameCardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 name_card_list = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_name_card_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 114u, input, this->mutable_name_card_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetAllUnlockNameCardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetAllUnlockNameCardRsp)
  return false;
#undef DO_
}

void GetAllUnlockNameCardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetAllUnlockNameCardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->retcode(), output);
  }

  // repeated uint32 name_card_list = 14;
  if (this->name_card_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(14, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _name_card_list_cached_byte_size_));
  }
  for (int i = 0, n = this->name_card_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->name_card_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetAllUnlockNameCardRsp)
}

::google::protobuf::uint8* GetAllUnlockNameCardRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetAllUnlockNameCardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->retcode(), target);
  }

  // repeated uint32 name_card_list = 14;
  if (this->name_card_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _name_card_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->name_card_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetAllUnlockNameCardRsp)
  return target;
}

size_t GetAllUnlockNameCardRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetAllUnlockNameCardRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 name_card_list = 14;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->name_card_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _name_card_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAllUnlockNameCardRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetAllUnlockNameCardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllUnlockNameCardRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAllUnlockNameCardRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetAllUnlockNameCardRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetAllUnlockNameCardRsp)
    MergeFrom(*source);
  }
}

void GetAllUnlockNameCardRsp::MergeFrom(const GetAllUnlockNameCardRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetAllUnlockNameCardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  name_card_list_.MergeFrom(from.name_card_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetAllUnlockNameCardRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetAllUnlockNameCardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllUnlockNameCardRsp::CopyFrom(const GetAllUnlockNameCardRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetAllUnlockNameCardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllUnlockNameCardRsp::IsInitialized() const {
  return true;
}

void GetAllUnlockNameCardRsp::Swap(GetAllUnlockNameCardRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAllUnlockNameCardRsp::InternalSwap(GetAllUnlockNameCardRsp* other) {
  using std::swap;
  name_card_list_.InternalSwap(&other->name_card_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAllUnlockNameCardRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAllUnlockNameCardRsp

// int32 retcode = 4;
void GetAllUnlockNameCardRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetAllUnlockNameCardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetAllUnlockNameCardRsp.retcode)
  return retcode_;
}
void GetAllUnlockNameCardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetAllUnlockNameCardRsp.retcode)
}

// repeated uint32 name_card_list = 14;
int GetAllUnlockNameCardRsp::name_card_list_size() const {
  return name_card_list_.size();
}
void GetAllUnlockNameCardRsp::clear_name_card_list() {
  name_card_list_.Clear();
}
::google::protobuf::uint32 GetAllUnlockNameCardRsp::name_card_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetAllUnlockNameCardRsp.name_card_list)
  return name_card_list_.Get(index);
}
void GetAllUnlockNameCardRsp::set_name_card_list(int index, ::google::protobuf::uint32 value) {
  name_card_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetAllUnlockNameCardRsp.name_card_list)
}
void GetAllUnlockNameCardRsp::add_name_card_list(::google::protobuf::uint32 value) {
  name_card_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetAllUnlockNameCardRsp.name_card_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetAllUnlockNameCardRsp::name_card_list() const {
  // @@protoc_insertion_point(field_list:proto.GetAllUnlockNameCardRsp.name_card_list)
  return name_card_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetAllUnlockNameCardRsp::mutable_name_card_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetAllUnlockNameCardRsp.name_card_list)
  return &name_card_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddBlacklistReq::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddBlacklistReq::AddBlacklistReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddBlacklistReq)
}
AddBlacklistReq::AddBlacklistReq(const AddBlacklistReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.AddBlacklistReq)
}

void AddBlacklistReq::SharedCtor() {
  target_uid_ = 0u;
  _cached_size_ = 0;
}

AddBlacklistReq::~AddBlacklistReq() {
  // @@protoc_insertion_point(destructor:proto.AddBlacklistReq)
  SharedDtor();
}

void AddBlacklistReq::SharedDtor() {
}

void AddBlacklistReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddBlacklistReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddBlacklistReq& AddBlacklistReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddBlacklistReq* AddBlacklistReq::New(::google::protobuf::Arena* arena) const {
  AddBlacklistReq* n = new AddBlacklistReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddBlacklistReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddBlacklistReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool AddBlacklistReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddBlacklistReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddBlacklistReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddBlacklistReq)
  return false;
#undef DO_
}

void AddBlacklistReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddBlacklistReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddBlacklistReq)
}

::google::protobuf::uint8* AddBlacklistReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddBlacklistReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddBlacklistReq)
  return target;
}

size_t AddBlacklistReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddBlacklistReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddBlacklistReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddBlacklistReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AddBlacklistReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddBlacklistReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddBlacklistReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddBlacklistReq)
    MergeFrom(*source);
  }
}

void AddBlacklistReq::MergeFrom(const AddBlacklistReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddBlacklistReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void AddBlacklistReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddBlacklistReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddBlacklistReq::CopyFrom(const AddBlacklistReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddBlacklistReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddBlacklistReq::IsInitialized() const {
  return true;
}

void AddBlacklistReq::Swap(AddBlacklistReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddBlacklistReq::InternalSwap(AddBlacklistReq* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddBlacklistReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddBlacklistReq

// uint32 target_uid = 2;
void AddBlacklistReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 AddBlacklistReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.AddBlacklistReq.target_uid)
  return target_uid_;
}
void AddBlacklistReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.AddBlacklistReq.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddBlacklistRsp::kTargetFriendBriefFieldNumber;
const int AddBlacklistRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddBlacklistRsp::AddBlacklistRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddBlacklistRsp)
}
AddBlacklistRsp::AddBlacklistRsp(const AddBlacklistRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_target_friend_brief()) {
    target_friend_brief_ = new ::proto::FriendBrief(*from.target_friend_brief_);
  } else {
    target_friend_brief_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.AddBlacklistRsp)
}

void AddBlacklistRsp::SharedCtor() {
  ::memset(&target_friend_brief_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&target_friend_brief_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

AddBlacklistRsp::~AddBlacklistRsp() {
  // @@protoc_insertion_point(destructor:proto.AddBlacklistRsp)
  SharedDtor();
}

void AddBlacklistRsp::SharedDtor() {
  if (this != internal_default_instance()) delete target_friend_brief_;
}

void AddBlacklistRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddBlacklistRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddBlacklistRsp& AddBlacklistRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddBlacklistRsp* AddBlacklistRsp::New(::google::protobuf::Arena* arena) const {
  AddBlacklistRsp* n = new AddBlacklistRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddBlacklistRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddBlacklistRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && target_friend_brief_ != NULL) {
    delete target_friend_brief_;
  }
  target_friend_brief_ = NULL;
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool AddBlacklistRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddBlacklistRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FriendBrief target_friend_brief = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_target_friend_brief()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddBlacklistRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddBlacklistRsp)
  return false;
#undef DO_
}

void AddBlacklistRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddBlacklistRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->retcode(), output);
  }

  // .proto.FriendBrief target_friend_brief = 13;
  if (this->has_target_friend_brief()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->target_friend_brief_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddBlacklistRsp)
}

::google::protobuf::uint8* AddBlacklistRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddBlacklistRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->retcode(), target);
  }

  // .proto.FriendBrief target_friend_brief = 13;
  if (this->has_target_friend_brief()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->target_friend_brief_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddBlacklistRsp)
  return target;
}

size_t AddBlacklistRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddBlacklistRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.FriendBrief target_friend_brief = 13;
  if (this->has_target_friend_brief()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->target_friend_brief_);
  }

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddBlacklistRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddBlacklistRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddBlacklistRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddBlacklistRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddBlacklistRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddBlacklistRsp)
    MergeFrom(*source);
  }
}

void AddBlacklistRsp::MergeFrom(const AddBlacklistRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddBlacklistRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_target_friend_brief()) {
    mutable_target_friend_brief()->::proto::FriendBrief::MergeFrom(from.target_friend_brief());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void AddBlacklistRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddBlacklistRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddBlacklistRsp::CopyFrom(const AddBlacklistRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddBlacklistRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddBlacklistRsp::IsInitialized() const {
  return true;
}

void AddBlacklistRsp::Swap(AddBlacklistRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddBlacklistRsp::InternalSwap(AddBlacklistRsp* other) {
  using std::swap;
  swap(target_friend_brief_, other->target_friend_brief_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddBlacklistRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddBlacklistRsp

// .proto.FriendBrief target_friend_brief = 13;
bool AddBlacklistRsp::has_target_friend_brief() const {
  return this != internal_default_instance() && target_friend_brief_ != NULL;
}
void AddBlacklistRsp::clear_target_friend_brief() {
  if (GetArenaNoVirtual() == NULL && target_friend_brief_ != NULL) delete target_friend_brief_;
  target_friend_brief_ = NULL;
}
const ::proto::FriendBrief& AddBlacklistRsp::target_friend_brief() const {
  const ::proto::FriendBrief* p = target_friend_brief_;
  // @@protoc_insertion_point(field_get:proto.AddBlacklistRsp.target_friend_brief)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::FriendBrief*>(
      &::proto::_FriendBrief_default_instance_);
}
::proto::FriendBrief* AddBlacklistRsp::mutable_target_friend_brief() {
  
  if (target_friend_brief_ == NULL) {
    target_friend_brief_ = new ::proto::FriendBrief;
  }
  // @@protoc_insertion_point(field_mutable:proto.AddBlacklistRsp.target_friend_brief)
  return target_friend_brief_;
}
::proto::FriendBrief* AddBlacklistRsp::release_target_friend_brief() {
  // @@protoc_insertion_point(field_release:proto.AddBlacklistRsp.target_friend_brief)
  
  ::proto::FriendBrief* temp = target_friend_brief_;
  target_friend_brief_ = NULL;
  return temp;
}
void AddBlacklistRsp::set_allocated_target_friend_brief(::proto::FriendBrief* target_friend_brief) {
  delete target_friend_brief_;
  target_friend_brief_ = target_friend_brief;
  if (target_friend_brief) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AddBlacklistRsp.target_friend_brief)
}

// int32 retcode = 7;
void AddBlacklistRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 AddBlacklistRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AddBlacklistRsp.retcode)
  return retcode_;
}
void AddBlacklistRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AddBlacklistRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveBlacklistReq::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveBlacklistReq::RemoveBlacklistReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RemoveBlacklistReq)
}
RemoveBlacklistReq::RemoveBlacklistReq(const RemoveBlacklistReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.RemoveBlacklistReq)
}

void RemoveBlacklistReq::SharedCtor() {
  target_uid_ = 0u;
  _cached_size_ = 0;
}

RemoveBlacklistReq::~RemoveBlacklistReq() {
  // @@protoc_insertion_point(destructor:proto.RemoveBlacklistReq)
  SharedDtor();
}

void RemoveBlacklistReq::SharedDtor() {
}

void RemoveBlacklistReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveBlacklistReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveBlacklistReq& RemoveBlacklistReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

RemoveBlacklistReq* RemoveBlacklistReq::New(::google::protobuf::Arena* arena) const {
  RemoveBlacklistReq* n = new RemoveBlacklistReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveBlacklistReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RemoveBlacklistReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool RemoveBlacklistReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RemoveBlacklistReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RemoveBlacklistReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RemoveBlacklistReq)
  return false;
#undef DO_
}

void RemoveBlacklistReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RemoveBlacklistReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 13;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RemoveBlacklistReq)
}

::google::protobuf::uint8* RemoveBlacklistReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RemoveBlacklistReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 13;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RemoveBlacklistReq)
  return target;
}

size_t RemoveBlacklistReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RemoveBlacklistReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 13;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveBlacklistReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RemoveBlacklistReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveBlacklistReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveBlacklistReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RemoveBlacklistReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RemoveBlacklistReq)
    MergeFrom(*source);
  }
}

void RemoveBlacklistReq::MergeFrom(const RemoveBlacklistReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RemoveBlacklistReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void RemoveBlacklistReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RemoveBlacklistReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveBlacklistReq::CopyFrom(const RemoveBlacklistReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RemoveBlacklistReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveBlacklistReq::IsInitialized() const {
  return true;
}

void RemoveBlacklistReq::Swap(RemoveBlacklistReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveBlacklistReq::InternalSwap(RemoveBlacklistReq* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveBlacklistReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoveBlacklistReq

// uint32 target_uid = 13;
void RemoveBlacklistReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 RemoveBlacklistReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.RemoveBlacklistReq.target_uid)
  return target_uid_;
}
void RemoveBlacklistReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveBlacklistReq.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveBlacklistRsp::kRetcodeFieldNumber;
const int RemoveBlacklistRsp::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveBlacklistRsp::RemoveBlacklistRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RemoveBlacklistRsp)
}
RemoveBlacklistRsp::RemoveBlacklistRsp(const RemoveBlacklistRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_uid_, &from.target_uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&target_uid_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.RemoveBlacklistRsp)
}

void RemoveBlacklistRsp::SharedCtor() {
  ::memset(&target_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&target_uid_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

RemoveBlacklistRsp::~RemoveBlacklistRsp() {
  // @@protoc_insertion_point(destructor:proto.RemoveBlacklistRsp)
  SharedDtor();
}

void RemoveBlacklistRsp::SharedDtor() {
}

void RemoveBlacklistRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveBlacklistRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveBlacklistRsp& RemoveBlacklistRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

RemoveBlacklistRsp* RemoveBlacklistRsp::New(::google::protobuf::Arena* arena) const {
  RemoveBlacklistRsp* n = new RemoveBlacklistRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveBlacklistRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RemoveBlacklistRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&target_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&target_uid_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool RemoveBlacklistRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RemoveBlacklistRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RemoveBlacklistRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RemoveBlacklistRsp)
  return false;
#undef DO_
}

void RemoveBlacklistRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RemoveBlacklistRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 7;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->target_uid(), output);
  }

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RemoveBlacklistRsp)
}

::google::protobuf::uint8* RemoveBlacklistRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RemoveBlacklistRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 7;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->target_uid(), target);
  }

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RemoveBlacklistRsp)
  return target;
}

size_t RemoveBlacklistRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RemoveBlacklistRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 7;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveBlacklistRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RemoveBlacklistRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveBlacklistRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveBlacklistRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RemoveBlacklistRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RemoveBlacklistRsp)
    MergeFrom(*source);
  }
}

void RemoveBlacklistRsp::MergeFrom(const RemoveBlacklistRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RemoveBlacklistRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RemoveBlacklistRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RemoveBlacklistRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveBlacklistRsp::CopyFrom(const RemoveBlacklistRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RemoveBlacklistRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveBlacklistRsp::IsInitialized() const {
  return true;
}

void RemoveBlacklistRsp::Swap(RemoveBlacklistRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveBlacklistRsp::InternalSwap(RemoveBlacklistRsp* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveBlacklistRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoveBlacklistRsp

// int32 retcode = 12;
void RemoveBlacklistRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 RemoveBlacklistRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.RemoveBlacklistRsp.retcode)
  return retcode_;
}
void RemoveBlacklistRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveBlacklistRsp.retcode)
}

// uint32 target_uid = 7;
void RemoveBlacklistRsp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 RemoveBlacklistRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.RemoveBlacklistRsp.target_uid)
  return target_uid_;
}
void RemoveBlacklistRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveBlacklistRsp.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnlockNameCardNotify::kNameCardIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnlockNameCardNotify::UnlockNameCardNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UnlockNameCardNotify)
}
UnlockNameCardNotify::UnlockNameCardNotify(const UnlockNameCardNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_card_id_ = from.name_card_id_;
  // @@protoc_insertion_point(copy_constructor:proto.UnlockNameCardNotify)
}

void UnlockNameCardNotify::SharedCtor() {
  name_card_id_ = 0u;
  _cached_size_ = 0;
}

UnlockNameCardNotify::~UnlockNameCardNotify() {
  // @@protoc_insertion_point(destructor:proto.UnlockNameCardNotify)
  SharedDtor();
}

void UnlockNameCardNotify::SharedDtor() {
}

void UnlockNameCardNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnlockNameCardNotify::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnlockNameCardNotify& UnlockNameCardNotify::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnlockNameCardNotify* UnlockNameCardNotify::New(::google::protobuf::Arena* arena) const {
  UnlockNameCardNotify* n = new UnlockNameCardNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnlockNameCardNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UnlockNameCardNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_card_id_ = 0u;
  _internal_metadata_.Clear();
}

bool UnlockNameCardNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UnlockNameCardNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 name_card_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &name_card_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UnlockNameCardNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UnlockNameCardNotify)
  return false;
#undef DO_
}

void UnlockNameCardNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UnlockNameCardNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 name_card_id = 8;
  if (this->name_card_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->name_card_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UnlockNameCardNotify)
}

::google::protobuf::uint8* UnlockNameCardNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UnlockNameCardNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 name_card_id = 8;
  if (this->name_card_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->name_card_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UnlockNameCardNotify)
  return target;
}

size_t UnlockNameCardNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UnlockNameCardNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 name_card_id = 8;
  if (this->name_card_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->name_card_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnlockNameCardNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UnlockNameCardNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const UnlockNameCardNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnlockNameCardNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UnlockNameCardNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UnlockNameCardNotify)
    MergeFrom(*source);
  }
}

void UnlockNameCardNotify::MergeFrom(const UnlockNameCardNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UnlockNameCardNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name_card_id() != 0) {
    set_name_card_id(from.name_card_id());
  }
}

void UnlockNameCardNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UnlockNameCardNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnlockNameCardNotify::CopyFrom(const UnlockNameCardNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UnlockNameCardNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockNameCardNotify::IsInitialized() const {
  return true;
}

void UnlockNameCardNotify::Swap(UnlockNameCardNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnlockNameCardNotify::InternalSwap(UnlockNameCardNotify* other) {
  using std::swap;
  swap(name_card_id_, other->name_card_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnlockNameCardNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnlockNameCardNotify

// uint32 name_card_id = 8;
void UnlockNameCardNotify::clear_name_card_id() {
  name_card_id_ = 0u;
}
::google::protobuf::uint32 UnlockNameCardNotify::name_card_id() const {
  // @@protoc_insertion_point(field_get:proto.UnlockNameCardNotify.name_card_id)
  return name_card_id_;
}
void UnlockNameCardNotify::set_name_card_id(::google::protobuf::uint32 value) {
  
  name_card_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockNameCardNotify.name_card_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRecentMpPlayerListReq::GetRecentMpPlayerListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetRecentMpPlayerListReq)
}
GetRecentMpPlayerListReq::GetRecentMpPlayerListReq(const GetRecentMpPlayerListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GetRecentMpPlayerListReq)
}

void GetRecentMpPlayerListReq::SharedCtor() {
  _cached_size_ = 0;
}

GetRecentMpPlayerListReq::~GetRecentMpPlayerListReq() {
  // @@protoc_insertion_point(destructor:proto.GetRecentMpPlayerListReq)
  SharedDtor();
}

void GetRecentMpPlayerListReq::SharedDtor() {
}

void GetRecentMpPlayerListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRecentMpPlayerListReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRecentMpPlayerListReq& GetRecentMpPlayerListReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetRecentMpPlayerListReq* GetRecentMpPlayerListReq::New(::google::protobuf::Arena* arena) const {
  GetRecentMpPlayerListReq* n = new GetRecentMpPlayerListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRecentMpPlayerListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetRecentMpPlayerListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetRecentMpPlayerListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetRecentMpPlayerListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetRecentMpPlayerListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetRecentMpPlayerListReq)
  return false;
#undef DO_
}

void GetRecentMpPlayerListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetRecentMpPlayerListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetRecentMpPlayerListReq)
}

::google::protobuf::uint8* GetRecentMpPlayerListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetRecentMpPlayerListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetRecentMpPlayerListReq)
  return target;
}

size_t GetRecentMpPlayerListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetRecentMpPlayerListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRecentMpPlayerListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetRecentMpPlayerListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRecentMpPlayerListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRecentMpPlayerListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetRecentMpPlayerListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetRecentMpPlayerListReq)
    MergeFrom(*source);
  }
}

void GetRecentMpPlayerListReq::MergeFrom(const GetRecentMpPlayerListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetRecentMpPlayerListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetRecentMpPlayerListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetRecentMpPlayerListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRecentMpPlayerListReq::CopyFrom(const GetRecentMpPlayerListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetRecentMpPlayerListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRecentMpPlayerListReq::IsInitialized() const {
  return true;
}

void GetRecentMpPlayerListReq::Swap(GetRecentMpPlayerListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRecentMpPlayerListReq::InternalSwap(GetRecentMpPlayerListReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRecentMpPlayerListReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRecentMpPlayerListReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRecentMpPlayerListRsp::kRetcodeFieldNumber;
const int GetRecentMpPlayerListRsp::kRecentMpPlayerBriefListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRecentMpPlayerListRsp::GetRecentMpPlayerListRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetRecentMpPlayerListRsp)
}
GetRecentMpPlayerListRsp::GetRecentMpPlayerListRsp(const GetRecentMpPlayerListRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      recent_mp_player_brief_list_(from.recent_mp_player_brief_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GetRecentMpPlayerListRsp)
}

void GetRecentMpPlayerListRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

GetRecentMpPlayerListRsp::~GetRecentMpPlayerListRsp() {
  // @@protoc_insertion_point(destructor:proto.GetRecentMpPlayerListRsp)
  SharedDtor();
}

void GetRecentMpPlayerListRsp::SharedDtor() {
}

void GetRecentMpPlayerListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRecentMpPlayerListRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRecentMpPlayerListRsp& GetRecentMpPlayerListRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetRecentMpPlayerListRsp* GetRecentMpPlayerListRsp::New(::google::protobuf::Arena* arena) const {
  GetRecentMpPlayerListRsp* n = new GetRecentMpPlayerListRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRecentMpPlayerListRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetRecentMpPlayerListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recent_mp_player_brief_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool GetRecentMpPlayerListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetRecentMpPlayerListRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.FriendBrief recent_mp_player_brief_list = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_recent_mp_player_brief_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetRecentMpPlayerListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetRecentMpPlayerListRsp)
  return false;
#undef DO_
}

void GetRecentMpPlayerListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetRecentMpPlayerListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->retcode(), output);
  }

  // repeated .proto.FriendBrief recent_mp_player_brief_list = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->recent_mp_player_brief_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->recent_mp_player_brief_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetRecentMpPlayerListRsp)
}

::google::protobuf::uint8* GetRecentMpPlayerListRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetRecentMpPlayerListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->retcode(), target);
  }

  // repeated .proto.FriendBrief recent_mp_player_brief_list = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->recent_mp_player_brief_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, this->recent_mp_player_brief_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetRecentMpPlayerListRsp)
  return target;
}

size_t GetRecentMpPlayerListRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetRecentMpPlayerListRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.FriendBrief recent_mp_player_brief_list = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->recent_mp_player_brief_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->recent_mp_player_brief_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRecentMpPlayerListRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetRecentMpPlayerListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRecentMpPlayerListRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRecentMpPlayerListRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetRecentMpPlayerListRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetRecentMpPlayerListRsp)
    MergeFrom(*source);
  }
}

void GetRecentMpPlayerListRsp::MergeFrom(const GetRecentMpPlayerListRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetRecentMpPlayerListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  recent_mp_player_brief_list_.MergeFrom(from.recent_mp_player_brief_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetRecentMpPlayerListRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetRecentMpPlayerListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRecentMpPlayerListRsp::CopyFrom(const GetRecentMpPlayerListRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetRecentMpPlayerListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRecentMpPlayerListRsp::IsInitialized() const {
  return true;
}

void GetRecentMpPlayerListRsp::Swap(GetRecentMpPlayerListRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRecentMpPlayerListRsp::InternalSwap(GetRecentMpPlayerListRsp* other) {
  using std::swap;
  recent_mp_player_brief_list_.InternalSwap(&other->recent_mp_player_brief_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRecentMpPlayerListRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRecentMpPlayerListRsp

// int32 retcode = 13;
void GetRecentMpPlayerListRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetRecentMpPlayerListRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetRecentMpPlayerListRsp.retcode)
  return retcode_;
}
void GetRecentMpPlayerListRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetRecentMpPlayerListRsp.retcode)
}

// repeated .proto.FriendBrief recent_mp_player_brief_list = 14;
int GetRecentMpPlayerListRsp::recent_mp_player_brief_list_size() const {
  return recent_mp_player_brief_list_.size();
}
void GetRecentMpPlayerListRsp::clear_recent_mp_player_brief_list() {
  recent_mp_player_brief_list_.Clear();
}
const ::proto::FriendBrief& GetRecentMpPlayerListRsp::recent_mp_player_brief_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetRecentMpPlayerListRsp.recent_mp_player_brief_list)
  return recent_mp_player_brief_list_.Get(index);
}
::proto::FriendBrief* GetRecentMpPlayerListRsp::mutable_recent_mp_player_brief_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetRecentMpPlayerListRsp.recent_mp_player_brief_list)
  return recent_mp_player_brief_list_.Mutable(index);
}
::proto::FriendBrief* GetRecentMpPlayerListRsp::add_recent_mp_player_brief_list() {
  // @@protoc_insertion_point(field_add:proto.GetRecentMpPlayerListRsp.recent_mp_player_brief_list)
  return recent_mp_player_brief_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
GetRecentMpPlayerListRsp::mutable_recent_mp_player_brief_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetRecentMpPlayerListRsp.recent_mp_player_brief_list)
  return &recent_mp_player_brief_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
GetRecentMpPlayerListRsp::recent_mp_player_brief_list() const {
  // @@protoc_insertion_point(field_list:proto.GetRecentMpPlayerListRsp.recent_mp_player_brief_list)
  return recent_mp_player_brief_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SocialDataNotify::kIsHaveFirstShareFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SocialDataNotify::SocialDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SocialDataNotify)
}
SocialDataNotify::SocialDataNotify(const SocialDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_have_first_share_ = from.is_have_first_share_;
  // @@protoc_insertion_point(copy_constructor:proto.SocialDataNotify)
}

void SocialDataNotify::SharedCtor() {
  is_have_first_share_ = false;
  _cached_size_ = 0;
}

SocialDataNotify::~SocialDataNotify() {
  // @@protoc_insertion_point(destructor:proto.SocialDataNotify)
  SharedDtor();
}

void SocialDataNotify::SharedDtor() {
}

void SocialDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SocialDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SocialDataNotify& SocialDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SocialDataNotify* SocialDataNotify::New(::google::protobuf::Arena* arena) const {
  SocialDataNotify* n = new SocialDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SocialDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SocialDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_have_first_share_ = false;
  _internal_metadata_.Clear();
}

bool SocialDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SocialDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_have_first_share = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_have_first_share_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SocialDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SocialDataNotify)
  return false;
#undef DO_
}

void SocialDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SocialDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_have_first_share = 11;
  if (this->is_have_first_share() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_have_first_share(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SocialDataNotify)
}

::google::protobuf::uint8* SocialDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SocialDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_have_first_share = 11;
  if (this->is_have_first_share() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_have_first_share(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SocialDataNotify)
  return target;
}

size_t SocialDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SocialDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_have_first_share = 11;
  if (this->is_have_first_share() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SocialDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SocialDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SocialDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SocialDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SocialDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SocialDataNotify)
    MergeFrom(*source);
  }
}

void SocialDataNotify::MergeFrom(const SocialDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SocialDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_have_first_share() != 0) {
    set_is_have_first_share(from.is_have_first_share());
  }
}

void SocialDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SocialDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SocialDataNotify::CopyFrom(const SocialDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SocialDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SocialDataNotify::IsInitialized() const {
  return true;
}

void SocialDataNotify::Swap(SocialDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SocialDataNotify::InternalSwap(SocialDataNotify* other) {
  using std::swap;
  swap(is_have_first_share_, other->is_have_first_share_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SocialDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SocialDataNotify

// bool is_have_first_share = 11;
void SocialDataNotify::clear_is_have_first_share() {
  is_have_first_share_ = false;
}
bool SocialDataNotify::is_have_first_share() const {
  // @@protoc_insertion_point(field_get:proto.SocialDataNotify.is_have_first_share)
  return is_have_first_share_;
}
void SocialDataNotify::set_is_have_first_share(bool value) {
  
  is_have_first_share_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDataNotify.is_have_first_share)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakeFirstShareRewardReq::TakeFirstShareRewardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TakeFirstShareRewardReq)
}
TakeFirstShareRewardReq::TakeFirstShareRewardReq(const TakeFirstShareRewardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.TakeFirstShareRewardReq)
}

void TakeFirstShareRewardReq::SharedCtor() {
  _cached_size_ = 0;
}

TakeFirstShareRewardReq::~TakeFirstShareRewardReq() {
  // @@protoc_insertion_point(destructor:proto.TakeFirstShareRewardReq)
  SharedDtor();
}

void TakeFirstShareRewardReq::SharedDtor() {
}

void TakeFirstShareRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TakeFirstShareRewardReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakeFirstShareRewardReq& TakeFirstShareRewardReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

TakeFirstShareRewardReq* TakeFirstShareRewardReq::New(::google::protobuf::Arena* arena) const {
  TakeFirstShareRewardReq* n = new TakeFirstShareRewardReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TakeFirstShareRewardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TakeFirstShareRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool TakeFirstShareRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TakeFirstShareRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TakeFirstShareRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TakeFirstShareRewardReq)
  return false;
#undef DO_
}

void TakeFirstShareRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TakeFirstShareRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TakeFirstShareRewardReq)
}

::google::protobuf::uint8* TakeFirstShareRewardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TakeFirstShareRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TakeFirstShareRewardReq)
  return target;
}

size_t TakeFirstShareRewardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TakeFirstShareRewardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TakeFirstShareRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TakeFirstShareRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TakeFirstShareRewardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakeFirstShareRewardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TakeFirstShareRewardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TakeFirstShareRewardReq)
    MergeFrom(*source);
  }
}

void TakeFirstShareRewardReq::MergeFrom(const TakeFirstShareRewardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TakeFirstShareRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TakeFirstShareRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TakeFirstShareRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakeFirstShareRewardReq::CopyFrom(const TakeFirstShareRewardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TakeFirstShareRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakeFirstShareRewardReq::IsInitialized() const {
  return true;
}

void TakeFirstShareRewardReq::Swap(TakeFirstShareRewardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakeFirstShareRewardReq::InternalSwap(TakeFirstShareRewardReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TakeFirstShareRewardReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TakeFirstShareRewardReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakeFirstShareRewardRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakeFirstShareRewardRsp::TakeFirstShareRewardRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TakeFirstShareRewardRsp)
}
TakeFirstShareRewardRsp::TakeFirstShareRewardRsp(const TakeFirstShareRewardRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.TakeFirstShareRewardRsp)
}

void TakeFirstShareRewardRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

TakeFirstShareRewardRsp::~TakeFirstShareRewardRsp() {
  // @@protoc_insertion_point(destructor:proto.TakeFirstShareRewardRsp)
  SharedDtor();
}

void TakeFirstShareRewardRsp::SharedDtor() {
}

void TakeFirstShareRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TakeFirstShareRewardRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakeFirstShareRewardRsp& TakeFirstShareRewardRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

TakeFirstShareRewardRsp* TakeFirstShareRewardRsp::New(::google::protobuf::Arena* arena) const {
  TakeFirstShareRewardRsp* n = new TakeFirstShareRewardRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TakeFirstShareRewardRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TakeFirstShareRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool TakeFirstShareRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TakeFirstShareRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TakeFirstShareRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TakeFirstShareRewardRsp)
  return false;
#undef DO_
}

void TakeFirstShareRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TakeFirstShareRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TakeFirstShareRewardRsp)
}

::google::protobuf::uint8* TakeFirstShareRewardRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TakeFirstShareRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TakeFirstShareRewardRsp)
  return target;
}

size_t TakeFirstShareRewardRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TakeFirstShareRewardRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 15;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TakeFirstShareRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TakeFirstShareRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const TakeFirstShareRewardRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakeFirstShareRewardRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TakeFirstShareRewardRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TakeFirstShareRewardRsp)
    MergeFrom(*source);
  }
}

void TakeFirstShareRewardRsp::MergeFrom(const TakeFirstShareRewardRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TakeFirstShareRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void TakeFirstShareRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TakeFirstShareRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakeFirstShareRewardRsp::CopyFrom(const TakeFirstShareRewardRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TakeFirstShareRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakeFirstShareRewardRsp::IsInitialized() const {
  return true;
}

void TakeFirstShareRewardRsp::Swap(TakeFirstShareRewardRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakeFirstShareRewardRsp::InternalSwap(TakeFirstShareRewardRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TakeFirstShareRewardRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TakeFirstShareRewardRsp

// int32 retcode = 15;
void TakeFirstShareRewardRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 TakeFirstShareRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TakeFirstShareRewardRsp.retcode)
  return retcode_;
}
void TakeFirstShareRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeFirstShareRewardRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdatePS4BlockListReq::kPsnIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdatePS4BlockListReq::UpdatePS4BlockListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UpdatePS4BlockListReq)
}
UpdatePS4BlockListReq::UpdatePS4BlockListReq(const UpdatePS4BlockListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      psn_id_list_(from.psn_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.UpdatePS4BlockListReq)
}

void UpdatePS4BlockListReq::SharedCtor() {
  _cached_size_ = 0;
}

UpdatePS4BlockListReq::~UpdatePS4BlockListReq() {
  // @@protoc_insertion_point(destructor:proto.UpdatePS4BlockListReq)
  SharedDtor();
}

void UpdatePS4BlockListReq::SharedDtor() {
}

void UpdatePS4BlockListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdatePS4BlockListReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdatePS4BlockListReq& UpdatePS4BlockListReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdatePS4BlockListReq* UpdatePS4BlockListReq::New(::google::protobuf::Arena* arena) const {
  UpdatePS4BlockListReq* n = new UpdatePS4BlockListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdatePS4BlockListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdatePS4BlockListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  psn_id_list_.Clear();
  _internal_metadata_.Clear();
}

bool UpdatePS4BlockListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UpdatePS4BlockListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string psn_id_list = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_psn_id_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->psn_id_list(this->psn_id_list_size() - 1).data(),
            static_cast<int>(this->psn_id_list(this->psn_id_list_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.UpdatePS4BlockListReq.psn_id_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UpdatePS4BlockListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UpdatePS4BlockListReq)
  return false;
#undef DO_
}

void UpdatePS4BlockListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UpdatePS4BlockListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string psn_id_list = 10;
  for (int i = 0, n = this->psn_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->psn_id_list(i).data(), static_cast<int>(this->psn_id_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.UpdatePS4BlockListReq.psn_id_list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->psn_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UpdatePS4BlockListReq)
}

::google::protobuf::uint8* UpdatePS4BlockListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdatePS4BlockListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string psn_id_list = 10;
  for (int i = 0, n = this->psn_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->psn_id_list(i).data(), static_cast<int>(this->psn_id_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.UpdatePS4BlockListReq.psn_id_list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->psn_id_list(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdatePS4BlockListReq)
  return target;
}

size_t UpdatePS4BlockListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdatePS4BlockListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string psn_id_list = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->psn_id_list_size());
  for (int i = 0, n = this->psn_id_list_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->psn_id_list(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdatePS4BlockListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UpdatePS4BlockListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdatePS4BlockListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdatePS4BlockListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UpdatePS4BlockListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UpdatePS4BlockListReq)
    MergeFrom(*source);
  }
}

void UpdatePS4BlockListReq::MergeFrom(const UpdatePS4BlockListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdatePS4BlockListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  psn_id_list_.MergeFrom(from.psn_id_list_);
}

void UpdatePS4BlockListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UpdatePS4BlockListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdatePS4BlockListReq::CopyFrom(const UpdatePS4BlockListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdatePS4BlockListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatePS4BlockListReq::IsInitialized() const {
  return true;
}

void UpdatePS4BlockListReq::Swap(UpdatePS4BlockListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdatePS4BlockListReq::InternalSwap(UpdatePS4BlockListReq* other) {
  using std::swap;
  psn_id_list_.InternalSwap(&other->psn_id_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdatePS4BlockListReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdatePS4BlockListReq

// repeated string psn_id_list = 10;
int UpdatePS4BlockListReq::psn_id_list_size() const {
  return psn_id_list_.size();
}
void UpdatePS4BlockListReq::clear_psn_id_list() {
  psn_id_list_.Clear();
}
const ::std::string& UpdatePS4BlockListReq::psn_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UpdatePS4BlockListReq.psn_id_list)
  return psn_id_list_.Get(index);
}
::std::string* UpdatePS4BlockListReq::mutable_psn_id_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.UpdatePS4BlockListReq.psn_id_list)
  return psn_id_list_.Mutable(index);
}
void UpdatePS4BlockListReq::set_psn_id_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.UpdatePS4BlockListReq.psn_id_list)
  psn_id_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void UpdatePS4BlockListReq::set_psn_id_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.UpdatePS4BlockListReq.psn_id_list)
  psn_id_list_.Mutable(index)->assign(std::move(value));
}
#endif
void UpdatePS4BlockListReq::set_psn_id_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  psn_id_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.UpdatePS4BlockListReq.psn_id_list)
}
void UpdatePS4BlockListReq::set_psn_id_list(int index, const char* value, size_t size) {
  psn_id_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.UpdatePS4BlockListReq.psn_id_list)
}
::std::string* UpdatePS4BlockListReq::add_psn_id_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.UpdatePS4BlockListReq.psn_id_list)
  return psn_id_list_.Add();
}
void UpdatePS4BlockListReq::add_psn_id_list(const ::std::string& value) {
  psn_id_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.UpdatePS4BlockListReq.psn_id_list)
}
#if LANG_CXX11
void UpdatePS4BlockListReq::add_psn_id_list(::std::string&& value) {
  psn_id_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.UpdatePS4BlockListReq.psn_id_list)
}
#endif
void UpdatePS4BlockListReq::add_psn_id_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  psn_id_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.UpdatePS4BlockListReq.psn_id_list)
}
void UpdatePS4BlockListReq::add_psn_id_list(const char* value, size_t size) {
  psn_id_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.UpdatePS4BlockListReq.psn_id_list)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
UpdatePS4BlockListReq::psn_id_list() const {
  // @@protoc_insertion_point(field_list:proto.UpdatePS4BlockListReq.psn_id_list)
  return psn_id_list_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
UpdatePS4BlockListReq::mutable_psn_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UpdatePS4BlockListReq.psn_id_list)
  return &psn_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdatePS4BlockListRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdatePS4BlockListRsp::UpdatePS4BlockListRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UpdatePS4BlockListRsp)
}
UpdatePS4BlockListRsp::UpdatePS4BlockListRsp(const UpdatePS4BlockListRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.UpdatePS4BlockListRsp)
}

void UpdatePS4BlockListRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

UpdatePS4BlockListRsp::~UpdatePS4BlockListRsp() {
  // @@protoc_insertion_point(destructor:proto.UpdatePS4BlockListRsp)
  SharedDtor();
}

void UpdatePS4BlockListRsp::SharedDtor() {
}

void UpdatePS4BlockListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdatePS4BlockListRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdatePS4BlockListRsp& UpdatePS4BlockListRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdatePS4BlockListRsp* UpdatePS4BlockListRsp::New(::google::protobuf::Arena* arena) const {
  UpdatePS4BlockListRsp* n = new UpdatePS4BlockListRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdatePS4BlockListRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdatePS4BlockListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool UpdatePS4BlockListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UpdatePS4BlockListRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UpdatePS4BlockListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UpdatePS4BlockListRsp)
  return false;
#undef DO_
}

void UpdatePS4BlockListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UpdatePS4BlockListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UpdatePS4BlockListRsp)
}

::google::protobuf::uint8* UpdatePS4BlockListRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdatePS4BlockListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdatePS4BlockListRsp)
  return target;
}

size_t UpdatePS4BlockListRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdatePS4BlockListRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 7;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdatePS4BlockListRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UpdatePS4BlockListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdatePS4BlockListRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdatePS4BlockListRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UpdatePS4BlockListRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UpdatePS4BlockListRsp)
    MergeFrom(*source);
  }
}

void UpdatePS4BlockListRsp::MergeFrom(const UpdatePS4BlockListRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdatePS4BlockListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void UpdatePS4BlockListRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UpdatePS4BlockListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdatePS4BlockListRsp::CopyFrom(const UpdatePS4BlockListRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdatePS4BlockListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatePS4BlockListRsp::IsInitialized() const {
  return true;
}

void UpdatePS4BlockListRsp::Swap(UpdatePS4BlockListRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdatePS4BlockListRsp::InternalSwap(UpdatePS4BlockListRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdatePS4BlockListRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdatePS4BlockListRsp

// int32 retcode = 7;
void UpdatePS4BlockListRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 UpdatePS4BlockListRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.UpdatePS4BlockListRsp.retcode)
  return retcode_;
}
void UpdatePS4BlockListRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.UpdatePS4BlockListRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPlayerBlacklistReq::GetPlayerBlacklistReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetPlayerBlacklistReq)
}
GetPlayerBlacklistReq::GetPlayerBlacklistReq(const GetPlayerBlacklistReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GetPlayerBlacklistReq)
}

void GetPlayerBlacklistReq::SharedCtor() {
  _cached_size_ = 0;
}

GetPlayerBlacklistReq::~GetPlayerBlacklistReq() {
  // @@protoc_insertion_point(destructor:proto.GetPlayerBlacklistReq)
  SharedDtor();
}

void GetPlayerBlacklistReq::SharedDtor() {
}

void GetPlayerBlacklistReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPlayerBlacklistReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPlayerBlacklistReq& GetPlayerBlacklistReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetPlayerBlacklistReq* GetPlayerBlacklistReq::New(::google::protobuf::Arena* arena) const {
  GetPlayerBlacklistReq* n = new GetPlayerBlacklistReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPlayerBlacklistReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetPlayerBlacklistReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetPlayerBlacklistReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetPlayerBlacklistReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetPlayerBlacklistReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetPlayerBlacklistReq)
  return false;
#undef DO_
}

void GetPlayerBlacklistReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetPlayerBlacklistReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetPlayerBlacklistReq)
}

::google::protobuf::uint8* GetPlayerBlacklistReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetPlayerBlacklistReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetPlayerBlacklistReq)
  return target;
}

size_t GetPlayerBlacklistReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetPlayerBlacklistReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPlayerBlacklistReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetPlayerBlacklistReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPlayerBlacklistReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPlayerBlacklistReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetPlayerBlacklistReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetPlayerBlacklistReq)
    MergeFrom(*source);
  }
}

void GetPlayerBlacklistReq::MergeFrom(const GetPlayerBlacklistReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetPlayerBlacklistReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetPlayerBlacklistReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetPlayerBlacklistReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPlayerBlacklistReq::CopyFrom(const GetPlayerBlacklistReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetPlayerBlacklistReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPlayerBlacklistReq::IsInitialized() const {
  return true;
}

void GetPlayerBlacklistReq::Swap(GetPlayerBlacklistReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPlayerBlacklistReq::InternalSwap(GetPlayerBlacklistReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPlayerBlacklistReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPlayerBlacklistReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPlayerBlacklistRsp::kRetcodeFieldNumber;
const int GetPlayerBlacklistRsp::kBlacklistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPlayerBlacklistRsp::GetPlayerBlacklistRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetPlayerBlacklistRsp)
}
GetPlayerBlacklistRsp::GetPlayerBlacklistRsp(const GetPlayerBlacklistRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      blacklist_(from.blacklist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GetPlayerBlacklistRsp)
}

void GetPlayerBlacklistRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

GetPlayerBlacklistRsp::~GetPlayerBlacklistRsp() {
  // @@protoc_insertion_point(destructor:proto.GetPlayerBlacklistRsp)
  SharedDtor();
}

void GetPlayerBlacklistRsp::SharedDtor() {
}

void GetPlayerBlacklistRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPlayerBlacklistRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPlayerBlacklistRsp& GetPlayerBlacklistRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetPlayerBlacklistRsp* GetPlayerBlacklistRsp::New(::google::protobuf::Arena* arena) const {
  GetPlayerBlacklistRsp* n = new GetPlayerBlacklistRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPlayerBlacklistRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetPlayerBlacklistRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  blacklist_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool GetPlayerBlacklistRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetPlayerBlacklistRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.FriendBrief blacklist = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_blacklist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetPlayerBlacklistRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetPlayerBlacklistRsp)
  return false;
#undef DO_
}

void GetPlayerBlacklistRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetPlayerBlacklistRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 2;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->retcode(), output);
  }

  // repeated .proto.FriendBrief blacklist = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->blacklist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->blacklist(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetPlayerBlacklistRsp)
}

::google::protobuf::uint8* GetPlayerBlacklistRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetPlayerBlacklistRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 2;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->retcode(), target);
  }

  // repeated .proto.FriendBrief blacklist = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->blacklist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->blacklist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetPlayerBlacklistRsp)
  return target;
}

size_t GetPlayerBlacklistRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetPlayerBlacklistRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.FriendBrief blacklist = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->blacklist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->blacklist(static_cast<int>(i)));
    }
  }

  // int32 retcode = 2;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPlayerBlacklistRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetPlayerBlacklistRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPlayerBlacklistRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPlayerBlacklistRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetPlayerBlacklistRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetPlayerBlacklistRsp)
    MergeFrom(*source);
  }
}

void GetPlayerBlacklistRsp::MergeFrom(const GetPlayerBlacklistRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetPlayerBlacklistRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  blacklist_.MergeFrom(from.blacklist_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetPlayerBlacklistRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetPlayerBlacklistRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPlayerBlacklistRsp::CopyFrom(const GetPlayerBlacklistRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetPlayerBlacklistRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPlayerBlacklistRsp::IsInitialized() const {
  return true;
}

void GetPlayerBlacklistRsp::Swap(GetPlayerBlacklistRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPlayerBlacklistRsp::InternalSwap(GetPlayerBlacklistRsp* other) {
  using std::swap;
  blacklist_.InternalSwap(&other->blacklist_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPlayerBlacklistRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPlayerBlacklistRsp

// int32 retcode = 2;
void GetPlayerBlacklistRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetPlayerBlacklistRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerBlacklistRsp.retcode)
  return retcode_;
}
void GetPlayerBlacklistRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerBlacklistRsp.retcode)
}

// repeated .proto.FriendBrief blacklist = 3;
int GetPlayerBlacklistRsp::blacklist_size() const {
  return blacklist_.size();
}
void GetPlayerBlacklistRsp::clear_blacklist() {
  blacklist_.Clear();
}
const ::proto::FriendBrief& GetPlayerBlacklistRsp::blacklist(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerBlacklistRsp.blacklist)
  return blacklist_.Get(index);
}
::proto::FriendBrief* GetPlayerBlacklistRsp::mutable_blacklist(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerBlacklistRsp.blacklist)
  return blacklist_.Mutable(index);
}
::proto::FriendBrief* GetPlayerBlacklistRsp::add_blacklist() {
  // @@protoc_insertion_point(field_add:proto.GetPlayerBlacklistRsp.blacklist)
  return blacklist_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
GetPlayerBlacklistRsp::mutable_blacklist() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetPlayerBlacklistRsp.blacklist)
  return &blacklist_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
GetPlayerBlacklistRsp::blacklist() const {
  // @@protoc_insertion_point(field_list:proto.GetPlayerBlacklistRsp.blacklist)
  return blacklist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerReportReq::kReasonFieldNumber;
const int PlayerReportReq::kContentFieldNumber;
const int PlayerReportReq::kTargetHomeModuleIdFieldNumber;
const int PlayerReportReq::kTargetHomeModuleNameFieldNumber;
const int PlayerReportReq::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerReportReq::PlayerReportReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerReportReq)
}
PlayerReportReq::PlayerReportReq(const PlayerReportReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_home_module_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_home_module_name().size() > 0) {
    target_home_module_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_home_module_name_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  ::memcpy(&target_uid_, &from.target_uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&target_uid_)) + sizeof(reason_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerReportReq)
}

void PlayerReportReq::SharedCtor() {
  target_home_module_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&target_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&target_uid_)) + sizeof(reason_));
  _cached_size_ = 0;
}

PlayerReportReq::~PlayerReportReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerReportReq)
  SharedDtor();
}

void PlayerReportReq::SharedDtor() {
  target_home_module_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerReportReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerReportReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerReportReq& PlayerReportReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerReportReq* PlayerReportReq::New(::google::protobuf::Arena* arena) const {
  PlayerReportReq* n = new PlayerReportReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerReportReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerReportReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_home_module_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&target_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&target_uid_)) + sizeof(reason_));
  _internal_metadata_.Clear();
}

bool PlayerReportReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerReportReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_home_module_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_home_module_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string target_home_module_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_home_module_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_home_module_name().data(), static_cast<int>(this->target_home_module_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerReportReq.target_home_module_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string content = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerReportReq.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ReportReasonType reason = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason(static_cast< ::proto::ReportReasonType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerReportReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerReportReq)
  return false;
#undef DO_
}

void PlayerReportReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerReportReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_home_module_id = 5;
  if (this->target_home_module_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->target_home_module_id(), output);
  }

  // string target_home_module_name = 6;
  if (this->target_home_module_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_home_module_name().data(), static_cast<int>(this->target_home_module_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerReportReq.target_home_module_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->target_home_module_name(), output);
  }

  // string content = 8;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerReportReq.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->content(), output);
  }

  // .proto.ReportReasonType reason = 12;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->reason(), output);
  }

  // uint32 target_uid = 14;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerReportReq)
}

::google::protobuf::uint8* PlayerReportReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerReportReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_home_module_id = 5;
  if (this->target_home_module_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->target_home_module_id(), target);
  }

  // string target_home_module_name = 6;
  if (this->target_home_module_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_home_module_name().data(), static_cast<int>(this->target_home_module_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerReportReq.target_home_module_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->target_home_module_name(), target);
  }

  // string content = 8;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerReportReq.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->content(), target);
  }

  // .proto.ReportReasonType reason = 12;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->reason(), target);
  }

  // uint32 target_uid = 14;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerReportReq)
  return target;
}

size_t PlayerReportReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerReportReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string target_home_module_name = 6;
  if (this->target_home_module_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_home_module_name());
  }

  // string content = 8;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // uint32 target_uid = 14;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  // uint32 target_home_module_id = 5;
  if (this->target_home_module_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_home_module_id());
  }

  // .proto.ReportReasonType reason = 12;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerReportReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerReportReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerReportReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerReportReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerReportReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerReportReq)
    MergeFrom(*source);
  }
}

void PlayerReportReq::MergeFrom(const PlayerReportReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerReportReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_home_module_name().size() > 0) {

    target_home_module_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_home_module_name_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  if (from.target_home_module_id() != 0) {
    set_target_home_module_id(from.target_home_module_id());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void PlayerReportReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerReportReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerReportReq::CopyFrom(const PlayerReportReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerReportReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerReportReq::IsInitialized() const {
  return true;
}

void PlayerReportReq::Swap(PlayerReportReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerReportReq::InternalSwap(PlayerReportReq* other) {
  using std::swap;
  target_home_module_name_.Swap(&other->target_home_module_name_);
  content_.Swap(&other->content_);
  swap(target_uid_, other->target_uid_);
  swap(target_home_module_id_, other->target_home_module_id_);
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerReportReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerReportReq

// .proto.ReportReasonType reason = 12;
void PlayerReportReq::clear_reason() {
  reason_ = 0;
}
::proto::ReportReasonType PlayerReportReq::reason() const {
  // @@protoc_insertion_point(field_get:proto.PlayerReportReq.reason)
  return static_cast< ::proto::ReportReasonType >(reason_);
}
void PlayerReportReq::set_reason(::proto::ReportReasonType value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerReportReq.reason)
}

// string content = 8;
void PlayerReportReq::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerReportReq::content() const {
  // @@protoc_insertion_point(field_get:proto.PlayerReportReq.content)
  return content_.GetNoArena();
}
void PlayerReportReq::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerReportReq.content)
}
#if LANG_CXX11
void PlayerReportReq::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerReportReq.content)
}
#endif
void PlayerReportReq::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerReportReq.content)
}
void PlayerReportReq::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerReportReq.content)
}
::std::string* PlayerReportReq::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerReportReq.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerReportReq::release_content() {
  // @@protoc_insertion_point(field_release:proto.PlayerReportReq.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerReportReq::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerReportReq.content)
}

// uint32 target_home_module_id = 5;
void PlayerReportReq::clear_target_home_module_id() {
  target_home_module_id_ = 0u;
}
::google::protobuf::uint32 PlayerReportReq::target_home_module_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerReportReq.target_home_module_id)
  return target_home_module_id_;
}
void PlayerReportReq::set_target_home_module_id(::google::protobuf::uint32 value) {
  
  target_home_module_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerReportReq.target_home_module_id)
}

// string target_home_module_name = 6;
void PlayerReportReq::clear_target_home_module_name() {
  target_home_module_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerReportReq::target_home_module_name() const {
  // @@protoc_insertion_point(field_get:proto.PlayerReportReq.target_home_module_name)
  return target_home_module_name_.GetNoArena();
}
void PlayerReportReq::set_target_home_module_name(const ::std::string& value) {
  
  target_home_module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerReportReq.target_home_module_name)
}
#if LANG_CXX11
void PlayerReportReq::set_target_home_module_name(::std::string&& value) {
  
  target_home_module_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerReportReq.target_home_module_name)
}
#endif
void PlayerReportReq::set_target_home_module_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  target_home_module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerReportReq.target_home_module_name)
}
void PlayerReportReq::set_target_home_module_name(const char* value, size_t size) {
  
  target_home_module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerReportReq.target_home_module_name)
}
::std::string* PlayerReportReq::mutable_target_home_module_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerReportReq.target_home_module_name)
  return target_home_module_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerReportReq::release_target_home_module_name() {
  // @@protoc_insertion_point(field_release:proto.PlayerReportReq.target_home_module_name)
  
  return target_home_module_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerReportReq::set_allocated_target_home_module_name(::std::string* target_home_module_name) {
  if (target_home_module_name != NULL) {
    
  } else {
    
  }
  target_home_module_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_home_module_name);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerReportReq.target_home_module_name)
}

// uint32 target_uid = 14;
void PlayerReportReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 PlayerReportReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerReportReq.target_uid)
  return target_uid_;
}
void PlayerReportReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerReportReq.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerReportRsp::kCdTimeFieldNumber;
const int PlayerReportRsp::kTargetUidFieldNumber;
const int PlayerReportRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerReportRsp::PlayerReportRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerReportRsp)
}
PlayerReportRsp::PlayerReportRsp(const PlayerReportRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&cd_time_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(cd_time_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerReportRsp)
}

void PlayerReportRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cd_time_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(cd_time_));
  _cached_size_ = 0;
}

PlayerReportRsp::~PlayerReportRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerReportRsp)
  SharedDtor();
}

void PlayerReportRsp::SharedDtor() {
}

void PlayerReportRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerReportRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerReportRsp& PlayerReportRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerReportRsp* PlayerReportRsp::New(::google::protobuf::Arena* arena) const {
  PlayerReportRsp* n = new PlayerReportRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerReportRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerReportRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cd_time_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(cd_time_));
  _internal_metadata_.Clear();
}

bool PlayerReportRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerReportRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cd_time = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cd_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerReportRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerReportRsp)
  return false;
#undef DO_
}

void PlayerReportRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerReportRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 6;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->target_uid(), output);
  }

  // uint32 cd_time = 11;
  if (this->cd_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->cd_time(), output);
  }

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerReportRsp)
}

::google::protobuf::uint8* PlayerReportRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerReportRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 6;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->target_uid(), target);
  }

  // uint32 cd_time = 11;
  if (this->cd_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->cd_time(), target);
  }

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerReportRsp)
  return target;
}

size_t PlayerReportRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerReportRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 12;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 target_uid = 6;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  // uint32 cd_time = 11;
  if (this->cd_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cd_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerReportRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerReportRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerReportRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerReportRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerReportRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerReportRsp)
    MergeFrom(*source);
  }
}

void PlayerReportRsp::MergeFrom(const PlayerReportRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerReportRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  if (from.cd_time() != 0) {
    set_cd_time(from.cd_time());
  }
}

void PlayerReportRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerReportRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerReportRsp::CopyFrom(const PlayerReportRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerReportRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerReportRsp::IsInitialized() const {
  return true;
}

void PlayerReportRsp::Swap(PlayerReportRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerReportRsp::InternalSwap(PlayerReportRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(target_uid_, other->target_uid_);
  swap(cd_time_, other->cd_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerReportRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerReportRsp

// uint32 cd_time = 11;
void PlayerReportRsp::clear_cd_time() {
  cd_time_ = 0u;
}
::google::protobuf::uint32 PlayerReportRsp::cd_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerReportRsp.cd_time)
  return cd_time_;
}
void PlayerReportRsp::set_cd_time(::google::protobuf::uint32 value) {
  
  cd_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerReportRsp.cd_time)
}

// uint32 target_uid = 6;
void PlayerReportRsp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 PlayerReportRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerReportRsp.target_uid)
  return target_uid_;
}
void PlayerReportRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerReportRsp.target_uid)
}

// int32 retcode = 12;
void PlayerReportRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PlayerReportRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerReportRsp.retcode)
  return retcode_;
}
void PlayerReportRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerReportRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetFriendRemarkNameReq::kUidFieldNumber;
const int SetFriendRemarkNameReq::kRemarkNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetFriendRemarkNameReq::SetFriendRemarkNameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetFriendRemarkNameReq)
}
SetFriendRemarkNameReq::SetFriendRemarkNameReq(const SetFriendRemarkNameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  remark_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remark_name().size() > 0) {
    remark_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_name_);
  }
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:proto.SetFriendRemarkNameReq)
}

void SetFriendRemarkNameReq::SharedCtor() {
  remark_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_ = 0u;
  _cached_size_ = 0;
}

SetFriendRemarkNameReq::~SetFriendRemarkNameReq() {
  // @@protoc_insertion_point(destructor:proto.SetFriendRemarkNameReq)
  SharedDtor();
}

void SetFriendRemarkNameReq::SharedDtor() {
  remark_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetFriendRemarkNameReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetFriendRemarkNameReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetFriendRemarkNameReq& SetFriendRemarkNameReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetFriendRemarkNameReq* SetFriendRemarkNameReq::New(::google::protobuf::Arena* arena) const {
  SetFriendRemarkNameReq* n = new SetFriendRemarkNameReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetFriendRemarkNameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetFriendRemarkNameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  remark_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_ = 0u;
  _internal_metadata_.Clear();
}

bool SetFriendRemarkNameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetFriendRemarkNameReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string remark_name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remark_name().data(), static_cast<int>(this->remark_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SetFriendRemarkNameReq.remark_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetFriendRemarkNameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetFriendRemarkNameReq)
  return false;
#undef DO_
}

void SetFriendRemarkNameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetFriendRemarkNameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string remark_name = 8;
  if (this->remark_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark_name().data(), static_cast<int>(this->remark_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SetFriendRemarkNameReq.remark_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->remark_name(), output);
  }

  // uint32 uid = 10;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetFriendRemarkNameReq)
}

::google::protobuf::uint8* SetFriendRemarkNameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetFriendRemarkNameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string remark_name = 8;
  if (this->remark_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark_name().data(), static_cast<int>(this->remark_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SetFriendRemarkNameReq.remark_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->remark_name(), target);
  }

  // uint32 uid = 10;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetFriendRemarkNameReq)
  return target;
}

size_t SetFriendRemarkNameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetFriendRemarkNameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string remark_name = 8;
  if (this->remark_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remark_name());
  }

  // uint32 uid = 10;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetFriendRemarkNameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetFriendRemarkNameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetFriendRemarkNameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetFriendRemarkNameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetFriendRemarkNameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetFriendRemarkNameReq)
    MergeFrom(*source);
  }
}

void SetFriendRemarkNameReq::MergeFrom(const SetFriendRemarkNameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetFriendRemarkNameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.remark_name().size() > 0) {

    remark_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_name_);
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void SetFriendRemarkNameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetFriendRemarkNameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetFriendRemarkNameReq::CopyFrom(const SetFriendRemarkNameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetFriendRemarkNameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFriendRemarkNameReq::IsInitialized() const {
  return true;
}

void SetFriendRemarkNameReq::Swap(SetFriendRemarkNameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetFriendRemarkNameReq::InternalSwap(SetFriendRemarkNameReq* other) {
  using std::swap;
  remark_name_.Swap(&other->remark_name_);
  swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetFriendRemarkNameReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetFriendRemarkNameReq

// uint32 uid = 10;
void SetFriendRemarkNameReq::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 SetFriendRemarkNameReq::uid() const {
  // @@protoc_insertion_point(field_get:proto.SetFriendRemarkNameReq.uid)
  return uid_;
}
void SetFriendRemarkNameReq::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SetFriendRemarkNameReq.uid)
}

// string remark_name = 8;
void SetFriendRemarkNameReq::clear_remark_name() {
  remark_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetFriendRemarkNameReq::remark_name() const {
  // @@protoc_insertion_point(field_get:proto.SetFriendRemarkNameReq.remark_name)
  return remark_name_.GetNoArena();
}
void SetFriendRemarkNameReq::set_remark_name(const ::std::string& value) {
  
  remark_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetFriendRemarkNameReq.remark_name)
}
#if LANG_CXX11
void SetFriendRemarkNameReq::set_remark_name(::std::string&& value) {
  
  remark_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetFriendRemarkNameReq.remark_name)
}
#endif
void SetFriendRemarkNameReq::set_remark_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  remark_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetFriendRemarkNameReq.remark_name)
}
void SetFriendRemarkNameReq::set_remark_name(const char* value, size_t size) {
  
  remark_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetFriendRemarkNameReq.remark_name)
}
::std::string* SetFriendRemarkNameReq::mutable_remark_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetFriendRemarkNameReq.remark_name)
  return remark_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetFriendRemarkNameReq::release_remark_name() {
  // @@protoc_insertion_point(field_release:proto.SetFriendRemarkNameReq.remark_name)
  
  return remark_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetFriendRemarkNameReq::set_allocated_remark_name(::std::string* remark_name) {
  if (remark_name != NULL) {
    
  } else {
    
  }
  remark_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), remark_name);
  // @@protoc_insertion_point(field_set_allocated:proto.SetFriendRemarkNameReq.remark_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetFriendRemarkNameRsp::kRemarkNameFieldNumber;
const int SetFriendRemarkNameRsp::kIsClearRemarkFieldNumber;
const int SetFriendRemarkNameRsp::kUidFieldNumber;
const int SetFriendRemarkNameRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetFriendRemarkNameRsp::SetFriendRemarkNameRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetFriendRemarkNameRsp)
}
SetFriendRemarkNameRsp::SetFriendRemarkNameRsp(const SetFriendRemarkNameRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  remark_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remark_name().size() > 0) {
    remark_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_name_);
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:proto.SetFriendRemarkNameRsp)
}

void SetFriendRemarkNameRsp::SharedCtor() {
  remark_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(uid_));
  _cached_size_ = 0;
}

SetFriendRemarkNameRsp::~SetFriendRemarkNameRsp() {
  // @@protoc_insertion_point(destructor:proto.SetFriendRemarkNameRsp)
  SharedDtor();
}

void SetFriendRemarkNameRsp::SharedDtor() {
  remark_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetFriendRemarkNameRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetFriendRemarkNameRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetFriendRemarkNameRsp& SetFriendRemarkNameRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetFriendRemarkNameRsp* SetFriendRemarkNameRsp::New(::google::protobuf::Arena* arena) const {
  SetFriendRemarkNameRsp* n = new SetFriendRemarkNameRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetFriendRemarkNameRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetFriendRemarkNameRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  remark_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(uid_));
  _internal_metadata_.Clear();
}

bool SetFriendRemarkNameRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetFriendRemarkNameRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_clear_remark = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_clear_remark_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remark_name = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remark_name().data(), static_cast<int>(this->remark_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SetFriendRemarkNameRsp.remark_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetFriendRemarkNameRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetFriendRemarkNameRsp)
  return false;
#undef DO_
}

void SetFriendRemarkNameRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetFriendRemarkNameRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // bool is_clear_remark = 3;
  if (this->is_clear_remark() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_clear_remark(), output);
  }

  // uint32 uid = 10;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->uid(), output);
  }

  // string remark_name = 13;
  if (this->remark_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark_name().data(), static_cast<int>(this->remark_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SetFriendRemarkNameRsp.remark_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->remark_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetFriendRemarkNameRsp)
}

::google::protobuf::uint8* SetFriendRemarkNameRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetFriendRemarkNameRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // bool is_clear_remark = 3;
  if (this->is_clear_remark() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_clear_remark(), target);
  }

  // uint32 uid = 10;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->uid(), target);
  }

  // string remark_name = 13;
  if (this->remark_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark_name().data(), static_cast<int>(this->remark_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SetFriendRemarkNameRsp.remark_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->remark_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetFriendRemarkNameRsp)
  return target;
}

size_t SetFriendRemarkNameRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetFriendRemarkNameRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string remark_name = 13;
  if (this->remark_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remark_name());
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // bool is_clear_remark = 3;
  if (this->is_clear_remark() != 0) {
    total_size += 1 + 1;
  }

  // uint32 uid = 10;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetFriendRemarkNameRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetFriendRemarkNameRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetFriendRemarkNameRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetFriendRemarkNameRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetFriendRemarkNameRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetFriendRemarkNameRsp)
    MergeFrom(*source);
  }
}

void SetFriendRemarkNameRsp::MergeFrom(const SetFriendRemarkNameRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetFriendRemarkNameRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.remark_name().size() > 0) {

    remark_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_name_);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.is_clear_remark() != 0) {
    set_is_clear_remark(from.is_clear_remark());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void SetFriendRemarkNameRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetFriendRemarkNameRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetFriendRemarkNameRsp::CopyFrom(const SetFriendRemarkNameRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetFriendRemarkNameRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFriendRemarkNameRsp::IsInitialized() const {
  return true;
}

void SetFriendRemarkNameRsp::Swap(SetFriendRemarkNameRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetFriendRemarkNameRsp::InternalSwap(SetFriendRemarkNameRsp* other) {
  using std::swap;
  remark_name_.Swap(&other->remark_name_);
  swap(retcode_, other->retcode_);
  swap(is_clear_remark_, other->is_clear_remark_);
  swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetFriendRemarkNameRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetFriendRemarkNameRsp

// string remark_name = 13;
void SetFriendRemarkNameRsp::clear_remark_name() {
  remark_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetFriendRemarkNameRsp::remark_name() const {
  // @@protoc_insertion_point(field_get:proto.SetFriendRemarkNameRsp.remark_name)
  return remark_name_.GetNoArena();
}
void SetFriendRemarkNameRsp::set_remark_name(const ::std::string& value) {
  
  remark_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetFriendRemarkNameRsp.remark_name)
}
#if LANG_CXX11
void SetFriendRemarkNameRsp::set_remark_name(::std::string&& value) {
  
  remark_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetFriendRemarkNameRsp.remark_name)
}
#endif
void SetFriendRemarkNameRsp::set_remark_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  remark_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetFriendRemarkNameRsp.remark_name)
}
void SetFriendRemarkNameRsp::set_remark_name(const char* value, size_t size) {
  
  remark_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetFriendRemarkNameRsp.remark_name)
}
::std::string* SetFriendRemarkNameRsp::mutable_remark_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetFriendRemarkNameRsp.remark_name)
  return remark_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetFriendRemarkNameRsp::release_remark_name() {
  // @@protoc_insertion_point(field_release:proto.SetFriendRemarkNameRsp.remark_name)
  
  return remark_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetFriendRemarkNameRsp::set_allocated_remark_name(::std::string* remark_name) {
  if (remark_name != NULL) {
    
  } else {
    
  }
  remark_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), remark_name);
  // @@protoc_insertion_point(field_set_allocated:proto.SetFriendRemarkNameRsp.remark_name)
}

// bool is_clear_remark = 3;
void SetFriendRemarkNameRsp::clear_is_clear_remark() {
  is_clear_remark_ = false;
}
bool SetFriendRemarkNameRsp::is_clear_remark() const {
  // @@protoc_insertion_point(field_get:proto.SetFriendRemarkNameRsp.is_clear_remark)
  return is_clear_remark_;
}
void SetFriendRemarkNameRsp::set_is_clear_remark(bool value) {
  
  is_clear_remark_ = value;
  // @@protoc_insertion_point(field_set:proto.SetFriendRemarkNameRsp.is_clear_remark)
}

// uint32 uid = 10;
void SetFriendRemarkNameRsp::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 SetFriendRemarkNameRsp::uid() const {
  // @@protoc_insertion_point(field_get:proto.SetFriendRemarkNameRsp.uid)
  return uid_;
}
void SetFriendRemarkNameRsp::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SetFriendRemarkNameRsp.uid)
}

// int32 retcode = 1;
void SetFriendRemarkNameRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SetFriendRemarkNameRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetFriendRemarkNameRsp.retcode)
  return retcode_;
}
void SetFriendRemarkNameRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetFriendRemarkNameRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdatePlayerShowAvatarListReq::kIsShowAvatarFieldNumber;
const int UpdatePlayerShowAvatarListReq::kShowAvatarIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdatePlayerShowAvatarListReq::UpdatePlayerShowAvatarListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UpdatePlayerShowAvatarListReq)
}
UpdatePlayerShowAvatarListReq::UpdatePlayerShowAvatarListReq(const UpdatePlayerShowAvatarListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      show_avatar_id_list_(from.show_avatar_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_show_avatar_ = from.is_show_avatar_;
  // @@protoc_insertion_point(copy_constructor:proto.UpdatePlayerShowAvatarListReq)
}

void UpdatePlayerShowAvatarListReq::SharedCtor() {
  is_show_avatar_ = false;
  _cached_size_ = 0;
}

UpdatePlayerShowAvatarListReq::~UpdatePlayerShowAvatarListReq() {
  // @@protoc_insertion_point(destructor:proto.UpdatePlayerShowAvatarListReq)
  SharedDtor();
}

void UpdatePlayerShowAvatarListReq::SharedDtor() {
}

void UpdatePlayerShowAvatarListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdatePlayerShowAvatarListReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdatePlayerShowAvatarListReq& UpdatePlayerShowAvatarListReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdatePlayerShowAvatarListReq* UpdatePlayerShowAvatarListReq::New(::google::protobuf::Arena* arena) const {
  UpdatePlayerShowAvatarListReq* n = new UpdatePlayerShowAvatarListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdatePlayerShowAvatarListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdatePlayerShowAvatarListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_avatar_id_list_.Clear();
  is_show_avatar_ = false;
  _internal_metadata_.Clear();
}

bool UpdatePlayerShowAvatarListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UpdatePlayerShowAvatarListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 show_avatar_id_list = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_show_avatar_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 106u, input, this->mutable_show_avatar_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_show_avatar = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_show_avatar_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UpdatePlayerShowAvatarListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UpdatePlayerShowAvatarListReq)
  return false;
#undef DO_
}

void UpdatePlayerShowAvatarListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UpdatePlayerShowAvatarListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 show_avatar_id_list = 13;
  if (this->show_avatar_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _show_avatar_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->show_avatar_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->show_avatar_id_list(i), output);
  }

  // bool is_show_avatar = 15;
  if (this->is_show_avatar() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->is_show_avatar(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UpdatePlayerShowAvatarListReq)
}

::google::protobuf::uint8* UpdatePlayerShowAvatarListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdatePlayerShowAvatarListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 show_avatar_id_list = 13;
  if (this->show_avatar_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _show_avatar_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->show_avatar_id_list_, target);
  }

  // bool is_show_avatar = 15;
  if (this->is_show_avatar() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->is_show_avatar(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdatePlayerShowAvatarListReq)
  return target;
}

size_t UpdatePlayerShowAvatarListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdatePlayerShowAvatarListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 show_avatar_id_list = 13;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->show_avatar_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _show_avatar_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bool is_show_avatar = 15;
  if (this->is_show_avatar() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdatePlayerShowAvatarListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UpdatePlayerShowAvatarListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdatePlayerShowAvatarListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdatePlayerShowAvatarListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UpdatePlayerShowAvatarListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UpdatePlayerShowAvatarListReq)
    MergeFrom(*source);
  }
}

void UpdatePlayerShowAvatarListReq::MergeFrom(const UpdatePlayerShowAvatarListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdatePlayerShowAvatarListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  show_avatar_id_list_.MergeFrom(from.show_avatar_id_list_);
  if (from.is_show_avatar() != 0) {
    set_is_show_avatar(from.is_show_avatar());
  }
}

void UpdatePlayerShowAvatarListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UpdatePlayerShowAvatarListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdatePlayerShowAvatarListReq::CopyFrom(const UpdatePlayerShowAvatarListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdatePlayerShowAvatarListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatePlayerShowAvatarListReq::IsInitialized() const {
  return true;
}

void UpdatePlayerShowAvatarListReq::Swap(UpdatePlayerShowAvatarListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdatePlayerShowAvatarListReq::InternalSwap(UpdatePlayerShowAvatarListReq* other) {
  using std::swap;
  show_avatar_id_list_.InternalSwap(&other->show_avatar_id_list_);
  swap(is_show_avatar_, other->is_show_avatar_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdatePlayerShowAvatarListReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdatePlayerShowAvatarListReq

// bool is_show_avatar = 15;
void UpdatePlayerShowAvatarListReq::clear_is_show_avatar() {
  is_show_avatar_ = false;
}
bool UpdatePlayerShowAvatarListReq::is_show_avatar() const {
  // @@protoc_insertion_point(field_get:proto.UpdatePlayerShowAvatarListReq.is_show_avatar)
  return is_show_avatar_;
}
void UpdatePlayerShowAvatarListReq::set_is_show_avatar(bool value) {
  
  is_show_avatar_ = value;
  // @@protoc_insertion_point(field_set:proto.UpdatePlayerShowAvatarListReq.is_show_avatar)
}

// repeated uint32 show_avatar_id_list = 13;
int UpdatePlayerShowAvatarListReq::show_avatar_id_list_size() const {
  return show_avatar_id_list_.size();
}
void UpdatePlayerShowAvatarListReq::clear_show_avatar_id_list() {
  show_avatar_id_list_.Clear();
}
::google::protobuf::uint32 UpdatePlayerShowAvatarListReq::show_avatar_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UpdatePlayerShowAvatarListReq.show_avatar_id_list)
  return show_avatar_id_list_.Get(index);
}
void UpdatePlayerShowAvatarListReq::set_show_avatar_id_list(int index, ::google::protobuf::uint32 value) {
  show_avatar_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.UpdatePlayerShowAvatarListReq.show_avatar_id_list)
}
void UpdatePlayerShowAvatarListReq::add_show_avatar_id_list(::google::protobuf::uint32 value) {
  show_avatar_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.UpdatePlayerShowAvatarListReq.show_avatar_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UpdatePlayerShowAvatarListReq::show_avatar_id_list() const {
  // @@protoc_insertion_point(field_list:proto.UpdatePlayerShowAvatarListReq.show_avatar_id_list)
  return show_avatar_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UpdatePlayerShowAvatarListReq::mutable_show_avatar_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UpdatePlayerShowAvatarListReq.show_avatar_id_list)
  return &show_avatar_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdatePlayerShowAvatarListRsp::kShowAvatarIdListFieldNumber;
const int UpdatePlayerShowAvatarListRsp::kIsShowAvatarFieldNumber;
const int UpdatePlayerShowAvatarListRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdatePlayerShowAvatarListRsp::UpdatePlayerShowAvatarListRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UpdatePlayerShowAvatarListRsp)
}
UpdatePlayerShowAvatarListRsp::UpdatePlayerShowAvatarListRsp(const UpdatePlayerShowAvatarListRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      show_avatar_id_list_(from.show_avatar_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_show_avatar_, &from.is_show_avatar_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&is_show_avatar_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.UpdatePlayerShowAvatarListRsp)
}

void UpdatePlayerShowAvatarListRsp::SharedCtor() {
  ::memset(&is_show_avatar_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&is_show_avatar_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

UpdatePlayerShowAvatarListRsp::~UpdatePlayerShowAvatarListRsp() {
  // @@protoc_insertion_point(destructor:proto.UpdatePlayerShowAvatarListRsp)
  SharedDtor();
}

void UpdatePlayerShowAvatarListRsp::SharedDtor() {
}

void UpdatePlayerShowAvatarListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdatePlayerShowAvatarListRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdatePlayerShowAvatarListRsp& UpdatePlayerShowAvatarListRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdatePlayerShowAvatarListRsp* UpdatePlayerShowAvatarListRsp::New(::google::protobuf::Arena* arena) const {
  UpdatePlayerShowAvatarListRsp* n = new UpdatePlayerShowAvatarListRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdatePlayerShowAvatarListRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdatePlayerShowAvatarListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_avatar_id_list_.Clear();
  ::memset(&is_show_avatar_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&is_show_avatar_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool UpdatePlayerShowAvatarListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UpdatePlayerShowAvatarListRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 show_avatar_id_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_show_avatar_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_show_avatar_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_show_avatar = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_show_avatar_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UpdatePlayerShowAvatarListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UpdatePlayerShowAvatarListRsp)
  return false;
#undef DO_
}

void UpdatePlayerShowAvatarListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UpdatePlayerShowAvatarListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 show_avatar_id_list = 1;
  if (this->show_avatar_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _show_avatar_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->show_avatar_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->show_avatar_id_list(i), output);
  }

  // bool is_show_avatar = 3;
  if (this->is_show_avatar() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_show_avatar(), output);
  }

  // int32 retcode = 10;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UpdatePlayerShowAvatarListRsp)
}

::google::protobuf::uint8* UpdatePlayerShowAvatarListRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdatePlayerShowAvatarListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 show_avatar_id_list = 1;
  if (this->show_avatar_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _show_avatar_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->show_avatar_id_list_, target);
  }

  // bool is_show_avatar = 3;
  if (this->is_show_avatar() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_show_avatar(), target);
  }

  // int32 retcode = 10;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdatePlayerShowAvatarListRsp)
  return target;
}

size_t UpdatePlayerShowAvatarListRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdatePlayerShowAvatarListRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 show_avatar_id_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->show_avatar_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _show_avatar_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bool is_show_avatar = 3;
  if (this->is_show_avatar() != 0) {
    total_size += 1 + 1;
  }

  // int32 retcode = 10;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdatePlayerShowAvatarListRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UpdatePlayerShowAvatarListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdatePlayerShowAvatarListRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdatePlayerShowAvatarListRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UpdatePlayerShowAvatarListRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UpdatePlayerShowAvatarListRsp)
    MergeFrom(*source);
  }
}

void UpdatePlayerShowAvatarListRsp::MergeFrom(const UpdatePlayerShowAvatarListRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdatePlayerShowAvatarListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  show_avatar_id_list_.MergeFrom(from.show_avatar_id_list_);
  if (from.is_show_avatar() != 0) {
    set_is_show_avatar(from.is_show_avatar());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void UpdatePlayerShowAvatarListRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UpdatePlayerShowAvatarListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdatePlayerShowAvatarListRsp::CopyFrom(const UpdatePlayerShowAvatarListRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdatePlayerShowAvatarListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatePlayerShowAvatarListRsp::IsInitialized() const {
  return true;
}

void UpdatePlayerShowAvatarListRsp::Swap(UpdatePlayerShowAvatarListRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdatePlayerShowAvatarListRsp::InternalSwap(UpdatePlayerShowAvatarListRsp* other) {
  using std::swap;
  show_avatar_id_list_.InternalSwap(&other->show_avatar_id_list_);
  swap(is_show_avatar_, other->is_show_avatar_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdatePlayerShowAvatarListRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdatePlayerShowAvatarListRsp

// repeated uint32 show_avatar_id_list = 1;
int UpdatePlayerShowAvatarListRsp::show_avatar_id_list_size() const {
  return show_avatar_id_list_.size();
}
void UpdatePlayerShowAvatarListRsp::clear_show_avatar_id_list() {
  show_avatar_id_list_.Clear();
}
::google::protobuf::uint32 UpdatePlayerShowAvatarListRsp::show_avatar_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UpdatePlayerShowAvatarListRsp.show_avatar_id_list)
  return show_avatar_id_list_.Get(index);
}
void UpdatePlayerShowAvatarListRsp::set_show_avatar_id_list(int index, ::google::protobuf::uint32 value) {
  show_avatar_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.UpdatePlayerShowAvatarListRsp.show_avatar_id_list)
}
void UpdatePlayerShowAvatarListRsp::add_show_avatar_id_list(::google::protobuf::uint32 value) {
  show_avatar_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.UpdatePlayerShowAvatarListRsp.show_avatar_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UpdatePlayerShowAvatarListRsp::show_avatar_id_list() const {
  // @@protoc_insertion_point(field_list:proto.UpdatePlayerShowAvatarListRsp.show_avatar_id_list)
  return show_avatar_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UpdatePlayerShowAvatarListRsp::mutable_show_avatar_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UpdatePlayerShowAvatarListRsp.show_avatar_id_list)
  return &show_avatar_id_list_;
}

// bool is_show_avatar = 3;
void UpdatePlayerShowAvatarListRsp::clear_is_show_avatar() {
  is_show_avatar_ = false;
}
bool UpdatePlayerShowAvatarListRsp::is_show_avatar() const {
  // @@protoc_insertion_point(field_get:proto.UpdatePlayerShowAvatarListRsp.is_show_avatar)
  return is_show_avatar_;
}
void UpdatePlayerShowAvatarListRsp::set_is_show_avatar(bool value) {
  
  is_show_avatar_ = value;
  // @@protoc_insertion_point(field_set:proto.UpdatePlayerShowAvatarListRsp.is_show_avatar)
}

// int32 retcode = 10;
void UpdatePlayerShowAvatarListRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 UpdatePlayerShowAvatarListRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.UpdatePlayerShowAvatarListRsp.retcode)
  return retcode_;
}
void UpdatePlayerShowAvatarListRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.UpdatePlayerShowAvatarListRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFriendShowAvatarInfoReq::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFriendShowAvatarInfoReq::GetFriendShowAvatarInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetFriendShowAvatarInfoReq)
}
GetFriendShowAvatarInfoReq::GetFriendShowAvatarInfoReq(const GetFriendShowAvatarInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:proto.GetFriendShowAvatarInfoReq)
}

void GetFriendShowAvatarInfoReq::SharedCtor() {
  uid_ = 0u;
  _cached_size_ = 0;
}

GetFriendShowAvatarInfoReq::~GetFriendShowAvatarInfoReq() {
  // @@protoc_insertion_point(destructor:proto.GetFriendShowAvatarInfoReq)
  SharedDtor();
}

void GetFriendShowAvatarInfoReq::SharedDtor() {
}

void GetFriendShowAvatarInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFriendShowAvatarInfoReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetFriendShowAvatarInfoReq& GetFriendShowAvatarInfoReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetFriendShowAvatarInfoReq* GetFriendShowAvatarInfoReq::New(::google::protobuf::Arena* arena) const {
  GetFriendShowAvatarInfoReq* n = new GetFriendShowAvatarInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFriendShowAvatarInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetFriendShowAvatarInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_ = 0u;
  _internal_metadata_.Clear();
}

bool GetFriendShowAvatarInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetFriendShowAvatarInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetFriendShowAvatarInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetFriendShowAvatarInfoReq)
  return false;
#undef DO_
}

void GetFriendShowAvatarInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetFriendShowAvatarInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 15;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetFriendShowAvatarInfoReq)
}

::google::protobuf::uint8* GetFriendShowAvatarInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetFriendShowAvatarInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 15;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetFriendShowAvatarInfoReq)
  return target;
}

size_t GetFriendShowAvatarInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetFriendShowAvatarInfoReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 uid = 15;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFriendShowAvatarInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetFriendShowAvatarInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFriendShowAvatarInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFriendShowAvatarInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetFriendShowAvatarInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetFriendShowAvatarInfoReq)
    MergeFrom(*source);
  }
}

void GetFriendShowAvatarInfoReq::MergeFrom(const GetFriendShowAvatarInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetFriendShowAvatarInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void GetFriendShowAvatarInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetFriendShowAvatarInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFriendShowAvatarInfoReq::CopyFrom(const GetFriendShowAvatarInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetFriendShowAvatarInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFriendShowAvatarInfoReq::IsInitialized() const {
  return true;
}

void GetFriendShowAvatarInfoReq::Swap(GetFriendShowAvatarInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFriendShowAvatarInfoReq::InternalSwap(GetFriendShowAvatarInfoReq* other) {
  using std::swap;
  swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFriendShowAvatarInfoReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetFriendShowAvatarInfoReq

// uint32 uid = 15;
void GetFriendShowAvatarInfoReq::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 GetFriendShowAvatarInfoReq::uid() const {
  // @@protoc_insertion_point(field_get:proto.GetFriendShowAvatarInfoReq.uid)
  return uid_;
}
void GetFriendShowAvatarInfoReq::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetFriendShowAvatarInfoReq.uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFriendShowAvatarInfoRsp::kUidFieldNumber;
const int GetFriendShowAvatarInfoRsp::kRetcodeFieldNumber;
const int GetFriendShowAvatarInfoRsp::kShowAvatarInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFriendShowAvatarInfoRsp::GetFriendShowAvatarInfoRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetFriendShowAvatarInfoRsp)
}
GetFriendShowAvatarInfoRsp::GetFriendShowAvatarInfoRsp(const GetFriendShowAvatarInfoRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      show_avatar_info_list_(from.show_avatar_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:proto.GetFriendShowAvatarInfoRsp)
}

void GetFriendShowAvatarInfoRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(uid_));
  _cached_size_ = 0;
}

GetFriendShowAvatarInfoRsp::~GetFriendShowAvatarInfoRsp() {
  // @@protoc_insertion_point(destructor:proto.GetFriendShowAvatarInfoRsp)
  SharedDtor();
}

void GetFriendShowAvatarInfoRsp::SharedDtor() {
}

void GetFriendShowAvatarInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFriendShowAvatarInfoRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetFriendShowAvatarInfoRsp& GetFriendShowAvatarInfoRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetFriendShowAvatarInfoRsp* GetFriendShowAvatarInfoRsp::New(::google::protobuf::Arena* arena) const {
  GetFriendShowAvatarInfoRsp* n = new GetFriendShowAvatarInfoRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFriendShowAvatarInfoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetFriendShowAvatarInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_avatar_info_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(uid_));
  _internal_metadata_.Clear();
}

bool GetFriendShowAvatarInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetFriendShowAvatarInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ShowAvatarInfo show_avatar_info_list = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_show_avatar_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetFriendShowAvatarInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetFriendShowAvatarInfoRsp)
  return false;
#undef DO_
}

void GetFriendShowAvatarInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetFriendShowAvatarInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 3;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->retcode(), output);
  }

  // uint32 uid = 6;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->uid(), output);
  }

  // repeated .proto.ShowAvatarInfo show_avatar_info_list = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->show_avatar_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->show_avatar_info_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetFriendShowAvatarInfoRsp)
}

::google::protobuf::uint8* GetFriendShowAvatarInfoRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetFriendShowAvatarInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 3;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->retcode(), target);
  }

  // uint32 uid = 6;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->uid(), target);
  }

  // repeated .proto.ShowAvatarInfo show_avatar_info_list = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->show_avatar_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->show_avatar_info_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetFriendShowAvatarInfoRsp)
  return target;
}

size_t GetFriendShowAvatarInfoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetFriendShowAvatarInfoRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ShowAvatarInfo show_avatar_info_list = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->show_avatar_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->show_avatar_info_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 3;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 uid = 6;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFriendShowAvatarInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetFriendShowAvatarInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFriendShowAvatarInfoRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFriendShowAvatarInfoRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetFriendShowAvatarInfoRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetFriendShowAvatarInfoRsp)
    MergeFrom(*source);
  }
}

void GetFriendShowAvatarInfoRsp::MergeFrom(const GetFriendShowAvatarInfoRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetFriendShowAvatarInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  show_avatar_info_list_.MergeFrom(from.show_avatar_info_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void GetFriendShowAvatarInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetFriendShowAvatarInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFriendShowAvatarInfoRsp::CopyFrom(const GetFriendShowAvatarInfoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetFriendShowAvatarInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFriendShowAvatarInfoRsp::IsInitialized() const {
  return true;
}

void GetFriendShowAvatarInfoRsp::Swap(GetFriendShowAvatarInfoRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFriendShowAvatarInfoRsp::InternalSwap(GetFriendShowAvatarInfoRsp* other) {
  using std::swap;
  show_avatar_info_list_.InternalSwap(&other->show_avatar_info_list_);
  swap(retcode_, other->retcode_);
  swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFriendShowAvatarInfoRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetFriendShowAvatarInfoRsp

// uint32 uid = 6;
void GetFriendShowAvatarInfoRsp::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 GetFriendShowAvatarInfoRsp::uid() const {
  // @@protoc_insertion_point(field_get:proto.GetFriendShowAvatarInfoRsp.uid)
  return uid_;
}
void GetFriendShowAvatarInfoRsp::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetFriendShowAvatarInfoRsp.uid)
}

// int32 retcode = 3;
void GetFriendShowAvatarInfoRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetFriendShowAvatarInfoRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetFriendShowAvatarInfoRsp.retcode)
  return retcode_;
}
void GetFriendShowAvatarInfoRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetFriendShowAvatarInfoRsp.retcode)
}

// repeated .proto.ShowAvatarInfo show_avatar_info_list = 9;
int GetFriendShowAvatarInfoRsp::show_avatar_info_list_size() const {
  return show_avatar_info_list_.size();
}
void GetFriendShowAvatarInfoRsp::clear_show_avatar_info_list() {
  show_avatar_info_list_.Clear();
}
const ::proto::ShowAvatarInfo& GetFriendShowAvatarInfoRsp::show_avatar_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetFriendShowAvatarInfoRsp.show_avatar_info_list)
  return show_avatar_info_list_.Get(index);
}
::proto::ShowAvatarInfo* GetFriendShowAvatarInfoRsp::mutable_show_avatar_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetFriendShowAvatarInfoRsp.show_avatar_info_list)
  return show_avatar_info_list_.Mutable(index);
}
::proto::ShowAvatarInfo* GetFriendShowAvatarInfoRsp::add_show_avatar_info_list() {
  // @@protoc_insertion_point(field_add:proto.GetFriendShowAvatarInfoRsp.show_avatar_info_list)
  return show_avatar_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ShowAvatarInfo >*
GetFriendShowAvatarInfoRsp::mutable_show_avatar_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetFriendShowAvatarInfoRsp.show_avatar_info_list)
  return &show_avatar_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ShowAvatarInfo >&
GetFriendShowAvatarInfoRsp::show_avatar_info_list() const {
  // @@protoc_insertion_point(field_list:proto.GetFriendShowAvatarInfoRsp.show_avatar_info_list)
  return show_avatar_info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdatePlayerShowNameCardListReq::kShowNameCardIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdatePlayerShowNameCardListReq::UpdatePlayerShowNameCardListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UpdatePlayerShowNameCardListReq)
}
UpdatePlayerShowNameCardListReq::UpdatePlayerShowNameCardListReq(const UpdatePlayerShowNameCardListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      show_name_card_id_list_(from.show_name_card_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.UpdatePlayerShowNameCardListReq)
}

void UpdatePlayerShowNameCardListReq::SharedCtor() {
  _cached_size_ = 0;
}

UpdatePlayerShowNameCardListReq::~UpdatePlayerShowNameCardListReq() {
  // @@protoc_insertion_point(destructor:proto.UpdatePlayerShowNameCardListReq)
  SharedDtor();
}

void UpdatePlayerShowNameCardListReq::SharedDtor() {
}

void UpdatePlayerShowNameCardListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdatePlayerShowNameCardListReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdatePlayerShowNameCardListReq& UpdatePlayerShowNameCardListReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdatePlayerShowNameCardListReq* UpdatePlayerShowNameCardListReq::New(::google::protobuf::Arena* arena) const {
  UpdatePlayerShowNameCardListReq* n = new UpdatePlayerShowNameCardListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdatePlayerShowNameCardListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdatePlayerShowNameCardListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_name_card_id_list_.Clear();
  _internal_metadata_.Clear();
}

bool UpdatePlayerShowNameCardListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UpdatePlayerShowNameCardListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 show_name_card_id_list = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_show_name_card_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 122u, input, this->mutable_show_name_card_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UpdatePlayerShowNameCardListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UpdatePlayerShowNameCardListReq)
  return false;
#undef DO_
}

void UpdatePlayerShowNameCardListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UpdatePlayerShowNameCardListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 show_name_card_id_list = 15;
  if (this->show_name_card_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(15, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _show_name_card_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->show_name_card_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->show_name_card_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UpdatePlayerShowNameCardListReq)
}

::google::protobuf::uint8* UpdatePlayerShowNameCardListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdatePlayerShowNameCardListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 show_name_card_id_list = 15;
  if (this->show_name_card_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      15,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _show_name_card_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->show_name_card_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdatePlayerShowNameCardListReq)
  return target;
}

size_t UpdatePlayerShowNameCardListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdatePlayerShowNameCardListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 show_name_card_id_list = 15;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->show_name_card_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _show_name_card_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdatePlayerShowNameCardListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UpdatePlayerShowNameCardListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdatePlayerShowNameCardListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdatePlayerShowNameCardListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UpdatePlayerShowNameCardListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UpdatePlayerShowNameCardListReq)
    MergeFrom(*source);
  }
}

void UpdatePlayerShowNameCardListReq::MergeFrom(const UpdatePlayerShowNameCardListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdatePlayerShowNameCardListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  show_name_card_id_list_.MergeFrom(from.show_name_card_id_list_);
}

void UpdatePlayerShowNameCardListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UpdatePlayerShowNameCardListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdatePlayerShowNameCardListReq::CopyFrom(const UpdatePlayerShowNameCardListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdatePlayerShowNameCardListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatePlayerShowNameCardListReq::IsInitialized() const {
  return true;
}

void UpdatePlayerShowNameCardListReq::Swap(UpdatePlayerShowNameCardListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdatePlayerShowNameCardListReq::InternalSwap(UpdatePlayerShowNameCardListReq* other) {
  using std::swap;
  show_name_card_id_list_.InternalSwap(&other->show_name_card_id_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdatePlayerShowNameCardListReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdatePlayerShowNameCardListReq

// repeated uint32 show_name_card_id_list = 15;
int UpdatePlayerShowNameCardListReq::show_name_card_id_list_size() const {
  return show_name_card_id_list_.size();
}
void UpdatePlayerShowNameCardListReq::clear_show_name_card_id_list() {
  show_name_card_id_list_.Clear();
}
::google::protobuf::uint32 UpdatePlayerShowNameCardListReq::show_name_card_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UpdatePlayerShowNameCardListReq.show_name_card_id_list)
  return show_name_card_id_list_.Get(index);
}
void UpdatePlayerShowNameCardListReq::set_show_name_card_id_list(int index, ::google::protobuf::uint32 value) {
  show_name_card_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.UpdatePlayerShowNameCardListReq.show_name_card_id_list)
}
void UpdatePlayerShowNameCardListReq::add_show_name_card_id_list(::google::protobuf::uint32 value) {
  show_name_card_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.UpdatePlayerShowNameCardListReq.show_name_card_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UpdatePlayerShowNameCardListReq::show_name_card_id_list() const {
  // @@protoc_insertion_point(field_list:proto.UpdatePlayerShowNameCardListReq.show_name_card_id_list)
  return show_name_card_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UpdatePlayerShowNameCardListReq::mutable_show_name_card_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UpdatePlayerShowNameCardListReq.show_name_card_id_list)
  return &show_name_card_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdatePlayerShowNameCardListRsp::kRetcodeFieldNumber;
const int UpdatePlayerShowNameCardListRsp::kShowNameCardIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdatePlayerShowNameCardListRsp::UpdatePlayerShowNameCardListRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UpdatePlayerShowNameCardListRsp)
}
UpdatePlayerShowNameCardListRsp::UpdatePlayerShowNameCardListRsp(const UpdatePlayerShowNameCardListRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      show_name_card_id_list_(from.show_name_card_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.UpdatePlayerShowNameCardListRsp)
}

void UpdatePlayerShowNameCardListRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

UpdatePlayerShowNameCardListRsp::~UpdatePlayerShowNameCardListRsp() {
  // @@protoc_insertion_point(destructor:proto.UpdatePlayerShowNameCardListRsp)
  SharedDtor();
}

void UpdatePlayerShowNameCardListRsp::SharedDtor() {
}

void UpdatePlayerShowNameCardListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdatePlayerShowNameCardListRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdatePlayerShowNameCardListRsp& UpdatePlayerShowNameCardListRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdatePlayerShowNameCardListRsp* UpdatePlayerShowNameCardListRsp::New(::google::protobuf::Arena* arena) const {
  UpdatePlayerShowNameCardListRsp* n = new UpdatePlayerShowNameCardListRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdatePlayerShowNameCardListRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdatePlayerShowNameCardListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_name_card_id_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool UpdatePlayerShowNameCardListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UpdatePlayerShowNameCardListRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 show_name_card_id_list = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_show_name_card_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 98u, input, this->mutable_show_name_card_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UpdatePlayerShowNameCardListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UpdatePlayerShowNameCardListRsp)
  return false;
#undef DO_
}

void UpdatePlayerShowNameCardListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UpdatePlayerShowNameCardListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 show_name_card_id_list = 12;
  if (this->show_name_card_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _show_name_card_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->show_name_card_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->show_name_card_id_list(i), output);
  }

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UpdatePlayerShowNameCardListRsp)
}

::google::protobuf::uint8* UpdatePlayerShowNameCardListRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdatePlayerShowNameCardListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 show_name_card_id_list = 12;
  if (this->show_name_card_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _show_name_card_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->show_name_card_id_list_, target);
  }

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdatePlayerShowNameCardListRsp)
  return target;
}

size_t UpdatePlayerShowNameCardListRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdatePlayerShowNameCardListRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 show_name_card_id_list = 12;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->show_name_card_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _show_name_card_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdatePlayerShowNameCardListRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UpdatePlayerShowNameCardListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdatePlayerShowNameCardListRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdatePlayerShowNameCardListRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UpdatePlayerShowNameCardListRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UpdatePlayerShowNameCardListRsp)
    MergeFrom(*source);
  }
}

void UpdatePlayerShowNameCardListRsp::MergeFrom(const UpdatePlayerShowNameCardListRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdatePlayerShowNameCardListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  show_name_card_id_list_.MergeFrom(from.show_name_card_id_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void UpdatePlayerShowNameCardListRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UpdatePlayerShowNameCardListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdatePlayerShowNameCardListRsp::CopyFrom(const UpdatePlayerShowNameCardListRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdatePlayerShowNameCardListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatePlayerShowNameCardListRsp::IsInitialized() const {
  return true;
}

void UpdatePlayerShowNameCardListRsp::Swap(UpdatePlayerShowNameCardListRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdatePlayerShowNameCardListRsp::InternalSwap(UpdatePlayerShowNameCardListRsp* other) {
  using std::swap;
  show_name_card_id_list_.InternalSwap(&other->show_name_card_id_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdatePlayerShowNameCardListRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdatePlayerShowNameCardListRsp

// int32 retcode = 13;
void UpdatePlayerShowNameCardListRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 UpdatePlayerShowNameCardListRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.UpdatePlayerShowNameCardListRsp.retcode)
  return retcode_;
}
void UpdatePlayerShowNameCardListRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.UpdatePlayerShowNameCardListRsp.retcode)
}

// repeated uint32 show_name_card_id_list = 12;
int UpdatePlayerShowNameCardListRsp::show_name_card_id_list_size() const {
  return show_name_card_id_list_.size();
}
void UpdatePlayerShowNameCardListRsp::clear_show_name_card_id_list() {
  show_name_card_id_list_.Clear();
}
::google::protobuf::uint32 UpdatePlayerShowNameCardListRsp::show_name_card_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UpdatePlayerShowNameCardListRsp.show_name_card_id_list)
  return show_name_card_id_list_.Get(index);
}
void UpdatePlayerShowNameCardListRsp::set_show_name_card_id_list(int index, ::google::protobuf::uint32 value) {
  show_name_card_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.UpdatePlayerShowNameCardListRsp.show_name_card_id_list)
}
void UpdatePlayerShowNameCardListRsp::add_show_name_card_id_list(::google::protobuf::uint32 value) {
  show_name_card_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.UpdatePlayerShowNameCardListRsp.show_name_card_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UpdatePlayerShowNameCardListRsp::show_name_card_id_list() const {
  // @@protoc_insertion_point(field_list:proto.UpdatePlayerShowNameCardListRsp.show_name_card_id_list)
  return show_name_card_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UpdatePlayerShowNameCardListRsp::mutable_show_name_card_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UpdatePlayerShowNameCardListRsp.show_name_card_id_list)
  return &show_name_card_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFriendShowNameCardInfoReq::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFriendShowNameCardInfoReq::GetFriendShowNameCardInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetFriendShowNameCardInfoReq)
}
GetFriendShowNameCardInfoReq::GetFriendShowNameCardInfoReq(const GetFriendShowNameCardInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:proto.GetFriendShowNameCardInfoReq)
}

void GetFriendShowNameCardInfoReq::SharedCtor() {
  uid_ = 0u;
  _cached_size_ = 0;
}

GetFriendShowNameCardInfoReq::~GetFriendShowNameCardInfoReq() {
  // @@protoc_insertion_point(destructor:proto.GetFriendShowNameCardInfoReq)
  SharedDtor();
}

void GetFriendShowNameCardInfoReq::SharedDtor() {
}

void GetFriendShowNameCardInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFriendShowNameCardInfoReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetFriendShowNameCardInfoReq& GetFriendShowNameCardInfoReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetFriendShowNameCardInfoReq* GetFriendShowNameCardInfoReq::New(::google::protobuf::Arena* arena) const {
  GetFriendShowNameCardInfoReq* n = new GetFriendShowNameCardInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFriendShowNameCardInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetFriendShowNameCardInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_ = 0u;
  _internal_metadata_.Clear();
}

bool GetFriendShowNameCardInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetFriendShowNameCardInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetFriendShowNameCardInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetFriendShowNameCardInfoReq)
  return false;
#undef DO_
}

void GetFriendShowNameCardInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetFriendShowNameCardInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 3;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetFriendShowNameCardInfoReq)
}

::google::protobuf::uint8* GetFriendShowNameCardInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetFriendShowNameCardInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 3;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetFriendShowNameCardInfoReq)
  return target;
}

size_t GetFriendShowNameCardInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetFriendShowNameCardInfoReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 uid = 3;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFriendShowNameCardInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetFriendShowNameCardInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFriendShowNameCardInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFriendShowNameCardInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetFriendShowNameCardInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetFriendShowNameCardInfoReq)
    MergeFrom(*source);
  }
}

void GetFriendShowNameCardInfoReq::MergeFrom(const GetFriendShowNameCardInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetFriendShowNameCardInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void GetFriendShowNameCardInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetFriendShowNameCardInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFriendShowNameCardInfoReq::CopyFrom(const GetFriendShowNameCardInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetFriendShowNameCardInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFriendShowNameCardInfoReq::IsInitialized() const {
  return true;
}

void GetFriendShowNameCardInfoReq::Swap(GetFriendShowNameCardInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFriendShowNameCardInfoReq::InternalSwap(GetFriendShowNameCardInfoReq* other) {
  using std::swap;
  swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFriendShowNameCardInfoReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetFriendShowNameCardInfoReq

// uint32 uid = 3;
void GetFriendShowNameCardInfoReq::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 GetFriendShowNameCardInfoReq::uid() const {
  // @@protoc_insertion_point(field_get:proto.GetFriendShowNameCardInfoReq.uid)
  return uid_;
}
void GetFriendShowNameCardInfoReq::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetFriendShowNameCardInfoReq.uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFriendShowNameCardInfoRsp::kRetcodeFieldNumber;
const int GetFriendShowNameCardInfoRsp::kUidFieldNumber;
const int GetFriendShowNameCardInfoRsp::kShowNameCardIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFriendShowNameCardInfoRsp::GetFriendShowNameCardInfoRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetFriendShowNameCardInfoRsp)
}
GetFriendShowNameCardInfoRsp::GetFriendShowNameCardInfoRsp(const GetFriendShowNameCardInfoRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      show_name_card_id_list_(from.show_name_card_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.GetFriendShowNameCardInfoRsp)
}

void GetFriendShowNameCardInfoRsp::SharedCtor() {
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

GetFriendShowNameCardInfoRsp::~GetFriendShowNameCardInfoRsp() {
  // @@protoc_insertion_point(destructor:proto.GetFriendShowNameCardInfoRsp)
  SharedDtor();
}

void GetFriendShowNameCardInfoRsp::SharedDtor() {
}

void GetFriendShowNameCardInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFriendShowNameCardInfoRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetFriendShowNameCardInfoRsp& GetFriendShowNameCardInfoRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetFriendShowNameCardInfoRsp* GetFriendShowNameCardInfoRsp::New(::google::protobuf::Arena* arena) const {
  GetFriendShowNameCardInfoRsp* n = new GetFriendShowNameCardInfoRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFriendShowNameCardInfoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetFriendShowNameCardInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_name_card_id_list_.Clear();
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool GetFriendShowNameCardInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetFriendShowNameCardInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 show_name_card_id_list = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_show_name_card_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 82u, input, this->mutable_show_name_card_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetFriendShowNameCardInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetFriendShowNameCardInfoRsp)
  return false;
#undef DO_
}

void GetFriendShowNameCardInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetFriendShowNameCardInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 7;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->uid(), output);
  }

  // repeated uint32 show_name_card_id_list = 10;
  if (this->show_name_card_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _show_name_card_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->show_name_card_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->show_name_card_id_list(i), output);
  }

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetFriendShowNameCardInfoRsp)
}

::google::protobuf::uint8* GetFriendShowNameCardInfoRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetFriendShowNameCardInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 7;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->uid(), target);
  }

  // repeated uint32 show_name_card_id_list = 10;
  if (this->show_name_card_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _show_name_card_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->show_name_card_id_list_, target);
  }

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetFriendShowNameCardInfoRsp)
  return target;
}

size_t GetFriendShowNameCardInfoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetFriendShowNameCardInfoRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 show_name_card_id_list = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->show_name_card_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _show_name_card_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 uid = 7;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFriendShowNameCardInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetFriendShowNameCardInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFriendShowNameCardInfoRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFriendShowNameCardInfoRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetFriendShowNameCardInfoRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetFriendShowNameCardInfoRsp)
    MergeFrom(*source);
  }
}

void GetFriendShowNameCardInfoRsp::MergeFrom(const GetFriendShowNameCardInfoRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetFriendShowNameCardInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  show_name_card_id_list_.MergeFrom(from.show_name_card_id_list_);
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetFriendShowNameCardInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetFriendShowNameCardInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFriendShowNameCardInfoRsp::CopyFrom(const GetFriendShowNameCardInfoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetFriendShowNameCardInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFriendShowNameCardInfoRsp::IsInitialized() const {
  return true;
}

void GetFriendShowNameCardInfoRsp::Swap(GetFriendShowNameCardInfoRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFriendShowNameCardInfoRsp::InternalSwap(GetFriendShowNameCardInfoRsp* other) {
  using std::swap;
  show_name_card_id_list_.InternalSwap(&other->show_name_card_id_list_);
  swap(uid_, other->uid_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFriendShowNameCardInfoRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetFriendShowNameCardInfoRsp

// int32 retcode = 15;
void GetFriendShowNameCardInfoRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetFriendShowNameCardInfoRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetFriendShowNameCardInfoRsp.retcode)
  return retcode_;
}
void GetFriendShowNameCardInfoRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetFriendShowNameCardInfoRsp.retcode)
}

// uint32 uid = 7;
void GetFriendShowNameCardInfoRsp::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 GetFriendShowNameCardInfoRsp::uid() const {
  // @@protoc_insertion_point(field_get:proto.GetFriendShowNameCardInfoRsp.uid)
  return uid_;
}
void GetFriendShowNameCardInfoRsp::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetFriendShowNameCardInfoRsp.uid)
}

// repeated uint32 show_name_card_id_list = 10;
int GetFriendShowNameCardInfoRsp::show_name_card_id_list_size() const {
  return show_name_card_id_list_.size();
}
void GetFriendShowNameCardInfoRsp::clear_show_name_card_id_list() {
  show_name_card_id_list_.Clear();
}
::google::protobuf::uint32 GetFriendShowNameCardInfoRsp::show_name_card_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetFriendShowNameCardInfoRsp.show_name_card_id_list)
  return show_name_card_id_list_.Get(index);
}
void GetFriendShowNameCardInfoRsp::set_show_name_card_id_list(int index, ::google::protobuf::uint32 value) {
  show_name_card_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetFriendShowNameCardInfoRsp.show_name_card_id_list)
}
void GetFriendShowNameCardInfoRsp::add_show_name_card_id_list(::google::protobuf::uint32 value) {
  show_name_card_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetFriendShowNameCardInfoRsp.show_name_card_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetFriendShowNameCardInfoRsp::show_name_card_id_list() const {
  // @@protoc_insertion_point(field_list:proto.GetFriendShowNameCardInfoRsp.show_name_card_id_list)
  return show_name_card_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetFriendShowNameCardInfoRsp::mutable_show_name_card_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetFriendShowNameCardInfoRsp.show_name_card_id_list)
  return &show_name_card_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForceAddPlayerFriendReq::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForceAddPlayerFriendReq::ForceAddPlayerFriendReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ForceAddPlayerFriendReq)
}
ForceAddPlayerFriendReq::ForceAddPlayerFriendReq(const ForceAddPlayerFriendReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.ForceAddPlayerFriendReq)
}

void ForceAddPlayerFriendReq::SharedCtor() {
  target_uid_ = 0u;
  _cached_size_ = 0;
}

ForceAddPlayerFriendReq::~ForceAddPlayerFriendReq() {
  // @@protoc_insertion_point(destructor:proto.ForceAddPlayerFriendReq)
  SharedDtor();
}

void ForceAddPlayerFriendReq::SharedDtor() {
}

void ForceAddPlayerFriendReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ForceAddPlayerFriendReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ForceAddPlayerFriendReq& ForceAddPlayerFriendReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

ForceAddPlayerFriendReq* ForceAddPlayerFriendReq::New(::google::protobuf::Arena* arena) const {
  ForceAddPlayerFriendReq* n = new ForceAddPlayerFriendReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ForceAddPlayerFriendReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ForceAddPlayerFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool ForceAddPlayerFriendReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ForceAddPlayerFriendReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ForceAddPlayerFriendReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ForceAddPlayerFriendReq)
  return false;
#undef DO_
}

void ForceAddPlayerFriendReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ForceAddPlayerFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 15;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ForceAddPlayerFriendReq)
}

::google::protobuf::uint8* ForceAddPlayerFriendReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ForceAddPlayerFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 15;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ForceAddPlayerFriendReq)
  return target;
}

size_t ForceAddPlayerFriendReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ForceAddPlayerFriendReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 15;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ForceAddPlayerFriendReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ForceAddPlayerFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ForceAddPlayerFriendReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ForceAddPlayerFriendReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ForceAddPlayerFriendReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ForceAddPlayerFriendReq)
    MergeFrom(*source);
  }
}

void ForceAddPlayerFriendReq::MergeFrom(const ForceAddPlayerFriendReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ForceAddPlayerFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void ForceAddPlayerFriendReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ForceAddPlayerFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForceAddPlayerFriendReq::CopyFrom(const ForceAddPlayerFriendReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ForceAddPlayerFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForceAddPlayerFriendReq::IsInitialized() const {
  return true;
}

void ForceAddPlayerFriendReq::Swap(ForceAddPlayerFriendReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForceAddPlayerFriendReq::InternalSwap(ForceAddPlayerFriendReq* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ForceAddPlayerFriendReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ForceAddPlayerFriendReq

// uint32 target_uid = 15;
void ForceAddPlayerFriendReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 ForceAddPlayerFriendReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ForceAddPlayerFriendReq.target_uid)
  return target_uid_;
}
void ForceAddPlayerFriendReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ForceAddPlayerFriendReq.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForceAddPlayerFriendRsp::kRetcodeFieldNumber;
const int ForceAddPlayerFriendRsp::kTargetFriendBriefFieldNumber;
const int ForceAddPlayerFriendRsp::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForceAddPlayerFriendRsp::ForceAddPlayerFriendRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ForceAddPlayerFriendRsp)
}
ForceAddPlayerFriendRsp::ForceAddPlayerFriendRsp(const ForceAddPlayerFriendRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_target_friend_brief()) {
    target_friend_brief_ = new ::proto::FriendBrief(*from.target_friend_brief_);
  } else {
    target_friend_brief_ = NULL;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_uid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.ForceAddPlayerFriendRsp)
}

void ForceAddPlayerFriendRsp::SharedCtor() {
  ::memset(&target_friend_brief_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&target_friend_brief_)) + sizeof(target_uid_));
  _cached_size_ = 0;
}

ForceAddPlayerFriendRsp::~ForceAddPlayerFriendRsp() {
  // @@protoc_insertion_point(destructor:proto.ForceAddPlayerFriendRsp)
  SharedDtor();
}

void ForceAddPlayerFriendRsp::SharedDtor() {
  if (this != internal_default_instance()) delete target_friend_brief_;
}

void ForceAddPlayerFriendRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ForceAddPlayerFriendRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ForceAddPlayerFriendRsp& ForceAddPlayerFriendRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

ForceAddPlayerFriendRsp* ForceAddPlayerFriendRsp::New(::google::protobuf::Arena* arena) const {
  ForceAddPlayerFriendRsp* n = new ForceAddPlayerFriendRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ForceAddPlayerFriendRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ForceAddPlayerFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && target_friend_brief_ != NULL) {
    delete target_friend_brief_;
  }
  target_friend_brief_ = NULL;
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  _internal_metadata_.Clear();
}

bool ForceAddPlayerFriendRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ForceAddPlayerFriendRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.FriendBrief target_friend_brief = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_target_friend_brief()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ForceAddPlayerFriendRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ForceAddPlayerFriendRsp)
  return false;
#undef DO_
}

void ForceAddPlayerFriendRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ForceAddPlayerFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.FriendBrief target_friend_brief = 2;
  if (this->has_target_friend_brief()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->target_friend_brief_, output);
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->retcode(), output);
  }

  // uint32 target_uid = 9;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ForceAddPlayerFriendRsp)
}

::google::protobuf::uint8* ForceAddPlayerFriendRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ForceAddPlayerFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.FriendBrief target_friend_brief = 2;
  if (this->has_target_friend_brief()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->target_friend_brief_, deterministic, target);
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->retcode(), target);
  }

  // uint32 target_uid = 9;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ForceAddPlayerFriendRsp)
  return target;
}

size_t ForceAddPlayerFriendRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ForceAddPlayerFriendRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.FriendBrief target_friend_brief = 2;
  if (this->has_target_friend_brief()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->target_friend_brief_);
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 target_uid = 9;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ForceAddPlayerFriendRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ForceAddPlayerFriendRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ForceAddPlayerFriendRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ForceAddPlayerFriendRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ForceAddPlayerFriendRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ForceAddPlayerFriendRsp)
    MergeFrom(*source);
  }
}

void ForceAddPlayerFriendRsp::MergeFrom(const ForceAddPlayerFriendRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ForceAddPlayerFriendRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_target_friend_brief()) {
    mutable_target_friend_brief()->::proto::FriendBrief::MergeFrom(from.target_friend_brief());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void ForceAddPlayerFriendRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ForceAddPlayerFriendRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForceAddPlayerFriendRsp::CopyFrom(const ForceAddPlayerFriendRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ForceAddPlayerFriendRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForceAddPlayerFriendRsp::IsInitialized() const {
  return true;
}

void ForceAddPlayerFriendRsp::Swap(ForceAddPlayerFriendRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForceAddPlayerFriendRsp::InternalSwap(ForceAddPlayerFriendRsp* other) {
  using std::swap;
  swap(target_friend_brief_, other->target_friend_brief_);
  swap(retcode_, other->retcode_);
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ForceAddPlayerFriendRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ForceAddPlayerFriendRsp

// int32 retcode = 5;
void ForceAddPlayerFriendRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ForceAddPlayerFriendRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ForceAddPlayerFriendRsp.retcode)
  return retcode_;
}
void ForceAddPlayerFriendRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ForceAddPlayerFriendRsp.retcode)
}

// .proto.FriendBrief target_friend_brief = 2;
bool ForceAddPlayerFriendRsp::has_target_friend_brief() const {
  return this != internal_default_instance() && target_friend_brief_ != NULL;
}
void ForceAddPlayerFriendRsp::clear_target_friend_brief() {
  if (GetArenaNoVirtual() == NULL && target_friend_brief_ != NULL) delete target_friend_brief_;
  target_friend_brief_ = NULL;
}
const ::proto::FriendBrief& ForceAddPlayerFriendRsp::target_friend_brief() const {
  const ::proto::FriendBrief* p = target_friend_brief_;
  // @@protoc_insertion_point(field_get:proto.ForceAddPlayerFriendRsp.target_friend_brief)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::FriendBrief*>(
      &::proto::_FriendBrief_default_instance_);
}
::proto::FriendBrief* ForceAddPlayerFriendRsp::mutable_target_friend_brief() {
  
  if (target_friend_brief_ == NULL) {
    target_friend_brief_ = new ::proto::FriendBrief;
  }
  // @@protoc_insertion_point(field_mutable:proto.ForceAddPlayerFriendRsp.target_friend_brief)
  return target_friend_brief_;
}
::proto::FriendBrief* ForceAddPlayerFriendRsp::release_target_friend_brief() {
  // @@protoc_insertion_point(field_release:proto.ForceAddPlayerFriendRsp.target_friend_brief)
  
  ::proto::FriendBrief* temp = target_friend_brief_;
  target_friend_brief_ = NULL;
  return temp;
}
void ForceAddPlayerFriendRsp::set_allocated_target_friend_brief(::proto::FriendBrief* target_friend_brief) {
  delete target_friend_brief_;
  target_friend_brief_ = target_friend_brief;
  if (target_friend_brief) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ForceAddPlayerFriendRsp.target_friend_brief)
}

// uint32 target_uid = 9;
void ForceAddPlayerFriendRsp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 ForceAddPlayerFriendRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ForceAddPlayerFriendRsp.target_uid)
  return target_uid_;
}
void ForceAddPlayerFriendRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ForceAddPlayerFriendRsp.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProfilePictureChangeNotify::kProfilePictureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProfilePictureChangeNotify::ProfilePictureChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ProfilePictureChangeNotify)
}
ProfilePictureChangeNotify::ProfilePictureChangeNotify(const ProfilePictureChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_profile_picture()) {
    profile_picture_ = new ::proto::ProfilePicture(*from.profile_picture_);
  } else {
    profile_picture_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.ProfilePictureChangeNotify)
}

void ProfilePictureChangeNotify::SharedCtor() {
  profile_picture_ = NULL;
  _cached_size_ = 0;
}

ProfilePictureChangeNotify::~ProfilePictureChangeNotify() {
  // @@protoc_insertion_point(destructor:proto.ProfilePictureChangeNotify)
  SharedDtor();
}

void ProfilePictureChangeNotify::SharedDtor() {
  if (this != internal_default_instance()) delete profile_picture_;
}

void ProfilePictureChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProfilePictureChangeNotify::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProfilePictureChangeNotify& ProfilePictureChangeNotify::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProfilePictureChangeNotify* ProfilePictureChangeNotify::New(::google::protobuf::Arena* arena) const {
  ProfilePictureChangeNotify* n = new ProfilePictureChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProfilePictureChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ProfilePictureChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && profile_picture_ != NULL) {
    delete profile_picture_;
  }
  profile_picture_ = NULL;
  _internal_metadata_.Clear();
}

bool ProfilePictureChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ProfilePictureChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ProfilePicture profile_picture = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_profile_picture()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ProfilePictureChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ProfilePictureChangeNotify)
  return false;
#undef DO_
}

void ProfilePictureChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ProfilePictureChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ProfilePicture profile_picture = 12;
  if (this->has_profile_picture()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->profile_picture_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ProfilePictureChangeNotify)
}

::google::protobuf::uint8* ProfilePictureChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ProfilePictureChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ProfilePicture profile_picture = 12;
  if (this->has_profile_picture()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->profile_picture_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ProfilePictureChangeNotify)
  return target;
}

size_t ProfilePictureChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ProfilePictureChangeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.ProfilePicture profile_picture = 12;
  if (this->has_profile_picture()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->profile_picture_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProfilePictureChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ProfilePictureChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ProfilePictureChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProfilePictureChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ProfilePictureChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ProfilePictureChangeNotify)
    MergeFrom(*source);
  }
}

void ProfilePictureChangeNotify::MergeFrom(const ProfilePictureChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ProfilePictureChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_profile_picture()) {
    mutable_profile_picture()->::proto::ProfilePicture::MergeFrom(from.profile_picture());
  }
}

void ProfilePictureChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ProfilePictureChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProfilePictureChangeNotify::CopyFrom(const ProfilePictureChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ProfilePictureChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProfilePictureChangeNotify::IsInitialized() const {
  return true;
}

void ProfilePictureChangeNotify::Swap(ProfilePictureChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProfilePictureChangeNotify::InternalSwap(ProfilePictureChangeNotify* other) {
  using std::swap;
  swap(profile_picture_, other->profile_picture_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProfilePictureChangeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProfilePictureChangeNotify

// .proto.ProfilePicture profile_picture = 12;
bool ProfilePictureChangeNotify::has_profile_picture() const {
  return this != internal_default_instance() && profile_picture_ != NULL;
}
void ProfilePictureChangeNotify::clear_profile_picture() {
  if (GetArenaNoVirtual() == NULL && profile_picture_ != NULL) delete profile_picture_;
  profile_picture_ = NULL;
}
const ::proto::ProfilePicture& ProfilePictureChangeNotify::profile_picture() const {
  const ::proto::ProfilePicture* p = profile_picture_;
  // @@protoc_insertion_point(field_get:proto.ProfilePictureChangeNotify.profile_picture)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ProfilePicture*>(
      &::proto::_ProfilePicture_default_instance_);
}
::proto::ProfilePicture* ProfilePictureChangeNotify::mutable_profile_picture() {
  
  if (profile_picture_ == NULL) {
    profile_picture_ = new ::proto::ProfilePicture;
  }
  // @@protoc_insertion_point(field_mutable:proto.ProfilePictureChangeNotify.profile_picture)
  return profile_picture_;
}
::proto::ProfilePicture* ProfilePictureChangeNotify::release_profile_picture() {
  // @@protoc_insertion_point(field_release:proto.ProfilePictureChangeNotify.profile_picture)
  
  ::proto::ProfilePicture* temp = profile_picture_;
  profile_picture_ = NULL;
  return temp;
}
void ProfilePictureChangeNotify::set_allocated_profile_picture(::proto::ProfilePicture* profile_picture) {
  delete profile_picture_;
  profile_picture_ = profile_picture;
  if (profile_picture) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ProfilePictureChangeNotify.profile_picture)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PSNFriendListNotify::kPsnFriendListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PSNFriendListNotify::PSNFriendListNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PSNFriendListNotify)
}
PSNFriendListNotify::PSNFriendListNotify(const PSNFriendListNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      psn_friend_list_(from.psn_friend_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.PSNFriendListNotify)
}

void PSNFriendListNotify::SharedCtor() {
  _cached_size_ = 0;
}

PSNFriendListNotify::~PSNFriendListNotify() {
  // @@protoc_insertion_point(destructor:proto.PSNFriendListNotify)
  SharedDtor();
}

void PSNFriendListNotify::SharedDtor() {
}

void PSNFriendListNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSNFriendListNotify::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PSNFriendListNotify& PSNFriendListNotify::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

PSNFriendListNotify* PSNFriendListNotify::New(::google::protobuf::Arena* arena) const {
  PSNFriendListNotify* n = new PSNFriendListNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PSNFriendListNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PSNFriendListNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  psn_friend_list_.Clear();
  _internal_metadata_.Clear();
}

bool PSNFriendListNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PSNFriendListNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.FriendBrief psn_friend_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_psn_friend_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PSNFriendListNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PSNFriendListNotify)
  return false;
#undef DO_
}

void PSNFriendListNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PSNFriendListNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.FriendBrief psn_friend_list = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->psn_friend_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->psn_friend_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PSNFriendListNotify)
}

::google::protobuf::uint8* PSNFriendListNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PSNFriendListNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.FriendBrief psn_friend_list = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->psn_friend_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->psn_friend_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PSNFriendListNotify)
  return target;
}

size_t PSNFriendListNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PSNFriendListNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.FriendBrief psn_friend_list = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->psn_friend_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->psn_friend_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSNFriendListNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PSNFriendListNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PSNFriendListNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PSNFriendListNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PSNFriendListNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PSNFriendListNotify)
    MergeFrom(*source);
  }
}

void PSNFriendListNotify::MergeFrom(const PSNFriendListNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PSNFriendListNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  psn_friend_list_.MergeFrom(from.psn_friend_list_);
}

void PSNFriendListNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PSNFriendListNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSNFriendListNotify::CopyFrom(const PSNFriendListNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PSNFriendListNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSNFriendListNotify::IsInitialized() const {
  return true;
}

void PSNFriendListNotify::Swap(PSNFriendListNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PSNFriendListNotify::InternalSwap(PSNFriendListNotify* other) {
  using std::swap;
  psn_friend_list_.InternalSwap(&other->psn_friend_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PSNFriendListNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PSNFriendListNotify

// repeated .proto.FriendBrief psn_friend_list = 8;
int PSNFriendListNotify::psn_friend_list_size() const {
  return psn_friend_list_.size();
}
void PSNFriendListNotify::clear_psn_friend_list() {
  psn_friend_list_.Clear();
}
const ::proto::FriendBrief& PSNFriendListNotify::psn_friend_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PSNFriendListNotify.psn_friend_list)
  return psn_friend_list_.Get(index);
}
::proto::FriendBrief* PSNFriendListNotify::mutable_psn_friend_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PSNFriendListNotify.psn_friend_list)
  return psn_friend_list_.Mutable(index);
}
::proto::FriendBrief* PSNFriendListNotify::add_psn_friend_list() {
  // @@protoc_insertion_point(field_add:proto.PSNFriendListNotify.psn_friend_list)
  return psn_friend_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
PSNFriendListNotify::mutable_psn_friend_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PSNFriendListNotify.psn_friend_list)
  return &psn_friend_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
PSNFriendListNotify::psn_friend_list() const {
  // @@protoc_insertion_point(field_list:proto.PSNFriendListNotify.psn_friend_list)
  return psn_friend_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PSNBlackListNotify::kPsnBlacklistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PSNBlackListNotify::PSNBlackListNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PSNBlackListNotify)
}
PSNBlackListNotify::PSNBlackListNotify(const PSNBlackListNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      psn_blacklist_(from.psn_blacklist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.PSNBlackListNotify)
}

void PSNBlackListNotify::SharedCtor() {
  _cached_size_ = 0;
}

PSNBlackListNotify::~PSNBlackListNotify() {
  // @@protoc_insertion_point(destructor:proto.PSNBlackListNotify)
  SharedDtor();
}

void PSNBlackListNotify::SharedDtor() {
}

void PSNBlackListNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSNBlackListNotify::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PSNBlackListNotify& PSNBlackListNotify::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

PSNBlackListNotify* PSNBlackListNotify::New(::google::protobuf::Arena* arena) const {
  PSNBlackListNotify* n = new PSNBlackListNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PSNBlackListNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PSNBlackListNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  psn_blacklist_.Clear();
  _internal_metadata_.Clear();
}

bool PSNBlackListNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PSNBlackListNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.FriendBrief psn_blacklist = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_psn_blacklist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PSNBlackListNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PSNBlackListNotify)
  return false;
#undef DO_
}

void PSNBlackListNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PSNBlackListNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.FriendBrief psn_blacklist = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->psn_blacklist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->psn_blacklist(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PSNBlackListNotify)
}

::google::protobuf::uint8* PSNBlackListNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PSNBlackListNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.FriendBrief psn_blacklist = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->psn_blacklist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->psn_blacklist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PSNBlackListNotify)
  return target;
}

size_t PSNBlackListNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PSNBlackListNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.FriendBrief psn_blacklist = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->psn_blacklist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->psn_blacklist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSNBlackListNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PSNBlackListNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PSNBlackListNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PSNBlackListNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PSNBlackListNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PSNBlackListNotify)
    MergeFrom(*source);
  }
}

void PSNBlackListNotify::MergeFrom(const PSNBlackListNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PSNBlackListNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  psn_blacklist_.MergeFrom(from.psn_blacklist_);
}

void PSNBlackListNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PSNBlackListNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSNBlackListNotify::CopyFrom(const PSNBlackListNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PSNBlackListNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSNBlackListNotify::IsInitialized() const {
  return true;
}

void PSNBlackListNotify::Swap(PSNBlackListNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PSNBlackListNotify::InternalSwap(PSNBlackListNotify* other) {
  using std::swap;
  psn_blacklist_.InternalSwap(&other->psn_blacklist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PSNBlackListNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PSNBlackListNotify

// repeated .proto.FriendBrief psn_blacklist = 11;
int PSNBlackListNotify::psn_blacklist_size() const {
  return psn_blacklist_.size();
}
void PSNBlackListNotify::clear_psn_blacklist() {
  psn_blacklist_.Clear();
}
const ::proto::FriendBrief& PSNBlackListNotify::psn_blacklist(int index) const {
  // @@protoc_insertion_point(field_get:proto.PSNBlackListNotify.psn_blacklist)
  return psn_blacklist_.Get(index);
}
::proto::FriendBrief* PSNBlackListNotify::mutable_psn_blacklist(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PSNBlackListNotify.psn_blacklist)
  return psn_blacklist_.Mutable(index);
}
::proto::FriendBrief* PSNBlackListNotify::add_psn_blacklist() {
  // @@protoc_insertion_point(field_add:proto.PSNBlackListNotify.psn_blacklist)
  return psn_blacklist_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
PSNBlackListNotify::mutable_psn_blacklist() {
  // @@protoc_insertion_point(field_mutable_list:proto.PSNBlackListNotify.psn_blacklist)
  return &psn_blacklist_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
PSNBlackListNotify::psn_blacklist() const {
  // @@protoc_insertion_point(field_list:proto.PSNBlackListNotify.psn_blacklist)
  return psn_blacklist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPlayerAskFriendListReq::GetPlayerAskFriendListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetPlayerAskFriendListReq)
}
GetPlayerAskFriendListReq::GetPlayerAskFriendListReq(const GetPlayerAskFriendListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GetPlayerAskFriendListReq)
}

void GetPlayerAskFriendListReq::SharedCtor() {
  _cached_size_ = 0;
}

GetPlayerAskFriendListReq::~GetPlayerAskFriendListReq() {
  // @@protoc_insertion_point(destructor:proto.GetPlayerAskFriendListReq)
  SharedDtor();
}

void GetPlayerAskFriendListReq::SharedDtor() {
}

void GetPlayerAskFriendListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPlayerAskFriendListReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPlayerAskFriendListReq& GetPlayerAskFriendListReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetPlayerAskFriendListReq* GetPlayerAskFriendListReq::New(::google::protobuf::Arena* arena) const {
  GetPlayerAskFriendListReq* n = new GetPlayerAskFriendListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPlayerAskFriendListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetPlayerAskFriendListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetPlayerAskFriendListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetPlayerAskFriendListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetPlayerAskFriendListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetPlayerAskFriendListReq)
  return false;
#undef DO_
}

void GetPlayerAskFriendListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetPlayerAskFriendListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetPlayerAskFriendListReq)
}

::google::protobuf::uint8* GetPlayerAskFriendListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetPlayerAskFriendListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetPlayerAskFriendListReq)
  return target;
}

size_t GetPlayerAskFriendListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetPlayerAskFriendListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPlayerAskFriendListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetPlayerAskFriendListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPlayerAskFriendListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPlayerAskFriendListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetPlayerAskFriendListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetPlayerAskFriendListReq)
    MergeFrom(*source);
  }
}

void GetPlayerAskFriendListReq::MergeFrom(const GetPlayerAskFriendListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetPlayerAskFriendListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetPlayerAskFriendListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetPlayerAskFriendListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPlayerAskFriendListReq::CopyFrom(const GetPlayerAskFriendListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetPlayerAskFriendListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPlayerAskFriendListReq::IsInitialized() const {
  return true;
}

void GetPlayerAskFriendListReq::Swap(GetPlayerAskFriendListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPlayerAskFriendListReq::InternalSwap(GetPlayerAskFriendListReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPlayerAskFriendListReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPlayerAskFriendListReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPlayerAskFriendListRsp::kRetcodeFieldNumber;
const int GetPlayerAskFriendListRsp::kAskFriendListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPlayerAskFriendListRsp::GetPlayerAskFriendListRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetPlayerAskFriendListRsp)
}
GetPlayerAskFriendListRsp::GetPlayerAskFriendListRsp(const GetPlayerAskFriendListRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ask_friend_list_(from.ask_friend_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GetPlayerAskFriendListRsp)
}

void GetPlayerAskFriendListRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

GetPlayerAskFriendListRsp::~GetPlayerAskFriendListRsp() {
  // @@protoc_insertion_point(destructor:proto.GetPlayerAskFriendListRsp)
  SharedDtor();
}

void GetPlayerAskFriendListRsp::SharedDtor() {
}

void GetPlayerAskFriendListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPlayerAskFriendListRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPlayerAskFriendListRsp& GetPlayerAskFriendListRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetPlayerAskFriendListRsp* GetPlayerAskFriendListRsp::New(::google::protobuf::Arena* arena) const {
  GetPlayerAskFriendListRsp* n = new GetPlayerAskFriendListRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPlayerAskFriendListRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetPlayerAskFriendListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ask_friend_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool GetPlayerAskFriendListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetPlayerAskFriendListRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.FriendBrief ask_friend_list = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ask_friend_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetPlayerAskFriendListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetPlayerAskFriendListRsp)
  return false;
#undef DO_
}

void GetPlayerAskFriendListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetPlayerAskFriendListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->retcode(), output);
  }

  // repeated .proto.FriendBrief ask_friend_list = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ask_friend_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->ask_friend_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetPlayerAskFriendListRsp)
}

::google::protobuf::uint8* GetPlayerAskFriendListRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetPlayerAskFriendListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->retcode(), target);
  }

  // repeated .proto.FriendBrief ask_friend_list = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ask_friend_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, this->ask_friend_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetPlayerAskFriendListRsp)
  return target;
}

size_t GetPlayerAskFriendListRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetPlayerAskFriendListRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.FriendBrief ask_friend_list = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->ask_friend_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ask_friend_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPlayerAskFriendListRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetPlayerAskFriendListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPlayerAskFriendListRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPlayerAskFriendListRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetPlayerAskFriendListRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetPlayerAskFriendListRsp)
    MergeFrom(*source);
  }
}

void GetPlayerAskFriendListRsp::MergeFrom(const GetPlayerAskFriendListRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetPlayerAskFriendListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ask_friend_list_.MergeFrom(from.ask_friend_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetPlayerAskFriendListRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetPlayerAskFriendListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPlayerAskFriendListRsp::CopyFrom(const GetPlayerAskFriendListRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetPlayerAskFriendListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPlayerAskFriendListRsp::IsInitialized() const {
  return true;
}

void GetPlayerAskFriendListRsp::Swap(GetPlayerAskFriendListRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPlayerAskFriendListRsp::InternalSwap(GetPlayerAskFriendListRsp* other) {
  using std::swap;
  ask_friend_list_.InternalSwap(&other->ask_friend_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPlayerAskFriendListRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPlayerAskFriendListRsp

// int32 retcode = 13;
void GetPlayerAskFriendListRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetPlayerAskFriendListRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerAskFriendListRsp.retcode)
  return retcode_;
}
void GetPlayerAskFriendListRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerAskFriendListRsp.retcode)
}

// repeated .proto.FriendBrief ask_friend_list = 15;
int GetPlayerAskFriendListRsp::ask_friend_list_size() const {
  return ask_friend_list_.size();
}
void GetPlayerAskFriendListRsp::clear_ask_friend_list() {
  ask_friend_list_.Clear();
}
const ::proto::FriendBrief& GetPlayerAskFriendListRsp::ask_friend_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerAskFriendListRsp.ask_friend_list)
  return ask_friend_list_.Get(index);
}
::proto::FriendBrief* GetPlayerAskFriendListRsp::mutable_ask_friend_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerAskFriendListRsp.ask_friend_list)
  return ask_friend_list_.Mutable(index);
}
::proto::FriendBrief* GetPlayerAskFriendListRsp::add_ask_friend_list() {
  // @@protoc_insertion_point(field_add:proto.GetPlayerAskFriendListRsp.ask_friend_list)
  return ask_friend_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
GetPlayerAskFriendListRsp::mutable_ask_friend_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetPlayerAskFriendListRsp.ask_friend_list)
  return &ask_friend_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
GetPlayerAskFriendListRsp::ask_friend_list() const {
  // @@protoc_insertion_point(field_list:proto.GetPlayerAskFriendListRsp.ask_friend_list)
  return ask_friend_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetChatEmojiCollectionReq::GetChatEmojiCollectionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetChatEmojiCollectionReq)
}
GetChatEmojiCollectionReq::GetChatEmojiCollectionReq(const GetChatEmojiCollectionReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GetChatEmojiCollectionReq)
}

void GetChatEmojiCollectionReq::SharedCtor() {
  _cached_size_ = 0;
}

GetChatEmojiCollectionReq::~GetChatEmojiCollectionReq() {
  // @@protoc_insertion_point(destructor:proto.GetChatEmojiCollectionReq)
  SharedDtor();
}

void GetChatEmojiCollectionReq::SharedDtor() {
}

void GetChatEmojiCollectionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetChatEmojiCollectionReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetChatEmojiCollectionReq& GetChatEmojiCollectionReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetChatEmojiCollectionReq* GetChatEmojiCollectionReq::New(::google::protobuf::Arena* arena) const {
  GetChatEmojiCollectionReq* n = new GetChatEmojiCollectionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetChatEmojiCollectionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetChatEmojiCollectionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetChatEmojiCollectionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetChatEmojiCollectionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetChatEmojiCollectionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetChatEmojiCollectionReq)
  return false;
#undef DO_
}

void GetChatEmojiCollectionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetChatEmojiCollectionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetChatEmojiCollectionReq)
}

::google::protobuf::uint8* GetChatEmojiCollectionReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetChatEmojiCollectionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetChatEmojiCollectionReq)
  return target;
}

size_t GetChatEmojiCollectionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetChatEmojiCollectionReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetChatEmojiCollectionReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetChatEmojiCollectionReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetChatEmojiCollectionReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetChatEmojiCollectionReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetChatEmojiCollectionReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetChatEmojiCollectionReq)
    MergeFrom(*source);
  }
}

void GetChatEmojiCollectionReq::MergeFrom(const GetChatEmojiCollectionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetChatEmojiCollectionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetChatEmojiCollectionReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetChatEmojiCollectionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetChatEmojiCollectionReq::CopyFrom(const GetChatEmojiCollectionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetChatEmojiCollectionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetChatEmojiCollectionReq::IsInitialized() const {
  return true;
}

void GetChatEmojiCollectionReq::Swap(GetChatEmojiCollectionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetChatEmojiCollectionReq::InternalSwap(GetChatEmojiCollectionReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetChatEmojiCollectionReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetChatEmojiCollectionReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetChatEmojiCollectionRsp::kRetcodeFieldNumber;
const int GetChatEmojiCollectionRsp::kChatEmojiCollectionDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetChatEmojiCollectionRsp::GetChatEmojiCollectionRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetChatEmojiCollectionRsp)
}
GetChatEmojiCollectionRsp::GetChatEmojiCollectionRsp(const GetChatEmojiCollectionRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_chat_emoji_collection_data()) {
    chat_emoji_collection_data_ = new ::proto::ChatEmojiCollectionData(*from.chat_emoji_collection_data_);
  } else {
    chat_emoji_collection_data_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GetChatEmojiCollectionRsp)
}

void GetChatEmojiCollectionRsp::SharedCtor() {
  ::memset(&chat_emoji_collection_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&chat_emoji_collection_data_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

GetChatEmojiCollectionRsp::~GetChatEmojiCollectionRsp() {
  // @@protoc_insertion_point(destructor:proto.GetChatEmojiCollectionRsp)
  SharedDtor();
}

void GetChatEmojiCollectionRsp::SharedDtor() {
  if (this != internal_default_instance()) delete chat_emoji_collection_data_;
}

void GetChatEmojiCollectionRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetChatEmojiCollectionRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetChatEmojiCollectionRsp& GetChatEmojiCollectionRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetChatEmojiCollectionRsp* GetChatEmojiCollectionRsp::New(::google::protobuf::Arena* arena) const {
  GetChatEmojiCollectionRsp* n = new GetChatEmojiCollectionRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetChatEmojiCollectionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetChatEmojiCollectionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && chat_emoji_collection_data_ != NULL) {
    delete chat_emoji_collection_data_;
  }
  chat_emoji_collection_data_ = NULL;
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool GetChatEmojiCollectionRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetChatEmojiCollectionRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ChatEmojiCollectionData chat_emoji_collection_data = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_chat_emoji_collection_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetChatEmojiCollectionRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetChatEmojiCollectionRsp)
  return false;
#undef DO_
}

void GetChatEmojiCollectionRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetChatEmojiCollectionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ChatEmojiCollectionData chat_emoji_collection_data = 8;
  if (this->has_chat_emoji_collection_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->chat_emoji_collection_data_, output);
  }

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetChatEmojiCollectionRsp)
}

::google::protobuf::uint8* GetChatEmojiCollectionRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetChatEmojiCollectionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ChatEmojiCollectionData chat_emoji_collection_data = 8;
  if (this->has_chat_emoji_collection_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->chat_emoji_collection_data_, deterministic, target);
  }

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetChatEmojiCollectionRsp)
  return target;
}

size_t GetChatEmojiCollectionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetChatEmojiCollectionRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.ChatEmojiCollectionData chat_emoji_collection_data = 8;
  if (this->has_chat_emoji_collection_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->chat_emoji_collection_data_);
  }

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetChatEmojiCollectionRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetChatEmojiCollectionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetChatEmojiCollectionRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetChatEmojiCollectionRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetChatEmojiCollectionRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetChatEmojiCollectionRsp)
    MergeFrom(*source);
  }
}

void GetChatEmojiCollectionRsp::MergeFrom(const GetChatEmojiCollectionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetChatEmojiCollectionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chat_emoji_collection_data()) {
    mutable_chat_emoji_collection_data()->::proto::ChatEmojiCollectionData::MergeFrom(from.chat_emoji_collection_data());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetChatEmojiCollectionRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetChatEmojiCollectionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetChatEmojiCollectionRsp::CopyFrom(const GetChatEmojiCollectionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetChatEmojiCollectionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetChatEmojiCollectionRsp::IsInitialized() const {
  return true;
}

void GetChatEmojiCollectionRsp::Swap(GetChatEmojiCollectionRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetChatEmojiCollectionRsp::InternalSwap(GetChatEmojiCollectionRsp* other) {
  using std::swap;
  swap(chat_emoji_collection_data_, other->chat_emoji_collection_data_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetChatEmojiCollectionRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetChatEmojiCollectionRsp

// int32 retcode = 15;
void GetChatEmojiCollectionRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetChatEmojiCollectionRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetChatEmojiCollectionRsp.retcode)
  return retcode_;
}
void GetChatEmojiCollectionRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetChatEmojiCollectionRsp.retcode)
}

// .proto.ChatEmojiCollectionData chat_emoji_collection_data = 8;
bool GetChatEmojiCollectionRsp::has_chat_emoji_collection_data() const {
  return this != internal_default_instance() && chat_emoji_collection_data_ != NULL;
}
void GetChatEmojiCollectionRsp::clear_chat_emoji_collection_data() {
  if (GetArenaNoVirtual() == NULL && chat_emoji_collection_data_ != NULL) delete chat_emoji_collection_data_;
  chat_emoji_collection_data_ = NULL;
}
const ::proto::ChatEmojiCollectionData& GetChatEmojiCollectionRsp::chat_emoji_collection_data() const {
  const ::proto::ChatEmojiCollectionData* p = chat_emoji_collection_data_;
  // @@protoc_insertion_point(field_get:proto.GetChatEmojiCollectionRsp.chat_emoji_collection_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ChatEmojiCollectionData*>(
      &::proto::_ChatEmojiCollectionData_default_instance_);
}
::proto::ChatEmojiCollectionData* GetChatEmojiCollectionRsp::mutable_chat_emoji_collection_data() {
  
  if (chat_emoji_collection_data_ == NULL) {
    chat_emoji_collection_data_ = new ::proto::ChatEmojiCollectionData;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetChatEmojiCollectionRsp.chat_emoji_collection_data)
  return chat_emoji_collection_data_;
}
::proto::ChatEmojiCollectionData* GetChatEmojiCollectionRsp::release_chat_emoji_collection_data() {
  // @@protoc_insertion_point(field_release:proto.GetChatEmojiCollectionRsp.chat_emoji_collection_data)
  
  ::proto::ChatEmojiCollectionData* temp = chat_emoji_collection_data_;
  chat_emoji_collection_data_ = NULL;
  return temp;
}
void GetChatEmojiCollectionRsp::set_allocated_chat_emoji_collection_data(::proto::ChatEmojiCollectionData* chat_emoji_collection_data) {
  delete chat_emoji_collection_data_;
  chat_emoji_collection_data_ = chat_emoji_collection_data;
  if (chat_emoji_collection_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetChatEmojiCollectionRsp.chat_emoji_collection_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetChatEmojiCollectionReq::kChatEmojiCollectionDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetChatEmojiCollectionReq::SetChatEmojiCollectionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetChatEmojiCollectionReq)
}
SetChatEmojiCollectionReq::SetChatEmojiCollectionReq(const SetChatEmojiCollectionReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_chat_emoji_collection_data()) {
    chat_emoji_collection_data_ = new ::proto::ChatEmojiCollectionData(*from.chat_emoji_collection_data_);
  } else {
    chat_emoji_collection_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.SetChatEmojiCollectionReq)
}

void SetChatEmojiCollectionReq::SharedCtor() {
  chat_emoji_collection_data_ = NULL;
  _cached_size_ = 0;
}

SetChatEmojiCollectionReq::~SetChatEmojiCollectionReq() {
  // @@protoc_insertion_point(destructor:proto.SetChatEmojiCollectionReq)
  SharedDtor();
}

void SetChatEmojiCollectionReq::SharedDtor() {
  if (this != internal_default_instance()) delete chat_emoji_collection_data_;
}

void SetChatEmojiCollectionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetChatEmojiCollectionReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetChatEmojiCollectionReq& SetChatEmojiCollectionReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetChatEmojiCollectionReq* SetChatEmojiCollectionReq::New(::google::protobuf::Arena* arena) const {
  SetChatEmojiCollectionReq* n = new SetChatEmojiCollectionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetChatEmojiCollectionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetChatEmojiCollectionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && chat_emoji_collection_data_ != NULL) {
    delete chat_emoji_collection_data_;
  }
  chat_emoji_collection_data_ = NULL;
  _internal_metadata_.Clear();
}

bool SetChatEmojiCollectionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetChatEmojiCollectionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ChatEmojiCollectionData chat_emoji_collection_data = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_chat_emoji_collection_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetChatEmojiCollectionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetChatEmojiCollectionReq)
  return false;
#undef DO_
}

void SetChatEmojiCollectionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetChatEmojiCollectionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ChatEmojiCollectionData chat_emoji_collection_data = 12;
  if (this->has_chat_emoji_collection_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->chat_emoji_collection_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetChatEmojiCollectionReq)
}

::google::protobuf::uint8* SetChatEmojiCollectionReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetChatEmojiCollectionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ChatEmojiCollectionData chat_emoji_collection_data = 12;
  if (this->has_chat_emoji_collection_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->chat_emoji_collection_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetChatEmojiCollectionReq)
  return target;
}

size_t SetChatEmojiCollectionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetChatEmojiCollectionReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.ChatEmojiCollectionData chat_emoji_collection_data = 12;
  if (this->has_chat_emoji_collection_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->chat_emoji_collection_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetChatEmojiCollectionReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetChatEmojiCollectionReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetChatEmojiCollectionReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetChatEmojiCollectionReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetChatEmojiCollectionReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetChatEmojiCollectionReq)
    MergeFrom(*source);
  }
}

void SetChatEmojiCollectionReq::MergeFrom(const SetChatEmojiCollectionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetChatEmojiCollectionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chat_emoji_collection_data()) {
    mutable_chat_emoji_collection_data()->::proto::ChatEmojiCollectionData::MergeFrom(from.chat_emoji_collection_data());
  }
}

void SetChatEmojiCollectionReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetChatEmojiCollectionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetChatEmojiCollectionReq::CopyFrom(const SetChatEmojiCollectionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetChatEmojiCollectionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetChatEmojiCollectionReq::IsInitialized() const {
  return true;
}

void SetChatEmojiCollectionReq::Swap(SetChatEmojiCollectionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetChatEmojiCollectionReq::InternalSwap(SetChatEmojiCollectionReq* other) {
  using std::swap;
  swap(chat_emoji_collection_data_, other->chat_emoji_collection_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetChatEmojiCollectionReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetChatEmojiCollectionReq

// .proto.ChatEmojiCollectionData chat_emoji_collection_data = 12;
bool SetChatEmojiCollectionReq::has_chat_emoji_collection_data() const {
  return this != internal_default_instance() && chat_emoji_collection_data_ != NULL;
}
void SetChatEmojiCollectionReq::clear_chat_emoji_collection_data() {
  if (GetArenaNoVirtual() == NULL && chat_emoji_collection_data_ != NULL) delete chat_emoji_collection_data_;
  chat_emoji_collection_data_ = NULL;
}
const ::proto::ChatEmojiCollectionData& SetChatEmojiCollectionReq::chat_emoji_collection_data() const {
  const ::proto::ChatEmojiCollectionData* p = chat_emoji_collection_data_;
  // @@protoc_insertion_point(field_get:proto.SetChatEmojiCollectionReq.chat_emoji_collection_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ChatEmojiCollectionData*>(
      &::proto::_ChatEmojiCollectionData_default_instance_);
}
::proto::ChatEmojiCollectionData* SetChatEmojiCollectionReq::mutable_chat_emoji_collection_data() {
  
  if (chat_emoji_collection_data_ == NULL) {
    chat_emoji_collection_data_ = new ::proto::ChatEmojiCollectionData;
  }
  // @@protoc_insertion_point(field_mutable:proto.SetChatEmojiCollectionReq.chat_emoji_collection_data)
  return chat_emoji_collection_data_;
}
::proto::ChatEmojiCollectionData* SetChatEmojiCollectionReq::release_chat_emoji_collection_data() {
  // @@protoc_insertion_point(field_release:proto.SetChatEmojiCollectionReq.chat_emoji_collection_data)
  
  ::proto::ChatEmojiCollectionData* temp = chat_emoji_collection_data_;
  chat_emoji_collection_data_ = NULL;
  return temp;
}
void SetChatEmojiCollectionReq::set_allocated_chat_emoji_collection_data(::proto::ChatEmojiCollectionData* chat_emoji_collection_data) {
  delete chat_emoji_collection_data_;
  chat_emoji_collection_data_ = chat_emoji_collection_data;
  if (chat_emoji_collection_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SetChatEmojiCollectionReq.chat_emoji_collection_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetChatEmojiCollectionRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetChatEmojiCollectionRsp::SetChatEmojiCollectionRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetChatEmojiCollectionRsp)
}
SetChatEmojiCollectionRsp::SetChatEmojiCollectionRsp(const SetChatEmojiCollectionRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.SetChatEmojiCollectionRsp)
}

void SetChatEmojiCollectionRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

SetChatEmojiCollectionRsp::~SetChatEmojiCollectionRsp() {
  // @@protoc_insertion_point(destructor:proto.SetChatEmojiCollectionRsp)
  SharedDtor();
}

void SetChatEmojiCollectionRsp::SharedDtor() {
}

void SetChatEmojiCollectionRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetChatEmojiCollectionRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetChatEmojiCollectionRsp& SetChatEmojiCollectionRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetChatEmojiCollectionRsp* SetChatEmojiCollectionRsp::New(::google::protobuf::Arena* arena) const {
  SetChatEmojiCollectionRsp* n = new SetChatEmojiCollectionRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetChatEmojiCollectionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetChatEmojiCollectionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool SetChatEmojiCollectionRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetChatEmojiCollectionRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetChatEmojiCollectionRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetChatEmojiCollectionRsp)
  return false;
#undef DO_
}

void SetChatEmojiCollectionRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetChatEmojiCollectionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetChatEmojiCollectionRsp)
}

::google::protobuf::uint8* SetChatEmojiCollectionRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetChatEmojiCollectionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetChatEmojiCollectionRsp)
  return target;
}

size_t SetChatEmojiCollectionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetChatEmojiCollectionRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 12;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetChatEmojiCollectionRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetChatEmojiCollectionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetChatEmojiCollectionRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetChatEmojiCollectionRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetChatEmojiCollectionRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetChatEmojiCollectionRsp)
    MergeFrom(*source);
  }
}

void SetChatEmojiCollectionRsp::MergeFrom(const SetChatEmojiCollectionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetChatEmojiCollectionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetChatEmojiCollectionRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetChatEmojiCollectionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetChatEmojiCollectionRsp::CopyFrom(const SetChatEmojiCollectionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetChatEmojiCollectionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetChatEmojiCollectionRsp::IsInitialized() const {
  return true;
}

void SetChatEmojiCollectionRsp::Swap(SetChatEmojiCollectionRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetChatEmojiCollectionRsp::InternalSwap(SetChatEmojiCollectionRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetChatEmojiCollectionRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetChatEmojiCollectionRsp

// int32 retcode = 12;
void SetChatEmojiCollectionRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SetChatEmojiCollectionRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetChatEmojiCollectionRsp.retcode)
  return retcode_;
}
void SetChatEmojiCollectionRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetChatEmojiCollectionRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdatePS4FriendListReq::kPsnIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdatePS4FriendListReq::UpdatePS4FriendListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UpdatePS4FriendListReq)
}
UpdatePS4FriendListReq::UpdatePS4FriendListReq(const UpdatePS4FriendListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      psn_id_list_(from.psn_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.UpdatePS4FriendListReq)
}

void UpdatePS4FriendListReq::SharedCtor() {
  _cached_size_ = 0;
}

UpdatePS4FriendListReq::~UpdatePS4FriendListReq() {
  // @@protoc_insertion_point(destructor:proto.UpdatePS4FriendListReq)
  SharedDtor();
}

void UpdatePS4FriendListReq::SharedDtor() {
}

void UpdatePS4FriendListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdatePS4FriendListReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdatePS4FriendListReq& UpdatePS4FriendListReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdatePS4FriendListReq* UpdatePS4FriendListReq::New(::google::protobuf::Arena* arena) const {
  UpdatePS4FriendListReq* n = new UpdatePS4FriendListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdatePS4FriendListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdatePS4FriendListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  psn_id_list_.Clear();
  _internal_metadata_.Clear();
}

bool UpdatePS4FriendListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UpdatePS4FriendListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string psn_id_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_psn_id_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->psn_id_list(this->psn_id_list_size() - 1).data(),
            static_cast<int>(this->psn_id_list(this->psn_id_list_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.UpdatePS4FriendListReq.psn_id_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UpdatePS4FriendListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UpdatePS4FriendListReq)
  return false;
#undef DO_
}

void UpdatePS4FriendListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UpdatePS4FriendListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string psn_id_list = 4;
  for (int i = 0, n = this->psn_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->psn_id_list(i).data(), static_cast<int>(this->psn_id_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.UpdatePS4FriendListReq.psn_id_list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->psn_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UpdatePS4FriendListReq)
}

::google::protobuf::uint8* UpdatePS4FriendListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdatePS4FriendListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string psn_id_list = 4;
  for (int i = 0, n = this->psn_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->psn_id_list(i).data(), static_cast<int>(this->psn_id_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.UpdatePS4FriendListReq.psn_id_list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->psn_id_list(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdatePS4FriendListReq)
  return target;
}

size_t UpdatePS4FriendListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdatePS4FriendListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string psn_id_list = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->psn_id_list_size());
  for (int i = 0, n = this->psn_id_list_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->psn_id_list(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdatePS4FriendListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UpdatePS4FriendListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdatePS4FriendListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdatePS4FriendListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UpdatePS4FriendListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UpdatePS4FriendListReq)
    MergeFrom(*source);
  }
}

void UpdatePS4FriendListReq::MergeFrom(const UpdatePS4FriendListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdatePS4FriendListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  psn_id_list_.MergeFrom(from.psn_id_list_);
}

void UpdatePS4FriendListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UpdatePS4FriendListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdatePS4FriendListReq::CopyFrom(const UpdatePS4FriendListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdatePS4FriendListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatePS4FriendListReq::IsInitialized() const {
  return true;
}

void UpdatePS4FriendListReq::Swap(UpdatePS4FriendListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdatePS4FriendListReq::InternalSwap(UpdatePS4FriendListReq* other) {
  using std::swap;
  psn_id_list_.InternalSwap(&other->psn_id_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdatePS4FriendListReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdatePS4FriendListReq

// repeated string psn_id_list = 4;
int UpdatePS4FriendListReq::psn_id_list_size() const {
  return psn_id_list_.size();
}
void UpdatePS4FriendListReq::clear_psn_id_list() {
  psn_id_list_.Clear();
}
const ::std::string& UpdatePS4FriendListReq::psn_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UpdatePS4FriendListReq.psn_id_list)
  return psn_id_list_.Get(index);
}
::std::string* UpdatePS4FriendListReq::mutable_psn_id_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.UpdatePS4FriendListReq.psn_id_list)
  return psn_id_list_.Mutable(index);
}
void UpdatePS4FriendListReq::set_psn_id_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.UpdatePS4FriendListReq.psn_id_list)
  psn_id_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void UpdatePS4FriendListReq::set_psn_id_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.UpdatePS4FriendListReq.psn_id_list)
  psn_id_list_.Mutable(index)->assign(std::move(value));
}
#endif
void UpdatePS4FriendListReq::set_psn_id_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  psn_id_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.UpdatePS4FriendListReq.psn_id_list)
}
void UpdatePS4FriendListReq::set_psn_id_list(int index, const char* value, size_t size) {
  psn_id_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.UpdatePS4FriendListReq.psn_id_list)
}
::std::string* UpdatePS4FriendListReq::add_psn_id_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.UpdatePS4FriendListReq.psn_id_list)
  return psn_id_list_.Add();
}
void UpdatePS4FriendListReq::add_psn_id_list(const ::std::string& value) {
  psn_id_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.UpdatePS4FriendListReq.psn_id_list)
}
#if LANG_CXX11
void UpdatePS4FriendListReq::add_psn_id_list(::std::string&& value) {
  psn_id_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.UpdatePS4FriendListReq.psn_id_list)
}
#endif
void UpdatePS4FriendListReq::add_psn_id_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  psn_id_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.UpdatePS4FriendListReq.psn_id_list)
}
void UpdatePS4FriendListReq::add_psn_id_list(const char* value, size_t size) {
  psn_id_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.UpdatePS4FriendListReq.psn_id_list)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
UpdatePS4FriendListReq::psn_id_list() const {
  // @@protoc_insertion_point(field_list:proto.UpdatePS4FriendListReq.psn_id_list)
  return psn_id_list_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
UpdatePS4FriendListReq::mutable_psn_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UpdatePS4FriendListReq.psn_id_list)
  return &psn_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdatePS4FriendListRsp::kRetcodeFieldNumber;
const int UpdatePS4FriendListRsp::kPsnIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdatePS4FriendListRsp::UpdatePS4FriendListRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UpdatePS4FriendListRsp)
}
UpdatePS4FriendListRsp::UpdatePS4FriendListRsp(const UpdatePS4FriendListRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      psn_id_list_(from.psn_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.UpdatePS4FriendListRsp)
}

void UpdatePS4FriendListRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

UpdatePS4FriendListRsp::~UpdatePS4FriendListRsp() {
  // @@protoc_insertion_point(destructor:proto.UpdatePS4FriendListRsp)
  SharedDtor();
}

void UpdatePS4FriendListRsp::SharedDtor() {
}

void UpdatePS4FriendListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdatePS4FriendListRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdatePS4FriendListRsp& UpdatePS4FriendListRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdatePS4FriendListRsp* UpdatePS4FriendListRsp::New(::google::protobuf::Arena* arena) const {
  UpdatePS4FriendListRsp* n = new UpdatePS4FriendListRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdatePS4FriendListRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdatePS4FriendListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  psn_id_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool UpdatePS4FriendListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UpdatePS4FriendListRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string psn_id_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_psn_id_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->psn_id_list(this->psn_id_list_size() - 1).data(),
            static_cast<int>(this->psn_id_list(this->psn_id_list_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.UpdatePS4FriendListRsp.psn_id_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UpdatePS4FriendListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UpdatePS4FriendListRsp)
  return false;
#undef DO_
}

void UpdatePS4FriendListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UpdatePS4FriendListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string psn_id_list = 2;
  for (int i = 0, n = this->psn_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->psn_id_list(i).data(), static_cast<int>(this->psn_id_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.UpdatePS4FriendListRsp.psn_id_list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->psn_id_list(i), output);
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UpdatePS4FriendListRsp)
}

::google::protobuf::uint8* UpdatePS4FriendListRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdatePS4FriendListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string psn_id_list = 2;
  for (int i = 0, n = this->psn_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->psn_id_list(i).data(), static_cast<int>(this->psn_id_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.UpdatePS4FriendListRsp.psn_id_list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->psn_id_list(i), target);
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdatePS4FriendListRsp)
  return target;
}

size_t UpdatePS4FriendListRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdatePS4FriendListRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string psn_id_list = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->psn_id_list_size());
  for (int i = 0, n = this->psn_id_list_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->psn_id_list(i));
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdatePS4FriendListRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UpdatePS4FriendListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdatePS4FriendListRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdatePS4FriendListRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UpdatePS4FriendListRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UpdatePS4FriendListRsp)
    MergeFrom(*source);
  }
}

void UpdatePS4FriendListRsp::MergeFrom(const UpdatePS4FriendListRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdatePS4FriendListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  psn_id_list_.MergeFrom(from.psn_id_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void UpdatePS4FriendListRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UpdatePS4FriendListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdatePS4FriendListRsp::CopyFrom(const UpdatePS4FriendListRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdatePS4FriendListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatePS4FriendListRsp::IsInitialized() const {
  return true;
}

void UpdatePS4FriendListRsp::Swap(UpdatePS4FriendListRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdatePS4FriendListRsp::InternalSwap(UpdatePS4FriendListRsp* other) {
  using std::swap;
  psn_id_list_.InternalSwap(&other->psn_id_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdatePS4FriendListRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdatePS4FriendListRsp

// int32 retcode = 5;
void UpdatePS4FriendListRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 UpdatePS4FriendListRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.UpdatePS4FriendListRsp.retcode)
  return retcode_;
}
void UpdatePS4FriendListRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.UpdatePS4FriendListRsp.retcode)
}

// repeated string psn_id_list = 2;
int UpdatePS4FriendListRsp::psn_id_list_size() const {
  return psn_id_list_.size();
}
void UpdatePS4FriendListRsp::clear_psn_id_list() {
  psn_id_list_.Clear();
}
const ::std::string& UpdatePS4FriendListRsp::psn_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UpdatePS4FriendListRsp.psn_id_list)
  return psn_id_list_.Get(index);
}
::std::string* UpdatePS4FriendListRsp::mutable_psn_id_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.UpdatePS4FriendListRsp.psn_id_list)
  return psn_id_list_.Mutable(index);
}
void UpdatePS4FriendListRsp::set_psn_id_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.UpdatePS4FriendListRsp.psn_id_list)
  psn_id_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void UpdatePS4FriendListRsp::set_psn_id_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.UpdatePS4FriendListRsp.psn_id_list)
  psn_id_list_.Mutable(index)->assign(std::move(value));
}
#endif
void UpdatePS4FriendListRsp::set_psn_id_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  psn_id_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.UpdatePS4FriendListRsp.psn_id_list)
}
void UpdatePS4FriendListRsp::set_psn_id_list(int index, const char* value, size_t size) {
  psn_id_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.UpdatePS4FriendListRsp.psn_id_list)
}
::std::string* UpdatePS4FriendListRsp::add_psn_id_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.UpdatePS4FriendListRsp.psn_id_list)
  return psn_id_list_.Add();
}
void UpdatePS4FriendListRsp::add_psn_id_list(const ::std::string& value) {
  psn_id_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.UpdatePS4FriendListRsp.psn_id_list)
}
#if LANG_CXX11
void UpdatePS4FriendListRsp::add_psn_id_list(::std::string&& value) {
  psn_id_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.UpdatePS4FriendListRsp.psn_id_list)
}
#endif
void UpdatePS4FriendListRsp::add_psn_id_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  psn_id_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.UpdatePS4FriendListRsp.psn_id_list)
}
void UpdatePS4FriendListRsp::add_psn_id_list(const char* value, size_t size) {
  psn_id_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.UpdatePS4FriendListRsp.psn_id_list)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
UpdatePS4FriendListRsp::psn_id_list() const {
  // @@protoc_insertion_point(field_list:proto.UpdatePS4FriendListRsp.psn_id_list)
  return psn_id_list_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
UpdatePS4FriendListRsp::mutable_psn_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UpdatePS4FriendListRsp.psn_id_list)
  return &psn_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FriendInfoChangeNotify::kUidFieldNumber;
const int FriendInfoChangeNotify::kOnlineIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FriendInfoChangeNotify::FriendInfoChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FriendInfoChangeNotify)
}
FriendInfoChangeNotify::FriendInfoChangeNotify(const FriendInfoChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  online_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.online_id().size() > 0) {
    online_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_id_);
  }
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:proto.FriendInfoChangeNotify)
}

void FriendInfoChangeNotify::SharedCtor() {
  online_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_ = 0u;
  _cached_size_ = 0;
}

FriendInfoChangeNotify::~FriendInfoChangeNotify() {
  // @@protoc_insertion_point(destructor:proto.FriendInfoChangeNotify)
  SharedDtor();
}

void FriendInfoChangeNotify::SharedDtor() {
  online_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FriendInfoChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendInfoChangeNotify::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FriendInfoChangeNotify& FriendInfoChangeNotify::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

FriendInfoChangeNotify* FriendInfoChangeNotify::New(::google::protobuf::Arena* arena) const {
  FriendInfoChangeNotify* n = new FriendInfoChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FriendInfoChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FriendInfoChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  online_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_ = 0u;
  _internal_metadata_.Clear();
}

bool FriendInfoChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FriendInfoChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string online_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_online_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->online_id().data(), static_cast<int>(this->online_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.FriendInfoChangeNotify.online_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FriendInfoChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FriendInfoChangeNotify)
  return false;
#undef DO_
}

void FriendInfoChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FriendInfoChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // string online_id = 9;
  if (this->online_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->online_id().data(), static_cast<int>(this->online_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.FriendInfoChangeNotify.online_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->online_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FriendInfoChangeNotify)
}

::google::protobuf::uint8* FriendInfoChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FriendInfoChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // string online_id = 9;
  if (this->online_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->online_id().data(), static_cast<int>(this->online_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.FriendInfoChangeNotify.online_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->online_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FriendInfoChangeNotify)
  return target;
}

size_t FriendInfoChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FriendInfoChangeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string online_id = 9;
  if (this->online_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->online_id());
  }

  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriendInfoChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FriendInfoChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const FriendInfoChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FriendInfoChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FriendInfoChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FriendInfoChangeNotify)
    MergeFrom(*source);
  }
}

void FriendInfoChangeNotify::MergeFrom(const FriendInfoChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FriendInfoChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.online_id().size() > 0) {

    online_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_id_);
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void FriendInfoChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FriendInfoChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendInfoChangeNotify::CopyFrom(const FriendInfoChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FriendInfoChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendInfoChangeNotify::IsInitialized() const {
  return true;
}

void FriendInfoChangeNotify::Swap(FriendInfoChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FriendInfoChangeNotify::InternalSwap(FriendInfoChangeNotify* other) {
  using std::swap;
  online_id_.Swap(&other->online_id_);
  swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FriendInfoChangeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FriendInfoChangeNotify

// uint32 uid = 1;
void FriendInfoChangeNotify::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 FriendInfoChangeNotify::uid() const {
  // @@protoc_insertion_point(field_get:proto.FriendInfoChangeNotify.uid)
  return uid_;
}
void FriendInfoChangeNotify::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendInfoChangeNotify.uid)
}

// string online_id = 9;
void FriendInfoChangeNotify::clear_online_id() {
  online_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FriendInfoChangeNotify::online_id() const {
  // @@protoc_insertion_point(field_get:proto.FriendInfoChangeNotify.online_id)
  return online_id_.GetNoArena();
}
void FriendInfoChangeNotify::set_online_id(const ::std::string& value) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.FriendInfoChangeNotify.online_id)
}
#if LANG_CXX11
void FriendInfoChangeNotify::set_online_id(::std::string&& value) {
  
  online_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.FriendInfoChangeNotify.online_id)
}
#endif
void FriendInfoChangeNotify::set_online_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.FriendInfoChangeNotify.online_id)
}
void FriendInfoChangeNotify::set_online_id(const char* value, size_t size) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.FriendInfoChangeNotify.online_id)
}
::std::string* FriendInfoChangeNotify::mutable_online_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.FriendInfoChangeNotify.online_id)
  return online_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FriendInfoChangeNotify::release_online_id() {
  // @@protoc_insertion_point(field_release:proto.FriendInfoChangeNotify.online_id)
  
  return online_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendInfoChangeNotify::set_allocated_online_id(::std::string* online_id) {
  if (online_id != NULL) {
    
  } else {
    
  }
  online_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), online_id);
  // @@protoc_insertion_point(field_set_allocated:proto.FriendInfoChangeNotify.online_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerSignatureAuditDataNotify::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerSignatureAuditDataNotify::PlayerSignatureAuditDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerSignatureAuditDataNotify)
}
PlayerSignatureAuditDataNotify::PlayerSignatureAuditDataNotify(const PlayerSignatureAuditDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::proto::ContentAuditInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.PlayerSignatureAuditDataNotify)
}

void PlayerSignatureAuditDataNotify::SharedCtor() {
  info_ = NULL;
  _cached_size_ = 0;
}

PlayerSignatureAuditDataNotify::~PlayerSignatureAuditDataNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerSignatureAuditDataNotify)
  SharedDtor();
}

void PlayerSignatureAuditDataNotify::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void PlayerSignatureAuditDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerSignatureAuditDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerSignatureAuditDataNotify& PlayerSignatureAuditDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerSignatureAuditDataNotify* PlayerSignatureAuditDataNotify::New(::google::protobuf::Arena* arena) const {
  PlayerSignatureAuditDataNotify* n = new PlayerSignatureAuditDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerSignatureAuditDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerSignatureAuditDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  _internal_metadata_.Clear();
}

bool PlayerSignatureAuditDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerSignatureAuditDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ContentAuditInfo info = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerSignatureAuditDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerSignatureAuditDataNotify)
  return false;
#undef DO_
}

void PlayerSignatureAuditDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerSignatureAuditDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ContentAuditInfo info = 14;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerSignatureAuditDataNotify)
}

::google::protobuf::uint8* PlayerSignatureAuditDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerSignatureAuditDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ContentAuditInfo info = 14;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerSignatureAuditDataNotify)
  return target;
}

size_t PlayerSignatureAuditDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerSignatureAuditDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.ContentAuditInfo info = 14;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerSignatureAuditDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerSignatureAuditDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerSignatureAuditDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerSignatureAuditDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerSignatureAuditDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerSignatureAuditDataNotify)
    MergeFrom(*source);
  }
}

void PlayerSignatureAuditDataNotify::MergeFrom(const PlayerSignatureAuditDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerSignatureAuditDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::proto::ContentAuditInfo::MergeFrom(from.info());
  }
}

void PlayerSignatureAuditDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerSignatureAuditDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerSignatureAuditDataNotify::CopyFrom(const PlayerSignatureAuditDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerSignatureAuditDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerSignatureAuditDataNotify::IsInitialized() const {
  return true;
}

void PlayerSignatureAuditDataNotify::Swap(PlayerSignatureAuditDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerSignatureAuditDataNotify::InternalSwap(PlayerSignatureAuditDataNotify* other) {
  using std::swap;
  swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerSignatureAuditDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerSignatureAuditDataNotify

// .proto.ContentAuditInfo info = 14;
bool PlayerSignatureAuditDataNotify::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void PlayerSignatureAuditDataNotify::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::proto::ContentAuditInfo& PlayerSignatureAuditDataNotify::info() const {
  const ::proto::ContentAuditInfo* p = info_;
  // @@protoc_insertion_point(field_get:proto.PlayerSignatureAuditDataNotify.info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ContentAuditInfo*>(
      &::proto::_ContentAuditInfo_default_instance_);
}
::proto::ContentAuditInfo* PlayerSignatureAuditDataNotify::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::proto::ContentAuditInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerSignatureAuditDataNotify.info)
  return info_;
}
::proto::ContentAuditInfo* PlayerSignatureAuditDataNotify::release_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerSignatureAuditDataNotify.info)
  
  ::proto::ContentAuditInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void PlayerSignatureAuditDataNotify::set_allocated_info(::proto::ContentAuditInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerSignatureAuditDataNotify.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerSignatureNotify::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerSignatureNotify::PlayerSignatureNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerSignatureNotify)
}
PlayerSignatureNotify::PlayerSignatureNotify(const PlayerSignatureNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.PlayerSignatureNotify)
}

void PlayerSignatureNotify::SharedCtor() {
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PlayerSignatureNotify::~PlayerSignatureNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerSignatureNotify)
  SharedDtor();
}

void PlayerSignatureNotify::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerSignatureNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerSignatureNotify::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerSignatureNotify& PlayerSignatureNotify::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerSignatureNotify* PlayerSignatureNotify::New(::google::protobuf::Arena* arena) const {
  PlayerSignatureNotify* n = new PlayerSignatureNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerSignatureNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerSignatureNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PlayerSignatureNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerSignatureNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string signature = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signature().data(), static_cast<int>(this->signature().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerSignatureNotify.signature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerSignatureNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerSignatureNotify)
  return false;
#undef DO_
}

void PlayerSignatureNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerSignatureNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string signature = 12;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerSignatureNotify.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->signature(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerSignatureNotify)
}

::google::protobuf::uint8* PlayerSignatureNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerSignatureNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string signature = 12;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerSignatureNotify.signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->signature(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerSignatureNotify)
  return target;
}

size_t PlayerSignatureNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerSignatureNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string signature = 12;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerSignatureNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerSignatureNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerSignatureNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerSignatureNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerSignatureNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerSignatureNotify)
    MergeFrom(*source);
  }
}

void PlayerSignatureNotify::MergeFrom(const PlayerSignatureNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerSignatureNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
}

void PlayerSignatureNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerSignatureNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerSignatureNotify::CopyFrom(const PlayerSignatureNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerSignatureNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerSignatureNotify::IsInitialized() const {
  return true;
}

void PlayerSignatureNotify::Swap(PlayerSignatureNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerSignatureNotify::InternalSwap(PlayerSignatureNotify* other) {
  using std::swap;
  signature_.Swap(&other->signature_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerSignatureNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerSignatureNotify

// string signature = 12;
void PlayerSignatureNotify::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerSignatureNotify::signature() const {
  // @@protoc_insertion_point(field_get:proto.PlayerSignatureNotify.signature)
  return signature_.GetNoArena();
}
void PlayerSignatureNotify::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerSignatureNotify.signature)
}
#if LANG_CXX11
void PlayerSignatureNotify::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerSignatureNotify.signature)
}
#endif
void PlayerSignatureNotify::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerSignatureNotify.signature)
}
void PlayerSignatureNotify::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerSignatureNotify.signature)
}
::std::string* PlayerSignatureNotify::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerSignatureNotify.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerSignatureNotify::release_signature() {
  // @@protoc_insertion_point(field_release:proto.PlayerSignatureNotify.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerSignatureNotify::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerSignatureNotify.signature)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignatureAuditConfigNotify::kIsOpenFieldNumber;
const int SignatureAuditConfigNotify::kSubmitLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignatureAuditConfigNotify::SignatureAuditConfigNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SignatureAuditConfigNotify)
}
SignatureAuditConfigNotify::SignatureAuditConfigNotify(const SignatureAuditConfigNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_open_, &from.is_open_,
    static_cast<size_t>(reinterpret_cast<char*>(&submit_limit_) -
    reinterpret_cast<char*>(&is_open_)) + sizeof(submit_limit_));
  // @@protoc_insertion_point(copy_constructor:proto.SignatureAuditConfigNotify)
}

void SignatureAuditConfigNotify::SharedCtor() {
  ::memset(&is_open_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&submit_limit_) -
      reinterpret_cast<char*>(&is_open_)) + sizeof(submit_limit_));
  _cached_size_ = 0;
}

SignatureAuditConfigNotify::~SignatureAuditConfigNotify() {
  // @@protoc_insertion_point(destructor:proto.SignatureAuditConfigNotify)
  SharedDtor();
}

void SignatureAuditConfigNotify::SharedDtor() {
}

void SignatureAuditConfigNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SignatureAuditConfigNotify::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignatureAuditConfigNotify& SignatureAuditConfigNotify::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SignatureAuditConfigNotify* SignatureAuditConfigNotify::New(::google::protobuf::Arena* arena) const {
  SignatureAuditConfigNotify* n = new SignatureAuditConfigNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SignatureAuditConfigNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SignatureAuditConfigNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&is_open_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&submit_limit_) -
      reinterpret_cast<char*>(&is_open_)) + sizeof(submit_limit_));
  _internal_metadata_.Clear();
}

bool SignatureAuditConfigNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SignatureAuditConfigNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_open = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_open_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 submit_limit = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &submit_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SignatureAuditConfigNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SignatureAuditConfigNotify)
  return false;
#undef DO_
}

void SignatureAuditConfigNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SignatureAuditConfigNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_open = 9;
  if (this->is_open() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->is_open(), output);
  }

  // uint32 submit_limit = 10;
  if (this->submit_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->submit_limit(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SignatureAuditConfigNotify)
}

::google::protobuf::uint8* SignatureAuditConfigNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SignatureAuditConfigNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_open = 9;
  if (this->is_open() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->is_open(), target);
  }

  // uint32 submit_limit = 10;
  if (this->submit_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->submit_limit(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SignatureAuditConfigNotify)
  return target;
}

size_t SignatureAuditConfigNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SignatureAuditConfigNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_open = 9;
  if (this->is_open() != 0) {
    total_size += 1 + 1;
  }

  // uint32 submit_limit = 10;
  if (this->submit_limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->submit_limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SignatureAuditConfigNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SignatureAuditConfigNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SignatureAuditConfigNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignatureAuditConfigNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SignatureAuditConfigNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SignatureAuditConfigNotify)
    MergeFrom(*source);
  }
}

void SignatureAuditConfigNotify::MergeFrom(const SignatureAuditConfigNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SignatureAuditConfigNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_open() != 0) {
    set_is_open(from.is_open());
  }
  if (from.submit_limit() != 0) {
    set_submit_limit(from.submit_limit());
  }
}

void SignatureAuditConfigNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SignatureAuditConfigNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignatureAuditConfigNotify::CopyFrom(const SignatureAuditConfigNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SignatureAuditConfigNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignatureAuditConfigNotify::IsInitialized() const {
  return true;
}

void SignatureAuditConfigNotify::Swap(SignatureAuditConfigNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignatureAuditConfigNotify::InternalSwap(SignatureAuditConfigNotify* other) {
  using std::swap;
  swap(is_open_, other->is_open_);
  swap(submit_limit_, other->submit_limit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SignatureAuditConfigNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SignatureAuditConfigNotify

// bool is_open = 9;
void SignatureAuditConfigNotify::clear_is_open() {
  is_open_ = false;
}
bool SignatureAuditConfigNotify::is_open() const {
  // @@protoc_insertion_point(field_get:proto.SignatureAuditConfigNotify.is_open)
  return is_open_;
}
void SignatureAuditConfigNotify::set_is_open(bool value) {
  
  is_open_ = value;
  // @@protoc_insertion_point(field_set:proto.SignatureAuditConfigNotify.is_open)
}

// uint32 submit_limit = 10;
void SignatureAuditConfigNotify::clear_submit_limit() {
  submit_limit_ = 0u;
}
::google::protobuf::uint32 SignatureAuditConfigNotify::submit_limit() const {
  // @@protoc_insertion_point(field_get:proto.SignatureAuditConfigNotify.submit_limit)
  return submit_limit_;
}
void SignatureAuditConfigNotify::set_submit_limit(::google::protobuf::uint32 value) {
  
  submit_limit_ = value;
  // @@protoc_insertion_point(field_set:proto.SignatureAuditConfigNotify.submit_limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadSignatureAuditReq::ReadSignatureAuditReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ReadSignatureAuditReq)
}
ReadSignatureAuditReq::ReadSignatureAuditReq(const ReadSignatureAuditReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.ReadSignatureAuditReq)
}

void ReadSignatureAuditReq::SharedCtor() {
  _cached_size_ = 0;
}

ReadSignatureAuditReq::~ReadSignatureAuditReq() {
  // @@protoc_insertion_point(destructor:proto.ReadSignatureAuditReq)
  SharedDtor();
}

void ReadSignatureAuditReq::SharedDtor() {
}

void ReadSignatureAuditReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadSignatureAuditReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadSignatureAuditReq& ReadSignatureAuditReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReadSignatureAuditReq* ReadSignatureAuditReq::New(::google::protobuf::Arena* arena) const {
  ReadSignatureAuditReq* n = new ReadSignatureAuditReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadSignatureAuditReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ReadSignatureAuditReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ReadSignatureAuditReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ReadSignatureAuditReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ReadSignatureAuditReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ReadSignatureAuditReq)
  return false;
#undef DO_
}

void ReadSignatureAuditReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ReadSignatureAuditReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ReadSignatureAuditReq)
}

::google::protobuf::uint8* ReadSignatureAuditReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ReadSignatureAuditReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ReadSignatureAuditReq)
  return target;
}

size_t ReadSignatureAuditReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ReadSignatureAuditReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadSignatureAuditReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ReadSignatureAuditReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadSignatureAuditReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadSignatureAuditReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ReadSignatureAuditReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ReadSignatureAuditReq)
    MergeFrom(*source);
  }
}

void ReadSignatureAuditReq::MergeFrom(const ReadSignatureAuditReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ReadSignatureAuditReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReadSignatureAuditReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ReadSignatureAuditReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadSignatureAuditReq::CopyFrom(const ReadSignatureAuditReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ReadSignatureAuditReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadSignatureAuditReq::IsInitialized() const {
  return true;
}

void ReadSignatureAuditReq::Swap(ReadSignatureAuditReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadSignatureAuditReq::InternalSwap(ReadSignatureAuditReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadSignatureAuditReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadSignatureAuditReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadSignatureAuditRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadSignatureAuditRsp::ReadSignatureAuditRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ReadSignatureAuditRsp)
}
ReadSignatureAuditRsp::ReadSignatureAuditRsp(const ReadSignatureAuditRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.ReadSignatureAuditRsp)
}

void ReadSignatureAuditRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

ReadSignatureAuditRsp::~ReadSignatureAuditRsp() {
  // @@protoc_insertion_point(destructor:proto.ReadSignatureAuditRsp)
  SharedDtor();
}

void ReadSignatureAuditRsp::SharedDtor() {
}

void ReadSignatureAuditRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadSignatureAuditRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadSignatureAuditRsp& ReadSignatureAuditRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReadSignatureAuditRsp* ReadSignatureAuditRsp::New(::google::protobuf::Arena* arena) const {
  ReadSignatureAuditRsp* n = new ReadSignatureAuditRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadSignatureAuditRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ReadSignatureAuditRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool ReadSignatureAuditRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ReadSignatureAuditRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ReadSignatureAuditRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ReadSignatureAuditRsp)
  return false;
#undef DO_
}

void ReadSignatureAuditRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ReadSignatureAuditRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 9;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ReadSignatureAuditRsp)
}

::google::protobuf::uint8* ReadSignatureAuditRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ReadSignatureAuditRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 9;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ReadSignatureAuditRsp)
  return target;
}

size_t ReadSignatureAuditRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ReadSignatureAuditRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 9;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadSignatureAuditRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ReadSignatureAuditRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadSignatureAuditRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadSignatureAuditRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ReadSignatureAuditRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ReadSignatureAuditRsp)
    MergeFrom(*source);
  }
}

void ReadSignatureAuditRsp::MergeFrom(const ReadSignatureAuditRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ReadSignatureAuditRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ReadSignatureAuditRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ReadSignatureAuditRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadSignatureAuditRsp::CopyFrom(const ReadSignatureAuditRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ReadSignatureAuditRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadSignatureAuditRsp::IsInitialized() const {
  return true;
}

void ReadSignatureAuditRsp::Swap(ReadSignatureAuditRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadSignatureAuditRsp::InternalSwap(ReadSignatureAuditRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadSignatureAuditRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadSignatureAuditRsp

// int32 retcode = 9;
void ReadSignatureAuditRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ReadSignatureAuditRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ReadSignatureAuditRsp.retcode)
  return retcode_;
}
void ReadSignatureAuditRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ReadSignatureAuditRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
