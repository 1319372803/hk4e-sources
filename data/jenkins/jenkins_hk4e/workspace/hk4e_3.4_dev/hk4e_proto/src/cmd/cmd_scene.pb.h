// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_scene.proto

#ifndef PROTOBUF_cmd_2fcmd_5fscene_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5fscene_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
#include "cmd/cmd_widget.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class AddSeenMonsterNotify;
class AddSeenMonsterNotifyDefaultTypeInternal;
extern AddSeenMonsterNotifyDefaultTypeInternal _AddSeenMonsterNotify_default_instance_;
class AllMarkPointNotify;
class AllMarkPointNotifyDefaultTypeInternal;
extern AllMarkPointNotifyDefaultTypeInternal _AllMarkPointNotify_default_instance_;
class AllSeenMonsterNotify;
class AllSeenMonsterNotifyDefaultTypeInternal;
extern AllSeenMonsterNotifyDefaultTypeInternal _AllSeenMonsterNotify_default_instance_;
class AreaPlayInfoNotify;
class AreaPlayInfoNotifyDefaultTypeInternal;
extern AreaPlayInfoNotifyDefaultTypeInternal _AreaPlayInfoNotify_default_instance_;
class AvatarEnterSceneInfo;
class AvatarEnterSceneInfoDefaultTypeInternal;
extern AvatarEnterSceneInfoDefaultTypeInternal _AvatarEnterSceneInfo_default_instance_;
class AvatarFollowRouteNotify;
class AvatarFollowRouteNotifyDefaultTypeInternal;
extern AvatarFollowRouteNotifyDefaultTypeInternal _AvatarFollowRouteNotify_default_instance_;
class BackMyWorldReq;
class BackMyWorldReqDefaultTypeInternal;
extern BackMyWorldReqDefaultTypeInternal _BackMyWorldReq_default_instance_;
class BackMyWorldRsp;
class BackMyWorldRspDefaultTypeInternal;
extern BackMyWorldRspDefaultTypeInternal _BackMyWorldRsp_default_instance_;
class BeginCameraSceneLookNotify;
class BeginCameraSceneLookNotifyDefaultTypeInternal;
extern BeginCameraSceneLookNotifyDefaultTypeInternal _BeginCameraSceneLookNotify_default_instance_;
class BeginCameraSceneLookWithTemplateNotify;
class BeginCameraSceneLookWithTemplateNotifyDefaultTypeInternal;
extern BeginCameraSceneLookWithTemplateNotifyDefaultTypeInternal _BeginCameraSceneLookWithTemplateNotify_default_instance_;
class ChangeWorldToSingleModeNotify;
class ChangeWorldToSingleModeNotifyDefaultTypeInternal;
extern ChangeWorldToSingleModeNotifyDefaultTypeInternal _ChangeWorldToSingleModeNotify_default_instance_;
class ChangeWorldToSingleModeReq;
class ChangeWorldToSingleModeReqDefaultTypeInternal;
extern ChangeWorldToSingleModeReqDefaultTypeInternal _ChangeWorldToSingleModeReq_default_instance_;
class ChangeWorldToSingleModeRsp;
class ChangeWorldToSingleModeRspDefaultTypeInternal;
extern ChangeWorldToSingleModeRspDefaultTypeInternal _ChangeWorldToSingleModeRsp_default_instance_;
class ChatHistoryNotify;
class ChatHistoryNotifyDefaultTypeInternal;
extern ChatHistoryNotifyDefaultTypeInternal _ChatHistoryNotify_default_instance_;
class ChatInfo;
class ChatInfoDefaultTypeInternal;
extern ChatInfoDefaultTypeInternal _ChatInfo_default_instance_;
class ChatInfo_SystemHint;
class ChatInfo_SystemHintDefaultTypeInternal;
extern ChatInfo_SystemHintDefaultTypeInternal _ChatInfo_SystemHint_default_instance_;
class CheckGroupReplacedReq;
class CheckGroupReplacedReqDefaultTypeInternal;
extern CheckGroupReplacedReqDefaultTypeInternal _CheckGroupReplacedReq_default_instance_;
class CheckGroupReplacedRsp;
class CheckGroupReplacedRspDefaultTypeInternal;
extern CheckGroupReplacedRspDefaultTypeInternal _CheckGroupReplacedRsp_default_instance_;
class CityInfo;
class CityInfoDefaultTypeInternal;
extern CityInfoDefaultTypeInternal _CityInfo_default_instance_;
class ClientHashDebugNotify;
class ClientHashDebugNotifyDefaultTypeInternal;
extern ClientHashDebugNotifyDefaultTypeInternal _ClientHashDebugNotify_default_instance_;
class ClientLoadingCostumeVerificationNotify;
class ClientLoadingCostumeVerificationNotifyDefaultTypeInternal;
extern ClientLoadingCostumeVerificationNotifyDefaultTypeInternal _ClientLoadingCostumeVerificationNotify_default_instance_;
class ClientPauseNotify;
class ClientPauseNotifyDefaultTypeInternal;
extern ClientPauseNotifyDefaultTypeInternal _ClientPauseNotify_default_instance_;
class ClientScriptEventNotify;
class ClientScriptEventNotifyDefaultTypeInternal;
extern ClientScriptEventNotifyDefaultTypeInternal _ClientScriptEventNotify_default_instance_;
class ClientTransmitReq;
class ClientTransmitReqDefaultTypeInternal;
extern ClientTransmitReqDefaultTypeInternal _ClientTransmitReq_default_instance_;
class ClientTransmitRsp;
class ClientTransmitRspDefaultTypeInternal;
extern ClientTransmitRspDefaultTypeInternal _ClientTransmitRsp_default_instance_;
class CloseCommonTipsNotify;
class CloseCommonTipsNotifyDefaultTypeInternal;
extern CloseCommonTipsNotifyDefaultTypeInternal _CloseCommonTipsNotify_default_instance_;
class CutSceneBeginNotify;
class CutSceneBeginNotifyDefaultTypeInternal;
extern CutSceneBeginNotifyDefaultTypeInternal _CutSceneBeginNotify_default_instance_;
class CutSceneEndNotify;
class CutSceneEndNotifyDefaultTypeInternal;
extern CutSceneEndNotifyDefaultTypeInternal _CutSceneEndNotify_default_instance_;
class CutSceneExtraParam;
class CutSceneExtraParamDefaultTypeInternal;
extern CutSceneExtraParamDefaultTypeInternal _CutSceneExtraParam_default_instance_;
class CutSceneFinishNotify;
class CutSceneFinishNotifyDefaultTypeInternal;
extern CutSceneFinishNotifyDefaultTypeInternal _CutSceneFinishNotify_default_instance_;
class CylinderRegionSize;
class CylinderRegionSizeDefaultTypeInternal;
extern CylinderRegionSizeDefaultTypeInternal _CylinderRegionSize_default_instance_;
class DeathZoneObserveNotify;
class DeathZoneObserveNotifyDefaultTypeInternal;
extern DeathZoneObserveNotifyDefaultTypeInternal _DeathZoneObserveNotify_default_instance_;
class DelScenePlayTeamEntityNotify;
class DelScenePlayTeamEntityNotifyDefaultTypeInternal;
extern DelScenePlayTeamEntityNotifyDefaultTypeInternal _DelScenePlayTeamEntityNotify_default_instance_;
class DungeonEntryCond;
class DungeonEntryCondDefaultTypeInternal;
extern DungeonEntryCondDefaultTypeInternal _DungeonEntryCond_default_instance_;
class DungeonEntryToBeExploreNotify;
class DungeonEntryToBeExploreNotifyDefaultTypeInternal;
extern DungeonEntryToBeExploreNotifyDefaultTypeInternal _DungeonEntryToBeExploreNotify_default_instance_;
class EndCameraSceneLookNotify;
class EndCameraSceneLookNotifyDefaultTypeInternal;
extern EndCameraSceneLookNotifyDefaultTypeInternal _EndCameraSceneLookNotify_default_instance_;
class EnterSceneDoneReq;
class EnterSceneDoneReqDefaultTypeInternal;
extern EnterSceneDoneReqDefaultTypeInternal _EnterSceneDoneReq_default_instance_;
class EnterSceneDoneRsp;
class EnterSceneDoneRspDefaultTypeInternal;
extern EnterSceneDoneRspDefaultTypeInternal _EnterSceneDoneRsp_default_instance_;
class EnterScenePeerNotify;
class EnterScenePeerNotifyDefaultTypeInternal;
extern EnterScenePeerNotifyDefaultTypeInternal _EnterScenePeerNotify_default_instance_;
class EnterSceneReadyReq;
class EnterSceneReadyReqDefaultTypeInternal;
extern EnterSceneReadyReqDefaultTypeInternal _EnterSceneReadyReq_default_instance_;
class EnterSceneReadyRsp;
class EnterSceneReadyRspDefaultTypeInternal;
extern EnterSceneReadyRspDefaultTypeInternal _EnterSceneReadyRsp_default_instance_;
class EnterSceneWeatherAreaNotify;
class EnterSceneWeatherAreaNotifyDefaultTypeInternal;
extern EnterSceneWeatherAreaNotifyDefaultTypeInternal _EnterSceneWeatherAreaNotify_default_instance_;
class EnterTransPointRegionNotify;
class EnterTransPointRegionNotifyDefaultTypeInternal;
extern EnterTransPointRegionNotifyDefaultTypeInternal _EnterTransPointRegionNotify_default_instance_;
class EnterWorldAreaReq;
class EnterWorldAreaReqDefaultTypeInternal;
extern EnterWorldAreaReqDefaultTypeInternal _EnterWorldAreaReq_default_instance_;
class EnterWorldAreaRsp;
class EnterWorldAreaRspDefaultTypeInternal;
extern EnterWorldAreaRspDefaultTypeInternal _EnterWorldAreaRsp_default_instance_;
class EntityConfigHashEntry;
class EntityConfigHashEntryDefaultTypeInternal;
extern EntityConfigHashEntryDefaultTypeInternal _EntityConfigHashEntry_default_instance_;
class EntityConfigHashNotify;
class EntityConfigHashNotifyDefaultTypeInternal;
extern EntityConfigHashNotifyDefaultTypeInternal _EntityConfigHashNotify_default_instance_;
class EntityForceSyncReq;
class EntityForceSyncReqDefaultTypeInternal;
extern EntityForceSyncReqDefaultTypeInternal _EntityForceSyncReq_default_instance_;
class EntityForceSyncRsp;
class EntityForceSyncRspDefaultTypeInternal;
extern EntityForceSyncRspDefaultTypeInternal _EntityForceSyncRsp_default_instance_;
class EntityJumpNotify;
class EntityJumpNotifyDefaultTypeInternal;
extern EntityJumpNotifyDefaultTypeInternal _EntityJumpNotify_default_instance_;
class EntityMoveFailInfo;
class EntityMoveFailInfoDefaultTypeInternal;
extern EntityMoveFailInfoDefaultTypeInternal _EntityMoveFailInfo_default_instance_;
class EntityMoveRoomNotify;
class EntityMoveRoomNotifyDefaultTypeInternal;
extern EntityMoveRoomNotifyDefaultTypeInternal _EntityMoveRoomNotify_default_instance_;
class EntityTagChangeNotify;
class EntityTagChangeNotifyDefaultTypeInternal;
extern EntityTagChangeNotifyDefaultTypeInternal _EntityTagChangeNotify_default_instance_;
class ExecuteGadgetLuaReq;
class ExecuteGadgetLuaReqDefaultTypeInternal;
extern ExecuteGadgetLuaReqDefaultTypeInternal _ExecuteGadgetLuaReq_default_instance_;
class ExecuteGadgetLuaRsp;
class ExecuteGadgetLuaRspDefaultTypeInternal;
extern ExecuteGadgetLuaRspDefaultTypeInternal _ExecuteGadgetLuaRsp_default_instance_;
class ExecuteGroupTriggerReq;
class ExecuteGroupTriggerReqDefaultTypeInternal;
extern ExecuteGroupTriggerReqDefaultTypeInternal _ExecuteGroupTriggerReq_default_instance_;
class ExecuteGroupTriggerRsp;
class ExecuteGroupTriggerRspDefaultTypeInternal;
extern ExecuteGroupTriggerRspDefaultTypeInternal _ExecuteGroupTriggerRsp_default_instance_;
class ExitSceneWeatherAreaNotify;
class ExitSceneWeatherAreaNotifyDefaultTypeInternal;
extern ExitSceneWeatherAreaNotifyDefaultTypeInternal _ExitSceneWeatherAreaNotify_default_instance_;
class ExitTransPointRegionNotify;
class ExitTransPointRegionNotifyDefaultTypeInternal;
extern ExitTransPointRegionNotifyDefaultTypeInternal _ExitTransPointRegionNotify_default_instance_;
class ForceDragAvatarNotify;
class ForceDragAvatarNotifyDefaultTypeInternal;
extern ForceDragAvatarNotifyDefaultTypeInternal _ForceDragAvatarNotify_default_instance_;
class ForceDragBackTransferNotify;
class ForceDragBackTransferNotifyDefaultTypeInternal;
extern ForceDragBackTransferNotifyDefaultTypeInternal _ForceDragBackTransferNotify_default_instance_;
class GetAreaExplorePointReq;
class GetAreaExplorePointReqDefaultTypeInternal;
extern GetAreaExplorePointReqDefaultTypeInternal _GetAreaExplorePointReq_default_instance_;
class GetAreaExplorePointRsp;
class GetAreaExplorePointRspDefaultTypeInternal;
extern GetAreaExplorePointRspDefaultTypeInternal _GetAreaExplorePointRsp_default_instance_;
class GetDungeonEntryExploreConditionReq;
class GetDungeonEntryExploreConditionReqDefaultTypeInternal;
extern GetDungeonEntryExploreConditionReqDefaultTypeInternal _GetDungeonEntryExploreConditionReq_default_instance_;
class GetDungeonEntryExploreConditionRsp;
class GetDungeonEntryExploreConditionRspDefaultTypeInternal;
extern GetDungeonEntryExploreConditionRspDefaultTypeInternal _GetDungeonEntryExploreConditionRsp_default_instance_;
class GetMapAreaReq;
class GetMapAreaReqDefaultTypeInternal;
extern GetMapAreaReqDefaultTypeInternal _GetMapAreaReq_default_instance_;
class GetMapAreaRsp;
class GetMapAreaRspDefaultTypeInternal;
extern GetMapAreaRspDefaultTypeInternal _GetMapAreaRsp_default_instance_;
class GetMapMarkTipsReq;
class GetMapMarkTipsReqDefaultTypeInternal;
extern GetMapMarkTipsReqDefaultTypeInternal _GetMapMarkTipsReq_default_instance_;
class GetMapMarkTipsRsp;
class GetMapMarkTipsRspDefaultTypeInternal;
extern GetMapMarkTipsRspDefaultTypeInternal _GetMapMarkTipsRsp_default_instance_;
class GetSceneAreaReq;
class GetSceneAreaReqDefaultTypeInternal;
extern GetSceneAreaReqDefaultTypeInternal _GetSceneAreaReq_default_instance_;
class GetSceneAreaRsp;
class GetSceneAreaRspDefaultTypeInternal;
extern GetSceneAreaRspDefaultTypeInternal _GetSceneAreaRsp_default_instance_;
class GetScenePerformanceReq;
class GetScenePerformanceReqDefaultTypeInternal;
extern GetScenePerformanceReqDefaultTypeInternal _GetScenePerformanceReq_default_instance_;
class GetScenePerformanceRsp;
class GetScenePerformanceRspDefaultTypeInternal;
extern GetScenePerformanceRspDefaultTypeInternal _GetScenePerformanceRsp_default_instance_;
class GetScenePointReq;
class GetScenePointReqDefaultTypeInternal;
extern GetScenePointReqDefaultTypeInternal _GetScenePointReq_default_instance_;
class GetScenePointRsp;
class GetScenePointRspDefaultTypeInternal;
extern GetScenePointRspDefaultTypeInternal _GetScenePointRsp_default_instance_;
class GetWorldMpInfoReq;
class GetWorldMpInfoReqDefaultTypeInternal;
extern GetWorldMpInfoReqDefaultTypeInternal _GetWorldMpInfoReq_default_instance_;
class GetWorldMpInfoRsp;
class GetWorldMpInfoRspDefaultTypeInternal;
extern GetWorldMpInfoRspDefaultTypeInternal _GetWorldMpInfoRsp_default_instance_;
class GroupSuiteNotify;
class GroupSuiteNotifyDefaultTypeInternal;
extern GroupSuiteNotifyDefaultTypeInternal _GroupSuiteNotify_default_instance_;
class GroupSuiteNotify_GroupMapEntry;
class GroupSuiteNotify_GroupMapEntryDefaultTypeInternal;
extern GroupSuiteNotify_GroupMapEntryDefaultTypeInternal _GroupSuiteNotify_GroupMapEntry_default_instance_;
class GroupUnloadNotify;
class GroupUnloadNotifyDefaultTypeInternal;
extern GroupUnloadNotifyDefaultTypeInternal _GroupUnloadNotify_default_instance_;
class GuestBeginEnterSceneNotify;
class GuestBeginEnterSceneNotifyDefaultTypeInternal;
extern GuestBeginEnterSceneNotifyDefaultTypeInternal _GuestBeginEnterSceneNotify_default_instance_;
class GuestPostEnterSceneNotify;
class GuestPostEnterSceneNotifyDefaultTypeInternal;
extern GuestPostEnterSceneNotifyDefaultTypeInternal _GuestPostEnterSceneNotify_default_instance_;
class HitClientTrivialNotify;
class HitClientTrivialNotifyDefaultTypeInternal;
extern HitClientTrivialNotifyDefaultTypeInternal _HitClientTrivialNotify_default_instance_;
class HitTreeInfo;
class HitTreeInfoDefaultTypeInternal;
extern HitTreeInfoDefaultTypeInternal _HitTreeInfo_default_instance_;
class HitTreeNotify;
class HitTreeNotifyDefaultTypeInternal;
extern HitTreeNotifyDefaultTypeInternal _HitTreeNotify_default_instance_;
class JoinPlayerFailNotify;
class JoinPlayerFailNotifyDefaultTypeInternal;
extern JoinPlayerFailNotifyDefaultTypeInternal _JoinPlayerFailNotify_default_instance_;
class JoinPlayerSceneReq;
class JoinPlayerSceneReqDefaultTypeInternal;
extern JoinPlayerSceneReqDefaultTypeInternal _JoinPlayerSceneReq_default_instance_;
class JoinPlayerSceneRsp;
class JoinPlayerSceneRspDefaultTypeInternal;
extern JoinPlayerSceneRspDefaultTypeInternal _JoinPlayerSceneRsp_default_instance_;
class LeaveSceneReq;
class LeaveSceneReqDefaultTypeInternal;
extern LeaveSceneReqDefaultTypeInternal _LeaveSceneReq_default_instance_;
class LeaveSceneRsp;
class LeaveSceneRspDefaultTypeInternal;
extern LeaveSceneRspDefaultTypeInternal _LeaveSceneRsp_default_instance_;
class LeaveWorldNotify;
class LeaveWorldNotifyDefaultTypeInternal;
extern LeaveWorldNotifyDefaultTypeInternal _LeaveWorldNotify_default_instance_;
class LevelTagDataNotify;
class LevelTagDataNotifyDefaultTypeInternal;
extern LevelTagDataNotifyDefaultTypeInternal _LevelTagDataNotify_default_instance_;
class LevelupCityReq;
class LevelupCityReqDefaultTypeInternal;
extern LevelupCityReqDefaultTypeInternal _LevelupCityReq_default_instance_;
class LevelupCityRsp;
class LevelupCityRspDefaultTypeInternal;
extern LevelupCityRspDefaultTypeInternal _LevelupCityRsp_default_instance_;
class LuaEnvironmentEffectNotify;
class LuaEnvironmentEffectNotifyDefaultTypeInternal;
extern LuaEnvironmentEffectNotifyDefaultTypeInternal _LuaEnvironmentEffectNotify_default_instance_;
class MPLevelEntityInfo;
class MPLevelEntityInfoDefaultTypeInternal;
extern MPLevelEntityInfoDefaultTypeInternal _MPLevelEntityInfo_default_instance_;
class MapAreaChangeNotify;
class MapAreaChangeNotifyDefaultTypeInternal;
extern MapAreaChangeNotifyDefaultTypeInternal _MapAreaChangeNotify_default_instance_;
class MarkEntityInMinMapNotify;
class MarkEntityInMinMapNotifyDefaultTypeInternal;
extern MarkEntityInMinMapNotifyDefaultTypeInternal _MarkEntityInMinMapNotify_default_instance_;
class MarkMapReq;
class MarkMapReqDefaultTypeInternal;
extern MarkMapReqDefaultTypeInternal _MarkMapReq_default_instance_;
class MarkMapRsp;
class MarkMapRspDefaultTypeInternal;
extern MarkMapRspDefaultTypeInternal _MarkMapRsp_default_instance_;
class MonsterAIConfigHashNotify;
class MonsterAIConfigHashNotifyDefaultTypeInternal;
extern MonsterAIConfigHashNotifyDefaultTypeInternal _MonsterAIConfigHashNotify_default_instance_;
class MonsterPointArrayRouteUpdateNotify;
class MonsterPointArrayRouteUpdateNotifyDefaultTypeInternal;
extern MonsterPointArrayRouteUpdateNotifyDefaultTypeInternal _MonsterPointArrayRouteUpdateNotify_default_instance_;
class PersonalSceneJumpReq;
class PersonalSceneJumpReqDefaultTypeInternal;
extern PersonalSceneJumpReqDefaultTypeInternal _PersonalSceneJumpReq_default_instance_;
class PersonalSceneJumpRsp;
class PersonalSceneJumpRspDefaultTypeInternal;
extern PersonalSceneJumpRspDefaultTypeInternal _PersonalSceneJumpRsp_default_instance_;
class PlatformChangeRouteNotify;
class PlatformChangeRouteNotifyDefaultTypeInternal;
extern PlatformChangeRouteNotifyDefaultTypeInternal _PlatformChangeRouteNotify_default_instance_;
class PlatformStartRouteNotify;
class PlatformStartRouteNotifyDefaultTypeInternal;
extern PlatformStartRouteNotifyDefaultTypeInternal _PlatformStartRouteNotify_default_instance_;
class PlatformStopRouteNotify;
class PlatformStopRouteNotifyDefaultTypeInternal;
extern PlatformStopRouteNotifyDefaultTypeInternal _PlatformStopRouteNotify_default_instance_;
class PlayerChatCDNotify;
class PlayerChatCDNotifyDefaultTypeInternal;
extern PlayerChatCDNotifyDefaultTypeInternal _PlayerChatCDNotify_default_instance_;
class PlayerChatNotify;
class PlayerChatNotifyDefaultTypeInternal;
extern PlayerChatNotifyDefaultTypeInternal _PlayerChatNotify_default_instance_;
class PlayerChatReq;
class PlayerChatReqDefaultTypeInternal;
extern PlayerChatReqDefaultTypeInternal _PlayerChatReq_default_instance_;
class PlayerChatRsp;
class PlayerChatRspDefaultTypeInternal;
extern PlayerChatRspDefaultTypeInternal _PlayerChatRsp_default_instance_;
class PlayerEnterSceneInfoNotify;
class PlayerEnterSceneInfoNotifyDefaultTypeInternal;
extern PlayerEnterSceneInfoNotifyDefaultTypeInternal _PlayerEnterSceneInfoNotify_default_instance_;
class PlayerEnterSceneNotify;
class PlayerEnterSceneNotifyDefaultTypeInternal;
extern PlayerEnterSceneNotifyDefaultTypeInternal _PlayerEnterSceneNotify_default_instance_;
class PlayerEyePointStateNotify;
class PlayerEyePointStateNotifyDefaultTypeInternal;
extern PlayerEyePointStateNotifyDefaultTypeInternal _PlayerEyePointStateNotify_default_instance_;
class PlayerLocationInfo;
class PlayerLocationInfoDefaultTypeInternal;
extern PlayerLocationInfoDefaultTypeInternal _PlayerLocationInfo_default_instance_;
class PlayerWorldLocationInfo;
class PlayerWorldLocationInfoDefaultTypeInternal;
extern PlayerWorldLocationInfoDefaultTypeInternal _PlayerWorldLocationInfo_default_instance_;
class PlayerWorldSceneInfo;
class PlayerWorldSceneInfoDefaultTypeInternal;
extern PlayerWorldSceneInfoDefaultTypeInternal _PlayerWorldSceneInfo_default_instance_;
class PlayerWorldSceneInfoListNotify;
class PlayerWorldSceneInfoListNotifyDefaultTypeInternal;
extern PlayerWorldSceneInfoListNotifyDefaultTypeInternal _PlayerWorldSceneInfoListNotify_default_instance_;
class PolygonRegionSize;
class PolygonRegionSizeDefaultTypeInternal;
extern PolygonRegionSizeDefaultTypeInternal _PolygonRegionSize_default_instance_;
class PostEnterSceneReq;
class PostEnterSceneReqDefaultTypeInternal;
extern PostEnterSceneReqDefaultTypeInternal _PostEnterSceneReq_default_instance_;
class PostEnterSceneRsp;
class PostEnterSceneRspDefaultTypeInternal;
extern PostEnterSceneRspDefaultTypeInternal _PostEnterSceneRsp_default_instance_;
class RefreshEntityAuthNotify;
class RefreshEntityAuthNotifyDefaultTypeInternal;
extern RefreshEntityAuthNotifyDefaultTypeInternal _RefreshEntityAuthNotify_default_instance_;
class RoutePointChangeInfo;
class RoutePointChangeInfoDefaultTypeInternal;
extern RoutePointChangeInfoDefaultTypeInternal _RoutePointChangeInfo_default_instance_;
class SceneAreaUnlockNotify;
class SceneAreaUnlockNotifyDefaultTypeInternal;
extern SceneAreaUnlockNotifyDefaultTypeInternal _SceneAreaUnlockNotify_default_instance_;
class SceneAreaWeatherNotify;
class SceneAreaWeatherNotifyDefaultTypeInternal;
extern SceneAreaWeatherNotifyDefaultTypeInternal _SceneAreaWeatherNotify_default_instance_;
class SceneAreaWeatherNotify_WeatherValueMapEntry;
class SceneAreaWeatherNotify_WeatherValueMapEntryDefaultTypeInternal;
extern SceneAreaWeatherNotify_WeatherValueMapEntryDefaultTypeInternal _SceneAreaWeatherNotify_WeatherValueMapEntry_default_instance_;
class SceneAudioNotify;
class SceneAudioNotifyDefaultTypeInternal;
extern SceneAudioNotifyDefaultTypeInternal _SceneAudioNotify_default_instance_;
class SceneAvatarStaminaStepReq;
class SceneAvatarStaminaStepReqDefaultTypeInternal;
extern SceneAvatarStaminaStepReqDefaultTypeInternal _SceneAvatarStaminaStepReq_default_instance_;
class SceneAvatarStaminaStepRsp;
class SceneAvatarStaminaStepRspDefaultTypeInternal;
extern SceneAvatarStaminaStepRspDefaultTypeInternal _SceneAvatarStaminaStepRsp_default_instance_;
class SceneCreateEntityReq;
class SceneCreateEntityReqDefaultTypeInternal;
extern SceneCreateEntityReqDefaultTypeInternal _SceneCreateEntityReq_default_instance_;
class SceneCreateEntityRsp;
class SceneCreateEntityRspDefaultTypeInternal;
extern SceneCreateEntityRspDefaultTypeInternal _SceneCreateEntityRsp_default_instance_;
class SceneDataNotify;
class SceneDataNotifyDefaultTypeInternal;
extern SceneDataNotifyDefaultTypeInternal _SceneDataNotify_default_instance_;
class SceneDestroyEntityReq;
class SceneDestroyEntityReqDefaultTypeInternal;
extern SceneDestroyEntityReqDefaultTypeInternal _SceneDestroyEntityReq_default_instance_;
class SceneDestroyEntityRsp;
class SceneDestroyEntityRspDefaultTypeInternal;
extern SceneDestroyEntityRspDefaultTypeInternal _SceneDestroyEntityRsp_default_instance_;
class SceneEntitiesMoveCombineNotify;
class SceneEntitiesMoveCombineNotifyDefaultTypeInternal;
extern SceneEntitiesMoveCombineNotifyDefaultTypeInternal _SceneEntitiesMoveCombineNotify_default_instance_;
class SceneEntitiesMovesReq;
class SceneEntitiesMovesReqDefaultTypeInternal;
extern SceneEntitiesMovesReqDefaultTypeInternal _SceneEntitiesMovesReq_default_instance_;
class SceneEntitiesMovesRsp;
class SceneEntitiesMovesRspDefaultTypeInternal;
extern SceneEntitiesMovesRspDefaultTypeInternal _SceneEntitiesMovesRsp_default_instance_;
class SceneEntityAppearNotify;
class SceneEntityAppearNotifyDefaultTypeInternal;
extern SceneEntityAppearNotifyDefaultTypeInternal _SceneEntityAppearNotify_default_instance_;
class SceneEntityDisappearNotify;
class SceneEntityDisappearNotifyDefaultTypeInternal;
extern SceneEntityDisappearNotifyDefaultTypeInternal _SceneEntityDisappearNotify_default_instance_;
class SceneEntityDrownReq;
class SceneEntityDrownReqDefaultTypeInternal;
extern SceneEntityDrownReqDefaultTypeInternal _SceneEntityDrownReq_default_instance_;
class SceneEntityDrownRsp;
class SceneEntityDrownRspDefaultTypeInternal;
extern SceneEntityDrownRspDefaultTypeInternal _SceneEntityDrownRsp_default_instance_;
class SceneEntityMoveNotify;
class SceneEntityMoveNotifyDefaultTypeInternal;
extern SceneEntityMoveNotifyDefaultTypeInternal _SceneEntityMoveNotify_default_instance_;
class SceneEntityMoveReq;
class SceneEntityMoveReqDefaultTypeInternal;
extern SceneEntityMoveReqDefaultTypeInternal _SceneEntityMoveReq_default_instance_;
class SceneEntityMoveRsp;
class SceneEntityMoveRspDefaultTypeInternal;
extern SceneEntityMoveRspDefaultTypeInternal _SceneEntityMoveRsp_default_instance_;
class SceneEntityUpdateNotify;
class SceneEntityUpdateNotifyDefaultTypeInternal;
extern SceneEntityUpdateNotifyDefaultTypeInternal _SceneEntityUpdateNotify_default_instance_;
class SceneForceLockNotify;
class SceneForceLockNotifyDefaultTypeInternal;
extern SceneForceLockNotifyDefaultTypeInternal _SceneForceLockNotify_default_instance_;
class SceneForceUnlockNotify;
class SceneForceUnlockNotifyDefaultTypeInternal;
extern SceneForceUnlockNotifyDefaultTypeInternal _SceneForceUnlockNotify_default_instance_;
class SceneInitFinishReq;
class SceneInitFinishReqDefaultTypeInternal;
extern SceneInitFinishReqDefaultTypeInternal _SceneInitFinishReq_default_instance_;
class SceneInitFinishRsp;
class SceneInitFinishRspDefaultTypeInternal;
extern SceneInitFinishRspDefaultTypeInternal _SceneInitFinishRsp_default_instance_;
class SceneKickPlayerNotify;
class SceneKickPlayerNotifyDefaultTypeInternal;
extern SceneKickPlayerNotifyDefaultTypeInternal _SceneKickPlayerNotify_default_instance_;
class SceneKickPlayerReq;
class SceneKickPlayerReqDefaultTypeInternal;
extern SceneKickPlayerReqDefaultTypeInternal _SceneKickPlayerReq_default_instance_;
class SceneKickPlayerRsp;
class SceneKickPlayerRspDefaultTypeInternal;
extern SceneKickPlayerRspDefaultTypeInternal _SceneKickPlayerRsp_default_instance_;
class ScenePlayerBackgroundAvatarRefreshNotify;
class ScenePlayerBackgroundAvatarRefreshNotifyDefaultTypeInternal;
extern ScenePlayerBackgroundAvatarRefreshNotifyDefaultTypeInternal _ScenePlayerBackgroundAvatarRefreshNotify_default_instance_;
class ScenePlayerInfo;
class ScenePlayerInfoDefaultTypeInternal;
extern ScenePlayerInfoDefaultTypeInternal _ScenePlayerInfo_default_instance_;
class ScenePlayerInfoNotify;
class ScenePlayerInfoNotifyDefaultTypeInternal;
extern ScenePlayerInfoNotifyDefaultTypeInternal _ScenePlayerInfoNotify_default_instance_;
class ScenePlayerLocationNotify;
class ScenePlayerLocationNotifyDefaultTypeInternal;
extern ScenePlayerLocationNotifyDefaultTypeInternal _ScenePlayerLocationNotify_default_instance_;
class ScenePlayerSoundNotify;
class ScenePlayerSoundNotifyDefaultTypeInternal;
extern ScenePlayerSoundNotifyDefaultTypeInternal _ScenePlayerSoundNotify_default_instance_;
class ScenePointUnlockNotify;
class ScenePointUnlockNotifyDefaultTypeInternal;
extern ScenePointUnlockNotifyDefaultTypeInternal _ScenePointUnlockNotify_default_instance_;
class SceneRouteChangeInfo;
class SceneRouteChangeInfoDefaultTypeInternal;
extern SceneRouteChangeInfoDefaultTypeInternal _SceneRouteChangeInfo_default_instance_;
class SceneRouteChangeNotify;
class SceneRouteChangeNotifyDefaultTypeInternal;
extern SceneRouteChangeNotifyDefaultTypeInternal _SceneRouteChangeNotify_default_instance_;
class SceneTimeNotify;
class SceneTimeNotifyDefaultTypeInternal;
extern SceneTimeNotifyDefaultTypeInternal _SceneTimeNotify_default_instance_;
class SceneTransToPointReq;
class SceneTransToPointReqDefaultTypeInternal;
extern SceneTransToPointReqDefaultTypeInternal _SceneTransToPointReq_default_instance_;
class SceneTransToPointRsp;
class SceneTransToPointRspDefaultTypeInternal;
extern SceneTransToPointRspDefaultTypeInternal _SceneTransToPointRsp_default_instance_;
class SceneWeatherForcastReq;
class SceneWeatherForcastReqDefaultTypeInternal;
extern SceneWeatherForcastReqDefaultTypeInternal _SceneWeatherForcastReq_default_instance_;
class SceneWeatherForcastRsp;
class SceneWeatherForcastRspDefaultTypeInternal;
extern SceneWeatherForcastRspDefaultTypeInternal _SceneWeatherForcastRsp_default_instance_;
class SealBattleBeginNotify;
class SealBattleBeginNotifyDefaultTypeInternal;
extern SealBattleBeginNotifyDefaultTypeInternal _SealBattleBeginNotify_default_instance_;
class SealBattleEndNotify;
class SealBattleEndNotifyDefaultTypeInternal;
extern SealBattleEndNotifyDefaultTypeInternal _SealBattleEndNotify_default_instance_;
class SealBattleProgressNotify;
class SealBattleProgressNotifyDefaultTypeInternal;
extern SealBattleProgressNotifyDefaultTypeInternal _SealBattleProgressNotify_default_instance_;
class SeeMonsterReq;
class SeeMonsterReqDefaultTypeInternal;
extern SeeMonsterReqDefaultTypeInternal _SeeMonsterReq_default_instance_;
class SeeMonsterRsp;
class SeeMonsterRspDefaultTypeInternal;
extern SeeMonsterRspDefaultTypeInternal _SeeMonsterRsp_default_instance_;
class SetEntityClientDataNotify;
class SetEntityClientDataNotifyDefaultTypeInternal;
extern SetEntityClientDataNotifyDefaultTypeInternal _SetEntityClientDataNotify_default_instance_;
class SetSceneWeatherAreaReq;
class SetSceneWeatherAreaReqDefaultTypeInternal;
extern SetSceneWeatherAreaReqDefaultTypeInternal _SetSceneWeatherAreaReq_default_instance_;
class SetSceneWeatherAreaReq_WeatherValueMapEntry;
class SetSceneWeatherAreaReq_WeatherValueMapEntryDefaultTypeInternal;
extern SetSceneWeatherAreaReq_WeatherValueMapEntryDefaultTypeInternal _SetSceneWeatherAreaReq_WeatherValueMapEntry_default_instance_;
class SetSceneWeatherAreaRsp;
class SetSceneWeatherAreaRspDefaultTypeInternal;
extern SetSceneWeatherAreaRspDefaultTypeInternal _SetSceneWeatherAreaRsp_default_instance_;
class ShowClientGuideNotify;
class ShowClientGuideNotifyDefaultTypeInternal;
extern ShowClientGuideNotifyDefaultTypeInternal _ShowClientGuideNotify_default_instance_;
class ShowClientTutorialNotify;
class ShowClientTutorialNotifyDefaultTypeInternal;
extern ShowClientTutorialNotifyDefaultTypeInternal _ShowClientTutorialNotify_default_instance_;
class ShowCommonTipsNotify;
class ShowCommonTipsNotifyDefaultTypeInternal;
extern ShowCommonTipsNotifyDefaultTypeInternal _ShowCommonTipsNotify_default_instance_;
class ShowTemplateReminderNotify;
class ShowTemplateReminderNotifyDefaultTypeInternal;
extern ShowTemplateReminderNotifyDefaultTypeInternal _ShowTemplateReminderNotify_default_instance_;
class StopReminderNotify;
class StopReminderNotifyDefaultTypeInternal;
extern StopReminderNotifyDefaultTypeInternal _StopReminderNotify_default_instance_;
class SyncScenePlayTeamEntityNotify;
class SyncScenePlayTeamEntityNotifyDefaultTypeInternal;
extern SyncScenePlayTeamEntityNotifyDefaultTypeInternal _SyncScenePlayTeamEntityNotify_default_instance_;
class TeamEnterSceneInfo;
class TeamEnterSceneInfoDefaultTypeInternal;
extern TeamEnterSceneInfoDefaultTypeInternal _TeamEnterSceneInfo_default_instance_;
class UnfreezeGroupLimitNotify;
class UnfreezeGroupLimitNotifyDefaultTypeInternal;
extern UnfreezeGroupLimitNotifyDefaultTypeInternal _UnfreezeGroupLimitNotify_default_instance_;
class UnlockTransPointReq;
class UnlockTransPointReqDefaultTypeInternal;
extern UnlockTransPointReqDefaultTypeInternal _UnlockTransPointReq_default_instance_;
class UnlockTransPointRsp;
class UnlockTransPointRspDefaultTypeInternal;
extern UnlockTransPointRspDefaultTypeInternal _UnlockTransPointRsp_default_instance_;
class UnmarkEntityInMinMapNotify;
class UnmarkEntityInMinMapNotifyDefaultTypeInternal;
extern UnmarkEntityInMinMapNotifyDefaultTypeInternal _UnmarkEntityInMinMapNotify_default_instance_;
class VehicleLocationInfo;
class VehicleLocationInfoDefaultTypeInternal;
extern VehicleLocationInfoDefaultTypeInternal _VehicleLocationInfo_default_instance_;
class WidgetQuickHitTreeReq;
class WidgetQuickHitTreeReqDefaultTypeInternal;
extern WidgetQuickHitTreeReqDefaultTypeInternal _WidgetQuickHitTreeReq_default_instance_;
class WidgetQuickHitTreeRsp;
class WidgetQuickHitTreeRspDefaultTypeInternal;
extern WidgetQuickHitTreeRspDefaultTypeInternal _WidgetQuickHitTreeRsp_default_instance_;
class WorldChestOpenNotify;
class WorldChestOpenNotifyDefaultTypeInternal;
extern WorldChestOpenNotifyDefaultTypeInternal _WorldChestOpenNotify_default_instance_;
class WorldDataNotify;
class WorldDataNotifyDefaultTypeInternal;
extern WorldDataNotifyDefaultTypeInternal _WorldDataNotify_default_instance_;
class WorldDataNotify_WorldPropMapEntry;
class WorldDataNotify_WorldPropMapEntryDefaultTypeInternal;
extern WorldDataNotify_WorldPropMapEntryDefaultTypeInternal _WorldDataNotify_WorldPropMapEntry_default_instance_;
class WorldPlayerDieNotify;
class WorldPlayerDieNotifyDefaultTypeInternal;
extern WorldPlayerDieNotifyDefaultTypeInternal _WorldPlayerDieNotify_default_instance_;
class WorldPlayerInfoNotify;
class WorldPlayerInfoNotifyDefaultTypeInternal;
extern WorldPlayerInfoNotifyDefaultTypeInternal _WorldPlayerInfoNotify_default_instance_;
class WorldPlayerLocationNotify;
class WorldPlayerLocationNotifyDefaultTypeInternal;
extern WorldPlayerLocationNotifyDefaultTypeInternal _WorldPlayerLocationNotify_default_instance_;
class WorldPlayerReviveReq;
class WorldPlayerReviveReqDefaultTypeInternal;
extern WorldPlayerReviveReqDefaultTypeInternal _WorldPlayerReviveReq_default_instance_;
class WorldPlayerReviveRsp;
class WorldPlayerReviveRspDefaultTypeInternal;
extern WorldPlayerReviveRspDefaultTypeInternal _WorldPlayerReviveRsp_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5fscene_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5fscene_2eproto

enum EntityJumpNotify_Type {
  EntityJumpNotify_Type_NULL_ = 0,
  EntityJumpNotify_Type_ACTIVE = 1,
  EntityJumpNotify_Type_PASSIVE = 2,
  EntityJumpNotify_Type_EntityJumpNotify_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EntityJumpNotify_Type_EntityJumpNotify_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EntityJumpNotify_Type_IsValid(int value);
const EntityJumpNotify_Type EntityJumpNotify_Type_Type_MIN = EntityJumpNotify_Type_NULL_;
const EntityJumpNotify_Type EntityJumpNotify_Type_Type_MAX = EntityJumpNotify_Type_PASSIVE;
const int EntityJumpNotify_Type_Type_ARRAYSIZE = EntityJumpNotify_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* EntityJumpNotify_Type_descriptor();
inline const ::std::string& EntityJumpNotify_Type_Name(EntityJumpNotify_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    EntityJumpNotify_Type_descriptor(), value);
}
inline bool EntityJumpNotify_Type_Parse(
    const ::std::string& name, EntityJumpNotify_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EntityJumpNotify_Type>(
    EntityJumpNotify_Type_descriptor(), name, value);
}
enum BeginCameraSceneLookNotify_KeepRotType {
  BeginCameraSceneLookNotify_KeepRotType_KEEP_ROT_X = 0,
  BeginCameraSceneLookNotify_KeepRotType_KEEP_ROT_XY = 1,
  BeginCameraSceneLookNotify_KeepRotType_BeginCameraSceneLookNotify_KeepRotType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BeginCameraSceneLookNotify_KeepRotType_BeginCameraSceneLookNotify_KeepRotType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BeginCameraSceneLookNotify_KeepRotType_IsValid(int value);
const BeginCameraSceneLookNotify_KeepRotType BeginCameraSceneLookNotify_KeepRotType_KeepRotType_MIN = BeginCameraSceneLookNotify_KeepRotType_KEEP_ROT_X;
const BeginCameraSceneLookNotify_KeepRotType BeginCameraSceneLookNotify_KeepRotType_KeepRotType_MAX = BeginCameraSceneLookNotify_KeepRotType_KEEP_ROT_XY;
const int BeginCameraSceneLookNotify_KeepRotType_KeepRotType_ARRAYSIZE = BeginCameraSceneLookNotify_KeepRotType_KeepRotType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BeginCameraSceneLookNotify_KeepRotType_descriptor();
inline const ::std::string& BeginCameraSceneLookNotify_KeepRotType_Name(BeginCameraSceneLookNotify_KeepRotType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BeginCameraSceneLookNotify_KeepRotType_descriptor(), value);
}
inline bool BeginCameraSceneLookNotify_KeepRotType_Parse(
    const ::std::string& name, BeginCameraSceneLookNotify_KeepRotType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BeginCameraSceneLookNotify_KeepRotType>(
    BeginCameraSceneLookNotify_KeepRotType_descriptor(), name, value);
}
enum ScenePlayerSoundNotify_PlaySoundType {
  ScenePlayerSoundNotify_PlaySoundType_PLAY_SOUND_NONE = 0,
  ScenePlayerSoundNotify_PlaySoundType_PLAY_SOUND_START = 1,
  ScenePlayerSoundNotify_PlaySoundType_PLAY_SOUND_STOP = 2,
  ScenePlayerSoundNotify_PlaySoundType_ScenePlayerSoundNotify_PlaySoundType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ScenePlayerSoundNotify_PlaySoundType_ScenePlayerSoundNotify_PlaySoundType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ScenePlayerSoundNotify_PlaySoundType_IsValid(int value);
const ScenePlayerSoundNotify_PlaySoundType ScenePlayerSoundNotify_PlaySoundType_PlaySoundType_MIN = ScenePlayerSoundNotify_PlaySoundType_PLAY_SOUND_NONE;
const ScenePlayerSoundNotify_PlaySoundType ScenePlayerSoundNotify_PlaySoundType_PlaySoundType_MAX = ScenePlayerSoundNotify_PlaySoundType_PLAY_SOUND_STOP;
const int ScenePlayerSoundNotify_PlaySoundType_PlaySoundType_ARRAYSIZE = ScenePlayerSoundNotify_PlaySoundType_PlaySoundType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ScenePlayerSoundNotify_PlaySoundType_descriptor();
inline const ::std::string& ScenePlayerSoundNotify_PlaySoundType_Name(ScenePlayerSoundNotify_PlaySoundType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ScenePlayerSoundNotify_PlaySoundType_descriptor(), value);
}
inline bool ScenePlayerSoundNotify_PlaySoundType_Parse(
    const ::std::string& name, ScenePlayerSoundNotify_PlaySoundType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ScenePlayerSoundNotify_PlaySoundType>(
    ScenePlayerSoundNotify_PlaySoundType_descriptor(), name, value);
}
enum MarkMapReq_Operation {
  MarkMapReq_Operation_ADD = 0,
  MarkMapReq_Operation_MOD = 1,
  MarkMapReq_Operation_DEL = 2,
  MarkMapReq_Operation_GET = 3,
  MarkMapReq_Operation_MarkMapReq_Operation_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MarkMapReq_Operation_MarkMapReq_Operation_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MarkMapReq_Operation_IsValid(int value);
const MarkMapReq_Operation MarkMapReq_Operation_Operation_MIN = MarkMapReq_Operation_ADD;
const MarkMapReq_Operation MarkMapReq_Operation_Operation_MAX = MarkMapReq_Operation_GET;
const int MarkMapReq_Operation_Operation_ARRAYSIZE = MarkMapReq_Operation_Operation_MAX + 1;

const ::google::protobuf::EnumDescriptor* MarkMapReq_Operation_descriptor();
inline const ::std::string& MarkMapReq_Operation_Name(MarkMapReq_Operation value) {
  return ::google::protobuf::internal::NameOfEnum(
    MarkMapReq_Operation_descriptor(), value);
}
inline bool MarkMapReq_Operation_Parse(
    const ::std::string& name, MarkMapReq_Operation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MarkMapReq_Operation>(
    MarkMapReq_Operation_descriptor(), name, value);
}
enum WorldDataNotify_DataType {
  WorldDataNotify_DataType_DATA_NONE = 0,
  WorldDataNotify_DataType_WORLD_LEVEL = 1,
  WorldDataNotify_DataType_IS_IN_MP_MODE = 2,
  WorldDataNotify_DataType_WorldDataNotify_DataType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  WorldDataNotify_DataType_WorldDataNotify_DataType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool WorldDataNotify_DataType_IsValid(int value);
const WorldDataNotify_DataType WorldDataNotify_DataType_DataType_MIN = WorldDataNotify_DataType_DATA_NONE;
const WorldDataNotify_DataType WorldDataNotify_DataType_DataType_MAX = WorldDataNotify_DataType_IS_IN_MP_MODE;
const int WorldDataNotify_DataType_DataType_ARRAYSIZE = WorldDataNotify_DataType_DataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorldDataNotify_DataType_descriptor();
inline const ::std::string& WorldDataNotify_DataType_Name(WorldDataNotify_DataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorldDataNotify_DataType_descriptor(), value);
}
inline bool WorldDataNotify_DataType_Parse(
    const ::std::string& name, WorldDataNotify_DataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorldDataNotify_DataType>(
    WorldDataNotify_DataType_descriptor(), name, value);
}
enum ChatInfo_SystemHintType {
  ChatInfo_SystemHintType_CHAT_NONE = 0,
  ChatInfo_SystemHintType_CHAT_ENTER_WORLD = 1,
  ChatInfo_SystemHintType_CHAT_LEAVE_WORLD = 2,
  ChatInfo_SystemHintType_ChatInfo_SystemHintType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChatInfo_SystemHintType_ChatInfo_SystemHintType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChatInfo_SystemHintType_IsValid(int value);
const ChatInfo_SystemHintType ChatInfo_SystemHintType_SystemHintType_MIN = ChatInfo_SystemHintType_CHAT_NONE;
const ChatInfo_SystemHintType ChatInfo_SystemHintType_SystemHintType_MAX = ChatInfo_SystemHintType_CHAT_LEAVE_WORLD;
const int ChatInfo_SystemHintType_SystemHintType_ARRAYSIZE = ChatInfo_SystemHintType_SystemHintType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChatInfo_SystemHintType_descriptor();
inline const ::std::string& ChatInfo_SystemHintType_Name(ChatInfo_SystemHintType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChatInfo_SystemHintType_descriptor(), value);
}
inline bool ChatInfo_SystemHintType_Parse(
    const ::std::string& name, ChatInfo_SystemHintType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChatInfo_SystemHintType>(
    ChatInfo_SystemHintType_descriptor(), name, value);
}
enum BeginCameraSceneLookWithTemplateNotify_FollowType {
  BeginCameraSceneLookWithTemplateNotify_FollowType_FOLLOW_TYPE_INIT_FOLLOW_POS = 0,
  BeginCameraSceneLookWithTemplateNotify_FollowType_FOLLOW_TYPE_SET_FOLLOW_POS = 1,
  BeginCameraSceneLookWithTemplateNotify_FollowType_FOLLOW_TYPE_SET_ABS_FOLLOW_POS = 2,
  BeginCameraSceneLookWithTemplateNotify_FollowType_BeginCameraSceneLookWithTemplateNotify_FollowType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BeginCameraSceneLookWithTemplateNotify_FollowType_BeginCameraSceneLookWithTemplateNotify_FollowType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BeginCameraSceneLookWithTemplateNotify_FollowType_IsValid(int value);
const BeginCameraSceneLookWithTemplateNotify_FollowType BeginCameraSceneLookWithTemplateNotify_FollowType_FollowType_MIN = BeginCameraSceneLookWithTemplateNotify_FollowType_FOLLOW_TYPE_INIT_FOLLOW_POS;
const BeginCameraSceneLookWithTemplateNotify_FollowType BeginCameraSceneLookWithTemplateNotify_FollowType_FollowType_MAX = BeginCameraSceneLookWithTemplateNotify_FollowType_FOLLOW_TYPE_SET_ABS_FOLLOW_POS;
const int BeginCameraSceneLookWithTemplateNotify_FollowType_FollowType_ARRAYSIZE = BeginCameraSceneLookWithTemplateNotify_FollowType_FollowType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BeginCameraSceneLookWithTemplateNotify_FollowType_descriptor();
inline const ::std::string& BeginCameraSceneLookWithTemplateNotify_FollowType_Name(BeginCameraSceneLookWithTemplateNotify_FollowType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BeginCameraSceneLookWithTemplateNotify_FollowType_descriptor(), value);
}
inline bool BeginCameraSceneLookWithTemplateNotify_FollowType_Parse(
    const ::std::string& name, BeginCameraSceneLookWithTemplateNotify_FollowType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BeginCameraSceneLookWithTemplateNotify_FollowType>(
    BeginCameraSceneLookWithTemplateNotify_FollowType_descriptor(), name, value);
}
enum EnterType {
  ENTER_NONE = 0,
  ENTER_SELF = 1,
  ENTER_GOTO = 2,
  ENTER_JUMP = 3,
  ENTER_OTHER = 4,
  ENTER_BACK = 5,
  ENTER_DUNGEON = 6,
  ENTER_DUNGEON_REPLAY = 7,
  ENTER_GOTO_BY_PORTAL = 8,
  ENTER_SELF_HOME = 9,
  ENTER_OTHER_HOME = 10,
  ENTER_GOTO_RECREATE = 11,
  EnterType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EnterType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EnterType_IsValid(int value);
const EnterType EnterType_MIN = ENTER_NONE;
const EnterType EnterType_MAX = ENTER_GOTO_RECREATE;
const int EnterType_ARRAYSIZE = EnterType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnterType_descriptor();
inline const ::std::string& EnterType_Name(EnterType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnterType_descriptor(), value);
}
inline bool EnterType_Parse(
    const ::std::string& name, EnterType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnterType>(
    EnterType_descriptor(), name, value);
}
enum VisionType {
  VISION_NONE = 0,
  VISION_MEET = 1,
  VISION_REBORN = 2,
  VISION_REPLACE = 3,
  VISION_WAYPOINT_REBORN = 4,
  VISION_MISS = 5,
  VISION_DIE = 6,
  VISION_GATHER_ESCAPE = 7,
  VISION_REFRESH = 8,
  VISION_TRANSPORT = 9,
  VISION_REPLACE_DIE = 10,
  VISION_REPLACE_NO_NOTIFY = 11,
  VISION_BORN = 12,
  VISION_PICKUP = 13,
  VISION_REMOVE = 14,
  VISION_CHANGE_COSTUME = 15,
  VISION_FISH_REFRESH = 16,
  VISION_FISH_BIG_SHOCK = 17,
  VISION_FISH_QTE_SUCC = 18,
  VISION_CAPTURE_DISAPPEAR = 19,
  VisionType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VisionType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VisionType_IsValid(int value);
const VisionType VisionType_MIN = VISION_NONE;
const VisionType VisionType_MAX = VISION_CAPTURE_DISAPPEAR;
const int VisionType_ARRAYSIZE = VisionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* VisionType_descriptor();
inline const ::std::string& VisionType_Name(VisionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    VisionType_descriptor(), value);
}
inline bool VisionType_Parse(
    const ::std::string& name, VisionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VisionType>(
    VisionType_descriptor(), name, value);
}
enum CreateReason {
  CREATE_NONE = 0,
  CREATE_QUEST = 1,
  CREATE_ENERGY = 2,
  CreateReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CreateReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CreateReason_IsValid(int value);
const CreateReason CreateReason_MIN = CREATE_NONE;
const CreateReason CreateReason_MAX = CREATE_ENERGY;
const int CreateReason_ARRAYSIZE = CreateReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* CreateReason_descriptor();
inline const ::std::string& CreateReason_Name(CreateReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    CreateReason_descriptor(), value);
}
inline bool CreateReason_Parse(
    const ::std::string& name, CreateReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CreateReason>(
    CreateReason_descriptor(), name, value);
}
enum TransmitReason {
  TRANSMIT_NONE = 0,
  TRANSMIT_QUEST = 1,
  TransmitReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TransmitReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TransmitReason_IsValid(int value);
const TransmitReason TransmitReason_MIN = TRANSMIT_NONE;
const TransmitReason TransmitReason_MAX = TRANSMIT_QUEST;
const int TransmitReason_ARRAYSIZE = TransmitReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* TransmitReason_descriptor();
inline const ::std::string& TransmitReason_Name(TransmitReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    TransmitReason_descriptor(), value);
}
inline bool TransmitReason_Parse(
    const ::std::string& name, TransmitReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TransmitReason>(
    TransmitReason_descriptor(), name, value);
}
enum SealBattleType {
  SEAL_BATTLE_KEEP_ALIVE = 0,
  SEAL_BATTLE_KILL_MONSTER = 1,
  SEAL_BATTLE_ENERGY_CHARGE = 2,
  SealBattleType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SealBattleType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SealBattleType_IsValid(int value);
const SealBattleType SealBattleType_MIN = SEAL_BATTLE_KEEP_ALIVE;
const SealBattleType SealBattleType_MAX = SEAL_BATTLE_ENERGY_CHARGE;
const int SealBattleType_ARRAYSIZE = SealBattleType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SealBattleType_descriptor();
inline const ::std::string& SealBattleType_Name(SealBattleType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SealBattleType_descriptor(), value);
}
inline bool SealBattleType_Parse(
    const ::std::string& name, SealBattleType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SealBattleType>(
    SealBattleType_descriptor(), name, value);
}
enum DungeonEntryBlockReason {
  DUNGEON_ENTRY_REASON_NONE = 0,
  DUNGEON_ENTRY_REASON_LEVEL = 1,
  DUNGEON_ENTRY_REASON_QUEST = 2,
  DUNGEON_ENTRY_REASON_MULIPLE = 3,
  DungeonEntryBlockReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DungeonEntryBlockReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DungeonEntryBlockReason_IsValid(int value);
const DungeonEntryBlockReason DungeonEntryBlockReason_MIN = DUNGEON_ENTRY_REASON_NONE;
const DungeonEntryBlockReason DungeonEntryBlockReason_MAX = DUNGEON_ENTRY_REASON_MULIPLE;
const int DungeonEntryBlockReason_ARRAYSIZE = DungeonEntryBlockReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* DungeonEntryBlockReason_descriptor();
inline const ::std::string& DungeonEntryBlockReason_Name(DungeonEntryBlockReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    DungeonEntryBlockReason_descriptor(), value);
}
inline bool DungeonEntryBlockReason_Parse(
    const ::std::string& name, DungeonEntryBlockReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DungeonEntryBlockReason>(
    DungeonEntryBlockReason_descriptor(), name, value);
}
enum AreaPlayType {
  AREA_PLAY_NONE = 0,
  AREA_PLAY_CLIMATE = 1,
  AREA_PLAY_REGIONAL_PLAY = 2,
  AreaPlayType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AreaPlayType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AreaPlayType_IsValid(int value);
const AreaPlayType AreaPlayType_MIN = AREA_PLAY_NONE;
const AreaPlayType AreaPlayType_MAX = AREA_PLAY_REGIONAL_PLAY;
const int AreaPlayType_ARRAYSIZE = AreaPlayType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AreaPlayType_descriptor();
inline const ::std::string& AreaPlayType_Name(AreaPlayType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AreaPlayType_descriptor(), value);
}
inline bool AreaPlayType_Parse(
    const ::std::string& name, AreaPlayType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AreaPlayType>(
    AreaPlayType_descriptor(), name, value);
}
// ===================================================================

class PlayerEnterSceneNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerEnterSceneNotify) */ {
 public:
  PlayerEnterSceneNotify();
  virtual ~PlayerEnterSceneNotify();

  PlayerEnterSceneNotify(const PlayerEnterSceneNotify& from);

  inline PlayerEnterSceneNotify& operator=(const PlayerEnterSceneNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerEnterSceneNotify(PlayerEnterSceneNotify&& from) noexcept
    : PlayerEnterSceneNotify() {
    *this = ::std::move(from);
  }

  inline PlayerEnterSceneNotify& operator=(PlayerEnterSceneNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerEnterSceneNotify& default_instance();

  static inline const PlayerEnterSceneNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerEnterSceneNotify*>(
               &_PlayerEnterSceneNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PlayerEnterSceneNotify* other);
  friend void swap(PlayerEnterSceneNotify& a, PlayerEnterSceneNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerEnterSceneNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerEnterSceneNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerEnterSceneNotify& from);
  void MergeFrom(const PlayerEnterSceneNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerEnterSceneNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 scene_tag_id_list = 5;
  int scene_tag_id_list_size() const;
  void clear_scene_tag_id_list();
  static const int kSceneTagIdListFieldNumber = 5;
  ::google::protobuf::uint32 scene_tag_id_list(int index) const;
  void set_scene_tag_id_list(int index, ::google::protobuf::uint32 value);
  void add_scene_tag_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      scene_tag_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_scene_tag_id_list();

  // string scene_transaction = 1842;
  void clear_scene_transaction();
  static const int kSceneTransactionFieldNumber = 1842;
  const ::std::string& scene_transaction() const;
  void set_scene_transaction(const ::std::string& value);
  #if LANG_CXX11
  void set_scene_transaction(::std::string&& value);
  #endif
  void set_scene_transaction(const char* value);
  void set_scene_transaction(const char* value, size_t size);
  ::std::string* mutable_scene_transaction();
  ::std::string* release_scene_transaction();
  void set_allocated_scene_transaction(::std::string* scene_transaction);

  // .proto.Vector pos = 7;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 7;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // .proto.Vector prev_pos = 8;
  bool has_prev_pos() const;
  void clear_prev_pos();
  static const int kPrevPosFieldNumber = 8;
  const ::proto::Vector& prev_pos() const;
  ::proto::Vector* mutable_prev_pos();
  ::proto::Vector* release_prev_pos();
  void set_allocated_prev_pos(::proto::Vector* prev_pos);

  // uint32 enter_scene_token = 2;
  void clear_enter_scene_token();
  static const int kEnterSceneTokenFieldNumber = 2;
  ::google::protobuf::uint32 enter_scene_token() const;
  void set_enter_scene_token(::google::protobuf::uint32 value);

  // uint32 target_uid = 4;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 4;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // uint32 prev_scene_id = 6;
  void clear_prev_scene_id();
  static const int kPrevSceneIdFieldNumber = 6;
  ::google::protobuf::uint32 prev_scene_id() const;
  void set_prev_scene_id(::google::protobuf::uint32 value);

  // uint32 world_level = 11;
  void clear_world_level();
  static const int kWorldLevelFieldNumber = 11;
  ::google::protobuf::uint32 world_level() const;
  void set_world_level(::google::protobuf::uint32 value);

  // uint32 dungeon_id = 12;
  void clear_dungeon_id();
  static const int kDungeonIdFieldNumber = 12;
  ::google::protobuf::uint32 dungeon_id() const;
  void set_dungeon_id(::google::protobuf::uint32 value);

  // .proto.EnterType type = 13;
  void clear_type();
  static const int kTypeFieldNumber = 13;
  ::proto::EnterType type() const;
  void set_type(::proto::EnterType value);

  // uint64 scene_begin_time = 14;
  void clear_scene_begin_time();
  static const int kSceneBeginTimeFieldNumber = 14;
  ::google::protobuf::uint64 scene_begin_time() const;
  void set_scene_begin_time(::google::protobuf::uint64 value);

  // uint32 scene_id = 15;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 15;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // bool is_skip_ui = 1732;
  void clear_is_skip_ui();
  static const int kIsSkipUiFieldNumber = 1732;
  bool is_skip_ui() const;
  void set_is_skip_ui(bool value);

  // bool is_first_login_enter_scene = 3;
  void clear_is_first_login_enter_scene();
  static const int kIsFirstLoginEnterSceneFieldNumber = 3;
  bool is_first_login_enter_scene() const;
  void set_is_first_login_enter_scene(bool value);

  // uint32 world_type = 1490;
  void clear_world_type();
  static const int kWorldTypeFieldNumber = 1490;
  ::google::protobuf::uint32 world_type() const;
  void set_world_type(::google::protobuf::uint32 value);

  // uint32 enter_reason = 1828;
  void clear_enter_reason();
  static const int kEnterReasonFieldNumber = 1828;
  ::google::protobuf::uint32 enter_reason() const;
  void set_enter_reason(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerEnterSceneNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > scene_tag_id_list_;
  mutable int _scene_tag_id_list_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr scene_transaction_;
  ::proto::Vector* pos_;
  ::proto::Vector* prev_pos_;
  ::google::protobuf::uint32 enter_scene_token_;
  ::google::protobuf::uint32 target_uid_;
  ::google::protobuf::uint32 prev_scene_id_;
  ::google::protobuf::uint32 world_level_;
  ::google::protobuf::uint32 dungeon_id_;
  int type_;
  ::google::protobuf::uint64 scene_begin_time_;
  ::google::protobuf::uint32 scene_id_;
  bool is_skip_ui_;
  bool is_first_login_enter_scene_;
  ::google::protobuf::uint32 world_type_;
  ::google::protobuf::uint32 enter_reason_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LeaveSceneReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.LeaveSceneReq) */ {
 public:
  LeaveSceneReq();
  virtual ~LeaveSceneReq();

  LeaveSceneReq(const LeaveSceneReq& from);

  inline LeaveSceneReq& operator=(const LeaveSceneReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LeaveSceneReq(LeaveSceneReq&& from) noexcept
    : LeaveSceneReq() {
    *this = ::std::move(from);
  }

  inline LeaveSceneReq& operator=(LeaveSceneReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveSceneReq& default_instance();

  static inline const LeaveSceneReq* internal_default_instance() {
    return reinterpret_cast<const LeaveSceneReq*>(
               &_LeaveSceneReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(LeaveSceneReq* other);
  friend void swap(LeaveSceneReq& a, LeaveSceneReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LeaveSceneReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LeaveSceneReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LeaveSceneReq& from);
  void MergeFrom(const LeaveSceneReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LeaveSceneReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.LeaveSceneReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LeaveSceneRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.LeaveSceneRsp) */ {
 public:
  LeaveSceneRsp();
  virtual ~LeaveSceneRsp();

  LeaveSceneRsp(const LeaveSceneRsp& from);

  inline LeaveSceneRsp& operator=(const LeaveSceneRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LeaveSceneRsp(LeaveSceneRsp&& from) noexcept
    : LeaveSceneRsp() {
    *this = ::std::move(from);
  }

  inline LeaveSceneRsp& operator=(LeaveSceneRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveSceneRsp& default_instance();

  static inline const LeaveSceneRsp* internal_default_instance() {
    return reinterpret_cast<const LeaveSceneRsp*>(
               &_LeaveSceneRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(LeaveSceneRsp* other);
  friend void swap(LeaveSceneRsp& a, LeaveSceneRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LeaveSceneRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  LeaveSceneRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LeaveSceneRsp& from);
  void MergeFrom(const LeaveSceneRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LeaveSceneRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 3;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 3;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.LeaveSceneRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneInitFinishReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneInitFinishReq) */ {
 public:
  SceneInitFinishReq();
  virtual ~SceneInitFinishReq();

  SceneInitFinishReq(const SceneInitFinishReq& from);

  inline SceneInitFinishReq& operator=(const SceneInitFinishReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneInitFinishReq(SceneInitFinishReq&& from) noexcept
    : SceneInitFinishReq() {
    *this = ::std::move(from);
  }

  inline SceneInitFinishReq& operator=(SceneInitFinishReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneInitFinishReq& default_instance();

  static inline const SceneInitFinishReq* internal_default_instance() {
    return reinterpret_cast<const SceneInitFinishReq*>(
               &_SceneInitFinishReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(SceneInitFinishReq* other);
  friend void swap(SceneInitFinishReq& a, SceneInitFinishReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneInitFinishReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneInitFinishReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneInitFinishReq& from);
  void MergeFrom(const SceneInitFinishReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneInitFinishReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 enter_scene_token = 11;
  void clear_enter_scene_token();
  static const int kEnterSceneTokenFieldNumber = 11;
  ::google::protobuf::uint32 enter_scene_token() const;
  void set_enter_scene_token(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneInitFinishReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 enter_scene_token_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneInitFinishRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneInitFinishRsp) */ {
 public:
  SceneInitFinishRsp();
  virtual ~SceneInitFinishRsp();

  SceneInitFinishRsp(const SceneInitFinishRsp& from);

  inline SceneInitFinishRsp& operator=(const SceneInitFinishRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneInitFinishRsp(SceneInitFinishRsp&& from) noexcept
    : SceneInitFinishRsp() {
    *this = ::std::move(from);
  }

  inline SceneInitFinishRsp& operator=(SceneInitFinishRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneInitFinishRsp& default_instance();

  static inline const SceneInitFinishRsp* internal_default_instance() {
    return reinterpret_cast<const SceneInitFinishRsp*>(
               &_SceneInitFinishRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SceneInitFinishRsp* other);
  friend void swap(SceneInitFinishRsp& a, SceneInitFinishRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneInitFinishRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneInitFinishRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneInitFinishRsp& from);
  void MergeFrom(const SceneInitFinishRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneInitFinishRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 enter_scene_token = 8;
  void clear_enter_scene_token();
  static const int kEnterSceneTokenFieldNumber = 8;
  ::google::protobuf::uint32 enter_scene_token() const;
  void set_enter_scene_token(::google::protobuf::uint32 value);

  // int32 retcode = 13;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 13;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneInitFinishRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 enter_scene_token_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneEntityAppearNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEntityAppearNotify) */ {
 public:
  SceneEntityAppearNotify();
  virtual ~SceneEntityAppearNotify();

  SceneEntityAppearNotify(const SceneEntityAppearNotify& from);

  inline SceneEntityAppearNotify& operator=(const SceneEntityAppearNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEntityAppearNotify(SceneEntityAppearNotify&& from) noexcept
    : SceneEntityAppearNotify() {
    *this = ::std::move(from);
  }

  inline SceneEntityAppearNotify& operator=(SceneEntityAppearNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEntityAppearNotify& default_instance();

  static inline const SceneEntityAppearNotify* internal_default_instance() {
    return reinterpret_cast<const SceneEntityAppearNotify*>(
               &_SceneEntityAppearNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(SceneEntityAppearNotify* other);
  friend void swap(SceneEntityAppearNotify& a, SceneEntityAppearNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEntityAppearNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEntityAppearNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEntityAppearNotify& from);
  void MergeFrom(const SceneEntityAppearNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEntityAppearNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.SceneEntityInfo entity_list = 5;
  int entity_list_size() const;
  void clear_entity_list();
  static const int kEntityListFieldNumber = 5;
  const ::proto::SceneEntityInfo& entity_list(int index) const;
  ::proto::SceneEntityInfo* mutable_entity_list(int index);
  ::proto::SceneEntityInfo* add_entity_list();
  ::google::protobuf::RepeatedPtrField< ::proto::SceneEntityInfo >*
      mutable_entity_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::SceneEntityInfo >&
      entity_list() const;

  // uint32 param = 9;
  void clear_param();
  static const int kParamFieldNumber = 9;
  ::google::protobuf::uint32 param() const;
  void set_param(::google::protobuf::uint32 value);

  // .proto.VisionType appear_type = 15;
  void clear_appear_type();
  static const int kAppearTypeFieldNumber = 15;
  ::proto::VisionType appear_type() const;
  void set_appear_type(::proto::VisionType value);

  // @@protoc_insertion_point(class_scope:proto.SceneEntityAppearNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::SceneEntityInfo > entity_list_;
  ::google::protobuf::uint32 param_;
  int appear_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneEntityDisappearNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEntityDisappearNotify) */ {
 public:
  SceneEntityDisappearNotify();
  virtual ~SceneEntityDisappearNotify();

  SceneEntityDisappearNotify(const SceneEntityDisappearNotify& from);

  inline SceneEntityDisappearNotify& operator=(const SceneEntityDisappearNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEntityDisappearNotify(SceneEntityDisappearNotify&& from) noexcept
    : SceneEntityDisappearNotify() {
    *this = ::std::move(from);
  }

  inline SceneEntityDisappearNotify& operator=(SceneEntityDisappearNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEntityDisappearNotify& default_instance();

  static inline const SceneEntityDisappearNotify* internal_default_instance() {
    return reinterpret_cast<const SceneEntityDisappearNotify*>(
               &_SceneEntityDisappearNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(SceneEntityDisappearNotify* other);
  friend void swap(SceneEntityDisappearNotify& a, SceneEntityDisappearNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEntityDisappearNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEntityDisappearNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEntityDisappearNotify& from);
  void MergeFrom(const SceneEntityDisappearNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEntityDisappearNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 entity_list = 1;
  int entity_list_size() const;
  void clear_entity_list();
  static const int kEntityListFieldNumber = 1;
  ::google::protobuf::uint32 entity_list(int index) const;
  void set_entity_list(int index, ::google::protobuf::uint32 value);
  void add_entity_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      entity_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_entity_list();

  // .proto.VisionType disappear_type = 2;
  void clear_disappear_type();
  static const int kDisappearTypeFieldNumber = 2;
  ::proto::VisionType disappear_type() const;
  void set_disappear_type(::proto::VisionType value);

  // uint32 param = 6;
  void clear_param();
  static const int kParamFieldNumber = 6;
  ::google::protobuf::uint32 param() const;
  void set_param(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneEntityDisappearNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > entity_list_;
  mutable int _entity_list_cached_byte_size_;
  int disappear_type_;
  ::google::protobuf::uint32 param_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneEntityMoveReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEntityMoveReq) */ {
 public:
  SceneEntityMoveReq();
  virtual ~SceneEntityMoveReq();

  SceneEntityMoveReq(const SceneEntityMoveReq& from);

  inline SceneEntityMoveReq& operator=(const SceneEntityMoveReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEntityMoveReq(SceneEntityMoveReq&& from) noexcept
    : SceneEntityMoveReq() {
    *this = ::std::move(from);
  }

  inline SceneEntityMoveReq& operator=(SceneEntityMoveReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEntityMoveReq& default_instance();

  static inline const SceneEntityMoveReq* internal_default_instance() {
    return reinterpret_cast<const SceneEntityMoveReq*>(
               &_SceneEntityMoveReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(SceneEntityMoveReq* other);
  friend void swap(SceneEntityMoveReq& a, SceneEntityMoveReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEntityMoveReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEntityMoveReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEntityMoveReq& from);
  void MergeFrom(const SceneEntityMoveReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEntityMoveReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.MotionInfo motion_info = 7;
  bool has_motion_info() const;
  void clear_motion_info();
  static const int kMotionInfoFieldNumber = 7;
  const ::proto::MotionInfo& motion_info() const;
  ::proto::MotionInfo* mutable_motion_info();
  ::proto::MotionInfo* release_motion_info();
  void set_allocated_motion_info(::proto::MotionInfo* motion_info);

  // uint32 reliable_seq = 15;
  void clear_reliable_seq();
  static const int kReliableSeqFieldNumber = 15;
  ::google::protobuf::uint32 reliable_seq() const;
  void set_reliable_seq(::google::protobuf::uint32 value);

  // uint32 scene_time = 4;
  void clear_scene_time();
  static const int kSceneTimeFieldNumber = 4;
  ::google::protobuf::uint32 scene_time() const;
  void set_scene_time(::google::protobuf::uint32 value);

  // uint32 entity_id = 8;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 8;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneEntityMoveReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MotionInfo* motion_info_;
  ::google::protobuf::uint32 reliable_seq_;
  ::google::protobuf::uint32 scene_time_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneEntityMoveRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEntityMoveRsp) */ {
 public:
  SceneEntityMoveRsp();
  virtual ~SceneEntityMoveRsp();

  SceneEntityMoveRsp(const SceneEntityMoveRsp& from);

  inline SceneEntityMoveRsp& operator=(const SceneEntityMoveRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEntityMoveRsp(SceneEntityMoveRsp&& from) noexcept
    : SceneEntityMoveRsp() {
    *this = ::std::move(from);
  }

  inline SceneEntityMoveRsp& operator=(SceneEntityMoveRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEntityMoveRsp& default_instance();

  static inline const SceneEntityMoveRsp* internal_default_instance() {
    return reinterpret_cast<const SceneEntityMoveRsp*>(
               &_SceneEntityMoveRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(SceneEntityMoveRsp* other);
  friend void swap(SceneEntityMoveRsp& a, SceneEntityMoveRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEntityMoveRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEntityMoveRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEntityMoveRsp& from);
  void MergeFrom(const SceneEntityMoveRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEntityMoveRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.MotionInfo fail_motion = 1;
  bool has_fail_motion() const;
  void clear_fail_motion();
  static const int kFailMotionFieldNumber = 1;
  const ::proto::MotionInfo& fail_motion() const;
  ::proto::MotionInfo* mutable_fail_motion();
  ::proto::MotionInfo* release_fail_motion();
  void set_allocated_fail_motion(::proto::MotionInfo* fail_motion);

  // uint32 entity_id = 4;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 4;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 reliable_seq = 6;
  void clear_reliable_seq();
  static const int kReliableSeqFieldNumber = 6;
  ::google::protobuf::uint32 reliable_seq() const;
  void set_reliable_seq(::google::protobuf::uint32 value);

  // int32 retcode = 8;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 8;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 scene_time = 10;
  void clear_scene_time();
  static const int kSceneTimeFieldNumber = 10;
  ::google::protobuf::uint32 scene_time() const;
  void set_scene_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneEntityMoveRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MotionInfo* fail_motion_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 reliable_seq_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 scene_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneAvatarStaminaStepReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneAvatarStaminaStepReq) */ {
 public:
  SceneAvatarStaminaStepReq();
  virtual ~SceneAvatarStaminaStepReq();

  SceneAvatarStaminaStepReq(const SceneAvatarStaminaStepReq& from);

  inline SceneAvatarStaminaStepReq& operator=(const SceneAvatarStaminaStepReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneAvatarStaminaStepReq(SceneAvatarStaminaStepReq&& from) noexcept
    : SceneAvatarStaminaStepReq() {
    *this = ::std::move(from);
  }

  inline SceneAvatarStaminaStepReq& operator=(SceneAvatarStaminaStepReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneAvatarStaminaStepReq& default_instance();

  static inline const SceneAvatarStaminaStepReq* internal_default_instance() {
    return reinterpret_cast<const SceneAvatarStaminaStepReq*>(
               &_SceneAvatarStaminaStepReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(SceneAvatarStaminaStepReq* other);
  friend void swap(SceneAvatarStaminaStepReq& a, SceneAvatarStaminaStepReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneAvatarStaminaStepReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneAvatarStaminaStepReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneAvatarStaminaStepReq& from);
  void MergeFrom(const SceneAvatarStaminaStepReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneAvatarStaminaStepReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector rot = 7;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 7;
  const ::proto::Vector& rot() const;
  ::proto::Vector* mutable_rot();
  ::proto::Vector* release_rot();
  void set_allocated_rot(::proto::Vector* rot);

  // bool use_client_rot = 15;
  void clear_use_client_rot();
  static const int kUseClientRotFieldNumber = 15;
  bool use_client_rot() const;
  void set_use_client_rot(bool value);

  // @@protoc_insertion_point(class_scope:proto.SceneAvatarStaminaStepReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* rot_;
  bool use_client_rot_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneAvatarStaminaStepRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneAvatarStaminaStepRsp) */ {
 public:
  SceneAvatarStaminaStepRsp();
  virtual ~SceneAvatarStaminaStepRsp();

  SceneAvatarStaminaStepRsp(const SceneAvatarStaminaStepRsp& from);

  inline SceneAvatarStaminaStepRsp& operator=(const SceneAvatarStaminaStepRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneAvatarStaminaStepRsp(SceneAvatarStaminaStepRsp&& from) noexcept
    : SceneAvatarStaminaStepRsp() {
    *this = ::std::move(from);
  }

  inline SceneAvatarStaminaStepRsp& operator=(SceneAvatarStaminaStepRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneAvatarStaminaStepRsp& default_instance();

  static inline const SceneAvatarStaminaStepRsp* internal_default_instance() {
    return reinterpret_cast<const SceneAvatarStaminaStepRsp*>(
               &_SceneAvatarStaminaStepRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(SceneAvatarStaminaStepRsp* other);
  friend void swap(SceneAvatarStaminaStepRsp& a, SceneAvatarStaminaStepRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneAvatarStaminaStepRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneAvatarStaminaStepRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneAvatarStaminaStepRsp& from);
  void MergeFrom(const SceneAvatarStaminaStepRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneAvatarStaminaStepRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector rot = 11;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 11;
  const ::proto::Vector& rot() const;
  ::proto::Vector* mutable_rot();
  ::proto::Vector* release_rot();
  void set_allocated_rot(::proto::Vector* rot);

  // int32 retcode = 7;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 7;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // bool use_client_rot = 9;
  void clear_use_client_rot();
  static const int kUseClientRotFieldNumber = 9;
  bool use_client_rot() const;
  void set_use_client_rot(bool value);

  // @@protoc_insertion_point(class_scope:proto.SceneAvatarStaminaStepRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* rot_;
  ::google::protobuf::int32 retcode_;
  bool use_client_rot_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneEntityMoveNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEntityMoveNotify) */ {
 public:
  SceneEntityMoveNotify();
  virtual ~SceneEntityMoveNotify();

  SceneEntityMoveNotify(const SceneEntityMoveNotify& from);

  inline SceneEntityMoveNotify& operator=(const SceneEntityMoveNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEntityMoveNotify(SceneEntityMoveNotify&& from) noexcept
    : SceneEntityMoveNotify() {
    *this = ::std::move(from);
  }

  inline SceneEntityMoveNotify& operator=(SceneEntityMoveNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEntityMoveNotify& default_instance();

  static inline const SceneEntityMoveNotify* internal_default_instance() {
    return reinterpret_cast<const SceneEntityMoveNotify*>(
               &_SceneEntityMoveNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(SceneEntityMoveNotify* other);
  friend void swap(SceneEntityMoveNotify& a, SceneEntityMoveNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEntityMoveNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEntityMoveNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEntityMoveNotify& from);
  void MergeFrom(const SceneEntityMoveNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEntityMoveNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.MotionInfo motion_info = 6;
  bool has_motion_info() const;
  void clear_motion_info();
  static const int kMotionInfoFieldNumber = 6;
  const ::proto::MotionInfo& motion_info() const;
  ::proto::MotionInfo* mutable_motion_info();
  ::proto::MotionInfo* release_motion_info();
  void set_allocated_motion_info(::proto::MotionInfo* motion_info);

  // uint32 reliable_seq = 2;
  void clear_reliable_seq();
  static const int kReliableSeqFieldNumber = 2;
  ::google::protobuf::uint32 reliable_seq() const;
  void set_reliable_seq(::google::protobuf::uint32 value);

  // uint32 entity_id = 8;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 8;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 scene_time = 15;
  void clear_scene_time();
  static const int kSceneTimeFieldNumber = 15;
  ::google::protobuf::uint32 scene_time() const;
  void set_scene_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneEntityMoveNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MotionInfo* motion_info_;
  ::google::protobuf::uint32 reliable_seq_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 scene_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VehicleLocationInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.VehicleLocationInfo) */ {
 public:
  VehicleLocationInfo();
  virtual ~VehicleLocationInfo();

  VehicleLocationInfo(const VehicleLocationInfo& from);

  inline VehicleLocationInfo& operator=(const VehicleLocationInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleLocationInfo(VehicleLocationInfo&& from) noexcept
    : VehicleLocationInfo() {
    *this = ::std::move(from);
  }

  inline VehicleLocationInfo& operator=(VehicleLocationInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleLocationInfo& default_instance();

  static inline const VehicleLocationInfo* internal_default_instance() {
    return reinterpret_cast<const VehicleLocationInfo*>(
               &_VehicleLocationInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(VehicleLocationInfo* other);
  friend void swap(VehicleLocationInfo& a, VehicleLocationInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleLocationInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleLocationInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VehicleLocationInfo& from);
  void MergeFrom(const VehicleLocationInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VehicleLocationInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 uid_list = 3;
  int uid_list_size() const;
  void clear_uid_list();
  static const int kUidListFieldNumber = 3;
  ::google::protobuf::uint32 uid_list(int index) const;
  void set_uid_list(int index, ::google::protobuf::uint32 value);
  void add_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_uid_list();

  // .proto.Vector pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // .proto.Vector rot = 14;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 14;
  const ::proto::Vector& rot() const;
  ::proto::Vector* mutable_rot();
  ::proto::Vector* release_rot();
  void set_allocated_rot(::proto::Vector* rot);

  // uint32 owner_uid = 5;
  void clear_owner_uid();
  static const int kOwnerUidFieldNumber = 5;
  ::google::protobuf::uint32 owner_uid() const;
  void set_owner_uid(::google::protobuf::uint32 value);

  // float max_hp = 6;
  void clear_max_hp();
  static const int kMaxHpFieldNumber = 6;
  float max_hp() const;
  void set_max_hp(float value);

  // uint32 entity_id = 15;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 15;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // float cur_hp = 11;
  void clear_cur_hp();
  static const int kCurHpFieldNumber = 11;
  float cur_hp() const;
  void set_cur_hp(float value);

  // uint32 gadget_id = 13;
  void clear_gadget_id();
  static const int kGadgetIdFieldNumber = 13;
  ::google::protobuf::uint32 gadget_id() const;
  void set_gadget_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.VehicleLocationInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > uid_list_;
  mutable int _uid_list_cached_byte_size_;
  ::proto::Vector* pos_;
  ::proto::Vector* rot_;
  ::google::protobuf::uint32 owner_uid_;
  float max_hp_;
  ::google::protobuf::uint32 entity_id_;
  float cur_hp_;
  ::google::protobuf::uint32 gadget_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScenePlayerLocationNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ScenePlayerLocationNotify) */ {
 public:
  ScenePlayerLocationNotify();
  virtual ~ScenePlayerLocationNotify();

  ScenePlayerLocationNotify(const ScenePlayerLocationNotify& from);

  inline ScenePlayerLocationNotify& operator=(const ScenePlayerLocationNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScenePlayerLocationNotify(ScenePlayerLocationNotify&& from) noexcept
    : ScenePlayerLocationNotify() {
    *this = ::std::move(from);
  }

  inline ScenePlayerLocationNotify& operator=(ScenePlayerLocationNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenePlayerLocationNotify& default_instance();

  static inline const ScenePlayerLocationNotify* internal_default_instance() {
    return reinterpret_cast<const ScenePlayerLocationNotify*>(
               &_ScenePlayerLocationNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(ScenePlayerLocationNotify* other);
  friend void swap(ScenePlayerLocationNotify& a, ScenePlayerLocationNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScenePlayerLocationNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ScenePlayerLocationNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScenePlayerLocationNotify& from);
  void MergeFrom(const ScenePlayerLocationNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScenePlayerLocationNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.VehicleLocationInfo vehicle_loc_list = 3;
  int vehicle_loc_list_size() const;
  void clear_vehicle_loc_list();
  static const int kVehicleLocListFieldNumber = 3;
  const ::proto::VehicleLocationInfo& vehicle_loc_list(int index) const;
  ::proto::VehicleLocationInfo* mutable_vehicle_loc_list(int index);
  ::proto::VehicleLocationInfo* add_vehicle_loc_list();
  ::google::protobuf::RepeatedPtrField< ::proto::VehicleLocationInfo >*
      mutable_vehicle_loc_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::VehicleLocationInfo >&
      vehicle_loc_list() const;

  // repeated .proto.PlayerLocationInfo player_loc_list = 14;
  int player_loc_list_size() const;
  void clear_player_loc_list();
  static const int kPlayerLocListFieldNumber = 14;
  const ::proto::PlayerLocationInfo& player_loc_list(int index) const;
  ::proto::PlayerLocationInfo* mutable_player_loc_list(int index);
  ::proto::PlayerLocationInfo* add_player_loc_list();
  ::google::protobuf::RepeatedPtrField< ::proto::PlayerLocationInfo >*
      mutable_player_loc_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::PlayerLocationInfo >&
      player_loc_list() const;

  // uint32 scene_id = 9;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 9;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ScenePlayerLocationNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::VehicleLocationInfo > vehicle_loc_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::PlayerLocationInfo > player_loc_list_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetScenePointReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetScenePointReq) */ {
 public:
  GetScenePointReq();
  virtual ~GetScenePointReq();

  GetScenePointReq(const GetScenePointReq& from);

  inline GetScenePointReq& operator=(const GetScenePointReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetScenePointReq(GetScenePointReq&& from) noexcept
    : GetScenePointReq() {
    *this = ::std::move(from);
  }

  inline GetScenePointReq& operator=(GetScenePointReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetScenePointReq& default_instance();

  static inline const GetScenePointReq* internal_default_instance() {
    return reinterpret_cast<const GetScenePointReq*>(
               &_GetScenePointReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(GetScenePointReq* other);
  friend void swap(GetScenePointReq& a, GetScenePointReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetScenePointReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetScenePointReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetScenePointReq& from);
  void MergeFrom(const GetScenePointReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetScenePointReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 scene_id = 4;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 4;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 belong_uid = 10;
  void clear_belong_uid();
  static const int kBelongUidFieldNumber = 10;
  ::google::protobuf::uint32 belong_uid() const;
  void set_belong_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetScenePointReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 belong_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CityInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CityInfo) */ {
 public:
  CityInfo();
  virtual ~CityInfo();

  CityInfo(const CityInfo& from);

  inline CityInfo& operator=(const CityInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CityInfo(CityInfo&& from) noexcept
    : CityInfo() {
    *this = ::std::move(from);
  }

  inline CityInfo& operator=(CityInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CityInfo& default_instance();

  static inline const CityInfo* internal_default_instance() {
    return reinterpret_cast<const CityInfo*>(
               &_CityInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(CityInfo* other);
  friend void swap(CityInfo& a, CityInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CityInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CityInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CityInfo& from);
  void MergeFrom(const CityInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CityInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 crystal_num = 3;
  void clear_crystal_num();
  static const int kCrystalNumFieldNumber = 3;
  ::google::protobuf::uint32 crystal_num() const;
  void set_crystal_num(::google::protobuf::uint32 value);

  // uint32 level = 4;
  void clear_level();
  static const int kLevelFieldNumber = 4;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 city_id = 15;
  void clear_city_id();
  static const int kCityIdFieldNumber = 15;
  ::google::protobuf::uint32 city_id() const;
  void set_city_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CityInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 crystal_num_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 city_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetScenePointRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetScenePointRsp) */ {
 public:
  GetScenePointRsp();
  virtual ~GetScenePointRsp();

  GetScenePointRsp(const GetScenePointRsp& from);

  inline GetScenePointRsp& operator=(const GetScenePointRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetScenePointRsp(GetScenePointRsp&& from) noexcept
    : GetScenePointRsp() {
    *this = ::std::move(from);
  }

  inline GetScenePointRsp& operator=(GetScenePointRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetScenePointRsp& default_instance();

  static inline const GetScenePointRsp* internal_default_instance() {
    return reinterpret_cast<const GetScenePointRsp*>(
               &_GetScenePointRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(GetScenePointRsp* other);
  friend void swap(GetScenePointRsp& a, GetScenePointRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetScenePointRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetScenePointRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetScenePointRsp& from);
  void MergeFrom(const GetScenePointRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetScenePointRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 unlock_area_list = 1;
  int unlock_area_list_size() const;
  void clear_unlock_area_list();
  static const int kUnlockAreaListFieldNumber = 1;
  ::google::protobuf::uint32 unlock_area_list(int index) const;
  void set_unlock_area_list(int index, ::google::protobuf::uint32 value);
  void add_unlock_area_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unlock_area_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unlock_area_list();

  // repeated uint32 locked_point_list = 2;
  int locked_point_list_size() const;
  void clear_locked_point_list();
  static const int kLockedPointListFieldNumber = 2;
  ::google::protobuf::uint32 locked_point_list(int index) const;
  void set_locked_point_list(int index, ::google::protobuf::uint32 value);
  void add_locked_point_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      locked_point_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_locked_point_list();

  // repeated uint32 hide_point_list = 4;
  int hide_point_list_size() const;
  void clear_hide_point_list();
  static const int kHidePointListFieldNumber = 4;
  ::google::protobuf::uint32 hide_point_list(int index) const;
  void set_hide_point_list(int index, ::google::protobuf::uint32 value);
  void add_hide_point_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hide_point_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hide_point_list();

  // repeated uint32 unhide_point_list = 5;
  int unhide_point_list_size() const;
  void clear_unhide_point_list();
  static const int kUnhidePointListFieldNumber = 5;
  ::google::protobuf::uint32 unhide_point_list(int index) const;
  void set_unhide_point_list(int index, ::google::protobuf::uint32 value);
  void add_unhide_point_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unhide_point_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unhide_point_list();

  // repeated uint32 not_interact_dungeon_entry_list = 6;
  int not_interact_dungeon_entry_list_size() const;
  void clear_not_interact_dungeon_entry_list();
  static const int kNotInteractDungeonEntryListFieldNumber = 6;
  ::google::protobuf::uint32 not_interact_dungeon_entry_list(int index) const;
  void set_not_interact_dungeon_entry_list(int index, ::google::protobuf::uint32 value);
  void add_not_interact_dungeon_entry_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      not_interact_dungeon_entry_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_not_interact_dungeon_entry_list();

  // repeated uint32 group_unlimit_point_list = 10;
  int group_unlimit_point_list_size() const;
  void clear_group_unlimit_point_list();
  static const int kGroupUnlimitPointListFieldNumber = 10;
  ::google::protobuf::uint32 group_unlimit_point_list(int index) const;
  void set_group_unlimit_point_list(int index, ::google::protobuf::uint32 value);
  void add_group_unlimit_point_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      group_unlimit_point_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_group_unlimit_point_list();

  // repeated uint32 not_explored_dungeon_entry_list = 11;
  int not_explored_dungeon_entry_list_size() const;
  void clear_not_explored_dungeon_entry_list();
  static const int kNotExploredDungeonEntryListFieldNumber = 11;
  ::google::protobuf::uint32 not_explored_dungeon_entry_list(int index) const;
  void set_not_explored_dungeon_entry_list(int index, ::google::protobuf::uint32 value);
  void add_not_explored_dungeon_entry_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      not_explored_dungeon_entry_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_not_explored_dungeon_entry_list();

  // repeated uint32 unlocked_point_list = 13;
  int unlocked_point_list_size() const;
  void clear_unlocked_point_list();
  static const int kUnlockedPointListFieldNumber = 13;
  ::google::protobuf::uint32 unlocked_point_list(int index) const;
  void set_unlocked_point_list(int index, ::google::protobuf::uint32 value);
  void add_unlocked_point_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unlocked_point_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unlocked_point_list();

  // repeated uint32 to_be_explore_dungeon_entry_list = 15;
  int to_be_explore_dungeon_entry_list_size() const;
  void clear_to_be_explore_dungeon_entry_list();
  static const int kToBeExploreDungeonEntryListFieldNumber = 15;
  ::google::protobuf::uint32 to_be_explore_dungeon_entry_list(int index) const;
  void set_to_be_explore_dungeon_entry_list(int index, ::google::protobuf::uint32 value);
  void add_to_be_explore_dungeon_entry_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      to_be_explore_dungeon_entry_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_to_be_explore_dungeon_entry_list();

  // int32 retcode = 9;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 9;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 belong_uid = 12;
  void clear_belong_uid();
  static const int kBelongUidFieldNumber = 12;
  ::google::protobuf::uint32 belong_uid() const;
  void set_belong_uid(::google::protobuf::uint32 value);

  // uint32 scene_id = 14;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 14;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetScenePointRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unlock_area_list_;
  mutable int _unlock_area_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > locked_point_list_;
  mutable int _locked_point_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hide_point_list_;
  mutable int _hide_point_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unhide_point_list_;
  mutable int _unhide_point_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > not_interact_dungeon_entry_list_;
  mutable int _not_interact_dungeon_entry_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > group_unlimit_point_list_;
  mutable int _group_unlimit_point_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > not_explored_dungeon_entry_list_;
  mutable int _not_explored_dungeon_entry_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unlocked_point_list_;
  mutable int _unlocked_point_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > to_be_explore_dungeon_entry_list_;
  mutable int _to_be_explore_dungeon_entry_list_cached_byte_size_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 belong_uid_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterTransPointRegionNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EnterTransPointRegionNotify) */ {
 public:
  EnterTransPointRegionNotify();
  virtual ~EnterTransPointRegionNotify();

  EnterTransPointRegionNotify(const EnterTransPointRegionNotify& from);

  inline EnterTransPointRegionNotify& operator=(const EnterTransPointRegionNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterTransPointRegionNotify(EnterTransPointRegionNotify&& from) noexcept
    : EnterTransPointRegionNotify() {
    *this = ::std::move(from);
  }

  inline EnterTransPointRegionNotify& operator=(EnterTransPointRegionNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterTransPointRegionNotify& default_instance();

  static inline const EnterTransPointRegionNotify* internal_default_instance() {
    return reinterpret_cast<const EnterTransPointRegionNotify*>(
               &_EnterTransPointRegionNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(EnterTransPointRegionNotify* other);
  friend void swap(EnterTransPointRegionNotify& a, EnterTransPointRegionNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterTransPointRegionNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterTransPointRegionNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterTransPointRegionNotify& from);
  void MergeFrom(const EnterTransPointRegionNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterTransPointRegionNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 point_id = 6;
  void clear_point_id();
  static const int kPointIdFieldNumber = 6;
  ::google::protobuf::uint32 point_id() const;
  void set_point_id(::google::protobuf::uint32 value);

  // uint32 scene_id = 8;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 8;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EnterTransPointRegionNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 point_id_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExitTransPointRegionNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ExitTransPointRegionNotify) */ {
 public:
  ExitTransPointRegionNotify();
  virtual ~ExitTransPointRegionNotify();

  ExitTransPointRegionNotify(const ExitTransPointRegionNotify& from);

  inline ExitTransPointRegionNotify& operator=(const ExitTransPointRegionNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExitTransPointRegionNotify(ExitTransPointRegionNotify&& from) noexcept
    : ExitTransPointRegionNotify() {
    *this = ::std::move(from);
  }

  inline ExitTransPointRegionNotify& operator=(ExitTransPointRegionNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitTransPointRegionNotify& default_instance();

  static inline const ExitTransPointRegionNotify* internal_default_instance() {
    return reinterpret_cast<const ExitTransPointRegionNotify*>(
               &_ExitTransPointRegionNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(ExitTransPointRegionNotify* other);
  friend void swap(ExitTransPointRegionNotify& a, ExitTransPointRegionNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExitTransPointRegionNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ExitTransPointRegionNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExitTransPointRegionNotify& from);
  void MergeFrom(const ExitTransPointRegionNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExitTransPointRegionNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 point_id = 1;
  void clear_point_id();
  static const int kPointIdFieldNumber = 1;
  ::google::protobuf::uint32 point_id() const;
  void set_point_id(::google::protobuf::uint32 value);

  // uint32 scene_id = 7;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 7;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ExitTransPointRegionNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 point_id_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScenePointUnlockNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ScenePointUnlockNotify) */ {
 public:
  ScenePointUnlockNotify();
  virtual ~ScenePointUnlockNotify();

  ScenePointUnlockNotify(const ScenePointUnlockNotify& from);

  inline ScenePointUnlockNotify& operator=(const ScenePointUnlockNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScenePointUnlockNotify(ScenePointUnlockNotify&& from) noexcept
    : ScenePointUnlockNotify() {
    *this = ::std::move(from);
  }

  inline ScenePointUnlockNotify& operator=(ScenePointUnlockNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenePointUnlockNotify& default_instance();

  static inline const ScenePointUnlockNotify* internal_default_instance() {
    return reinterpret_cast<const ScenePointUnlockNotify*>(
               &_ScenePointUnlockNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(ScenePointUnlockNotify* other);
  friend void swap(ScenePointUnlockNotify& a, ScenePointUnlockNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScenePointUnlockNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ScenePointUnlockNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScenePointUnlockNotify& from);
  void MergeFrom(const ScenePointUnlockNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScenePointUnlockNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 hide_point_list = 1;
  int hide_point_list_size() const;
  void clear_hide_point_list();
  static const int kHidePointListFieldNumber = 1;
  ::google::protobuf::uint32 hide_point_list(int index) const;
  void set_hide_point_list(int index, ::google::protobuf::uint32 value);
  void add_hide_point_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hide_point_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hide_point_list();

  // repeated uint32 locked_point_list = 8;
  int locked_point_list_size() const;
  void clear_locked_point_list();
  static const int kLockedPointListFieldNumber = 8;
  ::google::protobuf::uint32 locked_point_list(int index) const;
  void set_locked_point_list(int index, ::google::protobuf::uint32 value);
  void add_locked_point_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      locked_point_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_locked_point_list();

  // repeated uint32 unhide_point_list = 12;
  int unhide_point_list_size() const;
  void clear_unhide_point_list();
  static const int kUnhidePointListFieldNumber = 12;
  ::google::protobuf::uint32 unhide_point_list(int index) const;
  void set_unhide_point_list(int index, ::google::protobuf::uint32 value);
  void add_unhide_point_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unhide_point_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unhide_point_list();

  // repeated uint32 point_list = 13;
  int point_list_size() const;
  void clear_point_list();
  static const int kPointListFieldNumber = 13;
  ::google::protobuf::uint32 point_list(int index) const;
  void set_point_list(int index, ::google::protobuf::uint32 value);
  void add_point_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      point_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_point_list();

  // uint32 scene_id = 6;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 6;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ScenePointUnlockNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hide_point_list_;
  mutable int _hide_point_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > locked_point_list_;
  mutable int _locked_point_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unhide_point_list_;
  mutable int _unhide_point_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > point_list_;
  mutable int _point_list_cached_byte_size_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneTransToPointReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneTransToPointReq) */ {
 public:
  SceneTransToPointReq();
  virtual ~SceneTransToPointReq();

  SceneTransToPointReq(const SceneTransToPointReq& from);

  inline SceneTransToPointReq& operator=(const SceneTransToPointReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneTransToPointReq(SceneTransToPointReq&& from) noexcept
    : SceneTransToPointReq() {
    *this = ::std::move(from);
  }

  inline SceneTransToPointReq& operator=(SceneTransToPointReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneTransToPointReq& default_instance();

  static inline const SceneTransToPointReq* internal_default_instance() {
    return reinterpret_cast<const SceneTransToPointReq*>(
               &_SceneTransToPointReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(SceneTransToPointReq* other);
  friend void swap(SceneTransToPointReq& a, SceneTransToPointReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneTransToPointReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneTransToPointReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneTransToPointReq& from);
  void MergeFrom(const SceneTransToPointReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneTransToPointReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 point_id = 1;
  void clear_point_id();
  static const int kPointIdFieldNumber = 1;
  ::google::protobuf::uint32 point_id() const;
  void set_point_id(::google::protobuf::uint32 value);

  // uint32 scene_id = 13;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 13;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneTransToPointReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 point_id_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneTransToPointRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneTransToPointRsp) */ {
 public:
  SceneTransToPointRsp();
  virtual ~SceneTransToPointRsp();

  SceneTransToPointRsp(const SceneTransToPointRsp& from);

  inline SceneTransToPointRsp& operator=(const SceneTransToPointRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneTransToPointRsp(SceneTransToPointRsp&& from) noexcept
    : SceneTransToPointRsp() {
    *this = ::std::move(from);
  }

  inline SceneTransToPointRsp& operator=(SceneTransToPointRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneTransToPointRsp& default_instance();

  static inline const SceneTransToPointRsp* internal_default_instance() {
    return reinterpret_cast<const SceneTransToPointRsp*>(
               &_SceneTransToPointRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(SceneTransToPointRsp* other);
  friend void swap(SceneTransToPointRsp& a, SceneTransToPointRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneTransToPointRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneTransToPointRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneTransToPointRsp& from);
  void MergeFrom(const SceneTransToPointRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneTransToPointRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 point_id = 14;
  void clear_point_id();
  static const int kPointIdFieldNumber = 14;
  ::google::protobuf::uint32 point_id() const;
  void set_point_id(::google::protobuf::uint32 value);

  // uint32 scene_id = 3;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 3;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // int32 retcode = 8;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 8;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneTransToPointRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 point_id_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityJumpNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityJumpNotify) */ {
 public:
  EntityJumpNotify();
  virtual ~EntityJumpNotify();

  EntityJumpNotify(const EntityJumpNotify& from);

  inline EntityJumpNotify& operator=(const EntityJumpNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityJumpNotify(EntityJumpNotify&& from) noexcept
    : EntityJumpNotify() {
    *this = ::std::move(from);
  }

  inline EntityJumpNotify& operator=(EntityJumpNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityJumpNotify& default_instance();

  static inline const EntityJumpNotify* internal_default_instance() {
    return reinterpret_cast<const EntityJumpNotify*>(
               &_EntityJumpNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(EntityJumpNotify* other);
  friend void swap(EntityJumpNotify& a, EntityJumpNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityJumpNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityJumpNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityJumpNotify& from);
  void MergeFrom(const EntityJumpNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityJumpNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EntityJumpNotify_Type Type;
  static const Type NULL_ =
    EntityJumpNotify_Type_NULL_;
  static const Type ACTIVE =
    EntityJumpNotify_Type_ACTIVE;
  static const Type PASSIVE =
    EntityJumpNotify_Type_PASSIVE;
  static inline bool Type_IsValid(int value) {
    return EntityJumpNotify_Type_IsValid(value);
  }
  static const Type Type_MIN =
    EntityJumpNotify_Type_Type_MIN;
  static const Type Type_MAX =
    EntityJumpNotify_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    EntityJumpNotify_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return EntityJumpNotify_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return EntityJumpNotify_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return EntityJumpNotify_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector rot = 8;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 8;
  const ::proto::Vector& rot() const;
  ::proto::Vector* mutable_rot();
  ::proto::Vector* release_rot();
  void set_allocated_rot(::proto::Vector* rot);

  // .proto.Vector pos = 10;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 10;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // .proto.EntityJumpNotify.Type jump_type = 9;
  void clear_jump_type();
  static const int kJumpTypeFieldNumber = 9;
  ::proto::EntityJumpNotify_Type jump_type() const;
  void set_jump_type(::proto::EntityJumpNotify_Type value);

  // uint32 entity_id = 12;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 12;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EntityJumpNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* rot_;
  ::proto::Vector* pos_;
  int jump_type_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetSceneAreaReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetSceneAreaReq) */ {
 public:
  GetSceneAreaReq();
  virtual ~GetSceneAreaReq();

  GetSceneAreaReq(const GetSceneAreaReq& from);

  inline GetSceneAreaReq& operator=(const GetSceneAreaReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetSceneAreaReq(GetSceneAreaReq&& from) noexcept
    : GetSceneAreaReq() {
    *this = ::std::move(from);
  }

  inline GetSceneAreaReq& operator=(GetSceneAreaReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSceneAreaReq& default_instance();

  static inline const GetSceneAreaReq* internal_default_instance() {
    return reinterpret_cast<const GetSceneAreaReq*>(
               &_GetSceneAreaReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(GetSceneAreaReq* other);
  friend void swap(GetSceneAreaReq& a, GetSceneAreaReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetSceneAreaReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetSceneAreaReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetSceneAreaReq& from);
  void MergeFrom(const GetSceneAreaReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetSceneAreaReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 scene_id = 4;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 4;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 belong_uid = 7;
  void clear_belong_uid();
  static const int kBelongUidFieldNumber = 7;
  ::google::protobuf::uint32 belong_uid() const;
  void set_belong_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetSceneAreaReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 belong_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetSceneAreaRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetSceneAreaRsp) */ {
 public:
  GetSceneAreaRsp();
  virtual ~GetSceneAreaRsp();

  GetSceneAreaRsp(const GetSceneAreaRsp& from);

  inline GetSceneAreaRsp& operator=(const GetSceneAreaRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetSceneAreaRsp(GetSceneAreaRsp&& from) noexcept
    : GetSceneAreaRsp() {
    *this = ::std::move(from);
  }

  inline GetSceneAreaRsp& operator=(GetSceneAreaRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSceneAreaRsp& default_instance();

  static inline const GetSceneAreaRsp* internal_default_instance() {
    return reinterpret_cast<const GetSceneAreaRsp*>(
               &_GetSceneAreaRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(GetSceneAreaRsp* other);
  friend void swap(GetSceneAreaRsp& a, GetSceneAreaRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetSceneAreaRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetSceneAreaRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetSceneAreaRsp& from);
  void MergeFrom(const GetSceneAreaRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetSceneAreaRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 area_id_list = 9;
  int area_id_list_size() const;
  void clear_area_id_list();
  static const int kAreaIdListFieldNumber = 9;
  ::google::protobuf::uint32 area_id_list(int index) const;
  void set_area_id_list(int index, ::google::protobuf::uint32 value);
  void add_area_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      area_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_area_id_list();

  // repeated .proto.CityInfo city_info_list = 13;
  int city_info_list_size() const;
  void clear_city_info_list();
  static const int kCityInfoListFieldNumber = 13;
  const ::proto::CityInfo& city_info_list(int index) const;
  ::proto::CityInfo* mutable_city_info_list(int index);
  ::proto::CityInfo* add_city_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::CityInfo >*
      mutable_city_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::CityInfo >&
      city_info_list() const;

  // int32 retcode = 7;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 7;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 scene_id = 15;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 15;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetSceneAreaRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > area_id_list_;
  mutable int _area_id_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::CityInfo > city_info_list_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneAreaUnlockNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneAreaUnlockNotify) */ {
 public:
  SceneAreaUnlockNotify();
  virtual ~SceneAreaUnlockNotify();

  SceneAreaUnlockNotify(const SceneAreaUnlockNotify& from);

  inline SceneAreaUnlockNotify& operator=(const SceneAreaUnlockNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneAreaUnlockNotify(SceneAreaUnlockNotify&& from) noexcept
    : SceneAreaUnlockNotify() {
    *this = ::std::move(from);
  }

  inline SceneAreaUnlockNotify& operator=(SceneAreaUnlockNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneAreaUnlockNotify& default_instance();

  static inline const SceneAreaUnlockNotify* internal_default_instance() {
    return reinterpret_cast<const SceneAreaUnlockNotify*>(
               &_SceneAreaUnlockNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(SceneAreaUnlockNotify* other);
  friend void swap(SceneAreaUnlockNotify& a, SceneAreaUnlockNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneAreaUnlockNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneAreaUnlockNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneAreaUnlockNotify& from);
  void MergeFrom(const SceneAreaUnlockNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneAreaUnlockNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 area_list = 10;
  int area_list_size() const;
  void clear_area_list();
  static const int kAreaListFieldNumber = 10;
  ::google::protobuf::uint32 area_list(int index) const;
  void set_area_list(int index, ::google::protobuf::uint32 value);
  void add_area_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      area_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_area_list();

  // uint32 scene_id = 9;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 9;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneAreaUnlockNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > area_list_;
  mutable int _area_list_cached_byte_size_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneEntityDrownReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEntityDrownReq) */ {
 public:
  SceneEntityDrownReq();
  virtual ~SceneEntityDrownReq();

  SceneEntityDrownReq(const SceneEntityDrownReq& from);

  inline SceneEntityDrownReq& operator=(const SceneEntityDrownReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEntityDrownReq(SceneEntityDrownReq&& from) noexcept
    : SceneEntityDrownReq() {
    *this = ::std::move(from);
  }

  inline SceneEntityDrownReq& operator=(SceneEntityDrownReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEntityDrownReq& default_instance();

  static inline const SceneEntityDrownReq* internal_default_instance() {
    return reinterpret_cast<const SceneEntityDrownReq*>(
               &_SceneEntityDrownReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(SceneEntityDrownReq* other);
  friend void swap(SceneEntityDrownReq& a, SceneEntityDrownReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEntityDrownReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEntityDrownReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEntityDrownReq& from);
  void MergeFrom(const SceneEntityDrownReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEntityDrownReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 entity_id = 10;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 10;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneEntityDrownReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneEntityDrownRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEntityDrownRsp) */ {
 public:
  SceneEntityDrownRsp();
  virtual ~SceneEntityDrownRsp();

  SceneEntityDrownRsp(const SceneEntityDrownRsp& from);

  inline SceneEntityDrownRsp& operator=(const SceneEntityDrownRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEntityDrownRsp(SceneEntityDrownRsp&& from) noexcept
    : SceneEntityDrownRsp() {
    *this = ::std::move(from);
  }

  inline SceneEntityDrownRsp& operator=(SceneEntityDrownRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEntityDrownRsp& default_instance();

  static inline const SceneEntityDrownRsp* internal_default_instance() {
    return reinterpret_cast<const SceneEntityDrownRsp*>(
               &_SceneEntityDrownRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(SceneEntityDrownRsp* other);
  friend void swap(SceneEntityDrownRsp& a, SceneEntityDrownRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEntityDrownRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEntityDrownRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEntityDrownRsp& from);
  void MergeFrom(const SceneEntityDrownRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEntityDrownRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 8;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 8;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 entity_id = 11;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 11;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneEntityDrownRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneCreateEntityReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneCreateEntityReq) */ {
 public:
  SceneCreateEntityReq();
  virtual ~SceneCreateEntityReq();

  SceneCreateEntityReq(const SceneCreateEntityReq& from);

  inline SceneCreateEntityReq& operator=(const SceneCreateEntityReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneCreateEntityReq(SceneCreateEntityReq&& from) noexcept
    : SceneCreateEntityReq() {
    *this = ::std::move(from);
  }

  inline SceneCreateEntityReq& operator=(SceneCreateEntityReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneCreateEntityReq& default_instance();

  static inline const SceneCreateEntityReq* internal_default_instance() {
    return reinterpret_cast<const SceneCreateEntityReq*>(
               &_SceneCreateEntityReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(SceneCreateEntityReq* other);
  friend void swap(SceneCreateEntityReq& a, SceneCreateEntityReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneCreateEntityReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneCreateEntityReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneCreateEntityReq& from);
  void MergeFrom(const SceneCreateEntityReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneCreateEntityReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.CreateEntityInfo entity = 1;
  bool has_entity() const;
  void clear_entity();
  static const int kEntityFieldNumber = 1;
  const ::proto::CreateEntityInfo& entity() const;
  ::proto::CreateEntityInfo* mutable_entity();
  ::proto::CreateEntityInfo* release_entity();
  void set_allocated_entity(::proto::CreateEntityInfo* entity);

  // .proto.CreateReason reason = 3;
  void clear_reason();
  static const int kReasonFieldNumber = 3;
  ::proto::CreateReason reason() const;
  void set_reason(::proto::CreateReason value);

  // bool is_destroy_when_disconnect = 10;
  void clear_is_destroy_when_disconnect();
  static const int kIsDestroyWhenDisconnectFieldNumber = 10;
  bool is_destroy_when_disconnect() const;
  void set_is_destroy_when_disconnect(bool value);

  // @@protoc_insertion_point(class_scope:proto.SceneCreateEntityReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::CreateEntityInfo* entity_;
  int reason_;
  bool is_destroy_when_disconnect_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneCreateEntityRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneCreateEntityRsp) */ {
 public:
  SceneCreateEntityRsp();
  virtual ~SceneCreateEntityRsp();

  SceneCreateEntityRsp(const SceneCreateEntityRsp& from);

  inline SceneCreateEntityRsp& operator=(const SceneCreateEntityRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneCreateEntityRsp(SceneCreateEntityRsp&& from) noexcept
    : SceneCreateEntityRsp() {
    *this = ::std::move(from);
  }

  inline SceneCreateEntityRsp& operator=(SceneCreateEntityRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneCreateEntityRsp& default_instance();

  static inline const SceneCreateEntityRsp* internal_default_instance() {
    return reinterpret_cast<const SceneCreateEntityRsp*>(
               &_SceneCreateEntityRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(SceneCreateEntityRsp* other);
  friend void swap(SceneCreateEntityRsp& a, SceneCreateEntityRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneCreateEntityRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneCreateEntityRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneCreateEntityRsp& from);
  void MergeFrom(const SceneCreateEntityRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneCreateEntityRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.CreateEntityInfo entity = 10;
  bool has_entity() const;
  void clear_entity();
  static const int kEntityFieldNumber = 10;
  const ::proto::CreateEntityInfo& entity() const;
  ::proto::CreateEntityInfo* mutable_entity();
  ::proto::CreateEntityInfo* release_entity();
  void set_allocated_entity(::proto::CreateEntityInfo* entity);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // int32 retcode = 14;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 14;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneCreateEntityRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::CreateEntityInfo* entity_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneDestroyEntityReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneDestroyEntityReq) */ {
 public:
  SceneDestroyEntityReq();
  virtual ~SceneDestroyEntityReq();

  SceneDestroyEntityReq(const SceneDestroyEntityReq& from);

  inline SceneDestroyEntityReq& operator=(const SceneDestroyEntityReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneDestroyEntityReq(SceneDestroyEntityReq&& from) noexcept
    : SceneDestroyEntityReq() {
    *this = ::std::move(from);
  }

  inline SceneDestroyEntityReq& operator=(SceneDestroyEntityReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneDestroyEntityReq& default_instance();

  static inline const SceneDestroyEntityReq* internal_default_instance() {
    return reinterpret_cast<const SceneDestroyEntityReq*>(
               &_SceneDestroyEntityReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(SceneDestroyEntityReq* other);
  friend void swap(SceneDestroyEntityReq& a, SceneDestroyEntityReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneDestroyEntityReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneDestroyEntityReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneDestroyEntityReq& from);
  void MergeFrom(const SceneDestroyEntityReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneDestroyEntityReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 entity_id = 7;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 7;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneDestroyEntityReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneDestroyEntityRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneDestroyEntityRsp) */ {
 public:
  SceneDestroyEntityRsp();
  virtual ~SceneDestroyEntityRsp();

  SceneDestroyEntityRsp(const SceneDestroyEntityRsp& from);

  inline SceneDestroyEntityRsp& operator=(const SceneDestroyEntityRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneDestroyEntityRsp(SceneDestroyEntityRsp&& from) noexcept
    : SceneDestroyEntityRsp() {
    *this = ::std::move(from);
  }

  inline SceneDestroyEntityRsp& operator=(SceneDestroyEntityRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneDestroyEntityRsp& default_instance();

  static inline const SceneDestroyEntityRsp* internal_default_instance() {
    return reinterpret_cast<const SceneDestroyEntityRsp*>(
               &_SceneDestroyEntityRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(SceneDestroyEntityRsp* other);
  friend void swap(SceneDestroyEntityRsp& a, SceneDestroyEntityRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneDestroyEntityRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneDestroyEntityRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneDestroyEntityRsp& from);
  void MergeFrom(const SceneDestroyEntityRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneDestroyEntityRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 entity_id = 7;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 7;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // int32 retcode = 14;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 14;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneDestroyEntityRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneForceUnlockNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneForceUnlockNotify) */ {
 public:
  SceneForceUnlockNotify();
  virtual ~SceneForceUnlockNotify();

  SceneForceUnlockNotify(const SceneForceUnlockNotify& from);

  inline SceneForceUnlockNotify& operator=(const SceneForceUnlockNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneForceUnlockNotify(SceneForceUnlockNotify&& from) noexcept
    : SceneForceUnlockNotify() {
    *this = ::std::move(from);
  }

  inline SceneForceUnlockNotify& operator=(SceneForceUnlockNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneForceUnlockNotify& default_instance();

  static inline const SceneForceUnlockNotify* internal_default_instance() {
    return reinterpret_cast<const SceneForceUnlockNotify*>(
               &_SceneForceUnlockNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(SceneForceUnlockNotify* other);
  friend void swap(SceneForceUnlockNotify& a, SceneForceUnlockNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneForceUnlockNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneForceUnlockNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneForceUnlockNotify& from);
  void MergeFrom(const SceneForceUnlockNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneForceUnlockNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 force_id_list = 2;
  int force_id_list_size() const;
  void clear_force_id_list();
  static const int kForceIdListFieldNumber = 2;
  ::google::protobuf::uint32 force_id_list(int index) const;
  void set_force_id_list(int index, ::google::protobuf::uint32 value);
  void add_force_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      force_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_force_id_list();

  // bool is_add = 10;
  void clear_is_add();
  static const int kIsAddFieldNumber = 10;
  bool is_add() const;
  void set_is_add(bool value);

  // @@protoc_insertion_point(class_scope:proto.SceneForceUnlockNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > force_id_list_;
  mutable int _force_id_list_cached_byte_size_;
  bool is_add_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneForceLockNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneForceLockNotify) */ {
 public:
  SceneForceLockNotify();
  virtual ~SceneForceLockNotify();

  SceneForceLockNotify(const SceneForceLockNotify& from);

  inline SceneForceLockNotify& operator=(const SceneForceLockNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneForceLockNotify(SceneForceLockNotify&& from) noexcept
    : SceneForceLockNotify() {
    *this = ::std::move(from);
  }

  inline SceneForceLockNotify& operator=(SceneForceLockNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneForceLockNotify& default_instance();

  static inline const SceneForceLockNotify* internal_default_instance() {
    return reinterpret_cast<const SceneForceLockNotify*>(
               &_SceneForceLockNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(SceneForceLockNotify* other);
  friend void swap(SceneForceLockNotify& a, SceneForceLockNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneForceLockNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneForceLockNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneForceLockNotify& from);
  void MergeFrom(const SceneForceLockNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneForceLockNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 force_id_list = 9;
  int force_id_list_size() const;
  void clear_force_id_list();
  static const int kForceIdListFieldNumber = 9;
  ::google::protobuf::uint32 force_id_list(int index) const;
  void set_force_id_list(int index, ::google::protobuf::uint32 value);
  void add_force_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      force_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_force_id_list();

  // @@protoc_insertion_point(class_scope:proto.SceneForceLockNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > force_id_list_;
  mutable int _force_id_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterWorldAreaReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EnterWorldAreaReq) */ {
 public:
  EnterWorldAreaReq();
  virtual ~EnterWorldAreaReq();

  EnterWorldAreaReq(const EnterWorldAreaReq& from);

  inline EnterWorldAreaReq& operator=(const EnterWorldAreaReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterWorldAreaReq(EnterWorldAreaReq&& from) noexcept
    : EnterWorldAreaReq() {
    *this = ::std::move(from);
  }

  inline EnterWorldAreaReq& operator=(EnterWorldAreaReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterWorldAreaReq& default_instance();

  static inline const EnterWorldAreaReq* internal_default_instance() {
    return reinterpret_cast<const EnterWorldAreaReq*>(
               &_EnterWorldAreaReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(EnterWorldAreaReq* other);
  friend void swap(EnterWorldAreaReq& a, EnterWorldAreaReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterWorldAreaReq* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterWorldAreaReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterWorldAreaReq& from);
  void MergeFrom(const EnterWorldAreaReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterWorldAreaReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 area_id = 1;
  void clear_area_id();
  static const int kAreaIdFieldNumber = 1;
  ::google::protobuf::uint32 area_id() const;
  void set_area_id(::google::protobuf::uint32 value);

  // uint32 area_type = 8;
  void clear_area_type();
  static const int kAreaTypeFieldNumber = 8;
  ::google::protobuf::uint32 area_type() const;
  void set_area_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EnterWorldAreaReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 area_id_;
  ::google::protobuf::uint32 area_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterWorldAreaRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EnterWorldAreaRsp) */ {
 public:
  EnterWorldAreaRsp();
  virtual ~EnterWorldAreaRsp();

  EnterWorldAreaRsp(const EnterWorldAreaRsp& from);

  inline EnterWorldAreaRsp& operator=(const EnterWorldAreaRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterWorldAreaRsp(EnterWorldAreaRsp&& from) noexcept
    : EnterWorldAreaRsp() {
    *this = ::std::move(from);
  }

  inline EnterWorldAreaRsp& operator=(EnterWorldAreaRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterWorldAreaRsp& default_instance();

  static inline const EnterWorldAreaRsp* internal_default_instance() {
    return reinterpret_cast<const EnterWorldAreaRsp*>(
               &_EnterWorldAreaRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(EnterWorldAreaRsp* other);
  friend void swap(EnterWorldAreaRsp& a, EnterWorldAreaRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterWorldAreaRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterWorldAreaRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterWorldAreaRsp& from);
  void MergeFrom(const EnterWorldAreaRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterWorldAreaRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 area_type = 1;
  void clear_area_type();
  static const int kAreaTypeFieldNumber = 1;
  ::google::protobuf::uint32 area_type() const;
  void set_area_type(::google::protobuf::uint32 value);

  // uint32 area_id = 7;
  void clear_area_id();
  static const int kAreaIdFieldNumber = 7;
  ::google::protobuf::uint32 area_id() const;
  void set_area_id(::google::protobuf::uint32 value);

  // int32 retcode = 9;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 9;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.EnterWorldAreaRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 area_type_;
  ::google::protobuf::uint32 area_id_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityForceSyncReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityForceSyncReq) */ {
 public:
  EntityForceSyncReq();
  virtual ~EntityForceSyncReq();

  EntityForceSyncReq(const EntityForceSyncReq& from);

  inline EntityForceSyncReq& operator=(const EntityForceSyncReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityForceSyncReq(EntityForceSyncReq&& from) noexcept
    : EntityForceSyncReq() {
    *this = ::std::move(from);
  }

  inline EntityForceSyncReq& operator=(EntityForceSyncReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityForceSyncReq& default_instance();

  static inline const EntityForceSyncReq* internal_default_instance() {
    return reinterpret_cast<const EntityForceSyncReq*>(
               &_EntityForceSyncReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(EntityForceSyncReq* other);
  friend void swap(EntityForceSyncReq& a, EntityForceSyncReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityForceSyncReq* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityForceSyncReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityForceSyncReq& from);
  void MergeFrom(const EntityForceSyncReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityForceSyncReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.MotionInfo motion_info = 11;
  bool has_motion_info() const;
  void clear_motion_info();
  static const int kMotionInfoFieldNumber = 11;
  const ::proto::MotionInfo& motion_info() const;
  ::proto::MotionInfo* mutable_motion_info();
  ::proto::MotionInfo* release_motion_info();
  void set_allocated_motion_info(::proto::MotionInfo* motion_info);

  // uint32 entity_id = 13;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 13;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // uint32 scene_time = 12;
  void clear_scene_time();
  static const int kSceneTimeFieldNumber = 12;
  ::google::protobuf::uint32 scene_time() const;
  void set_scene_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EntityForceSyncReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MotionInfo* motion_info_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 scene_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityForceSyncRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityForceSyncRsp) */ {
 public:
  EntityForceSyncRsp();
  virtual ~EntityForceSyncRsp();

  EntityForceSyncRsp(const EntityForceSyncRsp& from);

  inline EntityForceSyncRsp& operator=(const EntityForceSyncRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityForceSyncRsp(EntityForceSyncRsp&& from) noexcept
    : EntityForceSyncRsp() {
    *this = ::std::move(from);
  }

  inline EntityForceSyncRsp& operator=(EntityForceSyncRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityForceSyncRsp& default_instance();

  static inline const EntityForceSyncRsp* internal_default_instance() {
    return reinterpret_cast<const EntityForceSyncRsp*>(
               &_EntityForceSyncRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(EntityForceSyncRsp* other);
  friend void swap(EntityForceSyncRsp& a, EntityForceSyncRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityForceSyncRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityForceSyncRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityForceSyncRsp& from);
  void MergeFrom(const EntityForceSyncRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityForceSyncRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.MotionInfo fail_motion = 8;
  bool has_fail_motion() const;
  void clear_fail_motion();
  static const int kFailMotionFieldNumber = 8;
  const ::proto::MotionInfo& fail_motion() const;
  ::proto::MotionInfo* mutable_fail_motion();
  ::proto::MotionInfo* release_fail_motion();
  void set_allocated_fail_motion(::proto::MotionInfo* fail_motion);

  // int32 retcode = 4;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 4;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 entity_id = 6;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 6;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 scene_time = 14;
  void clear_scene_time();
  static const int kSceneTimeFieldNumber = 14;
  ::google::protobuf::uint32 scene_time() const;
  void set_scene_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EntityForceSyncRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MotionInfo* fail_motion_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 scene_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAreaExplorePointReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetAreaExplorePointReq) */ {
 public:
  GetAreaExplorePointReq();
  virtual ~GetAreaExplorePointReq();

  GetAreaExplorePointReq(const GetAreaExplorePointReq& from);

  inline GetAreaExplorePointReq& operator=(const GetAreaExplorePointReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetAreaExplorePointReq(GetAreaExplorePointReq&& from) noexcept
    : GetAreaExplorePointReq() {
    *this = ::std::move(from);
  }

  inline GetAreaExplorePointReq& operator=(GetAreaExplorePointReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAreaExplorePointReq& default_instance();

  static inline const GetAreaExplorePointReq* internal_default_instance() {
    return reinterpret_cast<const GetAreaExplorePointReq*>(
               &_GetAreaExplorePointReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(GetAreaExplorePointReq* other);
  friend void swap(GetAreaExplorePointReq& a, GetAreaExplorePointReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetAreaExplorePointReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAreaExplorePointReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAreaExplorePointReq& from);
  void MergeFrom(const GetAreaExplorePointReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAreaExplorePointReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 area_id_list = 14;
  int area_id_list_size() const;
  void clear_area_id_list();
  static const int kAreaIdListFieldNumber = 14;
  ::google::protobuf::uint32 area_id_list(int index) const;
  void set_area_id_list(int index, ::google::protobuf::uint32 value);
  void add_area_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      area_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_area_id_list();

  // @@protoc_insertion_point(class_scope:proto.GetAreaExplorePointReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > area_id_list_;
  mutable int _area_id_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAreaExplorePointRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetAreaExplorePointRsp) */ {
 public:
  GetAreaExplorePointRsp();
  virtual ~GetAreaExplorePointRsp();

  GetAreaExplorePointRsp(const GetAreaExplorePointRsp& from);

  inline GetAreaExplorePointRsp& operator=(const GetAreaExplorePointRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetAreaExplorePointRsp(GetAreaExplorePointRsp&& from) noexcept
    : GetAreaExplorePointRsp() {
    *this = ::std::move(from);
  }

  inline GetAreaExplorePointRsp& operator=(GetAreaExplorePointRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAreaExplorePointRsp& default_instance();

  static inline const GetAreaExplorePointRsp* internal_default_instance() {
    return reinterpret_cast<const GetAreaExplorePointRsp*>(
               &_GetAreaExplorePointRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(GetAreaExplorePointRsp* other);
  friend void swap(GetAreaExplorePointRsp& a, GetAreaExplorePointRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetAreaExplorePointRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAreaExplorePointRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAreaExplorePointRsp& from);
  void MergeFrom(const GetAreaExplorePointRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAreaExplorePointRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 explore_point_list = 4;
  int explore_point_list_size() const;
  void clear_explore_point_list();
  static const int kExplorePointListFieldNumber = 4;
  ::google::protobuf::uint32 explore_point_list(int index) const;
  void set_explore_point_list(int index, ::google::protobuf::uint32 value);
  void add_explore_point_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      explore_point_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_explore_point_list();

  // repeated uint32 area_id_list = 11;
  int area_id_list_size() const;
  void clear_area_id_list();
  static const int kAreaIdListFieldNumber = 11;
  ::google::protobuf::uint32 area_id_list(int index) const;
  void set_area_id_list(int index, ::google::protobuf::uint32 value);
  void add_area_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      area_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_area_id_list();

  // int32 retcode = 8;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 8;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetAreaExplorePointRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > explore_point_list_;
  mutable int _explore_point_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > area_id_list_;
  mutable int _area_id_list_cached_byte_size_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientTransmitReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClientTransmitReq) */ {
 public:
  ClientTransmitReq();
  virtual ~ClientTransmitReq();

  ClientTransmitReq(const ClientTransmitReq& from);

  inline ClientTransmitReq& operator=(const ClientTransmitReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientTransmitReq(ClientTransmitReq&& from) noexcept
    : ClientTransmitReq() {
    *this = ::std::move(from);
  }

  inline ClientTransmitReq& operator=(ClientTransmitReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientTransmitReq& default_instance();

  static inline const ClientTransmitReq* internal_default_instance() {
    return reinterpret_cast<const ClientTransmitReq*>(
               &_ClientTransmitReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(ClientTransmitReq* other);
  friend void swap(ClientTransmitReq& a, ClientTransmitReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientTransmitReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientTransmitReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientTransmitReq& from);
  void MergeFrom(const ClientTransmitReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientTransmitReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // .proto.Vector rot = 9;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 9;
  const ::proto::Vector& rot() const;
  ::proto::Vector* mutable_rot();
  ::proto::Vector* release_rot();
  void set_allocated_rot(::proto::Vector* rot);

  // uint32 scene_id = 2;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 2;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // .proto.TransmitReason reason = 14;
  void clear_reason();
  static const int kReasonFieldNumber = 14;
  ::proto::TransmitReason reason() const;
  void set_reason(::proto::TransmitReason value);

  // @@protoc_insertion_point(class_scope:proto.ClientTransmitReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::proto::Vector* rot_;
  ::google::protobuf::uint32 scene_id_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientTransmitRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClientTransmitRsp) */ {
 public:
  ClientTransmitRsp();
  virtual ~ClientTransmitRsp();

  ClientTransmitRsp(const ClientTransmitRsp& from);

  inline ClientTransmitRsp& operator=(const ClientTransmitRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientTransmitRsp(ClientTransmitRsp&& from) noexcept
    : ClientTransmitRsp() {
    *this = ::std::move(from);
  }

  inline ClientTransmitRsp& operator=(ClientTransmitRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientTransmitRsp& default_instance();

  static inline const ClientTransmitRsp* internal_default_instance() {
    return reinterpret_cast<const ClientTransmitRsp*>(
               &_ClientTransmitRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(ClientTransmitRsp* other);
  friend void swap(ClientTransmitRsp& a, ClientTransmitRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientTransmitRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientTransmitRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientTransmitRsp& from);
  void MergeFrom(const ClientTransmitRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientTransmitRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.TransmitReason reason = 3;
  void clear_reason();
  static const int kReasonFieldNumber = 3;
  ::proto::TransmitReason reason() const;
  void set_reason(::proto::TransmitReason value);

  // int32 retcode = 9;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 9;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ClientTransmitRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int reason_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterSceneWeatherAreaNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EnterSceneWeatherAreaNotify) */ {
 public:
  EnterSceneWeatherAreaNotify();
  virtual ~EnterSceneWeatherAreaNotify();

  EnterSceneWeatherAreaNotify(const EnterSceneWeatherAreaNotify& from);

  inline EnterSceneWeatherAreaNotify& operator=(const EnterSceneWeatherAreaNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterSceneWeatherAreaNotify(EnterSceneWeatherAreaNotify&& from) noexcept
    : EnterSceneWeatherAreaNotify() {
    *this = ::std::move(from);
  }

  inline EnterSceneWeatherAreaNotify& operator=(EnterSceneWeatherAreaNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterSceneWeatherAreaNotify& default_instance();

  static inline const EnterSceneWeatherAreaNotify* internal_default_instance() {
    return reinterpret_cast<const EnterSceneWeatherAreaNotify*>(
               &_EnterSceneWeatherAreaNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(EnterSceneWeatherAreaNotify* other);
  friend void swap(EnterSceneWeatherAreaNotify& a, EnterSceneWeatherAreaNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterSceneWeatherAreaNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterSceneWeatherAreaNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterSceneWeatherAreaNotify& from);
  void MergeFrom(const EnterSceneWeatherAreaNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterSceneWeatherAreaNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 weather_gadget_id = 13;
  void clear_weather_gadget_id();
  static const int kWeatherGadgetIdFieldNumber = 13;
  ::google::protobuf::uint32 weather_gadget_id() const;
  void set_weather_gadget_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EnterSceneWeatherAreaNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 weather_gadget_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExitSceneWeatherAreaNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ExitSceneWeatherAreaNotify) */ {
 public:
  ExitSceneWeatherAreaNotify();
  virtual ~ExitSceneWeatherAreaNotify();

  ExitSceneWeatherAreaNotify(const ExitSceneWeatherAreaNotify& from);

  inline ExitSceneWeatherAreaNotify& operator=(const ExitSceneWeatherAreaNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExitSceneWeatherAreaNotify(ExitSceneWeatherAreaNotify&& from) noexcept
    : ExitSceneWeatherAreaNotify() {
    *this = ::std::move(from);
  }

  inline ExitSceneWeatherAreaNotify& operator=(ExitSceneWeatherAreaNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitSceneWeatherAreaNotify& default_instance();

  static inline const ExitSceneWeatherAreaNotify* internal_default_instance() {
    return reinterpret_cast<const ExitSceneWeatherAreaNotify*>(
               &_ExitSceneWeatherAreaNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(ExitSceneWeatherAreaNotify* other);
  friend void swap(ExitSceneWeatherAreaNotify& a, ExitSceneWeatherAreaNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExitSceneWeatherAreaNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ExitSceneWeatherAreaNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExitSceneWeatherAreaNotify& from);
  void MergeFrom(const ExitSceneWeatherAreaNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExitSceneWeatherAreaNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 weather_gadget_id = 2;
  void clear_weather_gadget_id();
  static const int kWeatherGadgetIdFieldNumber = 2;
  ::google::protobuf::uint32 weather_gadget_id() const;
  void set_weather_gadget_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ExitSceneWeatherAreaNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 weather_gadget_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class SceneAreaWeatherNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneAreaWeatherNotify) */ {
 public:
  SceneAreaWeatherNotify();
  virtual ~SceneAreaWeatherNotify();

  SceneAreaWeatherNotify(const SceneAreaWeatherNotify& from);

  inline SceneAreaWeatherNotify& operator=(const SceneAreaWeatherNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneAreaWeatherNotify(SceneAreaWeatherNotify&& from) noexcept
    : SceneAreaWeatherNotify() {
    *this = ::std::move(from);
  }

  inline SceneAreaWeatherNotify& operator=(SceneAreaWeatherNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneAreaWeatherNotify& default_instance();

  static inline const SceneAreaWeatherNotify* internal_default_instance() {
    return reinterpret_cast<const SceneAreaWeatherNotify*>(
               &_SceneAreaWeatherNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(SceneAreaWeatherNotify* other);
  friend void swap(SceneAreaWeatherNotify& a, SceneAreaWeatherNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneAreaWeatherNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneAreaWeatherNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneAreaWeatherNotify& from);
  void MergeFrom(const SceneAreaWeatherNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneAreaWeatherNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, string> weather_value_map = 10;
  int weather_value_map_size() const;
  void clear_weather_value_map();
  static const int kWeatherValueMapFieldNumber = 10;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >&
      weather_value_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >*
      mutable_weather_value_map();

  // uint32 weather_area_id = 1;
  void clear_weather_area_id();
  static const int kWeatherAreaIdFieldNumber = 1;
  ::google::protobuf::uint32 weather_area_id() const;
  void set_weather_area_id(::google::protobuf::uint32 value);

  // uint32 weather_gadget_id = 9;
  void clear_weather_gadget_id();
  static const int kWeatherGadgetIdFieldNumber = 9;
  ::google::protobuf::uint32 weather_gadget_id() const;
  void set_weather_gadget_id(::google::protobuf::uint32 value);

  // uint32 climate_type = 14;
  void clear_climate_type();
  static const int kClimateTypeFieldNumber = 14;
  ::google::protobuf::uint32 climate_type() const;
  void set_climate_type(::google::protobuf::uint32 value);

  // float trans_duration = 15;
  void clear_trans_duration();
  static const int kTransDurationFieldNumber = 15;
  float trans_duration() const;
  void set_trans_duration(float value);

  // @@protoc_insertion_point(class_scope:proto.SceneAreaWeatherNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class SceneAreaWeatherNotify_WeatherValueMapEntry : public ::google::protobuf::internal::MapEntry<SceneAreaWeatherNotify_WeatherValueMapEntry, 
      ::google::protobuf::uint32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneAreaWeatherNotify_WeatherValueMapEntry, 
      ::google::protobuf::uint32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > SuperType;
    SceneAreaWeatherNotify_WeatherValueMapEntry();
    SceneAreaWeatherNotify_WeatherValueMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneAreaWeatherNotify_WeatherValueMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneAreaWeatherNotify_WeatherValueMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneAreaWeatherNotify_WeatherValueMapEntry,
      ::google::protobuf::uint32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > weather_value_map_;
  private:
  ::google::protobuf::uint32 weather_area_id_;
  ::google::protobuf::uint32 weather_gadget_id_;
  ::google::protobuf::uint32 climate_type_;
  float trans_duration_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScenePlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ScenePlayerInfo) */ {
 public:
  ScenePlayerInfo();
  virtual ~ScenePlayerInfo();

  ScenePlayerInfo(const ScenePlayerInfo& from);

  inline ScenePlayerInfo& operator=(const ScenePlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScenePlayerInfo(ScenePlayerInfo&& from) noexcept
    : ScenePlayerInfo() {
    *this = ::std::move(from);
  }

  inline ScenePlayerInfo& operator=(ScenePlayerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenePlayerInfo& default_instance();

  static inline const ScenePlayerInfo* internal_default_instance() {
    return reinterpret_cast<const ScenePlayerInfo*>(
               &_ScenePlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(ScenePlayerInfo* other);
  friend void swap(ScenePlayerInfo& a, ScenePlayerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScenePlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ScenePlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScenePlayerInfo& from);
  void MergeFrom(const ScenePlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScenePlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 15;
  void clear_name();
  static const int kNameFieldNumber = 15;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .proto.OnlinePlayerInfo online_player_info = 13;
  bool has_online_player_info() const;
  void clear_online_player_info();
  static const int kOnlinePlayerInfoFieldNumber = 13;
  const ::proto::OnlinePlayerInfo& online_player_info() const;
  ::proto::OnlinePlayerInfo* mutable_online_player_info();
  ::proto::OnlinePlayerInfo* release_online_player_info();
  void set_allocated_online_player_info(::proto::OnlinePlayerInfo* online_player_info);

  // bool is_connected = 2;
  void clear_is_connected();
  static const int kIsConnectedFieldNumber = 2;
  bool is_connected() const;
  void set_is_connected(bool value);

  // uint32 peer_id = 6;
  void clear_peer_id();
  static const int kPeerIdFieldNumber = 6;
  ::google::protobuf::uint32 peer_id() const;
  void set_peer_id(::google::protobuf::uint32 value);

  // uint32 uid = 8;
  void clear_uid();
  static const int kUidFieldNumber = 8;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 scene_id = 10;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 10;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ScenePlayerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::proto::OnlinePlayerInfo* online_player_info_;
  bool is_connected_;
  ::google::protobuf::uint32 peer_id_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScenePlayerInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ScenePlayerInfoNotify) */ {
 public:
  ScenePlayerInfoNotify();
  virtual ~ScenePlayerInfoNotify();

  ScenePlayerInfoNotify(const ScenePlayerInfoNotify& from);

  inline ScenePlayerInfoNotify& operator=(const ScenePlayerInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScenePlayerInfoNotify(ScenePlayerInfoNotify&& from) noexcept
    : ScenePlayerInfoNotify() {
    *this = ::std::move(from);
  }

  inline ScenePlayerInfoNotify& operator=(ScenePlayerInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenePlayerInfoNotify& default_instance();

  static inline const ScenePlayerInfoNotify* internal_default_instance() {
    return reinterpret_cast<const ScenePlayerInfoNotify*>(
               &_ScenePlayerInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(ScenePlayerInfoNotify* other);
  friend void swap(ScenePlayerInfoNotify& a, ScenePlayerInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScenePlayerInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ScenePlayerInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScenePlayerInfoNotify& from);
  void MergeFrom(const ScenePlayerInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScenePlayerInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ScenePlayerInfo player_info_list = 5;
  int player_info_list_size() const;
  void clear_player_info_list();
  static const int kPlayerInfoListFieldNumber = 5;
  const ::proto::ScenePlayerInfo& player_info_list(int index) const;
  ::proto::ScenePlayerInfo* mutable_player_info_list(int index);
  ::proto::ScenePlayerInfo* add_player_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ScenePlayerInfo >*
      mutable_player_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ScenePlayerInfo >&
      player_info_list() const;

  // @@protoc_insertion_point(class_scope:proto.ScenePlayerInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ScenePlayerInfo > player_info_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerLocationInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerLocationInfo) */ {
 public:
  PlayerLocationInfo();
  virtual ~PlayerLocationInfo();

  PlayerLocationInfo(const PlayerLocationInfo& from);

  inline PlayerLocationInfo& operator=(const PlayerLocationInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLocationInfo(PlayerLocationInfo&& from) noexcept
    : PlayerLocationInfo() {
    *this = ::std::move(from);
  }

  inline PlayerLocationInfo& operator=(PlayerLocationInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLocationInfo& default_instance();

  static inline const PlayerLocationInfo* internal_default_instance() {
    return reinterpret_cast<const PlayerLocationInfo*>(
               &_PlayerLocationInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(PlayerLocationInfo* other);
  friend void swap(PlayerLocationInfo& a, PlayerLocationInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLocationInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerLocationInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerLocationInfo& from);
  void MergeFrom(const PlayerLocationInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerLocationInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 3;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 3;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // .proto.Vector rot = 13;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 13;
  const ::proto::Vector& rot() const;
  ::proto::Vector* mutable_rot();
  ::proto::Vector* release_rot();
  void set_allocated_rot(::proto::Vector* rot);

  // uint32 uid = 15;
  void clear_uid();
  static const int kUidFieldNumber = 15;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerLocationInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::proto::Vector* rot_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerWorldLocationInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerWorldLocationInfo) */ {
 public:
  PlayerWorldLocationInfo();
  virtual ~PlayerWorldLocationInfo();

  PlayerWorldLocationInfo(const PlayerWorldLocationInfo& from);

  inline PlayerWorldLocationInfo& operator=(const PlayerWorldLocationInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerWorldLocationInfo(PlayerWorldLocationInfo&& from) noexcept
    : PlayerWorldLocationInfo() {
    *this = ::std::move(from);
  }

  inline PlayerWorldLocationInfo& operator=(PlayerWorldLocationInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerWorldLocationInfo& default_instance();

  static inline const PlayerWorldLocationInfo* internal_default_instance() {
    return reinterpret_cast<const PlayerWorldLocationInfo*>(
               &_PlayerWorldLocationInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(PlayerWorldLocationInfo* other);
  friend void swap(PlayerWorldLocationInfo& a, PlayerWorldLocationInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerWorldLocationInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerWorldLocationInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerWorldLocationInfo& from);
  void MergeFrom(const PlayerWorldLocationInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerWorldLocationInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.PlayerLocationInfo player_loc = 12;
  bool has_player_loc() const;
  void clear_player_loc();
  static const int kPlayerLocFieldNumber = 12;
  const ::proto::PlayerLocationInfo& player_loc() const;
  ::proto::PlayerLocationInfo* mutable_player_loc();
  ::proto::PlayerLocationInfo* release_player_loc();
  void set_allocated_player_loc(::proto::PlayerLocationInfo* player_loc);

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerWorldLocationInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::PlayerLocationInfo* player_loc_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorldPlayerLocationNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WorldPlayerLocationNotify) */ {
 public:
  WorldPlayerLocationNotify();
  virtual ~WorldPlayerLocationNotify();

  WorldPlayerLocationNotify(const WorldPlayerLocationNotify& from);

  inline WorldPlayerLocationNotify& operator=(const WorldPlayerLocationNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldPlayerLocationNotify(WorldPlayerLocationNotify&& from) noexcept
    : WorldPlayerLocationNotify() {
    *this = ::std::move(from);
  }

  inline WorldPlayerLocationNotify& operator=(WorldPlayerLocationNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldPlayerLocationNotify& default_instance();

  static inline const WorldPlayerLocationNotify* internal_default_instance() {
    return reinterpret_cast<const WorldPlayerLocationNotify*>(
               &_WorldPlayerLocationNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(WorldPlayerLocationNotify* other);
  friend void swap(WorldPlayerLocationNotify& a, WorldPlayerLocationNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldPlayerLocationNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  WorldPlayerLocationNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorldPlayerLocationNotify& from);
  void MergeFrom(const WorldPlayerLocationNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorldPlayerLocationNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.PlayerWorldLocationInfo player_world_loc_list = 8;
  int player_world_loc_list_size() const;
  void clear_player_world_loc_list();
  static const int kPlayerWorldLocListFieldNumber = 8;
  const ::proto::PlayerWorldLocationInfo& player_world_loc_list(int index) const;
  ::proto::PlayerWorldLocationInfo* mutable_player_world_loc_list(int index);
  ::proto::PlayerWorldLocationInfo* add_player_world_loc_list();
  ::google::protobuf::RepeatedPtrField< ::proto::PlayerWorldLocationInfo >*
      mutable_player_world_loc_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::PlayerWorldLocationInfo >&
      player_world_loc_list() const;

  // repeated .proto.PlayerLocationInfo player_loc_list = 15;
  int player_loc_list_size() const;
  void clear_player_loc_list();
  static const int kPlayerLocListFieldNumber = 15;
  const ::proto::PlayerLocationInfo& player_loc_list(int index) const;
  ::proto::PlayerLocationInfo* mutable_player_loc_list(int index);
  ::proto::PlayerLocationInfo* add_player_loc_list();
  ::google::protobuf::RepeatedPtrField< ::proto::PlayerLocationInfo >*
      mutable_player_loc_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::PlayerLocationInfo >&
      player_loc_list() const;

  // @@protoc_insertion_point(class_scope:proto.WorldPlayerLocationNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::PlayerWorldLocationInfo > player_world_loc_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::PlayerLocationInfo > player_loc_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BeginCameraSceneLookNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BeginCameraSceneLookNotify) */ {
 public:
  BeginCameraSceneLookNotify();
  virtual ~BeginCameraSceneLookNotify();

  BeginCameraSceneLookNotify(const BeginCameraSceneLookNotify& from);

  inline BeginCameraSceneLookNotify& operator=(const BeginCameraSceneLookNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BeginCameraSceneLookNotify(BeginCameraSceneLookNotify&& from) noexcept
    : BeginCameraSceneLookNotify() {
    *this = ::std::move(from);
  }

  inline BeginCameraSceneLookNotify& operator=(BeginCameraSceneLookNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BeginCameraSceneLookNotify& default_instance();

  static inline const BeginCameraSceneLookNotify* internal_default_instance() {
    return reinterpret_cast<const BeginCameraSceneLookNotify*>(
               &_BeginCameraSceneLookNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(BeginCameraSceneLookNotify* other);
  friend void swap(BeginCameraSceneLookNotify& a, BeginCameraSceneLookNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BeginCameraSceneLookNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  BeginCameraSceneLookNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BeginCameraSceneLookNotify& from);
  void MergeFrom(const BeginCameraSceneLookNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BeginCameraSceneLookNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BeginCameraSceneLookNotify_KeepRotType KeepRotType;
  static const KeepRotType KEEP_ROT_X =
    BeginCameraSceneLookNotify_KeepRotType_KEEP_ROT_X;
  static const KeepRotType KEEP_ROT_XY =
    BeginCameraSceneLookNotify_KeepRotType_KEEP_ROT_XY;
  static inline bool KeepRotType_IsValid(int value) {
    return BeginCameraSceneLookNotify_KeepRotType_IsValid(value);
  }
  static const KeepRotType KeepRotType_MIN =
    BeginCameraSceneLookNotify_KeepRotType_KeepRotType_MIN;
  static const KeepRotType KeepRotType_MAX =
    BeginCameraSceneLookNotify_KeepRotType_KeepRotType_MAX;
  static const int KeepRotType_ARRAYSIZE =
    BeginCameraSceneLookNotify_KeepRotType_KeepRotType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  KeepRotType_descriptor() {
    return BeginCameraSceneLookNotify_KeepRotType_descriptor();
  }
  static inline const ::std::string& KeepRotType_Name(KeepRotType value) {
    return BeginCameraSceneLookNotify_KeepRotType_Name(value);
  }
  static inline bool KeepRotType_Parse(const ::std::string& name,
      KeepRotType* value) {
    return BeginCameraSceneLookNotify_KeepRotType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated string other_params = 1;
  int other_params_size() const;
  void clear_other_params();
  static const int kOtherParamsFieldNumber = 1;
  const ::std::string& other_params(int index) const;
  ::std::string* mutable_other_params(int index);
  void set_other_params(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_other_params(int index, ::std::string&& value);
  #endif
  void set_other_params(int index, const char* value);
  void set_other_params(int index, const char* value, size_t size);
  ::std::string* add_other_params();
  void add_other_params(const ::std::string& value);
  #if LANG_CXX11
  void add_other_params(::std::string&& value);
  #endif
  void add_other_params(const char* value);
  void add_other_params(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& other_params() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_other_params();

  // .proto.Vector look_pos = 4;
  bool has_look_pos() const;
  void clear_look_pos();
  static const int kLookPosFieldNumber = 4;
  const ::proto::Vector& look_pos() const;
  ::proto::Vector* mutable_look_pos();
  ::proto::Vector* release_look_pos();
  void set_allocated_look_pos(::proto::Vector* look_pos);

  // .proto.Vector follow_pos = 8;
  bool has_follow_pos() const;
  void clear_follow_pos();
  static const int kFollowPosFieldNumber = 8;
  const ::proto::Vector& follow_pos() const;
  ::proto::Vector* mutable_follow_pos();
  ::proto::Vector* release_follow_pos();
  void set_allocated_follow_pos(::proto::Vector* follow_pos);

  // float screen_x = 3;
  void clear_screen_x();
  static const int kScreenXFieldNumber = 3;
  float screen_x() const;
  void set_screen_x(float value);

  // .proto.BeginCameraSceneLookNotify.KeepRotType keep_rot_type = 6;
  void clear_keep_rot_type();
  static const int kKeepRotTypeFieldNumber = 6;
  ::proto::BeginCameraSceneLookNotify_KeepRotType keep_rot_type() const;
  void set_keep_rot_type(::proto::BeginCameraSceneLookNotify_KeepRotType value);

  // float custom_radius = 7;
  void clear_custom_radius();
  static const int kCustomRadiusFieldNumber = 7;
  float custom_radius() const;
  void set_custom_radius(float value);

  // bool is_set_follow_pos = 13;
  void clear_is_set_follow_pos();
  static const int kIsSetFollowPosFieldNumber = 13;
  bool is_set_follow_pos() const;
  void set_is_set_follow_pos(bool value);

  // bool is_force = 12;
  void clear_is_force();
  static const int kIsForceFieldNumber = 12;
  bool is_force() const;
  void set_is_force(bool value);

  // bool is_force_walk = 10;
  void clear_is_force_walk();
  static const int kIsForceWalkFieldNumber = 10;
  bool is_force_walk() const;
  void set_is_force_walk(bool value);

  // bool is_allow_input = 2;
  void clear_is_allow_input();
  static const int kIsAllowInputFieldNumber = 2;
  bool is_allow_input() const;
  void set_is_allow_input(bool value);

  // float duration = 14;
  void clear_duration();
  static const int kDurationFieldNumber = 14;
  float duration() const;
  void set_duration(float value);

  // float screen_y = 15;
  void clear_screen_y();
  static const int kScreenYFieldNumber = 15;
  float screen_y() const;
  void set_screen_y(float value);

  // float blend_duration = 1758;
  void clear_blend_duration();
  static const int kBlendDurationFieldNumber = 1758;
  float blend_duration() const;
  void set_blend_duration(float value);

  // bool is_set_screenXY = 5;
  void clear_is_set_screenxy();
  static const int kIsSetScreenXYFieldNumber = 5;
  bool is_set_screenxy() const;
  void set_is_set_screenxy(bool value);

  // bool is_recover_keep_current = 11;
  void clear_is_recover_keep_current();
  static const int kIsRecoverKeepCurrentFieldNumber = 11;
  bool is_recover_keep_current() const;
  void set_is_recover_keep_current(bool value);

  // bool is_abs_follow_pos = 1375;
  void clear_is_abs_follow_pos();
  static const int kIsAbsFollowPosFieldNumber = 1375;
  bool is_abs_follow_pos() const;
  void set_is_abs_follow_pos(bool value);

  // bool is_change_play_mode = 9;
  void clear_is_change_play_mode();
  static const int kIsChangePlayModeFieldNumber = 9;
  bool is_change_play_mode() const;
  void set_is_change_play_mode(bool value);

  // uint32 disable_protect = 1103;
  void clear_disable_protect();
  static const int kDisableProtectFieldNumber = 1103;
  ::google::protobuf::uint32 disable_protect() const;
  void set_disable_protect(::google::protobuf::uint32 value);

  // uint32 blend_type = 1154;
  void clear_blend_type();
  static const int kBlendTypeFieldNumber = 1154;
  ::google::protobuf::uint32 blend_type() const;
  void set_blend_type(::google::protobuf::uint32 value);

  // uint32 entity_id = 1327;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1327;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BeginCameraSceneLookNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> other_params_;
  ::proto::Vector* look_pos_;
  ::proto::Vector* follow_pos_;
  float screen_x_;
  int keep_rot_type_;
  float custom_radius_;
  bool is_set_follow_pos_;
  bool is_force_;
  bool is_force_walk_;
  bool is_allow_input_;
  float duration_;
  float screen_y_;
  float blend_duration_;
  bool is_set_screenxy_;
  bool is_recover_keep_current_;
  bool is_abs_follow_pos_;
  bool is_change_play_mode_;
  ::google::protobuf::uint32 disable_protect_;
  ::google::protobuf::uint32 blend_type_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EndCameraSceneLookNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EndCameraSceneLookNotify) */ {
 public:
  EndCameraSceneLookNotify();
  virtual ~EndCameraSceneLookNotify();

  EndCameraSceneLookNotify(const EndCameraSceneLookNotify& from);

  inline EndCameraSceneLookNotify& operator=(const EndCameraSceneLookNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EndCameraSceneLookNotify(EndCameraSceneLookNotify&& from) noexcept
    : EndCameraSceneLookNotify() {
    *this = ::std::move(from);
  }

  inline EndCameraSceneLookNotify& operator=(EndCameraSceneLookNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EndCameraSceneLookNotify& default_instance();

  static inline const EndCameraSceneLookNotify* internal_default_instance() {
    return reinterpret_cast<const EndCameraSceneLookNotify*>(
               &_EndCameraSceneLookNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(EndCameraSceneLookNotify* other);
  friend void swap(EndCameraSceneLookNotify& a, EndCameraSceneLookNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EndCameraSceneLookNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EndCameraSceneLookNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EndCameraSceneLookNotify& from);
  void MergeFrom(const EndCameraSceneLookNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EndCameraSceneLookNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.EndCameraSceneLookNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MarkEntityInMinMapNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MarkEntityInMinMapNotify) */ {
 public:
  MarkEntityInMinMapNotify();
  virtual ~MarkEntityInMinMapNotify();

  MarkEntityInMinMapNotify(const MarkEntityInMinMapNotify& from);

  inline MarkEntityInMinMapNotify& operator=(const MarkEntityInMinMapNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MarkEntityInMinMapNotify(MarkEntityInMinMapNotify&& from) noexcept
    : MarkEntityInMinMapNotify() {
    *this = ::std::move(from);
  }

  inline MarkEntityInMinMapNotify& operator=(MarkEntityInMinMapNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MarkEntityInMinMapNotify& default_instance();

  static inline const MarkEntityInMinMapNotify* internal_default_instance() {
    return reinterpret_cast<const MarkEntityInMinMapNotify*>(
               &_MarkEntityInMinMapNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(MarkEntityInMinMapNotify* other);
  friend void swap(MarkEntityInMinMapNotify& a, MarkEntityInMinMapNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MarkEntityInMinMapNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MarkEntityInMinMapNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MarkEntityInMinMapNotify& from);
  void MergeFrom(const MarkEntityInMinMapNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MarkEntityInMinMapNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector position = 4;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 4;
  const ::proto::Vector& position() const;
  ::proto::Vector* mutable_position();
  ::proto::Vector* release_position();
  void set_allocated_position(::proto::Vector* position);

  // uint32 monster_id = 7;
  void clear_monster_id();
  static const int kMonsterIdFieldNumber = 7;
  ::google::protobuf::uint32 monster_id() const;
  void set_monster_id(::google::protobuf::uint32 value);

  // uint32 entity_id = 14;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 14;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MarkEntityInMinMapNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* position_;
  ::google::protobuf::uint32 monster_id_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnmarkEntityInMinMapNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UnmarkEntityInMinMapNotify) */ {
 public:
  UnmarkEntityInMinMapNotify();
  virtual ~UnmarkEntityInMinMapNotify();

  UnmarkEntityInMinMapNotify(const UnmarkEntityInMinMapNotify& from);

  inline UnmarkEntityInMinMapNotify& operator=(const UnmarkEntityInMinMapNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnmarkEntityInMinMapNotify(UnmarkEntityInMinMapNotify&& from) noexcept
    : UnmarkEntityInMinMapNotify() {
    *this = ::std::move(from);
  }

  inline UnmarkEntityInMinMapNotify& operator=(UnmarkEntityInMinMapNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnmarkEntityInMinMapNotify& default_instance();

  static inline const UnmarkEntityInMinMapNotify* internal_default_instance() {
    return reinterpret_cast<const UnmarkEntityInMinMapNotify*>(
               &_UnmarkEntityInMinMapNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(UnmarkEntityInMinMapNotify* other);
  friend void swap(UnmarkEntityInMinMapNotify& a, UnmarkEntityInMinMapNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnmarkEntityInMinMapNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  UnmarkEntityInMinMapNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnmarkEntityInMinMapNotify& from);
  void MergeFrom(const UnmarkEntityInMinMapNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnmarkEntityInMinMapNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 entity_id = 8;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 8;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.UnmarkEntityInMinMapNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExecuteGroupTriggerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ExecuteGroupTriggerReq) */ {
 public:
  ExecuteGroupTriggerReq();
  virtual ~ExecuteGroupTriggerReq();

  ExecuteGroupTriggerReq(const ExecuteGroupTriggerReq& from);

  inline ExecuteGroupTriggerReq& operator=(const ExecuteGroupTriggerReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecuteGroupTriggerReq(ExecuteGroupTriggerReq&& from) noexcept
    : ExecuteGroupTriggerReq() {
    *this = ::std::move(from);
  }

  inline ExecuteGroupTriggerReq& operator=(ExecuteGroupTriggerReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteGroupTriggerReq& default_instance();

  static inline const ExecuteGroupTriggerReq* internal_default_instance() {
    return reinterpret_cast<const ExecuteGroupTriggerReq*>(
               &_ExecuteGroupTriggerReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(ExecuteGroupTriggerReq* other);
  friend void swap(ExecuteGroupTriggerReq& a, ExecuteGroupTriggerReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecuteGroupTriggerReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ExecuteGroupTriggerReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExecuteGroupTriggerReq& from);
  void MergeFrom(const ExecuteGroupTriggerReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExecuteGroupTriggerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string source_name = 15;
  void clear_source_name();
  static const int kSourceNameFieldNumber = 15;
  const ::std::string& source_name() const;
  void set_source_name(const ::std::string& value);
  #if LANG_CXX11
  void set_source_name(::std::string&& value);
  #endif
  void set_source_name(const char* value);
  void set_source_name(const char* value, size_t size);
  ::std::string* mutable_source_name();
  ::std::string* release_source_name();
  void set_allocated_source_name(::std::string* source_name);

  // uint32 source_entity_id = 4;
  void clear_source_entity_id();
  static const int kSourceEntityIdFieldNumber = 4;
  ::google::protobuf::uint32 source_entity_id() const;
  void set_source_entity_id(::google::protobuf::uint32 value);

  // int32 param2 = 8;
  void clear_param2();
  static const int kParam2FieldNumber = 8;
  ::google::protobuf::int32 param2() const;
  void set_param2(::google::protobuf::int32 value);

  // uint32 target_entity_id = 12;
  void clear_target_entity_id();
  static const int kTargetEntityIdFieldNumber = 12;
  ::google::protobuf::uint32 target_entity_id() const;
  void set_target_entity_id(::google::protobuf::uint32 value);

  // int32 param1 = 9;
  void clear_param1();
  static const int kParam1FieldNumber = 9;
  ::google::protobuf::int32 param1() const;
  void set_param1(::google::protobuf::int32 value);

  // int32 param3 = 10;
  void clear_param3();
  static const int kParam3FieldNumber = 10;
  ::google::protobuf::int32 param3() const;
  void set_param3(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ExecuteGroupTriggerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr source_name_;
  ::google::protobuf::uint32 source_entity_id_;
  ::google::protobuf::int32 param2_;
  ::google::protobuf::uint32 target_entity_id_;
  ::google::protobuf::int32 param1_;
  ::google::protobuf::int32 param3_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExecuteGroupTriggerRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ExecuteGroupTriggerRsp) */ {
 public:
  ExecuteGroupTriggerRsp();
  virtual ~ExecuteGroupTriggerRsp();

  ExecuteGroupTriggerRsp(const ExecuteGroupTriggerRsp& from);

  inline ExecuteGroupTriggerRsp& operator=(const ExecuteGroupTriggerRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecuteGroupTriggerRsp(ExecuteGroupTriggerRsp&& from) noexcept
    : ExecuteGroupTriggerRsp() {
    *this = ::std::move(from);
  }

  inline ExecuteGroupTriggerRsp& operator=(ExecuteGroupTriggerRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteGroupTriggerRsp& default_instance();

  static inline const ExecuteGroupTriggerRsp* internal_default_instance() {
    return reinterpret_cast<const ExecuteGroupTriggerRsp*>(
               &_ExecuteGroupTriggerRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(ExecuteGroupTriggerRsp* other);
  friend void swap(ExecuteGroupTriggerRsp& a, ExecuteGroupTriggerRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecuteGroupTriggerRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ExecuteGroupTriggerRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExecuteGroupTriggerRsp& from);
  void MergeFrom(const ExecuteGroupTriggerRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExecuteGroupTriggerRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 13;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 13;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ExecuteGroupTriggerRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LevelupCityReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.LevelupCityReq) */ {
 public:
  LevelupCityReq();
  virtual ~LevelupCityReq();

  LevelupCityReq(const LevelupCityReq& from);

  inline LevelupCityReq& operator=(const LevelupCityReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LevelupCityReq(LevelupCityReq&& from) noexcept
    : LevelupCityReq() {
    *this = ::std::move(from);
  }

  inline LevelupCityReq& operator=(LevelupCityReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LevelupCityReq& default_instance();

  static inline const LevelupCityReq* internal_default_instance() {
    return reinterpret_cast<const LevelupCityReq*>(
               &_LevelupCityReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(LevelupCityReq* other);
  friend void swap(LevelupCityReq& a, LevelupCityReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LevelupCityReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LevelupCityReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LevelupCityReq& from);
  void MergeFrom(const LevelupCityReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LevelupCityReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 area_id = 3;
  void clear_area_id();
  static const int kAreaIdFieldNumber = 3;
  ::google::protobuf::uint32 area_id() const;
  void set_area_id(::google::protobuf::uint32 value);

  // uint32 scene_id = 5;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 5;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 item_num = 14;
  void clear_item_num();
  static const int kItemNumFieldNumber = 14;
  ::google::protobuf::uint32 item_num() const;
  void set_item_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.LevelupCityReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 area_id_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 item_num_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LevelupCityRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.LevelupCityRsp) */ {
 public:
  LevelupCityRsp();
  virtual ~LevelupCityRsp();

  LevelupCityRsp(const LevelupCityRsp& from);

  inline LevelupCityRsp& operator=(const LevelupCityRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LevelupCityRsp(LevelupCityRsp&& from) noexcept
    : LevelupCityRsp() {
    *this = ::std::move(from);
  }

  inline LevelupCityRsp& operator=(LevelupCityRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LevelupCityRsp& default_instance();

  static inline const LevelupCityRsp* internal_default_instance() {
    return reinterpret_cast<const LevelupCityRsp*>(
               &_LevelupCityRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(LevelupCityRsp* other);
  friend void swap(LevelupCityRsp& a, LevelupCityRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LevelupCityRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  LevelupCityRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LevelupCityRsp& from);
  void MergeFrom(const LevelupCityRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LevelupCityRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.CityInfo city_info = 6;
  bool has_city_info() const;
  void clear_city_info();
  static const int kCityInfoFieldNumber = 6;
  const ::proto::CityInfo& city_info() const;
  ::proto::CityInfo* mutable_city_info();
  ::proto::CityInfo* release_city_info();
  void set_allocated_city_info(::proto::CityInfo* city_info);

  // int32 retcode = 3;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 3;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 scene_id = 4;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 4;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 area_id = 9;
  void clear_area_id();
  static const int kAreaIdFieldNumber = 9;
  ::google::protobuf::uint32 area_id() const;
  void set_area_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.LevelupCityRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::CityInfo* city_info_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 area_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoutePointChangeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RoutePointChangeInfo) */ {
 public:
  RoutePointChangeInfo();
  virtual ~RoutePointChangeInfo();

  RoutePointChangeInfo(const RoutePointChangeInfo& from);

  inline RoutePointChangeInfo& operator=(const RoutePointChangeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoutePointChangeInfo(RoutePointChangeInfo&& from) noexcept
    : RoutePointChangeInfo() {
    *this = ::std::move(from);
  }

  inline RoutePointChangeInfo& operator=(RoutePointChangeInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoutePointChangeInfo& default_instance();

  static inline const RoutePointChangeInfo* internal_default_instance() {
    return reinterpret_cast<const RoutePointChangeInfo*>(
               &_RoutePointChangeInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(RoutePointChangeInfo* other);
  friend void swap(RoutePointChangeInfo& a, RoutePointChangeInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoutePointChangeInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  RoutePointChangeInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoutePointChangeInfo& from);
  void MergeFrom(const RoutePointChangeInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoutePointChangeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float target_velocity = 14;
  void clear_target_velocity();
  static const int kTargetVelocityFieldNumber = 14;
  float target_velocity() const;
  void set_target_velocity(float value);

  // float wait_time = 6;
  void clear_wait_time();
  static const int kWaitTimeFieldNumber = 6;
  float wait_time() const;
  void set_wait_time(float value);

  // uint32 point_index = 11;
  void clear_point_index();
  static const int kPointIndexFieldNumber = 11;
  ::google::protobuf::uint32 point_index() const;
  void set_point_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.RoutePointChangeInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float target_velocity_;
  float wait_time_;
  ::google::protobuf::uint32 point_index_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneRouteChangeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneRouteChangeInfo) */ {
 public:
  SceneRouteChangeInfo();
  virtual ~SceneRouteChangeInfo();

  SceneRouteChangeInfo(const SceneRouteChangeInfo& from);

  inline SceneRouteChangeInfo& operator=(const SceneRouteChangeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneRouteChangeInfo(SceneRouteChangeInfo&& from) noexcept
    : SceneRouteChangeInfo() {
    *this = ::std::move(from);
  }

  inline SceneRouteChangeInfo& operator=(SceneRouteChangeInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRouteChangeInfo& default_instance();

  static inline const SceneRouteChangeInfo* internal_default_instance() {
    return reinterpret_cast<const SceneRouteChangeInfo*>(
               &_SceneRouteChangeInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(SceneRouteChangeInfo* other);
  friend void swap(SceneRouteChangeInfo& a, SceneRouteChangeInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneRouteChangeInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneRouteChangeInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneRouteChangeInfo& from);
  void MergeFrom(const SceneRouteChangeInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneRouteChangeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.RoutePointChangeInfo point_list = 1;
  int point_list_size() const;
  void clear_point_list();
  static const int kPointListFieldNumber = 1;
  const ::proto::RoutePointChangeInfo& point_list(int index) const;
  ::proto::RoutePointChangeInfo* mutable_point_list(int index);
  ::proto::RoutePointChangeInfo* add_point_list();
  ::google::protobuf::RepeatedPtrField< ::proto::RoutePointChangeInfo >*
      mutable_point_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::RoutePointChangeInfo >&
      point_list() const;

  // uint32 route_id = 15;
  void clear_route_id();
  static const int kRouteIdFieldNumber = 15;
  ::google::protobuf::uint32 route_id() const;
  void set_route_id(::google::protobuf::uint32 value);

  // uint32 type = 4;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // bool is_forward = 12;
  void clear_is_forward();
  static const int kIsForwardFieldNumber = 12;
  bool is_forward() const;
  void set_is_forward(bool value);

  // @@protoc_insertion_point(class_scope:proto.SceneRouteChangeInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::RoutePointChangeInfo > point_list_;
  ::google::protobuf::uint32 route_id_;
  ::google::protobuf::uint32 type_;
  bool is_forward_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneRouteChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneRouteChangeNotify) */ {
 public:
  SceneRouteChangeNotify();
  virtual ~SceneRouteChangeNotify();

  SceneRouteChangeNotify(const SceneRouteChangeNotify& from);

  inline SceneRouteChangeNotify& operator=(const SceneRouteChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneRouteChangeNotify(SceneRouteChangeNotify&& from) noexcept
    : SceneRouteChangeNotify() {
    *this = ::std::move(from);
  }

  inline SceneRouteChangeNotify& operator=(SceneRouteChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRouteChangeNotify& default_instance();

  static inline const SceneRouteChangeNotify* internal_default_instance() {
    return reinterpret_cast<const SceneRouteChangeNotify*>(
               &_SceneRouteChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(SceneRouteChangeNotify* other);
  friend void swap(SceneRouteChangeNotify& a, SceneRouteChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneRouteChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneRouteChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneRouteChangeNotify& from);
  void MergeFrom(const SceneRouteChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneRouteChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.SceneRouteChangeInfo route_list = 2;
  int route_list_size() const;
  void clear_route_list();
  static const int kRouteListFieldNumber = 2;
  const ::proto::SceneRouteChangeInfo& route_list(int index) const;
  ::proto::SceneRouteChangeInfo* mutable_route_list(int index);
  ::proto::SceneRouteChangeInfo* add_route_list();
  ::google::protobuf::RepeatedPtrField< ::proto::SceneRouteChangeInfo >*
      mutable_route_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::SceneRouteChangeInfo >&
      route_list() const;

  // uint32 scene_time = 11;
  void clear_scene_time();
  static const int kSceneTimeFieldNumber = 11;
  ::google::protobuf::uint32 scene_time() const;
  void set_scene_time(::google::protobuf::uint32 value);

  // uint32 scene_id = 12;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 12;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneRouteChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::SceneRouteChangeInfo > route_list_;
  ::google::protobuf::uint32 scene_time_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlatformStartRouteNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlatformStartRouteNotify) */ {
 public:
  PlatformStartRouteNotify();
  virtual ~PlatformStartRouteNotify();

  PlatformStartRouteNotify(const PlatformStartRouteNotify& from);

  inline PlatformStartRouteNotify& operator=(const PlatformStartRouteNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlatformStartRouteNotify(PlatformStartRouteNotify&& from) noexcept
    : PlatformStartRouteNotify() {
    *this = ::std::move(from);
  }

  inline PlatformStartRouteNotify& operator=(PlatformStartRouteNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlatformStartRouteNotify& default_instance();

  static inline const PlatformStartRouteNotify* internal_default_instance() {
    return reinterpret_cast<const PlatformStartRouteNotify*>(
               &_PlatformStartRouteNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    62;

  void Swap(PlatformStartRouteNotify* other);
  friend void swap(PlatformStartRouteNotify& a, PlatformStartRouteNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlatformStartRouteNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlatformStartRouteNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlatformStartRouteNotify& from);
  void MergeFrom(const PlatformStartRouteNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlatformStartRouteNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.PlatformInfo platform = 15;
  bool has_platform() const;
  void clear_platform();
  static const int kPlatformFieldNumber = 15;
  const ::proto::PlatformInfo& platform() const;
  ::proto::PlatformInfo* mutable_platform();
  ::proto::PlatformInfo* release_platform();
  void set_allocated_platform(::proto::PlatformInfo* platform);

  // uint32 entity_id = 8;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 8;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 scene_time = 12;
  void clear_scene_time();
  static const int kSceneTimeFieldNumber = 12;
  ::google::protobuf::uint32 scene_time() const;
  void set_scene_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlatformStartRouteNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::PlatformInfo* platform_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 scene_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlatformStopRouteNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlatformStopRouteNotify) */ {
 public:
  PlatformStopRouteNotify();
  virtual ~PlatformStopRouteNotify();

  PlatformStopRouteNotify(const PlatformStopRouteNotify& from);

  inline PlatformStopRouteNotify& operator=(const PlatformStopRouteNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlatformStopRouteNotify(PlatformStopRouteNotify&& from) noexcept
    : PlatformStopRouteNotify() {
    *this = ::std::move(from);
  }

  inline PlatformStopRouteNotify& operator=(PlatformStopRouteNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlatformStopRouteNotify& default_instance();

  static inline const PlatformStopRouteNotify* internal_default_instance() {
    return reinterpret_cast<const PlatformStopRouteNotify*>(
               &_PlatformStopRouteNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(PlatformStopRouteNotify* other);
  friend void swap(PlatformStopRouteNotify& a, PlatformStopRouteNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlatformStopRouteNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlatformStopRouteNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlatformStopRouteNotify& from);
  void MergeFrom(const PlatformStopRouteNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlatformStopRouteNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.PlatformInfo platform = 8;
  bool has_platform() const;
  void clear_platform();
  static const int kPlatformFieldNumber = 8;
  const ::proto::PlatformInfo& platform() const;
  ::proto::PlatformInfo* mutable_platform();
  ::proto::PlatformInfo* release_platform();
  void set_allocated_platform(::proto::PlatformInfo* platform);

  // uint32 scene_time = 9;
  void clear_scene_time();
  static const int kSceneTimeFieldNumber = 9;
  ::google::protobuf::uint32 scene_time() const;
  void set_scene_time(::google::protobuf::uint32 value);

  // uint32 entity_id = 12;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 12;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlatformStopRouteNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::PlatformInfo* platform_;
  ::google::protobuf::uint32 scene_time_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlatformChangeRouteNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlatformChangeRouteNotify) */ {
 public:
  PlatformChangeRouteNotify();
  virtual ~PlatformChangeRouteNotify();

  PlatformChangeRouteNotify(const PlatformChangeRouteNotify& from);

  inline PlatformChangeRouteNotify& operator=(const PlatformChangeRouteNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlatformChangeRouteNotify(PlatformChangeRouteNotify&& from) noexcept
    : PlatformChangeRouteNotify() {
    *this = ::std::move(from);
  }

  inline PlatformChangeRouteNotify& operator=(PlatformChangeRouteNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlatformChangeRouteNotify& default_instance();

  static inline const PlatformChangeRouteNotify* internal_default_instance() {
    return reinterpret_cast<const PlatformChangeRouteNotify*>(
               &_PlatformChangeRouteNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(PlatformChangeRouteNotify* other);
  friend void swap(PlatformChangeRouteNotify& a, PlatformChangeRouteNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlatformChangeRouteNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlatformChangeRouteNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlatformChangeRouteNotify& from);
  void MergeFrom(const PlatformChangeRouteNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlatformChangeRouteNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.PlatformInfo platform = 1;
  bool has_platform() const;
  void clear_platform();
  static const int kPlatformFieldNumber = 1;
  const ::proto::PlatformInfo& platform() const;
  ::proto::PlatformInfo* mutable_platform();
  ::proto::PlatformInfo* release_platform();
  void set_allocated_platform(::proto::PlatformInfo* platform);

  // uint32 entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 scene_time = 8;
  void clear_scene_time();
  static const int kSceneTimeFieldNumber = 8;
  ::google::protobuf::uint32 scene_time() const;
  void set_scene_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlatformChangeRouteNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::PlatformInfo* platform_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 scene_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScenePlayerSoundNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ScenePlayerSoundNotify) */ {
 public:
  ScenePlayerSoundNotify();
  virtual ~ScenePlayerSoundNotify();

  ScenePlayerSoundNotify(const ScenePlayerSoundNotify& from);

  inline ScenePlayerSoundNotify& operator=(const ScenePlayerSoundNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScenePlayerSoundNotify(ScenePlayerSoundNotify&& from) noexcept
    : ScenePlayerSoundNotify() {
    *this = ::std::move(from);
  }

  inline ScenePlayerSoundNotify& operator=(ScenePlayerSoundNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenePlayerSoundNotify& default_instance();

  static inline const ScenePlayerSoundNotify* internal_default_instance() {
    return reinterpret_cast<const ScenePlayerSoundNotify*>(
               &_ScenePlayerSoundNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(ScenePlayerSoundNotify* other);
  friend void swap(ScenePlayerSoundNotify& a, ScenePlayerSoundNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScenePlayerSoundNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ScenePlayerSoundNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScenePlayerSoundNotify& from);
  void MergeFrom(const ScenePlayerSoundNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScenePlayerSoundNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ScenePlayerSoundNotify_PlaySoundType PlaySoundType;
  static const PlaySoundType PLAY_SOUND_NONE =
    ScenePlayerSoundNotify_PlaySoundType_PLAY_SOUND_NONE;
  static const PlaySoundType PLAY_SOUND_START =
    ScenePlayerSoundNotify_PlaySoundType_PLAY_SOUND_START;
  static const PlaySoundType PLAY_SOUND_STOP =
    ScenePlayerSoundNotify_PlaySoundType_PLAY_SOUND_STOP;
  static inline bool PlaySoundType_IsValid(int value) {
    return ScenePlayerSoundNotify_PlaySoundType_IsValid(value);
  }
  static const PlaySoundType PlaySoundType_MIN =
    ScenePlayerSoundNotify_PlaySoundType_PlaySoundType_MIN;
  static const PlaySoundType PlaySoundType_MAX =
    ScenePlayerSoundNotify_PlaySoundType_PlaySoundType_MAX;
  static const int PlaySoundType_ARRAYSIZE =
    ScenePlayerSoundNotify_PlaySoundType_PlaySoundType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PlaySoundType_descriptor() {
    return ScenePlayerSoundNotify_PlaySoundType_descriptor();
  }
  static inline const ::std::string& PlaySoundType_Name(PlaySoundType value) {
    return ScenePlayerSoundNotify_PlaySoundType_Name(value);
  }
  static inline bool PlaySoundType_Parse(const ::std::string& name,
      PlaySoundType* value) {
    return ScenePlayerSoundNotify_PlaySoundType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string sound_name = 4;
  void clear_sound_name();
  static const int kSoundNameFieldNumber = 4;
  const ::std::string& sound_name() const;
  void set_sound_name(const ::std::string& value);
  #if LANG_CXX11
  void set_sound_name(::std::string&& value);
  #endif
  void set_sound_name(const char* value);
  void set_sound_name(const char* value, size_t size);
  ::std::string* mutable_sound_name();
  ::std::string* release_sound_name();
  void set_allocated_sound_name(::std::string* sound_name);

  // .proto.Vector play_pos = 3;
  bool has_play_pos() const;
  void clear_play_pos();
  static const int kPlayPosFieldNumber = 3;
  const ::proto::Vector& play_pos() const;
  ::proto::Vector* mutable_play_pos();
  ::proto::Vector* release_play_pos();
  void set_allocated_play_pos(::proto::Vector* play_pos);

  // .proto.ScenePlayerSoundNotify.PlaySoundType play_type = 8;
  void clear_play_type();
  static const int kPlayTypeFieldNumber = 8;
  ::proto::ScenePlayerSoundNotify_PlaySoundType play_type() const;
  void set_play_type(::proto::ScenePlayerSoundNotify_PlaySoundType value);

  // @@protoc_insertion_point(class_scope:proto.ScenePlayerSoundNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sound_name_;
  ::proto::Vector* play_pos_;
  int play_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PersonalSceneJumpReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PersonalSceneJumpReq) */ {
 public:
  PersonalSceneJumpReq();
  virtual ~PersonalSceneJumpReq();

  PersonalSceneJumpReq(const PersonalSceneJumpReq& from);

  inline PersonalSceneJumpReq& operator=(const PersonalSceneJumpReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PersonalSceneJumpReq(PersonalSceneJumpReq&& from) noexcept
    : PersonalSceneJumpReq() {
    *this = ::std::move(from);
  }

  inline PersonalSceneJumpReq& operator=(PersonalSceneJumpReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PersonalSceneJumpReq& default_instance();

  static inline const PersonalSceneJumpReq* internal_default_instance() {
    return reinterpret_cast<const PersonalSceneJumpReq*>(
               &_PersonalSceneJumpReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    66;

  void Swap(PersonalSceneJumpReq* other);
  friend void swap(PersonalSceneJumpReq& a, PersonalSceneJumpReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PersonalSceneJumpReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PersonalSceneJumpReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PersonalSceneJumpReq& from);
  void MergeFrom(const PersonalSceneJumpReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PersonalSceneJumpReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 point_id = 4;
  void clear_point_id();
  static const int kPointIdFieldNumber = 4;
  ::google::protobuf::uint32 point_id() const;
  void set_point_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PersonalSceneJumpReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 point_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PersonalSceneJumpRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PersonalSceneJumpRsp) */ {
 public:
  PersonalSceneJumpRsp();
  virtual ~PersonalSceneJumpRsp();

  PersonalSceneJumpRsp(const PersonalSceneJumpRsp& from);

  inline PersonalSceneJumpRsp& operator=(const PersonalSceneJumpRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PersonalSceneJumpRsp(PersonalSceneJumpRsp&& from) noexcept
    : PersonalSceneJumpRsp() {
    *this = ::std::move(from);
  }

  inline PersonalSceneJumpRsp& operator=(PersonalSceneJumpRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PersonalSceneJumpRsp& default_instance();

  static inline const PersonalSceneJumpRsp* internal_default_instance() {
    return reinterpret_cast<const PersonalSceneJumpRsp*>(
               &_PersonalSceneJumpRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    67;

  void Swap(PersonalSceneJumpRsp* other);
  friend void swap(PersonalSceneJumpRsp& a, PersonalSceneJumpRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PersonalSceneJumpRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PersonalSceneJumpRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PersonalSceneJumpRsp& from);
  void MergeFrom(const PersonalSceneJumpRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PersonalSceneJumpRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector dest_pos = 11;
  bool has_dest_pos() const;
  void clear_dest_pos();
  static const int kDestPosFieldNumber = 11;
  const ::proto::Vector& dest_pos() const;
  ::proto::Vector* mutable_dest_pos();
  ::proto::Vector* release_dest_pos();
  void set_allocated_dest_pos(::proto::Vector* dest_pos);

  // uint32 dest_scene_id = 5;
  void clear_dest_scene_id();
  static const int kDestSceneIdFieldNumber = 5;
  ::google::protobuf::uint32 dest_scene_id() const;
  void set_dest_scene_id(::google::protobuf::uint32 value);

  // int32 retcode = 8;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 8;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.PersonalSceneJumpRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* dest_pos_;
  ::google::protobuf::uint32 dest_scene_id_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SealBattleBeginNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SealBattleBeginNotify) */ {
 public:
  SealBattleBeginNotify();
  virtual ~SealBattleBeginNotify();

  SealBattleBeginNotify(const SealBattleBeginNotify& from);

  inline SealBattleBeginNotify& operator=(const SealBattleBeginNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SealBattleBeginNotify(SealBattleBeginNotify&& from) noexcept
    : SealBattleBeginNotify() {
    *this = ::std::move(from);
  }

  inline SealBattleBeginNotify& operator=(SealBattleBeginNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SealBattleBeginNotify& default_instance();

  static inline const SealBattleBeginNotify* internal_default_instance() {
    return reinterpret_cast<const SealBattleBeginNotify*>(
               &_SealBattleBeginNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    68;

  void Swap(SealBattleBeginNotify* other);
  friend void swap(SealBattleBeginNotify& a, SealBattleBeginNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SealBattleBeginNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SealBattleBeginNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SealBattleBeginNotify& from);
  void MergeFrom(const SealBattleBeginNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SealBattleBeginNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 seal_entity_id = 1;
  void clear_seal_entity_id();
  static const int kSealEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 seal_entity_id() const;
  void set_seal_entity_id(::google::protobuf::uint32 value);

  // uint32 seal_max_progress = 9;
  void clear_seal_max_progress();
  static const int kSealMaxProgressFieldNumber = 9;
  ::google::protobuf::uint32 seal_max_progress() const;
  void set_seal_max_progress(::google::protobuf::uint32 value);

  // uint32 seal_radius = 12;
  void clear_seal_radius();
  static const int kSealRadiusFieldNumber = 12;
  ::google::protobuf::uint32 seal_radius() const;
  void set_seal_radius(::google::protobuf::uint32 value);

  // .proto.SealBattleType battle_type = 14;
  void clear_battle_type();
  static const int kBattleTypeFieldNumber = 14;
  ::proto::SealBattleType battle_type() const;
  void set_battle_type(::proto::SealBattleType value);

  // @@protoc_insertion_point(class_scope:proto.SealBattleBeginNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 seal_entity_id_;
  ::google::protobuf::uint32 seal_max_progress_;
  ::google::protobuf::uint32 seal_radius_;
  int battle_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SealBattleEndNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SealBattleEndNotify) */ {
 public:
  SealBattleEndNotify();
  virtual ~SealBattleEndNotify();

  SealBattleEndNotify(const SealBattleEndNotify& from);

  inline SealBattleEndNotify& operator=(const SealBattleEndNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SealBattleEndNotify(SealBattleEndNotify&& from) noexcept
    : SealBattleEndNotify() {
    *this = ::std::move(from);
  }

  inline SealBattleEndNotify& operator=(SealBattleEndNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SealBattleEndNotify& default_instance();

  static inline const SealBattleEndNotify* internal_default_instance() {
    return reinterpret_cast<const SealBattleEndNotify*>(
               &_SealBattleEndNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    69;

  void Swap(SealBattleEndNotify* other);
  friend void swap(SealBattleEndNotify& a, SealBattleEndNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SealBattleEndNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SealBattleEndNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SealBattleEndNotify& from);
  void MergeFrom(const SealBattleEndNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SealBattleEndNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_win = 4;
  void clear_is_win();
  static const int kIsWinFieldNumber = 4;
  bool is_win() const;
  void set_is_win(bool value);

  // uint32 seal_entity_id = 15;
  void clear_seal_entity_id();
  static const int kSealEntityIdFieldNumber = 15;
  ::google::protobuf::uint32 seal_entity_id() const;
  void set_seal_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SealBattleEndNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_win_;
  ::google::protobuf::uint32 seal_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SealBattleProgressNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SealBattleProgressNotify) */ {
 public:
  SealBattleProgressNotify();
  virtual ~SealBattleProgressNotify();

  SealBattleProgressNotify(const SealBattleProgressNotify& from);

  inline SealBattleProgressNotify& operator=(const SealBattleProgressNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SealBattleProgressNotify(SealBattleProgressNotify&& from) noexcept
    : SealBattleProgressNotify() {
    *this = ::std::move(from);
  }

  inline SealBattleProgressNotify& operator=(SealBattleProgressNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SealBattleProgressNotify& default_instance();

  static inline const SealBattleProgressNotify* internal_default_instance() {
    return reinterpret_cast<const SealBattleProgressNotify*>(
               &_SealBattleProgressNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    70;

  void Swap(SealBattleProgressNotify* other);
  friend void swap(SealBattleProgressNotify& a, SealBattleProgressNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SealBattleProgressNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SealBattleProgressNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SealBattleProgressNotify& from);
  void MergeFrom(const SealBattleProgressNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SealBattleProgressNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 end_time = 2;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 2;
  ::google::protobuf::uint32 end_time() const;
  void set_end_time(::google::protobuf::uint32 value);

  // uint32 seal_radius = 4;
  void clear_seal_radius();
  static const int kSealRadiusFieldNumber = 4;
  ::google::protobuf::uint32 seal_radius() const;
  void set_seal_radius(::google::protobuf::uint32 value);

  // uint32 max_progress = 10;
  void clear_max_progress();
  static const int kMaxProgressFieldNumber = 10;
  ::google::protobuf::uint32 max_progress() const;
  void set_max_progress(::google::protobuf::uint32 value);

  // uint32 progress = 5;
  void clear_progress();
  static const int kProgressFieldNumber = 5;
  ::google::protobuf::uint32 progress() const;
  void set_progress(::google::protobuf::uint32 value);

  // uint32 seal_entity_id = 9;
  void clear_seal_entity_id();
  static const int kSealEntityIdFieldNumber = 9;
  ::google::protobuf::uint32 seal_entity_id() const;
  void set_seal_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SealBattleProgressNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 end_time_;
  ::google::protobuf::uint32 seal_radius_;
  ::google::protobuf::uint32 max_progress_;
  ::google::protobuf::uint32 progress_;
  ::google::protobuf::uint32 seal_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientPauseNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClientPauseNotify) */ {
 public:
  ClientPauseNotify();
  virtual ~ClientPauseNotify();

  ClientPauseNotify(const ClientPauseNotify& from);

  inline ClientPauseNotify& operator=(const ClientPauseNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientPauseNotify(ClientPauseNotify&& from) noexcept
    : ClientPauseNotify() {
    *this = ::std::move(from);
  }

  inline ClientPauseNotify& operator=(ClientPauseNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientPauseNotify& default_instance();

  static inline const ClientPauseNotify* internal_default_instance() {
    return reinterpret_cast<const ClientPauseNotify*>(
               &_ClientPauseNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    71;

  void Swap(ClientPauseNotify* other);
  friend void swap(ClientPauseNotify& a, ClientPauseNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientPauseNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientPauseNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientPauseNotify& from);
  void MergeFrom(const ClientPauseNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientPauseNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_open = 1;
  void clear_is_open();
  static const int kIsOpenFieldNumber = 1;
  bool is_open() const;
  void set_is_open(bool value);

  // @@protoc_insertion_point(class_scope:proto.ClientPauseNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_open_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarEnterSceneInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarEnterSceneInfo) */ {
 public:
  AvatarEnterSceneInfo();
  virtual ~AvatarEnterSceneInfo();

  AvatarEnterSceneInfo(const AvatarEnterSceneInfo& from);

  inline AvatarEnterSceneInfo& operator=(const AvatarEnterSceneInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarEnterSceneInfo(AvatarEnterSceneInfo&& from) noexcept
    : AvatarEnterSceneInfo() {
    *this = ::std::move(from);
  }

  inline AvatarEnterSceneInfo& operator=(AvatarEnterSceneInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarEnterSceneInfo& default_instance();

  static inline const AvatarEnterSceneInfo* internal_default_instance() {
    return reinterpret_cast<const AvatarEnterSceneInfo*>(
               &_AvatarEnterSceneInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    72;

  void Swap(AvatarEnterSceneInfo* other);
  friend void swap(AvatarEnterSceneInfo& a, AvatarEnterSceneInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarEnterSceneInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarEnterSceneInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarEnterSceneInfo& from);
  void MergeFrom(const AvatarEnterSceneInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarEnterSceneInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 buff_id_list = 5;
  int buff_id_list_size() const;
  void clear_buff_id_list();
  static const int kBuffIdListFieldNumber = 5;
  ::google::protobuf::uint32 buff_id_list(int index) const;
  void set_buff_id_list(int index, ::google::protobuf::uint32 value);
  void add_buff_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      buff_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_buff_id_list();

  // repeated .proto.ServerBuff server_buff_list = 14;
  int server_buff_list_size() const;
  void clear_server_buff_list();
  static const int kServerBuffListFieldNumber = 14;
  const ::proto::ServerBuff& server_buff_list(int index) const;
  ::proto::ServerBuff* mutable_server_buff_list(int index);
  ::proto::ServerBuff* add_server_buff_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >*
      mutable_server_buff_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >&
      server_buff_list() const;

  // .proto.AbilitySyncStateInfo avatar_ability_info = 2;
  bool has_avatar_ability_info() const;
  void clear_avatar_ability_info();
  static const int kAvatarAbilityInfoFieldNumber = 2;
  const ::proto::AbilitySyncStateInfo& avatar_ability_info() const;
  ::proto::AbilitySyncStateInfo* mutable_avatar_ability_info();
  ::proto::AbilitySyncStateInfo* release_avatar_ability_info();
  void set_allocated_avatar_ability_info(::proto::AbilitySyncStateInfo* avatar_ability_info);

  // .proto.AbilitySyncStateInfo weapon_ability_info = 12;
  bool has_weapon_ability_info() const;
  void clear_weapon_ability_info();
  static const int kWeaponAbilityInfoFieldNumber = 12;
  const ::proto::AbilitySyncStateInfo& weapon_ability_info() const;
  ::proto::AbilitySyncStateInfo* mutable_weapon_ability_info();
  ::proto::AbilitySyncStateInfo* release_weapon_ability_info();
  void set_allocated_weapon_ability_info(::proto::AbilitySyncStateInfo* weapon_ability_info);

  // uint32 avatar_entity_id = 7;
  void clear_avatar_entity_id();
  static const int kAvatarEntityIdFieldNumber = 7;
  ::google::protobuf::uint32 avatar_entity_id() const;
  void set_avatar_entity_id(::google::protobuf::uint32 value);

  // uint32 weapon_entity_id = 10;
  void clear_weapon_entity_id();
  static const int kWeaponEntityIdFieldNumber = 10;
  ::google::protobuf::uint32 weapon_entity_id() const;
  void set_weapon_entity_id(::google::protobuf::uint32 value);

  // uint64 weapon_guid = 9;
  void clear_weapon_guid();
  static const int kWeaponGuidFieldNumber = 9;
  ::google::protobuf::uint64 weapon_guid() const;
  void set_weapon_guid(::google::protobuf::uint64 value);

  // uint64 avatar_guid = 13;
  void clear_avatar_guid();
  static const int kAvatarGuidFieldNumber = 13;
  ::google::protobuf::uint64 avatar_guid() const;
  void set_avatar_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarEnterSceneInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > buff_id_list_;
  mutable int _buff_id_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff > server_buff_list_;
  ::proto::AbilitySyncStateInfo* avatar_ability_info_;
  ::proto::AbilitySyncStateInfo* weapon_ability_info_;
  ::google::protobuf::uint32 avatar_entity_id_;
  ::google::protobuf::uint32 weapon_entity_id_;
  ::google::protobuf::uint64 weapon_guid_;
  ::google::protobuf::uint64 avatar_guid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TeamEnterSceneInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TeamEnterSceneInfo) */ {
 public:
  TeamEnterSceneInfo();
  virtual ~TeamEnterSceneInfo();

  TeamEnterSceneInfo(const TeamEnterSceneInfo& from);

  inline TeamEnterSceneInfo& operator=(const TeamEnterSceneInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TeamEnterSceneInfo(TeamEnterSceneInfo&& from) noexcept
    : TeamEnterSceneInfo() {
    *this = ::std::move(from);
  }

  inline TeamEnterSceneInfo& operator=(TeamEnterSceneInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamEnterSceneInfo& default_instance();

  static inline const TeamEnterSceneInfo* internal_default_instance() {
    return reinterpret_cast<const TeamEnterSceneInfo*>(
               &_TeamEnterSceneInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    73;

  void Swap(TeamEnterSceneInfo* other);
  friend void swap(TeamEnterSceneInfo& a, TeamEnterSceneInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TeamEnterSceneInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  TeamEnterSceneInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TeamEnterSceneInfo& from);
  void MergeFrom(const TeamEnterSceneInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TeamEnterSceneInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.AbilityControlBlock ability_control_block = 7;
  bool has_ability_control_block() const;
  void clear_ability_control_block();
  static const int kAbilityControlBlockFieldNumber = 7;
  const ::proto::AbilityControlBlock& ability_control_block() const;
  ::proto::AbilityControlBlock* mutable_ability_control_block();
  ::proto::AbilityControlBlock* release_ability_control_block();
  void set_allocated_ability_control_block(::proto::AbilityControlBlock* ability_control_block);

  // .proto.AbilitySyncStateInfo team_ability_info = 10;
  bool has_team_ability_info() const;
  void clear_team_ability_info();
  static const int kTeamAbilityInfoFieldNumber = 10;
  const ::proto::AbilitySyncStateInfo& team_ability_info() const;
  ::proto::AbilitySyncStateInfo* mutable_team_ability_info();
  ::proto::AbilitySyncStateInfo* release_team_ability_info();
  void set_allocated_team_ability_info(::proto::AbilitySyncStateInfo* team_ability_info);

  // uint32 team_entity_id = 15;
  void clear_team_entity_id();
  static const int kTeamEntityIdFieldNumber = 15;
  ::google::protobuf::uint32 team_entity_id() const;
  void set_team_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TeamEnterSceneInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AbilityControlBlock* ability_control_block_;
  ::proto::AbilitySyncStateInfo* team_ability_info_;
  ::google::protobuf::uint32 team_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MPLevelEntityInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MPLevelEntityInfo) */ {
 public:
  MPLevelEntityInfo();
  virtual ~MPLevelEntityInfo();

  MPLevelEntityInfo(const MPLevelEntityInfo& from);

  inline MPLevelEntityInfo& operator=(const MPLevelEntityInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MPLevelEntityInfo(MPLevelEntityInfo&& from) noexcept
    : MPLevelEntityInfo() {
    *this = ::std::move(from);
  }

  inline MPLevelEntityInfo& operator=(MPLevelEntityInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MPLevelEntityInfo& default_instance();

  static inline const MPLevelEntityInfo* internal_default_instance() {
    return reinterpret_cast<const MPLevelEntityInfo*>(
               &_MPLevelEntityInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    74;

  void Swap(MPLevelEntityInfo* other);
  friend void swap(MPLevelEntityInfo& a, MPLevelEntityInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MPLevelEntityInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MPLevelEntityInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MPLevelEntityInfo& from);
  void MergeFrom(const MPLevelEntityInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MPLevelEntityInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.AbilitySyncStateInfo ability_info = 2;
  bool has_ability_info() const;
  void clear_ability_info();
  static const int kAbilityInfoFieldNumber = 2;
  const ::proto::AbilitySyncStateInfo& ability_info() const;
  ::proto::AbilitySyncStateInfo* mutable_ability_info();
  ::proto::AbilitySyncStateInfo* release_ability_info();
  void set_allocated_ability_info(::proto::AbilitySyncStateInfo* ability_info);

  // uint32 authority_peer_id = 3;
  void clear_authority_peer_id();
  static const int kAuthorityPeerIdFieldNumber = 3;
  ::google::protobuf::uint32 authority_peer_id() const;
  void set_authority_peer_id(::google::protobuf::uint32 value);

  // uint32 entity_id = 11;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 11;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MPLevelEntityInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AbilitySyncStateInfo* ability_info_;
  ::google::protobuf::uint32 authority_peer_id_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerEnterSceneInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerEnterSceneInfoNotify) */ {
 public:
  PlayerEnterSceneInfoNotify();
  virtual ~PlayerEnterSceneInfoNotify();

  PlayerEnterSceneInfoNotify(const PlayerEnterSceneInfoNotify& from);

  inline PlayerEnterSceneInfoNotify& operator=(const PlayerEnterSceneInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerEnterSceneInfoNotify(PlayerEnterSceneInfoNotify&& from) noexcept
    : PlayerEnterSceneInfoNotify() {
    *this = ::std::move(from);
  }

  inline PlayerEnterSceneInfoNotify& operator=(PlayerEnterSceneInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerEnterSceneInfoNotify& default_instance();

  static inline const PlayerEnterSceneInfoNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerEnterSceneInfoNotify*>(
               &_PlayerEnterSceneInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    75;

  void Swap(PlayerEnterSceneInfoNotify* other);
  friend void swap(PlayerEnterSceneInfoNotify& a, PlayerEnterSceneInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerEnterSceneInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerEnterSceneInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerEnterSceneInfoNotify& from);
  void MergeFrom(const PlayerEnterSceneInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerEnterSceneInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.AvatarEnterSceneInfo avatar_enter_info = 7;
  int avatar_enter_info_size() const;
  void clear_avatar_enter_info();
  static const int kAvatarEnterInfoFieldNumber = 7;
  const ::proto::AvatarEnterSceneInfo& avatar_enter_info(int index) const;
  ::proto::AvatarEnterSceneInfo* mutable_avatar_enter_info(int index);
  ::proto::AvatarEnterSceneInfo* add_avatar_enter_info();
  ::google::protobuf::RepeatedPtrField< ::proto::AvatarEnterSceneInfo >*
      mutable_avatar_enter_info();
  const ::google::protobuf::RepeatedPtrField< ::proto::AvatarEnterSceneInfo >&
      avatar_enter_info() const;

  // .proto.MPLevelEntityInfo mp_level_entity_info = 5;
  bool has_mp_level_entity_info() const;
  void clear_mp_level_entity_info();
  static const int kMpLevelEntityInfoFieldNumber = 5;
  const ::proto::MPLevelEntityInfo& mp_level_entity_info() const;
  ::proto::MPLevelEntityInfo* mutable_mp_level_entity_info();
  ::proto::MPLevelEntityInfo* release_mp_level_entity_info();
  void set_allocated_mp_level_entity_info(::proto::MPLevelEntityInfo* mp_level_entity_info);

  // .proto.TeamEnterSceneInfo team_enter_info = 8;
  bool has_team_enter_info() const;
  void clear_team_enter_info();
  static const int kTeamEnterInfoFieldNumber = 8;
  const ::proto::TeamEnterSceneInfo& team_enter_info() const;
  ::proto::TeamEnterSceneInfo* mutable_team_enter_info();
  ::proto::TeamEnterSceneInfo* release_team_enter_info();
  void set_allocated_team_enter_info(::proto::TeamEnterSceneInfo* team_enter_info);

  // uint32 cur_avatar_entity_id = 6;
  void clear_cur_avatar_entity_id();
  static const int kCurAvatarEntityIdFieldNumber = 6;
  ::google::protobuf::uint32 cur_avatar_entity_id() const;
  void set_cur_avatar_entity_id(::google::protobuf::uint32 value);

  // uint32 enter_scene_token = 12;
  void clear_enter_scene_token();
  static const int kEnterSceneTokenFieldNumber = 12;
  ::google::protobuf::uint32 enter_scene_token() const;
  void set_enter_scene_token(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerEnterSceneInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::AvatarEnterSceneInfo > avatar_enter_info_;
  ::proto::MPLevelEntityInfo* mp_level_entity_info_;
  ::proto::TeamEnterSceneInfo* team_enter_info_;
  ::google::protobuf::uint32 cur_avatar_entity_id_;
  ::google::protobuf::uint32 enter_scene_token_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JoinPlayerSceneReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.JoinPlayerSceneReq) */ {
 public:
  JoinPlayerSceneReq();
  virtual ~JoinPlayerSceneReq();

  JoinPlayerSceneReq(const JoinPlayerSceneReq& from);

  inline JoinPlayerSceneReq& operator=(const JoinPlayerSceneReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JoinPlayerSceneReq(JoinPlayerSceneReq&& from) noexcept
    : JoinPlayerSceneReq() {
    *this = ::std::move(from);
  }

  inline JoinPlayerSceneReq& operator=(JoinPlayerSceneReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinPlayerSceneReq& default_instance();

  static inline const JoinPlayerSceneReq* internal_default_instance() {
    return reinterpret_cast<const JoinPlayerSceneReq*>(
               &_JoinPlayerSceneReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    76;

  void Swap(JoinPlayerSceneReq* other);
  friend void swap(JoinPlayerSceneReq& a, JoinPlayerSceneReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JoinPlayerSceneReq* New() const PROTOBUF_FINAL { return New(NULL); }

  JoinPlayerSceneReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JoinPlayerSceneReq& from);
  void MergeFrom(const JoinPlayerSceneReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JoinPlayerSceneReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 target_uid = 12;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 12;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.JoinPlayerSceneReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JoinPlayerSceneRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.JoinPlayerSceneRsp) */ {
 public:
  JoinPlayerSceneRsp();
  virtual ~JoinPlayerSceneRsp();

  JoinPlayerSceneRsp(const JoinPlayerSceneRsp& from);

  inline JoinPlayerSceneRsp& operator=(const JoinPlayerSceneRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JoinPlayerSceneRsp(JoinPlayerSceneRsp&& from) noexcept
    : JoinPlayerSceneRsp() {
    *this = ::std::move(from);
  }

  inline JoinPlayerSceneRsp& operator=(JoinPlayerSceneRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinPlayerSceneRsp& default_instance();

  static inline const JoinPlayerSceneRsp* internal_default_instance() {
    return reinterpret_cast<const JoinPlayerSceneRsp*>(
               &_JoinPlayerSceneRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    77;

  void Swap(JoinPlayerSceneRsp* other);
  friend void swap(JoinPlayerSceneRsp& a, JoinPlayerSceneRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JoinPlayerSceneRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  JoinPlayerSceneRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JoinPlayerSceneRsp& from);
  void MergeFrom(const JoinPlayerSceneRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JoinPlayerSceneRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 10;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 10;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.JoinPlayerSceneRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneKickPlayerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneKickPlayerReq) */ {
 public:
  SceneKickPlayerReq();
  virtual ~SceneKickPlayerReq();

  SceneKickPlayerReq(const SceneKickPlayerReq& from);

  inline SceneKickPlayerReq& operator=(const SceneKickPlayerReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneKickPlayerReq(SceneKickPlayerReq&& from) noexcept
    : SceneKickPlayerReq() {
    *this = ::std::move(from);
  }

  inline SceneKickPlayerReq& operator=(SceneKickPlayerReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneKickPlayerReq& default_instance();

  static inline const SceneKickPlayerReq* internal_default_instance() {
    return reinterpret_cast<const SceneKickPlayerReq*>(
               &_SceneKickPlayerReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    78;

  void Swap(SceneKickPlayerReq* other);
  friend void swap(SceneKickPlayerReq& a, SceneKickPlayerReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneKickPlayerReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneKickPlayerReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneKickPlayerReq& from);
  void MergeFrom(const SceneKickPlayerReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneKickPlayerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 target_uid = 6;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 6;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneKickPlayerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneKickPlayerRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneKickPlayerRsp) */ {
 public:
  SceneKickPlayerRsp();
  virtual ~SceneKickPlayerRsp();

  SceneKickPlayerRsp(const SceneKickPlayerRsp& from);

  inline SceneKickPlayerRsp& operator=(const SceneKickPlayerRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneKickPlayerRsp(SceneKickPlayerRsp&& from) noexcept
    : SceneKickPlayerRsp() {
    *this = ::std::move(from);
  }

  inline SceneKickPlayerRsp& operator=(SceneKickPlayerRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneKickPlayerRsp& default_instance();

  static inline const SceneKickPlayerRsp* internal_default_instance() {
    return reinterpret_cast<const SceneKickPlayerRsp*>(
               &_SceneKickPlayerRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    79;

  void Swap(SceneKickPlayerRsp* other);
  friend void swap(SceneKickPlayerRsp& a, SceneKickPlayerRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneKickPlayerRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneKickPlayerRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneKickPlayerRsp& from);
  void MergeFrom(const SceneKickPlayerRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneKickPlayerRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 target_uid = 10;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 10;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // int32 retcode = 13;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 13;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneKickPlayerRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_uid_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneKickPlayerNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneKickPlayerNotify) */ {
 public:
  SceneKickPlayerNotify();
  virtual ~SceneKickPlayerNotify();

  SceneKickPlayerNotify(const SceneKickPlayerNotify& from);

  inline SceneKickPlayerNotify& operator=(const SceneKickPlayerNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneKickPlayerNotify(SceneKickPlayerNotify&& from) noexcept
    : SceneKickPlayerNotify() {
    *this = ::std::move(from);
  }

  inline SceneKickPlayerNotify& operator=(SceneKickPlayerNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneKickPlayerNotify& default_instance();

  static inline const SceneKickPlayerNotify* internal_default_instance() {
    return reinterpret_cast<const SceneKickPlayerNotify*>(
               &_SceneKickPlayerNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    80;

  void Swap(SceneKickPlayerNotify* other);
  friend void swap(SceneKickPlayerNotify& a, SceneKickPlayerNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneKickPlayerNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneKickPlayerNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneKickPlayerNotify& from);
  void MergeFrom(const SceneKickPlayerNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneKickPlayerNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 target_uid = 8;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 8;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // uint32 kicker_uid = 9;
  void clear_kicker_uid();
  static const int kKickerUidFieldNumber = 9;
  ::google::protobuf::uint32 kicker_uid() const;
  void set_kicker_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneKickPlayerNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_uid_;
  ::google::protobuf::uint32 kicker_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HitClientTrivialNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HitClientTrivialNotify) */ {
 public:
  HitClientTrivialNotify();
  virtual ~HitClientTrivialNotify();

  HitClientTrivialNotify(const HitClientTrivialNotify& from);

  inline HitClientTrivialNotify& operator=(const HitClientTrivialNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HitClientTrivialNotify(HitClientTrivialNotify&& from) noexcept
    : HitClientTrivialNotify() {
    *this = ::std::move(from);
  }

  inline HitClientTrivialNotify& operator=(HitClientTrivialNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HitClientTrivialNotify& default_instance();

  static inline const HitClientTrivialNotify* internal_default_instance() {
    return reinterpret_cast<const HitClientTrivialNotify*>(
               &_HitClientTrivialNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    81;

  void Swap(HitClientTrivialNotify* other);
  friend void swap(HitClientTrivialNotify& a, HitClientTrivialNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HitClientTrivialNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  HitClientTrivialNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HitClientTrivialNotify& from);
  void MergeFrom(const HitClientTrivialNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HitClientTrivialNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector position = 11;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 11;
  const ::proto::Vector& position() const;
  ::proto::Vector* mutable_position();
  ::proto::Vector* release_position();
  void set_allocated_position(::proto::Vector* position);

  // uint32 owner_entity_id = 12;
  void clear_owner_entity_id();
  static const int kOwnerEntityIdFieldNumber = 12;
  ::google::protobuf::uint32 owner_entity_id() const;
  void set_owner_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HitClientTrivialNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* position_;
  ::google::protobuf::uint32 owner_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BackMyWorldReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BackMyWorldReq) */ {
 public:
  BackMyWorldReq();
  virtual ~BackMyWorldReq();

  BackMyWorldReq(const BackMyWorldReq& from);

  inline BackMyWorldReq& operator=(const BackMyWorldReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BackMyWorldReq(BackMyWorldReq&& from) noexcept
    : BackMyWorldReq() {
    *this = ::std::move(from);
  }

  inline BackMyWorldReq& operator=(BackMyWorldReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BackMyWorldReq& default_instance();

  static inline const BackMyWorldReq* internal_default_instance() {
    return reinterpret_cast<const BackMyWorldReq*>(
               &_BackMyWorldReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    82;

  void Swap(BackMyWorldReq* other);
  friend void swap(BackMyWorldReq& a, BackMyWorldReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BackMyWorldReq* New() const PROTOBUF_FINAL { return New(NULL); }

  BackMyWorldReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BackMyWorldReq& from);
  void MergeFrom(const BackMyWorldReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BackMyWorldReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.BackMyWorldReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BackMyWorldRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BackMyWorldRsp) */ {
 public:
  BackMyWorldRsp();
  virtual ~BackMyWorldRsp();

  BackMyWorldRsp(const BackMyWorldRsp& from);

  inline BackMyWorldRsp& operator=(const BackMyWorldRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BackMyWorldRsp(BackMyWorldRsp&& from) noexcept
    : BackMyWorldRsp() {
    *this = ::std::move(from);
  }

  inline BackMyWorldRsp& operator=(BackMyWorldRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BackMyWorldRsp& default_instance();

  static inline const BackMyWorldRsp* internal_default_instance() {
    return reinterpret_cast<const BackMyWorldRsp*>(
               &_BackMyWorldRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    83;

  void Swap(BackMyWorldRsp* other);
  friend void swap(BackMyWorldRsp& a, BackMyWorldRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BackMyWorldRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  BackMyWorldRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BackMyWorldRsp& from);
  void MergeFrom(const BackMyWorldRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BackMyWorldRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 11;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 11;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.BackMyWorldRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SeeMonsterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SeeMonsterReq) */ {
 public:
  SeeMonsterReq();
  virtual ~SeeMonsterReq();

  SeeMonsterReq(const SeeMonsterReq& from);

  inline SeeMonsterReq& operator=(const SeeMonsterReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SeeMonsterReq(SeeMonsterReq&& from) noexcept
    : SeeMonsterReq() {
    *this = ::std::move(from);
  }

  inline SeeMonsterReq& operator=(SeeMonsterReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SeeMonsterReq& default_instance();

  static inline const SeeMonsterReq* internal_default_instance() {
    return reinterpret_cast<const SeeMonsterReq*>(
               &_SeeMonsterReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    84;

  void Swap(SeeMonsterReq* other);
  friend void swap(SeeMonsterReq& a, SeeMonsterReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SeeMonsterReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SeeMonsterReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SeeMonsterReq& from);
  void MergeFrom(const SeeMonsterReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SeeMonsterReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 monster_id = 7;
  void clear_monster_id();
  static const int kMonsterIdFieldNumber = 7;
  ::google::protobuf::uint32 monster_id() const;
  void set_monster_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SeeMonsterReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 monster_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SeeMonsterRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SeeMonsterRsp) */ {
 public:
  SeeMonsterRsp();
  virtual ~SeeMonsterRsp();

  SeeMonsterRsp(const SeeMonsterRsp& from);

  inline SeeMonsterRsp& operator=(const SeeMonsterRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SeeMonsterRsp(SeeMonsterRsp&& from) noexcept
    : SeeMonsterRsp() {
    *this = ::std::move(from);
  }

  inline SeeMonsterRsp& operator=(SeeMonsterRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SeeMonsterRsp& default_instance();

  static inline const SeeMonsterRsp* internal_default_instance() {
    return reinterpret_cast<const SeeMonsterRsp*>(
               &_SeeMonsterRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    85;

  void Swap(SeeMonsterRsp* other);
  friend void swap(SeeMonsterRsp& a, SeeMonsterRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SeeMonsterRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SeeMonsterRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SeeMonsterRsp& from);
  void MergeFrom(const SeeMonsterRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SeeMonsterRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 9;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 9;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SeeMonsterRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddSeenMonsterNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AddSeenMonsterNotify) */ {
 public:
  AddSeenMonsterNotify();
  virtual ~AddSeenMonsterNotify();

  AddSeenMonsterNotify(const AddSeenMonsterNotify& from);

  inline AddSeenMonsterNotify& operator=(const AddSeenMonsterNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddSeenMonsterNotify(AddSeenMonsterNotify&& from) noexcept
    : AddSeenMonsterNotify() {
    *this = ::std::move(from);
  }

  inline AddSeenMonsterNotify& operator=(AddSeenMonsterNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddSeenMonsterNotify& default_instance();

  static inline const AddSeenMonsterNotify* internal_default_instance() {
    return reinterpret_cast<const AddSeenMonsterNotify*>(
               &_AddSeenMonsterNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    86;

  void Swap(AddSeenMonsterNotify* other);
  friend void swap(AddSeenMonsterNotify& a, AddSeenMonsterNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddSeenMonsterNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AddSeenMonsterNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddSeenMonsterNotify& from);
  void MergeFrom(const AddSeenMonsterNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddSeenMonsterNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 monster_id_list = 12;
  int monster_id_list_size() const;
  void clear_monster_id_list();
  static const int kMonsterIdListFieldNumber = 12;
  ::google::protobuf::uint32 monster_id_list(int index) const;
  void set_monster_id_list(int index, ::google::protobuf::uint32 value);
  void add_monster_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      monster_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_monster_id_list();

  // @@protoc_insertion_point(class_scope:proto.AddSeenMonsterNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > monster_id_list_;
  mutable int _monster_id_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllSeenMonsterNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AllSeenMonsterNotify) */ {
 public:
  AllSeenMonsterNotify();
  virtual ~AllSeenMonsterNotify();

  AllSeenMonsterNotify(const AllSeenMonsterNotify& from);

  inline AllSeenMonsterNotify& operator=(const AllSeenMonsterNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AllSeenMonsterNotify(AllSeenMonsterNotify&& from) noexcept
    : AllSeenMonsterNotify() {
    *this = ::std::move(from);
  }

  inline AllSeenMonsterNotify& operator=(AllSeenMonsterNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AllSeenMonsterNotify& default_instance();

  static inline const AllSeenMonsterNotify* internal_default_instance() {
    return reinterpret_cast<const AllSeenMonsterNotify*>(
               &_AllSeenMonsterNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    87;

  void Swap(AllSeenMonsterNotify* other);
  friend void swap(AllSeenMonsterNotify& a, AllSeenMonsterNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AllSeenMonsterNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AllSeenMonsterNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AllSeenMonsterNotify& from);
  void MergeFrom(const AllSeenMonsterNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AllSeenMonsterNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 monster_id_list = 4;
  int monster_id_list_size() const;
  void clear_monster_id_list();
  static const int kMonsterIdListFieldNumber = 4;
  ::google::protobuf::uint32 monster_id_list(int index) const;
  void set_monster_id_list(int index, ::google::protobuf::uint32 value);
  void add_monster_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      monster_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_monster_id_list();

  // @@protoc_insertion_point(class_scope:proto.AllSeenMonsterNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > monster_id_list_;
  mutable int _monster_id_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneTimeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneTimeNotify) */ {
 public:
  SceneTimeNotify();
  virtual ~SceneTimeNotify();

  SceneTimeNotify(const SceneTimeNotify& from);

  inline SceneTimeNotify& operator=(const SceneTimeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneTimeNotify(SceneTimeNotify&& from) noexcept
    : SceneTimeNotify() {
    *this = ::std::move(from);
  }

  inline SceneTimeNotify& operator=(SceneTimeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneTimeNotify& default_instance();

  static inline const SceneTimeNotify* internal_default_instance() {
    return reinterpret_cast<const SceneTimeNotify*>(
               &_SceneTimeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    88;

  void Swap(SceneTimeNotify* other);
  friend void swap(SceneTimeNotify& a, SceneTimeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneTimeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneTimeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneTimeNotify& from);
  void MergeFrom(const SceneTimeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneTimeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_paused = 1;
  void clear_is_paused();
  static const int kIsPausedFieldNumber = 1;
  bool is_paused() const;
  void set_is_paused(bool value);

  // uint32 scene_id = 7;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 7;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint64 scene_time = 14;
  void clear_scene_time();
  static const int kSceneTimeFieldNumber = 14;
  ::google::protobuf::uint64 scene_time() const;
  void set_scene_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.SceneTimeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_paused_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint64 scene_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterSceneReadyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EnterSceneReadyReq) */ {
 public:
  EnterSceneReadyReq();
  virtual ~EnterSceneReadyReq();

  EnterSceneReadyReq(const EnterSceneReadyReq& from);

  inline EnterSceneReadyReq& operator=(const EnterSceneReadyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterSceneReadyReq(EnterSceneReadyReq&& from) noexcept
    : EnterSceneReadyReq() {
    *this = ::std::move(from);
  }

  inline EnterSceneReadyReq& operator=(EnterSceneReadyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterSceneReadyReq& default_instance();

  static inline const EnterSceneReadyReq* internal_default_instance() {
    return reinterpret_cast<const EnterSceneReadyReq*>(
               &_EnterSceneReadyReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    89;

  void Swap(EnterSceneReadyReq* other);
  friend void swap(EnterSceneReadyReq& a, EnterSceneReadyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterSceneReadyReq* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterSceneReadyReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterSceneReadyReq& from);
  void MergeFrom(const EnterSceneReadyReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterSceneReadyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 enter_scene_token = 9;
  void clear_enter_scene_token();
  static const int kEnterSceneTokenFieldNumber = 9;
  ::google::protobuf::uint32 enter_scene_token() const;
  void set_enter_scene_token(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EnterSceneReadyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 enter_scene_token_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterSceneReadyRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EnterSceneReadyRsp) */ {
 public:
  EnterSceneReadyRsp();
  virtual ~EnterSceneReadyRsp();

  EnterSceneReadyRsp(const EnterSceneReadyRsp& from);

  inline EnterSceneReadyRsp& operator=(const EnterSceneReadyRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterSceneReadyRsp(EnterSceneReadyRsp&& from) noexcept
    : EnterSceneReadyRsp() {
    *this = ::std::move(from);
  }

  inline EnterSceneReadyRsp& operator=(EnterSceneReadyRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterSceneReadyRsp& default_instance();

  static inline const EnterSceneReadyRsp* internal_default_instance() {
    return reinterpret_cast<const EnterSceneReadyRsp*>(
               &_EnterSceneReadyRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    90;

  void Swap(EnterSceneReadyRsp* other);
  friend void swap(EnterSceneReadyRsp& a, EnterSceneReadyRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterSceneReadyRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterSceneReadyRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterSceneReadyRsp& from);
  void MergeFrom(const EnterSceneReadyRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterSceneReadyRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 enter_scene_token = 1;
  void clear_enter_scene_token();
  static const int kEnterSceneTokenFieldNumber = 1;
  ::google::protobuf::uint32 enter_scene_token() const;
  void set_enter_scene_token(::google::protobuf::uint32 value);

  // int32 retcode = 4;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 4;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.EnterSceneReadyRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 enter_scene_token_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterScenePeerNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EnterScenePeerNotify) */ {
 public:
  EnterScenePeerNotify();
  virtual ~EnterScenePeerNotify();

  EnterScenePeerNotify(const EnterScenePeerNotify& from);

  inline EnterScenePeerNotify& operator=(const EnterScenePeerNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterScenePeerNotify(EnterScenePeerNotify&& from) noexcept
    : EnterScenePeerNotify() {
    *this = ::std::move(from);
  }

  inline EnterScenePeerNotify& operator=(EnterScenePeerNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterScenePeerNotify& default_instance();

  static inline const EnterScenePeerNotify* internal_default_instance() {
    return reinterpret_cast<const EnterScenePeerNotify*>(
               &_EnterScenePeerNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    91;

  void Swap(EnterScenePeerNotify* other);
  friend void swap(EnterScenePeerNotify& a, EnterScenePeerNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterScenePeerNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterScenePeerNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterScenePeerNotify& from);
  void MergeFrom(const EnterScenePeerNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterScenePeerNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 peer_id = 1;
  void clear_peer_id();
  static const int kPeerIdFieldNumber = 1;
  ::google::protobuf::uint32 peer_id() const;
  void set_peer_id(::google::protobuf::uint32 value);

  // uint32 enter_scene_token = 11;
  void clear_enter_scene_token();
  static const int kEnterSceneTokenFieldNumber = 11;
  ::google::protobuf::uint32 enter_scene_token() const;
  void set_enter_scene_token(::google::protobuf::uint32 value);

  // uint32 dest_scene_id = 12;
  void clear_dest_scene_id();
  static const int kDestSceneIdFieldNumber = 12;
  ::google::protobuf::uint32 dest_scene_id() const;
  void set_dest_scene_id(::google::protobuf::uint32 value);

  // uint32 host_peer_id = 14;
  void clear_host_peer_id();
  static const int kHostPeerIdFieldNumber = 14;
  ::google::protobuf::uint32 host_peer_id() const;
  void set_host_peer_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EnterScenePeerNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 peer_id_;
  ::google::protobuf::uint32 enter_scene_token_;
  ::google::protobuf::uint32 dest_scene_id_;
  ::google::protobuf::uint32 host_peer_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterSceneDoneReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EnterSceneDoneReq) */ {
 public:
  EnterSceneDoneReq();
  virtual ~EnterSceneDoneReq();

  EnterSceneDoneReq(const EnterSceneDoneReq& from);

  inline EnterSceneDoneReq& operator=(const EnterSceneDoneReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterSceneDoneReq(EnterSceneDoneReq&& from) noexcept
    : EnterSceneDoneReq() {
    *this = ::std::move(from);
  }

  inline EnterSceneDoneReq& operator=(EnterSceneDoneReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterSceneDoneReq& default_instance();

  static inline const EnterSceneDoneReq* internal_default_instance() {
    return reinterpret_cast<const EnterSceneDoneReq*>(
               &_EnterSceneDoneReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    92;

  void Swap(EnterSceneDoneReq* other);
  friend void swap(EnterSceneDoneReq& a, EnterSceneDoneReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterSceneDoneReq* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterSceneDoneReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterSceneDoneReq& from);
  void MergeFrom(const EnterSceneDoneReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterSceneDoneReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 enter_scene_token = 11;
  void clear_enter_scene_token();
  static const int kEnterSceneTokenFieldNumber = 11;
  ::google::protobuf::uint32 enter_scene_token() const;
  void set_enter_scene_token(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EnterSceneDoneReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 enter_scene_token_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterSceneDoneRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EnterSceneDoneRsp) */ {
 public:
  EnterSceneDoneRsp();
  virtual ~EnterSceneDoneRsp();

  EnterSceneDoneRsp(const EnterSceneDoneRsp& from);

  inline EnterSceneDoneRsp& operator=(const EnterSceneDoneRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterSceneDoneRsp(EnterSceneDoneRsp&& from) noexcept
    : EnterSceneDoneRsp() {
    *this = ::std::move(from);
  }

  inline EnterSceneDoneRsp& operator=(EnterSceneDoneRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterSceneDoneRsp& default_instance();

  static inline const EnterSceneDoneRsp* internal_default_instance() {
    return reinterpret_cast<const EnterSceneDoneRsp*>(
               &_EnterSceneDoneRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    93;

  void Swap(EnterSceneDoneRsp* other);
  friend void swap(EnterSceneDoneRsp& a, EnterSceneDoneRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterSceneDoneRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterSceneDoneRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterSceneDoneRsp& from);
  void MergeFrom(const EnterSceneDoneRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterSceneDoneRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 7;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 7;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 enter_scene_token = 15;
  void clear_enter_scene_token();
  static const int kEnterSceneTokenFieldNumber = 15;
  ::google::protobuf::uint32 enter_scene_token() const;
  void set_enter_scene_token(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EnterSceneDoneRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 enter_scene_token_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorldPlayerDieNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WorldPlayerDieNotify) */ {
 public:
  WorldPlayerDieNotify();
  virtual ~WorldPlayerDieNotify();

  WorldPlayerDieNotify(const WorldPlayerDieNotify& from);

  inline WorldPlayerDieNotify& operator=(const WorldPlayerDieNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldPlayerDieNotify(WorldPlayerDieNotify&& from) noexcept
    : WorldPlayerDieNotify() {
    *this = ::std::move(from);
  }

  inline WorldPlayerDieNotify& operator=(WorldPlayerDieNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldPlayerDieNotify& default_instance();

  enum EntityCase {
    kMonsterId = 8,
    kGadgetId = 4,
    ENTITY_NOT_SET = 0,
  };

  static inline const WorldPlayerDieNotify* internal_default_instance() {
    return reinterpret_cast<const WorldPlayerDieNotify*>(
               &_WorldPlayerDieNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    94;

  void Swap(WorldPlayerDieNotify* other);
  friend void swap(WorldPlayerDieNotify& a, WorldPlayerDieNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldPlayerDieNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  WorldPlayerDieNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorldPlayerDieNotify& from);
  void MergeFrom(const WorldPlayerDieNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorldPlayerDieNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.PlayerDieType die_type = 12;
  void clear_die_type();
  static const int kDieTypeFieldNumber = 12;
  ::proto::PlayerDieType die_type() const;
  void set_die_type(::proto::PlayerDieType value);

  // uint32 murderer_entity_id = 15;
  void clear_murderer_entity_id();
  static const int kMurdererEntityIdFieldNumber = 15;
  ::google::protobuf::uint32 murderer_entity_id() const;
  void set_murderer_entity_id(::google::protobuf::uint32 value);

  // uint32 monster_id = 8;
  private:
  bool has_monster_id() const;
  public:
  void clear_monster_id();
  static const int kMonsterIdFieldNumber = 8;
  ::google::protobuf::uint32 monster_id() const;
  void set_monster_id(::google::protobuf::uint32 value);

  // uint32 gadget_id = 4;
  private:
  bool has_gadget_id() const;
  public:
  void clear_gadget_id();
  static const int kGadgetIdFieldNumber = 4;
  ::google::protobuf::uint32 gadget_id() const;
  void set_gadget_id(::google::protobuf::uint32 value);

  EntityCase entity_case() const;
  // @@protoc_insertion_point(class_scope:proto.WorldPlayerDieNotify)
 private:
  void set_has_monster_id();
  void set_has_gadget_id();

  inline bool has_entity() const;
  void clear_entity();
  inline void clear_has_entity();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int die_type_;
  ::google::protobuf::uint32 murderer_entity_id_;
  union EntityUnion {
    EntityUnion() {}
    ::google::protobuf::uint32 monster_id_;
    ::google::protobuf::uint32 gadget_id_;
  } entity_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorldPlayerReviveReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WorldPlayerReviveReq) */ {
 public:
  WorldPlayerReviveReq();
  virtual ~WorldPlayerReviveReq();

  WorldPlayerReviveReq(const WorldPlayerReviveReq& from);

  inline WorldPlayerReviveReq& operator=(const WorldPlayerReviveReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldPlayerReviveReq(WorldPlayerReviveReq&& from) noexcept
    : WorldPlayerReviveReq() {
    *this = ::std::move(from);
  }

  inline WorldPlayerReviveReq& operator=(WorldPlayerReviveReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldPlayerReviveReq& default_instance();

  static inline const WorldPlayerReviveReq* internal_default_instance() {
    return reinterpret_cast<const WorldPlayerReviveReq*>(
               &_WorldPlayerReviveReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    95;

  void Swap(WorldPlayerReviveReq* other);
  friend void swap(WorldPlayerReviveReq& a, WorldPlayerReviveReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldPlayerReviveReq* New() const PROTOBUF_FINAL { return New(NULL); }

  WorldPlayerReviveReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorldPlayerReviveReq& from);
  void MergeFrom(const WorldPlayerReviveReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorldPlayerReviveReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.WorldPlayerReviveReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorldPlayerReviveRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WorldPlayerReviveRsp) */ {
 public:
  WorldPlayerReviveRsp();
  virtual ~WorldPlayerReviveRsp();

  WorldPlayerReviveRsp(const WorldPlayerReviveRsp& from);

  inline WorldPlayerReviveRsp& operator=(const WorldPlayerReviveRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldPlayerReviveRsp(WorldPlayerReviveRsp&& from) noexcept
    : WorldPlayerReviveRsp() {
    *this = ::std::move(from);
  }

  inline WorldPlayerReviveRsp& operator=(WorldPlayerReviveRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldPlayerReviveRsp& default_instance();

  static inline const WorldPlayerReviveRsp* internal_default_instance() {
    return reinterpret_cast<const WorldPlayerReviveRsp*>(
               &_WorldPlayerReviveRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    96;

  void Swap(WorldPlayerReviveRsp* other);
  friend void swap(WorldPlayerReviveRsp& a, WorldPlayerReviveRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldPlayerReviveRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  WorldPlayerReviveRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorldPlayerReviveRsp& from);
  void MergeFrom(const WorldPlayerReviveRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorldPlayerReviveRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 3;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 3;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.WorldPlayerReviveRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JoinPlayerFailNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.JoinPlayerFailNotify) */ {
 public:
  JoinPlayerFailNotify();
  virtual ~JoinPlayerFailNotify();

  JoinPlayerFailNotify(const JoinPlayerFailNotify& from);

  inline JoinPlayerFailNotify& operator=(const JoinPlayerFailNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JoinPlayerFailNotify(JoinPlayerFailNotify&& from) noexcept
    : JoinPlayerFailNotify() {
    *this = ::std::move(from);
  }

  inline JoinPlayerFailNotify& operator=(JoinPlayerFailNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinPlayerFailNotify& default_instance();

  static inline const JoinPlayerFailNotify* internal_default_instance() {
    return reinterpret_cast<const JoinPlayerFailNotify*>(
               &_JoinPlayerFailNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    97;

  void Swap(JoinPlayerFailNotify* other);
  friend void swap(JoinPlayerFailNotify& a, JoinPlayerFailNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JoinPlayerFailNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  JoinPlayerFailNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JoinPlayerFailNotify& from);
  void MergeFrom(const JoinPlayerFailNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JoinPlayerFailNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 11;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 11;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.JoinPlayerFailNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class SetSceneWeatherAreaReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetSceneWeatherAreaReq) */ {
 public:
  SetSceneWeatherAreaReq();
  virtual ~SetSceneWeatherAreaReq();

  SetSceneWeatherAreaReq(const SetSceneWeatherAreaReq& from);

  inline SetSceneWeatherAreaReq& operator=(const SetSceneWeatherAreaReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetSceneWeatherAreaReq(SetSceneWeatherAreaReq&& from) noexcept
    : SetSceneWeatherAreaReq() {
    *this = ::std::move(from);
  }

  inline SetSceneWeatherAreaReq& operator=(SetSceneWeatherAreaReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetSceneWeatherAreaReq& default_instance();

  static inline const SetSceneWeatherAreaReq* internal_default_instance() {
    return reinterpret_cast<const SetSceneWeatherAreaReq*>(
               &_SetSceneWeatherAreaReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    99;

  void Swap(SetSceneWeatherAreaReq* other);
  friend void swap(SetSceneWeatherAreaReq& a, SetSceneWeatherAreaReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetSceneWeatherAreaReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetSceneWeatherAreaReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetSceneWeatherAreaReq& from);
  void MergeFrom(const SetSceneWeatherAreaReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetSceneWeatherAreaReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, string> weather_value_map = 4;
  int weather_value_map_size() const;
  void clear_weather_value_map();
  static const int kWeatherValueMapFieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >&
      weather_value_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >*
      mutable_weather_value_map();

  // uint32 weather_gadget_id = 13;
  void clear_weather_gadget_id();
  static const int kWeatherGadgetIdFieldNumber = 13;
  ::google::protobuf::uint32 weather_gadget_id() const;
  void set_weather_gadget_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetSceneWeatherAreaReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class SetSceneWeatherAreaReq_WeatherValueMapEntry : public ::google::protobuf::internal::MapEntry<SetSceneWeatherAreaReq_WeatherValueMapEntry, 
      ::google::protobuf::uint32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SetSceneWeatherAreaReq_WeatherValueMapEntry, 
      ::google::protobuf::uint32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > SuperType;
    SetSceneWeatherAreaReq_WeatherValueMapEntry();
    SetSceneWeatherAreaReq_WeatherValueMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SetSceneWeatherAreaReq_WeatherValueMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SetSceneWeatherAreaReq_WeatherValueMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SetSceneWeatherAreaReq_WeatherValueMapEntry,
      ::google::protobuf::uint32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > weather_value_map_;
  private:
  ::google::protobuf::uint32 weather_gadget_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetSceneWeatherAreaRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetSceneWeatherAreaRsp) */ {
 public:
  SetSceneWeatherAreaRsp();
  virtual ~SetSceneWeatherAreaRsp();

  SetSceneWeatherAreaRsp(const SetSceneWeatherAreaRsp& from);

  inline SetSceneWeatherAreaRsp& operator=(const SetSceneWeatherAreaRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetSceneWeatherAreaRsp(SetSceneWeatherAreaRsp&& from) noexcept
    : SetSceneWeatherAreaRsp() {
    *this = ::std::move(from);
  }

  inline SetSceneWeatherAreaRsp& operator=(SetSceneWeatherAreaRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetSceneWeatherAreaRsp& default_instance();

  static inline const SetSceneWeatherAreaRsp* internal_default_instance() {
    return reinterpret_cast<const SetSceneWeatherAreaRsp*>(
               &_SetSceneWeatherAreaRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    100;

  void Swap(SetSceneWeatherAreaRsp* other);
  friend void swap(SetSceneWeatherAreaRsp& a, SetSceneWeatherAreaRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetSceneWeatherAreaRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetSceneWeatherAreaRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetSceneWeatherAreaRsp& from);
  void MergeFrom(const SetSceneWeatherAreaRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetSceneWeatherAreaRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 4;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 4;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SetSceneWeatherAreaRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExecuteGadgetLuaReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ExecuteGadgetLuaReq) */ {
 public:
  ExecuteGadgetLuaReq();
  virtual ~ExecuteGadgetLuaReq();

  ExecuteGadgetLuaReq(const ExecuteGadgetLuaReq& from);

  inline ExecuteGadgetLuaReq& operator=(const ExecuteGadgetLuaReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecuteGadgetLuaReq(ExecuteGadgetLuaReq&& from) noexcept
    : ExecuteGadgetLuaReq() {
    *this = ::std::move(from);
  }

  inline ExecuteGadgetLuaReq& operator=(ExecuteGadgetLuaReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteGadgetLuaReq& default_instance();

  static inline const ExecuteGadgetLuaReq* internal_default_instance() {
    return reinterpret_cast<const ExecuteGadgetLuaReq*>(
               &_ExecuteGadgetLuaReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    101;

  void Swap(ExecuteGadgetLuaReq* other);
  friend void swap(ExecuteGadgetLuaReq& a, ExecuteGadgetLuaReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecuteGadgetLuaReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ExecuteGadgetLuaReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExecuteGadgetLuaReq& from);
  void MergeFrom(const ExecuteGadgetLuaReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExecuteGadgetLuaReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 param3 = 1;
  void clear_param3();
  static const int kParam3FieldNumber = 1;
  ::google::protobuf::int32 param3() const;
  void set_param3(::google::protobuf::int32 value);

  // int32 param1 = 5;
  void clear_param1();
  static const int kParam1FieldNumber = 5;
  ::google::protobuf::int32 param1() const;
  void set_param1(::google::protobuf::int32 value);

  // uint32 source_entity_id = 12;
  void clear_source_entity_id();
  static const int kSourceEntityIdFieldNumber = 12;
  ::google::protobuf::uint32 source_entity_id() const;
  void set_source_entity_id(::google::protobuf::uint32 value);

  // int32 param2 = 14;
  void clear_param2();
  static const int kParam2FieldNumber = 14;
  ::google::protobuf::int32 param2() const;
  void set_param2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ExecuteGadgetLuaReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 param3_;
  ::google::protobuf::int32 param1_;
  ::google::protobuf::uint32 source_entity_id_;
  ::google::protobuf::int32 param2_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExecuteGadgetLuaRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ExecuteGadgetLuaRsp) */ {
 public:
  ExecuteGadgetLuaRsp();
  virtual ~ExecuteGadgetLuaRsp();

  ExecuteGadgetLuaRsp(const ExecuteGadgetLuaRsp& from);

  inline ExecuteGadgetLuaRsp& operator=(const ExecuteGadgetLuaRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecuteGadgetLuaRsp(ExecuteGadgetLuaRsp&& from) noexcept
    : ExecuteGadgetLuaRsp() {
    *this = ::std::move(from);
  }

  inline ExecuteGadgetLuaRsp& operator=(ExecuteGadgetLuaRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteGadgetLuaRsp& default_instance();

  static inline const ExecuteGadgetLuaRsp* internal_default_instance() {
    return reinterpret_cast<const ExecuteGadgetLuaRsp*>(
               &_ExecuteGadgetLuaRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    102;

  void Swap(ExecuteGadgetLuaRsp* other);
  friend void swap(ExecuteGadgetLuaRsp& a, ExecuteGadgetLuaRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecuteGadgetLuaRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ExecuteGadgetLuaRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExecuteGadgetLuaRsp& from);
  void MergeFrom(const ExecuteGadgetLuaRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExecuteGadgetLuaRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 12;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 12;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ExecuteGadgetLuaRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CutSceneExtraParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CutSceneExtraParam) */ {
 public:
  CutSceneExtraParam();
  virtual ~CutSceneExtraParam();

  CutSceneExtraParam(const CutSceneExtraParam& from);

  inline CutSceneExtraParam& operator=(const CutSceneExtraParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CutSceneExtraParam(CutSceneExtraParam&& from) noexcept
    : CutSceneExtraParam() {
    *this = ::std::move(from);
  }

  inline CutSceneExtraParam& operator=(CutSceneExtraParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CutSceneExtraParam& default_instance();

  static inline const CutSceneExtraParam* internal_default_instance() {
    return reinterpret_cast<const CutSceneExtraParam*>(
               &_CutSceneExtraParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    103;

  void Swap(CutSceneExtraParam* other);
  friend void swap(CutSceneExtraParam& a, CutSceneExtraParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CutSceneExtraParam* New() const PROTOBUF_FINAL { return New(NULL); }

  CutSceneExtraParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CutSceneExtraParam& from);
  void MergeFrom(const CutSceneExtraParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CutSceneExtraParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double detail_param_list = 1;
  int detail_param_list_size() const;
  void clear_detail_param_list();
  static const int kDetailParamListFieldNumber = 1;
  double detail_param_list(int index) const;
  void set_detail_param_list(int index, double value);
  void add_detail_param_list(double value);
  const ::google::protobuf::RepeatedField< double >&
      detail_param_list() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_detail_param_list();

  // @@protoc_insertion_point(class_scope:proto.CutSceneExtraParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > detail_param_list_;
  mutable int _detail_param_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CutSceneBeginNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CutSceneBeginNotify) */ {
 public:
  CutSceneBeginNotify();
  virtual ~CutSceneBeginNotify();

  CutSceneBeginNotify(const CutSceneBeginNotify& from);

  inline CutSceneBeginNotify& operator=(const CutSceneBeginNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CutSceneBeginNotify(CutSceneBeginNotify&& from) noexcept
    : CutSceneBeginNotify() {
    *this = ::std::move(from);
  }

  inline CutSceneBeginNotify& operator=(CutSceneBeginNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CutSceneBeginNotify& default_instance();

  static inline const CutSceneBeginNotify* internal_default_instance() {
    return reinterpret_cast<const CutSceneBeginNotify*>(
               &_CutSceneBeginNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    104;

  void Swap(CutSceneBeginNotify* other);
  friend void swap(CutSceneBeginNotify& a, CutSceneBeginNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CutSceneBeginNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CutSceneBeginNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CutSceneBeginNotify& from);
  void MergeFrom(const CutSceneBeginNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CutSceneBeginNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.CutSceneExtraParam extra_param_list = 3;
  int extra_param_list_size() const;
  void clear_extra_param_list();
  static const int kExtraParamListFieldNumber = 3;
  const ::proto::CutSceneExtraParam& extra_param_list(int index) const;
  ::proto::CutSceneExtraParam* mutable_extra_param_list(int index);
  ::proto::CutSceneExtraParam* add_extra_param_list();
  ::google::protobuf::RepeatedPtrField< ::proto::CutSceneExtraParam >*
      mutable_extra_param_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::CutSceneExtraParam >&
      extra_param_list() const;

  // bool is_wait_others = 9;
  void clear_is_wait_others();
  static const int kIsWaitOthersFieldNumber = 9;
  bool is_wait_others() const;
  void set_is_wait_others(bool value);

  // uint32 cutscene_id = 14;
  void clear_cutscene_id();
  static const int kCutsceneIdFieldNumber = 14;
  ::google::protobuf::uint32 cutscene_id() const;
  void set_cutscene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CutSceneBeginNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::CutSceneExtraParam > extra_param_list_;
  bool is_wait_others_;
  ::google::protobuf::uint32 cutscene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CutSceneFinishNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CutSceneFinishNotify) */ {
 public:
  CutSceneFinishNotify();
  virtual ~CutSceneFinishNotify();

  CutSceneFinishNotify(const CutSceneFinishNotify& from);

  inline CutSceneFinishNotify& operator=(const CutSceneFinishNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CutSceneFinishNotify(CutSceneFinishNotify&& from) noexcept
    : CutSceneFinishNotify() {
    *this = ::std::move(from);
  }

  inline CutSceneFinishNotify& operator=(CutSceneFinishNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CutSceneFinishNotify& default_instance();

  static inline const CutSceneFinishNotify* internal_default_instance() {
    return reinterpret_cast<const CutSceneFinishNotify*>(
               &_CutSceneFinishNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    105;

  void Swap(CutSceneFinishNotify* other);
  friend void swap(CutSceneFinishNotify& a, CutSceneFinishNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CutSceneFinishNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CutSceneFinishNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CutSceneFinishNotify& from);
  void MergeFrom(const CutSceneFinishNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CutSceneFinishNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 cutscene_id = 12;
  void clear_cutscene_id();
  static const int kCutsceneIdFieldNumber = 12;
  ::google::protobuf::uint32 cutscene_id() const;
  void set_cutscene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CutSceneFinishNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 cutscene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CutSceneEndNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CutSceneEndNotify) */ {
 public:
  CutSceneEndNotify();
  virtual ~CutSceneEndNotify();

  CutSceneEndNotify(const CutSceneEndNotify& from);

  inline CutSceneEndNotify& operator=(const CutSceneEndNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CutSceneEndNotify(CutSceneEndNotify&& from) noexcept
    : CutSceneEndNotify() {
    *this = ::std::move(from);
  }

  inline CutSceneEndNotify& operator=(CutSceneEndNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CutSceneEndNotify& default_instance();

  static inline const CutSceneEndNotify* internal_default_instance() {
    return reinterpret_cast<const CutSceneEndNotify*>(
               &_CutSceneEndNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    106;

  void Swap(CutSceneEndNotify* other);
  friend void swap(CutSceneEndNotify& a, CutSceneEndNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CutSceneEndNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CutSceneEndNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CutSceneEndNotify& from);
  void MergeFrom(const CutSceneEndNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CutSceneEndNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 5;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 5;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 cutscene_id = 14;
  void clear_cutscene_id();
  static const int kCutsceneIdFieldNumber = 14;
  ::google::protobuf::uint32 cutscene_id() const;
  void set_cutscene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CutSceneEndNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 cutscene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientScriptEventNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClientScriptEventNotify) */ {
 public:
  ClientScriptEventNotify();
  virtual ~ClientScriptEventNotify();

  ClientScriptEventNotify(const ClientScriptEventNotify& from);

  inline ClientScriptEventNotify& operator=(const ClientScriptEventNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientScriptEventNotify(ClientScriptEventNotify&& from) noexcept
    : ClientScriptEventNotify() {
    *this = ::std::move(from);
  }

  inline ClientScriptEventNotify& operator=(ClientScriptEventNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientScriptEventNotify& default_instance();

  static inline const ClientScriptEventNotify* internal_default_instance() {
    return reinterpret_cast<const ClientScriptEventNotify*>(
               &_ClientScriptEventNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    107;

  void Swap(ClientScriptEventNotify* other);
  friend void swap(ClientScriptEventNotify& a, ClientScriptEventNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientScriptEventNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientScriptEventNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientScriptEventNotify& from);
  void MergeFrom(const ClientScriptEventNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientScriptEventNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 param_list = 9;
  int param_list_size() const;
  void clear_param_list();
  static const int kParamListFieldNumber = 9;
  ::google::protobuf::int32 param_list(int index) const;
  void set_param_list(int index, ::google::protobuf::int32 value);
  void add_param_list(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      param_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_param_list();

  // uint32 source_entity_id = 14;
  void clear_source_entity_id();
  static const int kSourceEntityIdFieldNumber = 14;
  ::google::protobuf::uint32 source_entity_id() const;
  void set_source_entity_id(::google::protobuf::uint32 value);

  // uint32 event_type = 10;
  void clear_event_type();
  static const int kEventTypeFieldNumber = 10;
  ::google::protobuf::uint32 event_type() const;
  void set_event_type(::google::protobuf::uint32 value);

  // uint32 target_entity_id = 13;
  void clear_target_entity_id();
  static const int kTargetEntityIdFieldNumber = 13;
  ::google::protobuf::uint32 target_entity_id() const;
  void set_target_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ClientScriptEventNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > param_list_;
  mutable int _param_list_cached_byte_size_;
  ::google::protobuf::uint32 source_entity_id_;
  ::google::protobuf::uint32 event_type_;
  ::google::protobuf::uint32 target_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneEntitiesMovesReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEntitiesMovesReq) */ {
 public:
  SceneEntitiesMovesReq();
  virtual ~SceneEntitiesMovesReq();

  SceneEntitiesMovesReq(const SceneEntitiesMovesReq& from);

  inline SceneEntitiesMovesReq& operator=(const SceneEntitiesMovesReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEntitiesMovesReq(SceneEntitiesMovesReq&& from) noexcept
    : SceneEntitiesMovesReq() {
    *this = ::std::move(from);
  }

  inline SceneEntitiesMovesReq& operator=(SceneEntitiesMovesReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEntitiesMovesReq& default_instance();

  static inline const SceneEntitiesMovesReq* internal_default_instance() {
    return reinterpret_cast<const SceneEntitiesMovesReq*>(
               &_SceneEntitiesMovesReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    108;

  void Swap(SceneEntitiesMovesReq* other);
  friend void swap(SceneEntitiesMovesReq& a, SceneEntitiesMovesReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEntitiesMovesReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEntitiesMovesReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEntitiesMovesReq& from);
  void MergeFrom(const SceneEntitiesMovesReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEntitiesMovesReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.EntityMoveInfo entity_move_info_list = 14;
  int entity_move_info_list_size() const;
  void clear_entity_move_info_list();
  static const int kEntityMoveInfoListFieldNumber = 14;
  const ::proto::EntityMoveInfo& entity_move_info_list(int index) const;
  ::proto::EntityMoveInfo* mutable_entity_move_info_list(int index);
  ::proto::EntityMoveInfo* add_entity_move_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveInfo >*
      mutable_entity_move_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveInfo >&
      entity_move_info_list() const;

  // @@protoc_insertion_point(class_scope:proto.SceneEntitiesMovesReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveInfo > entity_move_info_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityMoveFailInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityMoveFailInfo) */ {
 public:
  EntityMoveFailInfo();
  virtual ~EntityMoveFailInfo();

  EntityMoveFailInfo(const EntityMoveFailInfo& from);

  inline EntityMoveFailInfo& operator=(const EntityMoveFailInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityMoveFailInfo(EntityMoveFailInfo&& from) noexcept
    : EntityMoveFailInfo() {
    *this = ::std::move(from);
  }

  inline EntityMoveFailInfo& operator=(EntityMoveFailInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityMoveFailInfo& default_instance();

  static inline const EntityMoveFailInfo* internal_default_instance() {
    return reinterpret_cast<const EntityMoveFailInfo*>(
               &_EntityMoveFailInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    109;

  void Swap(EntityMoveFailInfo* other);
  friend void swap(EntityMoveFailInfo& a, EntityMoveFailInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityMoveFailInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityMoveFailInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityMoveFailInfo& from);
  void MergeFrom(const EntityMoveFailInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityMoveFailInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.MotionInfo fail_motion = 14;
  bool has_fail_motion() const;
  void clear_fail_motion();
  static const int kFailMotionFieldNumber = 14;
  const ::proto::MotionInfo& fail_motion() const;
  ::proto::MotionInfo* mutable_fail_motion();
  ::proto::MotionInfo* release_fail_motion();
  void set_allocated_fail_motion(::proto::MotionInfo* fail_motion);

  // uint32 reliable_seq = 4;
  void clear_reliable_seq();
  static const int kReliableSeqFieldNumber = 4;
  ::google::protobuf::uint32 reliable_seq() const;
  void set_reliable_seq(::google::protobuf::uint32 value);

  // uint32 scene_time = 9;
  void clear_scene_time();
  static const int kSceneTimeFieldNumber = 9;
  ::google::protobuf::uint32 scene_time() const;
  void set_scene_time(::google::protobuf::uint32 value);

  // uint32 entity_id = 10;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 10;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // int32 retcode = 12;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 12;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.EntityMoveFailInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MotionInfo* fail_motion_;
  ::google::protobuf::uint32 reliable_seq_;
  ::google::protobuf::uint32 scene_time_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneEntitiesMovesRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEntitiesMovesRsp) */ {
 public:
  SceneEntitiesMovesRsp();
  virtual ~SceneEntitiesMovesRsp();

  SceneEntitiesMovesRsp(const SceneEntitiesMovesRsp& from);

  inline SceneEntitiesMovesRsp& operator=(const SceneEntitiesMovesRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEntitiesMovesRsp(SceneEntitiesMovesRsp&& from) noexcept
    : SceneEntitiesMovesRsp() {
    *this = ::std::move(from);
  }

  inline SceneEntitiesMovesRsp& operator=(SceneEntitiesMovesRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEntitiesMovesRsp& default_instance();

  static inline const SceneEntitiesMovesRsp* internal_default_instance() {
    return reinterpret_cast<const SceneEntitiesMovesRsp*>(
               &_SceneEntitiesMovesRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    110;

  void Swap(SceneEntitiesMovesRsp* other);
  friend void swap(SceneEntitiesMovesRsp& a, SceneEntitiesMovesRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEntitiesMovesRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEntitiesMovesRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEntitiesMovesRsp& from);
  void MergeFrom(const SceneEntitiesMovesRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEntitiesMovesRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.EntityMoveFailInfo entity_move_fail_info_list = 11;
  int entity_move_fail_info_list_size() const;
  void clear_entity_move_fail_info_list();
  static const int kEntityMoveFailInfoListFieldNumber = 11;
  const ::proto::EntityMoveFailInfo& entity_move_fail_info_list(int index) const;
  ::proto::EntityMoveFailInfo* mutable_entity_move_fail_info_list(int index);
  ::proto::EntityMoveFailInfo* add_entity_move_fail_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveFailInfo >*
      mutable_entity_move_fail_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveFailInfo >&
      entity_move_fail_info_list() const;

  // @@protoc_insertion_point(class_scope:proto.SceneEntitiesMovesRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveFailInfo > entity_move_fail_info_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneEntitiesMoveCombineNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEntitiesMoveCombineNotify) */ {
 public:
  SceneEntitiesMoveCombineNotify();
  virtual ~SceneEntitiesMoveCombineNotify();

  SceneEntitiesMoveCombineNotify(const SceneEntitiesMoveCombineNotify& from);

  inline SceneEntitiesMoveCombineNotify& operator=(const SceneEntitiesMoveCombineNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEntitiesMoveCombineNotify(SceneEntitiesMoveCombineNotify&& from) noexcept
    : SceneEntitiesMoveCombineNotify() {
    *this = ::std::move(from);
  }

  inline SceneEntitiesMoveCombineNotify& operator=(SceneEntitiesMoveCombineNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEntitiesMoveCombineNotify& default_instance();

  static inline const SceneEntitiesMoveCombineNotify* internal_default_instance() {
    return reinterpret_cast<const SceneEntitiesMoveCombineNotify*>(
               &_SceneEntitiesMoveCombineNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    111;

  void Swap(SceneEntitiesMoveCombineNotify* other);
  friend void swap(SceneEntitiesMoveCombineNotify& a, SceneEntitiesMoveCombineNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEntitiesMoveCombineNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEntitiesMoveCombineNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEntitiesMoveCombineNotify& from);
  void MergeFrom(const SceneEntitiesMoveCombineNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEntitiesMoveCombineNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.EntityMoveInfo entity_move_info_list = 8;
  int entity_move_info_list_size() const;
  void clear_entity_move_info_list();
  static const int kEntityMoveInfoListFieldNumber = 8;
  const ::proto::EntityMoveInfo& entity_move_info_list(int index) const;
  ::proto::EntityMoveInfo* mutable_entity_move_info_list(int index);
  ::proto::EntityMoveInfo* add_entity_move_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveInfo >*
      mutable_entity_move_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveInfo >&
      entity_move_info_list() const;

  // @@protoc_insertion_point(class_scope:proto.SceneEntitiesMoveCombineNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveInfo > entity_move_info_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnlockTransPointReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UnlockTransPointReq) */ {
 public:
  UnlockTransPointReq();
  virtual ~UnlockTransPointReq();

  UnlockTransPointReq(const UnlockTransPointReq& from);

  inline UnlockTransPointReq& operator=(const UnlockTransPointReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnlockTransPointReq(UnlockTransPointReq&& from) noexcept
    : UnlockTransPointReq() {
    *this = ::std::move(from);
  }

  inline UnlockTransPointReq& operator=(UnlockTransPointReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlockTransPointReq& default_instance();

  static inline const UnlockTransPointReq* internal_default_instance() {
    return reinterpret_cast<const UnlockTransPointReq*>(
               &_UnlockTransPointReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    112;

  void Swap(UnlockTransPointReq* other);
  friend void swap(UnlockTransPointReq& a, UnlockTransPointReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnlockTransPointReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UnlockTransPointReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnlockTransPointReq& from);
  void MergeFrom(const UnlockTransPointReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnlockTransPointReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 scene_id = 10;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 10;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 point_id = 12;
  void clear_point_id();
  static const int kPointIdFieldNumber = 12;
  ::google::protobuf::uint32 point_id() const;
  void set_point_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.UnlockTransPointReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 point_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnlockTransPointRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UnlockTransPointRsp) */ {
 public:
  UnlockTransPointRsp();
  virtual ~UnlockTransPointRsp();

  UnlockTransPointRsp(const UnlockTransPointRsp& from);

  inline UnlockTransPointRsp& operator=(const UnlockTransPointRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnlockTransPointRsp(UnlockTransPointRsp&& from) noexcept
    : UnlockTransPointRsp() {
    *this = ::std::move(from);
  }

  inline UnlockTransPointRsp& operator=(UnlockTransPointRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlockTransPointRsp& default_instance();

  static inline const UnlockTransPointRsp* internal_default_instance() {
    return reinterpret_cast<const UnlockTransPointRsp*>(
               &_UnlockTransPointRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    113;

  void Swap(UnlockTransPointRsp* other);
  friend void swap(UnlockTransPointRsp& a, UnlockTransPointRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnlockTransPointRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  UnlockTransPointRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnlockTransPointRsp& from);
  void MergeFrom(const UnlockTransPointRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnlockTransPointRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 12;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 12;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.UnlockTransPointRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneWeatherForcastReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneWeatherForcastReq) */ {
 public:
  SceneWeatherForcastReq();
  virtual ~SceneWeatherForcastReq();

  SceneWeatherForcastReq(const SceneWeatherForcastReq& from);

  inline SceneWeatherForcastReq& operator=(const SceneWeatherForcastReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneWeatherForcastReq(SceneWeatherForcastReq&& from) noexcept
    : SceneWeatherForcastReq() {
    *this = ::std::move(from);
  }

  inline SceneWeatherForcastReq& operator=(SceneWeatherForcastReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneWeatherForcastReq& default_instance();

  static inline const SceneWeatherForcastReq* internal_default_instance() {
    return reinterpret_cast<const SceneWeatherForcastReq*>(
               &_SceneWeatherForcastReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    114;

  void Swap(SceneWeatherForcastReq* other);
  friend void swap(SceneWeatherForcastReq& a, SceneWeatherForcastReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneWeatherForcastReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneWeatherForcastReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneWeatherForcastReq& from);
  void MergeFrom(const SceneWeatherForcastReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneWeatherForcastReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 weather_area_id = 15;
  void clear_weather_area_id();
  static const int kWeatherAreaIdFieldNumber = 15;
  ::google::protobuf::uint32 weather_area_id() const;
  void set_weather_area_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneWeatherForcastReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 weather_area_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneWeatherForcastRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneWeatherForcastRsp) */ {
 public:
  SceneWeatherForcastRsp();
  virtual ~SceneWeatherForcastRsp();

  SceneWeatherForcastRsp(const SceneWeatherForcastRsp& from);

  inline SceneWeatherForcastRsp& operator=(const SceneWeatherForcastRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneWeatherForcastRsp(SceneWeatherForcastRsp&& from) noexcept
    : SceneWeatherForcastRsp() {
    *this = ::std::move(from);
  }

  inline SceneWeatherForcastRsp& operator=(SceneWeatherForcastRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneWeatherForcastRsp& default_instance();

  static inline const SceneWeatherForcastRsp* internal_default_instance() {
    return reinterpret_cast<const SceneWeatherForcastRsp*>(
               &_SceneWeatherForcastRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    115;

  void Swap(SceneWeatherForcastRsp* other);
  friend void swap(SceneWeatherForcastRsp& a, SceneWeatherForcastRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneWeatherForcastRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneWeatherForcastRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneWeatherForcastRsp& from);
  void MergeFrom(const SceneWeatherForcastRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneWeatherForcastRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 forcast_climate_list = 2;
  int forcast_climate_list_size() const;
  void clear_forcast_climate_list();
  static const int kForcastClimateListFieldNumber = 2;
  ::google::protobuf::uint32 forcast_climate_list(int index) const;
  void set_forcast_climate_list(int index, ::google::protobuf::uint32 value);
  void add_forcast_climate_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      forcast_climate_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_forcast_climate_list();

  // int32 retcode = 4;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 4;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint64 next_climate_time = 14;
  void clear_next_climate_time();
  static const int kNextClimateTimeFieldNumber = 14;
  ::google::protobuf::uint64 next_climate_time() const;
  void set_next_climate_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.SceneWeatherForcastRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > forcast_climate_list_;
  mutable int _forcast_climate_list_cached_byte_size_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint64 next_climate_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MarkMapReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MarkMapReq) */ {
 public:
  MarkMapReq();
  virtual ~MarkMapReq();

  MarkMapReq(const MarkMapReq& from);

  inline MarkMapReq& operator=(const MarkMapReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MarkMapReq(MarkMapReq&& from) noexcept
    : MarkMapReq() {
    *this = ::std::move(from);
  }

  inline MarkMapReq& operator=(MarkMapReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MarkMapReq& default_instance();

  static inline const MarkMapReq* internal_default_instance() {
    return reinterpret_cast<const MarkMapReq*>(
               &_MarkMapReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    116;

  void Swap(MarkMapReq* other);
  friend void swap(MarkMapReq& a, MarkMapReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MarkMapReq* New() const PROTOBUF_FINAL { return New(NULL); }

  MarkMapReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MarkMapReq& from);
  void MergeFrom(const MarkMapReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MarkMapReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MarkMapReq_Operation Operation;
  static const Operation ADD =
    MarkMapReq_Operation_ADD;
  static const Operation MOD =
    MarkMapReq_Operation_MOD;
  static const Operation DEL =
    MarkMapReq_Operation_DEL;
  static const Operation GET =
    MarkMapReq_Operation_GET;
  static inline bool Operation_IsValid(int value) {
    return MarkMapReq_Operation_IsValid(value);
  }
  static const Operation Operation_MIN =
    MarkMapReq_Operation_Operation_MIN;
  static const Operation Operation_MAX =
    MarkMapReq_Operation_Operation_MAX;
  static const int Operation_ARRAYSIZE =
    MarkMapReq_Operation_Operation_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Operation_descriptor() {
    return MarkMapReq_Operation_descriptor();
  }
  static inline const ::std::string& Operation_Name(Operation value) {
    return MarkMapReq_Operation_Name(value);
  }
  static inline bool Operation_Parse(const ::std::string& name,
      Operation* value) {
    return MarkMapReq_Operation_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.MapMarkPoint old = 6;
  bool has_old() const;
  void clear_old();
  static const int kOldFieldNumber = 6;
  const ::proto::MapMarkPoint& old() const;
  ::proto::MapMarkPoint* mutable_old();
  ::proto::MapMarkPoint* release_old();
  void set_allocated_old(::proto::MapMarkPoint* old);

  // .proto.MapMarkPoint mark = 8;
  bool has_mark() const;
  void clear_mark();
  static const int kMarkFieldNumber = 8;
  const ::proto::MapMarkPoint& mark() const;
  ::proto::MapMarkPoint* mutable_mark();
  ::proto::MapMarkPoint* release_mark();
  void set_allocated_mark(::proto::MapMarkPoint* mark);

  // .proto.MarkMapReq.Operation op = 9;
  void clear_op();
  static const int kOpFieldNumber = 9;
  ::proto::MarkMapReq_Operation op() const;
  void set_op(::proto::MarkMapReq_Operation value);

  // @@protoc_insertion_point(class_scope:proto.MarkMapReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MapMarkPoint* old_;
  ::proto::MapMarkPoint* mark_;
  int op_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MarkMapRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MarkMapRsp) */ {
 public:
  MarkMapRsp();
  virtual ~MarkMapRsp();

  MarkMapRsp(const MarkMapRsp& from);

  inline MarkMapRsp& operator=(const MarkMapRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MarkMapRsp(MarkMapRsp&& from) noexcept
    : MarkMapRsp() {
    *this = ::std::move(from);
  }

  inline MarkMapRsp& operator=(MarkMapRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MarkMapRsp& default_instance();

  static inline const MarkMapRsp* internal_default_instance() {
    return reinterpret_cast<const MarkMapRsp*>(
               &_MarkMapRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    117;

  void Swap(MarkMapRsp* other);
  friend void swap(MarkMapRsp& a, MarkMapRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MarkMapRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  MarkMapRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MarkMapRsp& from);
  void MergeFrom(const MarkMapRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MarkMapRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.MapMarkPoint mark_list = 8;
  int mark_list_size() const;
  void clear_mark_list();
  static const int kMarkListFieldNumber = 8;
  const ::proto::MapMarkPoint& mark_list(int index) const;
  ::proto::MapMarkPoint* mutable_mark_list(int index);
  ::proto::MapMarkPoint* add_mark_list();
  ::google::protobuf::RepeatedPtrField< ::proto::MapMarkPoint >*
      mutable_mark_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::MapMarkPoint >&
      mark_list() const;

  // int32 retcode = 11;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 11;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.MarkMapRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::MapMarkPoint > mark_list_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllMarkPointNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AllMarkPointNotify) */ {
 public:
  AllMarkPointNotify();
  virtual ~AllMarkPointNotify();

  AllMarkPointNotify(const AllMarkPointNotify& from);

  inline AllMarkPointNotify& operator=(const AllMarkPointNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AllMarkPointNotify(AllMarkPointNotify&& from) noexcept
    : AllMarkPointNotify() {
    *this = ::std::move(from);
  }

  inline AllMarkPointNotify& operator=(AllMarkPointNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AllMarkPointNotify& default_instance();

  static inline const AllMarkPointNotify* internal_default_instance() {
    return reinterpret_cast<const AllMarkPointNotify*>(
               &_AllMarkPointNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    118;

  void Swap(AllMarkPointNotify* other);
  friend void swap(AllMarkPointNotify& a, AllMarkPointNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AllMarkPointNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AllMarkPointNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AllMarkPointNotify& from);
  void MergeFrom(const AllMarkPointNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AllMarkPointNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.MapMarkPoint mark_list = 7;
  int mark_list_size() const;
  void clear_mark_list();
  static const int kMarkListFieldNumber = 7;
  const ::proto::MapMarkPoint& mark_list(int index) const;
  ::proto::MapMarkPoint* mutable_mark_list(int index);
  ::proto::MapMarkPoint* add_mark_list();
  ::google::protobuf::RepeatedPtrField< ::proto::MapMarkPoint >*
      mutable_mark_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::MapMarkPoint >&
      mark_list() const;

  // @@protoc_insertion_point(class_scope:proto.AllMarkPointNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::MapMarkPoint > mark_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class WorldDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WorldDataNotify) */ {
 public:
  WorldDataNotify();
  virtual ~WorldDataNotify();

  WorldDataNotify(const WorldDataNotify& from);

  inline WorldDataNotify& operator=(const WorldDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldDataNotify(WorldDataNotify&& from) noexcept
    : WorldDataNotify() {
    *this = ::std::move(from);
  }

  inline WorldDataNotify& operator=(WorldDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldDataNotify& default_instance();

  static inline const WorldDataNotify* internal_default_instance() {
    return reinterpret_cast<const WorldDataNotify*>(
               &_WorldDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    120;

  void Swap(WorldDataNotify* other);
  friend void swap(WorldDataNotify& a, WorldDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  WorldDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorldDataNotify& from);
  void MergeFrom(const WorldDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorldDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef WorldDataNotify_DataType DataType;
  static const DataType DATA_NONE =
    WorldDataNotify_DataType_DATA_NONE;
  static const DataType WORLD_LEVEL =
    WorldDataNotify_DataType_WORLD_LEVEL;
  static const DataType IS_IN_MP_MODE =
    WorldDataNotify_DataType_IS_IN_MP_MODE;
  static inline bool DataType_IsValid(int value) {
    return WorldDataNotify_DataType_IsValid(value);
  }
  static const DataType DataType_MIN =
    WorldDataNotify_DataType_DataType_MIN;
  static const DataType DataType_MAX =
    WorldDataNotify_DataType_DataType_MAX;
  static const int DataType_ARRAYSIZE =
    WorldDataNotify_DataType_DataType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DataType_descriptor() {
    return WorldDataNotify_DataType_descriptor();
  }
  static inline const ::std::string& DataType_Name(DataType value) {
    return WorldDataNotify_DataType_Name(value);
  }
  static inline bool DataType_Parse(const ::std::string& name,
      DataType* value) {
    return WorldDataNotify_DataType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<uint32, .proto.PropValue> world_prop_map = 9;
  int world_prop_map_size() const;
  void clear_world_prop_map();
  static const int kWorldPropMapFieldNumber = 9;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
      world_prop_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
      mutable_world_prop_map();

  // @@protoc_insertion_point(class_scope:proto.WorldDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class WorldDataNotify_WorldPropMapEntry : public ::google::protobuf::internal::MapEntry<WorldDataNotify_WorldPropMapEntry, 
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<WorldDataNotify_WorldPropMapEntry, 
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    WorldDataNotify_WorldPropMapEntry();
    WorldDataNotify_WorldPropMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const WorldDataNotify_WorldPropMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_WorldDataNotify_WorldPropMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      WorldDataNotify_WorldPropMapEntry,
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > world_prop_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityMoveRoomNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityMoveRoomNotify) */ {
 public:
  EntityMoveRoomNotify();
  virtual ~EntityMoveRoomNotify();

  EntityMoveRoomNotify(const EntityMoveRoomNotify& from);

  inline EntityMoveRoomNotify& operator=(const EntityMoveRoomNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityMoveRoomNotify(EntityMoveRoomNotify&& from) noexcept
    : EntityMoveRoomNotify() {
    *this = ::std::move(from);
  }

  inline EntityMoveRoomNotify& operator=(EntityMoveRoomNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityMoveRoomNotify& default_instance();

  static inline const EntityMoveRoomNotify* internal_default_instance() {
    return reinterpret_cast<const EntityMoveRoomNotify*>(
               &_EntityMoveRoomNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    121;

  void Swap(EntityMoveRoomNotify* other);
  friend void swap(EntityMoveRoomNotify& a, EntityMoveRoomNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityMoveRoomNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityMoveRoomNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityMoveRoomNotify& from);
  void MergeFrom(const EntityMoveRoomNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityMoveRoomNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 dest_room_id = 9;
  void clear_dest_room_id();
  static const int kDestRoomIdFieldNumber = 9;
  ::google::protobuf::uint32 dest_room_id() const;
  void set_dest_room_id(::google::protobuf::uint32 value);

  // uint32 entity_id = 11;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 11;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EntityMoveRoomNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 dest_room_id_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorldPlayerInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WorldPlayerInfoNotify) */ {
 public:
  WorldPlayerInfoNotify();
  virtual ~WorldPlayerInfoNotify();

  WorldPlayerInfoNotify(const WorldPlayerInfoNotify& from);

  inline WorldPlayerInfoNotify& operator=(const WorldPlayerInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldPlayerInfoNotify(WorldPlayerInfoNotify&& from) noexcept
    : WorldPlayerInfoNotify() {
    *this = ::std::move(from);
  }

  inline WorldPlayerInfoNotify& operator=(WorldPlayerInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldPlayerInfoNotify& default_instance();

  static inline const WorldPlayerInfoNotify* internal_default_instance() {
    return reinterpret_cast<const WorldPlayerInfoNotify*>(
               &_WorldPlayerInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    122;

  void Swap(WorldPlayerInfoNotify* other);
  friend void swap(WorldPlayerInfoNotify& a, WorldPlayerInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldPlayerInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  WorldPlayerInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorldPlayerInfoNotify& from);
  void MergeFrom(const WorldPlayerInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorldPlayerInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.PlayerWidgetInfo player_widget_info_list = 8;
  int player_widget_info_list_size() const;
  void clear_player_widget_info_list();
  static const int kPlayerWidgetInfoListFieldNumber = 8;
  const ::proto::PlayerWidgetInfo& player_widget_info_list(int index) const;
  ::proto::PlayerWidgetInfo* mutable_player_widget_info_list(int index);
  ::proto::PlayerWidgetInfo* add_player_widget_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::PlayerWidgetInfo >*
      mutable_player_widget_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::PlayerWidgetInfo >&
      player_widget_info_list() const;

  // repeated uint32 player_uid_list = 11;
  int player_uid_list_size() const;
  void clear_player_uid_list();
  static const int kPlayerUidListFieldNumber = 11;
  ::google::protobuf::uint32 player_uid_list(int index) const;
  void set_player_uid_list(int index, ::google::protobuf::uint32 value);
  void add_player_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      player_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_player_uid_list();

  // repeated .proto.OnlinePlayerInfo player_info_list = 14;
  int player_info_list_size() const;
  void clear_player_info_list();
  static const int kPlayerInfoListFieldNumber = 14;
  const ::proto::OnlinePlayerInfo& player_info_list(int index) const;
  ::proto::OnlinePlayerInfo* mutable_player_info_list(int index);
  ::proto::OnlinePlayerInfo* add_player_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::OnlinePlayerInfo >*
      mutable_player_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::OnlinePlayerInfo >&
      player_info_list() const;

  // @@protoc_insertion_point(class_scope:proto.WorldPlayerInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::PlayerWidgetInfo > player_widget_info_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > player_uid_list_;
  mutable int _player_uid_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::OnlinePlayerInfo > player_info_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PostEnterSceneReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PostEnterSceneReq) */ {
 public:
  PostEnterSceneReq();
  virtual ~PostEnterSceneReq();

  PostEnterSceneReq(const PostEnterSceneReq& from);

  inline PostEnterSceneReq& operator=(const PostEnterSceneReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PostEnterSceneReq(PostEnterSceneReq&& from) noexcept
    : PostEnterSceneReq() {
    *this = ::std::move(from);
  }

  inline PostEnterSceneReq& operator=(PostEnterSceneReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PostEnterSceneReq& default_instance();

  static inline const PostEnterSceneReq* internal_default_instance() {
    return reinterpret_cast<const PostEnterSceneReq*>(
               &_PostEnterSceneReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    123;

  void Swap(PostEnterSceneReq* other);
  friend void swap(PostEnterSceneReq& a, PostEnterSceneReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PostEnterSceneReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PostEnterSceneReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PostEnterSceneReq& from);
  void MergeFrom(const PostEnterSceneReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PostEnterSceneReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 enter_scene_token = 12;
  void clear_enter_scene_token();
  static const int kEnterSceneTokenFieldNumber = 12;
  ::google::protobuf::uint32 enter_scene_token() const;
  void set_enter_scene_token(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PostEnterSceneReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 enter_scene_token_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PostEnterSceneRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PostEnterSceneRsp) */ {
 public:
  PostEnterSceneRsp();
  virtual ~PostEnterSceneRsp();

  PostEnterSceneRsp(const PostEnterSceneRsp& from);

  inline PostEnterSceneRsp& operator=(const PostEnterSceneRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PostEnterSceneRsp(PostEnterSceneRsp&& from) noexcept
    : PostEnterSceneRsp() {
    *this = ::std::move(from);
  }

  inline PostEnterSceneRsp& operator=(PostEnterSceneRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PostEnterSceneRsp& default_instance();

  static inline const PostEnterSceneRsp* internal_default_instance() {
    return reinterpret_cast<const PostEnterSceneRsp*>(
               &_PostEnterSceneRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    124;

  void Swap(PostEnterSceneRsp* other);
  friend void swap(PostEnterSceneRsp& a, PostEnterSceneRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PostEnterSceneRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PostEnterSceneRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PostEnterSceneRsp& from);
  void MergeFrom(const PostEnterSceneRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PostEnterSceneRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 4;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 4;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 enter_scene_token = 12;
  void clear_enter_scene_token();
  static const int kEnterSceneTokenFieldNumber = 12;
  ::google::protobuf::uint32 enter_scene_token() const;
  void set_enter_scene_token(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PostEnterSceneRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 enter_scene_token_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatInfo_SystemHint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChatInfo.SystemHint) */ {
 public:
  ChatInfo_SystemHint();
  virtual ~ChatInfo_SystemHint();

  ChatInfo_SystemHint(const ChatInfo_SystemHint& from);

  inline ChatInfo_SystemHint& operator=(const ChatInfo_SystemHint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatInfo_SystemHint(ChatInfo_SystemHint&& from) noexcept
    : ChatInfo_SystemHint() {
    *this = ::std::move(from);
  }

  inline ChatInfo_SystemHint& operator=(ChatInfo_SystemHint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatInfo_SystemHint& default_instance();

  static inline const ChatInfo_SystemHint* internal_default_instance() {
    return reinterpret_cast<const ChatInfo_SystemHint*>(
               &_ChatInfo_SystemHint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    125;

  void Swap(ChatInfo_SystemHint* other);
  friend void swap(ChatInfo_SystemHint& a, ChatInfo_SystemHint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatInfo_SystemHint* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatInfo_SystemHint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatInfo_SystemHint& from);
  void MergeFrom(const ChatInfo_SystemHint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatInfo_SystemHint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 type = 14;
  void clear_type();
  static const int kTypeFieldNumber = 14;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ChatInfo.SystemHint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChatInfo) */ {
 public:
  ChatInfo();
  virtual ~ChatInfo();

  ChatInfo(const ChatInfo& from);

  inline ChatInfo& operator=(const ChatInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatInfo(ChatInfo&& from) noexcept
    : ChatInfo() {
    *this = ::std::move(from);
  }

  inline ChatInfo& operator=(ChatInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatInfo& default_instance();

  enum ContentCase {
    kText = 1946,
    kIcon = 914,
    kSystemHint = 1753,
    CONTENT_NOT_SET = 0,
  };

  static inline const ChatInfo* internal_default_instance() {
    return reinterpret_cast<const ChatInfo*>(
               &_ChatInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    126;

  void Swap(ChatInfo* other);
  friend void swap(ChatInfo& a, ChatInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatInfo& from);
  void MergeFrom(const ChatInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ChatInfo_SystemHint SystemHint;

  typedef ChatInfo_SystemHintType SystemHintType;
  static const SystemHintType CHAT_NONE =
    ChatInfo_SystemHintType_CHAT_NONE;
  static const SystemHintType CHAT_ENTER_WORLD =
    ChatInfo_SystemHintType_CHAT_ENTER_WORLD;
  static const SystemHintType CHAT_LEAVE_WORLD =
    ChatInfo_SystemHintType_CHAT_LEAVE_WORLD;
  static inline bool SystemHintType_IsValid(int value) {
    return ChatInfo_SystemHintType_IsValid(value);
  }
  static const SystemHintType SystemHintType_MIN =
    ChatInfo_SystemHintType_SystemHintType_MIN;
  static const SystemHintType SystemHintType_MAX =
    ChatInfo_SystemHintType_SystemHintType_MAX;
  static const int SystemHintType_ARRAYSIZE =
    ChatInfo_SystemHintType_SystemHintType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SystemHintType_descriptor() {
    return ChatInfo_SystemHintType_descriptor();
  }
  static inline const ::std::string& SystemHintType_Name(SystemHintType value) {
    return ChatInfo_SystemHintType_Name(value);
  }
  static inline bool SystemHintType_Parse(const ::std::string& name,
      SystemHintType* value) {
    return ChatInfo_SystemHintType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // bool is_read = 5;
  void clear_is_read();
  static const int kIsReadFieldNumber = 5;
  bool is_read() const;
  void set_is_read(bool value);

  // uint32 to_uid = 7;
  void clear_to_uid();
  static const int kToUidFieldNumber = 7;
  ::google::protobuf::uint32 to_uid() const;
  void set_to_uid(::google::protobuf::uint32 value);

  // uint32 uid = 15;
  void clear_uid();
  static const int kUidFieldNumber = 15;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 sequence = 10;
  void clear_sequence();
  static const int kSequenceFieldNumber = 10;
  ::google::protobuf::uint32 sequence() const;
  void set_sequence(::google::protobuf::uint32 value);

  // uint32 time = 13;
  void clear_time();
  static const int kTimeFieldNumber = 13;
  ::google::protobuf::uint32 time() const;
  void set_time(::google::protobuf::uint32 value);

  // string text = 1946;
  private:
  bool has_text() const;
  public:
  void clear_text();
  static const int kTextFieldNumber = 1946;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // uint32 icon = 914;
  private:
  bool has_icon() const;
  public:
  void clear_icon();
  static const int kIconFieldNumber = 914;
  ::google::protobuf::uint32 icon() const;
  void set_icon(::google::protobuf::uint32 value);

  // .proto.ChatInfo.SystemHint system_hint = 1753;
  bool has_system_hint() const;
  void clear_system_hint();
  static const int kSystemHintFieldNumber = 1753;
  const ::proto::ChatInfo_SystemHint& system_hint() const;
  ::proto::ChatInfo_SystemHint* mutable_system_hint();
  ::proto::ChatInfo_SystemHint* release_system_hint();
  void set_allocated_system_hint(::proto::ChatInfo_SystemHint* system_hint);

  ContentCase content_case() const;
  // @@protoc_insertion_point(class_scope:proto.ChatInfo)
 private:
  void set_has_text();
  void set_has_icon();
  void set_has_system_hint();

  inline bool has_content() const;
  void clear_content();
  inline void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_read_;
  ::google::protobuf::uint32 to_uid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 sequence_;
  ::google::protobuf::uint32 time_;
  union ContentUnion {
    ContentUnion() {}
    ::google::protobuf::internal::ArenaStringPtr text_;
    ::google::protobuf::uint32 icon_;
    ::proto::ChatInfo_SystemHint* system_hint_;
  } content_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerChatReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerChatReq) */ {
 public:
  PlayerChatReq();
  virtual ~PlayerChatReq();

  PlayerChatReq(const PlayerChatReq& from);

  inline PlayerChatReq& operator=(const PlayerChatReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerChatReq(PlayerChatReq&& from) noexcept
    : PlayerChatReq() {
    *this = ::std::move(from);
  }

  inline PlayerChatReq& operator=(PlayerChatReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerChatReq& default_instance();

  static inline const PlayerChatReq* internal_default_instance() {
    return reinterpret_cast<const PlayerChatReq*>(
               &_PlayerChatReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    127;

  void Swap(PlayerChatReq* other);
  friend void swap(PlayerChatReq& a, PlayerChatReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerChatReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerChatReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerChatReq& from);
  void MergeFrom(const PlayerChatReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerChatReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.ChatInfo chat_info = 15;
  bool has_chat_info() const;
  void clear_chat_info();
  static const int kChatInfoFieldNumber = 15;
  const ::proto::ChatInfo& chat_info() const;
  ::proto::ChatInfo* mutable_chat_info();
  ::proto::ChatInfo* release_chat_info();
  void set_allocated_chat_info(::proto::ChatInfo* chat_info);

  // uint32 channel_id = 13;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 13;
  ::google::protobuf::uint32 channel_id() const;
  void set_channel_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerChatReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ChatInfo* chat_info_;
  ::google::protobuf::uint32 channel_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerChatRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerChatRsp) */ {
 public:
  PlayerChatRsp();
  virtual ~PlayerChatRsp();

  PlayerChatRsp(const PlayerChatRsp& from);

  inline PlayerChatRsp& operator=(const PlayerChatRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerChatRsp(PlayerChatRsp&& from) noexcept
    : PlayerChatRsp() {
    *this = ::std::move(from);
  }

  inline PlayerChatRsp& operator=(PlayerChatRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerChatRsp& default_instance();

  static inline const PlayerChatRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerChatRsp*>(
               &_PlayerChatRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    128;

  void Swap(PlayerChatRsp* other);
  friend void swap(PlayerChatRsp& a, PlayerChatRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerChatRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerChatRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerChatRsp& from);
  void MergeFrom(const PlayerChatRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerChatRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 2;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 2;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 chat_forbidden_endtime = 15;
  void clear_chat_forbidden_endtime();
  static const int kChatForbiddenEndtimeFieldNumber = 15;
  ::google::protobuf::uint32 chat_forbidden_endtime() const;
  void set_chat_forbidden_endtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerChatRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 chat_forbidden_endtime_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerChatNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerChatNotify) */ {
 public:
  PlayerChatNotify();
  virtual ~PlayerChatNotify();

  PlayerChatNotify(const PlayerChatNotify& from);

  inline PlayerChatNotify& operator=(const PlayerChatNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerChatNotify(PlayerChatNotify&& from) noexcept
    : PlayerChatNotify() {
    *this = ::std::move(from);
  }

  inline PlayerChatNotify& operator=(PlayerChatNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerChatNotify& default_instance();

  static inline const PlayerChatNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerChatNotify*>(
               &_PlayerChatNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    129;

  void Swap(PlayerChatNotify* other);
  friend void swap(PlayerChatNotify& a, PlayerChatNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerChatNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerChatNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerChatNotify& from);
  void MergeFrom(const PlayerChatNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerChatNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.ChatInfo chat_info = 3;
  bool has_chat_info() const;
  void clear_chat_info();
  static const int kChatInfoFieldNumber = 3;
  const ::proto::ChatInfo& chat_info() const;
  ::proto::ChatInfo* mutable_chat_info();
  ::proto::ChatInfo* release_chat_info();
  void set_allocated_chat_info(::proto::ChatInfo* chat_info);

  // uint32 channel_id = 6;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 6;
  ::google::protobuf::uint32 channel_id() const;
  void set_channel_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerChatNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ChatInfo* chat_info_;
  ::google::protobuf::uint32 channel_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerChatCDNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerChatCDNotify) */ {
 public:
  PlayerChatCDNotify();
  virtual ~PlayerChatCDNotify();

  PlayerChatCDNotify(const PlayerChatCDNotify& from);

  inline PlayerChatCDNotify& operator=(const PlayerChatCDNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerChatCDNotify(PlayerChatCDNotify&& from) noexcept
    : PlayerChatCDNotify() {
    *this = ::std::move(from);
  }

  inline PlayerChatCDNotify& operator=(PlayerChatCDNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerChatCDNotify& default_instance();

  static inline const PlayerChatCDNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerChatCDNotify*>(
               &_PlayerChatCDNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    130;

  void Swap(PlayerChatCDNotify* other);
  friend void swap(PlayerChatCDNotify& a, PlayerChatCDNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerChatCDNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerChatCDNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerChatCDNotify& from);
  void MergeFrom(const PlayerChatCDNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerChatCDNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 over_time = 15;
  void clear_over_time();
  static const int kOverTimeFieldNumber = 15;
  ::google::protobuf::uint32 over_time() const;
  void set_over_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerChatCDNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 over_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatHistoryNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChatHistoryNotify) */ {
 public:
  ChatHistoryNotify();
  virtual ~ChatHistoryNotify();

  ChatHistoryNotify(const ChatHistoryNotify& from);

  inline ChatHistoryNotify& operator=(const ChatHistoryNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatHistoryNotify(ChatHistoryNotify&& from) noexcept
    : ChatHistoryNotify() {
    *this = ::std::move(from);
  }

  inline ChatHistoryNotify& operator=(ChatHistoryNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatHistoryNotify& default_instance();

  static inline const ChatHistoryNotify* internal_default_instance() {
    return reinterpret_cast<const ChatHistoryNotify*>(
               &_ChatHistoryNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    131;

  void Swap(ChatHistoryNotify* other);
  friend void swap(ChatHistoryNotify& a, ChatHistoryNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatHistoryNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatHistoryNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatHistoryNotify& from);
  void MergeFrom(const ChatHistoryNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatHistoryNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ChatInfo chat_info = 9;
  int chat_info_size() const;
  void clear_chat_info();
  static const int kChatInfoFieldNumber = 9;
  const ::proto::ChatInfo& chat_info(int index) const;
  ::proto::ChatInfo* mutable_chat_info(int index);
  ::proto::ChatInfo* add_chat_info();
  ::google::protobuf::RepeatedPtrField< ::proto::ChatInfo >*
      mutable_chat_info();
  const ::google::protobuf::RepeatedPtrField< ::proto::ChatInfo >&
      chat_info() const;

  // uint32 channel_id = 12;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 12;
  ::google::protobuf::uint32 channel_id() const;
  void set_channel_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ChatHistoryNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ChatInfo > chat_info_;
  ::google::protobuf::uint32 channel_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneDataNotify) */ {
 public:
  SceneDataNotify();
  virtual ~SceneDataNotify();

  SceneDataNotify(const SceneDataNotify& from);

  inline SceneDataNotify& operator=(const SceneDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneDataNotify(SceneDataNotify&& from) noexcept
    : SceneDataNotify() {
    *this = ::std::move(from);
  }

  inline SceneDataNotify& operator=(SceneDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneDataNotify& default_instance();

  static inline const SceneDataNotify* internal_default_instance() {
    return reinterpret_cast<const SceneDataNotify*>(
               &_SceneDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    132;

  void Swap(SceneDataNotify* other);
  friend void swap(SceneDataNotify& a, SceneDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneDataNotify& from);
  void MergeFrom(const SceneDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 scene_tag_id_list = 8;
  int scene_tag_id_list_size() const;
  void clear_scene_tag_id_list();
  static const int kSceneTagIdListFieldNumber = 8;
  ::google::protobuf::uint32 scene_tag_id_list(int index) const;
  void set_scene_tag_id_list(int index, ::google::protobuf::uint32 value);
  void add_scene_tag_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      scene_tag_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_scene_tag_id_list();

  // repeated string level_config_name_list = 15;
  int level_config_name_list_size() const;
  void clear_level_config_name_list();
  static const int kLevelConfigNameListFieldNumber = 15;
  const ::std::string& level_config_name_list(int index) const;
  ::std::string* mutable_level_config_name_list(int index);
  void set_level_config_name_list(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_level_config_name_list(int index, ::std::string&& value);
  #endif
  void set_level_config_name_list(int index, const char* value);
  void set_level_config_name_list(int index, const char* value, size_t size);
  ::std::string* add_level_config_name_list();
  void add_level_config_name_list(const ::std::string& value);
  #if LANG_CXX11
  void add_level_config_name_list(::std::string&& value);
  #endif
  void add_level_config_name_list(const char* value);
  void add_level_config_name_list(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& level_config_name_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_level_config_name_list();

  // @@protoc_insertion_point(class_scope:proto.SceneDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > scene_tag_id_list_;
  mutable int _scene_tag_id_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> level_config_name_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DungeonEntryToBeExploreNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DungeonEntryToBeExploreNotify) */ {
 public:
  DungeonEntryToBeExploreNotify();
  virtual ~DungeonEntryToBeExploreNotify();

  DungeonEntryToBeExploreNotify(const DungeonEntryToBeExploreNotify& from);

  inline DungeonEntryToBeExploreNotify& operator=(const DungeonEntryToBeExploreNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DungeonEntryToBeExploreNotify(DungeonEntryToBeExploreNotify&& from) noexcept
    : DungeonEntryToBeExploreNotify() {
    *this = ::std::move(from);
  }

  inline DungeonEntryToBeExploreNotify& operator=(DungeonEntryToBeExploreNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DungeonEntryToBeExploreNotify& default_instance();

  static inline const DungeonEntryToBeExploreNotify* internal_default_instance() {
    return reinterpret_cast<const DungeonEntryToBeExploreNotify*>(
               &_DungeonEntryToBeExploreNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    133;

  void Swap(DungeonEntryToBeExploreNotify* other);
  friend void swap(DungeonEntryToBeExploreNotify& a, DungeonEntryToBeExploreNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DungeonEntryToBeExploreNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  DungeonEntryToBeExploreNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DungeonEntryToBeExploreNotify& from);
  void MergeFrom(const DungeonEntryToBeExploreNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DungeonEntryToBeExploreNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 dungeon_entry_scene_point_id = 2;
  void clear_dungeon_entry_scene_point_id();
  static const int kDungeonEntryScenePointIdFieldNumber = 2;
  ::google::protobuf::uint32 dungeon_entry_scene_point_id() const;
  void set_dungeon_entry_scene_point_id(::google::protobuf::uint32 value);

  // uint32 scene_id = 4;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 4;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 dungeon_entry_config_id = 10;
  void clear_dungeon_entry_config_id();
  static const int kDungeonEntryConfigIdFieldNumber = 10;
  ::google::protobuf::uint32 dungeon_entry_config_id() const;
  void set_dungeon_entry_config_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DungeonEntryToBeExploreNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 dungeon_entry_scene_point_id_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 dungeon_entry_config_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetDungeonEntryExploreConditionReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetDungeonEntryExploreConditionReq) */ {
 public:
  GetDungeonEntryExploreConditionReq();
  virtual ~GetDungeonEntryExploreConditionReq();

  GetDungeonEntryExploreConditionReq(const GetDungeonEntryExploreConditionReq& from);

  inline GetDungeonEntryExploreConditionReq& operator=(const GetDungeonEntryExploreConditionReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetDungeonEntryExploreConditionReq(GetDungeonEntryExploreConditionReq&& from) noexcept
    : GetDungeonEntryExploreConditionReq() {
    *this = ::std::move(from);
  }

  inline GetDungeonEntryExploreConditionReq& operator=(GetDungeonEntryExploreConditionReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDungeonEntryExploreConditionReq& default_instance();

  static inline const GetDungeonEntryExploreConditionReq* internal_default_instance() {
    return reinterpret_cast<const GetDungeonEntryExploreConditionReq*>(
               &_GetDungeonEntryExploreConditionReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    134;

  void Swap(GetDungeonEntryExploreConditionReq* other);
  friend void swap(GetDungeonEntryExploreConditionReq& a, GetDungeonEntryExploreConditionReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetDungeonEntryExploreConditionReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetDungeonEntryExploreConditionReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetDungeonEntryExploreConditionReq& from);
  void MergeFrom(const GetDungeonEntryExploreConditionReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetDungeonEntryExploreConditionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 dungeon_entry_config_id = 2;
  void clear_dungeon_entry_config_id();
  static const int kDungeonEntryConfigIdFieldNumber = 2;
  ::google::protobuf::uint32 dungeon_entry_config_id() const;
  void set_dungeon_entry_config_id(::google::protobuf::uint32 value);

  // uint32 dungeon_entry_scene_point_id = 4;
  void clear_dungeon_entry_scene_point_id();
  static const int kDungeonEntryScenePointIdFieldNumber = 4;
  ::google::protobuf::uint32 dungeon_entry_scene_point_id() const;
  void set_dungeon_entry_scene_point_id(::google::protobuf::uint32 value);

  // uint32 scene_id = 6;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 6;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetDungeonEntryExploreConditionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 dungeon_entry_config_id_;
  ::google::protobuf::uint32 dungeon_entry_scene_point_id_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DungeonEntryCond : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DungeonEntryCond) */ {
 public:
  DungeonEntryCond();
  virtual ~DungeonEntryCond();

  DungeonEntryCond(const DungeonEntryCond& from);

  inline DungeonEntryCond& operator=(const DungeonEntryCond& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DungeonEntryCond(DungeonEntryCond&& from) noexcept
    : DungeonEntryCond() {
    *this = ::std::move(from);
  }

  inline DungeonEntryCond& operator=(DungeonEntryCond&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DungeonEntryCond& default_instance();

  static inline const DungeonEntryCond* internal_default_instance() {
    return reinterpret_cast<const DungeonEntryCond*>(
               &_DungeonEntryCond_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    135;

  void Swap(DungeonEntryCond* other);
  friend void swap(DungeonEntryCond& a, DungeonEntryCond& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DungeonEntryCond* New() const PROTOBUF_FINAL { return New(NULL); }

  DungeonEntryCond* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DungeonEntryCond& from);
  void MergeFrom(const DungeonEntryCond& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DungeonEntryCond* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.DungeonEntryBlockReason cond_reason = 7;
  void clear_cond_reason();
  static const int kCondReasonFieldNumber = 7;
  ::proto::DungeonEntryBlockReason cond_reason() const;
  void set_cond_reason(::proto::DungeonEntryBlockReason value);

  // uint32 param1 = 8;
  void clear_param1();
  static const int kParam1FieldNumber = 8;
  ::google::protobuf::uint32 param1() const;
  void set_param1(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DungeonEntryCond)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int cond_reason_;
  ::google::protobuf::uint32 param1_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetDungeonEntryExploreConditionRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetDungeonEntryExploreConditionRsp) */ {
 public:
  GetDungeonEntryExploreConditionRsp();
  virtual ~GetDungeonEntryExploreConditionRsp();

  GetDungeonEntryExploreConditionRsp(const GetDungeonEntryExploreConditionRsp& from);

  inline GetDungeonEntryExploreConditionRsp& operator=(const GetDungeonEntryExploreConditionRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetDungeonEntryExploreConditionRsp(GetDungeonEntryExploreConditionRsp&& from) noexcept
    : GetDungeonEntryExploreConditionRsp() {
    *this = ::std::move(from);
  }

  inline GetDungeonEntryExploreConditionRsp& operator=(GetDungeonEntryExploreConditionRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDungeonEntryExploreConditionRsp& default_instance();

  static inline const GetDungeonEntryExploreConditionRsp* internal_default_instance() {
    return reinterpret_cast<const GetDungeonEntryExploreConditionRsp*>(
               &_GetDungeonEntryExploreConditionRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    136;

  void Swap(GetDungeonEntryExploreConditionRsp* other);
  friend void swap(GetDungeonEntryExploreConditionRsp& a, GetDungeonEntryExploreConditionRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetDungeonEntryExploreConditionRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetDungeonEntryExploreConditionRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetDungeonEntryExploreConditionRsp& from);
  void MergeFrom(const GetDungeonEntryExploreConditionRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetDungeonEntryExploreConditionRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.DungeonEntryCond dungeon_entry_cond = 5;
  bool has_dungeon_entry_cond() const;
  void clear_dungeon_entry_cond();
  static const int kDungeonEntryCondFieldNumber = 5;
  const ::proto::DungeonEntryCond& dungeon_entry_cond() const;
  ::proto::DungeonEntryCond* mutable_dungeon_entry_cond();
  ::proto::DungeonEntryCond* release_dungeon_entry_cond();
  void set_allocated_dungeon_entry_cond(::proto::DungeonEntryCond* dungeon_entry_cond);

  // int32 retcode = 3;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 3;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetDungeonEntryExploreConditionRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::DungeonEntryCond* dungeon_entry_cond_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnfreezeGroupLimitNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UnfreezeGroupLimitNotify) */ {
 public:
  UnfreezeGroupLimitNotify();
  virtual ~UnfreezeGroupLimitNotify();

  UnfreezeGroupLimitNotify(const UnfreezeGroupLimitNotify& from);

  inline UnfreezeGroupLimitNotify& operator=(const UnfreezeGroupLimitNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnfreezeGroupLimitNotify(UnfreezeGroupLimitNotify&& from) noexcept
    : UnfreezeGroupLimitNotify() {
    *this = ::std::move(from);
  }

  inline UnfreezeGroupLimitNotify& operator=(UnfreezeGroupLimitNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnfreezeGroupLimitNotify& default_instance();

  static inline const UnfreezeGroupLimitNotify* internal_default_instance() {
    return reinterpret_cast<const UnfreezeGroupLimitNotify*>(
               &_UnfreezeGroupLimitNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    137;

  void Swap(UnfreezeGroupLimitNotify* other);
  friend void swap(UnfreezeGroupLimitNotify& a, UnfreezeGroupLimitNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnfreezeGroupLimitNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  UnfreezeGroupLimitNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnfreezeGroupLimitNotify& from);
  void MergeFrom(const UnfreezeGroupLimitNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnfreezeGroupLimitNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 point_id = 9;
  void clear_point_id();
  static const int kPointIdFieldNumber = 9;
  ::google::protobuf::uint32 point_id() const;
  void set_point_id(::google::protobuf::uint32 value);

  // uint32 scene_id = 11;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 11;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.UnfreezeGroupLimitNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 point_id_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetEntityClientDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetEntityClientDataNotify) */ {
 public:
  SetEntityClientDataNotify();
  virtual ~SetEntityClientDataNotify();

  SetEntityClientDataNotify(const SetEntityClientDataNotify& from);

  inline SetEntityClientDataNotify& operator=(const SetEntityClientDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetEntityClientDataNotify(SetEntityClientDataNotify&& from) noexcept
    : SetEntityClientDataNotify() {
    *this = ::std::move(from);
  }

  inline SetEntityClientDataNotify& operator=(SetEntityClientDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetEntityClientDataNotify& default_instance();

  static inline const SetEntityClientDataNotify* internal_default_instance() {
    return reinterpret_cast<const SetEntityClientDataNotify*>(
               &_SetEntityClientDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    138;

  void Swap(SetEntityClientDataNotify* other);
  friend void swap(SetEntityClientDataNotify& a, SetEntityClientDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetEntityClientDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SetEntityClientDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetEntityClientDataNotify& from);
  void MergeFrom(const SetEntityClientDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetEntityClientDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.EntityClientData entity_client_data = 9;
  bool has_entity_client_data() const;
  void clear_entity_client_data();
  static const int kEntityClientDataFieldNumber = 9;
  const ::proto::EntityClientData& entity_client_data() const;
  ::proto::EntityClientData* mutable_entity_client_data();
  ::proto::EntityClientData* release_entity_client_data();
  void set_allocated_entity_client_data(::proto::EntityClientData* entity_client_data);

  // uint32 entity_id = 14;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 14;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetEntityClientDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::EntityClientData* entity_client_data_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class GroupSuiteNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GroupSuiteNotify) */ {
 public:
  GroupSuiteNotify();
  virtual ~GroupSuiteNotify();

  GroupSuiteNotify(const GroupSuiteNotify& from);

  inline GroupSuiteNotify& operator=(const GroupSuiteNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupSuiteNotify(GroupSuiteNotify&& from) noexcept
    : GroupSuiteNotify() {
    *this = ::std::move(from);
  }

  inline GroupSuiteNotify& operator=(GroupSuiteNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupSuiteNotify& default_instance();

  static inline const GroupSuiteNotify* internal_default_instance() {
    return reinterpret_cast<const GroupSuiteNotify*>(
               &_GroupSuiteNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    140;

  void Swap(GroupSuiteNotify* other);
  friend void swap(GroupSuiteNotify& a, GroupSuiteNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupSuiteNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupSuiteNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupSuiteNotify& from);
  void MergeFrom(const GroupSuiteNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupSuiteNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> group_map = 3;
  int group_map_size() const;
  void clear_group_map();
  static const int kGroupMapFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      group_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_group_map();

  // @@protoc_insertion_point(class_scope:proto.GroupSuiteNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class GroupSuiteNotify_GroupMapEntry : public ::google::protobuf::internal::MapEntry<GroupSuiteNotify_GroupMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<GroupSuiteNotify_GroupMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    GroupSuiteNotify_GroupMapEntry();
    GroupSuiteNotify_GroupMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const GroupSuiteNotify_GroupMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_GroupSuiteNotify_GroupMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      GroupSuiteNotify_GroupMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > group_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupUnloadNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GroupUnloadNotify) */ {
 public:
  GroupUnloadNotify();
  virtual ~GroupUnloadNotify();

  GroupUnloadNotify(const GroupUnloadNotify& from);

  inline GroupUnloadNotify& operator=(const GroupUnloadNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupUnloadNotify(GroupUnloadNotify&& from) noexcept
    : GroupUnloadNotify() {
    *this = ::std::move(from);
  }

  inline GroupUnloadNotify& operator=(GroupUnloadNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupUnloadNotify& default_instance();

  static inline const GroupUnloadNotify* internal_default_instance() {
    return reinterpret_cast<const GroupUnloadNotify*>(
               &_GroupUnloadNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    141;

  void Swap(GroupUnloadNotify* other);
  friend void swap(GroupUnloadNotify& a, GroupUnloadNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupUnloadNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupUnloadNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupUnloadNotify& from);
  void MergeFrom(const GroupUnloadNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupUnloadNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 group_list = 10;
  int group_list_size() const;
  void clear_group_list();
  static const int kGroupListFieldNumber = 10;
  ::google::protobuf::uint32 group_list(int index) const;
  void set_group_list(int index, ::google::protobuf::uint32 value);
  void add_group_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      group_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_group_list();

  // @@protoc_insertion_point(class_scope:proto.GroupUnloadNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > group_list_;
  mutable int _group_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MonsterAIConfigHashNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MonsterAIConfigHashNotify) */ {
 public:
  MonsterAIConfigHashNotify();
  virtual ~MonsterAIConfigHashNotify();

  MonsterAIConfigHashNotify(const MonsterAIConfigHashNotify& from);

  inline MonsterAIConfigHashNotify& operator=(const MonsterAIConfigHashNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MonsterAIConfigHashNotify(MonsterAIConfigHashNotify&& from) noexcept
    : MonsterAIConfigHashNotify() {
    *this = ::std::move(from);
  }

  inline MonsterAIConfigHashNotify& operator=(MonsterAIConfigHashNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MonsterAIConfigHashNotify& default_instance();

  static inline const MonsterAIConfigHashNotify* internal_default_instance() {
    return reinterpret_cast<const MonsterAIConfigHashNotify*>(
               &_MonsterAIConfigHashNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    142;

  void Swap(MonsterAIConfigHashNotify* other);
  friend void swap(MonsterAIConfigHashNotify& a, MonsterAIConfigHashNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MonsterAIConfigHashNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MonsterAIConfigHashNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MonsterAIConfigHashNotify& from);
  void MergeFrom(const MonsterAIConfigHashNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MonsterAIConfigHashNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 entity_id = 15;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 15;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 job_id = 10;
  void clear_job_id();
  static const int kJobIdFieldNumber = 10;
  ::google::protobuf::uint32 job_id() const;
  void set_job_id(::google::protobuf::uint32 value);

  // int32 hash_value = 11;
  void clear_hash_value();
  static const int kHashValueFieldNumber = 11;
  ::google::protobuf::int32 hash_value() const;
  void set_hash_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.MonsterAIConfigHashNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 job_id_;
  ::google::protobuf::int32 hash_value_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShowTemplateReminderNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ShowTemplateReminderNotify) */ {
 public:
  ShowTemplateReminderNotify();
  virtual ~ShowTemplateReminderNotify();

  ShowTemplateReminderNotify(const ShowTemplateReminderNotify& from);

  inline ShowTemplateReminderNotify& operator=(const ShowTemplateReminderNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShowTemplateReminderNotify(ShowTemplateReminderNotify&& from) noexcept
    : ShowTemplateReminderNotify() {
    *this = ::std::move(from);
  }

  inline ShowTemplateReminderNotify& operator=(ShowTemplateReminderNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShowTemplateReminderNotify& default_instance();

  static inline const ShowTemplateReminderNotify* internal_default_instance() {
    return reinterpret_cast<const ShowTemplateReminderNotify*>(
               &_ShowTemplateReminderNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    143;

  void Swap(ShowTemplateReminderNotify* other);
  friend void swap(ShowTemplateReminderNotify& a, ShowTemplateReminderNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShowTemplateReminderNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ShowTemplateReminderNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShowTemplateReminderNotify& from);
  void MergeFrom(const ShowTemplateReminderNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShowTemplateReminderNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 param_uid_list = 3;
  int param_uid_list_size() const;
  void clear_param_uid_list();
  static const int kParamUidListFieldNumber = 3;
  ::google::protobuf::uint32 param_uid_list(int index) const;
  void set_param_uid_list(int index, ::google::protobuf::uint32 value);
  void add_param_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      param_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_param_uid_list();

  // repeated int32 param_list = 10;
  int param_list_size() const;
  void clear_param_list();
  static const int kParamListFieldNumber = 10;
  ::google::protobuf::int32 param_list(int index) const;
  void set_param_list(int index, ::google::protobuf::int32 value);
  void add_param_list(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      param_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_param_list();

  // bool is_revoke = 1;
  void clear_is_revoke();
  static const int kIsRevokeFieldNumber = 1;
  bool is_revoke() const;
  void set_is_revoke(bool value);

  // bool is_need_cache = 15;
  void clear_is_need_cache();
  static const int kIsNeedCacheFieldNumber = 15;
  bool is_need_cache() const;
  void set_is_need_cache(bool value);

  // uint32 template_reminder_id = 14;
  void clear_template_reminder_id();
  static const int kTemplateReminderIdFieldNumber = 14;
  ::google::protobuf::uint32 template_reminder_id() const;
  void set_template_reminder_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ShowTemplateReminderNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > param_uid_list_;
  mutable int _param_uid_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > param_list_;
  mutable int _param_list_cached_byte_size_;
  bool is_revoke_;
  bool is_need_cache_;
  ::google::protobuf::uint32 template_reminder_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShowCommonTipsNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ShowCommonTipsNotify) */ {
 public:
  ShowCommonTipsNotify();
  virtual ~ShowCommonTipsNotify();

  ShowCommonTipsNotify(const ShowCommonTipsNotify& from);

  inline ShowCommonTipsNotify& operator=(const ShowCommonTipsNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShowCommonTipsNotify(ShowCommonTipsNotify&& from) noexcept
    : ShowCommonTipsNotify() {
    *this = ::std::move(from);
  }

  inline ShowCommonTipsNotify& operator=(ShowCommonTipsNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShowCommonTipsNotify& default_instance();

  static inline const ShowCommonTipsNotify* internal_default_instance() {
    return reinterpret_cast<const ShowCommonTipsNotify*>(
               &_ShowCommonTipsNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    144;

  void Swap(ShowCommonTipsNotify* other);
  friend void swap(ShowCommonTipsNotify& a, ShowCommonTipsNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShowCommonTipsNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ShowCommonTipsNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShowCommonTipsNotify& from);
  void MergeFrom(const ShowCommonTipsNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShowCommonTipsNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string content = 8;
  void clear_content();
  static const int kContentFieldNumber = 8;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // string title = 13;
  void clear_title();
  static const int kTitleFieldNumber = 13;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // uint32 close_time = 4;
  void clear_close_time();
  static const int kCloseTimeFieldNumber = 4;
  ::google::protobuf::uint32 close_time() const;
  void set_close_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ShowCommonTipsNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::uint32 close_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CloseCommonTipsNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CloseCommonTipsNotify) */ {
 public:
  CloseCommonTipsNotify();
  virtual ~CloseCommonTipsNotify();

  CloseCommonTipsNotify(const CloseCommonTipsNotify& from);

  inline CloseCommonTipsNotify& operator=(const CloseCommonTipsNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CloseCommonTipsNotify(CloseCommonTipsNotify&& from) noexcept
    : CloseCommonTipsNotify() {
    *this = ::std::move(from);
  }

  inline CloseCommonTipsNotify& operator=(CloseCommonTipsNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CloseCommonTipsNotify& default_instance();

  static inline const CloseCommonTipsNotify* internal_default_instance() {
    return reinterpret_cast<const CloseCommonTipsNotify*>(
               &_CloseCommonTipsNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    145;

  void Swap(CloseCommonTipsNotify* other);
  friend void swap(CloseCommonTipsNotify& a, CloseCommonTipsNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CloseCommonTipsNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CloseCommonTipsNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CloseCommonTipsNotify& from);
  void MergeFrom(const CloseCommonTipsNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CloseCommonTipsNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.CloseCommonTipsNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChangeWorldToSingleModeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChangeWorldToSingleModeNotify) */ {
 public:
  ChangeWorldToSingleModeNotify();
  virtual ~ChangeWorldToSingleModeNotify();

  ChangeWorldToSingleModeNotify(const ChangeWorldToSingleModeNotify& from);

  inline ChangeWorldToSingleModeNotify& operator=(const ChangeWorldToSingleModeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChangeWorldToSingleModeNotify(ChangeWorldToSingleModeNotify&& from) noexcept
    : ChangeWorldToSingleModeNotify() {
    *this = ::std::move(from);
  }

  inline ChangeWorldToSingleModeNotify& operator=(ChangeWorldToSingleModeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeWorldToSingleModeNotify& default_instance();

  static inline const ChangeWorldToSingleModeNotify* internal_default_instance() {
    return reinterpret_cast<const ChangeWorldToSingleModeNotify*>(
               &_ChangeWorldToSingleModeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    146;

  void Swap(ChangeWorldToSingleModeNotify* other);
  friend void swap(ChangeWorldToSingleModeNotify& a, ChangeWorldToSingleModeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChangeWorldToSingleModeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ChangeWorldToSingleModeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChangeWorldToSingleModeNotify& from);
  void MergeFrom(const ChangeWorldToSingleModeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChangeWorldToSingleModeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.ChangeWorldToSingleModeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SyncScenePlayTeamEntityNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SyncScenePlayTeamEntityNotify) */ {
 public:
  SyncScenePlayTeamEntityNotify();
  virtual ~SyncScenePlayTeamEntityNotify();

  SyncScenePlayTeamEntityNotify(const SyncScenePlayTeamEntityNotify& from);

  inline SyncScenePlayTeamEntityNotify& operator=(const SyncScenePlayTeamEntityNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncScenePlayTeamEntityNotify(SyncScenePlayTeamEntityNotify&& from) noexcept
    : SyncScenePlayTeamEntityNotify() {
    *this = ::std::move(from);
  }

  inline SyncScenePlayTeamEntityNotify& operator=(SyncScenePlayTeamEntityNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncScenePlayTeamEntityNotify& default_instance();

  static inline const SyncScenePlayTeamEntityNotify* internal_default_instance() {
    return reinterpret_cast<const SyncScenePlayTeamEntityNotify*>(
               &_SyncScenePlayTeamEntityNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    147;

  void Swap(SyncScenePlayTeamEntityNotify* other);
  friend void swap(SyncScenePlayTeamEntityNotify& a, SyncScenePlayTeamEntityNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncScenePlayTeamEntityNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncScenePlayTeamEntityNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncScenePlayTeamEntityNotify& from);
  void MergeFrom(const SyncScenePlayTeamEntityNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncScenePlayTeamEntityNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.PlayTeamEntityInfo entity_info_list = 3;
  int entity_info_list_size() const;
  void clear_entity_info_list();
  static const int kEntityInfoListFieldNumber = 3;
  const ::proto::PlayTeamEntityInfo& entity_info_list(int index) const;
  ::proto::PlayTeamEntityInfo* mutable_entity_info_list(int index);
  ::proto::PlayTeamEntityInfo* add_entity_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::PlayTeamEntityInfo >*
      mutable_entity_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::PlayTeamEntityInfo >&
      entity_info_list() const;

  // uint32 scene_id = 2;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 2;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SyncScenePlayTeamEntityNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::PlayTeamEntityInfo > entity_info_list_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelScenePlayTeamEntityNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DelScenePlayTeamEntityNotify) */ {
 public:
  DelScenePlayTeamEntityNotify();
  virtual ~DelScenePlayTeamEntityNotify();

  DelScenePlayTeamEntityNotify(const DelScenePlayTeamEntityNotify& from);

  inline DelScenePlayTeamEntityNotify& operator=(const DelScenePlayTeamEntityNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DelScenePlayTeamEntityNotify(DelScenePlayTeamEntityNotify&& from) noexcept
    : DelScenePlayTeamEntityNotify() {
    *this = ::std::move(from);
  }

  inline DelScenePlayTeamEntityNotify& operator=(DelScenePlayTeamEntityNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DelScenePlayTeamEntityNotify& default_instance();

  static inline const DelScenePlayTeamEntityNotify* internal_default_instance() {
    return reinterpret_cast<const DelScenePlayTeamEntityNotify*>(
               &_DelScenePlayTeamEntityNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    148;

  void Swap(DelScenePlayTeamEntityNotify* other);
  friend void swap(DelScenePlayTeamEntityNotify& a, DelScenePlayTeamEntityNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DelScenePlayTeamEntityNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  DelScenePlayTeamEntityNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelScenePlayTeamEntityNotify& from);
  void MergeFrom(const DelScenePlayTeamEntityNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelScenePlayTeamEntityNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 del_entity_id_list = 2;
  int del_entity_id_list_size() const;
  void clear_del_entity_id_list();
  static const int kDelEntityIdListFieldNumber = 2;
  ::google::protobuf::uint32 del_entity_id_list(int index) const;
  void set_del_entity_id_list(int index, ::google::protobuf::uint32 value);
  void add_del_entity_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      del_entity_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_del_entity_id_list();

  // uint32 scene_id = 4;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 4;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DelScenePlayTeamEntityNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > del_entity_id_list_;
  mutable int _del_entity_id_list_cached_byte_size_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CylinderRegionSize : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CylinderRegionSize) */ {
 public:
  CylinderRegionSize();
  virtual ~CylinderRegionSize();

  CylinderRegionSize(const CylinderRegionSize& from);

  inline CylinderRegionSize& operator=(const CylinderRegionSize& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CylinderRegionSize(CylinderRegionSize&& from) noexcept
    : CylinderRegionSize() {
    *this = ::std::move(from);
  }

  inline CylinderRegionSize& operator=(CylinderRegionSize&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CylinderRegionSize& default_instance();

  static inline const CylinderRegionSize* internal_default_instance() {
    return reinterpret_cast<const CylinderRegionSize*>(
               &_CylinderRegionSize_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    149;

  void Swap(CylinderRegionSize* other);
  friend void swap(CylinderRegionSize& a, CylinderRegionSize& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CylinderRegionSize* New() const PROTOBUF_FINAL { return New(NULL); }

  CylinderRegionSize* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CylinderRegionSize& from);
  void MergeFrom(const CylinderRegionSize& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CylinderRegionSize* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float height = 7;
  void clear_height();
  static const int kHeightFieldNumber = 7;
  float height() const;
  void set_height(float value);

  // float radius = 8;
  void clear_radius();
  static const int kRadiusFieldNumber = 8;
  float radius() const;
  void set_radius(float value);

  // @@protoc_insertion_point(class_scope:proto.CylinderRegionSize)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float height_;
  float radius_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PolygonRegionSize : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PolygonRegionSize) */ {
 public:
  PolygonRegionSize();
  virtual ~PolygonRegionSize();

  PolygonRegionSize(const PolygonRegionSize& from);

  inline PolygonRegionSize& operator=(const PolygonRegionSize& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PolygonRegionSize(PolygonRegionSize&& from) noexcept
    : PolygonRegionSize() {
    *this = ::std::move(from);
  }

  inline PolygonRegionSize& operator=(PolygonRegionSize&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PolygonRegionSize& default_instance();

  static inline const PolygonRegionSize* internal_default_instance() {
    return reinterpret_cast<const PolygonRegionSize*>(
               &_PolygonRegionSize_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    150;

  void Swap(PolygonRegionSize* other);
  friend void swap(PolygonRegionSize& a, PolygonRegionSize& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PolygonRegionSize* New() const PROTOBUF_FINAL { return New(NULL); }

  PolygonRegionSize* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PolygonRegionSize& from);
  void MergeFrom(const PolygonRegionSize& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PolygonRegionSize* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.VectorPlane point_list = 5;
  int point_list_size() const;
  void clear_point_list();
  static const int kPointListFieldNumber = 5;
  const ::proto::VectorPlane& point_list(int index) const;
  ::proto::VectorPlane* mutable_point_list(int index);
  ::proto::VectorPlane* add_point_list();
  ::google::protobuf::RepeatedPtrField< ::proto::VectorPlane >*
      mutable_point_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::VectorPlane >&
      point_list() const;

  // float height = 9;
  void clear_height();
  static const int kHeightFieldNumber = 9;
  float height() const;
  void set_height(float value);

  // @@protoc_insertion_point(class_scope:proto.PolygonRegionSize)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::VectorPlane > point_list_;
  float height_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerEyePointStateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerEyePointStateNotify) */ {
 public:
  PlayerEyePointStateNotify();
  virtual ~PlayerEyePointStateNotify();

  PlayerEyePointStateNotify(const PlayerEyePointStateNotify& from);

  inline PlayerEyePointStateNotify& operator=(const PlayerEyePointStateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerEyePointStateNotify(PlayerEyePointStateNotify&& from) noexcept
    : PlayerEyePointStateNotify() {
    *this = ::std::move(from);
  }

  inline PlayerEyePointStateNotify& operator=(PlayerEyePointStateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerEyePointStateNotify& default_instance();

  enum RegionSizeCase {
    kSphereRadius = 255,
    kCubicSize = 1823,
    kCylinderSize = 1862,
    kPolygonSize = 877,
    REGION_SIZE_NOT_SET = 0,
  };

  static inline const PlayerEyePointStateNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerEyePointStateNotify*>(
               &_PlayerEyePointStateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    151;

  void Swap(PlayerEyePointStateNotify* other);
  friend void swap(PlayerEyePointStateNotify& a, PlayerEyePointStateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerEyePointStateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerEyePointStateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerEyePointStateNotify& from);
  void MergeFrom(const PlayerEyePointStateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerEyePointStateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector eye_point_pos = 1;
  bool has_eye_point_pos() const;
  void clear_eye_point_pos();
  static const int kEyePointPosFieldNumber = 1;
  const ::proto::Vector& eye_point_pos() const;
  ::proto::Vector* mutable_eye_point_pos();
  ::proto::Vector* release_eye_point_pos();
  void set_allocated_eye_point_pos(::proto::Vector* eye_point_pos);

  // bool is_use_eye_point = 3;
  void clear_is_use_eye_point();
  static const int kIsUseEyePointFieldNumber = 3;
  bool is_use_eye_point() const;
  void set_is_use_eye_point(bool value);

  // bool is_filter_stream_pos = 2;
  void clear_is_filter_stream_pos();
  static const int kIsFilterStreamPosFieldNumber = 2;
  bool is_filter_stream_pos() const;
  void set_is_filter_stream_pos(bool value);

  // uint32 region_group_id = 4;
  void clear_region_group_id();
  static const int kRegionGroupIdFieldNumber = 4;
  ::google::protobuf::uint32 region_group_id() const;
  void set_region_group_id(::google::protobuf::uint32 value);

  // int32 fix_lod_level = 5;
  void clear_fix_lod_level();
  static const int kFixLodLevelFieldNumber = 5;
  ::google::protobuf::int32 fix_lod_level() const;
  void set_fix_lod_level(::google::protobuf::int32 value);

  // uint32 region_config_id = 7;
  void clear_region_config_id();
  static const int kRegionConfigIdFieldNumber = 7;
  ::google::protobuf::uint32 region_config_id() const;
  void set_region_config_id(::google::protobuf::uint32 value);

  // uint32 region_shape = 12;
  void clear_region_shape();
  static const int kRegionShapeFieldNumber = 12;
  ::google::protobuf::uint32 region_shape() const;
  void set_region_shape(::google::protobuf::uint32 value);

  // uint32 region_entity_id = 15;
  void clear_region_entity_id();
  static const int kRegionEntityIdFieldNumber = 15;
  ::google::protobuf::uint32 region_entity_id() const;
  void set_region_entity_id(::google::protobuf::uint32 value);

  // float sphere_radius = 255;
  private:
  bool has_sphere_radius() const;
  public:
  void clear_sphere_radius();
  static const int kSphereRadiusFieldNumber = 255;
  float sphere_radius() const;
  void set_sphere_radius(float value);

  // .proto.Vector cubic_size = 1823;
  bool has_cubic_size() const;
  void clear_cubic_size();
  static const int kCubicSizeFieldNumber = 1823;
  const ::proto::Vector& cubic_size() const;
  ::proto::Vector* mutable_cubic_size();
  ::proto::Vector* release_cubic_size();
  void set_allocated_cubic_size(::proto::Vector* cubic_size);

  // .proto.CylinderRegionSize cylinder_size = 1862;
  bool has_cylinder_size() const;
  void clear_cylinder_size();
  static const int kCylinderSizeFieldNumber = 1862;
  const ::proto::CylinderRegionSize& cylinder_size() const;
  ::proto::CylinderRegionSize* mutable_cylinder_size();
  ::proto::CylinderRegionSize* release_cylinder_size();
  void set_allocated_cylinder_size(::proto::CylinderRegionSize* cylinder_size);

  // .proto.PolygonRegionSize polygon_size = 877;
  bool has_polygon_size() const;
  void clear_polygon_size();
  static const int kPolygonSizeFieldNumber = 877;
  const ::proto::PolygonRegionSize& polygon_size() const;
  ::proto::PolygonRegionSize* mutable_polygon_size();
  ::proto::PolygonRegionSize* release_polygon_size();
  void set_allocated_polygon_size(::proto::PolygonRegionSize* polygon_size);

  RegionSizeCase region_size_case() const;
  // @@protoc_insertion_point(class_scope:proto.PlayerEyePointStateNotify)
 private:
  void set_has_sphere_radius();
  void set_has_cubic_size();
  void set_has_cylinder_size();
  void set_has_polygon_size();

  inline bool has_region_size() const;
  void clear_region_size();
  inline void clear_has_region_size();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* eye_point_pos_;
  bool is_use_eye_point_;
  bool is_filter_stream_pos_;
  ::google::protobuf::uint32 region_group_id_;
  ::google::protobuf::int32 fix_lod_level_;
  ::google::protobuf::uint32 region_config_id_;
  ::google::protobuf::uint32 region_shape_;
  ::google::protobuf::uint32 region_entity_id_;
  union RegionSizeUnion {
    RegionSizeUnion() {}
    float sphere_radius_;
    ::proto::Vector* cubic_size_;
    ::proto::CylinderRegionSize* cylinder_size_;
    ::proto::PolygonRegionSize* polygon_size_;
  } region_size_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetMapMarkTipsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetMapMarkTipsReq) */ {
 public:
  GetMapMarkTipsReq();
  virtual ~GetMapMarkTipsReq();

  GetMapMarkTipsReq(const GetMapMarkTipsReq& from);

  inline GetMapMarkTipsReq& operator=(const GetMapMarkTipsReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetMapMarkTipsReq(GetMapMarkTipsReq&& from) noexcept
    : GetMapMarkTipsReq() {
    *this = ::std::move(from);
  }

  inline GetMapMarkTipsReq& operator=(GetMapMarkTipsReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMapMarkTipsReq& default_instance();

  static inline const GetMapMarkTipsReq* internal_default_instance() {
    return reinterpret_cast<const GetMapMarkTipsReq*>(
               &_GetMapMarkTipsReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    152;

  void Swap(GetMapMarkTipsReq* other);
  friend void swap(GetMapMarkTipsReq& a, GetMapMarkTipsReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetMapMarkTipsReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetMapMarkTipsReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetMapMarkTipsReq& from);
  void MergeFrom(const GetMapMarkTipsReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetMapMarkTipsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.GetMapMarkTipsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetMapMarkTipsRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetMapMarkTipsRsp) */ {
 public:
  GetMapMarkTipsRsp();
  virtual ~GetMapMarkTipsRsp();

  GetMapMarkTipsRsp(const GetMapMarkTipsRsp& from);

  inline GetMapMarkTipsRsp& operator=(const GetMapMarkTipsRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetMapMarkTipsRsp(GetMapMarkTipsRsp&& from) noexcept
    : GetMapMarkTipsRsp() {
    *this = ::std::move(from);
  }

  inline GetMapMarkTipsRsp& operator=(GetMapMarkTipsRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMapMarkTipsRsp& default_instance();

  static inline const GetMapMarkTipsRsp* internal_default_instance() {
    return reinterpret_cast<const GetMapMarkTipsRsp*>(
               &_GetMapMarkTipsRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    153;

  void Swap(GetMapMarkTipsRsp* other);
  friend void swap(GetMapMarkTipsRsp& a, GetMapMarkTipsRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetMapMarkTipsRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetMapMarkTipsRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetMapMarkTipsRsp& from);
  void MergeFrom(const GetMapMarkTipsRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetMapMarkTipsRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.MapMarkTipsInfo mark_tips_list = 11;
  int mark_tips_list_size() const;
  void clear_mark_tips_list();
  static const int kMarkTipsListFieldNumber = 11;
  const ::proto::MapMarkTipsInfo& mark_tips_list(int index) const;
  ::proto::MapMarkTipsInfo* mutable_mark_tips_list(int index);
  ::proto::MapMarkTipsInfo* add_mark_tips_list();
  ::google::protobuf::RepeatedPtrField< ::proto::MapMarkTipsInfo >*
      mutable_mark_tips_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::MapMarkTipsInfo >&
      mark_tips_list() const;

  // int32 retcode = 7;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 7;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetMapMarkTipsRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::MapMarkTipsInfo > mark_tips_list_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChangeWorldToSingleModeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChangeWorldToSingleModeReq) */ {
 public:
  ChangeWorldToSingleModeReq();
  virtual ~ChangeWorldToSingleModeReq();

  ChangeWorldToSingleModeReq(const ChangeWorldToSingleModeReq& from);

  inline ChangeWorldToSingleModeReq& operator=(const ChangeWorldToSingleModeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChangeWorldToSingleModeReq(ChangeWorldToSingleModeReq&& from) noexcept
    : ChangeWorldToSingleModeReq() {
    *this = ::std::move(from);
  }

  inline ChangeWorldToSingleModeReq& operator=(ChangeWorldToSingleModeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeWorldToSingleModeReq& default_instance();

  static inline const ChangeWorldToSingleModeReq* internal_default_instance() {
    return reinterpret_cast<const ChangeWorldToSingleModeReq*>(
               &_ChangeWorldToSingleModeReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    154;

  void Swap(ChangeWorldToSingleModeReq* other);
  friend void swap(ChangeWorldToSingleModeReq& a, ChangeWorldToSingleModeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChangeWorldToSingleModeReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ChangeWorldToSingleModeReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChangeWorldToSingleModeReq& from);
  void MergeFrom(const ChangeWorldToSingleModeReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChangeWorldToSingleModeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.ChangeWorldToSingleModeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChangeWorldToSingleModeRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChangeWorldToSingleModeRsp) */ {
 public:
  ChangeWorldToSingleModeRsp();
  virtual ~ChangeWorldToSingleModeRsp();

  ChangeWorldToSingleModeRsp(const ChangeWorldToSingleModeRsp& from);

  inline ChangeWorldToSingleModeRsp& operator=(const ChangeWorldToSingleModeRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChangeWorldToSingleModeRsp(ChangeWorldToSingleModeRsp&& from) noexcept
    : ChangeWorldToSingleModeRsp() {
    *this = ::std::move(from);
  }

  inline ChangeWorldToSingleModeRsp& operator=(ChangeWorldToSingleModeRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeWorldToSingleModeRsp& default_instance();

  static inline const ChangeWorldToSingleModeRsp* internal_default_instance() {
    return reinterpret_cast<const ChangeWorldToSingleModeRsp*>(
               &_ChangeWorldToSingleModeRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    155;

  void Swap(ChangeWorldToSingleModeRsp* other);
  friend void swap(ChangeWorldToSingleModeRsp& a, ChangeWorldToSingleModeRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChangeWorldToSingleModeRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ChangeWorldToSingleModeRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChangeWorldToSingleModeRsp& from);
  void MergeFrom(const ChangeWorldToSingleModeRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChangeWorldToSingleModeRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 4;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 4;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 quit_mp_valid_time = 15;
  void clear_quit_mp_valid_time();
  static const int kQuitMpValidTimeFieldNumber = 15;
  ::google::protobuf::uint32 quit_mp_valid_time() const;
  void set_quit_mp_valid_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ChangeWorldToSingleModeRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 quit_mp_valid_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetWorldMpInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetWorldMpInfoReq) */ {
 public:
  GetWorldMpInfoReq();
  virtual ~GetWorldMpInfoReq();

  GetWorldMpInfoReq(const GetWorldMpInfoReq& from);

  inline GetWorldMpInfoReq& operator=(const GetWorldMpInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetWorldMpInfoReq(GetWorldMpInfoReq&& from) noexcept
    : GetWorldMpInfoReq() {
    *this = ::std::move(from);
  }

  inline GetWorldMpInfoReq& operator=(GetWorldMpInfoReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetWorldMpInfoReq& default_instance();

  static inline const GetWorldMpInfoReq* internal_default_instance() {
    return reinterpret_cast<const GetWorldMpInfoReq*>(
               &_GetWorldMpInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    156;

  void Swap(GetWorldMpInfoReq* other);
  friend void swap(GetWorldMpInfoReq& a, GetWorldMpInfoReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetWorldMpInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetWorldMpInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetWorldMpInfoReq& from);
  void MergeFrom(const GetWorldMpInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetWorldMpInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.GetWorldMpInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetWorldMpInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetWorldMpInfoRsp) */ {
 public:
  GetWorldMpInfoRsp();
  virtual ~GetWorldMpInfoRsp();

  GetWorldMpInfoRsp(const GetWorldMpInfoRsp& from);

  inline GetWorldMpInfoRsp& operator=(const GetWorldMpInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetWorldMpInfoRsp(GetWorldMpInfoRsp&& from) noexcept
    : GetWorldMpInfoRsp() {
    *this = ::std::move(from);
  }

  inline GetWorldMpInfoRsp& operator=(GetWorldMpInfoRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetWorldMpInfoRsp& default_instance();

  static inline const GetWorldMpInfoRsp* internal_default_instance() {
    return reinterpret_cast<const GetWorldMpInfoRsp*>(
               &_GetWorldMpInfoRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    157;

  void Swap(GetWorldMpInfoRsp* other);
  friend void swap(GetWorldMpInfoRsp& a, GetWorldMpInfoRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetWorldMpInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetWorldMpInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetWorldMpInfoRsp& from);
  void MergeFrom(const GetWorldMpInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetWorldMpInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 12;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 12;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // bool is_in_mp_mode = 1;
  void clear_is_in_mp_mode();
  static const int kIsInMpModeFieldNumber = 1;
  bool is_in_mp_mode() const;
  void set_is_in_mp_mode(bool value);

  // uint32 quit_mp_valid_time = 9;
  void clear_quit_mp_valid_time();
  static const int kQuitMpValidTimeFieldNumber = 9;
  ::google::protobuf::uint32 quit_mp_valid_time() const;
  void set_quit_mp_valid_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetWorldMpInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  bool is_in_mp_mode_;
  ::google::protobuf::uint32 quit_mp_valid_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityConfigHashEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityConfigHashEntry) */ {
 public:
  EntityConfigHashEntry();
  virtual ~EntityConfigHashEntry();

  EntityConfigHashEntry(const EntityConfigHashEntry& from);

  inline EntityConfigHashEntry& operator=(const EntityConfigHashEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityConfigHashEntry(EntityConfigHashEntry&& from) noexcept
    : EntityConfigHashEntry() {
    *this = ::std::move(from);
  }

  inline EntityConfigHashEntry& operator=(EntityConfigHashEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityConfigHashEntry& default_instance();

  static inline const EntityConfigHashEntry* internal_default_instance() {
    return reinterpret_cast<const EntityConfigHashEntry*>(
               &_EntityConfigHashEntry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    158;

  void Swap(EntityConfigHashEntry* other);
  friend void swap(EntityConfigHashEntry& a, EntityConfigHashEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityConfigHashEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityConfigHashEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityConfigHashEntry& from);
  void MergeFrom(const EntityConfigHashEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityConfigHashEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 job_id = 13;
  void clear_job_id();
  static const int kJobIdFieldNumber = 13;
  ::google::protobuf::uint32 job_id() const;
  void set_job_id(::google::protobuf::uint32 value);

  // int32 hash_value = 6;
  void clear_hash_value();
  static const int kHashValueFieldNumber = 6;
  ::google::protobuf::int32 hash_value() const;
  void set_hash_value(::google::protobuf::int32 value);

  // uint32 entity_id = 11;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 11;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EntityConfigHashEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 job_id_;
  ::google::protobuf::int32 hash_value_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityConfigHashNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityConfigHashNotify) */ {
 public:
  EntityConfigHashNotify();
  virtual ~EntityConfigHashNotify();

  EntityConfigHashNotify(const EntityConfigHashNotify& from);

  inline EntityConfigHashNotify& operator=(const EntityConfigHashNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityConfigHashNotify(EntityConfigHashNotify&& from) noexcept
    : EntityConfigHashNotify() {
    *this = ::std::move(from);
  }

  inline EntityConfigHashNotify& operator=(EntityConfigHashNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityConfigHashNotify& default_instance();

  static inline const EntityConfigHashNotify* internal_default_instance() {
    return reinterpret_cast<const EntityConfigHashNotify*>(
               &_EntityConfigHashNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    159;

  void Swap(EntityConfigHashNotify* other);
  friend void swap(EntityConfigHashNotify& a, EntityConfigHashNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityConfigHashNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityConfigHashNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityConfigHashNotify& from);
  void MergeFrom(const EntityConfigHashNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityConfigHashNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.EntityConfigHashEntry ability_entry_list = 3;
  int ability_entry_list_size() const;
  void clear_ability_entry_list();
  static const int kAbilityEntryListFieldNumber = 3;
  const ::proto::EntityConfigHashEntry& ability_entry_list(int index) const;
  ::proto::EntityConfigHashEntry* mutable_ability_entry_list(int index);
  ::proto::EntityConfigHashEntry* add_ability_entry_list();
  ::google::protobuf::RepeatedPtrField< ::proto::EntityConfigHashEntry >*
      mutable_ability_entry_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::EntityConfigHashEntry >&
      ability_entry_list() const;

  // repeated .proto.EntityConfigHashEntry combat_entry_list = 8;
  int combat_entry_list_size() const;
  void clear_combat_entry_list();
  static const int kCombatEntryListFieldNumber = 8;
  const ::proto::EntityConfigHashEntry& combat_entry_list(int index) const;
  ::proto::EntityConfigHashEntry* mutable_combat_entry_list(int index);
  ::proto::EntityConfigHashEntry* add_combat_entry_list();
  ::google::protobuf::RepeatedPtrField< ::proto::EntityConfigHashEntry >*
      mutable_combat_entry_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::EntityConfigHashEntry >&
      combat_entry_list() const;

  // repeated .proto.EntityConfigHashEntry avatar_entry_list = 15;
  int avatar_entry_list_size() const;
  void clear_avatar_entry_list();
  static const int kAvatarEntryListFieldNumber = 15;
  const ::proto::EntityConfigHashEntry& avatar_entry_list(int index) const;
  ::proto::EntityConfigHashEntry* mutable_avatar_entry_list(int index);
  ::proto::EntityConfigHashEntry* add_avatar_entry_list();
  ::google::protobuf::RepeatedPtrField< ::proto::EntityConfigHashEntry >*
      mutable_avatar_entry_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::EntityConfigHashEntry >&
      avatar_entry_list() const;

  // @@protoc_insertion_point(class_scope:proto.EntityConfigHashNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::EntityConfigHashEntry > ability_entry_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::EntityConfigHashEntry > combat_entry_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::EntityConfigHashEntry > avatar_entry_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ForceDragAvatarNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ForceDragAvatarNotify) */ {
 public:
  ForceDragAvatarNotify();
  virtual ~ForceDragAvatarNotify();

  ForceDragAvatarNotify(const ForceDragAvatarNotify& from);

  inline ForceDragAvatarNotify& operator=(const ForceDragAvatarNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ForceDragAvatarNotify(ForceDragAvatarNotify&& from) noexcept
    : ForceDragAvatarNotify() {
    *this = ::std::move(from);
  }

  inline ForceDragAvatarNotify& operator=(ForceDragAvatarNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ForceDragAvatarNotify& default_instance();

  static inline const ForceDragAvatarNotify* internal_default_instance() {
    return reinterpret_cast<const ForceDragAvatarNotify*>(
               &_ForceDragAvatarNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    160;

  void Swap(ForceDragAvatarNotify* other);
  friend void swap(ForceDragAvatarNotify& a, ForceDragAvatarNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ForceDragAvatarNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ForceDragAvatarNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ForceDragAvatarNotify& from);
  void MergeFrom(const ForceDragAvatarNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ForceDragAvatarNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.MotionInfo motion_info = 10;
  bool has_motion_info() const;
  void clear_motion_info();
  static const int kMotionInfoFieldNumber = 10;
  const ::proto::MotionInfo& motion_info() const;
  ::proto::MotionInfo* mutable_motion_info();
  ::proto::MotionInfo* release_motion_info();
  void set_allocated_motion_info(::proto::MotionInfo* motion_info);

  // uint64 delta_time_ms = 1;
  void clear_delta_time_ms();
  static const int kDeltaTimeMsFieldNumber = 1;
  ::google::protobuf::uint64 delta_time_ms() const;
  void set_delta_time_ms(::google::protobuf::uint64 value);

  // uint32 entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 scene_time = 3;
  void clear_scene_time();
  static const int kSceneTimeFieldNumber = 3;
  ::google::protobuf::uint32 scene_time() const;
  void set_scene_time(::google::protobuf::uint32 value);

  // bool is_first_valid = 8;
  void clear_is_first_valid();
  static const int kIsFirstValidFieldNumber = 8;
  bool is_first_valid() const;
  void set_is_first_valid(bool value);

  // uint64 last_move_time_ms = 12;
  void clear_last_move_time_ms();
  static const int kLastMoveTimeMsFieldNumber = 12;
  ::google::protobuf::uint64 last_move_time_ms() const;
  void set_last_move_time_ms(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.ForceDragAvatarNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MotionInfo* motion_info_;
  ::google::protobuf::uint64 delta_time_ms_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 scene_time_;
  bool is_first_valid_;
  ::google::protobuf::uint64 last_move_time_ms_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MonsterPointArrayRouteUpdateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MonsterPointArrayRouteUpdateNotify) */ {
 public:
  MonsterPointArrayRouteUpdateNotify();
  virtual ~MonsterPointArrayRouteUpdateNotify();

  MonsterPointArrayRouteUpdateNotify(const MonsterPointArrayRouteUpdateNotify& from);

  inline MonsterPointArrayRouteUpdateNotify& operator=(const MonsterPointArrayRouteUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MonsterPointArrayRouteUpdateNotify(MonsterPointArrayRouteUpdateNotify&& from) noexcept
    : MonsterPointArrayRouteUpdateNotify() {
    *this = ::std::move(from);
  }

  inline MonsterPointArrayRouteUpdateNotify& operator=(MonsterPointArrayRouteUpdateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MonsterPointArrayRouteUpdateNotify& default_instance();

  static inline const MonsterPointArrayRouteUpdateNotify* internal_default_instance() {
    return reinterpret_cast<const MonsterPointArrayRouteUpdateNotify*>(
               &_MonsterPointArrayRouteUpdateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    161;

  void Swap(MonsterPointArrayRouteUpdateNotify* other);
  friend void swap(MonsterPointArrayRouteUpdateNotify& a, MonsterPointArrayRouteUpdateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MonsterPointArrayRouteUpdateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MonsterPointArrayRouteUpdateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MonsterPointArrayRouteUpdateNotify& from);
  void MergeFrom(const MonsterPointArrayRouteUpdateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MonsterPointArrayRouteUpdateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.MonsterRoute monster_route = 5;
  bool has_monster_route() const;
  void clear_monster_route();
  static const int kMonsterRouteFieldNumber = 5;
  const ::proto::MonsterRoute& monster_route() const;
  ::proto::MonsterRoute* mutable_monster_route();
  ::proto::MonsterRoute* release_monster_route();
  void set_allocated_monster_route(::proto::MonsterRoute* monster_route);

  // uint32 entity_id = 7;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 7;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MonsterPointArrayRouteUpdateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MonsterRoute* monster_route_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ForceDragBackTransferNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ForceDragBackTransferNotify) */ {
 public:
  ForceDragBackTransferNotify();
  virtual ~ForceDragBackTransferNotify();

  ForceDragBackTransferNotify(const ForceDragBackTransferNotify& from);

  inline ForceDragBackTransferNotify& operator=(const ForceDragBackTransferNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ForceDragBackTransferNotify(ForceDragBackTransferNotify&& from) noexcept
    : ForceDragBackTransferNotify() {
    *this = ::std::move(from);
  }

  inline ForceDragBackTransferNotify& operator=(ForceDragBackTransferNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ForceDragBackTransferNotify& default_instance();

  static inline const ForceDragBackTransferNotify* internal_default_instance() {
    return reinterpret_cast<const ForceDragBackTransferNotify*>(
               &_ForceDragBackTransferNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    162;

  void Swap(ForceDragBackTransferNotify* other);
  friend void swap(ForceDragBackTransferNotify& a, ForceDragBackTransferNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ForceDragBackTransferNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ForceDragBackTransferNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ForceDragBackTransferNotify& from);
  void MergeFrom(const ForceDragBackTransferNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ForceDragBackTransferNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.ForceDragBackTransferNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetScenePerformanceReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetScenePerformanceReq) */ {
 public:
  GetScenePerformanceReq();
  virtual ~GetScenePerformanceReq();

  GetScenePerformanceReq(const GetScenePerformanceReq& from);

  inline GetScenePerformanceReq& operator=(const GetScenePerformanceReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetScenePerformanceReq(GetScenePerformanceReq&& from) noexcept
    : GetScenePerformanceReq() {
    *this = ::std::move(from);
  }

  inline GetScenePerformanceReq& operator=(GetScenePerformanceReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetScenePerformanceReq& default_instance();

  static inline const GetScenePerformanceReq* internal_default_instance() {
    return reinterpret_cast<const GetScenePerformanceReq*>(
               &_GetScenePerformanceReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    163;

  void Swap(GetScenePerformanceReq* other);
  friend void swap(GetScenePerformanceReq& a, GetScenePerformanceReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetScenePerformanceReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetScenePerformanceReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetScenePerformanceReq& from);
  void MergeFrom(const GetScenePerformanceReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetScenePerformanceReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.GetScenePerformanceReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetScenePerformanceRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetScenePerformanceRsp) */ {
 public:
  GetScenePerformanceRsp();
  virtual ~GetScenePerformanceRsp();

  GetScenePerformanceRsp(const GetScenePerformanceRsp& from);

  inline GetScenePerformanceRsp& operator=(const GetScenePerformanceRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetScenePerformanceRsp(GetScenePerformanceRsp&& from) noexcept
    : GetScenePerformanceRsp() {
    *this = ::std::move(from);
  }

  inline GetScenePerformanceRsp& operator=(GetScenePerformanceRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetScenePerformanceRsp& default_instance();

  static inline const GetScenePerformanceRsp* internal_default_instance() {
    return reinterpret_cast<const GetScenePerformanceRsp*>(
               &_GetScenePerformanceRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    164;

  void Swap(GetScenePerformanceRsp* other);
  friend void swap(GetScenePerformanceRsp& a, GetScenePerformanceRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetScenePerformanceRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetScenePerformanceRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetScenePerformanceRsp& from);
  void MergeFrom(const GetScenePerformanceRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetScenePerformanceRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 4;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 4;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // uint32 gather_num_insight = 1;
  void clear_gather_num_insight();
  static const int kGatherNumInsightFieldNumber = 1;
  ::google::protobuf::uint32 gather_num_insight() const;
  void set_gather_num_insight(::google::protobuf::uint32 value);

  // uint32 group_num = 2;
  void clear_group_num();
  static const int kGroupNumFieldNumber = 2;
  ::google::protobuf::uint32 group_num() const;
  void set_group_num(::google::protobuf::uint32 value);

  // uint32 gadget_num = 6;
  void clear_gadget_num();
  static const int kGadgetNumFieldNumber = 6;
  ::google::protobuf::uint32 gadget_num() const;
  void set_gadget_num(::google::protobuf::uint32 value);

  // int32 retcode = 7;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 7;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 entity_num = 8;
  void clear_entity_num();
  static const int kEntityNumFieldNumber = 8;
  ::google::protobuf::uint32 entity_num() const;
  void set_entity_num(::google::protobuf::uint32 value);

  // uint32 monster_num = 9;
  void clear_monster_num();
  static const int kMonsterNumFieldNumber = 9;
  ::google::protobuf::uint32 monster_num() const;
  void set_monster_num(::google::protobuf::uint32 value);

  // uint32 dynamic_group_num = 12;
  void clear_dynamic_group_num();
  static const int kDynamicGroupNumFieldNumber = 12;
  ::google::protobuf::uint32 dynamic_group_num() const;
  void set_dynamic_group_num(::google::protobuf::uint32 value);

  // uint32 gather_num = 13;
  void clear_gather_num();
  static const int kGatherNumFieldNumber = 13;
  ::google::protobuf::uint32 gather_num() const;
  void set_gather_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetScenePerformanceRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::google::protobuf::uint32 gather_num_insight_;
  ::google::protobuf::uint32 group_num_;
  ::google::protobuf::uint32 gadget_num_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 entity_num_;
  ::google::protobuf::uint32 monster_num_;
  ::google::protobuf::uint32 dynamic_group_num_;
  ::google::protobuf::uint32 gather_num_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneAudioNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneAudioNotify) */ {
 public:
  SceneAudioNotify();
  virtual ~SceneAudioNotify();

  SceneAudioNotify(const SceneAudioNotify& from);

  inline SceneAudioNotify& operator=(const SceneAudioNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneAudioNotify(SceneAudioNotify&& from) noexcept
    : SceneAudioNotify() {
    *this = ::std::move(from);
  }

  inline SceneAudioNotify& operator=(SceneAudioNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneAudioNotify& default_instance();

  static inline const SceneAudioNotify* internal_default_instance() {
    return reinterpret_cast<const SceneAudioNotify*>(
               &_SceneAudioNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    165;

  void Swap(SceneAudioNotify* other);
  friend void swap(SceneAudioNotify& a, SceneAudioNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneAudioNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneAudioNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneAudioNotify& from);
  void MergeFrom(const SceneAudioNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneAudioNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 param1 = 4;
  int param1_size() const;
  void clear_param1();
  static const int kParam1FieldNumber = 4;
  ::google::protobuf::uint32 param1(int index) const;
  void set_param1(int index, ::google::protobuf::uint32 value);
  void add_param1(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      param1() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_param1();

  // repeated string param3 = 11;
  int param3_size() const;
  void clear_param3();
  static const int kParam3FieldNumber = 11;
  const ::std::string& param3(int index) const;
  ::std::string* mutable_param3(int index);
  void set_param3(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_param3(int index, ::std::string&& value);
  #endif
  void set_param3(int index, const char* value);
  void set_param3(int index, const char* value, size_t size);
  ::std::string* add_param3();
  void add_param3(const ::std::string& value);
  #if LANG_CXX11
  void add_param3(::std::string&& value);
  #endif
  void add_param3(const char* value);
  void add_param3(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& param3() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_param3();

  // repeated float param2 = 14;
  int param2_size() const;
  void clear_param2();
  static const int kParam2FieldNumber = 14;
  float param2(int index) const;
  void set_param2(int index, float value);
  void add_param2(float value);
  const ::google::protobuf::RepeatedField< float >&
      param2() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_param2();

  // int32 type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // uint32 source_uid = 6;
  void clear_source_uid();
  static const int kSourceUidFieldNumber = 6;
  ::google::protobuf::uint32 source_uid() const;
  void set_source_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneAudioNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > param1_;
  mutable int _param1_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> param3_;
  ::google::protobuf::RepeatedField< float > param2_;
  mutable int _param2_cached_byte_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::uint32 source_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HitTreeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HitTreeNotify) */ {
 public:
  HitTreeNotify();
  virtual ~HitTreeNotify();

  HitTreeNotify(const HitTreeNotify& from);

  inline HitTreeNotify& operator=(const HitTreeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HitTreeNotify(HitTreeNotify&& from) noexcept
    : HitTreeNotify() {
    *this = ::std::move(from);
  }

  inline HitTreeNotify& operator=(HitTreeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HitTreeNotify& default_instance();

  static inline const HitTreeNotify* internal_default_instance() {
    return reinterpret_cast<const HitTreeNotify*>(
               &_HitTreeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    166;

  void Swap(HitTreeNotify* other);
  friend void swap(HitTreeNotify& a, HitTreeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HitTreeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  HitTreeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HitTreeNotify& from);
  void MergeFrom(const HitTreeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HitTreeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector tree_pos = 2;
  bool has_tree_pos() const;
  void clear_tree_pos();
  static const int kTreePosFieldNumber = 2;
  const ::proto::Vector& tree_pos() const;
  ::proto::Vector* mutable_tree_pos();
  ::proto::Vector* release_tree_pos();
  void set_allocated_tree_pos(::proto::Vector* tree_pos);

  // .proto.Vector drop_pos = 8;
  bool has_drop_pos() const;
  void clear_drop_pos();
  static const int kDropPosFieldNumber = 8;
  const ::proto::Vector& drop_pos() const;
  ::proto::Vector* mutable_drop_pos();
  ::proto::Vector* release_drop_pos();
  void set_allocated_drop_pos(::proto::Vector* drop_pos);

  // uint32 tree_type = 11;
  void clear_tree_type();
  static const int kTreeTypeFieldNumber = 11;
  ::google::protobuf::uint32 tree_type() const;
  void set_tree_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HitTreeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* tree_pos_;
  ::proto::Vector* drop_pos_;
  ::google::protobuf::uint32 tree_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityTagChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityTagChangeNotify) */ {
 public:
  EntityTagChangeNotify();
  virtual ~EntityTagChangeNotify();

  EntityTagChangeNotify(const EntityTagChangeNotify& from);

  inline EntityTagChangeNotify& operator=(const EntityTagChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityTagChangeNotify(EntityTagChangeNotify&& from) noexcept
    : EntityTagChangeNotify() {
    *this = ::std::move(from);
  }

  inline EntityTagChangeNotify& operator=(EntityTagChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityTagChangeNotify& default_instance();

  static inline const EntityTagChangeNotify* internal_default_instance() {
    return reinterpret_cast<const EntityTagChangeNotify*>(
               &_EntityTagChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    167;

  void Swap(EntityTagChangeNotify* other);
  friend void swap(EntityTagChangeNotify& a, EntityTagChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityTagChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityTagChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityTagChangeNotify& from);
  void MergeFrom(const EntityTagChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityTagChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string tag = 2;
  void clear_tag();
  static const int kTagFieldNumber = 2;
  const ::std::string& tag() const;
  void set_tag(const ::std::string& value);
  #if LANG_CXX11
  void set_tag(::std::string&& value);
  #endif
  void set_tag(const char* value);
  void set_tag(const char* value, size_t size);
  ::std::string* mutable_tag();
  ::std::string* release_tag();
  void set_allocated_tag(::std::string* tag);

  // uint32 entity_id = 8;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 8;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // bool is_add = 10;
  void clear_is_add();
  static const int kIsAddFieldNumber = 10;
  bool is_add() const;
  void set_is_add(bool value);

  // @@protoc_insertion_point(class_scope:proto.EntityTagChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr tag_;
  ::google::protobuf::uint32 entity_id_;
  bool is_add_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarFollowRouteNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarFollowRouteNotify) */ {
 public:
  AvatarFollowRouteNotify();
  virtual ~AvatarFollowRouteNotify();

  AvatarFollowRouteNotify(const AvatarFollowRouteNotify& from);

  inline AvatarFollowRouteNotify& operator=(const AvatarFollowRouteNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarFollowRouteNotify(AvatarFollowRouteNotify&& from) noexcept
    : AvatarFollowRouteNotify() {
    *this = ::std::move(from);
  }

  inline AvatarFollowRouteNotify& operator=(AvatarFollowRouteNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarFollowRouteNotify& default_instance();

  static inline const AvatarFollowRouteNotify* internal_default_instance() {
    return reinterpret_cast<const AvatarFollowRouteNotify*>(
               &_AvatarFollowRouteNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    168;

  void Swap(AvatarFollowRouteNotify* other);
  friend void swap(AvatarFollowRouteNotify& a, AvatarFollowRouteNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarFollowRouteNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarFollowRouteNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarFollowRouteNotify& from);
  void MergeFrom(const AvatarFollowRouteNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarFollowRouteNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string client_params = 13;
  void clear_client_params();
  static const int kClientParamsFieldNumber = 13;
  const ::std::string& client_params() const;
  void set_client_params(const ::std::string& value);
  #if LANG_CXX11
  void set_client_params(::std::string&& value);
  #endif
  void set_client_params(const char* value);
  void set_client_params(const char* value, size_t size);
  ::std::string* mutable_client_params();
  ::std::string* release_client_params();
  void set_allocated_client_params(::std::string* client_params);

  // .proto.Route route = 2;
  bool has_route() const;
  void clear_route();
  static const int kRouteFieldNumber = 2;
  const ::proto::Route& route() const;
  ::proto::Route* mutable_route();
  ::proto::Route* release_route();
  void set_allocated_route(::proto::Route* route);

  // uint32 entity_id = 4;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 4;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 template_id = 6;
  void clear_template_id();
  static const int kTemplateIdFieldNumber = 6;
  ::google::protobuf::uint32 template_id() const;
  void set_template_id(::google::protobuf::uint32 value);

  // uint32 start_scene_time_ms = 8;
  void clear_start_scene_time_ms();
  static const int kStartSceneTimeMsFieldNumber = 8;
  ::google::protobuf::uint32 start_scene_time_ms() const;
  void set_start_scene_time_ms(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarFollowRouteNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr client_params_;
  ::proto::Route* route_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 template_id_;
  ::google::protobuf::uint32 start_scene_time_ms_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneEntityUpdateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEntityUpdateNotify) */ {
 public:
  SceneEntityUpdateNotify();
  virtual ~SceneEntityUpdateNotify();

  SceneEntityUpdateNotify(const SceneEntityUpdateNotify& from);

  inline SceneEntityUpdateNotify& operator=(const SceneEntityUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEntityUpdateNotify(SceneEntityUpdateNotify&& from) noexcept
    : SceneEntityUpdateNotify() {
    *this = ::std::move(from);
  }

  inline SceneEntityUpdateNotify& operator=(SceneEntityUpdateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEntityUpdateNotify& default_instance();

  static inline const SceneEntityUpdateNotify* internal_default_instance() {
    return reinterpret_cast<const SceneEntityUpdateNotify*>(
               &_SceneEntityUpdateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    169;

  void Swap(SceneEntityUpdateNotify* other);
  friend void swap(SceneEntityUpdateNotify& a, SceneEntityUpdateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEntityUpdateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEntityUpdateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEntityUpdateNotify& from);
  void MergeFrom(const SceneEntityUpdateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEntityUpdateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.SceneEntityInfo entity_list = 5;
  int entity_list_size() const;
  void clear_entity_list();
  static const int kEntityListFieldNumber = 5;
  const ::proto::SceneEntityInfo& entity_list(int index) const;
  ::proto::SceneEntityInfo* mutable_entity_list(int index);
  ::proto::SceneEntityInfo* add_entity_list();
  ::google::protobuf::RepeatedPtrField< ::proto::SceneEntityInfo >*
      mutable_entity_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::SceneEntityInfo >&
      entity_list() const;

  // uint32 param = 10;
  void clear_param();
  static const int kParamFieldNumber = 10;
  ::google::protobuf::uint32 param() const;
  void set_param(::google::protobuf::uint32 value);

  // .proto.VisionType appear_type = 13;
  void clear_appear_type();
  static const int kAppearTypeFieldNumber = 13;
  ::proto::VisionType appear_type() const;
  void set_appear_type(::proto::VisionType value);

  // @@protoc_insertion_point(class_scope:proto.SceneEntityUpdateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::SceneEntityInfo > entity_list_;
  ::google::protobuf::uint32 param_;
  int appear_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientHashDebugNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClientHashDebugNotify) */ {
 public:
  ClientHashDebugNotify();
  virtual ~ClientHashDebugNotify();

  ClientHashDebugNotify(const ClientHashDebugNotify& from);

  inline ClientHashDebugNotify& operator=(const ClientHashDebugNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientHashDebugNotify(ClientHashDebugNotify&& from) noexcept
    : ClientHashDebugNotify() {
    *this = ::std::move(from);
  }

  inline ClientHashDebugNotify& operator=(ClientHashDebugNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientHashDebugNotify& default_instance();

  static inline const ClientHashDebugNotify* internal_default_instance() {
    return reinterpret_cast<const ClientHashDebugNotify*>(
               &_ClientHashDebugNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    170;

  void Swap(ClientHashDebugNotify* other);
  friend void swap(ClientHashDebugNotify& a, ClientHashDebugNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientHashDebugNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientHashDebugNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientHashDebugNotify& from);
  void MergeFrom(const ClientHashDebugNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientHashDebugNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 job_id = 12;
  void clear_job_id();
  static const int kJobIdFieldNumber = 12;
  ::google::protobuf::uint32 job_id() const;
  void set_job_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ClientHashDebugNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 job_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerWorldSceneInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerWorldSceneInfo) */ {
 public:
  PlayerWorldSceneInfo();
  virtual ~PlayerWorldSceneInfo();

  PlayerWorldSceneInfo(const PlayerWorldSceneInfo& from);

  inline PlayerWorldSceneInfo& operator=(const PlayerWorldSceneInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerWorldSceneInfo(PlayerWorldSceneInfo&& from) noexcept
    : PlayerWorldSceneInfo() {
    *this = ::std::move(from);
  }

  inline PlayerWorldSceneInfo& operator=(PlayerWorldSceneInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerWorldSceneInfo& default_instance();

  static inline const PlayerWorldSceneInfo* internal_default_instance() {
    return reinterpret_cast<const PlayerWorldSceneInfo*>(
               &_PlayerWorldSceneInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    171;

  void Swap(PlayerWorldSceneInfo* other);
  friend void swap(PlayerWorldSceneInfo& a, PlayerWorldSceneInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerWorldSceneInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerWorldSceneInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerWorldSceneInfo& from);
  void MergeFrom(const PlayerWorldSceneInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerWorldSceneInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 scene_tag_id_list = 8;
  int scene_tag_id_list_size() const;
  void clear_scene_tag_id_list();
  static const int kSceneTagIdListFieldNumber = 8;
  ::google::protobuf::uint32 scene_tag_id_list(int index) const;
  void set_scene_tag_id_list(int index, ::google::protobuf::uint32 value);
  void add_scene_tag_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      scene_tag_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_scene_tag_id_list();

  // uint32 scene_id = 11;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 11;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // bool is_locked = 12;
  void clear_is_locked();
  static const int kIsLockedFieldNumber = 12;
  bool is_locked() const;
  void set_is_locked(bool value);

  // @@protoc_insertion_point(class_scope:proto.PlayerWorldSceneInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > scene_tag_id_list_;
  mutable int _scene_tag_id_list_cached_byte_size_;
  ::google::protobuf::uint32 scene_id_;
  bool is_locked_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerWorldSceneInfoListNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerWorldSceneInfoListNotify) */ {
 public:
  PlayerWorldSceneInfoListNotify();
  virtual ~PlayerWorldSceneInfoListNotify();

  PlayerWorldSceneInfoListNotify(const PlayerWorldSceneInfoListNotify& from);

  inline PlayerWorldSceneInfoListNotify& operator=(const PlayerWorldSceneInfoListNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerWorldSceneInfoListNotify(PlayerWorldSceneInfoListNotify&& from) noexcept
    : PlayerWorldSceneInfoListNotify() {
    *this = ::std::move(from);
  }

  inline PlayerWorldSceneInfoListNotify& operator=(PlayerWorldSceneInfoListNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerWorldSceneInfoListNotify& default_instance();

  static inline const PlayerWorldSceneInfoListNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerWorldSceneInfoListNotify*>(
               &_PlayerWorldSceneInfoListNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    172;

  void Swap(PlayerWorldSceneInfoListNotify* other);
  friend void swap(PlayerWorldSceneInfoListNotify& a, PlayerWorldSceneInfoListNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerWorldSceneInfoListNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerWorldSceneInfoListNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerWorldSceneInfoListNotify& from);
  void MergeFrom(const PlayerWorldSceneInfoListNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerWorldSceneInfoListNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.PlayerWorldSceneInfo info_list = 5;
  int info_list_size() const;
  void clear_info_list();
  static const int kInfoListFieldNumber = 5;
  const ::proto::PlayerWorldSceneInfo& info_list(int index) const;
  ::proto::PlayerWorldSceneInfo* mutable_info_list(int index);
  ::proto::PlayerWorldSceneInfo* add_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::PlayerWorldSceneInfo >*
      mutable_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::PlayerWorldSceneInfo >&
      info_list() const;

  // @@protoc_insertion_point(class_scope:proto.PlayerWorldSceneInfoListNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::PlayerWorldSceneInfo > info_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LuaEnvironmentEffectNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.LuaEnvironmentEffectNotify) */ {
 public:
  LuaEnvironmentEffectNotify();
  virtual ~LuaEnvironmentEffectNotify();

  LuaEnvironmentEffectNotify(const LuaEnvironmentEffectNotify& from);

  inline LuaEnvironmentEffectNotify& operator=(const LuaEnvironmentEffectNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LuaEnvironmentEffectNotify(LuaEnvironmentEffectNotify&& from) noexcept
    : LuaEnvironmentEffectNotify() {
    *this = ::std::move(from);
  }

  inline LuaEnvironmentEffectNotify& operator=(LuaEnvironmentEffectNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LuaEnvironmentEffectNotify& default_instance();

  static inline const LuaEnvironmentEffectNotify* internal_default_instance() {
    return reinterpret_cast<const LuaEnvironmentEffectNotify*>(
               &_LuaEnvironmentEffectNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    173;

  void Swap(LuaEnvironmentEffectNotify* other);
  friend void swap(LuaEnvironmentEffectNotify& a, LuaEnvironmentEffectNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LuaEnvironmentEffectNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  LuaEnvironmentEffectNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LuaEnvironmentEffectNotify& from);
  void MergeFrom(const LuaEnvironmentEffectNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LuaEnvironmentEffectNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 int_param_list = 12;
  int int_param_list_size() const;
  void clear_int_param_list();
  static const int kIntParamListFieldNumber = 12;
  ::google::protobuf::int32 int_param_list(int index) const;
  void set_int_param_list(int index, ::google::protobuf::int32 value);
  void add_int_param_list(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      int_param_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_int_param_list();

  // repeated float float_param_list = 14;
  int float_param_list_size() const;
  void clear_float_param_list();
  static const int kFloatParamListFieldNumber = 14;
  float float_param_list(int index) const;
  void set_float_param_list(int index, float value);
  void add_float_param_list(float value);
  const ::google::protobuf::RepeatedField< float >&
      float_param_list() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_float_param_list();

  // string effect_alias = 3;
  void clear_effect_alias();
  static const int kEffectAliasFieldNumber = 3;
  const ::std::string& effect_alias() const;
  void set_effect_alias(const ::std::string& value);
  #if LANG_CXX11
  void set_effect_alias(::std::string&& value);
  #endif
  void set_effect_alias(const char* value);
  void set_effect_alias(const char* value, size_t size);
  ::std::string* mutable_effect_alias();
  ::std::string* release_effect_alias();
  void set_allocated_effect_alias(::std::string* effect_alias);

  // uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.LuaEnvironmentEffectNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > int_param_list_;
  mutable int _int_param_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > float_param_list_;
  mutable int _float_param_list_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr effect_alias_;
  ::google::protobuf::uint32 type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientLoadingCostumeVerificationNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClientLoadingCostumeVerificationNotify) */ {
 public:
  ClientLoadingCostumeVerificationNotify();
  virtual ~ClientLoadingCostumeVerificationNotify();

  ClientLoadingCostumeVerificationNotify(const ClientLoadingCostumeVerificationNotify& from);

  inline ClientLoadingCostumeVerificationNotify& operator=(const ClientLoadingCostumeVerificationNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientLoadingCostumeVerificationNotify(ClientLoadingCostumeVerificationNotify&& from) noexcept
    : ClientLoadingCostumeVerificationNotify() {
    *this = ::std::move(from);
  }

  inline ClientLoadingCostumeVerificationNotify& operator=(ClientLoadingCostumeVerificationNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientLoadingCostumeVerificationNotify& default_instance();

  static inline const ClientLoadingCostumeVerificationNotify* internal_default_instance() {
    return reinterpret_cast<const ClientLoadingCostumeVerificationNotify*>(
               &_ClientLoadingCostumeVerificationNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    174;

  void Swap(ClientLoadingCostumeVerificationNotify* other);
  friend void swap(ClientLoadingCostumeVerificationNotify& a, ClientLoadingCostumeVerificationNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientLoadingCostumeVerificationNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientLoadingCostumeVerificationNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientLoadingCostumeVerificationNotify& from);
  void MergeFrom(const ClientLoadingCostumeVerificationNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientLoadingCostumeVerificationNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 prefab_hash = 2;
  void clear_prefab_hash();
  static const int kPrefabHashFieldNumber = 2;
  ::google::protobuf::uint64 prefab_hash() const;
  void set_prefab_hash(::google::protobuf::uint64 value);

  // uint32 costume_id = 9;
  void clear_costume_id();
  static const int kCostumeIdFieldNumber = 9;
  ::google::protobuf::uint32 costume_id() const;
  void set_costume_id(::google::protobuf::uint32 value);

  // uint64 guid = 14;
  void clear_guid();
  static const int kGuidFieldNumber = 14;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.ClientLoadingCostumeVerificationNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 prefab_hash_;
  ::google::protobuf::uint32 costume_id_;
  ::google::protobuf::uint64 guid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShowClientGuideNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ShowClientGuideNotify) */ {
 public:
  ShowClientGuideNotify();
  virtual ~ShowClientGuideNotify();

  ShowClientGuideNotify(const ShowClientGuideNotify& from);

  inline ShowClientGuideNotify& operator=(const ShowClientGuideNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShowClientGuideNotify(ShowClientGuideNotify&& from) noexcept
    : ShowClientGuideNotify() {
    *this = ::std::move(from);
  }

  inline ShowClientGuideNotify& operator=(ShowClientGuideNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShowClientGuideNotify& default_instance();

  static inline const ShowClientGuideNotify* internal_default_instance() {
    return reinterpret_cast<const ShowClientGuideNotify*>(
               &_ShowClientGuideNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    175;

  void Swap(ShowClientGuideNotify* other);
  friend void swap(ShowClientGuideNotify& a, ShowClientGuideNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShowClientGuideNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ShowClientGuideNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShowClientGuideNotify& from);
  void MergeFrom(const ShowClientGuideNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShowClientGuideNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string guide_name = 7;
  void clear_guide_name();
  static const int kGuideNameFieldNumber = 7;
  const ::std::string& guide_name() const;
  void set_guide_name(const ::std::string& value);
  #if LANG_CXX11
  void set_guide_name(::std::string&& value);
  #endif
  void set_guide_name(const char* value);
  void set_guide_name(const char* value, size_t size);
  ::std::string* mutable_guide_name();
  ::std::string* release_guide_name();
  void set_allocated_guide_name(::std::string* guide_name);

  // @@protoc_insertion_point(class_scope:proto.ShowClientGuideNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr guide_name_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShowClientTutorialNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ShowClientTutorialNotify) */ {
 public:
  ShowClientTutorialNotify();
  virtual ~ShowClientTutorialNotify();

  ShowClientTutorialNotify(const ShowClientTutorialNotify& from);

  inline ShowClientTutorialNotify& operator=(const ShowClientTutorialNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShowClientTutorialNotify(ShowClientTutorialNotify&& from) noexcept
    : ShowClientTutorialNotify() {
    *this = ::std::move(from);
  }

  inline ShowClientTutorialNotify& operator=(ShowClientTutorialNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShowClientTutorialNotify& default_instance();

  static inline const ShowClientTutorialNotify* internal_default_instance() {
    return reinterpret_cast<const ShowClientTutorialNotify*>(
               &_ShowClientTutorialNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    176;

  void Swap(ShowClientTutorialNotify* other);
  friend void swap(ShowClientTutorialNotify& a, ShowClientTutorialNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShowClientTutorialNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ShowClientTutorialNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShowClientTutorialNotify& from);
  void MergeFrom(const ShowClientTutorialNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShowClientTutorialNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 tutorial_id = 2;
  void clear_tutorial_id();
  static const int kTutorialIdFieldNumber = 2;
  ::google::protobuf::uint32 tutorial_id() const;
  void set_tutorial_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ShowClientTutorialNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 tutorial_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetMapAreaReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetMapAreaReq) */ {
 public:
  GetMapAreaReq();
  virtual ~GetMapAreaReq();

  GetMapAreaReq(const GetMapAreaReq& from);

  inline GetMapAreaReq& operator=(const GetMapAreaReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetMapAreaReq(GetMapAreaReq&& from) noexcept
    : GetMapAreaReq() {
    *this = ::std::move(from);
  }

  inline GetMapAreaReq& operator=(GetMapAreaReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMapAreaReq& default_instance();

  static inline const GetMapAreaReq* internal_default_instance() {
    return reinterpret_cast<const GetMapAreaReq*>(
               &_GetMapAreaReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    177;

  void Swap(GetMapAreaReq* other);
  friend void swap(GetMapAreaReq& a, GetMapAreaReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetMapAreaReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetMapAreaReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetMapAreaReq& from);
  void MergeFrom(const GetMapAreaReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetMapAreaReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.GetMapAreaReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetMapAreaRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetMapAreaRsp) */ {
 public:
  GetMapAreaRsp();
  virtual ~GetMapAreaRsp();

  GetMapAreaRsp(const GetMapAreaRsp& from);

  inline GetMapAreaRsp& operator=(const GetMapAreaRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetMapAreaRsp(GetMapAreaRsp&& from) noexcept
    : GetMapAreaRsp() {
    *this = ::std::move(from);
  }

  inline GetMapAreaRsp& operator=(GetMapAreaRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMapAreaRsp& default_instance();

  static inline const GetMapAreaRsp* internal_default_instance() {
    return reinterpret_cast<const GetMapAreaRsp*>(
               &_GetMapAreaRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    178;

  void Swap(GetMapAreaRsp* other);
  friend void swap(GetMapAreaRsp& a, GetMapAreaRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetMapAreaRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetMapAreaRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetMapAreaRsp& from);
  void MergeFrom(const GetMapAreaRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetMapAreaRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.MapAreaInfo map_area_info_list = 9;
  int map_area_info_list_size() const;
  void clear_map_area_info_list();
  static const int kMapAreaInfoListFieldNumber = 9;
  const ::proto::MapAreaInfo& map_area_info_list(int index) const;
  ::proto::MapAreaInfo* mutable_map_area_info_list(int index);
  ::proto::MapAreaInfo* add_map_area_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::MapAreaInfo >*
      mutable_map_area_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::MapAreaInfo >&
      map_area_info_list() const;

  // int32 retcode = 14;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 14;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetMapAreaRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::MapAreaInfo > map_area_info_list_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MapAreaChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MapAreaChangeNotify) */ {
 public:
  MapAreaChangeNotify();
  virtual ~MapAreaChangeNotify();

  MapAreaChangeNotify(const MapAreaChangeNotify& from);

  inline MapAreaChangeNotify& operator=(const MapAreaChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MapAreaChangeNotify(MapAreaChangeNotify&& from) noexcept
    : MapAreaChangeNotify() {
    *this = ::std::move(from);
  }

  inline MapAreaChangeNotify& operator=(MapAreaChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MapAreaChangeNotify& default_instance();

  static inline const MapAreaChangeNotify* internal_default_instance() {
    return reinterpret_cast<const MapAreaChangeNotify*>(
               &_MapAreaChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    179;

  void Swap(MapAreaChangeNotify* other);
  friend void swap(MapAreaChangeNotify& a, MapAreaChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MapAreaChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MapAreaChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MapAreaChangeNotify& from);
  void MergeFrom(const MapAreaChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MapAreaChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.MapAreaInfo map_area_info_list = 3;
  int map_area_info_list_size() const;
  void clear_map_area_info_list();
  static const int kMapAreaInfoListFieldNumber = 3;
  const ::proto::MapAreaInfo& map_area_info_list(int index) const;
  ::proto::MapAreaInfo* mutable_map_area_info_list(int index);
  ::proto::MapAreaInfo* add_map_area_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::MapAreaInfo >*
      mutable_map_area_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::MapAreaInfo >&
      map_area_info_list() const;

  // @@protoc_insertion_point(class_scope:proto.MapAreaChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::MapAreaInfo > map_area_info_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LeaveWorldNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.LeaveWorldNotify) */ {
 public:
  LeaveWorldNotify();
  virtual ~LeaveWorldNotify();

  LeaveWorldNotify(const LeaveWorldNotify& from);

  inline LeaveWorldNotify& operator=(const LeaveWorldNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LeaveWorldNotify(LeaveWorldNotify&& from) noexcept
    : LeaveWorldNotify() {
    *this = ::std::move(from);
  }

  inline LeaveWorldNotify& operator=(LeaveWorldNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveWorldNotify& default_instance();

  static inline const LeaveWorldNotify* internal_default_instance() {
    return reinterpret_cast<const LeaveWorldNotify*>(
               &_LeaveWorldNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    180;

  void Swap(LeaveWorldNotify* other);
  friend void swap(LeaveWorldNotify& a, LeaveWorldNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LeaveWorldNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  LeaveWorldNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LeaveWorldNotify& from);
  void MergeFrom(const LeaveWorldNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LeaveWorldNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.LeaveWorldNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuestBeginEnterSceneNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GuestBeginEnterSceneNotify) */ {
 public:
  GuestBeginEnterSceneNotify();
  virtual ~GuestBeginEnterSceneNotify();

  GuestBeginEnterSceneNotify(const GuestBeginEnterSceneNotify& from);

  inline GuestBeginEnterSceneNotify& operator=(const GuestBeginEnterSceneNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuestBeginEnterSceneNotify(GuestBeginEnterSceneNotify&& from) noexcept
    : GuestBeginEnterSceneNotify() {
    *this = ::std::move(from);
  }

  inline GuestBeginEnterSceneNotify& operator=(GuestBeginEnterSceneNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GuestBeginEnterSceneNotify& default_instance();

  static inline const GuestBeginEnterSceneNotify* internal_default_instance() {
    return reinterpret_cast<const GuestBeginEnterSceneNotify*>(
               &_GuestBeginEnterSceneNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    181;

  void Swap(GuestBeginEnterSceneNotify* other);
  friend void swap(GuestBeginEnterSceneNotify& a, GuestBeginEnterSceneNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuestBeginEnterSceneNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GuestBeginEnterSceneNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuestBeginEnterSceneNotify& from);
  void MergeFrom(const GuestBeginEnterSceneNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuestBeginEnterSceneNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 scene_id = 8;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 8;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 uid = 15;
  void clear_uid();
  static const int kUidFieldNumber = 15;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GuestBeginEnterSceneNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuestPostEnterSceneNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GuestPostEnterSceneNotify) */ {
 public:
  GuestPostEnterSceneNotify();
  virtual ~GuestPostEnterSceneNotify();

  GuestPostEnterSceneNotify(const GuestPostEnterSceneNotify& from);

  inline GuestPostEnterSceneNotify& operator=(const GuestPostEnterSceneNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuestPostEnterSceneNotify(GuestPostEnterSceneNotify&& from) noexcept
    : GuestPostEnterSceneNotify() {
    *this = ::std::move(from);
  }

  inline GuestPostEnterSceneNotify& operator=(GuestPostEnterSceneNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GuestPostEnterSceneNotify& default_instance();

  static inline const GuestPostEnterSceneNotify* internal_default_instance() {
    return reinterpret_cast<const GuestPostEnterSceneNotify*>(
               &_GuestPostEnterSceneNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    182;

  void Swap(GuestPostEnterSceneNotify* other);
  friend void swap(GuestPostEnterSceneNotify& a, GuestPostEnterSceneNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuestPostEnterSceneNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GuestPostEnterSceneNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuestPostEnterSceneNotify& from);
  void MergeFrom(const GuestPostEnterSceneNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuestPostEnterSceneNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 uid = 4;
  void clear_uid();
  static const int kUidFieldNumber = 4;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 scene_id = 5;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 5;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GuestPostEnterSceneNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LevelTagDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.LevelTagDataNotify) */ {
 public:
  LevelTagDataNotify();
  virtual ~LevelTagDataNotify();

  LevelTagDataNotify(const LevelTagDataNotify& from);

  inline LevelTagDataNotify& operator=(const LevelTagDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LevelTagDataNotify(LevelTagDataNotify&& from) noexcept
    : LevelTagDataNotify() {
    *this = ::std::move(from);
  }

  inline LevelTagDataNotify& operator=(LevelTagDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LevelTagDataNotify& default_instance();

  static inline const LevelTagDataNotify* internal_default_instance() {
    return reinterpret_cast<const LevelTagDataNotify*>(
               &_LevelTagDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    183;

  void Swap(LevelTagDataNotify* other);
  friend void swap(LevelTagDataNotify& a, LevelTagDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LevelTagDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  LevelTagDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LevelTagDataNotify& from);
  void MergeFrom(const LevelTagDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LevelTagDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 level_tag_id_list = 9;
  int level_tag_id_list_size() const;
  void clear_level_tag_id_list();
  static const int kLevelTagIdListFieldNumber = 9;
  ::google::protobuf::uint32 level_tag_id_list(int index) const;
  void set_level_tag_id_list(int index, ::google::protobuf::uint32 value);
  void add_level_tag_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      level_tag_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_level_tag_id_list();

  // @@protoc_insertion_point(class_scope:proto.LevelTagDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > level_tag_id_list_;
  mutable int _level_tag_id_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StopReminderNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.StopReminderNotify) */ {
 public:
  StopReminderNotify();
  virtual ~StopReminderNotify();

  StopReminderNotify(const StopReminderNotify& from);

  inline StopReminderNotify& operator=(const StopReminderNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StopReminderNotify(StopReminderNotify&& from) noexcept
    : StopReminderNotify() {
    *this = ::std::move(from);
  }

  inline StopReminderNotify& operator=(StopReminderNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StopReminderNotify& default_instance();

  static inline const StopReminderNotify* internal_default_instance() {
    return reinterpret_cast<const StopReminderNotify*>(
               &_StopReminderNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    184;

  void Swap(StopReminderNotify* other);
  friend void swap(StopReminderNotify& a, StopReminderNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StopReminderNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  StopReminderNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StopReminderNotify& from);
  void MergeFrom(const StopReminderNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StopReminderNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 reminder_id = 15;
  void clear_reminder_id();
  static const int kReminderIdFieldNumber = 15;
  ::google::protobuf::uint32 reminder_id() const;
  void set_reminder_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.StopReminderNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 reminder_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AreaPlayInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AreaPlayInfoNotify) */ {
 public:
  AreaPlayInfoNotify();
  virtual ~AreaPlayInfoNotify();

  AreaPlayInfoNotify(const AreaPlayInfoNotify& from);

  inline AreaPlayInfoNotify& operator=(const AreaPlayInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AreaPlayInfoNotify(AreaPlayInfoNotify&& from) noexcept
    : AreaPlayInfoNotify() {
    *this = ::std::move(from);
  }

  inline AreaPlayInfoNotify& operator=(AreaPlayInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AreaPlayInfoNotify& default_instance();

  static inline const AreaPlayInfoNotify* internal_default_instance() {
    return reinterpret_cast<const AreaPlayInfoNotify*>(
               &_AreaPlayInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    185;

  void Swap(AreaPlayInfoNotify* other);
  friend void swap(AreaPlayInfoNotify& a, AreaPlayInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AreaPlayInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AreaPlayInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AreaPlayInfoNotify& from);
  void MergeFrom(const AreaPlayInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AreaPlayInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.AreaPlayType area_play_type = 11;
  void clear_area_play_type();
  static const int kAreaPlayTypeFieldNumber = 11;
  ::proto::AreaPlayType area_play_type() const;
  void set_area_play_type(::proto::AreaPlayType value);

  // uint32 detail_play_type = 14;
  void clear_detail_play_type();
  static const int kDetailPlayTypeFieldNumber = 14;
  ::google::protobuf::uint32 detail_play_type() const;
  void set_detail_play_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AreaPlayInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int area_play_type_;
  ::google::protobuf::uint32 detail_play_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckGroupReplacedReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CheckGroupReplacedReq) */ {
 public:
  CheckGroupReplacedReq();
  virtual ~CheckGroupReplacedReq();

  CheckGroupReplacedReq(const CheckGroupReplacedReq& from);

  inline CheckGroupReplacedReq& operator=(const CheckGroupReplacedReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckGroupReplacedReq(CheckGroupReplacedReq&& from) noexcept
    : CheckGroupReplacedReq() {
    *this = ::std::move(from);
  }

  inline CheckGroupReplacedReq& operator=(CheckGroupReplacedReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckGroupReplacedReq& default_instance();

  static inline const CheckGroupReplacedReq* internal_default_instance() {
    return reinterpret_cast<const CheckGroupReplacedReq*>(
               &_CheckGroupReplacedReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    186;

  void Swap(CheckGroupReplacedReq* other);
  friend void swap(CheckGroupReplacedReq& a, CheckGroupReplacedReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckGroupReplacedReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckGroupReplacedReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckGroupReplacedReq& from);
  void MergeFrom(const CheckGroupReplacedReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckGroupReplacedReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 group_id_list = 7;
  int group_id_list_size() const;
  void clear_group_id_list();
  static const int kGroupIdListFieldNumber = 7;
  ::google::protobuf::uint32 group_id_list(int index) const;
  void set_group_id_list(int index, ::google::protobuf::uint32 value);
  void add_group_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      group_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_group_id_list();

  // @@protoc_insertion_point(class_scope:proto.CheckGroupReplacedReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > group_id_list_;
  mutable int _group_id_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckGroupReplacedRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CheckGroupReplacedRsp) */ {
 public:
  CheckGroupReplacedRsp();
  virtual ~CheckGroupReplacedRsp();

  CheckGroupReplacedRsp(const CheckGroupReplacedRsp& from);

  inline CheckGroupReplacedRsp& operator=(const CheckGroupReplacedRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckGroupReplacedRsp(CheckGroupReplacedRsp&& from) noexcept
    : CheckGroupReplacedRsp() {
    *this = ::std::move(from);
  }

  inline CheckGroupReplacedRsp& operator=(CheckGroupReplacedRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckGroupReplacedRsp& default_instance();

  static inline const CheckGroupReplacedRsp* internal_default_instance() {
    return reinterpret_cast<const CheckGroupReplacedRsp*>(
               &_CheckGroupReplacedRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    187;

  void Swap(CheckGroupReplacedRsp* other);
  friend void swap(CheckGroupReplacedRsp& a, CheckGroupReplacedRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckGroupReplacedRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckGroupReplacedRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckGroupReplacedRsp& from);
  void MergeFrom(const CheckGroupReplacedRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckGroupReplacedRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 replaced_group_id_list = 6;
  int replaced_group_id_list_size() const;
  void clear_replaced_group_id_list();
  static const int kReplacedGroupIdListFieldNumber = 6;
  ::google::protobuf::uint32 replaced_group_id_list(int index) const;
  void set_replaced_group_id_list(int index, ::google::protobuf::uint32 value);
  void add_replaced_group_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      replaced_group_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_replaced_group_id_list();

  // int32 retcode = 4;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 4;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.CheckGroupReplacedRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > replaced_group_id_list_;
  mutable int _replaced_group_id_list_cached_byte_size_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeathZoneObserveNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DeathZoneObserveNotify) */ {
 public:
  DeathZoneObserveNotify();
  virtual ~DeathZoneObserveNotify();

  DeathZoneObserveNotify(const DeathZoneObserveNotify& from);

  inline DeathZoneObserveNotify& operator=(const DeathZoneObserveNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeathZoneObserveNotify(DeathZoneObserveNotify&& from) noexcept
    : DeathZoneObserveNotify() {
    *this = ::std::move(from);
  }

  inline DeathZoneObserveNotify& operator=(DeathZoneObserveNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeathZoneObserveNotify& default_instance();

  static inline const DeathZoneObserveNotify* internal_default_instance() {
    return reinterpret_cast<const DeathZoneObserveNotify*>(
               &_DeathZoneObserveNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    188;

  void Swap(DeathZoneObserveNotify* other);
  friend void swap(DeathZoneObserveNotify& a, DeathZoneObserveNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeathZoneObserveNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  DeathZoneObserveNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeathZoneObserveNotify& from);
  void MergeFrom(const DeathZoneObserveNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeathZoneObserveNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 source_entity_id = 12;
  void clear_source_entity_id();
  static const int kSourceEntityIdFieldNumber = 12;
  ::google::protobuf::uint32 source_entity_id() const;
  void set_source_entity_id(::google::protobuf::uint32 value);

  // uint32 target_entity_id = 14;
  void clear_target_entity_id();
  static const int kTargetEntityIdFieldNumber = 14;
  ::google::protobuf::uint32 target_entity_id() const;
  void set_target_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DeathZoneObserveNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 source_entity_id_;
  ::google::protobuf::uint32 target_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HitTreeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HitTreeInfo) */ {
 public:
  HitTreeInfo();
  virtual ~HitTreeInfo();

  HitTreeInfo(const HitTreeInfo& from);

  inline HitTreeInfo& operator=(const HitTreeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HitTreeInfo(HitTreeInfo&& from) noexcept
    : HitTreeInfo() {
    *this = ::std::move(from);
  }

  inline HitTreeInfo& operator=(HitTreeInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HitTreeInfo& default_instance();

  static inline const HitTreeInfo* internal_default_instance() {
    return reinterpret_cast<const HitTreeInfo*>(
               &_HitTreeInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    189;

  void Swap(HitTreeInfo* other);
  friend void swap(HitTreeInfo& a, HitTreeInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HitTreeInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  HitTreeInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HitTreeInfo& from);
  void MergeFrom(const HitTreeInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HitTreeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector tree_pos = 12;
  bool has_tree_pos() const;
  void clear_tree_pos();
  static const int kTreePosFieldNumber = 12;
  const ::proto::Vector& tree_pos() const;
  ::proto::Vector* mutable_tree_pos();
  ::proto::Vector* release_tree_pos();
  void set_allocated_tree_pos(::proto::Vector* tree_pos);

  // uint32 tree_type = 8;
  void clear_tree_type();
  static const int kTreeTypeFieldNumber = 8;
  ::google::protobuf::uint32 tree_type() const;
  void set_tree_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HitTreeInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* tree_pos_;
  ::google::protobuf::uint32 tree_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorldChestOpenNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WorldChestOpenNotify) */ {
 public:
  WorldChestOpenNotify();
  virtual ~WorldChestOpenNotify();

  WorldChestOpenNotify(const WorldChestOpenNotify& from);

  inline WorldChestOpenNotify& operator=(const WorldChestOpenNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldChestOpenNotify(WorldChestOpenNotify&& from) noexcept
    : WorldChestOpenNotify() {
    *this = ::std::move(from);
  }

  inline WorldChestOpenNotify& operator=(WorldChestOpenNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldChestOpenNotify& default_instance();

  static inline const WorldChestOpenNotify* internal_default_instance() {
    return reinterpret_cast<const WorldChestOpenNotify*>(
               &_WorldChestOpenNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    190;

  void Swap(WorldChestOpenNotify* other);
  friend void swap(WorldChestOpenNotify& a, WorldChestOpenNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldChestOpenNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  WorldChestOpenNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorldChestOpenNotify& from);
  void MergeFrom(const WorldChestOpenNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorldChestOpenNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 config_id = 12;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 12;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // uint32 group_id = 6;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 6;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // uint32 scene_id = 9;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 9;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.WorldChestOpenNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 config_id_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WidgetQuickHitTreeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WidgetQuickHitTreeReq) */ {
 public:
  WidgetQuickHitTreeReq();
  virtual ~WidgetQuickHitTreeReq();

  WidgetQuickHitTreeReq(const WidgetQuickHitTreeReq& from);

  inline WidgetQuickHitTreeReq& operator=(const WidgetQuickHitTreeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WidgetQuickHitTreeReq(WidgetQuickHitTreeReq&& from) noexcept
    : WidgetQuickHitTreeReq() {
    *this = ::std::move(from);
  }

  inline WidgetQuickHitTreeReq& operator=(WidgetQuickHitTreeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WidgetQuickHitTreeReq& default_instance();

  static inline const WidgetQuickHitTreeReq* internal_default_instance() {
    return reinterpret_cast<const WidgetQuickHitTreeReq*>(
               &_WidgetQuickHitTreeReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    191;

  void Swap(WidgetQuickHitTreeReq* other);
  friend void swap(WidgetQuickHitTreeReq& a, WidgetQuickHitTreeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WidgetQuickHitTreeReq* New() const PROTOBUF_FINAL { return New(NULL); }

  WidgetQuickHitTreeReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WidgetQuickHitTreeReq& from);
  void MergeFrom(const WidgetQuickHitTreeReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WidgetQuickHitTreeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HitTreeInfo hit_tree_info_list = 5;
  int hit_tree_info_list_size() const;
  void clear_hit_tree_info_list();
  static const int kHitTreeInfoListFieldNumber = 5;
  const ::proto::HitTreeInfo& hit_tree_info_list(int index) const;
  ::proto::HitTreeInfo* mutable_hit_tree_info_list(int index);
  ::proto::HitTreeInfo* add_hit_tree_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HitTreeInfo >*
      mutable_hit_tree_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HitTreeInfo >&
      hit_tree_info_list() const;

  // @@protoc_insertion_point(class_scope:proto.WidgetQuickHitTreeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HitTreeInfo > hit_tree_info_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WidgetQuickHitTreeRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WidgetQuickHitTreeRsp) */ {
 public:
  WidgetQuickHitTreeRsp();
  virtual ~WidgetQuickHitTreeRsp();

  WidgetQuickHitTreeRsp(const WidgetQuickHitTreeRsp& from);

  inline WidgetQuickHitTreeRsp& operator=(const WidgetQuickHitTreeRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WidgetQuickHitTreeRsp(WidgetQuickHitTreeRsp&& from) noexcept
    : WidgetQuickHitTreeRsp() {
    *this = ::std::move(from);
  }

  inline WidgetQuickHitTreeRsp& operator=(WidgetQuickHitTreeRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WidgetQuickHitTreeRsp& default_instance();

  static inline const WidgetQuickHitTreeRsp* internal_default_instance() {
    return reinterpret_cast<const WidgetQuickHitTreeRsp*>(
               &_WidgetQuickHitTreeRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    192;

  void Swap(WidgetQuickHitTreeRsp* other);
  friend void swap(WidgetQuickHitTreeRsp& a, WidgetQuickHitTreeRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WidgetQuickHitTreeRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  WidgetQuickHitTreeRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WidgetQuickHitTreeRsp& from);
  void MergeFrom(const WidgetQuickHitTreeRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WidgetQuickHitTreeRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 2;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 2;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.WidgetQuickHitTreeRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BeginCameraSceneLookWithTemplateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BeginCameraSceneLookWithTemplateNotify) */ {
 public:
  BeginCameraSceneLookWithTemplateNotify();
  virtual ~BeginCameraSceneLookWithTemplateNotify();

  BeginCameraSceneLookWithTemplateNotify(const BeginCameraSceneLookWithTemplateNotify& from);

  inline BeginCameraSceneLookWithTemplateNotify& operator=(const BeginCameraSceneLookWithTemplateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BeginCameraSceneLookWithTemplateNotify(BeginCameraSceneLookWithTemplateNotify&& from) noexcept
    : BeginCameraSceneLookWithTemplateNotify() {
    *this = ::std::move(from);
  }

  inline BeginCameraSceneLookWithTemplateNotify& operator=(BeginCameraSceneLookWithTemplateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BeginCameraSceneLookWithTemplateNotify& default_instance();

  static inline const BeginCameraSceneLookWithTemplateNotify* internal_default_instance() {
    return reinterpret_cast<const BeginCameraSceneLookWithTemplateNotify*>(
               &_BeginCameraSceneLookWithTemplateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    193;

  void Swap(BeginCameraSceneLookWithTemplateNotify* other);
  friend void swap(BeginCameraSceneLookWithTemplateNotify& a, BeginCameraSceneLookWithTemplateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BeginCameraSceneLookWithTemplateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  BeginCameraSceneLookWithTemplateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BeginCameraSceneLookWithTemplateNotify& from);
  void MergeFrom(const BeginCameraSceneLookWithTemplateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BeginCameraSceneLookWithTemplateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BeginCameraSceneLookWithTemplateNotify_FollowType FollowType;
  static const FollowType FOLLOW_TYPE_INIT_FOLLOW_POS =
    BeginCameraSceneLookWithTemplateNotify_FollowType_FOLLOW_TYPE_INIT_FOLLOW_POS;
  static const FollowType FOLLOW_TYPE_SET_FOLLOW_POS =
    BeginCameraSceneLookWithTemplateNotify_FollowType_FOLLOW_TYPE_SET_FOLLOW_POS;
  static const FollowType FOLLOW_TYPE_SET_ABS_FOLLOW_POS =
    BeginCameraSceneLookWithTemplateNotify_FollowType_FOLLOW_TYPE_SET_ABS_FOLLOW_POS;
  static inline bool FollowType_IsValid(int value) {
    return BeginCameraSceneLookWithTemplateNotify_FollowType_IsValid(value);
  }
  static const FollowType FollowType_MIN =
    BeginCameraSceneLookWithTemplateNotify_FollowType_FollowType_MIN;
  static const FollowType FollowType_MAX =
    BeginCameraSceneLookWithTemplateNotify_FollowType_FollowType_MAX;
  static const int FollowType_ARRAYSIZE =
    BeginCameraSceneLookWithTemplateNotify_FollowType_FollowType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  FollowType_descriptor() {
    return BeginCameraSceneLookWithTemplateNotify_FollowType_descriptor();
  }
  static inline const ::std::string& FollowType_Name(FollowType value) {
    return BeginCameraSceneLookWithTemplateNotify_FollowType_Name(value);
  }
  static inline bool FollowType_Parse(const ::std::string& name,
      FollowType* value) {
    return BeginCameraSceneLookWithTemplateNotify_FollowType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated string other_params = 13;
  int other_params_size() const;
  void clear_other_params();
  static const int kOtherParamsFieldNumber = 13;
  const ::std::string& other_params(int index) const;
  ::std::string* mutable_other_params(int index);
  void set_other_params(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_other_params(int index, ::std::string&& value);
  #endif
  void set_other_params(int index, const char* value);
  void set_other_params(int index, const char* value, size_t size);
  ::std::string* add_other_params();
  void add_other_params(const ::std::string& value);
  #if LANG_CXX11
  void add_other_params(::std::string&& value);
  #endif
  void add_other_params(const char* value);
  void add_other_params(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& other_params() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_other_params();

  // .proto.Vector follow_pos = 2;
  bool has_follow_pos() const;
  void clear_follow_pos();
  static const int kFollowPosFieldNumber = 2;
  const ::proto::Vector& follow_pos() const;
  ::proto::Vector* mutable_follow_pos();
  ::proto::Vector* release_follow_pos();
  void set_allocated_follow_pos(::proto::Vector* follow_pos);

  // .proto.Vector look_pos = 8;
  bool has_look_pos() const;
  void clear_look_pos();
  static const int kLookPosFieldNumber = 8;
  const ::proto::Vector& look_pos() const;
  ::proto::Vector* mutable_look_pos();
  ::proto::Vector* release_look_pos();
  void set_allocated_look_pos(::proto::Vector* look_pos);

  // uint32 template_id = 5;
  void clear_template_id();
  static const int kTemplateIdFieldNumber = 5;
  ::google::protobuf::uint32 template_id() const;
  void set_template_id(::google::protobuf::uint32 value);

  // .proto.BeginCameraSceneLookWithTemplateNotify.FollowType follow_type = 9;
  void clear_follow_type();
  static const int kFollowTypeFieldNumber = 9;
  ::proto::BeginCameraSceneLookWithTemplateNotify_FollowType follow_type() const;
  void set_follow_type(::proto::BeginCameraSceneLookWithTemplateNotify_FollowType value);

  // uint32 entity_id = 12;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 12;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BeginCameraSceneLookWithTemplateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> other_params_;
  ::proto::Vector* follow_pos_;
  ::proto::Vector* look_pos_;
  ::google::protobuf::uint32 template_id_;
  int follow_type_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RefreshEntityAuthNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RefreshEntityAuthNotify) */ {
 public:
  RefreshEntityAuthNotify();
  virtual ~RefreshEntityAuthNotify();

  RefreshEntityAuthNotify(const RefreshEntityAuthNotify& from);

  inline RefreshEntityAuthNotify& operator=(const RefreshEntityAuthNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RefreshEntityAuthNotify(RefreshEntityAuthNotify&& from) noexcept
    : RefreshEntityAuthNotify() {
    *this = ::std::move(from);
  }

  inline RefreshEntityAuthNotify& operator=(RefreshEntityAuthNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RefreshEntityAuthNotify& default_instance();

  static inline const RefreshEntityAuthNotify* internal_default_instance() {
    return reinterpret_cast<const RefreshEntityAuthNotify*>(
               &_RefreshEntityAuthNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    194;

  void Swap(RefreshEntityAuthNotify* other);
  friend void swap(RefreshEntityAuthNotify& a, RefreshEntityAuthNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RefreshEntityAuthNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  RefreshEntityAuthNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RefreshEntityAuthNotify& from);
  void MergeFrom(const RefreshEntityAuthNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RefreshEntityAuthNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 entity_id_list = 7;
  int entity_id_list_size() const;
  void clear_entity_id_list();
  static const int kEntityIdListFieldNumber = 7;
  ::google::protobuf::uint32 entity_id_list(int index) const;
  void set_entity_id_list(int index, ::google::protobuf::uint32 value);
  void add_entity_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      entity_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_entity_id_list();

  // @@protoc_insertion_point(class_scope:proto.RefreshEntityAuthNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > entity_id_list_;
  mutable int _entity_id_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScenePlayerBackgroundAvatarRefreshNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ScenePlayerBackgroundAvatarRefreshNotify) */ {
 public:
  ScenePlayerBackgroundAvatarRefreshNotify();
  virtual ~ScenePlayerBackgroundAvatarRefreshNotify();

  ScenePlayerBackgroundAvatarRefreshNotify(const ScenePlayerBackgroundAvatarRefreshNotify& from);

  inline ScenePlayerBackgroundAvatarRefreshNotify& operator=(const ScenePlayerBackgroundAvatarRefreshNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScenePlayerBackgroundAvatarRefreshNotify(ScenePlayerBackgroundAvatarRefreshNotify&& from) noexcept
    : ScenePlayerBackgroundAvatarRefreshNotify() {
    *this = ::std::move(from);
  }

  inline ScenePlayerBackgroundAvatarRefreshNotify& operator=(ScenePlayerBackgroundAvatarRefreshNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenePlayerBackgroundAvatarRefreshNotify& default_instance();

  static inline const ScenePlayerBackgroundAvatarRefreshNotify* internal_default_instance() {
    return reinterpret_cast<const ScenePlayerBackgroundAvatarRefreshNotify*>(
               &_ScenePlayerBackgroundAvatarRefreshNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    195;

  void Swap(ScenePlayerBackgroundAvatarRefreshNotify* other);
  friend void swap(ScenePlayerBackgroundAvatarRefreshNotify& a, ScenePlayerBackgroundAvatarRefreshNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScenePlayerBackgroundAvatarRefreshNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ScenePlayerBackgroundAvatarRefreshNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScenePlayerBackgroundAvatarRefreshNotify& from);
  void MergeFrom(const ScenePlayerBackgroundAvatarRefreshNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScenePlayerBackgroundAvatarRefreshNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.SceneEntityInfo entity_list = 4;
  int entity_list_size() const;
  void clear_entity_list();
  static const int kEntityListFieldNumber = 4;
  const ::proto::SceneEntityInfo& entity_list(int index) const;
  ::proto::SceneEntityInfo* mutable_entity_list(int index);
  ::proto::SceneEntityInfo* add_entity_list();
  ::google::protobuf::RepeatedPtrField< ::proto::SceneEntityInfo >*
      mutable_entity_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::SceneEntityInfo >&
      entity_list() const;

  // .proto.VisionType appear_type = 8;
  void clear_appear_type();
  static const int kAppearTypeFieldNumber = 8;
  ::proto::VisionType appear_type() const;
  void set_appear_type(::proto::VisionType value);

  // uint32 param = 9;
  void clear_param();
  static const int kParamFieldNumber = 9;
  ::google::protobuf::uint32 param() const;
  void set_param(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ScenePlayerBackgroundAvatarRefreshNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::SceneEntityInfo > entity_list_;
  int appear_type_;
  ::google::protobuf::uint32 param_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PlayerEnterSceneNotify

// uint32 prev_scene_id = 6;
inline void PlayerEnterSceneNotify::clear_prev_scene_id() {
  prev_scene_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerEnterSceneNotify::prev_scene_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.prev_scene_id)
  return prev_scene_id_;
}
inline void PlayerEnterSceneNotify::set_prev_scene_id(::google::protobuf::uint32 value) {
  
  prev_scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.prev_scene_id)
}

// uint32 dungeon_id = 12;
inline void PlayerEnterSceneNotify::clear_dungeon_id() {
  dungeon_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerEnterSceneNotify::dungeon_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.dungeon_id)
  return dungeon_id_;
}
inline void PlayerEnterSceneNotify::set_dungeon_id(::google::protobuf::uint32 value) {
  
  dungeon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.dungeon_id)
}

// bool is_skip_ui = 1732;
inline void PlayerEnterSceneNotify::clear_is_skip_ui() {
  is_skip_ui_ = false;
}
inline bool PlayerEnterSceneNotify::is_skip_ui() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.is_skip_ui)
  return is_skip_ui_;
}
inline void PlayerEnterSceneNotify::set_is_skip_ui(bool value) {
  
  is_skip_ui_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.is_skip_ui)
}

// uint32 scene_id = 15;
inline void PlayerEnterSceneNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerEnterSceneNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.scene_id)
  return scene_id_;
}
inline void PlayerEnterSceneNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.scene_id)
}

// .proto.EnterType type = 13;
inline void PlayerEnterSceneNotify::clear_type() {
  type_ = 0;
}
inline ::proto::EnterType PlayerEnterSceneNotify::type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.type)
  return static_cast< ::proto::EnterType >(type_);
}
inline void PlayerEnterSceneNotify::set_type(::proto::EnterType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.type)
}

// uint64 scene_begin_time = 14;
inline void PlayerEnterSceneNotify::clear_scene_begin_time() {
  scene_begin_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PlayerEnterSceneNotify::scene_begin_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.scene_begin_time)
  return scene_begin_time_;
}
inline void PlayerEnterSceneNotify::set_scene_begin_time(::google::protobuf::uint64 value) {
  
  scene_begin_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.scene_begin_time)
}

// uint32 world_level = 11;
inline void PlayerEnterSceneNotify::clear_world_level() {
  world_level_ = 0u;
}
inline ::google::protobuf::uint32 PlayerEnterSceneNotify::world_level() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.world_level)
  return world_level_;
}
inline void PlayerEnterSceneNotify::set_world_level(::google::protobuf::uint32 value) {
  
  world_level_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.world_level)
}

// uint32 world_type = 1490;
inline void PlayerEnterSceneNotify::clear_world_type() {
  world_type_ = 0u;
}
inline ::google::protobuf::uint32 PlayerEnterSceneNotify::world_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.world_type)
  return world_type_;
}
inline void PlayerEnterSceneNotify::set_world_type(::google::protobuf::uint32 value) {
  
  world_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.world_type)
}

// uint32 target_uid = 4;
inline void PlayerEnterSceneNotify::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerEnterSceneNotify::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.target_uid)
  return target_uid_;
}
inline void PlayerEnterSceneNotify::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.target_uid)
}

// bool is_first_login_enter_scene = 3;
inline void PlayerEnterSceneNotify::clear_is_first_login_enter_scene() {
  is_first_login_enter_scene_ = false;
}
inline bool PlayerEnterSceneNotify::is_first_login_enter_scene() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.is_first_login_enter_scene)
  return is_first_login_enter_scene_;
}
inline void PlayerEnterSceneNotify::set_is_first_login_enter_scene(bool value) {
  
  is_first_login_enter_scene_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.is_first_login_enter_scene)
}

// repeated uint32 scene_tag_id_list = 5;
inline int PlayerEnterSceneNotify::scene_tag_id_list_size() const {
  return scene_tag_id_list_.size();
}
inline void PlayerEnterSceneNotify::clear_scene_tag_id_list() {
  scene_tag_id_list_.Clear();
}
inline ::google::protobuf::uint32 PlayerEnterSceneNotify::scene_tag_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.scene_tag_id_list)
  return scene_tag_id_list_.Get(index);
}
inline void PlayerEnterSceneNotify::set_scene_tag_id_list(int index, ::google::protobuf::uint32 value) {
  scene_tag_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.scene_tag_id_list)
}
inline void PlayerEnterSceneNotify::add_scene_tag_id_list(::google::protobuf::uint32 value) {
  scene_tag_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.PlayerEnterSceneNotify.scene_tag_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PlayerEnterSceneNotify::scene_tag_id_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerEnterSceneNotify.scene_tag_id_list)
  return scene_tag_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PlayerEnterSceneNotify::mutable_scene_tag_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerEnterSceneNotify.scene_tag_id_list)
  return &scene_tag_id_list_;
}

// string scene_transaction = 1842;
inline void PlayerEnterSceneNotify::clear_scene_transaction() {
  scene_transaction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerEnterSceneNotify::scene_transaction() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.scene_transaction)
  return scene_transaction_.GetNoArena();
}
inline void PlayerEnterSceneNotify::set_scene_transaction(const ::std::string& value) {
  
  scene_transaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.scene_transaction)
}
#if LANG_CXX11
inline void PlayerEnterSceneNotify::set_scene_transaction(::std::string&& value) {
  
  scene_transaction_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerEnterSceneNotify.scene_transaction)
}
#endif
inline void PlayerEnterSceneNotify::set_scene_transaction(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  scene_transaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerEnterSceneNotify.scene_transaction)
}
inline void PlayerEnterSceneNotify::set_scene_transaction(const char* value, size_t size) {
  
  scene_transaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerEnterSceneNotify.scene_transaction)
}
inline ::std::string* PlayerEnterSceneNotify::mutable_scene_transaction() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerEnterSceneNotify.scene_transaction)
  return scene_transaction_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerEnterSceneNotify::release_scene_transaction() {
  // @@protoc_insertion_point(field_release:proto.PlayerEnterSceneNotify.scene_transaction)
  
  return scene_transaction_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerEnterSceneNotify::set_allocated_scene_transaction(::std::string* scene_transaction) {
  if (scene_transaction != NULL) {
    
  } else {
    
  }
  scene_transaction_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scene_transaction);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerEnterSceneNotify.scene_transaction)
}

// .proto.Vector prev_pos = 8;
inline bool PlayerEnterSceneNotify::has_prev_pos() const {
  return this != internal_default_instance() && prev_pos_ != NULL;
}
inline void PlayerEnterSceneNotify::clear_prev_pos() {
  if (GetArenaNoVirtual() == NULL && prev_pos_ != NULL) delete prev_pos_;
  prev_pos_ = NULL;
}
inline const ::proto::Vector& PlayerEnterSceneNotify::prev_pos() const {
  const ::proto::Vector* p = prev_pos_;
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.prev_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* PlayerEnterSceneNotify::mutable_prev_pos() {
  
  if (prev_pos_ == NULL) {
    prev_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerEnterSceneNotify.prev_pos)
  return prev_pos_;
}
inline ::proto::Vector* PlayerEnterSceneNotify::release_prev_pos() {
  // @@protoc_insertion_point(field_release:proto.PlayerEnterSceneNotify.prev_pos)
  
  ::proto::Vector* temp = prev_pos_;
  prev_pos_ = NULL;
  return temp;
}
inline void PlayerEnterSceneNotify::set_allocated_prev_pos(::proto::Vector* prev_pos) {
  delete prev_pos_;
  prev_pos_ = prev_pos;
  if (prev_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerEnterSceneNotify.prev_pos)
}

// uint32 enter_reason = 1828;
inline void PlayerEnterSceneNotify::clear_enter_reason() {
  enter_reason_ = 0u;
}
inline ::google::protobuf::uint32 PlayerEnterSceneNotify::enter_reason() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.enter_reason)
  return enter_reason_;
}
inline void PlayerEnterSceneNotify::set_enter_reason(::google::protobuf::uint32 value) {
  
  enter_reason_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.enter_reason)
}

// .proto.Vector pos = 7;
inline bool PlayerEnterSceneNotify::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void PlayerEnterSceneNotify::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& PlayerEnterSceneNotify::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* PlayerEnterSceneNotify::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerEnterSceneNotify.pos)
  return pos_;
}
inline ::proto::Vector* PlayerEnterSceneNotify::release_pos() {
  // @@protoc_insertion_point(field_release:proto.PlayerEnterSceneNotify.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void PlayerEnterSceneNotify::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerEnterSceneNotify.pos)
}

// uint32 enter_scene_token = 2;
inline void PlayerEnterSceneNotify::clear_enter_scene_token() {
  enter_scene_token_ = 0u;
}
inline ::google::protobuf::uint32 PlayerEnterSceneNotify::enter_scene_token() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.enter_scene_token)
  return enter_scene_token_;
}
inline void PlayerEnterSceneNotify::set_enter_scene_token(::google::protobuf::uint32 value) {
  
  enter_scene_token_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.enter_scene_token)
}

// -------------------------------------------------------------------

// LeaveSceneReq

// -------------------------------------------------------------------

// LeaveSceneRsp

// int32 retcode = 3;
inline void LeaveSceneRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 LeaveSceneRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.LeaveSceneRsp.retcode)
  return retcode_;
}
inline void LeaveSceneRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.LeaveSceneRsp.retcode)
}

// -------------------------------------------------------------------

// SceneInitFinishReq

// uint32 enter_scene_token = 11;
inline void SceneInitFinishReq::clear_enter_scene_token() {
  enter_scene_token_ = 0u;
}
inline ::google::protobuf::uint32 SceneInitFinishReq::enter_scene_token() const {
  // @@protoc_insertion_point(field_get:proto.SceneInitFinishReq.enter_scene_token)
  return enter_scene_token_;
}
inline void SceneInitFinishReq::set_enter_scene_token(::google::protobuf::uint32 value) {
  
  enter_scene_token_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneInitFinishReq.enter_scene_token)
}

// -------------------------------------------------------------------

// SceneInitFinishRsp

// int32 retcode = 13;
inline void SceneInitFinishRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SceneInitFinishRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneInitFinishRsp.retcode)
  return retcode_;
}
inline void SceneInitFinishRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneInitFinishRsp.retcode)
}

// uint32 enter_scene_token = 8;
inline void SceneInitFinishRsp::clear_enter_scene_token() {
  enter_scene_token_ = 0u;
}
inline ::google::protobuf::uint32 SceneInitFinishRsp::enter_scene_token() const {
  // @@protoc_insertion_point(field_get:proto.SceneInitFinishRsp.enter_scene_token)
  return enter_scene_token_;
}
inline void SceneInitFinishRsp::set_enter_scene_token(::google::protobuf::uint32 value) {
  
  enter_scene_token_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneInitFinishRsp.enter_scene_token)
}

// -------------------------------------------------------------------

// SceneEntityAppearNotify

// .proto.VisionType appear_type = 15;
inline void SceneEntityAppearNotify::clear_appear_type() {
  appear_type_ = 0;
}
inline ::proto::VisionType SceneEntityAppearNotify::appear_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityAppearNotify.appear_type)
  return static_cast< ::proto::VisionType >(appear_type_);
}
inline void SceneEntityAppearNotify::set_appear_type(::proto::VisionType value) {
  
  appear_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityAppearNotify.appear_type)
}

// uint32 param = 9;
inline void SceneEntityAppearNotify::clear_param() {
  param_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityAppearNotify::param() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityAppearNotify.param)
  return param_;
}
inline void SceneEntityAppearNotify::set_param(::google::protobuf::uint32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityAppearNotify.param)
}

// repeated .proto.SceneEntityInfo entity_list = 5;
inline int SceneEntityAppearNotify::entity_list_size() const {
  return entity_list_.size();
}
inline void SceneEntityAppearNotify::clear_entity_list() {
  entity_list_.Clear();
}
inline const ::proto::SceneEntityInfo& SceneEntityAppearNotify::entity_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityAppearNotify.entity_list)
  return entity_list_.Get(index);
}
inline ::proto::SceneEntityInfo* SceneEntityAppearNotify::mutable_entity_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityAppearNotify.entity_list)
  return entity_list_.Mutable(index);
}
inline ::proto::SceneEntityInfo* SceneEntityAppearNotify::add_entity_list() {
  // @@protoc_insertion_point(field_add:proto.SceneEntityAppearNotify.entity_list)
  return entity_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::SceneEntityInfo >*
SceneEntityAppearNotify::mutable_entity_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneEntityAppearNotify.entity_list)
  return &entity_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::SceneEntityInfo >&
SceneEntityAppearNotify::entity_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneEntityAppearNotify.entity_list)
  return entity_list_;
}

// -------------------------------------------------------------------

// SceneEntityDisappearNotify

// uint32 param = 6;
inline void SceneEntityDisappearNotify::clear_param() {
  param_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityDisappearNotify::param() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityDisappearNotify.param)
  return param_;
}
inline void SceneEntityDisappearNotify::set_param(::google::protobuf::uint32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityDisappearNotify.param)
}

// repeated uint32 entity_list = 1;
inline int SceneEntityDisappearNotify::entity_list_size() const {
  return entity_list_.size();
}
inline void SceneEntityDisappearNotify::clear_entity_list() {
  entity_list_.Clear();
}
inline ::google::protobuf::uint32 SceneEntityDisappearNotify::entity_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityDisappearNotify.entity_list)
  return entity_list_.Get(index);
}
inline void SceneEntityDisappearNotify::set_entity_list(int index, ::google::protobuf::uint32 value) {
  entity_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneEntityDisappearNotify.entity_list)
}
inline void SceneEntityDisappearNotify::add_entity_list(::google::protobuf::uint32 value) {
  entity_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneEntityDisappearNotify.entity_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneEntityDisappearNotify::entity_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneEntityDisappearNotify.entity_list)
  return entity_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneEntityDisappearNotify::mutable_entity_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneEntityDisappearNotify.entity_list)
  return &entity_list_;
}

// .proto.VisionType disappear_type = 2;
inline void SceneEntityDisappearNotify::clear_disappear_type() {
  disappear_type_ = 0;
}
inline ::proto::VisionType SceneEntityDisappearNotify::disappear_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityDisappearNotify.disappear_type)
  return static_cast< ::proto::VisionType >(disappear_type_);
}
inline void SceneEntityDisappearNotify::set_disappear_type(::proto::VisionType value) {
  
  disappear_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityDisappearNotify.disappear_type)
}

// -------------------------------------------------------------------

// SceneEntityMoveReq

// .proto.MotionInfo motion_info = 7;
inline bool SceneEntityMoveReq::has_motion_info() const {
  return this != internal_default_instance() && motion_info_ != NULL;
}
inline void SceneEntityMoveReq::clear_motion_info() {
  if (GetArenaNoVirtual() == NULL && motion_info_ != NULL) delete motion_info_;
  motion_info_ = NULL;
}
inline const ::proto::MotionInfo& SceneEntityMoveReq::motion_info() const {
  const ::proto::MotionInfo* p = motion_info_;
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveReq.motion_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MotionInfo*>(
      &::proto::_MotionInfo_default_instance_);
}
inline ::proto::MotionInfo* SceneEntityMoveReq::mutable_motion_info() {
  
  if (motion_info_ == NULL) {
    motion_info_ = new ::proto::MotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityMoveReq.motion_info)
  return motion_info_;
}
inline ::proto::MotionInfo* SceneEntityMoveReq::release_motion_info() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityMoveReq.motion_info)
  
  ::proto::MotionInfo* temp = motion_info_;
  motion_info_ = NULL;
  return temp;
}
inline void SceneEntityMoveReq::set_allocated_motion_info(::proto::MotionInfo* motion_info) {
  delete motion_info_;
  motion_info_ = motion_info;
  if (motion_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityMoveReq.motion_info)
}

// uint32 scene_time = 4;
inline void SceneEntityMoveReq::clear_scene_time() {
  scene_time_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityMoveReq::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveReq.scene_time)
  return scene_time_;
}
inline void SceneEntityMoveReq::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveReq.scene_time)
}

// uint32 entity_id = 8;
inline void SceneEntityMoveReq::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityMoveReq::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveReq.entity_id)
  return entity_id_;
}
inline void SceneEntityMoveReq::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveReq.entity_id)
}

// uint32 reliable_seq = 15;
inline void SceneEntityMoveReq::clear_reliable_seq() {
  reliable_seq_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityMoveReq::reliable_seq() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveReq.reliable_seq)
  return reliable_seq_;
}
inline void SceneEntityMoveReq::set_reliable_seq(::google::protobuf::uint32 value) {
  
  reliable_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveReq.reliable_seq)
}

// -------------------------------------------------------------------

// SceneEntityMoveRsp

// uint32 entity_id = 4;
inline void SceneEntityMoveRsp::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityMoveRsp::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveRsp.entity_id)
  return entity_id_;
}
inline void SceneEntityMoveRsp::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveRsp.entity_id)
}

// .proto.MotionInfo fail_motion = 1;
inline bool SceneEntityMoveRsp::has_fail_motion() const {
  return this != internal_default_instance() && fail_motion_ != NULL;
}
inline void SceneEntityMoveRsp::clear_fail_motion() {
  if (GetArenaNoVirtual() == NULL && fail_motion_ != NULL) delete fail_motion_;
  fail_motion_ = NULL;
}
inline const ::proto::MotionInfo& SceneEntityMoveRsp::fail_motion() const {
  const ::proto::MotionInfo* p = fail_motion_;
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveRsp.fail_motion)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MotionInfo*>(
      &::proto::_MotionInfo_default_instance_);
}
inline ::proto::MotionInfo* SceneEntityMoveRsp::mutable_fail_motion() {
  
  if (fail_motion_ == NULL) {
    fail_motion_ = new ::proto::MotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityMoveRsp.fail_motion)
  return fail_motion_;
}
inline ::proto::MotionInfo* SceneEntityMoveRsp::release_fail_motion() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityMoveRsp.fail_motion)
  
  ::proto::MotionInfo* temp = fail_motion_;
  fail_motion_ = NULL;
  return temp;
}
inline void SceneEntityMoveRsp::set_allocated_fail_motion(::proto::MotionInfo* fail_motion) {
  delete fail_motion_;
  fail_motion_ = fail_motion;
  if (fail_motion) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityMoveRsp.fail_motion)
}

// uint32 scene_time = 10;
inline void SceneEntityMoveRsp::clear_scene_time() {
  scene_time_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityMoveRsp::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveRsp.scene_time)
  return scene_time_;
}
inline void SceneEntityMoveRsp::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveRsp.scene_time)
}

// uint32 reliable_seq = 6;
inline void SceneEntityMoveRsp::clear_reliable_seq() {
  reliable_seq_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityMoveRsp::reliable_seq() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveRsp.reliable_seq)
  return reliable_seq_;
}
inline void SceneEntityMoveRsp::set_reliable_seq(::google::protobuf::uint32 value) {
  
  reliable_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveRsp.reliable_seq)
}

// int32 retcode = 8;
inline void SceneEntityMoveRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SceneEntityMoveRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveRsp.retcode)
  return retcode_;
}
inline void SceneEntityMoveRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveRsp.retcode)
}

// -------------------------------------------------------------------

// SceneAvatarStaminaStepReq

// bool use_client_rot = 15;
inline void SceneAvatarStaminaStepReq::clear_use_client_rot() {
  use_client_rot_ = false;
}
inline bool SceneAvatarStaminaStepReq::use_client_rot() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarStaminaStepReq.use_client_rot)
  return use_client_rot_;
}
inline void SceneAvatarStaminaStepReq::set_use_client_rot(bool value) {
  
  use_client_rot_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarStaminaStepReq.use_client_rot)
}

// .proto.Vector rot = 7;
inline bool SceneAvatarStaminaStepReq::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
inline void SceneAvatarStaminaStepReq::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
inline const ::proto::Vector& SceneAvatarStaminaStepReq::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.SceneAvatarStaminaStepReq.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* SceneAvatarStaminaStepReq::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneAvatarStaminaStepReq.rot)
  return rot_;
}
inline ::proto::Vector* SceneAvatarStaminaStepReq::release_rot() {
  // @@protoc_insertion_point(field_release:proto.SceneAvatarStaminaStepReq.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
inline void SceneAvatarStaminaStepReq::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneAvatarStaminaStepReq.rot)
}

// -------------------------------------------------------------------

// SceneAvatarStaminaStepRsp

// bool use_client_rot = 9;
inline void SceneAvatarStaminaStepRsp::clear_use_client_rot() {
  use_client_rot_ = false;
}
inline bool SceneAvatarStaminaStepRsp::use_client_rot() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarStaminaStepRsp.use_client_rot)
  return use_client_rot_;
}
inline void SceneAvatarStaminaStepRsp::set_use_client_rot(bool value) {
  
  use_client_rot_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarStaminaStepRsp.use_client_rot)
}

// int32 retcode = 7;
inline void SceneAvatarStaminaStepRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SceneAvatarStaminaStepRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarStaminaStepRsp.retcode)
  return retcode_;
}
inline void SceneAvatarStaminaStepRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarStaminaStepRsp.retcode)
}

// .proto.Vector rot = 11;
inline bool SceneAvatarStaminaStepRsp::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
inline void SceneAvatarStaminaStepRsp::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
inline const ::proto::Vector& SceneAvatarStaminaStepRsp::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.SceneAvatarStaminaStepRsp.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* SceneAvatarStaminaStepRsp::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneAvatarStaminaStepRsp.rot)
  return rot_;
}
inline ::proto::Vector* SceneAvatarStaminaStepRsp::release_rot() {
  // @@protoc_insertion_point(field_release:proto.SceneAvatarStaminaStepRsp.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
inline void SceneAvatarStaminaStepRsp::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneAvatarStaminaStepRsp.rot)
}

// -------------------------------------------------------------------

// SceneEntityMoveNotify

// .proto.MotionInfo motion_info = 6;
inline bool SceneEntityMoveNotify::has_motion_info() const {
  return this != internal_default_instance() && motion_info_ != NULL;
}
inline void SceneEntityMoveNotify::clear_motion_info() {
  if (GetArenaNoVirtual() == NULL && motion_info_ != NULL) delete motion_info_;
  motion_info_ = NULL;
}
inline const ::proto::MotionInfo& SceneEntityMoveNotify::motion_info() const {
  const ::proto::MotionInfo* p = motion_info_;
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveNotify.motion_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MotionInfo*>(
      &::proto::_MotionInfo_default_instance_);
}
inline ::proto::MotionInfo* SceneEntityMoveNotify::mutable_motion_info() {
  
  if (motion_info_ == NULL) {
    motion_info_ = new ::proto::MotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityMoveNotify.motion_info)
  return motion_info_;
}
inline ::proto::MotionInfo* SceneEntityMoveNotify::release_motion_info() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityMoveNotify.motion_info)
  
  ::proto::MotionInfo* temp = motion_info_;
  motion_info_ = NULL;
  return temp;
}
inline void SceneEntityMoveNotify::set_allocated_motion_info(::proto::MotionInfo* motion_info) {
  delete motion_info_;
  motion_info_ = motion_info;
  if (motion_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityMoveNotify.motion_info)
}

// uint32 entity_id = 8;
inline void SceneEntityMoveNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityMoveNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveNotify.entity_id)
  return entity_id_;
}
inline void SceneEntityMoveNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveNotify.entity_id)
}

// uint32 scene_time = 15;
inline void SceneEntityMoveNotify::clear_scene_time() {
  scene_time_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityMoveNotify::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveNotify.scene_time)
  return scene_time_;
}
inline void SceneEntityMoveNotify::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveNotify.scene_time)
}

// uint32 reliable_seq = 2;
inline void SceneEntityMoveNotify::clear_reliable_seq() {
  reliable_seq_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityMoveNotify::reliable_seq() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveNotify.reliable_seq)
  return reliable_seq_;
}
inline void SceneEntityMoveNotify::set_reliable_seq(::google::protobuf::uint32 value) {
  
  reliable_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveNotify.reliable_seq)
}

// -------------------------------------------------------------------

// VehicleLocationInfo

// .proto.Vector rot = 14;
inline bool VehicleLocationInfo::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
inline void VehicleLocationInfo::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
inline const ::proto::Vector& VehicleLocationInfo::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.VehicleLocationInfo.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* VehicleLocationInfo::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.VehicleLocationInfo.rot)
  return rot_;
}
inline ::proto::Vector* VehicleLocationInfo::release_rot() {
  // @@protoc_insertion_point(field_release:proto.VehicleLocationInfo.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
inline void VehicleLocationInfo::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.VehicleLocationInfo.rot)
}

// uint32 entity_id = 15;
inline void VehicleLocationInfo::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 VehicleLocationInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.VehicleLocationInfo.entity_id)
  return entity_id_;
}
inline void VehicleLocationInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.VehicleLocationInfo.entity_id)
}

// float cur_hp = 11;
inline void VehicleLocationInfo::clear_cur_hp() {
  cur_hp_ = 0;
}
inline float VehicleLocationInfo::cur_hp() const {
  // @@protoc_insertion_point(field_get:proto.VehicleLocationInfo.cur_hp)
  return cur_hp_;
}
inline void VehicleLocationInfo::set_cur_hp(float value) {
  
  cur_hp_ = value;
  // @@protoc_insertion_point(field_set:proto.VehicleLocationInfo.cur_hp)
}

// uint32 owner_uid = 5;
inline void VehicleLocationInfo::clear_owner_uid() {
  owner_uid_ = 0u;
}
inline ::google::protobuf::uint32 VehicleLocationInfo::owner_uid() const {
  // @@protoc_insertion_point(field_get:proto.VehicleLocationInfo.owner_uid)
  return owner_uid_;
}
inline void VehicleLocationInfo::set_owner_uid(::google::protobuf::uint32 value) {
  
  owner_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.VehicleLocationInfo.owner_uid)
}

// .proto.Vector pos = 1;
inline bool VehicleLocationInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void VehicleLocationInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& VehicleLocationInfo::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.VehicleLocationInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* VehicleLocationInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.VehicleLocationInfo.pos)
  return pos_;
}
inline ::proto::Vector* VehicleLocationInfo::release_pos() {
  // @@protoc_insertion_point(field_release:proto.VehicleLocationInfo.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void VehicleLocationInfo::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.VehicleLocationInfo.pos)
}

// repeated uint32 uid_list = 3;
inline int VehicleLocationInfo::uid_list_size() const {
  return uid_list_.size();
}
inline void VehicleLocationInfo::clear_uid_list() {
  uid_list_.Clear();
}
inline ::google::protobuf::uint32 VehicleLocationInfo::uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.VehicleLocationInfo.uid_list)
  return uid_list_.Get(index);
}
inline void VehicleLocationInfo::set_uid_list(int index, ::google::protobuf::uint32 value) {
  uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.VehicleLocationInfo.uid_list)
}
inline void VehicleLocationInfo::add_uid_list(::google::protobuf::uint32 value) {
  uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.VehicleLocationInfo.uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
VehicleLocationInfo::uid_list() const {
  // @@protoc_insertion_point(field_list:proto.VehicleLocationInfo.uid_list)
  return uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
VehicleLocationInfo::mutable_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.VehicleLocationInfo.uid_list)
  return &uid_list_;
}

// uint32 gadget_id = 13;
inline void VehicleLocationInfo::clear_gadget_id() {
  gadget_id_ = 0u;
}
inline ::google::protobuf::uint32 VehicleLocationInfo::gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.VehicleLocationInfo.gadget_id)
  return gadget_id_;
}
inline void VehicleLocationInfo::set_gadget_id(::google::protobuf::uint32 value) {
  
  gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.VehicleLocationInfo.gadget_id)
}

// float max_hp = 6;
inline void VehicleLocationInfo::clear_max_hp() {
  max_hp_ = 0;
}
inline float VehicleLocationInfo::max_hp() const {
  // @@protoc_insertion_point(field_get:proto.VehicleLocationInfo.max_hp)
  return max_hp_;
}
inline void VehicleLocationInfo::set_max_hp(float value) {
  
  max_hp_ = value;
  // @@protoc_insertion_point(field_set:proto.VehicleLocationInfo.max_hp)
}

// -------------------------------------------------------------------

// ScenePlayerLocationNotify

// repeated .proto.VehicleLocationInfo vehicle_loc_list = 3;
inline int ScenePlayerLocationNotify::vehicle_loc_list_size() const {
  return vehicle_loc_list_.size();
}
inline void ScenePlayerLocationNotify::clear_vehicle_loc_list() {
  vehicle_loc_list_.Clear();
}
inline const ::proto::VehicleLocationInfo& ScenePlayerLocationNotify::vehicle_loc_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerLocationNotify.vehicle_loc_list)
  return vehicle_loc_list_.Get(index);
}
inline ::proto::VehicleLocationInfo* ScenePlayerLocationNotify::mutable_vehicle_loc_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerLocationNotify.vehicle_loc_list)
  return vehicle_loc_list_.Mutable(index);
}
inline ::proto::VehicleLocationInfo* ScenePlayerLocationNotify::add_vehicle_loc_list() {
  // @@protoc_insertion_point(field_add:proto.ScenePlayerLocationNotify.vehicle_loc_list)
  return vehicle_loc_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::VehicleLocationInfo >*
ScenePlayerLocationNotify::mutable_vehicle_loc_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ScenePlayerLocationNotify.vehicle_loc_list)
  return &vehicle_loc_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::VehicleLocationInfo >&
ScenePlayerLocationNotify::vehicle_loc_list() const {
  // @@protoc_insertion_point(field_list:proto.ScenePlayerLocationNotify.vehicle_loc_list)
  return vehicle_loc_list_;
}

// uint32 scene_id = 9;
inline void ScenePlayerLocationNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 ScenePlayerLocationNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerLocationNotify.scene_id)
  return scene_id_;
}
inline void ScenePlayerLocationNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ScenePlayerLocationNotify.scene_id)
}

// repeated .proto.PlayerLocationInfo player_loc_list = 14;
inline int ScenePlayerLocationNotify::player_loc_list_size() const {
  return player_loc_list_.size();
}
inline void ScenePlayerLocationNotify::clear_player_loc_list() {
  player_loc_list_.Clear();
}
inline const ::proto::PlayerLocationInfo& ScenePlayerLocationNotify::player_loc_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerLocationNotify.player_loc_list)
  return player_loc_list_.Get(index);
}
inline ::proto::PlayerLocationInfo* ScenePlayerLocationNotify::mutable_player_loc_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerLocationNotify.player_loc_list)
  return player_loc_list_.Mutable(index);
}
inline ::proto::PlayerLocationInfo* ScenePlayerLocationNotify::add_player_loc_list() {
  // @@protoc_insertion_point(field_add:proto.ScenePlayerLocationNotify.player_loc_list)
  return player_loc_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::PlayerLocationInfo >*
ScenePlayerLocationNotify::mutable_player_loc_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ScenePlayerLocationNotify.player_loc_list)
  return &player_loc_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::PlayerLocationInfo >&
ScenePlayerLocationNotify::player_loc_list() const {
  // @@protoc_insertion_point(field_list:proto.ScenePlayerLocationNotify.player_loc_list)
  return player_loc_list_;
}

// -------------------------------------------------------------------

// GetScenePointReq

// uint32 belong_uid = 10;
inline void GetScenePointReq::clear_belong_uid() {
  belong_uid_ = 0u;
}
inline ::google::protobuf::uint32 GetScenePointReq::belong_uid() const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointReq.belong_uid)
  return belong_uid_;
}
inline void GetScenePointReq::set_belong_uid(::google::protobuf::uint32 value) {
  
  belong_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetScenePointReq.belong_uid)
}

// uint32 scene_id = 4;
inline void GetScenePointReq::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 GetScenePointReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointReq.scene_id)
  return scene_id_;
}
inline void GetScenePointReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetScenePointReq.scene_id)
}

// -------------------------------------------------------------------

// CityInfo

// uint32 city_id = 15;
inline void CityInfo::clear_city_id() {
  city_id_ = 0u;
}
inline ::google::protobuf::uint32 CityInfo::city_id() const {
  // @@protoc_insertion_point(field_get:proto.CityInfo.city_id)
  return city_id_;
}
inline void CityInfo::set_city_id(::google::protobuf::uint32 value) {
  
  city_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CityInfo.city_id)
}

// uint32 crystal_num = 3;
inline void CityInfo::clear_crystal_num() {
  crystal_num_ = 0u;
}
inline ::google::protobuf::uint32 CityInfo::crystal_num() const {
  // @@protoc_insertion_point(field_get:proto.CityInfo.crystal_num)
  return crystal_num_;
}
inline void CityInfo::set_crystal_num(::google::protobuf::uint32 value) {
  
  crystal_num_ = value;
  // @@protoc_insertion_point(field_set:proto.CityInfo.crystal_num)
}

// uint32 level = 4;
inline void CityInfo::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 CityInfo::level() const {
  // @@protoc_insertion_point(field_get:proto.CityInfo.level)
  return level_;
}
inline void CityInfo::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.CityInfo.level)
}

// -------------------------------------------------------------------

// GetScenePointRsp

// repeated uint32 not_explored_dungeon_entry_list = 11;
inline int GetScenePointRsp::not_explored_dungeon_entry_list_size() const {
  return not_explored_dungeon_entry_list_.size();
}
inline void GetScenePointRsp::clear_not_explored_dungeon_entry_list() {
  not_explored_dungeon_entry_list_.Clear();
}
inline ::google::protobuf::uint32 GetScenePointRsp::not_explored_dungeon_entry_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.not_explored_dungeon_entry_list)
  return not_explored_dungeon_entry_list_.Get(index);
}
inline void GetScenePointRsp::set_not_explored_dungeon_entry_list(int index, ::google::protobuf::uint32 value) {
  not_explored_dungeon_entry_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.not_explored_dungeon_entry_list)
}
inline void GetScenePointRsp::add_not_explored_dungeon_entry_list(::google::protobuf::uint32 value) {
  not_explored_dungeon_entry_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetScenePointRsp.not_explored_dungeon_entry_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetScenePointRsp::not_explored_dungeon_entry_list() const {
  // @@protoc_insertion_point(field_list:proto.GetScenePointRsp.not_explored_dungeon_entry_list)
  return not_explored_dungeon_entry_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetScenePointRsp::mutable_not_explored_dungeon_entry_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetScenePointRsp.not_explored_dungeon_entry_list)
  return &not_explored_dungeon_entry_list_;
}

// repeated uint32 to_be_explore_dungeon_entry_list = 15;
inline int GetScenePointRsp::to_be_explore_dungeon_entry_list_size() const {
  return to_be_explore_dungeon_entry_list_.size();
}
inline void GetScenePointRsp::clear_to_be_explore_dungeon_entry_list() {
  to_be_explore_dungeon_entry_list_.Clear();
}
inline ::google::protobuf::uint32 GetScenePointRsp::to_be_explore_dungeon_entry_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.to_be_explore_dungeon_entry_list)
  return to_be_explore_dungeon_entry_list_.Get(index);
}
inline void GetScenePointRsp::set_to_be_explore_dungeon_entry_list(int index, ::google::protobuf::uint32 value) {
  to_be_explore_dungeon_entry_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.to_be_explore_dungeon_entry_list)
}
inline void GetScenePointRsp::add_to_be_explore_dungeon_entry_list(::google::protobuf::uint32 value) {
  to_be_explore_dungeon_entry_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetScenePointRsp.to_be_explore_dungeon_entry_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetScenePointRsp::to_be_explore_dungeon_entry_list() const {
  // @@protoc_insertion_point(field_list:proto.GetScenePointRsp.to_be_explore_dungeon_entry_list)
  return to_be_explore_dungeon_entry_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetScenePointRsp::mutable_to_be_explore_dungeon_entry_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetScenePointRsp.to_be_explore_dungeon_entry_list)
  return &to_be_explore_dungeon_entry_list_;
}

// repeated uint32 locked_point_list = 2;
inline int GetScenePointRsp::locked_point_list_size() const {
  return locked_point_list_.size();
}
inline void GetScenePointRsp::clear_locked_point_list() {
  locked_point_list_.Clear();
}
inline ::google::protobuf::uint32 GetScenePointRsp::locked_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.locked_point_list)
  return locked_point_list_.Get(index);
}
inline void GetScenePointRsp::set_locked_point_list(int index, ::google::protobuf::uint32 value) {
  locked_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.locked_point_list)
}
inline void GetScenePointRsp::add_locked_point_list(::google::protobuf::uint32 value) {
  locked_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetScenePointRsp.locked_point_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetScenePointRsp::locked_point_list() const {
  // @@protoc_insertion_point(field_list:proto.GetScenePointRsp.locked_point_list)
  return locked_point_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetScenePointRsp::mutable_locked_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetScenePointRsp.locked_point_list)
  return &locked_point_list_;
}

// repeated uint32 unhide_point_list = 5;
inline int GetScenePointRsp::unhide_point_list_size() const {
  return unhide_point_list_.size();
}
inline void GetScenePointRsp::clear_unhide_point_list() {
  unhide_point_list_.Clear();
}
inline ::google::protobuf::uint32 GetScenePointRsp::unhide_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.unhide_point_list)
  return unhide_point_list_.Get(index);
}
inline void GetScenePointRsp::set_unhide_point_list(int index, ::google::protobuf::uint32 value) {
  unhide_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.unhide_point_list)
}
inline void GetScenePointRsp::add_unhide_point_list(::google::protobuf::uint32 value) {
  unhide_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetScenePointRsp.unhide_point_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetScenePointRsp::unhide_point_list() const {
  // @@protoc_insertion_point(field_list:proto.GetScenePointRsp.unhide_point_list)
  return unhide_point_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetScenePointRsp::mutable_unhide_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetScenePointRsp.unhide_point_list)
  return &unhide_point_list_;
}

// int32 retcode = 9;
inline void GetScenePointRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetScenePointRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.retcode)
  return retcode_;
}
inline void GetScenePointRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.retcode)
}

// uint32 belong_uid = 12;
inline void GetScenePointRsp::clear_belong_uid() {
  belong_uid_ = 0u;
}
inline ::google::protobuf::uint32 GetScenePointRsp::belong_uid() const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.belong_uid)
  return belong_uid_;
}
inline void GetScenePointRsp::set_belong_uid(::google::protobuf::uint32 value) {
  
  belong_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.belong_uid)
}

// repeated uint32 unlocked_point_list = 13;
inline int GetScenePointRsp::unlocked_point_list_size() const {
  return unlocked_point_list_.size();
}
inline void GetScenePointRsp::clear_unlocked_point_list() {
  unlocked_point_list_.Clear();
}
inline ::google::protobuf::uint32 GetScenePointRsp::unlocked_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.unlocked_point_list)
  return unlocked_point_list_.Get(index);
}
inline void GetScenePointRsp::set_unlocked_point_list(int index, ::google::protobuf::uint32 value) {
  unlocked_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.unlocked_point_list)
}
inline void GetScenePointRsp::add_unlocked_point_list(::google::protobuf::uint32 value) {
  unlocked_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetScenePointRsp.unlocked_point_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetScenePointRsp::unlocked_point_list() const {
  // @@protoc_insertion_point(field_list:proto.GetScenePointRsp.unlocked_point_list)
  return unlocked_point_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetScenePointRsp::mutable_unlocked_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetScenePointRsp.unlocked_point_list)
  return &unlocked_point_list_;
}

// repeated uint32 unlock_area_list = 1;
inline int GetScenePointRsp::unlock_area_list_size() const {
  return unlock_area_list_.size();
}
inline void GetScenePointRsp::clear_unlock_area_list() {
  unlock_area_list_.Clear();
}
inline ::google::protobuf::uint32 GetScenePointRsp::unlock_area_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.unlock_area_list)
  return unlock_area_list_.Get(index);
}
inline void GetScenePointRsp::set_unlock_area_list(int index, ::google::protobuf::uint32 value) {
  unlock_area_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.unlock_area_list)
}
inline void GetScenePointRsp::add_unlock_area_list(::google::protobuf::uint32 value) {
  unlock_area_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetScenePointRsp.unlock_area_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetScenePointRsp::unlock_area_list() const {
  // @@protoc_insertion_point(field_list:proto.GetScenePointRsp.unlock_area_list)
  return unlock_area_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetScenePointRsp::mutable_unlock_area_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetScenePointRsp.unlock_area_list)
  return &unlock_area_list_;
}

// repeated uint32 hide_point_list = 4;
inline int GetScenePointRsp::hide_point_list_size() const {
  return hide_point_list_.size();
}
inline void GetScenePointRsp::clear_hide_point_list() {
  hide_point_list_.Clear();
}
inline ::google::protobuf::uint32 GetScenePointRsp::hide_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.hide_point_list)
  return hide_point_list_.Get(index);
}
inline void GetScenePointRsp::set_hide_point_list(int index, ::google::protobuf::uint32 value) {
  hide_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.hide_point_list)
}
inline void GetScenePointRsp::add_hide_point_list(::google::protobuf::uint32 value) {
  hide_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetScenePointRsp.hide_point_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetScenePointRsp::hide_point_list() const {
  // @@protoc_insertion_point(field_list:proto.GetScenePointRsp.hide_point_list)
  return hide_point_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetScenePointRsp::mutable_hide_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetScenePointRsp.hide_point_list)
  return &hide_point_list_;
}

// uint32 scene_id = 14;
inline void GetScenePointRsp::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 GetScenePointRsp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.scene_id)
  return scene_id_;
}
inline void GetScenePointRsp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.scene_id)
}

// repeated uint32 not_interact_dungeon_entry_list = 6;
inline int GetScenePointRsp::not_interact_dungeon_entry_list_size() const {
  return not_interact_dungeon_entry_list_.size();
}
inline void GetScenePointRsp::clear_not_interact_dungeon_entry_list() {
  not_interact_dungeon_entry_list_.Clear();
}
inline ::google::protobuf::uint32 GetScenePointRsp::not_interact_dungeon_entry_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.not_interact_dungeon_entry_list)
  return not_interact_dungeon_entry_list_.Get(index);
}
inline void GetScenePointRsp::set_not_interact_dungeon_entry_list(int index, ::google::protobuf::uint32 value) {
  not_interact_dungeon_entry_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.not_interact_dungeon_entry_list)
}
inline void GetScenePointRsp::add_not_interact_dungeon_entry_list(::google::protobuf::uint32 value) {
  not_interact_dungeon_entry_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetScenePointRsp.not_interact_dungeon_entry_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetScenePointRsp::not_interact_dungeon_entry_list() const {
  // @@protoc_insertion_point(field_list:proto.GetScenePointRsp.not_interact_dungeon_entry_list)
  return not_interact_dungeon_entry_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetScenePointRsp::mutable_not_interact_dungeon_entry_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetScenePointRsp.not_interact_dungeon_entry_list)
  return &not_interact_dungeon_entry_list_;
}

// repeated uint32 group_unlimit_point_list = 10;
inline int GetScenePointRsp::group_unlimit_point_list_size() const {
  return group_unlimit_point_list_.size();
}
inline void GetScenePointRsp::clear_group_unlimit_point_list() {
  group_unlimit_point_list_.Clear();
}
inline ::google::protobuf::uint32 GetScenePointRsp::group_unlimit_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.group_unlimit_point_list)
  return group_unlimit_point_list_.Get(index);
}
inline void GetScenePointRsp::set_group_unlimit_point_list(int index, ::google::protobuf::uint32 value) {
  group_unlimit_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.group_unlimit_point_list)
}
inline void GetScenePointRsp::add_group_unlimit_point_list(::google::protobuf::uint32 value) {
  group_unlimit_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetScenePointRsp.group_unlimit_point_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetScenePointRsp::group_unlimit_point_list() const {
  // @@protoc_insertion_point(field_list:proto.GetScenePointRsp.group_unlimit_point_list)
  return group_unlimit_point_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetScenePointRsp::mutable_group_unlimit_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetScenePointRsp.group_unlimit_point_list)
  return &group_unlimit_point_list_;
}

// -------------------------------------------------------------------

// EnterTransPointRegionNotify

// uint32 scene_id = 8;
inline void EnterTransPointRegionNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 EnterTransPointRegionNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterTransPointRegionNotify.scene_id)
  return scene_id_;
}
inline void EnterTransPointRegionNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterTransPointRegionNotify.scene_id)
}

// uint32 point_id = 6;
inline void EnterTransPointRegionNotify::clear_point_id() {
  point_id_ = 0u;
}
inline ::google::protobuf::uint32 EnterTransPointRegionNotify::point_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterTransPointRegionNotify.point_id)
  return point_id_;
}
inline void EnterTransPointRegionNotify::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterTransPointRegionNotify.point_id)
}

// -------------------------------------------------------------------

// ExitTransPointRegionNotify

// uint32 point_id = 1;
inline void ExitTransPointRegionNotify::clear_point_id() {
  point_id_ = 0u;
}
inline ::google::protobuf::uint32 ExitTransPointRegionNotify::point_id() const {
  // @@protoc_insertion_point(field_get:proto.ExitTransPointRegionNotify.point_id)
  return point_id_;
}
inline void ExitTransPointRegionNotify::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ExitTransPointRegionNotify.point_id)
}

// uint32 scene_id = 7;
inline void ExitTransPointRegionNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 ExitTransPointRegionNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ExitTransPointRegionNotify.scene_id)
  return scene_id_;
}
inline void ExitTransPointRegionNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ExitTransPointRegionNotify.scene_id)
}

// -------------------------------------------------------------------

// ScenePointUnlockNotify

// repeated uint32 point_list = 13;
inline int ScenePointUnlockNotify::point_list_size() const {
  return point_list_.size();
}
inline void ScenePointUnlockNotify::clear_point_list() {
  point_list_.Clear();
}
inline ::google::protobuf::uint32 ScenePointUnlockNotify::point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ScenePointUnlockNotify.point_list)
  return point_list_.Get(index);
}
inline void ScenePointUnlockNotify::set_point_list(int index, ::google::protobuf::uint32 value) {
  point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ScenePointUnlockNotify.point_list)
}
inline void ScenePointUnlockNotify::add_point_list(::google::protobuf::uint32 value) {
  point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ScenePointUnlockNotify.point_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ScenePointUnlockNotify::point_list() const {
  // @@protoc_insertion_point(field_list:proto.ScenePointUnlockNotify.point_list)
  return point_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ScenePointUnlockNotify::mutable_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ScenePointUnlockNotify.point_list)
  return &point_list_;
}

// uint32 scene_id = 6;
inline void ScenePointUnlockNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 ScenePointUnlockNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ScenePointUnlockNotify.scene_id)
  return scene_id_;
}
inline void ScenePointUnlockNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ScenePointUnlockNotify.scene_id)
}

// repeated uint32 unhide_point_list = 12;
inline int ScenePointUnlockNotify::unhide_point_list_size() const {
  return unhide_point_list_.size();
}
inline void ScenePointUnlockNotify::clear_unhide_point_list() {
  unhide_point_list_.Clear();
}
inline ::google::protobuf::uint32 ScenePointUnlockNotify::unhide_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ScenePointUnlockNotify.unhide_point_list)
  return unhide_point_list_.Get(index);
}
inline void ScenePointUnlockNotify::set_unhide_point_list(int index, ::google::protobuf::uint32 value) {
  unhide_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ScenePointUnlockNotify.unhide_point_list)
}
inline void ScenePointUnlockNotify::add_unhide_point_list(::google::protobuf::uint32 value) {
  unhide_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ScenePointUnlockNotify.unhide_point_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ScenePointUnlockNotify::unhide_point_list() const {
  // @@protoc_insertion_point(field_list:proto.ScenePointUnlockNotify.unhide_point_list)
  return unhide_point_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ScenePointUnlockNotify::mutable_unhide_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ScenePointUnlockNotify.unhide_point_list)
  return &unhide_point_list_;
}

// repeated uint32 hide_point_list = 1;
inline int ScenePointUnlockNotify::hide_point_list_size() const {
  return hide_point_list_.size();
}
inline void ScenePointUnlockNotify::clear_hide_point_list() {
  hide_point_list_.Clear();
}
inline ::google::protobuf::uint32 ScenePointUnlockNotify::hide_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ScenePointUnlockNotify.hide_point_list)
  return hide_point_list_.Get(index);
}
inline void ScenePointUnlockNotify::set_hide_point_list(int index, ::google::protobuf::uint32 value) {
  hide_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ScenePointUnlockNotify.hide_point_list)
}
inline void ScenePointUnlockNotify::add_hide_point_list(::google::protobuf::uint32 value) {
  hide_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ScenePointUnlockNotify.hide_point_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ScenePointUnlockNotify::hide_point_list() const {
  // @@protoc_insertion_point(field_list:proto.ScenePointUnlockNotify.hide_point_list)
  return hide_point_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ScenePointUnlockNotify::mutable_hide_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ScenePointUnlockNotify.hide_point_list)
  return &hide_point_list_;
}

// repeated uint32 locked_point_list = 8;
inline int ScenePointUnlockNotify::locked_point_list_size() const {
  return locked_point_list_.size();
}
inline void ScenePointUnlockNotify::clear_locked_point_list() {
  locked_point_list_.Clear();
}
inline ::google::protobuf::uint32 ScenePointUnlockNotify::locked_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ScenePointUnlockNotify.locked_point_list)
  return locked_point_list_.Get(index);
}
inline void ScenePointUnlockNotify::set_locked_point_list(int index, ::google::protobuf::uint32 value) {
  locked_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ScenePointUnlockNotify.locked_point_list)
}
inline void ScenePointUnlockNotify::add_locked_point_list(::google::protobuf::uint32 value) {
  locked_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ScenePointUnlockNotify.locked_point_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ScenePointUnlockNotify::locked_point_list() const {
  // @@protoc_insertion_point(field_list:proto.ScenePointUnlockNotify.locked_point_list)
  return locked_point_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ScenePointUnlockNotify::mutable_locked_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ScenePointUnlockNotify.locked_point_list)
  return &locked_point_list_;
}

// -------------------------------------------------------------------

// SceneTransToPointReq

// uint32 scene_id = 13;
inline void SceneTransToPointReq::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneTransToPointReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneTransToPointReq.scene_id)
  return scene_id_;
}
inline void SceneTransToPointReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTransToPointReq.scene_id)
}

// uint32 point_id = 1;
inline void SceneTransToPointReq::clear_point_id() {
  point_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneTransToPointReq::point_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneTransToPointReq.point_id)
  return point_id_;
}
inline void SceneTransToPointReq::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTransToPointReq.point_id)
}

// -------------------------------------------------------------------

// SceneTransToPointRsp

// uint32 point_id = 14;
inline void SceneTransToPointRsp::clear_point_id() {
  point_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneTransToPointRsp::point_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneTransToPointRsp.point_id)
  return point_id_;
}
inline void SceneTransToPointRsp::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTransToPointRsp.point_id)
}

// uint32 scene_id = 3;
inline void SceneTransToPointRsp::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneTransToPointRsp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneTransToPointRsp.scene_id)
  return scene_id_;
}
inline void SceneTransToPointRsp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTransToPointRsp.scene_id)
}

// int32 retcode = 8;
inline void SceneTransToPointRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SceneTransToPointRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneTransToPointRsp.retcode)
  return retcode_;
}
inline void SceneTransToPointRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTransToPointRsp.retcode)
}

// -------------------------------------------------------------------

// EntityJumpNotify

// .proto.EntityJumpNotify.Type jump_type = 9;
inline void EntityJumpNotify::clear_jump_type() {
  jump_type_ = 0;
}
inline ::proto::EntityJumpNotify_Type EntityJumpNotify::jump_type() const {
  // @@protoc_insertion_point(field_get:proto.EntityJumpNotify.jump_type)
  return static_cast< ::proto::EntityJumpNotify_Type >(jump_type_);
}
inline void EntityJumpNotify::set_jump_type(::proto::EntityJumpNotify_Type value) {
  
  jump_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityJumpNotify.jump_type)
}

// .proto.Vector rot = 8;
inline bool EntityJumpNotify::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
inline void EntityJumpNotify::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
inline const ::proto::Vector& EntityJumpNotify::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.EntityJumpNotify.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* EntityJumpNotify::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityJumpNotify.rot)
  return rot_;
}
inline ::proto::Vector* EntityJumpNotify::release_rot() {
  // @@protoc_insertion_point(field_release:proto.EntityJumpNotify.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
inline void EntityJumpNotify::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityJumpNotify.rot)
}

// .proto.Vector pos = 10;
inline bool EntityJumpNotify::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void EntityJumpNotify::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& EntityJumpNotify::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.EntityJumpNotify.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* EntityJumpNotify::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityJumpNotify.pos)
  return pos_;
}
inline ::proto::Vector* EntityJumpNotify::release_pos() {
  // @@protoc_insertion_point(field_release:proto.EntityJumpNotify.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void EntityJumpNotify::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityJumpNotify.pos)
}

// uint32 entity_id = 12;
inline void EntityJumpNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityJumpNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityJumpNotify.entity_id)
  return entity_id_;
}
inline void EntityJumpNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityJumpNotify.entity_id)
}

// -------------------------------------------------------------------

// GetSceneAreaReq

// uint32 scene_id = 4;
inline void GetSceneAreaReq::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 GetSceneAreaReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.GetSceneAreaReq.scene_id)
  return scene_id_;
}
inline void GetSceneAreaReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetSceneAreaReq.scene_id)
}

// uint32 belong_uid = 7;
inline void GetSceneAreaReq::clear_belong_uid() {
  belong_uid_ = 0u;
}
inline ::google::protobuf::uint32 GetSceneAreaReq::belong_uid() const {
  // @@protoc_insertion_point(field_get:proto.GetSceneAreaReq.belong_uid)
  return belong_uid_;
}
inline void GetSceneAreaReq::set_belong_uid(::google::protobuf::uint32 value) {
  
  belong_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetSceneAreaReq.belong_uid)
}

// -------------------------------------------------------------------

// GetSceneAreaRsp

// int32 retcode = 7;
inline void GetSceneAreaRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetSceneAreaRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetSceneAreaRsp.retcode)
  return retcode_;
}
inline void GetSceneAreaRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetSceneAreaRsp.retcode)
}

// repeated .proto.CityInfo city_info_list = 13;
inline int GetSceneAreaRsp::city_info_list_size() const {
  return city_info_list_.size();
}
inline void GetSceneAreaRsp::clear_city_info_list() {
  city_info_list_.Clear();
}
inline const ::proto::CityInfo& GetSceneAreaRsp::city_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetSceneAreaRsp.city_info_list)
  return city_info_list_.Get(index);
}
inline ::proto::CityInfo* GetSceneAreaRsp::mutable_city_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetSceneAreaRsp.city_info_list)
  return city_info_list_.Mutable(index);
}
inline ::proto::CityInfo* GetSceneAreaRsp::add_city_info_list() {
  // @@protoc_insertion_point(field_add:proto.GetSceneAreaRsp.city_info_list)
  return city_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::CityInfo >*
GetSceneAreaRsp::mutable_city_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetSceneAreaRsp.city_info_list)
  return &city_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::CityInfo >&
GetSceneAreaRsp::city_info_list() const {
  // @@protoc_insertion_point(field_list:proto.GetSceneAreaRsp.city_info_list)
  return city_info_list_;
}

// uint32 scene_id = 15;
inline void GetSceneAreaRsp::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 GetSceneAreaRsp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.GetSceneAreaRsp.scene_id)
  return scene_id_;
}
inline void GetSceneAreaRsp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetSceneAreaRsp.scene_id)
}

// repeated uint32 area_id_list = 9;
inline int GetSceneAreaRsp::area_id_list_size() const {
  return area_id_list_.size();
}
inline void GetSceneAreaRsp::clear_area_id_list() {
  area_id_list_.Clear();
}
inline ::google::protobuf::uint32 GetSceneAreaRsp::area_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetSceneAreaRsp.area_id_list)
  return area_id_list_.Get(index);
}
inline void GetSceneAreaRsp::set_area_id_list(int index, ::google::protobuf::uint32 value) {
  area_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetSceneAreaRsp.area_id_list)
}
inline void GetSceneAreaRsp::add_area_id_list(::google::protobuf::uint32 value) {
  area_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetSceneAreaRsp.area_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetSceneAreaRsp::area_id_list() const {
  // @@protoc_insertion_point(field_list:proto.GetSceneAreaRsp.area_id_list)
  return area_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetSceneAreaRsp::mutable_area_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetSceneAreaRsp.area_id_list)
  return &area_id_list_;
}

// -------------------------------------------------------------------

// SceneAreaUnlockNotify

// repeated uint32 area_list = 10;
inline int SceneAreaUnlockNotify::area_list_size() const {
  return area_list_.size();
}
inline void SceneAreaUnlockNotify::clear_area_list() {
  area_list_.Clear();
}
inline ::google::protobuf::uint32 SceneAreaUnlockNotify::area_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAreaUnlockNotify.area_list)
  return area_list_.Get(index);
}
inline void SceneAreaUnlockNotify::set_area_list(int index, ::google::protobuf::uint32 value) {
  area_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneAreaUnlockNotify.area_list)
}
inline void SceneAreaUnlockNotify::add_area_list(::google::protobuf::uint32 value) {
  area_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneAreaUnlockNotify.area_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneAreaUnlockNotify::area_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAreaUnlockNotify.area_list)
  return area_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneAreaUnlockNotify::mutable_area_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAreaUnlockNotify.area_list)
  return &area_list_;
}

// uint32 scene_id = 9;
inline void SceneAreaUnlockNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneAreaUnlockNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneAreaUnlockNotify.scene_id)
  return scene_id_;
}
inline void SceneAreaUnlockNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAreaUnlockNotify.scene_id)
}

// -------------------------------------------------------------------

// SceneEntityDrownReq

// uint32 entity_id = 10;
inline void SceneEntityDrownReq::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityDrownReq::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityDrownReq.entity_id)
  return entity_id_;
}
inline void SceneEntityDrownReq::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityDrownReq.entity_id)
}

// -------------------------------------------------------------------

// SceneEntityDrownRsp

// int32 retcode = 8;
inline void SceneEntityDrownRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SceneEntityDrownRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityDrownRsp.retcode)
  return retcode_;
}
inline void SceneEntityDrownRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityDrownRsp.retcode)
}

// uint32 entity_id = 11;
inline void SceneEntityDrownRsp::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityDrownRsp::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityDrownRsp.entity_id)
  return entity_id_;
}
inline void SceneEntityDrownRsp::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityDrownRsp.entity_id)
}

// -------------------------------------------------------------------

// SceneCreateEntityReq

// .proto.CreateEntityInfo entity = 1;
inline bool SceneCreateEntityReq::has_entity() const {
  return this != internal_default_instance() && entity_ != NULL;
}
inline void SceneCreateEntityReq::clear_entity() {
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) delete entity_;
  entity_ = NULL;
}
inline const ::proto::CreateEntityInfo& SceneCreateEntityReq::entity() const {
  const ::proto::CreateEntityInfo* p = entity_;
  // @@protoc_insertion_point(field_get:proto.SceneCreateEntityReq.entity)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CreateEntityInfo*>(
      &::proto::_CreateEntityInfo_default_instance_);
}
inline ::proto::CreateEntityInfo* SceneCreateEntityReq::mutable_entity() {
  
  if (entity_ == NULL) {
    entity_ = new ::proto::CreateEntityInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneCreateEntityReq.entity)
  return entity_;
}
inline ::proto::CreateEntityInfo* SceneCreateEntityReq::release_entity() {
  // @@protoc_insertion_point(field_release:proto.SceneCreateEntityReq.entity)
  
  ::proto::CreateEntityInfo* temp = entity_;
  entity_ = NULL;
  return temp;
}
inline void SceneCreateEntityReq::set_allocated_entity(::proto::CreateEntityInfo* entity) {
  delete entity_;
  entity_ = entity;
  if (entity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneCreateEntityReq.entity)
}

// bool is_destroy_when_disconnect = 10;
inline void SceneCreateEntityReq::clear_is_destroy_when_disconnect() {
  is_destroy_when_disconnect_ = false;
}
inline bool SceneCreateEntityReq::is_destroy_when_disconnect() const {
  // @@protoc_insertion_point(field_get:proto.SceneCreateEntityReq.is_destroy_when_disconnect)
  return is_destroy_when_disconnect_;
}
inline void SceneCreateEntityReq::set_is_destroy_when_disconnect(bool value) {
  
  is_destroy_when_disconnect_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneCreateEntityReq.is_destroy_when_disconnect)
}

// .proto.CreateReason reason = 3;
inline void SceneCreateEntityReq::clear_reason() {
  reason_ = 0;
}
inline ::proto::CreateReason SceneCreateEntityReq::reason() const {
  // @@protoc_insertion_point(field_get:proto.SceneCreateEntityReq.reason)
  return static_cast< ::proto::CreateReason >(reason_);
}
inline void SceneCreateEntityReq::set_reason(::proto::CreateReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneCreateEntityReq.reason)
}

// -------------------------------------------------------------------

// SceneCreateEntityRsp

// int32 retcode = 14;
inline void SceneCreateEntityRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SceneCreateEntityRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneCreateEntityRsp.retcode)
  return retcode_;
}
inline void SceneCreateEntityRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneCreateEntityRsp.retcode)
}

// uint32 entity_id = 1;
inline void SceneCreateEntityRsp::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneCreateEntityRsp::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneCreateEntityRsp.entity_id)
  return entity_id_;
}
inline void SceneCreateEntityRsp::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneCreateEntityRsp.entity_id)
}

// .proto.CreateEntityInfo entity = 10;
inline bool SceneCreateEntityRsp::has_entity() const {
  return this != internal_default_instance() && entity_ != NULL;
}
inline void SceneCreateEntityRsp::clear_entity() {
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) delete entity_;
  entity_ = NULL;
}
inline const ::proto::CreateEntityInfo& SceneCreateEntityRsp::entity() const {
  const ::proto::CreateEntityInfo* p = entity_;
  // @@protoc_insertion_point(field_get:proto.SceneCreateEntityRsp.entity)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CreateEntityInfo*>(
      &::proto::_CreateEntityInfo_default_instance_);
}
inline ::proto::CreateEntityInfo* SceneCreateEntityRsp::mutable_entity() {
  
  if (entity_ == NULL) {
    entity_ = new ::proto::CreateEntityInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneCreateEntityRsp.entity)
  return entity_;
}
inline ::proto::CreateEntityInfo* SceneCreateEntityRsp::release_entity() {
  // @@protoc_insertion_point(field_release:proto.SceneCreateEntityRsp.entity)
  
  ::proto::CreateEntityInfo* temp = entity_;
  entity_ = NULL;
  return temp;
}
inline void SceneCreateEntityRsp::set_allocated_entity(::proto::CreateEntityInfo* entity) {
  delete entity_;
  entity_ = entity;
  if (entity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneCreateEntityRsp.entity)
}

// -------------------------------------------------------------------

// SceneDestroyEntityReq

// uint32 entity_id = 7;
inline void SceneDestroyEntityReq::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneDestroyEntityReq::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneDestroyEntityReq.entity_id)
  return entity_id_;
}
inline void SceneDestroyEntityReq::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneDestroyEntityReq.entity_id)
}

// -------------------------------------------------------------------

// SceneDestroyEntityRsp

// int32 retcode = 14;
inline void SceneDestroyEntityRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SceneDestroyEntityRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneDestroyEntityRsp.retcode)
  return retcode_;
}
inline void SceneDestroyEntityRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneDestroyEntityRsp.retcode)
}

// uint32 entity_id = 7;
inline void SceneDestroyEntityRsp::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneDestroyEntityRsp::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneDestroyEntityRsp.entity_id)
  return entity_id_;
}
inline void SceneDestroyEntityRsp::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneDestroyEntityRsp.entity_id)
}

// -------------------------------------------------------------------

// SceneForceUnlockNotify

// bool is_add = 10;
inline void SceneForceUnlockNotify::clear_is_add() {
  is_add_ = false;
}
inline bool SceneForceUnlockNotify::is_add() const {
  // @@protoc_insertion_point(field_get:proto.SceneForceUnlockNotify.is_add)
  return is_add_;
}
inline void SceneForceUnlockNotify::set_is_add(bool value) {
  
  is_add_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneForceUnlockNotify.is_add)
}

// repeated uint32 force_id_list = 2;
inline int SceneForceUnlockNotify::force_id_list_size() const {
  return force_id_list_.size();
}
inline void SceneForceUnlockNotify::clear_force_id_list() {
  force_id_list_.Clear();
}
inline ::google::protobuf::uint32 SceneForceUnlockNotify::force_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneForceUnlockNotify.force_id_list)
  return force_id_list_.Get(index);
}
inline void SceneForceUnlockNotify::set_force_id_list(int index, ::google::protobuf::uint32 value) {
  force_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneForceUnlockNotify.force_id_list)
}
inline void SceneForceUnlockNotify::add_force_id_list(::google::protobuf::uint32 value) {
  force_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneForceUnlockNotify.force_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneForceUnlockNotify::force_id_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneForceUnlockNotify.force_id_list)
  return force_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneForceUnlockNotify::mutable_force_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneForceUnlockNotify.force_id_list)
  return &force_id_list_;
}

// -------------------------------------------------------------------

// SceneForceLockNotify

// repeated uint32 force_id_list = 9;
inline int SceneForceLockNotify::force_id_list_size() const {
  return force_id_list_.size();
}
inline void SceneForceLockNotify::clear_force_id_list() {
  force_id_list_.Clear();
}
inline ::google::protobuf::uint32 SceneForceLockNotify::force_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneForceLockNotify.force_id_list)
  return force_id_list_.Get(index);
}
inline void SceneForceLockNotify::set_force_id_list(int index, ::google::protobuf::uint32 value) {
  force_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneForceLockNotify.force_id_list)
}
inline void SceneForceLockNotify::add_force_id_list(::google::protobuf::uint32 value) {
  force_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneForceLockNotify.force_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneForceLockNotify::force_id_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneForceLockNotify.force_id_list)
  return force_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneForceLockNotify::mutable_force_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneForceLockNotify.force_id_list)
  return &force_id_list_;
}

// -------------------------------------------------------------------

// EnterWorldAreaReq

// uint32 area_type = 8;
inline void EnterWorldAreaReq::clear_area_type() {
  area_type_ = 0u;
}
inline ::google::protobuf::uint32 EnterWorldAreaReq::area_type() const {
  // @@protoc_insertion_point(field_get:proto.EnterWorldAreaReq.area_type)
  return area_type_;
}
inline void EnterWorldAreaReq::set_area_type(::google::protobuf::uint32 value) {
  
  area_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterWorldAreaReq.area_type)
}

// uint32 area_id = 1;
inline void EnterWorldAreaReq::clear_area_id() {
  area_id_ = 0u;
}
inline ::google::protobuf::uint32 EnterWorldAreaReq::area_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterWorldAreaReq.area_id)
  return area_id_;
}
inline void EnterWorldAreaReq::set_area_id(::google::protobuf::uint32 value) {
  
  area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterWorldAreaReq.area_id)
}

// -------------------------------------------------------------------

// EnterWorldAreaRsp

// uint32 area_type = 1;
inline void EnterWorldAreaRsp::clear_area_type() {
  area_type_ = 0u;
}
inline ::google::protobuf::uint32 EnterWorldAreaRsp::area_type() const {
  // @@protoc_insertion_point(field_get:proto.EnterWorldAreaRsp.area_type)
  return area_type_;
}
inline void EnterWorldAreaRsp::set_area_type(::google::protobuf::uint32 value) {
  
  area_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterWorldAreaRsp.area_type)
}

// uint32 area_id = 7;
inline void EnterWorldAreaRsp::clear_area_id() {
  area_id_ = 0u;
}
inline ::google::protobuf::uint32 EnterWorldAreaRsp::area_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterWorldAreaRsp.area_id)
  return area_id_;
}
inline void EnterWorldAreaRsp::set_area_id(::google::protobuf::uint32 value) {
  
  area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterWorldAreaRsp.area_id)
}

// int32 retcode = 9;
inline void EnterWorldAreaRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 EnterWorldAreaRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.EnterWorldAreaRsp.retcode)
  return retcode_;
}
inline void EnterWorldAreaRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterWorldAreaRsp.retcode)
}

// -------------------------------------------------------------------

// EntityForceSyncReq

// uint32 room_id = 1;
inline void EntityForceSyncReq::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityForceSyncReq::room_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityForceSyncReq.room_id)
  return room_id_;
}
inline void EntityForceSyncReq::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityForceSyncReq.room_id)
}

// .proto.MotionInfo motion_info = 11;
inline bool EntityForceSyncReq::has_motion_info() const {
  return this != internal_default_instance() && motion_info_ != NULL;
}
inline void EntityForceSyncReq::clear_motion_info() {
  if (GetArenaNoVirtual() == NULL && motion_info_ != NULL) delete motion_info_;
  motion_info_ = NULL;
}
inline const ::proto::MotionInfo& EntityForceSyncReq::motion_info() const {
  const ::proto::MotionInfo* p = motion_info_;
  // @@protoc_insertion_point(field_get:proto.EntityForceSyncReq.motion_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MotionInfo*>(
      &::proto::_MotionInfo_default_instance_);
}
inline ::proto::MotionInfo* EntityForceSyncReq::mutable_motion_info() {
  
  if (motion_info_ == NULL) {
    motion_info_ = new ::proto::MotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityForceSyncReq.motion_info)
  return motion_info_;
}
inline ::proto::MotionInfo* EntityForceSyncReq::release_motion_info() {
  // @@protoc_insertion_point(field_release:proto.EntityForceSyncReq.motion_info)
  
  ::proto::MotionInfo* temp = motion_info_;
  motion_info_ = NULL;
  return temp;
}
inline void EntityForceSyncReq::set_allocated_motion_info(::proto::MotionInfo* motion_info) {
  delete motion_info_;
  motion_info_ = motion_info;
  if (motion_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityForceSyncReq.motion_info)
}

// uint32 entity_id = 13;
inline void EntityForceSyncReq::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityForceSyncReq::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityForceSyncReq.entity_id)
  return entity_id_;
}
inline void EntityForceSyncReq::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityForceSyncReq.entity_id)
}

// uint32 scene_time = 12;
inline void EntityForceSyncReq::clear_scene_time() {
  scene_time_ = 0u;
}
inline ::google::protobuf::uint32 EntityForceSyncReq::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.EntityForceSyncReq.scene_time)
  return scene_time_;
}
inline void EntityForceSyncReq::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityForceSyncReq.scene_time)
}

// -------------------------------------------------------------------

// EntityForceSyncRsp

// uint32 scene_time = 14;
inline void EntityForceSyncRsp::clear_scene_time() {
  scene_time_ = 0u;
}
inline ::google::protobuf::uint32 EntityForceSyncRsp::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.EntityForceSyncRsp.scene_time)
  return scene_time_;
}
inline void EntityForceSyncRsp::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityForceSyncRsp.scene_time)
}

// uint32 entity_id = 6;
inline void EntityForceSyncRsp::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityForceSyncRsp::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityForceSyncRsp.entity_id)
  return entity_id_;
}
inline void EntityForceSyncRsp::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityForceSyncRsp.entity_id)
}

// .proto.MotionInfo fail_motion = 8;
inline bool EntityForceSyncRsp::has_fail_motion() const {
  return this != internal_default_instance() && fail_motion_ != NULL;
}
inline void EntityForceSyncRsp::clear_fail_motion() {
  if (GetArenaNoVirtual() == NULL && fail_motion_ != NULL) delete fail_motion_;
  fail_motion_ = NULL;
}
inline const ::proto::MotionInfo& EntityForceSyncRsp::fail_motion() const {
  const ::proto::MotionInfo* p = fail_motion_;
  // @@protoc_insertion_point(field_get:proto.EntityForceSyncRsp.fail_motion)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MotionInfo*>(
      &::proto::_MotionInfo_default_instance_);
}
inline ::proto::MotionInfo* EntityForceSyncRsp::mutable_fail_motion() {
  
  if (fail_motion_ == NULL) {
    fail_motion_ = new ::proto::MotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityForceSyncRsp.fail_motion)
  return fail_motion_;
}
inline ::proto::MotionInfo* EntityForceSyncRsp::release_fail_motion() {
  // @@protoc_insertion_point(field_release:proto.EntityForceSyncRsp.fail_motion)
  
  ::proto::MotionInfo* temp = fail_motion_;
  fail_motion_ = NULL;
  return temp;
}
inline void EntityForceSyncRsp::set_allocated_fail_motion(::proto::MotionInfo* fail_motion) {
  delete fail_motion_;
  fail_motion_ = fail_motion;
  if (fail_motion) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityForceSyncRsp.fail_motion)
}

// int32 retcode = 4;
inline void EntityForceSyncRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 EntityForceSyncRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.EntityForceSyncRsp.retcode)
  return retcode_;
}
inline void EntityForceSyncRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityForceSyncRsp.retcode)
}

// -------------------------------------------------------------------

// GetAreaExplorePointReq

// repeated uint32 area_id_list = 14;
inline int GetAreaExplorePointReq::area_id_list_size() const {
  return area_id_list_.size();
}
inline void GetAreaExplorePointReq::clear_area_id_list() {
  area_id_list_.Clear();
}
inline ::google::protobuf::uint32 GetAreaExplorePointReq::area_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetAreaExplorePointReq.area_id_list)
  return area_id_list_.Get(index);
}
inline void GetAreaExplorePointReq::set_area_id_list(int index, ::google::protobuf::uint32 value) {
  area_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetAreaExplorePointReq.area_id_list)
}
inline void GetAreaExplorePointReq::add_area_id_list(::google::protobuf::uint32 value) {
  area_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetAreaExplorePointReq.area_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetAreaExplorePointReq::area_id_list() const {
  // @@protoc_insertion_point(field_list:proto.GetAreaExplorePointReq.area_id_list)
  return area_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetAreaExplorePointReq::mutable_area_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetAreaExplorePointReq.area_id_list)
  return &area_id_list_;
}

// -------------------------------------------------------------------

// GetAreaExplorePointRsp

// int32 retcode = 8;
inline void GetAreaExplorePointRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetAreaExplorePointRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetAreaExplorePointRsp.retcode)
  return retcode_;
}
inline void GetAreaExplorePointRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetAreaExplorePointRsp.retcode)
}

// repeated uint32 area_id_list = 11;
inline int GetAreaExplorePointRsp::area_id_list_size() const {
  return area_id_list_.size();
}
inline void GetAreaExplorePointRsp::clear_area_id_list() {
  area_id_list_.Clear();
}
inline ::google::protobuf::uint32 GetAreaExplorePointRsp::area_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetAreaExplorePointRsp.area_id_list)
  return area_id_list_.Get(index);
}
inline void GetAreaExplorePointRsp::set_area_id_list(int index, ::google::protobuf::uint32 value) {
  area_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetAreaExplorePointRsp.area_id_list)
}
inline void GetAreaExplorePointRsp::add_area_id_list(::google::protobuf::uint32 value) {
  area_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetAreaExplorePointRsp.area_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetAreaExplorePointRsp::area_id_list() const {
  // @@protoc_insertion_point(field_list:proto.GetAreaExplorePointRsp.area_id_list)
  return area_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetAreaExplorePointRsp::mutable_area_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetAreaExplorePointRsp.area_id_list)
  return &area_id_list_;
}

// repeated uint32 explore_point_list = 4;
inline int GetAreaExplorePointRsp::explore_point_list_size() const {
  return explore_point_list_.size();
}
inline void GetAreaExplorePointRsp::clear_explore_point_list() {
  explore_point_list_.Clear();
}
inline ::google::protobuf::uint32 GetAreaExplorePointRsp::explore_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetAreaExplorePointRsp.explore_point_list)
  return explore_point_list_.Get(index);
}
inline void GetAreaExplorePointRsp::set_explore_point_list(int index, ::google::protobuf::uint32 value) {
  explore_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetAreaExplorePointRsp.explore_point_list)
}
inline void GetAreaExplorePointRsp::add_explore_point_list(::google::protobuf::uint32 value) {
  explore_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetAreaExplorePointRsp.explore_point_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetAreaExplorePointRsp::explore_point_list() const {
  // @@protoc_insertion_point(field_list:proto.GetAreaExplorePointRsp.explore_point_list)
  return explore_point_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetAreaExplorePointRsp::mutable_explore_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetAreaExplorePointRsp.explore_point_list)
  return &explore_point_list_;
}

// -------------------------------------------------------------------

// ClientTransmitReq

// uint32 scene_id = 2;
inline void ClientTransmitReq::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 ClientTransmitReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientTransmitReq.scene_id)
  return scene_id_;
}
inline void ClientTransmitReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientTransmitReq.scene_id)
}

// .proto.TransmitReason reason = 14;
inline void ClientTransmitReq::clear_reason() {
  reason_ = 0;
}
inline ::proto::TransmitReason ClientTransmitReq::reason() const {
  // @@protoc_insertion_point(field_get:proto.ClientTransmitReq.reason)
  return static_cast< ::proto::TransmitReason >(reason_);
}
inline void ClientTransmitReq::set_reason(::proto::TransmitReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientTransmitReq.reason)
}

// .proto.Vector pos = 1;
inline bool ClientTransmitReq::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void ClientTransmitReq::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& ClientTransmitReq::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.ClientTransmitReq.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* ClientTransmitReq::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.ClientTransmitReq.pos)
  return pos_;
}
inline ::proto::Vector* ClientTransmitReq::release_pos() {
  // @@protoc_insertion_point(field_release:proto.ClientTransmitReq.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void ClientTransmitReq::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ClientTransmitReq.pos)
}

// .proto.Vector rot = 9;
inline bool ClientTransmitReq::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
inline void ClientTransmitReq::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
inline const ::proto::Vector& ClientTransmitReq::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.ClientTransmitReq.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* ClientTransmitReq::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.ClientTransmitReq.rot)
  return rot_;
}
inline ::proto::Vector* ClientTransmitReq::release_rot() {
  // @@protoc_insertion_point(field_release:proto.ClientTransmitReq.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
inline void ClientTransmitReq::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ClientTransmitReq.rot)
}

// -------------------------------------------------------------------

// ClientTransmitRsp

// .proto.TransmitReason reason = 3;
inline void ClientTransmitRsp::clear_reason() {
  reason_ = 0;
}
inline ::proto::TransmitReason ClientTransmitRsp::reason() const {
  // @@protoc_insertion_point(field_get:proto.ClientTransmitRsp.reason)
  return static_cast< ::proto::TransmitReason >(reason_);
}
inline void ClientTransmitRsp::set_reason(::proto::TransmitReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientTransmitRsp.reason)
}

// int32 retcode = 9;
inline void ClientTransmitRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ClientTransmitRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ClientTransmitRsp.retcode)
  return retcode_;
}
inline void ClientTransmitRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientTransmitRsp.retcode)
}

// -------------------------------------------------------------------

// EnterSceneWeatherAreaNotify

// uint32 weather_gadget_id = 13;
inline void EnterSceneWeatherAreaNotify::clear_weather_gadget_id() {
  weather_gadget_id_ = 0u;
}
inline ::google::protobuf::uint32 EnterSceneWeatherAreaNotify::weather_gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterSceneWeatherAreaNotify.weather_gadget_id)
  return weather_gadget_id_;
}
inline void EnterSceneWeatherAreaNotify::set_weather_gadget_id(::google::protobuf::uint32 value) {
  
  weather_gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterSceneWeatherAreaNotify.weather_gadget_id)
}

// -------------------------------------------------------------------

// ExitSceneWeatherAreaNotify

// uint32 weather_gadget_id = 2;
inline void ExitSceneWeatherAreaNotify::clear_weather_gadget_id() {
  weather_gadget_id_ = 0u;
}
inline ::google::protobuf::uint32 ExitSceneWeatherAreaNotify::weather_gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.ExitSceneWeatherAreaNotify.weather_gadget_id)
  return weather_gadget_id_;
}
inline void ExitSceneWeatherAreaNotify::set_weather_gadget_id(::google::protobuf::uint32 value) {
  
  weather_gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ExitSceneWeatherAreaNotify.weather_gadget_id)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SceneAreaWeatherNotify

// uint32 weather_area_id = 1;
inline void SceneAreaWeatherNotify::clear_weather_area_id() {
  weather_area_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneAreaWeatherNotify::weather_area_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneAreaWeatherNotify.weather_area_id)
  return weather_area_id_;
}
inline void SceneAreaWeatherNotify::set_weather_area_id(::google::protobuf::uint32 value) {
  
  weather_area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAreaWeatherNotify.weather_area_id)
}

// uint32 weather_gadget_id = 9;
inline void SceneAreaWeatherNotify::clear_weather_gadget_id() {
  weather_gadget_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneAreaWeatherNotify::weather_gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneAreaWeatherNotify.weather_gadget_id)
  return weather_gadget_id_;
}
inline void SceneAreaWeatherNotify::set_weather_gadget_id(::google::protobuf::uint32 value) {
  
  weather_gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAreaWeatherNotify.weather_gadget_id)
}

// uint32 climate_type = 14;
inline void SceneAreaWeatherNotify::clear_climate_type() {
  climate_type_ = 0u;
}
inline ::google::protobuf::uint32 SceneAreaWeatherNotify::climate_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneAreaWeatherNotify.climate_type)
  return climate_type_;
}
inline void SceneAreaWeatherNotify::set_climate_type(::google::protobuf::uint32 value) {
  
  climate_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAreaWeatherNotify.climate_type)
}

// float trans_duration = 15;
inline void SceneAreaWeatherNotify::clear_trans_duration() {
  trans_duration_ = 0;
}
inline float SceneAreaWeatherNotify::trans_duration() const {
  // @@protoc_insertion_point(field_get:proto.SceneAreaWeatherNotify.trans_duration)
  return trans_duration_;
}
inline void SceneAreaWeatherNotify::set_trans_duration(float value) {
  
  trans_duration_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAreaWeatherNotify.trans_duration)
}

// map<uint32, string> weather_value_map = 10;
inline int SceneAreaWeatherNotify::weather_value_map_size() const {
  return weather_value_map_.size();
}
inline void SceneAreaWeatherNotify::clear_weather_value_map() {
  weather_value_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >&
SceneAreaWeatherNotify::weather_value_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneAreaWeatherNotify.weather_value_map)
  return weather_value_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >*
SceneAreaWeatherNotify::mutable_weather_value_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneAreaWeatherNotify.weather_value_map)
  return weather_value_map_.MutableMap();
}

// -------------------------------------------------------------------

// ScenePlayerInfo

// uint32 scene_id = 10;
inline void ScenePlayerInfo::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 ScenePlayerInfo::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerInfo.scene_id)
  return scene_id_;
}
inline void ScenePlayerInfo::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ScenePlayerInfo.scene_id)
}

// uint32 peer_id = 6;
inline void ScenePlayerInfo::clear_peer_id() {
  peer_id_ = 0u;
}
inline ::google::protobuf::uint32 ScenePlayerInfo::peer_id() const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerInfo.peer_id)
  return peer_id_;
}
inline void ScenePlayerInfo::set_peer_id(::google::protobuf::uint32 value) {
  
  peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ScenePlayerInfo.peer_id)
}

// .proto.OnlinePlayerInfo online_player_info = 13;
inline bool ScenePlayerInfo::has_online_player_info() const {
  return this != internal_default_instance() && online_player_info_ != NULL;
}
inline void ScenePlayerInfo::clear_online_player_info() {
  if (GetArenaNoVirtual() == NULL && online_player_info_ != NULL) delete online_player_info_;
  online_player_info_ = NULL;
}
inline const ::proto::OnlinePlayerInfo& ScenePlayerInfo::online_player_info() const {
  const ::proto::OnlinePlayerInfo* p = online_player_info_;
  // @@protoc_insertion_point(field_get:proto.ScenePlayerInfo.online_player_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::OnlinePlayerInfo*>(
      &::proto::_OnlinePlayerInfo_default_instance_);
}
inline ::proto::OnlinePlayerInfo* ScenePlayerInfo::mutable_online_player_info() {
  
  if (online_player_info_ == NULL) {
    online_player_info_ = new ::proto::OnlinePlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerInfo.online_player_info)
  return online_player_info_;
}
inline ::proto::OnlinePlayerInfo* ScenePlayerInfo::release_online_player_info() {
  // @@protoc_insertion_point(field_release:proto.ScenePlayerInfo.online_player_info)
  
  ::proto::OnlinePlayerInfo* temp = online_player_info_;
  online_player_info_ = NULL;
  return temp;
}
inline void ScenePlayerInfo::set_allocated_online_player_info(::proto::OnlinePlayerInfo* online_player_info) {
  delete online_player_info_;
  online_player_info_ = online_player_info;
  if (online_player_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ScenePlayerInfo.online_player_info)
}

// bool is_connected = 2;
inline void ScenePlayerInfo::clear_is_connected() {
  is_connected_ = false;
}
inline bool ScenePlayerInfo::is_connected() const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerInfo.is_connected)
  return is_connected_;
}
inline void ScenePlayerInfo::set_is_connected(bool value) {
  
  is_connected_ = value;
  // @@protoc_insertion_point(field_set:proto.ScenePlayerInfo.is_connected)
}

// string name = 15;
inline void ScenePlayerInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScenePlayerInfo::name() const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerInfo.name)
  return name_.GetNoArena();
}
inline void ScenePlayerInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ScenePlayerInfo.name)
}
#if LANG_CXX11
inline void ScenePlayerInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ScenePlayerInfo.name)
}
#endif
inline void ScenePlayerInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ScenePlayerInfo.name)
}
inline void ScenePlayerInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ScenePlayerInfo.name)
}
inline ::std::string* ScenePlayerInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScenePlayerInfo::release_name() {
  // @@protoc_insertion_point(field_release:proto.ScenePlayerInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScenePlayerInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.ScenePlayerInfo.name)
}

// uint32 uid = 8;
inline void ScenePlayerInfo::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 ScenePlayerInfo::uid() const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerInfo.uid)
  return uid_;
}
inline void ScenePlayerInfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ScenePlayerInfo.uid)
}

// -------------------------------------------------------------------

// ScenePlayerInfoNotify

// repeated .proto.ScenePlayerInfo player_info_list = 5;
inline int ScenePlayerInfoNotify::player_info_list_size() const {
  return player_info_list_.size();
}
inline void ScenePlayerInfoNotify::clear_player_info_list() {
  player_info_list_.Clear();
}
inline const ::proto::ScenePlayerInfo& ScenePlayerInfoNotify::player_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerInfoNotify.player_info_list)
  return player_info_list_.Get(index);
}
inline ::proto::ScenePlayerInfo* ScenePlayerInfoNotify::mutable_player_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerInfoNotify.player_info_list)
  return player_info_list_.Mutable(index);
}
inline ::proto::ScenePlayerInfo* ScenePlayerInfoNotify::add_player_info_list() {
  // @@protoc_insertion_point(field_add:proto.ScenePlayerInfoNotify.player_info_list)
  return player_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ScenePlayerInfo >*
ScenePlayerInfoNotify::mutable_player_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ScenePlayerInfoNotify.player_info_list)
  return &player_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ScenePlayerInfo >&
ScenePlayerInfoNotify::player_info_list() const {
  // @@protoc_insertion_point(field_list:proto.ScenePlayerInfoNotify.player_info_list)
  return player_info_list_;
}

// -------------------------------------------------------------------

// PlayerLocationInfo

// uint32 uid = 15;
inline void PlayerLocationInfo::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLocationInfo::uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLocationInfo.uid)
  return uid_;
}
inline void PlayerLocationInfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLocationInfo.uid)
}

// .proto.Vector pos = 3;
inline bool PlayerLocationInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void PlayerLocationInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& PlayerLocationInfo::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.PlayerLocationInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* PlayerLocationInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerLocationInfo.pos)
  return pos_;
}
inline ::proto::Vector* PlayerLocationInfo::release_pos() {
  // @@protoc_insertion_point(field_release:proto.PlayerLocationInfo.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void PlayerLocationInfo::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLocationInfo.pos)
}

// .proto.Vector rot = 13;
inline bool PlayerLocationInfo::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
inline void PlayerLocationInfo::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
inline const ::proto::Vector& PlayerLocationInfo::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.PlayerLocationInfo.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* PlayerLocationInfo::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerLocationInfo.rot)
  return rot_;
}
inline ::proto::Vector* PlayerLocationInfo::release_rot() {
  // @@protoc_insertion_point(field_release:proto.PlayerLocationInfo.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
inline void PlayerLocationInfo::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLocationInfo.rot)
}

// -------------------------------------------------------------------

// PlayerWorldLocationInfo

// uint32 scene_id = 1;
inline void PlayerWorldLocationInfo::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerWorldLocationInfo::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerWorldLocationInfo.scene_id)
  return scene_id_;
}
inline void PlayerWorldLocationInfo::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerWorldLocationInfo.scene_id)
}

// .proto.PlayerLocationInfo player_loc = 12;
inline bool PlayerWorldLocationInfo::has_player_loc() const {
  return this != internal_default_instance() && player_loc_ != NULL;
}
inline void PlayerWorldLocationInfo::clear_player_loc() {
  if (GetArenaNoVirtual() == NULL && player_loc_ != NULL) delete player_loc_;
  player_loc_ = NULL;
}
inline const ::proto::PlayerLocationInfo& PlayerWorldLocationInfo::player_loc() const {
  const ::proto::PlayerLocationInfo* p = player_loc_;
  // @@protoc_insertion_point(field_get:proto.PlayerWorldLocationInfo.player_loc)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::PlayerLocationInfo*>(
      &::proto::_PlayerLocationInfo_default_instance_);
}
inline ::proto::PlayerLocationInfo* PlayerWorldLocationInfo::mutable_player_loc() {
  
  if (player_loc_ == NULL) {
    player_loc_ = new ::proto::PlayerLocationInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerWorldLocationInfo.player_loc)
  return player_loc_;
}
inline ::proto::PlayerLocationInfo* PlayerWorldLocationInfo::release_player_loc() {
  // @@protoc_insertion_point(field_release:proto.PlayerWorldLocationInfo.player_loc)
  
  ::proto::PlayerLocationInfo* temp = player_loc_;
  player_loc_ = NULL;
  return temp;
}
inline void PlayerWorldLocationInfo::set_allocated_player_loc(::proto::PlayerLocationInfo* player_loc) {
  delete player_loc_;
  player_loc_ = player_loc;
  if (player_loc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerWorldLocationInfo.player_loc)
}

// -------------------------------------------------------------------

// WorldPlayerLocationNotify

// repeated .proto.PlayerWorldLocationInfo player_world_loc_list = 8;
inline int WorldPlayerLocationNotify::player_world_loc_list_size() const {
  return player_world_loc_list_.size();
}
inline void WorldPlayerLocationNotify::clear_player_world_loc_list() {
  player_world_loc_list_.Clear();
}
inline const ::proto::PlayerWorldLocationInfo& WorldPlayerLocationNotify::player_world_loc_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerLocationNotify.player_world_loc_list)
  return player_world_loc_list_.Get(index);
}
inline ::proto::PlayerWorldLocationInfo* WorldPlayerLocationNotify::mutable_player_world_loc_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.WorldPlayerLocationNotify.player_world_loc_list)
  return player_world_loc_list_.Mutable(index);
}
inline ::proto::PlayerWorldLocationInfo* WorldPlayerLocationNotify::add_player_world_loc_list() {
  // @@protoc_insertion_point(field_add:proto.WorldPlayerLocationNotify.player_world_loc_list)
  return player_world_loc_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::PlayerWorldLocationInfo >*
WorldPlayerLocationNotify::mutable_player_world_loc_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WorldPlayerLocationNotify.player_world_loc_list)
  return &player_world_loc_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::PlayerWorldLocationInfo >&
WorldPlayerLocationNotify::player_world_loc_list() const {
  // @@protoc_insertion_point(field_list:proto.WorldPlayerLocationNotify.player_world_loc_list)
  return player_world_loc_list_;
}

// repeated .proto.PlayerLocationInfo player_loc_list = 15;
inline int WorldPlayerLocationNotify::player_loc_list_size() const {
  return player_loc_list_.size();
}
inline void WorldPlayerLocationNotify::clear_player_loc_list() {
  player_loc_list_.Clear();
}
inline const ::proto::PlayerLocationInfo& WorldPlayerLocationNotify::player_loc_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerLocationNotify.player_loc_list)
  return player_loc_list_.Get(index);
}
inline ::proto::PlayerLocationInfo* WorldPlayerLocationNotify::mutable_player_loc_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.WorldPlayerLocationNotify.player_loc_list)
  return player_loc_list_.Mutable(index);
}
inline ::proto::PlayerLocationInfo* WorldPlayerLocationNotify::add_player_loc_list() {
  // @@protoc_insertion_point(field_add:proto.WorldPlayerLocationNotify.player_loc_list)
  return player_loc_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::PlayerLocationInfo >*
WorldPlayerLocationNotify::mutable_player_loc_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WorldPlayerLocationNotify.player_loc_list)
  return &player_loc_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::PlayerLocationInfo >&
WorldPlayerLocationNotify::player_loc_list() const {
  // @@protoc_insertion_point(field_list:proto.WorldPlayerLocationNotify.player_loc_list)
  return player_loc_list_;
}

// -------------------------------------------------------------------

// BeginCameraSceneLookNotify

// uint32 blend_type = 1154;
inline void BeginCameraSceneLookNotify::clear_blend_type() {
  blend_type_ = 0u;
}
inline ::google::protobuf::uint32 BeginCameraSceneLookNotify::blend_type() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.blend_type)
  return blend_type_;
}
inline void BeginCameraSceneLookNotify::set_blend_type(::google::protobuf::uint32 value) {
  
  blend_type_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.blend_type)
}

// float custom_radius = 7;
inline void BeginCameraSceneLookNotify::clear_custom_radius() {
  custom_radius_ = 0;
}
inline float BeginCameraSceneLookNotify::custom_radius() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.custom_radius)
  return custom_radius_;
}
inline void BeginCameraSceneLookNotify::set_custom_radius(float value) {
  
  custom_radius_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.custom_radius)
}

// bool is_set_screenXY = 5;
inline void BeginCameraSceneLookNotify::clear_is_set_screenxy() {
  is_set_screenxy_ = false;
}
inline bool BeginCameraSceneLookNotify::is_set_screenxy() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.is_set_screenXY)
  return is_set_screenxy_;
}
inline void BeginCameraSceneLookNotify::set_is_set_screenxy(bool value) {
  
  is_set_screenxy_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.is_set_screenXY)
}

// .proto.Vector look_pos = 4;
inline bool BeginCameraSceneLookNotify::has_look_pos() const {
  return this != internal_default_instance() && look_pos_ != NULL;
}
inline void BeginCameraSceneLookNotify::clear_look_pos() {
  if (GetArenaNoVirtual() == NULL && look_pos_ != NULL) delete look_pos_;
  look_pos_ = NULL;
}
inline const ::proto::Vector& BeginCameraSceneLookNotify::look_pos() const {
  const ::proto::Vector* p = look_pos_;
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.look_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* BeginCameraSceneLookNotify::mutable_look_pos() {
  
  if (look_pos_ == NULL) {
    look_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.BeginCameraSceneLookNotify.look_pos)
  return look_pos_;
}
inline ::proto::Vector* BeginCameraSceneLookNotify::release_look_pos() {
  // @@protoc_insertion_point(field_release:proto.BeginCameraSceneLookNotify.look_pos)
  
  ::proto::Vector* temp = look_pos_;
  look_pos_ = NULL;
  return temp;
}
inline void BeginCameraSceneLookNotify::set_allocated_look_pos(::proto::Vector* look_pos) {
  delete look_pos_;
  look_pos_ = look_pos;
  if (look_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.BeginCameraSceneLookNotify.look_pos)
}

// bool is_recover_keep_current = 11;
inline void BeginCameraSceneLookNotify::clear_is_recover_keep_current() {
  is_recover_keep_current_ = false;
}
inline bool BeginCameraSceneLookNotify::is_recover_keep_current() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.is_recover_keep_current)
  return is_recover_keep_current_;
}
inline void BeginCameraSceneLookNotify::set_is_recover_keep_current(bool value) {
  
  is_recover_keep_current_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.is_recover_keep_current)
}

// bool is_abs_follow_pos = 1375;
inline void BeginCameraSceneLookNotify::clear_is_abs_follow_pos() {
  is_abs_follow_pos_ = false;
}
inline bool BeginCameraSceneLookNotify::is_abs_follow_pos() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.is_abs_follow_pos)
  return is_abs_follow_pos_;
}
inline void BeginCameraSceneLookNotify::set_is_abs_follow_pos(bool value) {
  
  is_abs_follow_pos_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.is_abs_follow_pos)
}

// .proto.BeginCameraSceneLookNotify.KeepRotType keep_rot_type = 6;
inline void BeginCameraSceneLookNotify::clear_keep_rot_type() {
  keep_rot_type_ = 0;
}
inline ::proto::BeginCameraSceneLookNotify_KeepRotType BeginCameraSceneLookNotify::keep_rot_type() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.keep_rot_type)
  return static_cast< ::proto::BeginCameraSceneLookNotify_KeepRotType >(keep_rot_type_);
}
inline void BeginCameraSceneLookNotify::set_keep_rot_type(::proto::BeginCameraSceneLookNotify_KeepRotType value) {
  
  keep_rot_type_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.keep_rot_type)
}

// bool is_change_play_mode = 9;
inline void BeginCameraSceneLookNotify::clear_is_change_play_mode() {
  is_change_play_mode_ = false;
}
inline bool BeginCameraSceneLookNotify::is_change_play_mode() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.is_change_play_mode)
  return is_change_play_mode_;
}
inline void BeginCameraSceneLookNotify::set_is_change_play_mode(bool value) {
  
  is_change_play_mode_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.is_change_play_mode)
}

// uint32 disable_protect = 1103;
inline void BeginCameraSceneLookNotify::clear_disable_protect() {
  disable_protect_ = 0u;
}
inline ::google::protobuf::uint32 BeginCameraSceneLookNotify::disable_protect() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.disable_protect)
  return disable_protect_;
}
inline void BeginCameraSceneLookNotify::set_disable_protect(::google::protobuf::uint32 value) {
  
  disable_protect_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.disable_protect)
}

// float screen_y = 15;
inline void BeginCameraSceneLookNotify::clear_screen_y() {
  screen_y_ = 0;
}
inline float BeginCameraSceneLookNotify::screen_y() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.screen_y)
  return screen_y_;
}
inline void BeginCameraSceneLookNotify::set_screen_y(float value) {
  
  screen_y_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.screen_y)
}

// bool is_set_follow_pos = 13;
inline void BeginCameraSceneLookNotify::clear_is_set_follow_pos() {
  is_set_follow_pos_ = false;
}
inline bool BeginCameraSceneLookNotify::is_set_follow_pos() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.is_set_follow_pos)
  return is_set_follow_pos_;
}
inline void BeginCameraSceneLookNotify::set_is_set_follow_pos(bool value) {
  
  is_set_follow_pos_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.is_set_follow_pos)
}

// bool is_force = 12;
inline void BeginCameraSceneLookNotify::clear_is_force() {
  is_force_ = false;
}
inline bool BeginCameraSceneLookNotify::is_force() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.is_force)
  return is_force_;
}
inline void BeginCameraSceneLookNotify::set_is_force(bool value) {
  
  is_force_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.is_force)
}

// float blend_duration = 1758;
inline void BeginCameraSceneLookNotify::clear_blend_duration() {
  blend_duration_ = 0;
}
inline float BeginCameraSceneLookNotify::blend_duration() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.blend_duration)
  return blend_duration_;
}
inline void BeginCameraSceneLookNotify::set_blend_duration(float value) {
  
  blend_duration_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.blend_duration)
}

// uint32 entity_id = 1327;
inline void BeginCameraSceneLookNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 BeginCameraSceneLookNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.entity_id)
  return entity_id_;
}
inline void BeginCameraSceneLookNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.entity_id)
}

// float screen_x = 3;
inline void BeginCameraSceneLookNotify::clear_screen_x() {
  screen_x_ = 0;
}
inline float BeginCameraSceneLookNotify::screen_x() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.screen_x)
  return screen_x_;
}
inline void BeginCameraSceneLookNotify::set_screen_x(float value) {
  
  screen_x_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.screen_x)
}

// bool is_force_walk = 10;
inline void BeginCameraSceneLookNotify::clear_is_force_walk() {
  is_force_walk_ = false;
}
inline bool BeginCameraSceneLookNotify::is_force_walk() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.is_force_walk)
  return is_force_walk_;
}
inline void BeginCameraSceneLookNotify::set_is_force_walk(bool value) {
  
  is_force_walk_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.is_force_walk)
}

// repeated string other_params = 1;
inline int BeginCameraSceneLookNotify::other_params_size() const {
  return other_params_.size();
}
inline void BeginCameraSceneLookNotify::clear_other_params() {
  other_params_.Clear();
}
inline const ::std::string& BeginCameraSceneLookNotify::other_params(int index) const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.other_params)
  return other_params_.Get(index);
}
inline ::std::string* BeginCameraSceneLookNotify::mutable_other_params(int index) {
  // @@protoc_insertion_point(field_mutable:proto.BeginCameraSceneLookNotify.other_params)
  return other_params_.Mutable(index);
}
inline void BeginCameraSceneLookNotify::set_other_params(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.other_params)
  other_params_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void BeginCameraSceneLookNotify::set_other_params(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.other_params)
  other_params_.Mutable(index)->assign(std::move(value));
}
#endif
inline void BeginCameraSceneLookNotify::set_other_params(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  other_params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.BeginCameraSceneLookNotify.other_params)
}
inline void BeginCameraSceneLookNotify::set_other_params(int index, const char* value, size_t size) {
  other_params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.BeginCameraSceneLookNotify.other_params)
}
inline ::std::string* BeginCameraSceneLookNotify::add_other_params() {
  // @@protoc_insertion_point(field_add_mutable:proto.BeginCameraSceneLookNotify.other_params)
  return other_params_.Add();
}
inline void BeginCameraSceneLookNotify::add_other_params(const ::std::string& value) {
  other_params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.BeginCameraSceneLookNotify.other_params)
}
#if LANG_CXX11
inline void BeginCameraSceneLookNotify::add_other_params(::std::string&& value) {
  other_params_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.BeginCameraSceneLookNotify.other_params)
}
#endif
inline void BeginCameraSceneLookNotify::add_other_params(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  other_params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.BeginCameraSceneLookNotify.other_params)
}
inline void BeginCameraSceneLookNotify::add_other_params(const char* value, size_t size) {
  other_params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.BeginCameraSceneLookNotify.other_params)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BeginCameraSceneLookNotify::other_params() const {
  // @@protoc_insertion_point(field_list:proto.BeginCameraSceneLookNotify.other_params)
  return other_params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BeginCameraSceneLookNotify::mutable_other_params() {
  // @@protoc_insertion_point(field_mutable_list:proto.BeginCameraSceneLookNotify.other_params)
  return &other_params_;
}

// .proto.Vector follow_pos = 8;
inline bool BeginCameraSceneLookNotify::has_follow_pos() const {
  return this != internal_default_instance() && follow_pos_ != NULL;
}
inline void BeginCameraSceneLookNotify::clear_follow_pos() {
  if (GetArenaNoVirtual() == NULL && follow_pos_ != NULL) delete follow_pos_;
  follow_pos_ = NULL;
}
inline const ::proto::Vector& BeginCameraSceneLookNotify::follow_pos() const {
  const ::proto::Vector* p = follow_pos_;
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.follow_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* BeginCameraSceneLookNotify::mutable_follow_pos() {
  
  if (follow_pos_ == NULL) {
    follow_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.BeginCameraSceneLookNotify.follow_pos)
  return follow_pos_;
}
inline ::proto::Vector* BeginCameraSceneLookNotify::release_follow_pos() {
  // @@protoc_insertion_point(field_release:proto.BeginCameraSceneLookNotify.follow_pos)
  
  ::proto::Vector* temp = follow_pos_;
  follow_pos_ = NULL;
  return temp;
}
inline void BeginCameraSceneLookNotify::set_allocated_follow_pos(::proto::Vector* follow_pos) {
  delete follow_pos_;
  follow_pos_ = follow_pos;
  if (follow_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.BeginCameraSceneLookNotify.follow_pos)
}

// bool is_allow_input = 2;
inline void BeginCameraSceneLookNotify::clear_is_allow_input() {
  is_allow_input_ = false;
}
inline bool BeginCameraSceneLookNotify::is_allow_input() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.is_allow_input)
  return is_allow_input_;
}
inline void BeginCameraSceneLookNotify::set_is_allow_input(bool value) {
  
  is_allow_input_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.is_allow_input)
}

// float duration = 14;
inline void BeginCameraSceneLookNotify::clear_duration() {
  duration_ = 0;
}
inline float BeginCameraSceneLookNotify::duration() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.duration)
  return duration_;
}
inline void BeginCameraSceneLookNotify::set_duration(float value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.duration)
}

// -------------------------------------------------------------------

// EndCameraSceneLookNotify

// -------------------------------------------------------------------

// MarkEntityInMinMapNotify

// .proto.Vector position = 4;
inline bool MarkEntityInMinMapNotify::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
inline void MarkEntityInMinMapNotify::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
inline const ::proto::Vector& MarkEntityInMinMapNotify::position() const {
  const ::proto::Vector* p = position_;
  // @@protoc_insertion_point(field_get:proto.MarkEntityInMinMapNotify.position)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* MarkEntityInMinMapNotify::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MarkEntityInMinMapNotify.position)
  return position_;
}
inline ::proto::Vector* MarkEntityInMinMapNotify::release_position() {
  // @@protoc_insertion_point(field_release:proto.MarkEntityInMinMapNotify.position)
  
  ::proto::Vector* temp = position_;
  position_ = NULL;
  return temp;
}
inline void MarkEntityInMinMapNotify::set_allocated_position(::proto::Vector* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MarkEntityInMinMapNotify.position)
}

// uint32 monster_id = 7;
inline void MarkEntityInMinMapNotify::clear_monster_id() {
  monster_id_ = 0u;
}
inline ::google::protobuf::uint32 MarkEntityInMinMapNotify::monster_id() const {
  // @@protoc_insertion_point(field_get:proto.MarkEntityInMinMapNotify.monster_id)
  return monster_id_;
}
inline void MarkEntityInMinMapNotify::set_monster_id(::google::protobuf::uint32 value) {
  
  monster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkEntityInMinMapNotify.monster_id)
}

// uint32 entity_id = 14;
inline void MarkEntityInMinMapNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 MarkEntityInMinMapNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.MarkEntityInMinMapNotify.entity_id)
  return entity_id_;
}
inline void MarkEntityInMinMapNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkEntityInMinMapNotify.entity_id)
}

// -------------------------------------------------------------------

// UnmarkEntityInMinMapNotify

// uint32 entity_id = 8;
inline void UnmarkEntityInMinMapNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 UnmarkEntityInMinMapNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.UnmarkEntityInMinMapNotify.entity_id)
  return entity_id_;
}
inline void UnmarkEntityInMinMapNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnmarkEntityInMinMapNotify.entity_id)
}

// -------------------------------------------------------------------

// ExecuteGroupTriggerReq

// string source_name = 15;
inline void ExecuteGroupTriggerReq::clear_source_name() {
  source_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecuteGroupTriggerReq::source_name() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGroupTriggerReq.source_name)
  return source_name_.GetNoArena();
}
inline void ExecuteGroupTriggerReq::set_source_name(const ::std::string& value) {
  
  source_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ExecuteGroupTriggerReq.source_name)
}
#if LANG_CXX11
inline void ExecuteGroupTriggerReq::set_source_name(::std::string&& value) {
  
  source_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ExecuteGroupTriggerReq.source_name)
}
#endif
inline void ExecuteGroupTriggerReq::set_source_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  source_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ExecuteGroupTriggerReq.source_name)
}
inline void ExecuteGroupTriggerReq::set_source_name(const char* value, size_t size) {
  
  source_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ExecuteGroupTriggerReq.source_name)
}
inline ::std::string* ExecuteGroupTriggerReq::mutable_source_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.ExecuteGroupTriggerReq.source_name)
  return source_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteGroupTriggerReq::release_source_name() {
  // @@protoc_insertion_point(field_release:proto.ExecuteGroupTriggerReq.source_name)
  
  return source_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteGroupTriggerReq::set_allocated_source_name(::std::string* source_name) {
  if (source_name != NULL) {
    
  } else {
    
  }
  source_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_name);
  // @@protoc_insertion_point(field_set_allocated:proto.ExecuteGroupTriggerReq.source_name)
}

// uint32 target_entity_id = 12;
inline void ExecuteGroupTriggerReq::clear_target_entity_id() {
  target_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 ExecuteGroupTriggerReq::target_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGroupTriggerReq.target_entity_id)
  return target_entity_id_;
}
inline void ExecuteGroupTriggerReq::set_target_entity_id(::google::protobuf::uint32 value) {
  
  target_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGroupTriggerReq.target_entity_id)
}

// int32 param2 = 8;
inline void ExecuteGroupTriggerReq::clear_param2() {
  param2_ = 0;
}
inline ::google::protobuf::int32 ExecuteGroupTriggerReq::param2() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGroupTriggerReq.param2)
  return param2_;
}
inline void ExecuteGroupTriggerReq::set_param2(::google::protobuf::int32 value) {
  
  param2_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGroupTriggerReq.param2)
}

// uint32 source_entity_id = 4;
inline void ExecuteGroupTriggerReq::clear_source_entity_id() {
  source_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 ExecuteGroupTriggerReq::source_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGroupTriggerReq.source_entity_id)
  return source_entity_id_;
}
inline void ExecuteGroupTriggerReq::set_source_entity_id(::google::protobuf::uint32 value) {
  
  source_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGroupTriggerReq.source_entity_id)
}

// int32 param3 = 10;
inline void ExecuteGroupTriggerReq::clear_param3() {
  param3_ = 0;
}
inline ::google::protobuf::int32 ExecuteGroupTriggerReq::param3() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGroupTriggerReq.param3)
  return param3_;
}
inline void ExecuteGroupTriggerReq::set_param3(::google::protobuf::int32 value) {
  
  param3_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGroupTriggerReq.param3)
}

// int32 param1 = 9;
inline void ExecuteGroupTriggerReq::clear_param1() {
  param1_ = 0;
}
inline ::google::protobuf::int32 ExecuteGroupTriggerReq::param1() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGroupTriggerReq.param1)
  return param1_;
}
inline void ExecuteGroupTriggerReq::set_param1(::google::protobuf::int32 value) {
  
  param1_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGroupTriggerReq.param1)
}

// -------------------------------------------------------------------

// ExecuteGroupTriggerRsp

// int32 retcode = 13;
inline void ExecuteGroupTriggerRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ExecuteGroupTriggerRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGroupTriggerRsp.retcode)
  return retcode_;
}
inline void ExecuteGroupTriggerRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGroupTriggerRsp.retcode)
}

// -------------------------------------------------------------------

// LevelupCityReq

// uint32 scene_id = 5;
inline void LevelupCityReq::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 LevelupCityReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.LevelupCityReq.scene_id)
  return scene_id_;
}
inline void LevelupCityReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.LevelupCityReq.scene_id)
}

// uint32 area_id = 3;
inline void LevelupCityReq::clear_area_id() {
  area_id_ = 0u;
}
inline ::google::protobuf::uint32 LevelupCityReq::area_id() const {
  // @@protoc_insertion_point(field_get:proto.LevelupCityReq.area_id)
  return area_id_;
}
inline void LevelupCityReq::set_area_id(::google::protobuf::uint32 value) {
  
  area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.LevelupCityReq.area_id)
}

// uint32 item_num = 14;
inline void LevelupCityReq::clear_item_num() {
  item_num_ = 0u;
}
inline ::google::protobuf::uint32 LevelupCityReq::item_num() const {
  // @@protoc_insertion_point(field_get:proto.LevelupCityReq.item_num)
  return item_num_;
}
inline void LevelupCityReq::set_item_num(::google::protobuf::uint32 value) {
  
  item_num_ = value;
  // @@protoc_insertion_point(field_set:proto.LevelupCityReq.item_num)
}

// -------------------------------------------------------------------

// LevelupCityRsp

// uint32 area_id = 9;
inline void LevelupCityRsp::clear_area_id() {
  area_id_ = 0u;
}
inline ::google::protobuf::uint32 LevelupCityRsp::area_id() const {
  // @@protoc_insertion_point(field_get:proto.LevelupCityRsp.area_id)
  return area_id_;
}
inline void LevelupCityRsp::set_area_id(::google::protobuf::uint32 value) {
  
  area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.LevelupCityRsp.area_id)
}

// int32 retcode = 3;
inline void LevelupCityRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 LevelupCityRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.LevelupCityRsp.retcode)
  return retcode_;
}
inline void LevelupCityRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.LevelupCityRsp.retcode)
}

// uint32 scene_id = 4;
inline void LevelupCityRsp::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 LevelupCityRsp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.LevelupCityRsp.scene_id)
  return scene_id_;
}
inline void LevelupCityRsp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.LevelupCityRsp.scene_id)
}

// .proto.CityInfo city_info = 6;
inline bool LevelupCityRsp::has_city_info() const {
  return this != internal_default_instance() && city_info_ != NULL;
}
inline void LevelupCityRsp::clear_city_info() {
  if (GetArenaNoVirtual() == NULL && city_info_ != NULL) delete city_info_;
  city_info_ = NULL;
}
inline const ::proto::CityInfo& LevelupCityRsp::city_info() const {
  const ::proto::CityInfo* p = city_info_;
  // @@protoc_insertion_point(field_get:proto.LevelupCityRsp.city_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CityInfo*>(
      &::proto::_CityInfo_default_instance_);
}
inline ::proto::CityInfo* LevelupCityRsp::mutable_city_info() {
  
  if (city_info_ == NULL) {
    city_info_ = new ::proto::CityInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.LevelupCityRsp.city_info)
  return city_info_;
}
inline ::proto::CityInfo* LevelupCityRsp::release_city_info() {
  // @@protoc_insertion_point(field_release:proto.LevelupCityRsp.city_info)
  
  ::proto::CityInfo* temp = city_info_;
  city_info_ = NULL;
  return temp;
}
inline void LevelupCityRsp::set_allocated_city_info(::proto::CityInfo* city_info) {
  delete city_info_;
  city_info_ = city_info;
  if (city_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.LevelupCityRsp.city_info)
}

// -------------------------------------------------------------------

// RoutePointChangeInfo

// float wait_time = 6;
inline void RoutePointChangeInfo::clear_wait_time() {
  wait_time_ = 0;
}
inline float RoutePointChangeInfo::wait_time() const {
  // @@protoc_insertion_point(field_get:proto.RoutePointChangeInfo.wait_time)
  return wait_time_;
}
inline void RoutePointChangeInfo::set_wait_time(float value) {
  
  wait_time_ = value;
  // @@protoc_insertion_point(field_set:proto.RoutePointChangeInfo.wait_time)
}

// float target_velocity = 14;
inline void RoutePointChangeInfo::clear_target_velocity() {
  target_velocity_ = 0;
}
inline float RoutePointChangeInfo::target_velocity() const {
  // @@protoc_insertion_point(field_get:proto.RoutePointChangeInfo.target_velocity)
  return target_velocity_;
}
inline void RoutePointChangeInfo::set_target_velocity(float value) {
  
  target_velocity_ = value;
  // @@protoc_insertion_point(field_set:proto.RoutePointChangeInfo.target_velocity)
}

// uint32 point_index = 11;
inline void RoutePointChangeInfo::clear_point_index() {
  point_index_ = 0u;
}
inline ::google::protobuf::uint32 RoutePointChangeInfo::point_index() const {
  // @@protoc_insertion_point(field_get:proto.RoutePointChangeInfo.point_index)
  return point_index_;
}
inline void RoutePointChangeInfo::set_point_index(::google::protobuf::uint32 value) {
  
  point_index_ = value;
  // @@protoc_insertion_point(field_set:proto.RoutePointChangeInfo.point_index)
}

// -------------------------------------------------------------------

// SceneRouteChangeInfo

// bool is_forward = 12;
inline void SceneRouteChangeInfo::clear_is_forward() {
  is_forward_ = false;
}
inline bool SceneRouteChangeInfo::is_forward() const {
  // @@protoc_insertion_point(field_get:proto.SceneRouteChangeInfo.is_forward)
  return is_forward_;
}
inline void SceneRouteChangeInfo::set_is_forward(bool value) {
  
  is_forward_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneRouteChangeInfo.is_forward)
}

// uint32 route_id = 15;
inline void SceneRouteChangeInfo::clear_route_id() {
  route_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneRouteChangeInfo::route_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneRouteChangeInfo.route_id)
  return route_id_;
}
inline void SceneRouteChangeInfo::set_route_id(::google::protobuf::uint32 value) {
  
  route_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneRouteChangeInfo.route_id)
}

// uint32 type = 4;
inline void SceneRouteChangeInfo::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 SceneRouteChangeInfo::type() const {
  // @@protoc_insertion_point(field_get:proto.SceneRouteChangeInfo.type)
  return type_;
}
inline void SceneRouteChangeInfo::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneRouteChangeInfo.type)
}

// repeated .proto.RoutePointChangeInfo point_list = 1;
inline int SceneRouteChangeInfo::point_list_size() const {
  return point_list_.size();
}
inline void SceneRouteChangeInfo::clear_point_list() {
  point_list_.Clear();
}
inline const ::proto::RoutePointChangeInfo& SceneRouteChangeInfo::point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneRouteChangeInfo.point_list)
  return point_list_.Get(index);
}
inline ::proto::RoutePointChangeInfo* SceneRouteChangeInfo::mutable_point_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneRouteChangeInfo.point_list)
  return point_list_.Mutable(index);
}
inline ::proto::RoutePointChangeInfo* SceneRouteChangeInfo::add_point_list() {
  // @@protoc_insertion_point(field_add:proto.SceneRouteChangeInfo.point_list)
  return point_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::RoutePointChangeInfo >*
SceneRouteChangeInfo::mutable_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneRouteChangeInfo.point_list)
  return &point_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::RoutePointChangeInfo >&
SceneRouteChangeInfo::point_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneRouteChangeInfo.point_list)
  return point_list_;
}

// -------------------------------------------------------------------

// SceneRouteChangeNotify

// uint32 scene_id = 12;
inline void SceneRouteChangeNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneRouteChangeNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneRouteChangeNotify.scene_id)
  return scene_id_;
}
inline void SceneRouteChangeNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneRouteChangeNotify.scene_id)
}

// uint32 scene_time = 11;
inline void SceneRouteChangeNotify::clear_scene_time() {
  scene_time_ = 0u;
}
inline ::google::protobuf::uint32 SceneRouteChangeNotify::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneRouteChangeNotify.scene_time)
  return scene_time_;
}
inline void SceneRouteChangeNotify::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneRouteChangeNotify.scene_time)
}

// repeated .proto.SceneRouteChangeInfo route_list = 2;
inline int SceneRouteChangeNotify::route_list_size() const {
  return route_list_.size();
}
inline void SceneRouteChangeNotify::clear_route_list() {
  route_list_.Clear();
}
inline const ::proto::SceneRouteChangeInfo& SceneRouteChangeNotify::route_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneRouteChangeNotify.route_list)
  return route_list_.Get(index);
}
inline ::proto::SceneRouteChangeInfo* SceneRouteChangeNotify::mutable_route_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneRouteChangeNotify.route_list)
  return route_list_.Mutable(index);
}
inline ::proto::SceneRouteChangeInfo* SceneRouteChangeNotify::add_route_list() {
  // @@protoc_insertion_point(field_add:proto.SceneRouteChangeNotify.route_list)
  return route_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::SceneRouteChangeInfo >*
SceneRouteChangeNotify::mutable_route_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneRouteChangeNotify.route_list)
  return &route_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::SceneRouteChangeInfo >&
SceneRouteChangeNotify::route_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneRouteChangeNotify.route_list)
  return route_list_;
}

// -------------------------------------------------------------------

// PlatformStartRouteNotify

// .proto.PlatformInfo platform = 15;
inline bool PlatformStartRouteNotify::has_platform() const {
  return this != internal_default_instance() && platform_ != NULL;
}
inline void PlatformStartRouteNotify::clear_platform() {
  if (GetArenaNoVirtual() == NULL && platform_ != NULL) delete platform_;
  platform_ = NULL;
}
inline const ::proto::PlatformInfo& PlatformStartRouteNotify::platform() const {
  const ::proto::PlatformInfo* p = platform_;
  // @@protoc_insertion_point(field_get:proto.PlatformStartRouteNotify.platform)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::PlatformInfo*>(
      &::proto::_PlatformInfo_default_instance_);
}
inline ::proto::PlatformInfo* PlatformStartRouteNotify::mutable_platform() {
  
  if (platform_ == NULL) {
    platform_ = new ::proto::PlatformInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlatformStartRouteNotify.platform)
  return platform_;
}
inline ::proto::PlatformInfo* PlatformStartRouteNotify::release_platform() {
  // @@protoc_insertion_point(field_release:proto.PlatformStartRouteNotify.platform)
  
  ::proto::PlatformInfo* temp = platform_;
  platform_ = NULL;
  return temp;
}
inline void PlatformStartRouteNotify::set_allocated_platform(::proto::PlatformInfo* platform) {
  delete platform_;
  platform_ = platform;
  if (platform) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlatformStartRouteNotify.platform)
}

// uint32 scene_time = 12;
inline void PlatformStartRouteNotify::clear_scene_time() {
  scene_time_ = 0u;
}
inline ::google::protobuf::uint32 PlatformStartRouteNotify::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.PlatformStartRouteNotify.scene_time)
  return scene_time_;
}
inline void PlatformStartRouteNotify::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformStartRouteNotify.scene_time)
}

// uint32 entity_id = 8;
inline void PlatformStartRouteNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 PlatformStartRouteNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.PlatformStartRouteNotify.entity_id)
  return entity_id_;
}
inline void PlatformStartRouteNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformStartRouteNotify.entity_id)
}

// -------------------------------------------------------------------

// PlatformStopRouteNotify

// uint32 scene_time = 9;
inline void PlatformStopRouteNotify::clear_scene_time() {
  scene_time_ = 0u;
}
inline ::google::protobuf::uint32 PlatformStopRouteNotify::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.PlatformStopRouteNotify.scene_time)
  return scene_time_;
}
inline void PlatformStopRouteNotify::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformStopRouteNotify.scene_time)
}

// uint32 entity_id = 12;
inline void PlatformStopRouteNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 PlatformStopRouteNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.PlatformStopRouteNotify.entity_id)
  return entity_id_;
}
inline void PlatformStopRouteNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformStopRouteNotify.entity_id)
}

// .proto.PlatformInfo platform = 8;
inline bool PlatformStopRouteNotify::has_platform() const {
  return this != internal_default_instance() && platform_ != NULL;
}
inline void PlatformStopRouteNotify::clear_platform() {
  if (GetArenaNoVirtual() == NULL && platform_ != NULL) delete platform_;
  platform_ = NULL;
}
inline const ::proto::PlatformInfo& PlatformStopRouteNotify::platform() const {
  const ::proto::PlatformInfo* p = platform_;
  // @@protoc_insertion_point(field_get:proto.PlatformStopRouteNotify.platform)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::PlatformInfo*>(
      &::proto::_PlatformInfo_default_instance_);
}
inline ::proto::PlatformInfo* PlatformStopRouteNotify::mutable_platform() {
  
  if (platform_ == NULL) {
    platform_ = new ::proto::PlatformInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlatformStopRouteNotify.platform)
  return platform_;
}
inline ::proto::PlatformInfo* PlatformStopRouteNotify::release_platform() {
  // @@protoc_insertion_point(field_release:proto.PlatformStopRouteNotify.platform)
  
  ::proto::PlatformInfo* temp = platform_;
  platform_ = NULL;
  return temp;
}
inline void PlatformStopRouteNotify::set_allocated_platform(::proto::PlatformInfo* platform) {
  delete platform_;
  platform_ = platform;
  if (platform) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlatformStopRouteNotify.platform)
}

// -------------------------------------------------------------------

// PlatformChangeRouteNotify

// uint32 entity_id = 2;
inline void PlatformChangeRouteNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 PlatformChangeRouteNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.PlatformChangeRouteNotify.entity_id)
  return entity_id_;
}
inline void PlatformChangeRouteNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformChangeRouteNotify.entity_id)
}

// .proto.PlatformInfo platform = 1;
inline bool PlatformChangeRouteNotify::has_platform() const {
  return this != internal_default_instance() && platform_ != NULL;
}
inline void PlatformChangeRouteNotify::clear_platform() {
  if (GetArenaNoVirtual() == NULL && platform_ != NULL) delete platform_;
  platform_ = NULL;
}
inline const ::proto::PlatformInfo& PlatformChangeRouteNotify::platform() const {
  const ::proto::PlatformInfo* p = platform_;
  // @@protoc_insertion_point(field_get:proto.PlatformChangeRouteNotify.platform)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::PlatformInfo*>(
      &::proto::_PlatformInfo_default_instance_);
}
inline ::proto::PlatformInfo* PlatformChangeRouteNotify::mutable_platform() {
  
  if (platform_ == NULL) {
    platform_ = new ::proto::PlatformInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlatformChangeRouteNotify.platform)
  return platform_;
}
inline ::proto::PlatformInfo* PlatformChangeRouteNotify::release_platform() {
  // @@protoc_insertion_point(field_release:proto.PlatformChangeRouteNotify.platform)
  
  ::proto::PlatformInfo* temp = platform_;
  platform_ = NULL;
  return temp;
}
inline void PlatformChangeRouteNotify::set_allocated_platform(::proto::PlatformInfo* platform) {
  delete platform_;
  platform_ = platform;
  if (platform) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlatformChangeRouteNotify.platform)
}

// uint32 scene_time = 8;
inline void PlatformChangeRouteNotify::clear_scene_time() {
  scene_time_ = 0u;
}
inline ::google::protobuf::uint32 PlatformChangeRouteNotify::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.PlatformChangeRouteNotify.scene_time)
  return scene_time_;
}
inline void PlatformChangeRouteNotify::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformChangeRouteNotify.scene_time)
}

// -------------------------------------------------------------------

// ScenePlayerSoundNotify

// string sound_name = 4;
inline void ScenePlayerSoundNotify::clear_sound_name() {
  sound_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScenePlayerSoundNotify::sound_name() const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerSoundNotify.sound_name)
  return sound_name_.GetNoArena();
}
inline void ScenePlayerSoundNotify::set_sound_name(const ::std::string& value) {
  
  sound_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ScenePlayerSoundNotify.sound_name)
}
#if LANG_CXX11
inline void ScenePlayerSoundNotify::set_sound_name(::std::string&& value) {
  
  sound_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ScenePlayerSoundNotify.sound_name)
}
#endif
inline void ScenePlayerSoundNotify::set_sound_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sound_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ScenePlayerSoundNotify.sound_name)
}
inline void ScenePlayerSoundNotify::set_sound_name(const char* value, size_t size) {
  
  sound_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ScenePlayerSoundNotify.sound_name)
}
inline ::std::string* ScenePlayerSoundNotify::mutable_sound_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerSoundNotify.sound_name)
  return sound_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScenePlayerSoundNotify::release_sound_name() {
  // @@protoc_insertion_point(field_release:proto.ScenePlayerSoundNotify.sound_name)
  
  return sound_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScenePlayerSoundNotify::set_allocated_sound_name(::std::string* sound_name) {
  if (sound_name != NULL) {
    
  } else {
    
  }
  sound_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sound_name);
  // @@protoc_insertion_point(field_set_allocated:proto.ScenePlayerSoundNotify.sound_name)
}

// .proto.ScenePlayerSoundNotify.PlaySoundType play_type = 8;
inline void ScenePlayerSoundNotify::clear_play_type() {
  play_type_ = 0;
}
inline ::proto::ScenePlayerSoundNotify_PlaySoundType ScenePlayerSoundNotify::play_type() const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerSoundNotify.play_type)
  return static_cast< ::proto::ScenePlayerSoundNotify_PlaySoundType >(play_type_);
}
inline void ScenePlayerSoundNotify::set_play_type(::proto::ScenePlayerSoundNotify_PlaySoundType value) {
  
  play_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ScenePlayerSoundNotify.play_type)
}

// .proto.Vector play_pos = 3;
inline bool ScenePlayerSoundNotify::has_play_pos() const {
  return this != internal_default_instance() && play_pos_ != NULL;
}
inline void ScenePlayerSoundNotify::clear_play_pos() {
  if (GetArenaNoVirtual() == NULL && play_pos_ != NULL) delete play_pos_;
  play_pos_ = NULL;
}
inline const ::proto::Vector& ScenePlayerSoundNotify::play_pos() const {
  const ::proto::Vector* p = play_pos_;
  // @@protoc_insertion_point(field_get:proto.ScenePlayerSoundNotify.play_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* ScenePlayerSoundNotify::mutable_play_pos() {
  
  if (play_pos_ == NULL) {
    play_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerSoundNotify.play_pos)
  return play_pos_;
}
inline ::proto::Vector* ScenePlayerSoundNotify::release_play_pos() {
  // @@protoc_insertion_point(field_release:proto.ScenePlayerSoundNotify.play_pos)
  
  ::proto::Vector* temp = play_pos_;
  play_pos_ = NULL;
  return temp;
}
inline void ScenePlayerSoundNotify::set_allocated_play_pos(::proto::Vector* play_pos) {
  delete play_pos_;
  play_pos_ = play_pos;
  if (play_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ScenePlayerSoundNotify.play_pos)
}

// -------------------------------------------------------------------

// PersonalSceneJumpReq

// uint32 point_id = 4;
inline void PersonalSceneJumpReq::clear_point_id() {
  point_id_ = 0u;
}
inline ::google::protobuf::uint32 PersonalSceneJumpReq::point_id() const {
  // @@protoc_insertion_point(field_get:proto.PersonalSceneJumpReq.point_id)
  return point_id_;
}
inline void PersonalSceneJumpReq::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PersonalSceneJumpReq.point_id)
}

// -------------------------------------------------------------------

// PersonalSceneJumpRsp

// uint32 dest_scene_id = 5;
inline void PersonalSceneJumpRsp::clear_dest_scene_id() {
  dest_scene_id_ = 0u;
}
inline ::google::protobuf::uint32 PersonalSceneJumpRsp::dest_scene_id() const {
  // @@protoc_insertion_point(field_get:proto.PersonalSceneJumpRsp.dest_scene_id)
  return dest_scene_id_;
}
inline void PersonalSceneJumpRsp::set_dest_scene_id(::google::protobuf::uint32 value) {
  
  dest_scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PersonalSceneJumpRsp.dest_scene_id)
}

// int32 retcode = 8;
inline void PersonalSceneJumpRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PersonalSceneJumpRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PersonalSceneJumpRsp.retcode)
  return retcode_;
}
inline void PersonalSceneJumpRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PersonalSceneJumpRsp.retcode)
}

// .proto.Vector dest_pos = 11;
inline bool PersonalSceneJumpRsp::has_dest_pos() const {
  return this != internal_default_instance() && dest_pos_ != NULL;
}
inline void PersonalSceneJumpRsp::clear_dest_pos() {
  if (GetArenaNoVirtual() == NULL && dest_pos_ != NULL) delete dest_pos_;
  dest_pos_ = NULL;
}
inline const ::proto::Vector& PersonalSceneJumpRsp::dest_pos() const {
  const ::proto::Vector* p = dest_pos_;
  // @@protoc_insertion_point(field_get:proto.PersonalSceneJumpRsp.dest_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* PersonalSceneJumpRsp::mutable_dest_pos() {
  
  if (dest_pos_ == NULL) {
    dest_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PersonalSceneJumpRsp.dest_pos)
  return dest_pos_;
}
inline ::proto::Vector* PersonalSceneJumpRsp::release_dest_pos() {
  // @@protoc_insertion_point(field_release:proto.PersonalSceneJumpRsp.dest_pos)
  
  ::proto::Vector* temp = dest_pos_;
  dest_pos_ = NULL;
  return temp;
}
inline void PersonalSceneJumpRsp::set_allocated_dest_pos(::proto::Vector* dest_pos) {
  delete dest_pos_;
  dest_pos_ = dest_pos;
  if (dest_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PersonalSceneJumpRsp.dest_pos)
}

// -------------------------------------------------------------------

// SealBattleBeginNotify

// uint32 seal_max_progress = 9;
inline void SealBattleBeginNotify::clear_seal_max_progress() {
  seal_max_progress_ = 0u;
}
inline ::google::protobuf::uint32 SealBattleBeginNotify::seal_max_progress() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleBeginNotify.seal_max_progress)
  return seal_max_progress_;
}
inline void SealBattleBeginNotify::set_seal_max_progress(::google::protobuf::uint32 value) {
  
  seal_max_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleBeginNotify.seal_max_progress)
}

// uint32 seal_entity_id = 1;
inline void SealBattleBeginNotify::clear_seal_entity_id() {
  seal_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SealBattleBeginNotify::seal_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleBeginNotify.seal_entity_id)
  return seal_entity_id_;
}
inline void SealBattleBeginNotify::set_seal_entity_id(::google::protobuf::uint32 value) {
  
  seal_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleBeginNotify.seal_entity_id)
}

// uint32 seal_radius = 12;
inline void SealBattleBeginNotify::clear_seal_radius() {
  seal_radius_ = 0u;
}
inline ::google::protobuf::uint32 SealBattleBeginNotify::seal_radius() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleBeginNotify.seal_radius)
  return seal_radius_;
}
inline void SealBattleBeginNotify::set_seal_radius(::google::protobuf::uint32 value) {
  
  seal_radius_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleBeginNotify.seal_radius)
}

// .proto.SealBattleType battle_type = 14;
inline void SealBattleBeginNotify::clear_battle_type() {
  battle_type_ = 0;
}
inline ::proto::SealBattleType SealBattleBeginNotify::battle_type() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleBeginNotify.battle_type)
  return static_cast< ::proto::SealBattleType >(battle_type_);
}
inline void SealBattleBeginNotify::set_battle_type(::proto::SealBattleType value) {
  
  battle_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleBeginNotify.battle_type)
}

// -------------------------------------------------------------------

// SealBattleEndNotify

// bool is_win = 4;
inline void SealBattleEndNotify::clear_is_win() {
  is_win_ = false;
}
inline bool SealBattleEndNotify::is_win() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleEndNotify.is_win)
  return is_win_;
}
inline void SealBattleEndNotify::set_is_win(bool value) {
  
  is_win_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleEndNotify.is_win)
}

// uint32 seal_entity_id = 15;
inline void SealBattleEndNotify::clear_seal_entity_id() {
  seal_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SealBattleEndNotify::seal_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleEndNotify.seal_entity_id)
  return seal_entity_id_;
}
inline void SealBattleEndNotify::set_seal_entity_id(::google::protobuf::uint32 value) {
  
  seal_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleEndNotify.seal_entity_id)
}

// -------------------------------------------------------------------

// SealBattleProgressNotify

// uint32 seal_entity_id = 9;
inline void SealBattleProgressNotify::clear_seal_entity_id() {
  seal_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SealBattleProgressNotify::seal_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleProgressNotify.seal_entity_id)
  return seal_entity_id_;
}
inline void SealBattleProgressNotify::set_seal_entity_id(::google::protobuf::uint32 value) {
  
  seal_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleProgressNotify.seal_entity_id)
}

// uint32 max_progress = 10;
inline void SealBattleProgressNotify::clear_max_progress() {
  max_progress_ = 0u;
}
inline ::google::protobuf::uint32 SealBattleProgressNotify::max_progress() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleProgressNotify.max_progress)
  return max_progress_;
}
inline void SealBattleProgressNotify::set_max_progress(::google::protobuf::uint32 value) {
  
  max_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleProgressNotify.max_progress)
}

// uint32 seal_radius = 4;
inline void SealBattleProgressNotify::clear_seal_radius() {
  seal_radius_ = 0u;
}
inline ::google::protobuf::uint32 SealBattleProgressNotify::seal_radius() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleProgressNotify.seal_radius)
  return seal_radius_;
}
inline void SealBattleProgressNotify::set_seal_radius(::google::protobuf::uint32 value) {
  
  seal_radius_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleProgressNotify.seal_radius)
}

// uint32 progress = 5;
inline void SealBattleProgressNotify::clear_progress() {
  progress_ = 0u;
}
inline ::google::protobuf::uint32 SealBattleProgressNotify::progress() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleProgressNotify.progress)
  return progress_;
}
inline void SealBattleProgressNotify::set_progress(::google::protobuf::uint32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleProgressNotify.progress)
}

// uint32 end_time = 2;
inline void SealBattleProgressNotify::clear_end_time() {
  end_time_ = 0u;
}
inline ::google::protobuf::uint32 SealBattleProgressNotify::end_time() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleProgressNotify.end_time)
  return end_time_;
}
inline void SealBattleProgressNotify::set_end_time(::google::protobuf::uint32 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleProgressNotify.end_time)
}

// -------------------------------------------------------------------

// ClientPauseNotify

// bool is_open = 1;
inline void ClientPauseNotify::clear_is_open() {
  is_open_ = false;
}
inline bool ClientPauseNotify::is_open() const {
  // @@protoc_insertion_point(field_get:proto.ClientPauseNotify.is_open)
  return is_open_;
}
inline void ClientPauseNotify::set_is_open(bool value) {
  
  is_open_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientPauseNotify.is_open)
}

// -------------------------------------------------------------------

// AvatarEnterSceneInfo

// repeated .proto.ServerBuff server_buff_list = 14;
inline int AvatarEnterSceneInfo::server_buff_list_size() const {
  return server_buff_list_.size();
}
inline void AvatarEnterSceneInfo::clear_server_buff_list() {
  server_buff_list_.Clear();
}
inline const ::proto::ServerBuff& AvatarEnterSceneInfo::server_buff_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarEnterSceneInfo.server_buff_list)
  return server_buff_list_.Get(index);
}
inline ::proto::ServerBuff* AvatarEnterSceneInfo::mutable_server_buff_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AvatarEnterSceneInfo.server_buff_list)
  return server_buff_list_.Mutable(index);
}
inline ::proto::ServerBuff* AvatarEnterSceneInfo::add_server_buff_list() {
  // @@protoc_insertion_point(field_add:proto.AvatarEnterSceneInfo.server_buff_list)
  return server_buff_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >*
AvatarEnterSceneInfo::mutable_server_buff_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarEnterSceneInfo.server_buff_list)
  return &server_buff_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >&
AvatarEnterSceneInfo::server_buff_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarEnterSceneInfo.server_buff_list)
  return server_buff_list_;
}

// uint32 avatar_entity_id = 7;
inline void AvatarEnterSceneInfo::clear_avatar_entity_id() {
  avatar_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarEnterSceneInfo::avatar_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarEnterSceneInfo.avatar_entity_id)
  return avatar_entity_id_;
}
inline void AvatarEnterSceneInfo::set_avatar_entity_id(::google::protobuf::uint32 value) {
  
  avatar_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarEnterSceneInfo.avatar_entity_id)
}

// .proto.AbilitySyncStateInfo weapon_ability_info = 12;
inline bool AvatarEnterSceneInfo::has_weapon_ability_info() const {
  return this != internal_default_instance() && weapon_ability_info_ != NULL;
}
inline void AvatarEnterSceneInfo::clear_weapon_ability_info() {
  if (GetArenaNoVirtual() == NULL && weapon_ability_info_ != NULL) delete weapon_ability_info_;
  weapon_ability_info_ = NULL;
}
inline const ::proto::AbilitySyncStateInfo& AvatarEnterSceneInfo::weapon_ability_info() const {
  const ::proto::AbilitySyncStateInfo* p = weapon_ability_info_;
  // @@protoc_insertion_point(field_get:proto.AvatarEnterSceneInfo.weapon_ability_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilitySyncStateInfo*>(
      &::proto::_AbilitySyncStateInfo_default_instance_);
}
inline ::proto::AbilitySyncStateInfo* AvatarEnterSceneInfo::mutable_weapon_ability_info() {
  
  if (weapon_ability_info_ == NULL) {
    weapon_ability_info_ = new ::proto::AbilitySyncStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.AvatarEnterSceneInfo.weapon_ability_info)
  return weapon_ability_info_;
}
inline ::proto::AbilitySyncStateInfo* AvatarEnterSceneInfo::release_weapon_ability_info() {
  // @@protoc_insertion_point(field_release:proto.AvatarEnterSceneInfo.weapon_ability_info)
  
  ::proto::AbilitySyncStateInfo* temp = weapon_ability_info_;
  weapon_ability_info_ = NULL;
  return temp;
}
inline void AvatarEnterSceneInfo::set_allocated_weapon_ability_info(::proto::AbilitySyncStateInfo* weapon_ability_info) {
  delete weapon_ability_info_;
  weapon_ability_info_ = weapon_ability_info;
  if (weapon_ability_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarEnterSceneInfo.weapon_ability_info)
}

// uint32 weapon_entity_id = 10;
inline void AvatarEnterSceneInfo::clear_weapon_entity_id() {
  weapon_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarEnterSceneInfo::weapon_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarEnterSceneInfo.weapon_entity_id)
  return weapon_entity_id_;
}
inline void AvatarEnterSceneInfo::set_weapon_entity_id(::google::protobuf::uint32 value) {
  
  weapon_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarEnterSceneInfo.weapon_entity_id)
}

// .proto.AbilitySyncStateInfo avatar_ability_info = 2;
inline bool AvatarEnterSceneInfo::has_avatar_ability_info() const {
  return this != internal_default_instance() && avatar_ability_info_ != NULL;
}
inline void AvatarEnterSceneInfo::clear_avatar_ability_info() {
  if (GetArenaNoVirtual() == NULL && avatar_ability_info_ != NULL) delete avatar_ability_info_;
  avatar_ability_info_ = NULL;
}
inline const ::proto::AbilitySyncStateInfo& AvatarEnterSceneInfo::avatar_ability_info() const {
  const ::proto::AbilitySyncStateInfo* p = avatar_ability_info_;
  // @@protoc_insertion_point(field_get:proto.AvatarEnterSceneInfo.avatar_ability_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilitySyncStateInfo*>(
      &::proto::_AbilitySyncStateInfo_default_instance_);
}
inline ::proto::AbilitySyncStateInfo* AvatarEnterSceneInfo::mutable_avatar_ability_info() {
  
  if (avatar_ability_info_ == NULL) {
    avatar_ability_info_ = new ::proto::AbilitySyncStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.AvatarEnterSceneInfo.avatar_ability_info)
  return avatar_ability_info_;
}
inline ::proto::AbilitySyncStateInfo* AvatarEnterSceneInfo::release_avatar_ability_info() {
  // @@protoc_insertion_point(field_release:proto.AvatarEnterSceneInfo.avatar_ability_info)
  
  ::proto::AbilitySyncStateInfo* temp = avatar_ability_info_;
  avatar_ability_info_ = NULL;
  return temp;
}
inline void AvatarEnterSceneInfo::set_allocated_avatar_ability_info(::proto::AbilitySyncStateInfo* avatar_ability_info) {
  delete avatar_ability_info_;
  avatar_ability_info_ = avatar_ability_info;
  if (avatar_ability_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarEnterSceneInfo.avatar_ability_info)
}

// uint64 avatar_guid = 13;
inline void AvatarEnterSceneInfo::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarEnterSceneInfo::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarEnterSceneInfo.avatar_guid)
  return avatar_guid_;
}
inline void AvatarEnterSceneInfo::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarEnterSceneInfo.avatar_guid)
}

// uint64 weapon_guid = 9;
inline void AvatarEnterSceneInfo::clear_weapon_guid() {
  weapon_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarEnterSceneInfo::weapon_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarEnterSceneInfo.weapon_guid)
  return weapon_guid_;
}
inline void AvatarEnterSceneInfo::set_weapon_guid(::google::protobuf::uint64 value) {
  
  weapon_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarEnterSceneInfo.weapon_guid)
}

// repeated uint32 buff_id_list = 5;
inline int AvatarEnterSceneInfo::buff_id_list_size() const {
  return buff_id_list_.size();
}
inline void AvatarEnterSceneInfo::clear_buff_id_list() {
  buff_id_list_.Clear();
}
inline ::google::protobuf::uint32 AvatarEnterSceneInfo::buff_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarEnterSceneInfo.buff_id_list)
  return buff_id_list_.Get(index);
}
inline void AvatarEnterSceneInfo::set_buff_id_list(int index, ::google::protobuf::uint32 value) {
  buff_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarEnterSceneInfo.buff_id_list)
}
inline void AvatarEnterSceneInfo::add_buff_id_list(::google::protobuf::uint32 value) {
  buff_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarEnterSceneInfo.buff_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AvatarEnterSceneInfo::buff_id_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarEnterSceneInfo.buff_id_list)
  return buff_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AvatarEnterSceneInfo::mutable_buff_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarEnterSceneInfo.buff_id_list)
  return &buff_id_list_;
}

// -------------------------------------------------------------------

// TeamEnterSceneInfo

// .proto.AbilityControlBlock ability_control_block = 7;
inline bool TeamEnterSceneInfo::has_ability_control_block() const {
  return this != internal_default_instance() && ability_control_block_ != NULL;
}
inline void TeamEnterSceneInfo::clear_ability_control_block() {
  if (GetArenaNoVirtual() == NULL && ability_control_block_ != NULL) delete ability_control_block_;
  ability_control_block_ = NULL;
}
inline const ::proto::AbilityControlBlock& TeamEnterSceneInfo::ability_control_block() const {
  const ::proto::AbilityControlBlock* p = ability_control_block_;
  // @@protoc_insertion_point(field_get:proto.TeamEnterSceneInfo.ability_control_block)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityControlBlock*>(
      &::proto::_AbilityControlBlock_default_instance_);
}
inline ::proto::AbilityControlBlock* TeamEnterSceneInfo::mutable_ability_control_block() {
  
  if (ability_control_block_ == NULL) {
    ability_control_block_ = new ::proto::AbilityControlBlock;
  }
  // @@protoc_insertion_point(field_mutable:proto.TeamEnterSceneInfo.ability_control_block)
  return ability_control_block_;
}
inline ::proto::AbilityControlBlock* TeamEnterSceneInfo::release_ability_control_block() {
  // @@protoc_insertion_point(field_release:proto.TeamEnterSceneInfo.ability_control_block)
  
  ::proto::AbilityControlBlock* temp = ability_control_block_;
  ability_control_block_ = NULL;
  return temp;
}
inline void TeamEnterSceneInfo::set_allocated_ability_control_block(::proto::AbilityControlBlock* ability_control_block) {
  delete ability_control_block_;
  ability_control_block_ = ability_control_block;
  if (ability_control_block) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TeamEnterSceneInfo.ability_control_block)
}

// .proto.AbilitySyncStateInfo team_ability_info = 10;
inline bool TeamEnterSceneInfo::has_team_ability_info() const {
  return this != internal_default_instance() && team_ability_info_ != NULL;
}
inline void TeamEnterSceneInfo::clear_team_ability_info() {
  if (GetArenaNoVirtual() == NULL && team_ability_info_ != NULL) delete team_ability_info_;
  team_ability_info_ = NULL;
}
inline const ::proto::AbilitySyncStateInfo& TeamEnterSceneInfo::team_ability_info() const {
  const ::proto::AbilitySyncStateInfo* p = team_ability_info_;
  // @@protoc_insertion_point(field_get:proto.TeamEnterSceneInfo.team_ability_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilitySyncStateInfo*>(
      &::proto::_AbilitySyncStateInfo_default_instance_);
}
inline ::proto::AbilitySyncStateInfo* TeamEnterSceneInfo::mutable_team_ability_info() {
  
  if (team_ability_info_ == NULL) {
    team_ability_info_ = new ::proto::AbilitySyncStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.TeamEnterSceneInfo.team_ability_info)
  return team_ability_info_;
}
inline ::proto::AbilitySyncStateInfo* TeamEnterSceneInfo::release_team_ability_info() {
  // @@protoc_insertion_point(field_release:proto.TeamEnterSceneInfo.team_ability_info)
  
  ::proto::AbilitySyncStateInfo* temp = team_ability_info_;
  team_ability_info_ = NULL;
  return temp;
}
inline void TeamEnterSceneInfo::set_allocated_team_ability_info(::proto::AbilitySyncStateInfo* team_ability_info) {
  delete team_ability_info_;
  team_ability_info_ = team_ability_info;
  if (team_ability_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TeamEnterSceneInfo.team_ability_info)
}

// uint32 team_entity_id = 15;
inline void TeamEnterSceneInfo::clear_team_entity_id() {
  team_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 TeamEnterSceneInfo::team_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.TeamEnterSceneInfo.team_entity_id)
  return team_entity_id_;
}
inline void TeamEnterSceneInfo::set_team_entity_id(::google::protobuf::uint32 value) {
  
  team_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TeamEnterSceneInfo.team_entity_id)
}

// -------------------------------------------------------------------

// MPLevelEntityInfo

// .proto.AbilitySyncStateInfo ability_info = 2;
inline bool MPLevelEntityInfo::has_ability_info() const {
  return this != internal_default_instance() && ability_info_ != NULL;
}
inline void MPLevelEntityInfo::clear_ability_info() {
  if (GetArenaNoVirtual() == NULL && ability_info_ != NULL) delete ability_info_;
  ability_info_ = NULL;
}
inline const ::proto::AbilitySyncStateInfo& MPLevelEntityInfo::ability_info() const {
  const ::proto::AbilitySyncStateInfo* p = ability_info_;
  // @@protoc_insertion_point(field_get:proto.MPLevelEntityInfo.ability_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilitySyncStateInfo*>(
      &::proto::_AbilitySyncStateInfo_default_instance_);
}
inline ::proto::AbilitySyncStateInfo* MPLevelEntityInfo::mutable_ability_info() {
  
  if (ability_info_ == NULL) {
    ability_info_ = new ::proto::AbilitySyncStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.MPLevelEntityInfo.ability_info)
  return ability_info_;
}
inline ::proto::AbilitySyncStateInfo* MPLevelEntityInfo::release_ability_info() {
  // @@protoc_insertion_point(field_release:proto.MPLevelEntityInfo.ability_info)
  
  ::proto::AbilitySyncStateInfo* temp = ability_info_;
  ability_info_ = NULL;
  return temp;
}
inline void MPLevelEntityInfo::set_allocated_ability_info(::proto::AbilitySyncStateInfo* ability_info) {
  delete ability_info_;
  ability_info_ = ability_info;
  if (ability_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MPLevelEntityInfo.ability_info)
}

// uint32 entity_id = 11;
inline void MPLevelEntityInfo::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 MPLevelEntityInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.MPLevelEntityInfo.entity_id)
  return entity_id_;
}
inline void MPLevelEntityInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MPLevelEntityInfo.entity_id)
}

// uint32 authority_peer_id = 3;
inline void MPLevelEntityInfo::clear_authority_peer_id() {
  authority_peer_id_ = 0u;
}
inline ::google::protobuf::uint32 MPLevelEntityInfo::authority_peer_id() const {
  // @@protoc_insertion_point(field_get:proto.MPLevelEntityInfo.authority_peer_id)
  return authority_peer_id_;
}
inline void MPLevelEntityInfo::set_authority_peer_id(::google::protobuf::uint32 value) {
  
  authority_peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MPLevelEntityInfo.authority_peer_id)
}

// -------------------------------------------------------------------

// PlayerEnterSceneInfoNotify

// .proto.TeamEnterSceneInfo team_enter_info = 8;
inline bool PlayerEnterSceneInfoNotify::has_team_enter_info() const {
  return this != internal_default_instance() && team_enter_info_ != NULL;
}
inline void PlayerEnterSceneInfoNotify::clear_team_enter_info() {
  if (GetArenaNoVirtual() == NULL && team_enter_info_ != NULL) delete team_enter_info_;
  team_enter_info_ = NULL;
}
inline const ::proto::TeamEnterSceneInfo& PlayerEnterSceneInfoNotify::team_enter_info() const {
  const ::proto::TeamEnterSceneInfo* p = team_enter_info_;
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneInfoNotify.team_enter_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TeamEnterSceneInfo*>(
      &::proto::_TeamEnterSceneInfo_default_instance_);
}
inline ::proto::TeamEnterSceneInfo* PlayerEnterSceneInfoNotify::mutable_team_enter_info() {
  
  if (team_enter_info_ == NULL) {
    team_enter_info_ = new ::proto::TeamEnterSceneInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerEnterSceneInfoNotify.team_enter_info)
  return team_enter_info_;
}
inline ::proto::TeamEnterSceneInfo* PlayerEnterSceneInfoNotify::release_team_enter_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerEnterSceneInfoNotify.team_enter_info)
  
  ::proto::TeamEnterSceneInfo* temp = team_enter_info_;
  team_enter_info_ = NULL;
  return temp;
}
inline void PlayerEnterSceneInfoNotify::set_allocated_team_enter_info(::proto::TeamEnterSceneInfo* team_enter_info) {
  delete team_enter_info_;
  team_enter_info_ = team_enter_info;
  if (team_enter_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerEnterSceneInfoNotify.team_enter_info)
}

// uint32 enter_scene_token = 12;
inline void PlayerEnterSceneInfoNotify::clear_enter_scene_token() {
  enter_scene_token_ = 0u;
}
inline ::google::protobuf::uint32 PlayerEnterSceneInfoNotify::enter_scene_token() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneInfoNotify.enter_scene_token)
  return enter_scene_token_;
}
inline void PlayerEnterSceneInfoNotify::set_enter_scene_token(::google::protobuf::uint32 value) {
  
  enter_scene_token_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneInfoNotify.enter_scene_token)
}

// repeated .proto.AvatarEnterSceneInfo avatar_enter_info = 7;
inline int PlayerEnterSceneInfoNotify::avatar_enter_info_size() const {
  return avatar_enter_info_.size();
}
inline void PlayerEnterSceneInfoNotify::clear_avatar_enter_info() {
  avatar_enter_info_.Clear();
}
inline const ::proto::AvatarEnterSceneInfo& PlayerEnterSceneInfoNotify::avatar_enter_info(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneInfoNotify.avatar_enter_info)
  return avatar_enter_info_.Get(index);
}
inline ::proto::AvatarEnterSceneInfo* PlayerEnterSceneInfoNotify::mutable_avatar_enter_info(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerEnterSceneInfoNotify.avatar_enter_info)
  return avatar_enter_info_.Mutable(index);
}
inline ::proto::AvatarEnterSceneInfo* PlayerEnterSceneInfoNotify::add_avatar_enter_info() {
  // @@protoc_insertion_point(field_add:proto.PlayerEnterSceneInfoNotify.avatar_enter_info)
  return avatar_enter_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::AvatarEnterSceneInfo >*
PlayerEnterSceneInfoNotify::mutable_avatar_enter_info() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerEnterSceneInfoNotify.avatar_enter_info)
  return &avatar_enter_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::AvatarEnterSceneInfo >&
PlayerEnterSceneInfoNotify::avatar_enter_info() const {
  // @@protoc_insertion_point(field_list:proto.PlayerEnterSceneInfoNotify.avatar_enter_info)
  return avatar_enter_info_;
}

// uint32 cur_avatar_entity_id = 6;
inline void PlayerEnterSceneInfoNotify::clear_cur_avatar_entity_id() {
  cur_avatar_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerEnterSceneInfoNotify::cur_avatar_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneInfoNotify.cur_avatar_entity_id)
  return cur_avatar_entity_id_;
}
inline void PlayerEnterSceneInfoNotify::set_cur_avatar_entity_id(::google::protobuf::uint32 value) {
  
  cur_avatar_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneInfoNotify.cur_avatar_entity_id)
}

// .proto.MPLevelEntityInfo mp_level_entity_info = 5;
inline bool PlayerEnterSceneInfoNotify::has_mp_level_entity_info() const {
  return this != internal_default_instance() && mp_level_entity_info_ != NULL;
}
inline void PlayerEnterSceneInfoNotify::clear_mp_level_entity_info() {
  if (GetArenaNoVirtual() == NULL && mp_level_entity_info_ != NULL) delete mp_level_entity_info_;
  mp_level_entity_info_ = NULL;
}
inline const ::proto::MPLevelEntityInfo& PlayerEnterSceneInfoNotify::mp_level_entity_info() const {
  const ::proto::MPLevelEntityInfo* p = mp_level_entity_info_;
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneInfoNotify.mp_level_entity_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MPLevelEntityInfo*>(
      &::proto::_MPLevelEntityInfo_default_instance_);
}
inline ::proto::MPLevelEntityInfo* PlayerEnterSceneInfoNotify::mutable_mp_level_entity_info() {
  
  if (mp_level_entity_info_ == NULL) {
    mp_level_entity_info_ = new ::proto::MPLevelEntityInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerEnterSceneInfoNotify.mp_level_entity_info)
  return mp_level_entity_info_;
}
inline ::proto::MPLevelEntityInfo* PlayerEnterSceneInfoNotify::release_mp_level_entity_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerEnterSceneInfoNotify.mp_level_entity_info)
  
  ::proto::MPLevelEntityInfo* temp = mp_level_entity_info_;
  mp_level_entity_info_ = NULL;
  return temp;
}
inline void PlayerEnterSceneInfoNotify::set_allocated_mp_level_entity_info(::proto::MPLevelEntityInfo* mp_level_entity_info) {
  delete mp_level_entity_info_;
  mp_level_entity_info_ = mp_level_entity_info;
  if (mp_level_entity_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerEnterSceneInfoNotify.mp_level_entity_info)
}

// -------------------------------------------------------------------

// JoinPlayerSceneReq

// uint32 target_uid = 12;
inline void JoinPlayerSceneReq::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 JoinPlayerSceneReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.JoinPlayerSceneReq.target_uid)
  return target_uid_;
}
inline void JoinPlayerSceneReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.JoinPlayerSceneReq.target_uid)
}

// -------------------------------------------------------------------

// JoinPlayerSceneRsp

// int32 retcode = 10;
inline void JoinPlayerSceneRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 JoinPlayerSceneRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.JoinPlayerSceneRsp.retcode)
  return retcode_;
}
inline void JoinPlayerSceneRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.JoinPlayerSceneRsp.retcode)
}

// -------------------------------------------------------------------

// SceneKickPlayerReq

// uint32 target_uid = 6;
inline void SceneKickPlayerReq::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 SceneKickPlayerReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.SceneKickPlayerReq.target_uid)
  return target_uid_;
}
inline void SceneKickPlayerReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneKickPlayerReq.target_uid)
}

// -------------------------------------------------------------------

// SceneKickPlayerRsp

// int32 retcode = 13;
inline void SceneKickPlayerRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SceneKickPlayerRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneKickPlayerRsp.retcode)
  return retcode_;
}
inline void SceneKickPlayerRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneKickPlayerRsp.retcode)
}

// uint32 target_uid = 10;
inline void SceneKickPlayerRsp::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 SceneKickPlayerRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.SceneKickPlayerRsp.target_uid)
  return target_uid_;
}
inline void SceneKickPlayerRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneKickPlayerRsp.target_uid)
}

// -------------------------------------------------------------------

// SceneKickPlayerNotify

// uint32 target_uid = 8;
inline void SceneKickPlayerNotify::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 SceneKickPlayerNotify::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.SceneKickPlayerNotify.target_uid)
  return target_uid_;
}
inline void SceneKickPlayerNotify::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneKickPlayerNotify.target_uid)
}

// uint32 kicker_uid = 9;
inline void SceneKickPlayerNotify::clear_kicker_uid() {
  kicker_uid_ = 0u;
}
inline ::google::protobuf::uint32 SceneKickPlayerNotify::kicker_uid() const {
  // @@protoc_insertion_point(field_get:proto.SceneKickPlayerNotify.kicker_uid)
  return kicker_uid_;
}
inline void SceneKickPlayerNotify::set_kicker_uid(::google::protobuf::uint32 value) {
  
  kicker_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneKickPlayerNotify.kicker_uid)
}

// -------------------------------------------------------------------

// HitClientTrivialNotify

// .proto.Vector position = 11;
inline bool HitClientTrivialNotify::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
inline void HitClientTrivialNotify::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
inline const ::proto::Vector& HitClientTrivialNotify::position() const {
  const ::proto::Vector* p = position_;
  // @@protoc_insertion_point(field_get:proto.HitClientTrivialNotify.position)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* HitClientTrivialNotify::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.HitClientTrivialNotify.position)
  return position_;
}
inline ::proto::Vector* HitClientTrivialNotify::release_position() {
  // @@protoc_insertion_point(field_release:proto.HitClientTrivialNotify.position)
  
  ::proto::Vector* temp = position_;
  position_ = NULL;
  return temp;
}
inline void HitClientTrivialNotify::set_allocated_position(::proto::Vector* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HitClientTrivialNotify.position)
}

// uint32 owner_entity_id = 12;
inline void HitClientTrivialNotify::clear_owner_entity_id() {
  owner_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 HitClientTrivialNotify::owner_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.HitClientTrivialNotify.owner_entity_id)
  return owner_entity_id_;
}
inline void HitClientTrivialNotify::set_owner_entity_id(::google::protobuf::uint32 value) {
  
  owner_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HitClientTrivialNotify.owner_entity_id)
}

// -------------------------------------------------------------------

// BackMyWorldReq

// -------------------------------------------------------------------

// BackMyWorldRsp

// int32 retcode = 11;
inline void BackMyWorldRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 BackMyWorldRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.BackMyWorldRsp.retcode)
  return retcode_;
}
inline void BackMyWorldRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.BackMyWorldRsp.retcode)
}

// -------------------------------------------------------------------

// SeeMonsterReq

// uint32 monster_id = 7;
inline void SeeMonsterReq::clear_monster_id() {
  monster_id_ = 0u;
}
inline ::google::protobuf::uint32 SeeMonsterReq::monster_id() const {
  // @@protoc_insertion_point(field_get:proto.SeeMonsterReq.monster_id)
  return monster_id_;
}
inline void SeeMonsterReq::set_monster_id(::google::protobuf::uint32 value) {
  
  monster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SeeMonsterReq.monster_id)
}

// -------------------------------------------------------------------

// SeeMonsterRsp

// int32 retcode = 9;
inline void SeeMonsterRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SeeMonsterRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SeeMonsterRsp.retcode)
  return retcode_;
}
inline void SeeMonsterRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SeeMonsterRsp.retcode)
}

// -------------------------------------------------------------------

// AddSeenMonsterNotify

// repeated uint32 monster_id_list = 12;
inline int AddSeenMonsterNotify::monster_id_list_size() const {
  return monster_id_list_.size();
}
inline void AddSeenMonsterNotify::clear_monster_id_list() {
  monster_id_list_.Clear();
}
inline ::google::protobuf::uint32 AddSeenMonsterNotify::monster_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AddSeenMonsterNotify.monster_id_list)
  return monster_id_list_.Get(index);
}
inline void AddSeenMonsterNotify::set_monster_id_list(int index, ::google::protobuf::uint32 value) {
  monster_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AddSeenMonsterNotify.monster_id_list)
}
inline void AddSeenMonsterNotify::add_monster_id_list(::google::protobuf::uint32 value) {
  monster_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AddSeenMonsterNotify.monster_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AddSeenMonsterNotify::monster_id_list() const {
  // @@protoc_insertion_point(field_list:proto.AddSeenMonsterNotify.monster_id_list)
  return monster_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AddSeenMonsterNotify::mutable_monster_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AddSeenMonsterNotify.monster_id_list)
  return &monster_id_list_;
}

// -------------------------------------------------------------------

// AllSeenMonsterNotify

// repeated uint32 monster_id_list = 4;
inline int AllSeenMonsterNotify::monster_id_list_size() const {
  return monster_id_list_.size();
}
inline void AllSeenMonsterNotify::clear_monster_id_list() {
  monster_id_list_.Clear();
}
inline ::google::protobuf::uint32 AllSeenMonsterNotify::monster_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AllSeenMonsterNotify.monster_id_list)
  return monster_id_list_.Get(index);
}
inline void AllSeenMonsterNotify::set_monster_id_list(int index, ::google::protobuf::uint32 value) {
  monster_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AllSeenMonsterNotify.monster_id_list)
}
inline void AllSeenMonsterNotify::add_monster_id_list(::google::protobuf::uint32 value) {
  monster_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AllSeenMonsterNotify.monster_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AllSeenMonsterNotify::monster_id_list() const {
  // @@protoc_insertion_point(field_list:proto.AllSeenMonsterNotify.monster_id_list)
  return monster_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AllSeenMonsterNotify::mutable_monster_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AllSeenMonsterNotify.monster_id_list)
  return &monster_id_list_;
}

// -------------------------------------------------------------------

// SceneTimeNotify

// uint64 scene_time = 14;
inline void SceneTimeNotify::clear_scene_time() {
  scene_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SceneTimeNotify::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneTimeNotify.scene_time)
  return scene_time_;
}
inline void SceneTimeNotify::set_scene_time(::google::protobuf::uint64 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTimeNotify.scene_time)
}

// bool is_paused = 1;
inline void SceneTimeNotify::clear_is_paused() {
  is_paused_ = false;
}
inline bool SceneTimeNotify::is_paused() const {
  // @@protoc_insertion_point(field_get:proto.SceneTimeNotify.is_paused)
  return is_paused_;
}
inline void SceneTimeNotify::set_is_paused(bool value) {
  
  is_paused_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTimeNotify.is_paused)
}

// uint32 scene_id = 7;
inline void SceneTimeNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneTimeNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneTimeNotify.scene_id)
  return scene_id_;
}
inline void SceneTimeNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTimeNotify.scene_id)
}

// -------------------------------------------------------------------

// EnterSceneReadyReq

// uint32 enter_scene_token = 9;
inline void EnterSceneReadyReq::clear_enter_scene_token() {
  enter_scene_token_ = 0u;
}
inline ::google::protobuf::uint32 EnterSceneReadyReq::enter_scene_token() const {
  // @@protoc_insertion_point(field_get:proto.EnterSceneReadyReq.enter_scene_token)
  return enter_scene_token_;
}
inline void EnterSceneReadyReq::set_enter_scene_token(::google::protobuf::uint32 value) {
  
  enter_scene_token_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterSceneReadyReq.enter_scene_token)
}

// -------------------------------------------------------------------

// EnterSceneReadyRsp

// uint32 enter_scene_token = 1;
inline void EnterSceneReadyRsp::clear_enter_scene_token() {
  enter_scene_token_ = 0u;
}
inline ::google::protobuf::uint32 EnterSceneReadyRsp::enter_scene_token() const {
  // @@protoc_insertion_point(field_get:proto.EnterSceneReadyRsp.enter_scene_token)
  return enter_scene_token_;
}
inline void EnterSceneReadyRsp::set_enter_scene_token(::google::protobuf::uint32 value) {
  
  enter_scene_token_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterSceneReadyRsp.enter_scene_token)
}

// int32 retcode = 4;
inline void EnterSceneReadyRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 EnterSceneReadyRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.EnterSceneReadyRsp.retcode)
  return retcode_;
}
inline void EnterSceneReadyRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterSceneReadyRsp.retcode)
}

// -------------------------------------------------------------------

// EnterScenePeerNotify

// uint32 dest_scene_id = 12;
inline void EnterScenePeerNotify::clear_dest_scene_id() {
  dest_scene_id_ = 0u;
}
inline ::google::protobuf::uint32 EnterScenePeerNotify::dest_scene_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterScenePeerNotify.dest_scene_id)
  return dest_scene_id_;
}
inline void EnterScenePeerNotify::set_dest_scene_id(::google::protobuf::uint32 value) {
  
  dest_scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterScenePeerNotify.dest_scene_id)
}

// uint32 enter_scene_token = 11;
inline void EnterScenePeerNotify::clear_enter_scene_token() {
  enter_scene_token_ = 0u;
}
inline ::google::protobuf::uint32 EnterScenePeerNotify::enter_scene_token() const {
  // @@protoc_insertion_point(field_get:proto.EnterScenePeerNotify.enter_scene_token)
  return enter_scene_token_;
}
inline void EnterScenePeerNotify::set_enter_scene_token(::google::protobuf::uint32 value) {
  
  enter_scene_token_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterScenePeerNotify.enter_scene_token)
}

// uint32 host_peer_id = 14;
inline void EnterScenePeerNotify::clear_host_peer_id() {
  host_peer_id_ = 0u;
}
inline ::google::protobuf::uint32 EnterScenePeerNotify::host_peer_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterScenePeerNotify.host_peer_id)
  return host_peer_id_;
}
inline void EnterScenePeerNotify::set_host_peer_id(::google::protobuf::uint32 value) {
  
  host_peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterScenePeerNotify.host_peer_id)
}

// uint32 peer_id = 1;
inline void EnterScenePeerNotify::clear_peer_id() {
  peer_id_ = 0u;
}
inline ::google::protobuf::uint32 EnterScenePeerNotify::peer_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterScenePeerNotify.peer_id)
  return peer_id_;
}
inline void EnterScenePeerNotify::set_peer_id(::google::protobuf::uint32 value) {
  
  peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterScenePeerNotify.peer_id)
}

// -------------------------------------------------------------------

// EnterSceneDoneReq

// uint32 enter_scene_token = 11;
inline void EnterSceneDoneReq::clear_enter_scene_token() {
  enter_scene_token_ = 0u;
}
inline ::google::protobuf::uint32 EnterSceneDoneReq::enter_scene_token() const {
  // @@protoc_insertion_point(field_get:proto.EnterSceneDoneReq.enter_scene_token)
  return enter_scene_token_;
}
inline void EnterSceneDoneReq::set_enter_scene_token(::google::protobuf::uint32 value) {
  
  enter_scene_token_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterSceneDoneReq.enter_scene_token)
}

// -------------------------------------------------------------------

// EnterSceneDoneRsp

// uint32 enter_scene_token = 15;
inline void EnterSceneDoneRsp::clear_enter_scene_token() {
  enter_scene_token_ = 0u;
}
inline ::google::protobuf::uint32 EnterSceneDoneRsp::enter_scene_token() const {
  // @@protoc_insertion_point(field_get:proto.EnterSceneDoneRsp.enter_scene_token)
  return enter_scene_token_;
}
inline void EnterSceneDoneRsp::set_enter_scene_token(::google::protobuf::uint32 value) {
  
  enter_scene_token_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterSceneDoneRsp.enter_scene_token)
}

// int32 retcode = 7;
inline void EnterSceneDoneRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 EnterSceneDoneRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.EnterSceneDoneRsp.retcode)
  return retcode_;
}
inline void EnterSceneDoneRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterSceneDoneRsp.retcode)
}

// -------------------------------------------------------------------

// WorldPlayerDieNotify

// .proto.PlayerDieType die_type = 12;
inline void WorldPlayerDieNotify::clear_die_type() {
  die_type_ = 0;
}
inline ::proto::PlayerDieType WorldPlayerDieNotify::die_type() const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerDieNotify.die_type)
  return static_cast< ::proto::PlayerDieType >(die_type_);
}
inline void WorldPlayerDieNotify::set_die_type(::proto::PlayerDieType value) {
  
  die_type_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldPlayerDieNotify.die_type)
}

// uint32 murderer_entity_id = 15;
inline void WorldPlayerDieNotify::clear_murderer_entity_id() {
  murderer_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 WorldPlayerDieNotify::murderer_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerDieNotify.murderer_entity_id)
  return murderer_entity_id_;
}
inline void WorldPlayerDieNotify::set_murderer_entity_id(::google::protobuf::uint32 value) {
  
  murderer_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldPlayerDieNotify.murderer_entity_id)
}

// uint32 monster_id = 8;
inline bool WorldPlayerDieNotify::has_monster_id() const {
  return entity_case() == kMonsterId;
}
inline void WorldPlayerDieNotify::set_has_monster_id() {
  _oneof_case_[0] = kMonsterId;
}
inline void WorldPlayerDieNotify::clear_monster_id() {
  if (has_monster_id()) {
    entity_.monster_id_ = 0u;
    clear_has_entity();
  }
}
inline ::google::protobuf::uint32 WorldPlayerDieNotify::monster_id() const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerDieNotify.monster_id)
  if (has_monster_id()) {
    return entity_.monster_id_;
  }
  return 0u;
}
inline void WorldPlayerDieNotify::set_monster_id(::google::protobuf::uint32 value) {
  if (!has_monster_id()) {
    clear_entity();
    set_has_monster_id();
  }
  entity_.monster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldPlayerDieNotify.monster_id)
}

// uint32 gadget_id = 4;
inline bool WorldPlayerDieNotify::has_gadget_id() const {
  return entity_case() == kGadgetId;
}
inline void WorldPlayerDieNotify::set_has_gadget_id() {
  _oneof_case_[0] = kGadgetId;
}
inline void WorldPlayerDieNotify::clear_gadget_id() {
  if (has_gadget_id()) {
    entity_.gadget_id_ = 0u;
    clear_has_entity();
  }
}
inline ::google::protobuf::uint32 WorldPlayerDieNotify::gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerDieNotify.gadget_id)
  if (has_gadget_id()) {
    return entity_.gadget_id_;
  }
  return 0u;
}
inline void WorldPlayerDieNotify::set_gadget_id(::google::protobuf::uint32 value) {
  if (!has_gadget_id()) {
    clear_entity();
    set_has_gadget_id();
  }
  entity_.gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldPlayerDieNotify.gadget_id)
}

inline bool WorldPlayerDieNotify::has_entity() const {
  return entity_case() != ENTITY_NOT_SET;
}
inline void WorldPlayerDieNotify::clear_has_entity() {
  _oneof_case_[0] = ENTITY_NOT_SET;
}
inline WorldPlayerDieNotify::EntityCase WorldPlayerDieNotify::entity_case() const {
  return WorldPlayerDieNotify::EntityCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// WorldPlayerReviveReq

// -------------------------------------------------------------------

// WorldPlayerReviveRsp

// int32 retcode = 3;
inline void WorldPlayerReviveRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 WorldPlayerReviveRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerReviveRsp.retcode)
  return retcode_;
}
inline void WorldPlayerReviveRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldPlayerReviveRsp.retcode)
}

// -------------------------------------------------------------------

// JoinPlayerFailNotify

// int32 retcode = 11;
inline void JoinPlayerFailNotify::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 JoinPlayerFailNotify::retcode() const {
  // @@protoc_insertion_point(field_get:proto.JoinPlayerFailNotify.retcode)
  return retcode_;
}
inline void JoinPlayerFailNotify::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.JoinPlayerFailNotify.retcode)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SetSceneWeatherAreaReq

// uint32 weather_gadget_id = 13;
inline void SetSceneWeatherAreaReq::clear_weather_gadget_id() {
  weather_gadget_id_ = 0u;
}
inline ::google::protobuf::uint32 SetSceneWeatherAreaReq::weather_gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.SetSceneWeatherAreaReq.weather_gadget_id)
  return weather_gadget_id_;
}
inline void SetSceneWeatherAreaReq::set_weather_gadget_id(::google::protobuf::uint32 value) {
  
  weather_gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetSceneWeatherAreaReq.weather_gadget_id)
}

// map<uint32, string> weather_value_map = 4;
inline int SetSceneWeatherAreaReq::weather_value_map_size() const {
  return weather_value_map_.size();
}
inline void SetSceneWeatherAreaReq::clear_weather_value_map() {
  weather_value_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >&
SetSceneWeatherAreaReq::weather_value_map() const {
  // @@protoc_insertion_point(field_map:proto.SetSceneWeatherAreaReq.weather_value_map)
  return weather_value_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >*
SetSceneWeatherAreaReq::mutable_weather_value_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SetSceneWeatherAreaReq.weather_value_map)
  return weather_value_map_.MutableMap();
}

// -------------------------------------------------------------------

// SetSceneWeatherAreaRsp

// int32 retcode = 4;
inline void SetSceneWeatherAreaRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SetSceneWeatherAreaRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetSceneWeatherAreaRsp.retcode)
  return retcode_;
}
inline void SetSceneWeatherAreaRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetSceneWeatherAreaRsp.retcode)
}

// -------------------------------------------------------------------

// ExecuteGadgetLuaReq

// uint32 source_entity_id = 12;
inline void ExecuteGadgetLuaReq::clear_source_entity_id() {
  source_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 ExecuteGadgetLuaReq::source_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGadgetLuaReq.source_entity_id)
  return source_entity_id_;
}
inline void ExecuteGadgetLuaReq::set_source_entity_id(::google::protobuf::uint32 value) {
  
  source_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGadgetLuaReq.source_entity_id)
}

// int32 param3 = 1;
inline void ExecuteGadgetLuaReq::clear_param3() {
  param3_ = 0;
}
inline ::google::protobuf::int32 ExecuteGadgetLuaReq::param3() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGadgetLuaReq.param3)
  return param3_;
}
inline void ExecuteGadgetLuaReq::set_param3(::google::protobuf::int32 value) {
  
  param3_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGadgetLuaReq.param3)
}

// int32 param1 = 5;
inline void ExecuteGadgetLuaReq::clear_param1() {
  param1_ = 0;
}
inline ::google::protobuf::int32 ExecuteGadgetLuaReq::param1() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGadgetLuaReq.param1)
  return param1_;
}
inline void ExecuteGadgetLuaReq::set_param1(::google::protobuf::int32 value) {
  
  param1_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGadgetLuaReq.param1)
}

// int32 param2 = 14;
inline void ExecuteGadgetLuaReq::clear_param2() {
  param2_ = 0;
}
inline ::google::protobuf::int32 ExecuteGadgetLuaReq::param2() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGadgetLuaReq.param2)
  return param2_;
}
inline void ExecuteGadgetLuaReq::set_param2(::google::protobuf::int32 value) {
  
  param2_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGadgetLuaReq.param2)
}

// -------------------------------------------------------------------

// ExecuteGadgetLuaRsp

// int32 retcode = 12;
inline void ExecuteGadgetLuaRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ExecuteGadgetLuaRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGadgetLuaRsp.retcode)
  return retcode_;
}
inline void ExecuteGadgetLuaRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGadgetLuaRsp.retcode)
}

// -------------------------------------------------------------------

// CutSceneExtraParam

// repeated double detail_param_list = 1;
inline int CutSceneExtraParam::detail_param_list_size() const {
  return detail_param_list_.size();
}
inline void CutSceneExtraParam::clear_detail_param_list() {
  detail_param_list_.Clear();
}
inline double CutSceneExtraParam::detail_param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CutSceneExtraParam.detail_param_list)
  return detail_param_list_.Get(index);
}
inline void CutSceneExtraParam::set_detail_param_list(int index, double value) {
  detail_param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.CutSceneExtraParam.detail_param_list)
}
inline void CutSceneExtraParam::add_detail_param_list(double value) {
  detail_param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.CutSceneExtraParam.detail_param_list)
}
inline const ::google::protobuf::RepeatedField< double >&
CutSceneExtraParam::detail_param_list() const {
  // @@protoc_insertion_point(field_list:proto.CutSceneExtraParam.detail_param_list)
  return detail_param_list_;
}
inline ::google::protobuf::RepeatedField< double >*
CutSceneExtraParam::mutable_detail_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CutSceneExtraParam.detail_param_list)
  return &detail_param_list_;
}

// -------------------------------------------------------------------

// CutSceneBeginNotify

// bool is_wait_others = 9;
inline void CutSceneBeginNotify::clear_is_wait_others() {
  is_wait_others_ = false;
}
inline bool CutSceneBeginNotify::is_wait_others() const {
  // @@protoc_insertion_point(field_get:proto.CutSceneBeginNotify.is_wait_others)
  return is_wait_others_;
}
inline void CutSceneBeginNotify::set_is_wait_others(bool value) {
  
  is_wait_others_ = value;
  // @@protoc_insertion_point(field_set:proto.CutSceneBeginNotify.is_wait_others)
}

// uint32 cutscene_id = 14;
inline void CutSceneBeginNotify::clear_cutscene_id() {
  cutscene_id_ = 0u;
}
inline ::google::protobuf::uint32 CutSceneBeginNotify::cutscene_id() const {
  // @@protoc_insertion_point(field_get:proto.CutSceneBeginNotify.cutscene_id)
  return cutscene_id_;
}
inline void CutSceneBeginNotify::set_cutscene_id(::google::protobuf::uint32 value) {
  
  cutscene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CutSceneBeginNotify.cutscene_id)
}

// repeated .proto.CutSceneExtraParam extra_param_list = 3;
inline int CutSceneBeginNotify::extra_param_list_size() const {
  return extra_param_list_.size();
}
inline void CutSceneBeginNotify::clear_extra_param_list() {
  extra_param_list_.Clear();
}
inline const ::proto::CutSceneExtraParam& CutSceneBeginNotify::extra_param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CutSceneBeginNotify.extra_param_list)
  return extra_param_list_.Get(index);
}
inline ::proto::CutSceneExtraParam* CutSceneBeginNotify::mutable_extra_param_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CutSceneBeginNotify.extra_param_list)
  return extra_param_list_.Mutable(index);
}
inline ::proto::CutSceneExtraParam* CutSceneBeginNotify::add_extra_param_list() {
  // @@protoc_insertion_point(field_add:proto.CutSceneBeginNotify.extra_param_list)
  return extra_param_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::CutSceneExtraParam >*
CutSceneBeginNotify::mutable_extra_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CutSceneBeginNotify.extra_param_list)
  return &extra_param_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::CutSceneExtraParam >&
CutSceneBeginNotify::extra_param_list() const {
  // @@protoc_insertion_point(field_list:proto.CutSceneBeginNotify.extra_param_list)
  return extra_param_list_;
}

// -------------------------------------------------------------------

// CutSceneFinishNotify

// uint32 cutscene_id = 12;
inline void CutSceneFinishNotify::clear_cutscene_id() {
  cutscene_id_ = 0u;
}
inline ::google::protobuf::uint32 CutSceneFinishNotify::cutscene_id() const {
  // @@protoc_insertion_point(field_get:proto.CutSceneFinishNotify.cutscene_id)
  return cutscene_id_;
}
inline void CutSceneFinishNotify::set_cutscene_id(::google::protobuf::uint32 value) {
  
  cutscene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CutSceneFinishNotify.cutscene_id)
}

// -------------------------------------------------------------------

// CutSceneEndNotify

// int32 retcode = 5;
inline void CutSceneEndNotify::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 CutSceneEndNotify::retcode() const {
  // @@protoc_insertion_point(field_get:proto.CutSceneEndNotify.retcode)
  return retcode_;
}
inline void CutSceneEndNotify::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.CutSceneEndNotify.retcode)
}

// uint32 cutscene_id = 14;
inline void CutSceneEndNotify::clear_cutscene_id() {
  cutscene_id_ = 0u;
}
inline ::google::protobuf::uint32 CutSceneEndNotify::cutscene_id() const {
  // @@protoc_insertion_point(field_get:proto.CutSceneEndNotify.cutscene_id)
  return cutscene_id_;
}
inline void CutSceneEndNotify::set_cutscene_id(::google::protobuf::uint32 value) {
  
  cutscene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CutSceneEndNotify.cutscene_id)
}

// -------------------------------------------------------------------

// ClientScriptEventNotify

// repeated int32 param_list = 9;
inline int ClientScriptEventNotify::param_list_size() const {
  return param_list_.size();
}
inline void ClientScriptEventNotify::clear_param_list() {
  param_list_.Clear();
}
inline ::google::protobuf::int32 ClientScriptEventNotify::param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ClientScriptEventNotify.param_list)
  return param_list_.Get(index);
}
inline void ClientScriptEventNotify::set_param_list(int index, ::google::protobuf::int32 value) {
  param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ClientScriptEventNotify.param_list)
}
inline void ClientScriptEventNotify::add_param_list(::google::protobuf::int32 value) {
  param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ClientScriptEventNotify.param_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ClientScriptEventNotify::param_list() const {
  // @@protoc_insertion_point(field_list:proto.ClientScriptEventNotify.param_list)
  return param_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ClientScriptEventNotify::mutable_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ClientScriptEventNotify.param_list)
  return &param_list_;
}

// uint32 source_entity_id = 14;
inline void ClientScriptEventNotify::clear_source_entity_id() {
  source_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 ClientScriptEventNotify::source_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientScriptEventNotify.source_entity_id)
  return source_entity_id_;
}
inline void ClientScriptEventNotify::set_source_entity_id(::google::protobuf::uint32 value) {
  
  source_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientScriptEventNotify.source_entity_id)
}

// uint32 event_type = 10;
inline void ClientScriptEventNotify::clear_event_type() {
  event_type_ = 0u;
}
inline ::google::protobuf::uint32 ClientScriptEventNotify::event_type() const {
  // @@protoc_insertion_point(field_get:proto.ClientScriptEventNotify.event_type)
  return event_type_;
}
inline void ClientScriptEventNotify::set_event_type(::google::protobuf::uint32 value) {
  
  event_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientScriptEventNotify.event_type)
}

// uint32 target_entity_id = 13;
inline void ClientScriptEventNotify::clear_target_entity_id() {
  target_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 ClientScriptEventNotify::target_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientScriptEventNotify.target_entity_id)
  return target_entity_id_;
}
inline void ClientScriptEventNotify::set_target_entity_id(::google::protobuf::uint32 value) {
  
  target_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientScriptEventNotify.target_entity_id)
}

// -------------------------------------------------------------------

// SceneEntitiesMovesReq

// repeated .proto.EntityMoveInfo entity_move_info_list = 14;
inline int SceneEntitiesMovesReq::entity_move_info_list_size() const {
  return entity_move_info_list_.size();
}
inline void SceneEntitiesMovesReq::clear_entity_move_info_list() {
  entity_move_info_list_.Clear();
}
inline const ::proto::EntityMoveInfo& SceneEntitiesMovesReq::entity_move_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneEntitiesMovesReq.entity_move_info_list)
  return entity_move_info_list_.Get(index);
}
inline ::proto::EntityMoveInfo* SceneEntitiesMovesReq::mutable_entity_move_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneEntitiesMovesReq.entity_move_info_list)
  return entity_move_info_list_.Mutable(index);
}
inline ::proto::EntityMoveInfo* SceneEntitiesMovesReq::add_entity_move_info_list() {
  // @@protoc_insertion_point(field_add:proto.SceneEntitiesMovesReq.entity_move_info_list)
  return entity_move_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveInfo >*
SceneEntitiesMovesReq::mutable_entity_move_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneEntitiesMovesReq.entity_move_info_list)
  return &entity_move_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveInfo >&
SceneEntitiesMovesReq::entity_move_info_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneEntitiesMovesReq.entity_move_info_list)
  return entity_move_info_list_;
}

// -------------------------------------------------------------------

// EntityMoveFailInfo

// int32 retcode = 12;
inline void EntityMoveFailInfo::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 EntityMoveFailInfo::retcode() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveFailInfo.retcode)
  return retcode_;
}
inline void EntityMoveFailInfo::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveFailInfo.retcode)
}

// uint32 scene_time = 9;
inline void EntityMoveFailInfo::clear_scene_time() {
  scene_time_ = 0u;
}
inline ::google::protobuf::uint32 EntityMoveFailInfo::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveFailInfo.scene_time)
  return scene_time_;
}
inline void EntityMoveFailInfo::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveFailInfo.scene_time)
}

// .proto.MotionInfo fail_motion = 14;
inline bool EntityMoveFailInfo::has_fail_motion() const {
  return this != internal_default_instance() && fail_motion_ != NULL;
}
inline void EntityMoveFailInfo::clear_fail_motion() {
  if (GetArenaNoVirtual() == NULL && fail_motion_ != NULL) delete fail_motion_;
  fail_motion_ = NULL;
}
inline const ::proto::MotionInfo& EntityMoveFailInfo::fail_motion() const {
  const ::proto::MotionInfo* p = fail_motion_;
  // @@protoc_insertion_point(field_get:proto.EntityMoveFailInfo.fail_motion)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MotionInfo*>(
      &::proto::_MotionInfo_default_instance_);
}
inline ::proto::MotionInfo* EntityMoveFailInfo::mutable_fail_motion() {
  
  if (fail_motion_ == NULL) {
    fail_motion_ = new ::proto::MotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityMoveFailInfo.fail_motion)
  return fail_motion_;
}
inline ::proto::MotionInfo* EntityMoveFailInfo::release_fail_motion() {
  // @@protoc_insertion_point(field_release:proto.EntityMoveFailInfo.fail_motion)
  
  ::proto::MotionInfo* temp = fail_motion_;
  fail_motion_ = NULL;
  return temp;
}
inline void EntityMoveFailInfo::set_allocated_fail_motion(::proto::MotionInfo* fail_motion) {
  delete fail_motion_;
  fail_motion_ = fail_motion;
  if (fail_motion) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityMoveFailInfo.fail_motion)
}

// uint32 reliable_seq = 4;
inline void EntityMoveFailInfo::clear_reliable_seq() {
  reliable_seq_ = 0u;
}
inline ::google::protobuf::uint32 EntityMoveFailInfo::reliable_seq() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveFailInfo.reliable_seq)
  return reliable_seq_;
}
inline void EntityMoveFailInfo::set_reliable_seq(::google::protobuf::uint32 value) {
  
  reliable_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveFailInfo.reliable_seq)
}

// uint32 entity_id = 10;
inline void EntityMoveFailInfo::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityMoveFailInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveFailInfo.entity_id)
  return entity_id_;
}
inline void EntityMoveFailInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveFailInfo.entity_id)
}

// -------------------------------------------------------------------

// SceneEntitiesMovesRsp

// repeated .proto.EntityMoveFailInfo entity_move_fail_info_list = 11;
inline int SceneEntitiesMovesRsp::entity_move_fail_info_list_size() const {
  return entity_move_fail_info_list_.size();
}
inline void SceneEntitiesMovesRsp::clear_entity_move_fail_info_list() {
  entity_move_fail_info_list_.Clear();
}
inline const ::proto::EntityMoveFailInfo& SceneEntitiesMovesRsp::entity_move_fail_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneEntitiesMovesRsp.entity_move_fail_info_list)
  return entity_move_fail_info_list_.Get(index);
}
inline ::proto::EntityMoveFailInfo* SceneEntitiesMovesRsp::mutable_entity_move_fail_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneEntitiesMovesRsp.entity_move_fail_info_list)
  return entity_move_fail_info_list_.Mutable(index);
}
inline ::proto::EntityMoveFailInfo* SceneEntitiesMovesRsp::add_entity_move_fail_info_list() {
  // @@protoc_insertion_point(field_add:proto.SceneEntitiesMovesRsp.entity_move_fail_info_list)
  return entity_move_fail_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveFailInfo >*
SceneEntitiesMovesRsp::mutable_entity_move_fail_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneEntitiesMovesRsp.entity_move_fail_info_list)
  return &entity_move_fail_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveFailInfo >&
SceneEntitiesMovesRsp::entity_move_fail_info_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneEntitiesMovesRsp.entity_move_fail_info_list)
  return entity_move_fail_info_list_;
}

// -------------------------------------------------------------------

// SceneEntitiesMoveCombineNotify

// repeated .proto.EntityMoveInfo entity_move_info_list = 8;
inline int SceneEntitiesMoveCombineNotify::entity_move_info_list_size() const {
  return entity_move_info_list_.size();
}
inline void SceneEntitiesMoveCombineNotify::clear_entity_move_info_list() {
  entity_move_info_list_.Clear();
}
inline const ::proto::EntityMoveInfo& SceneEntitiesMoveCombineNotify::entity_move_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneEntitiesMoveCombineNotify.entity_move_info_list)
  return entity_move_info_list_.Get(index);
}
inline ::proto::EntityMoveInfo* SceneEntitiesMoveCombineNotify::mutable_entity_move_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneEntitiesMoveCombineNotify.entity_move_info_list)
  return entity_move_info_list_.Mutable(index);
}
inline ::proto::EntityMoveInfo* SceneEntitiesMoveCombineNotify::add_entity_move_info_list() {
  // @@protoc_insertion_point(field_add:proto.SceneEntitiesMoveCombineNotify.entity_move_info_list)
  return entity_move_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveInfo >*
SceneEntitiesMoveCombineNotify::mutable_entity_move_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneEntitiesMoveCombineNotify.entity_move_info_list)
  return &entity_move_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveInfo >&
SceneEntitiesMoveCombineNotify::entity_move_info_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneEntitiesMoveCombineNotify.entity_move_info_list)
  return entity_move_info_list_;
}

// -------------------------------------------------------------------

// UnlockTransPointReq

// uint32 point_id = 12;
inline void UnlockTransPointReq::clear_point_id() {
  point_id_ = 0u;
}
inline ::google::protobuf::uint32 UnlockTransPointReq::point_id() const {
  // @@protoc_insertion_point(field_get:proto.UnlockTransPointReq.point_id)
  return point_id_;
}
inline void UnlockTransPointReq::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockTransPointReq.point_id)
}

// uint32 scene_id = 10;
inline void UnlockTransPointReq::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 UnlockTransPointReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.UnlockTransPointReq.scene_id)
  return scene_id_;
}
inline void UnlockTransPointReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockTransPointReq.scene_id)
}

// -------------------------------------------------------------------

// UnlockTransPointRsp

// int32 retcode = 12;
inline void UnlockTransPointRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 UnlockTransPointRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.UnlockTransPointRsp.retcode)
  return retcode_;
}
inline void UnlockTransPointRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockTransPointRsp.retcode)
}

// -------------------------------------------------------------------

// SceneWeatherForcastReq

// uint32 weather_area_id = 15;
inline void SceneWeatherForcastReq::clear_weather_area_id() {
  weather_area_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneWeatherForcastReq::weather_area_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeatherForcastReq.weather_area_id)
  return weather_area_id_;
}
inline void SceneWeatherForcastReq::set_weather_area_id(::google::protobuf::uint32 value) {
  
  weather_area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeatherForcastReq.weather_area_id)
}

// -------------------------------------------------------------------

// SceneWeatherForcastRsp

// uint64 next_climate_time = 14;
inline void SceneWeatherForcastRsp::clear_next_climate_time() {
  next_climate_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SceneWeatherForcastRsp::next_climate_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeatherForcastRsp.next_climate_time)
  return next_climate_time_;
}
inline void SceneWeatherForcastRsp::set_next_climate_time(::google::protobuf::uint64 value) {
  
  next_climate_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeatherForcastRsp.next_climate_time)
}

// repeated uint32 forcast_climate_list = 2;
inline int SceneWeatherForcastRsp::forcast_climate_list_size() const {
  return forcast_climate_list_.size();
}
inline void SceneWeatherForcastRsp::clear_forcast_climate_list() {
  forcast_climate_list_.Clear();
}
inline ::google::protobuf::uint32 SceneWeatherForcastRsp::forcast_climate_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneWeatherForcastRsp.forcast_climate_list)
  return forcast_climate_list_.Get(index);
}
inline void SceneWeatherForcastRsp::set_forcast_climate_list(int index, ::google::protobuf::uint32 value) {
  forcast_climate_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneWeatherForcastRsp.forcast_climate_list)
}
inline void SceneWeatherForcastRsp::add_forcast_climate_list(::google::protobuf::uint32 value) {
  forcast_climate_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneWeatherForcastRsp.forcast_climate_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneWeatherForcastRsp::forcast_climate_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneWeatherForcastRsp.forcast_climate_list)
  return forcast_climate_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneWeatherForcastRsp::mutable_forcast_climate_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneWeatherForcastRsp.forcast_climate_list)
  return &forcast_climate_list_;
}

// int32 retcode = 4;
inline void SceneWeatherForcastRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SceneWeatherForcastRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeatherForcastRsp.retcode)
  return retcode_;
}
inline void SceneWeatherForcastRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeatherForcastRsp.retcode)
}

// -------------------------------------------------------------------

// MarkMapReq

// .proto.MapMarkPoint mark = 8;
inline bool MarkMapReq::has_mark() const {
  return this != internal_default_instance() && mark_ != NULL;
}
inline void MarkMapReq::clear_mark() {
  if (GetArenaNoVirtual() == NULL && mark_ != NULL) delete mark_;
  mark_ = NULL;
}
inline const ::proto::MapMarkPoint& MarkMapReq::mark() const {
  const ::proto::MapMarkPoint* p = mark_;
  // @@protoc_insertion_point(field_get:proto.MarkMapReq.mark)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MapMarkPoint*>(
      &::proto::_MapMarkPoint_default_instance_);
}
inline ::proto::MapMarkPoint* MarkMapReq::mutable_mark() {
  
  if (mark_ == NULL) {
    mark_ = new ::proto::MapMarkPoint;
  }
  // @@protoc_insertion_point(field_mutable:proto.MarkMapReq.mark)
  return mark_;
}
inline ::proto::MapMarkPoint* MarkMapReq::release_mark() {
  // @@protoc_insertion_point(field_release:proto.MarkMapReq.mark)
  
  ::proto::MapMarkPoint* temp = mark_;
  mark_ = NULL;
  return temp;
}
inline void MarkMapReq::set_allocated_mark(::proto::MapMarkPoint* mark) {
  delete mark_;
  mark_ = mark;
  if (mark) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MarkMapReq.mark)
}

// .proto.MapMarkPoint old = 6;
inline bool MarkMapReq::has_old() const {
  return this != internal_default_instance() && old_ != NULL;
}
inline void MarkMapReq::clear_old() {
  if (GetArenaNoVirtual() == NULL && old_ != NULL) delete old_;
  old_ = NULL;
}
inline const ::proto::MapMarkPoint& MarkMapReq::old() const {
  const ::proto::MapMarkPoint* p = old_;
  // @@protoc_insertion_point(field_get:proto.MarkMapReq.old)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MapMarkPoint*>(
      &::proto::_MapMarkPoint_default_instance_);
}
inline ::proto::MapMarkPoint* MarkMapReq::mutable_old() {
  
  if (old_ == NULL) {
    old_ = new ::proto::MapMarkPoint;
  }
  // @@protoc_insertion_point(field_mutable:proto.MarkMapReq.old)
  return old_;
}
inline ::proto::MapMarkPoint* MarkMapReq::release_old() {
  // @@protoc_insertion_point(field_release:proto.MarkMapReq.old)
  
  ::proto::MapMarkPoint* temp = old_;
  old_ = NULL;
  return temp;
}
inline void MarkMapReq::set_allocated_old(::proto::MapMarkPoint* old) {
  delete old_;
  old_ = old;
  if (old) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MarkMapReq.old)
}

// .proto.MarkMapReq.Operation op = 9;
inline void MarkMapReq::clear_op() {
  op_ = 0;
}
inline ::proto::MarkMapReq_Operation MarkMapReq::op() const {
  // @@protoc_insertion_point(field_get:proto.MarkMapReq.op)
  return static_cast< ::proto::MarkMapReq_Operation >(op_);
}
inline void MarkMapReq::set_op(::proto::MarkMapReq_Operation value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkMapReq.op)
}

// -------------------------------------------------------------------

// MarkMapRsp

// repeated .proto.MapMarkPoint mark_list = 8;
inline int MarkMapRsp::mark_list_size() const {
  return mark_list_.size();
}
inline void MarkMapRsp::clear_mark_list() {
  mark_list_.Clear();
}
inline const ::proto::MapMarkPoint& MarkMapRsp::mark_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MarkMapRsp.mark_list)
  return mark_list_.Get(index);
}
inline ::proto::MapMarkPoint* MarkMapRsp::mutable_mark_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MarkMapRsp.mark_list)
  return mark_list_.Mutable(index);
}
inline ::proto::MapMarkPoint* MarkMapRsp::add_mark_list() {
  // @@protoc_insertion_point(field_add:proto.MarkMapRsp.mark_list)
  return mark_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::MapMarkPoint >*
MarkMapRsp::mutable_mark_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MarkMapRsp.mark_list)
  return &mark_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::MapMarkPoint >&
MarkMapRsp::mark_list() const {
  // @@protoc_insertion_point(field_list:proto.MarkMapRsp.mark_list)
  return mark_list_;
}

// int32 retcode = 11;
inline void MarkMapRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 MarkMapRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.MarkMapRsp.retcode)
  return retcode_;
}
inline void MarkMapRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkMapRsp.retcode)
}

// -------------------------------------------------------------------

// AllMarkPointNotify

// repeated .proto.MapMarkPoint mark_list = 7;
inline int AllMarkPointNotify::mark_list_size() const {
  return mark_list_.size();
}
inline void AllMarkPointNotify::clear_mark_list() {
  mark_list_.Clear();
}
inline const ::proto::MapMarkPoint& AllMarkPointNotify::mark_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AllMarkPointNotify.mark_list)
  return mark_list_.Get(index);
}
inline ::proto::MapMarkPoint* AllMarkPointNotify::mutable_mark_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AllMarkPointNotify.mark_list)
  return mark_list_.Mutable(index);
}
inline ::proto::MapMarkPoint* AllMarkPointNotify::add_mark_list() {
  // @@protoc_insertion_point(field_add:proto.AllMarkPointNotify.mark_list)
  return mark_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::MapMarkPoint >*
AllMarkPointNotify::mutable_mark_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AllMarkPointNotify.mark_list)
  return &mark_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::MapMarkPoint >&
AllMarkPointNotify::mark_list() const {
  // @@protoc_insertion_point(field_list:proto.AllMarkPointNotify.mark_list)
  return mark_list_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// WorldDataNotify

// map<uint32, .proto.PropValue> world_prop_map = 9;
inline int WorldDataNotify::world_prop_map_size() const {
  return world_prop_map_.size();
}
inline void WorldDataNotify::clear_world_prop_map() {
  world_prop_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
WorldDataNotify::world_prop_map() const {
  // @@protoc_insertion_point(field_map:proto.WorldDataNotify.world_prop_map)
  return world_prop_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
WorldDataNotify::mutable_world_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.WorldDataNotify.world_prop_map)
  return world_prop_map_.MutableMap();
}

// -------------------------------------------------------------------

// EntityMoveRoomNotify

// uint32 entity_id = 11;
inline void EntityMoveRoomNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityMoveRoomNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveRoomNotify.entity_id)
  return entity_id_;
}
inline void EntityMoveRoomNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveRoomNotify.entity_id)
}

// uint32 dest_room_id = 9;
inline void EntityMoveRoomNotify::clear_dest_room_id() {
  dest_room_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityMoveRoomNotify::dest_room_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveRoomNotify.dest_room_id)
  return dest_room_id_;
}
inline void EntityMoveRoomNotify::set_dest_room_id(::google::protobuf::uint32 value) {
  
  dest_room_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveRoomNotify.dest_room_id)
}

// -------------------------------------------------------------------

// WorldPlayerInfoNotify

// repeated .proto.PlayerWidgetInfo player_widget_info_list = 8;
inline int WorldPlayerInfoNotify::player_widget_info_list_size() const {
  return player_widget_info_list_.size();
}
inline void WorldPlayerInfoNotify::clear_player_widget_info_list() {
  player_widget_info_list_.Clear();
}
inline const ::proto::PlayerWidgetInfo& WorldPlayerInfoNotify::player_widget_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerInfoNotify.player_widget_info_list)
  return player_widget_info_list_.Get(index);
}
inline ::proto::PlayerWidgetInfo* WorldPlayerInfoNotify::mutable_player_widget_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.WorldPlayerInfoNotify.player_widget_info_list)
  return player_widget_info_list_.Mutable(index);
}
inline ::proto::PlayerWidgetInfo* WorldPlayerInfoNotify::add_player_widget_info_list() {
  // @@protoc_insertion_point(field_add:proto.WorldPlayerInfoNotify.player_widget_info_list)
  return player_widget_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::PlayerWidgetInfo >*
WorldPlayerInfoNotify::mutable_player_widget_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WorldPlayerInfoNotify.player_widget_info_list)
  return &player_widget_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::PlayerWidgetInfo >&
WorldPlayerInfoNotify::player_widget_info_list() const {
  // @@protoc_insertion_point(field_list:proto.WorldPlayerInfoNotify.player_widget_info_list)
  return player_widget_info_list_;
}

// repeated .proto.OnlinePlayerInfo player_info_list = 14;
inline int WorldPlayerInfoNotify::player_info_list_size() const {
  return player_info_list_.size();
}
inline void WorldPlayerInfoNotify::clear_player_info_list() {
  player_info_list_.Clear();
}
inline const ::proto::OnlinePlayerInfo& WorldPlayerInfoNotify::player_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerInfoNotify.player_info_list)
  return player_info_list_.Get(index);
}
inline ::proto::OnlinePlayerInfo* WorldPlayerInfoNotify::mutable_player_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.WorldPlayerInfoNotify.player_info_list)
  return player_info_list_.Mutable(index);
}
inline ::proto::OnlinePlayerInfo* WorldPlayerInfoNotify::add_player_info_list() {
  // @@protoc_insertion_point(field_add:proto.WorldPlayerInfoNotify.player_info_list)
  return player_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::OnlinePlayerInfo >*
WorldPlayerInfoNotify::mutable_player_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WorldPlayerInfoNotify.player_info_list)
  return &player_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::OnlinePlayerInfo >&
WorldPlayerInfoNotify::player_info_list() const {
  // @@protoc_insertion_point(field_list:proto.WorldPlayerInfoNotify.player_info_list)
  return player_info_list_;
}

// repeated uint32 player_uid_list = 11;
inline int WorldPlayerInfoNotify::player_uid_list_size() const {
  return player_uid_list_.size();
}
inline void WorldPlayerInfoNotify::clear_player_uid_list() {
  player_uid_list_.Clear();
}
inline ::google::protobuf::uint32 WorldPlayerInfoNotify::player_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerInfoNotify.player_uid_list)
  return player_uid_list_.Get(index);
}
inline void WorldPlayerInfoNotify::set_player_uid_list(int index, ::google::protobuf::uint32 value) {
  player_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.WorldPlayerInfoNotify.player_uid_list)
}
inline void WorldPlayerInfoNotify::add_player_uid_list(::google::protobuf::uint32 value) {
  player_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.WorldPlayerInfoNotify.player_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
WorldPlayerInfoNotify::player_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.WorldPlayerInfoNotify.player_uid_list)
  return player_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
WorldPlayerInfoNotify::mutable_player_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WorldPlayerInfoNotify.player_uid_list)
  return &player_uid_list_;
}

// -------------------------------------------------------------------

// PostEnterSceneReq

// uint32 enter_scene_token = 12;
inline void PostEnterSceneReq::clear_enter_scene_token() {
  enter_scene_token_ = 0u;
}
inline ::google::protobuf::uint32 PostEnterSceneReq::enter_scene_token() const {
  // @@protoc_insertion_point(field_get:proto.PostEnterSceneReq.enter_scene_token)
  return enter_scene_token_;
}
inline void PostEnterSceneReq::set_enter_scene_token(::google::protobuf::uint32 value) {
  
  enter_scene_token_ = value;
  // @@protoc_insertion_point(field_set:proto.PostEnterSceneReq.enter_scene_token)
}

// -------------------------------------------------------------------

// PostEnterSceneRsp

// int32 retcode = 4;
inline void PostEnterSceneRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PostEnterSceneRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PostEnterSceneRsp.retcode)
  return retcode_;
}
inline void PostEnterSceneRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PostEnterSceneRsp.retcode)
}

// uint32 enter_scene_token = 12;
inline void PostEnterSceneRsp::clear_enter_scene_token() {
  enter_scene_token_ = 0u;
}
inline ::google::protobuf::uint32 PostEnterSceneRsp::enter_scene_token() const {
  // @@protoc_insertion_point(field_get:proto.PostEnterSceneRsp.enter_scene_token)
  return enter_scene_token_;
}
inline void PostEnterSceneRsp::set_enter_scene_token(::google::protobuf::uint32 value) {
  
  enter_scene_token_ = value;
  // @@protoc_insertion_point(field_set:proto.PostEnterSceneRsp.enter_scene_token)
}

// -------------------------------------------------------------------

// ChatInfo_SystemHint

// uint32 type = 14;
inline void ChatInfo_SystemHint::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 ChatInfo_SystemHint::type() const {
  // @@protoc_insertion_point(field_get:proto.ChatInfo.SystemHint.type)
  return type_;
}
inline void ChatInfo_SystemHint::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatInfo.SystemHint.type)
}

// -------------------------------------------------------------------

// ChatInfo

// uint32 time = 13;
inline void ChatInfo::clear_time() {
  time_ = 0u;
}
inline ::google::protobuf::uint32 ChatInfo::time() const {
  // @@protoc_insertion_point(field_get:proto.ChatInfo.time)
  return time_;
}
inline void ChatInfo::set_time(::google::protobuf::uint32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatInfo.time)
}

// uint32 sequence = 10;
inline void ChatInfo::clear_sequence() {
  sequence_ = 0u;
}
inline ::google::protobuf::uint32 ChatInfo::sequence() const {
  // @@protoc_insertion_point(field_get:proto.ChatInfo.sequence)
  return sequence_;
}
inline void ChatInfo::set_sequence(::google::protobuf::uint32 value) {
  
  sequence_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatInfo.sequence)
}

// uint32 to_uid = 7;
inline void ChatInfo::clear_to_uid() {
  to_uid_ = 0u;
}
inline ::google::protobuf::uint32 ChatInfo::to_uid() const {
  // @@protoc_insertion_point(field_get:proto.ChatInfo.to_uid)
  return to_uid_;
}
inline void ChatInfo::set_to_uid(::google::protobuf::uint32 value) {
  
  to_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatInfo.to_uid)
}

// uint32 uid = 15;
inline void ChatInfo::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 ChatInfo::uid() const {
  // @@protoc_insertion_point(field_get:proto.ChatInfo.uid)
  return uid_;
}
inline void ChatInfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatInfo.uid)
}

// bool is_read = 5;
inline void ChatInfo::clear_is_read() {
  is_read_ = false;
}
inline bool ChatInfo::is_read() const {
  // @@protoc_insertion_point(field_get:proto.ChatInfo.is_read)
  return is_read_;
}
inline void ChatInfo::set_is_read(bool value) {
  
  is_read_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatInfo.is_read)
}

// string text = 1946;
inline bool ChatInfo::has_text() const {
  return content_case() == kText;
}
inline void ChatInfo::set_has_text() {
  _oneof_case_[0] = kText;
}
inline void ChatInfo::clear_text() {
  if (has_text()) {
    content_.text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_content();
  }
}
inline const ::std::string& ChatInfo::text() const {
  // @@protoc_insertion_point(field_get:proto.ChatInfo.text)
  if (has_text()) {
    return content_.text_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void ChatInfo::set_text(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.ChatInfo.text)
  if (!has_text()) {
    clear_content();
    set_has_text();
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ChatInfo.text)
}
#if LANG_CXX11
inline void ChatInfo::set_text(::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.ChatInfo.text)
  if (!has_text()) {
    clear_content();
    set_has_text();
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ChatInfo.text)
}
#endif
inline void ChatInfo::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_text()) {
    clear_content();
    set_has_text();
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ChatInfo.text)
}
inline void ChatInfo::set_text(const char* value, size_t size) {
  if (!has_text()) {
    clear_content();
    set_has_text();
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ChatInfo.text)
}
inline ::std::string* ChatInfo::mutable_text() {
  if (!has_text()) {
    clear_content();
    set_has_text();
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:proto.ChatInfo.text)
  return content_.text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatInfo::release_text() {
  // @@protoc_insertion_point(field_release:proto.ChatInfo.text)
  if (has_text()) {
    clear_has_content();
    return content_.text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void ChatInfo::set_allocated_text(::std::string* text) {
  if (!has_text()) {
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_content();
  if (text != NULL) {
    set_has_text();
    content_.text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        text);
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ChatInfo.text)
}

// uint32 icon = 914;
inline bool ChatInfo::has_icon() const {
  return content_case() == kIcon;
}
inline void ChatInfo::set_has_icon() {
  _oneof_case_[0] = kIcon;
}
inline void ChatInfo::clear_icon() {
  if (has_icon()) {
    content_.icon_ = 0u;
    clear_has_content();
  }
}
inline ::google::protobuf::uint32 ChatInfo::icon() const {
  // @@protoc_insertion_point(field_get:proto.ChatInfo.icon)
  if (has_icon()) {
    return content_.icon_;
  }
  return 0u;
}
inline void ChatInfo::set_icon(::google::protobuf::uint32 value) {
  if (!has_icon()) {
    clear_content();
    set_has_icon();
  }
  content_.icon_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatInfo.icon)
}

// .proto.ChatInfo.SystemHint system_hint = 1753;
inline bool ChatInfo::has_system_hint() const {
  return content_case() == kSystemHint;
}
inline void ChatInfo::set_has_system_hint() {
  _oneof_case_[0] = kSystemHint;
}
inline void ChatInfo::clear_system_hint() {
  if (has_system_hint()) {
    delete content_.system_hint_;
    clear_has_content();
  }
}
inline  const ::proto::ChatInfo_SystemHint& ChatInfo::system_hint() const {
  // @@protoc_insertion_point(field_get:proto.ChatInfo.system_hint)
  return has_system_hint()
      ? *content_.system_hint_
      : ::proto::ChatInfo_SystemHint::default_instance();
}
inline ::proto::ChatInfo_SystemHint* ChatInfo::mutable_system_hint() {
  if (!has_system_hint()) {
    clear_content();
    set_has_system_hint();
    content_.system_hint_ = new ::proto::ChatInfo_SystemHint;
  }
  // @@protoc_insertion_point(field_mutable:proto.ChatInfo.system_hint)
  return content_.system_hint_;
}
inline ::proto::ChatInfo_SystemHint* ChatInfo::release_system_hint() {
  // @@protoc_insertion_point(field_release:proto.ChatInfo.system_hint)
  if (has_system_hint()) {
    clear_has_content();
    ::proto::ChatInfo_SystemHint* temp = content_.system_hint_;
    content_.system_hint_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ChatInfo::set_allocated_system_hint(::proto::ChatInfo_SystemHint* system_hint) {
  clear_content();
  if (system_hint) {
    set_has_system_hint();
    content_.system_hint_ = system_hint;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ChatInfo.system_hint)
}

inline bool ChatInfo::has_content() const {
  return content_case() != CONTENT_NOT_SET;
}
inline void ChatInfo::clear_has_content() {
  _oneof_case_[0] = CONTENT_NOT_SET;
}
inline ChatInfo::ContentCase ChatInfo::content_case() const {
  return ChatInfo::ContentCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// PlayerChatReq

// uint32 channel_id = 13;
inline void PlayerChatReq::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerChatReq::channel_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerChatReq.channel_id)
  return channel_id_;
}
inline void PlayerChatReq::set_channel_id(::google::protobuf::uint32 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerChatReq.channel_id)
}

// .proto.ChatInfo chat_info = 15;
inline bool PlayerChatReq::has_chat_info() const {
  return this != internal_default_instance() && chat_info_ != NULL;
}
inline void PlayerChatReq::clear_chat_info() {
  if (GetArenaNoVirtual() == NULL && chat_info_ != NULL) delete chat_info_;
  chat_info_ = NULL;
}
inline const ::proto::ChatInfo& PlayerChatReq::chat_info() const {
  const ::proto::ChatInfo* p = chat_info_;
  // @@protoc_insertion_point(field_get:proto.PlayerChatReq.chat_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ChatInfo*>(
      &::proto::_ChatInfo_default_instance_);
}
inline ::proto::ChatInfo* PlayerChatReq::mutable_chat_info() {
  
  if (chat_info_ == NULL) {
    chat_info_ = new ::proto::ChatInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerChatReq.chat_info)
  return chat_info_;
}
inline ::proto::ChatInfo* PlayerChatReq::release_chat_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerChatReq.chat_info)
  
  ::proto::ChatInfo* temp = chat_info_;
  chat_info_ = NULL;
  return temp;
}
inline void PlayerChatReq::set_allocated_chat_info(::proto::ChatInfo* chat_info) {
  delete chat_info_;
  chat_info_ = chat_info;
  if (chat_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerChatReq.chat_info)
}

// -------------------------------------------------------------------

// PlayerChatRsp

// uint32 chat_forbidden_endtime = 15;
inline void PlayerChatRsp::clear_chat_forbidden_endtime() {
  chat_forbidden_endtime_ = 0u;
}
inline ::google::protobuf::uint32 PlayerChatRsp::chat_forbidden_endtime() const {
  // @@protoc_insertion_point(field_get:proto.PlayerChatRsp.chat_forbidden_endtime)
  return chat_forbidden_endtime_;
}
inline void PlayerChatRsp::set_chat_forbidden_endtime(::google::protobuf::uint32 value) {
  
  chat_forbidden_endtime_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerChatRsp.chat_forbidden_endtime)
}

// int32 retcode = 2;
inline void PlayerChatRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PlayerChatRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerChatRsp.retcode)
  return retcode_;
}
inline void PlayerChatRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerChatRsp.retcode)
}

// -------------------------------------------------------------------

// PlayerChatNotify

// .proto.ChatInfo chat_info = 3;
inline bool PlayerChatNotify::has_chat_info() const {
  return this != internal_default_instance() && chat_info_ != NULL;
}
inline void PlayerChatNotify::clear_chat_info() {
  if (GetArenaNoVirtual() == NULL && chat_info_ != NULL) delete chat_info_;
  chat_info_ = NULL;
}
inline const ::proto::ChatInfo& PlayerChatNotify::chat_info() const {
  const ::proto::ChatInfo* p = chat_info_;
  // @@protoc_insertion_point(field_get:proto.PlayerChatNotify.chat_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ChatInfo*>(
      &::proto::_ChatInfo_default_instance_);
}
inline ::proto::ChatInfo* PlayerChatNotify::mutable_chat_info() {
  
  if (chat_info_ == NULL) {
    chat_info_ = new ::proto::ChatInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerChatNotify.chat_info)
  return chat_info_;
}
inline ::proto::ChatInfo* PlayerChatNotify::release_chat_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerChatNotify.chat_info)
  
  ::proto::ChatInfo* temp = chat_info_;
  chat_info_ = NULL;
  return temp;
}
inline void PlayerChatNotify::set_allocated_chat_info(::proto::ChatInfo* chat_info) {
  delete chat_info_;
  chat_info_ = chat_info;
  if (chat_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerChatNotify.chat_info)
}

// uint32 channel_id = 6;
inline void PlayerChatNotify::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerChatNotify::channel_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerChatNotify.channel_id)
  return channel_id_;
}
inline void PlayerChatNotify::set_channel_id(::google::protobuf::uint32 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerChatNotify.channel_id)
}

// -------------------------------------------------------------------

// PlayerChatCDNotify

// uint32 over_time = 15;
inline void PlayerChatCDNotify::clear_over_time() {
  over_time_ = 0u;
}
inline ::google::protobuf::uint32 PlayerChatCDNotify::over_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerChatCDNotify.over_time)
  return over_time_;
}
inline void PlayerChatCDNotify::set_over_time(::google::protobuf::uint32 value) {
  
  over_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerChatCDNotify.over_time)
}

// -------------------------------------------------------------------

// ChatHistoryNotify

// repeated .proto.ChatInfo chat_info = 9;
inline int ChatHistoryNotify::chat_info_size() const {
  return chat_info_.size();
}
inline void ChatHistoryNotify::clear_chat_info() {
  chat_info_.Clear();
}
inline const ::proto::ChatInfo& ChatHistoryNotify::chat_info(int index) const {
  // @@protoc_insertion_point(field_get:proto.ChatHistoryNotify.chat_info)
  return chat_info_.Get(index);
}
inline ::proto::ChatInfo* ChatHistoryNotify::mutable_chat_info(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ChatHistoryNotify.chat_info)
  return chat_info_.Mutable(index);
}
inline ::proto::ChatInfo* ChatHistoryNotify::add_chat_info() {
  // @@protoc_insertion_point(field_add:proto.ChatHistoryNotify.chat_info)
  return chat_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ChatInfo >*
ChatHistoryNotify::mutable_chat_info() {
  // @@protoc_insertion_point(field_mutable_list:proto.ChatHistoryNotify.chat_info)
  return &chat_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ChatInfo >&
ChatHistoryNotify::chat_info() const {
  // @@protoc_insertion_point(field_list:proto.ChatHistoryNotify.chat_info)
  return chat_info_;
}

// uint32 channel_id = 12;
inline void ChatHistoryNotify::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::google::protobuf::uint32 ChatHistoryNotify::channel_id() const {
  // @@protoc_insertion_point(field_get:proto.ChatHistoryNotify.channel_id)
  return channel_id_;
}
inline void ChatHistoryNotify::set_channel_id(::google::protobuf::uint32 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatHistoryNotify.channel_id)
}

// -------------------------------------------------------------------

// SceneDataNotify

// repeated string level_config_name_list = 15;
inline int SceneDataNotify::level_config_name_list_size() const {
  return level_config_name_list_.size();
}
inline void SceneDataNotify::clear_level_config_name_list() {
  level_config_name_list_.Clear();
}
inline const ::std::string& SceneDataNotify::level_config_name_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneDataNotify.level_config_name_list)
  return level_config_name_list_.Get(index);
}
inline ::std::string* SceneDataNotify::mutable_level_config_name_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneDataNotify.level_config_name_list)
  return level_config_name_list_.Mutable(index);
}
inline void SceneDataNotify::set_level_config_name_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.SceneDataNotify.level_config_name_list)
  level_config_name_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SceneDataNotify::set_level_config_name_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.SceneDataNotify.level_config_name_list)
  level_config_name_list_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SceneDataNotify::set_level_config_name_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  level_config_name_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.SceneDataNotify.level_config_name_list)
}
inline void SceneDataNotify::set_level_config_name_list(int index, const char* value, size_t size) {
  level_config_name_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.SceneDataNotify.level_config_name_list)
}
inline ::std::string* SceneDataNotify::add_level_config_name_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.SceneDataNotify.level_config_name_list)
  return level_config_name_list_.Add();
}
inline void SceneDataNotify::add_level_config_name_list(const ::std::string& value) {
  level_config_name_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.SceneDataNotify.level_config_name_list)
}
#if LANG_CXX11
inline void SceneDataNotify::add_level_config_name_list(::std::string&& value) {
  level_config_name_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.SceneDataNotify.level_config_name_list)
}
#endif
inline void SceneDataNotify::add_level_config_name_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  level_config_name_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.SceneDataNotify.level_config_name_list)
}
inline void SceneDataNotify::add_level_config_name_list(const char* value, size_t size) {
  level_config_name_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.SceneDataNotify.level_config_name_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SceneDataNotify::level_config_name_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneDataNotify.level_config_name_list)
  return level_config_name_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SceneDataNotify::mutable_level_config_name_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneDataNotify.level_config_name_list)
  return &level_config_name_list_;
}

// repeated uint32 scene_tag_id_list = 8;
inline int SceneDataNotify::scene_tag_id_list_size() const {
  return scene_tag_id_list_.size();
}
inline void SceneDataNotify::clear_scene_tag_id_list() {
  scene_tag_id_list_.Clear();
}
inline ::google::protobuf::uint32 SceneDataNotify::scene_tag_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneDataNotify.scene_tag_id_list)
  return scene_tag_id_list_.Get(index);
}
inline void SceneDataNotify::set_scene_tag_id_list(int index, ::google::protobuf::uint32 value) {
  scene_tag_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneDataNotify.scene_tag_id_list)
}
inline void SceneDataNotify::add_scene_tag_id_list(::google::protobuf::uint32 value) {
  scene_tag_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneDataNotify.scene_tag_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneDataNotify::scene_tag_id_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneDataNotify.scene_tag_id_list)
  return scene_tag_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneDataNotify::mutable_scene_tag_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneDataNotify.scene_tag_id_list)
  return &scene_tag_id_list_;
}

// -------------------------------------------------------------------

// DungeonEntryToBeExploreNotify

// uint32 dungeon_entry_scene_point_id = 2;
inline void DungeonEntryToBeExploreNotify::clear_dungeon_entry_scene_point_id() {
  dungeon_entry_scene_point_id_ = 0u;
}
inline ::google::protobuf::uint32 DungeonEntryToBeExploreNotify::dungeon_entry_scene_point_id() const {
  // @@protoc_insertion_point(field_get:proto.DungeonEntryToBeExploreNotify.dungeon_entry_scene_point_id)
  return dungeon_entry_scene_point_id_;
}
inline void DungeonEntryToBeExploreNotify::set_dungeon_entry_scene_point_id(::google::protobuf::uint32 value) {
  
  dungeon_entry_scene_point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DungeonEntryToBeExploreNotify.dungeon_entry_scene_point_id)
}

// uint32 scene_id = 4;
inline void DungeonEntryToBeExploreNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 DungeonEntryToBeExploreNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.DungeonEntryToBeExploreNotify.scene_id)
  return scene_id_;
}
inline void DungeonEntryToBeExploreNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DungeonEntryToBeExploreNotify.scene_id)
}

// uint32 dungeon_entry_config_id = 10;
inline void DungeonEntryToBeExploreNotify::clear_dungeon_entry_config_id() {
  dungeon_entry_config_id_ = 0u;
}
inline ::google::protobuf::uint32 DungeonEntryToBeExploreNotify::dungeon_entry_config_id() const {
  // @@protoc_insertion_point(field_get:proto.DungeonEntryToBeExploreNotify.dungeon_entry_config_id)
  return dungeon_entry_config_id_;
}
inline void DungeonEntryToBeExploreNotify::set_dungeon_entry_config_id(::google::protobuf::uint32 value) {
  
  dungeon_entry_config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DungeonEntryToBeExploreNotify.dungeon_entry_config_id)
}

// -------------------------------------------------------------------

// GetDungeonEntryExploreConditionReq

// uint32 scene_id = 6;
inline void GetDungeonEntryExploreConditionReq::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 GetDungeonEntryExploreConditionReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.GetDungeonEntryExploreConditionReq.scene_id)
  return scene_id_;
}
inline void GetDungeonEntryExploreConditionReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetDungeonEntryExploreConditionReq.scene_id)
}

// uint32 dungeon_entry_config_id = 2;
inline void GetDungeonEntryExploreConditionReq::clear_dungeon_entry_config_id() {
  dungeon_entry_config_id_ = 0u;
}
inline ::google::protobuf::uint32 GetDungeonEntryExploreConditionReq::dungeon_entry_config_id() const {
  // @@protoc_insertion_point(field_get:proto.GetDungeonEntryExploreConditionReq.dungeon_entry_config_id)
  return dungeon_entry_config_id_;
}
inline void GetDungeonEntryExploreConditionReq::set_dungeon_entry_config_id(::google::protobuf::uint32 value) {
  
  dungeon_entry_config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetDungeonEntryExploreConditionReq.dungeon_entry_config_id)
}

// uint32 dungeon_entry_scene_point_id = 4;
inline void GetDungeonEntryExploreConditionReq::clear_dungeon_entry_scene_point_id() {
  dungeon_entry_scene_point_id_ = 0u;
}
inline ::google::protobuf::uint32 GetDungeonEntryExploreConditionReq::dungeon_entry_scene_point_id() const {
  // @@protoc_insertion_point(field_get:proto.GetDungeonEntryExploreConditionReq.dungeon_entry_scene_point_id)
  return dungeon_entry_scene_point_id_;
}
inline void GetDungeonEntryExploreConditionReq::set_dungeon_entry_scene_point_id(::google::protobuf::uint32 value) {
  
  dungeon_entry_scene_point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetDungeonEntryExploreConditionReq.dungeon_entry_scene_point_id)
}

// -------------------------------------------------------------------

// DungeonEntryCond

// .proto.DungeonEntryBlockReason cond_reason = 7;
inline void DungeonEntryCond::clear_cond_reason() {
  cond_reason_ = 0;
}
inline ::proto::DungeonEntryBlockReason DungeonEntryCond::cond_reason() const {
  // @@protoc_insertion_point(field_get:proto.DungeonEntryCond.cond_reason)
  return static_cast< ::proto::DungeonEntryBlockReason >(cond_reason_);
}
inline void DungeonEntryCond::set_cond_reason(::proto::DungeonEntryBlockReason value) {
  
  cond_reason_ = value;
  // @@protoc_insertion_point(field_set:proto.DungeonEntryCond.cond_reason)
}

// uint32 param1 = 8;
inline void DungeonEntryCond::clear_param1() {
  param1_ = 0u;
}
inline ::google::protobuf::uint32 DungeonEntryCond::param1() const {
  // @@protoc_insertion_point(field_get:proto.DungeonEntryCond.param1)
  return param1_;
}
inline void DungeonEntryCond::set_param1(::google::protobuf::uint32 value) {
  
  param1_ = value;
  // @@protoc_insertion_point(field_set:proto.DungeonEntryCond.param1)
}

// -------------------------------------------------------------------

// GetDungeonEntryExploreConditionRsp

// .proto.DungeonEntryCond dungeon_entry_cond = 5;
inline bool GetDungeonEntryExploreConditionRsp::has_dungeon_entry_cond() const {
  return this != internal_default_instance() && dungeon_entry_cond_ != NULL;
}
inline void GetDungeonEntryExploreConditionRsp::clear_dungeon_entry_cond() {
  if (GetArenaNoVirtual() == NULL && dungeon_entry_cond_ != NULL) delete dungeon_entry_cond_;
  dungeon_entry_cond_ = NULL;
}
inline const ::proto::DungeonEntryCond& GetDungeonEntryExploreConditionRsp::dungeon_entry_cond() const {
  const ::proto::DungeonEntryCond* p = dungeon_entry_cond_;
  // @@protoc_insertion_point(field_get:proto.GetDungeonEntryExploreConditionRsp.dungeon_entry_cond)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::DungeonEntryCond*>(
      &::proto::_DungeonEntryCond_default_instance_);
}
inline ::proto::DungeonEntryCond* GetDungeonEntryExploreConditionRsp::mutable_dungeon_entry_cond() {
  
  if (dungeon_entry_cond_ == NULL) {
    dungeon_entry_cond_ = new ::proto::DungeonEntryCond;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetDungeonEntryExploreConditionRsp.dungeon_entry_cond)
  return dungeon_entry_cond_;
}
inline ::proto::DungeonEntryCond* GetDungeonEntryExploreConditionRsp::release_dungeon_entry_cond() {
  // @@protoc_insertion_point(field_release:proto.GetDungeonEntryExploreConditionRsp.dungeon_entry_cond)
  
  ::proto::DungeonEntryCond* temp = dungeon_entry_cond_;
  dungeon_entry_cond_ = NULL;
  return temp;
}
inline void GetDungeonEntryExploreConditionRsp::set_allocated_dungeon_entry_cond(::proto::DungeonEntryCond* dungeon_entry_cond) {
  delete dungeon_entry_cond_;
  dungeon_entry_cond_ = dungeon_entry_cond;
  if (dungeon_entry_cond) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetDungeonEntryExploreConditionRsp.dungeon_entry_cond)
}

// int32 retcode = 3;
inline void GetDungeonEntryExploreConditionRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetDungeonEntryExploreConditionRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetDungeonEntryExploreConditionRsp.retcode)
  return retcode_;
}
inline void GetDungeonEntryExploreConditionRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetDungeonEntryExploreConditionRsp.retcode)
}

// -------------------------------------------------------------------

// UnfreezeGroupLimitNotify

// uint32 point_id = 9;
inline void UnfreezeGroupLimitNotify::clear_point_id() {
  point_id_ = 0u;
}
inline ::google::protobuf::uint32 UnfreezeGroupLimitNotify::point_id() const {
  // @@protoc_insertion_point(field_get:proto.UnfreezeGroupLimitNotify.point_id)
  return point_id_;
}
inline void UnfreezeGroupLimitNotify::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnfreezeGroupLimitNotify.point_id)
}

// uint32 scene_id = 11;
inline void UnfreezeGroupLimitNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 UnfreezeGroupLimitNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.UnfreezeGroupLimitNotify.scene_id)
  return scene_id_;
}
inline void UnfreezeGroupLimitNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnfreezeGroupLimitNotify.scene_id)
}

// -------------------------------------------------------------------

// SetEntityClientDataNotify

// uint32 entity_id = 14;
inline void SetEntityClientDataNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SetEntityClientDataNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SetEntityClientDataNotify.entity_id)
  return entity_id_;
}
inline void SetEntityClientDataNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetEntityClientDataNotify.entity_id)
}

// .proto.EntityClientData entity_client_data = 9;
inline bool SetEntityClientDataNotify::has_entity_client_data() const {
  return this != internal_default_instance() && entity_client_data_ != NULL;
}
inline void SetEntityClientDataNotify::clear_entity_client_data() {
  if (GetArenaNoVirtual() == NULL && entity_client_data_ != NULL) delete entity_client_data_;
  entity_client_data_ = NULL;
}
inline const ::proto::EntityClientData& SetEntityClientDataNotify::entity_client_data() const {
  const ::proto::EntityClientData* p = entity_client_data_;
  // @@protoc_insertion_point(field_get:proto.SetEntityClientDataNotify.entity_client_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EntityClientData*>(
      &::proto::_EntityClientData_default_instance_);
}
inline ::proto::EntityClientData* SetEntityClientDataNotify::mutable_entity_client_data() {
  
  if (entity_client_data_ == NULL) {
    entity_client_data_ = new ::proto::EntityClientData;
  }
  // @@protoc_insertion_point(field_mutable:proto.SetEntityClientDataNotify.entity_client_data)
  return entity_client_data_;
}
inline ::proto::EntityClientData* SetEntityClientDataNotify::release_entity_client_data() {
  // @@protoc_insertion_point(field_release:proto.SetEntityClientDataNotify.entity_client_data)
  
  ::proto::EntityClientData* temp = entity_client_data_;
  entity_client_data_ = NULL;
  return temp;
}
inline void SetEntityClientDataNotify::set_allocated_entity_client_data(::proto::EntityClientData* entity_client_data) {
  delete entity_client_data_;
  entity_client_data_ = entity_client_data;
  if (entity_client_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SetEntityClientDataNotify.entity_client_data)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GroupSuiteNotify

// map<uint32, uint32> group_map = 3;
inline int GroupSuiteNotify::group_map_size() const {
  return group_map_.size();
}
inline void GroupSuiteNotify::clear_group_map() {
  group_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
GroupSuiteNotify::group_map() const {
  // @@protoc_insertion_point(field_map:proto.GroupSuiteNotify.group_map)
  return group_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
GroupSuiteNotify::mutable_group_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GroupSuiteNotify.group_map)
  return group_map_.MutableMap();
}

// -------------------------------------------------------------------

// GroupUnloadNotify

// repeated uint32 group_list = 10;
inline int GroupUnloadNotify::group_list_size() const {
  return group_list_.size();
}
inline void GroupUnloadNotify::clear_group_list() {
  group_list_.Clear();
}
inline ::google::protobuf::uint32 GroupUnloadNotify::group_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GroupUnloadNotify.group_list)
  return group_list_.Get(index);
}
inline void GroupUnloadNotify::set_group_list(int index, ::google::protobuf::uint32 value) {
  group_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GroupUnloadNotify.group_list)
}
inline void GroupUnloadNotify::add_group_list(::google::protobuf::uint32 value) {
  group_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GroupUnloadNotify.group_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GroupUnloadNotify::group_list() const {
  // @@protoc_insertion_point(field_list:proto.GroupUnloadNotify.group_list)
  return group_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GroupUnloadNotify::mutable_group_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GroupUnloadNotify.group_list)
  return &group_list_;
}

// -------------------------------------------------------------------

// MonsterAIConfigHashNotify

// uint32 job_id = 10;
inline void MonsterAIConfigHashNotify::clear_job_id() {
  job_id_ = 0u;
}
inline ::google::protobuf::uint32 MonsterAIConfigHashNotify::job_id() const {
  // @@protoc_insertion_point(field_get:proto.MonsterAIConfigHashNotify.job_id)
  return job_id_;
}
inline void MonsterAIConfigHashNotify::set_job_id(::google::protobuf::uint32 value) {
  
  job_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MonsterAIConfigHashNotify.job_id)
}

// uint32 entity_id = 15;
inline void MonsterAIConfigHashNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 MonsterAIConfigHashNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.MonsterAIConfigHashNotify.entity_id)
  return entity_id_;
}
inline void MonsterAIConfigHashNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MonsterAIConfigHashNotify.entity_id)
}

// int32 hash_value = 11;
inline void MonsterAIConfigHashNotify::clear_hash_value() {
  hash_value_ = 0;
}
inline ::google::protobuf::int32 MonsterAIConfigHashNotify::hash_value() const {
  // @@protoc_insertion_point(field_get:proto.MonsterAIConfigHashNotify.hash_value)
  return hash_value_;
}
inline void MonsterAIConfigHashNotify::set_hash_value(::google::protobuf::int32 value) {
  
  hash_value_ = value;
  // @@protoc_insertion_point(field_set:proto.MonsterAIConfigHashNotify.hash_value)
}

// -------------------------------------------------------------------

// ShowTemplateReminderNotify

// bool is_revoke = 1;
inline void ShowTemplateReminderNotify::clear_is_revoke() {
  is_revoke_ = false;
}
inline bool ShowTemplateReminderNotify::is_revoke() const {
  // @@protoc_insertion_point(field_get:proto.ShowTemplateReminderNotify.is_revoke)
  return is_revoke_;
}
inline void ShowTemplateReminderNotify::set_is_revoke(bool value) {
  
  is_revoke_ = value;
  // @@protoc_insertion_point(field_set:proto.ShowTemplateReminderNotify.is_revoke)
}

// uint32 template_reminder_id = 14;
inline void ShowTemplateReminderNotify::clear_template_reminder_id() {
  template_reminder_id_ = 0u;
}
inline ::google::protobuf::uint32 ShowTemplateReminderNotify::template_reminder_id() const {
  // @@protoc_insertion_point(field_get:proto.ShowTemplateReminderNotify.template_reminder_id)
  return template_reminder_id_;
}
inline void ShowTemplateReminderNotify::set_template_reminder_id(::google::protobuf::uint32 value) {
  
  template_reminder_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ShowTemplateReminderNotify.template_reminder_id)
}

// repeated uint32 param_uid_list = 3;
inline int ShowTemplateReminderNotify::param_uid_list_size() const {
  return param_uid_list_.size();
}
inline void ShowTemplateReminderNotify::clear_param_uid_list() {
  param_uid_list_.Clear();
}
inline ::google::protobuf::uint32 ShowTemplateReminderNotify::param_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ShowTemplateReminderNotify.param_uid_list)
  return param_uid_list_.Get(index);
}
inline void ShowTemplateReminderNotify::set_param_uid_list(int index, ::google::protobuf::uint32 value) {
  param_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ShowTemplateReminderNotify.param_uid_list)
}
inline void ShowTemplateReminderNotify::add_param_uid_list(::google::protobuf::uint32 value) {
  param_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ShowTemplateReminderNotify.param_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ShowTemplateReminderNotify::param_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.ShowTemplateReminderNotify.param_uid_list)
  return param_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ShowTemplateReminderNotify::mutable_param_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ShowTemplateReminderNotify.param_uid_list)
  return &param_uid_list_;
}

// repeated int32 param_list = 10;
inline int ShowTemplateReminderNotify::param_list_size() const {
  return param_list_.size();
}
inline void ShowTemplateReminderNotify::clear_param_list() {
  param_list_.Clear();
}
inline ::google::protobuf::int32 ShowTemplateReminderNotify::param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ShowTemplateReminderNotify.param_list)
  return param_list_.Get(index);
}
inline void ShowTemplateReminderNotify::set_param_list(int index, ::google::protobuf::int32 value) {
  param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ShowTemplateReminderNotify.param_list)
}
inline void ShowTemplateReminderNotify::add_param_list(::google::protobuf::int32 value) {
  param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ShowTemplateReminderNotify.param_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ShowTemplateReminderNotify::param_list() const {
  // @@protoc_insertion_point(field_list:proto.ShowTemplateReminderNotify.param_list)
  return param_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ShowTemplateReminderNotify::mutable_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ShowTemplateReminderNotify.param_list)
  return &param_list_;
}

// bool is_need_cache = 15;
inline void ShowTemplateReminderNotify::clear_is_need_cache() {
  is_need_cache_ = false;
}
inline bool ShowTemplateReminderNotify::is_need_cache() const {
  // @@protoc_insertion_point(field_get:proto.ShowTemplateReminderNotify.is_need_cache)
  return is_need_cache_;
}
inline void ShowTemplateReminderNotify::set_is_need_cache(bool value) {
  
  is_need_cache_ = value;
  // @@protoc_insertion_point(field_set:proto.ShowTemplateReminderNotify.is_need_cache)
}

// -------------------------------------------------------------------

// ShowCommonTipsNotify

// string content = 8;
inline void ShowCommonTipsNotify::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShowCommonTipsNotify::content() const {
  // @@protoc_insertion_point(field_get:proto.ShowCommonTipsNotify.content)
  return content_.GetNoArena();
}
inline void ShowCommonTipsNotify::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ShowCommonTipsNotify.content)
}
#if LANG_CXX11
inline void ShowCommonTipsNotify::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ShowCommonTipsNotify.content)
}
#endif
inline void ShowCommonTipsNotify::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ShowCommonTipsNotify.content)
}
inline void ShowCommonTipsNotify::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ShowCommonTipsNotify.content)
}
inline ::std::string* ShowCommonTipsNotify::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:proto.ShowCommonTipsNotify.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShowCommonTipsNotify::release_content() {
  // @@protoc_insertion_point(field_release:proto.ShowCommonTipsNotify.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShowCommonTipsNotify::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:proto.ShowCommonTipsNotify.content)
}

// string title = 13;
inline void ShowCommonTipsNotify::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShowCommonTipsNotify::title() const {
  // @@protoc_insertion_point(field_get:proto.ShowCommonTipsNotify.title)
  return title_.GetNoArena();
}
inline void ShowCommonTipsNotify::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ShowCommonTipsNotify.title)
}
#if LANG_CXX11
inline void ShowCommonTipsNotify::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ShowCommonTipsNotify.title)
}
#endif
inline void ShowCommonTipsNotify::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ShowCommonTipsNotify.title)
}
inline void ShowCommonTipsNotify::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ShowCommonTipsNotify.title)
}
inline ::std::string* ShowCommonTipsNotify::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:proto.ShowCommonTipsNotify.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShowCommonTipsNotify::release_title() {
  // @@protoc_insertion_point(field_release:proto.ShowCommonTipsNotify.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShowCommonTipsNotify::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:proto.ShowCommonTipsNotify.title)
}

// uint32 close_time = 4;
inline void ShowCommonTipsNotify::clear_close_time() {
  close_time_ = 0u;
}
inline ::google::protobuf::uint32 ShowCommonTipsNotify::close_time() const {
  // @@protoc_insertion_point(field_get:proto.ShowCommonTipsNotify.close_time)
  return close_time_;
}
inline void ShowCommonTipsNotify::set_close_time(::google::protobuf::uint32 value) {
  
  close_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ShowCommonTipsNotify.close_time)
}

// -------------------------------------------------------------------

// CloseCommonTipsNotify

// -------------------------------------------------------------------

// ChangeWorldToSingleModeNotify

// -------------------------------------------------------------------

// SyncScenePlayTeamEntityNotify

// uint32 scene_id = 2;
inline void SyncScenePlayTeamEntityNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 SyncScenePlayTeamEntityNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.SyncScenePlayTeamEntityNotify.scene_id)
  return scene_id_;
}
inline void SyncScenePlayTeamEntityNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SyncScenePlayTeamEntityNotify.scene_id)
}

// repeated .proto.PlayTeamEntityInfo entity_info_list = 3;
inline int SyncScenePlayTeamEntityNotify::entity_info_list_size() const {
  return entity_info_list_.size();
}
inline void SyncScenePlayTeamEntityNotify::clear_entity_info_list() {
  entity_info_list_.Clear();
}
inline const ::proto::PlayTeamEntityInfo& SyncScenePlayTeamEntityNotify::entity_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SyncScenePlayTeamEntityNotify.entity_info_list)
  return entity_info_list_.Get(index);
}
inline ::proto::PlayTeamEntityInfo* SyncScenePlayTeamEntityNotify::mutable_entity_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SyncScenePlayTeamEntityNotify.entity_info_list)
  return entity_info_list_.Mutable(index);
}
inline ::proto::PlayTeamEntityInfo* SyncScenePlayTeamEntityNotify::add_entity_info_list() {
  // @@protoc_insertion_point(field_add:proto.SyncScenePlayTeamEntityNotify.entity_info_list)
  return entity_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::PlayTeamEntityInfo >*
SyncScenePlayTeamEntityNotify::mutable_entity_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SyncScenePlayTeamEntityNotify.entity_info_list)
  return &entity_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::PlayTeamEntityInfo >&
SyncScenePlayTeamEntityNotify::entity_info_list() const {
  // @@protoc_insertion_point(field_list:proto.SyncScenePlayTeamEntityNotify.entity_info_list)
  return entity_info_list_;
}

// -------------------------------------------------------------------

// DelScenePlayTeamEntityNotify

// repeated uint32 del_entity_id_list = 2;
inline int DelScenePlayTeamEntityNotify::del_entity_id_list_size() const {
  return del_entity_id_list_.size();
}
inline void DelScenePlayTeamEntityNotify::clear_del_entity_id_list() {
  del_entity_id_list_.Clear();
}
inline ::google::protobuf::uint32 DelScenePlayTeamEntityNotify::del_entity_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.DelScenePlayTeamEntityNotify.del_entity_id_list)
  return del_entity_id_list_.Get(index);
}
inline void DelScenePlayTeamEntityNotify::set_del_entity_id_list(int index, ::google::protobuf::uint32 value) {
  del_entity_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.DelScenePlayTeamEntityNotify.del_entity_id_list)
}
inline void DelScenePlayTeamEntityNotify::add_del_entity_id_list(::google::protobuf::uint32 value) {
  del_entity_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.DelScenePlayTeamEntityNotify.del_entity_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DelScenePlayTeamEntityNotify::del_entity_id_list() const {
  // @@protoc_insertion_point(field_list:proto.DelScenePlayTeamEntityNotify.del_entity_id_list)
  return del_entity_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DelScenePlayTeamEntityNotify::mutable_del_entity_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.DelScenePlayTeamEntityNotify.del_entity_id_list)
  return &del_entity_id_list_;
}

// uint32 scene_id = 4;
inline void DelScenePlayTeamEntityNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 DelScenePlayTeamEntityNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.DelScenePlayTeamEntityNotify.scene_id)
  return scene_id_;
}
inline void DelScenePlayTeamEntityNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DelScenePlayTeamEntityNotify.scene_id)
}

// -------------------------------------------------------------------

// CylinderRegionSize

// float radius = 8;
inline void CylinderRegionSize::clear_radius() {
  radius_ = 0;
}
inline float CylinderRegionSize::radius() const {
  // @@protoc_insertion_point(field_get:proto.CylinderRegionSize.radius)
  return radius_;
}
inline void CylinderRegionSize::set_radius(float value) {
  
  radius_ = value;
  // @@protoc_insertion_point(field_set:proto.CylinderRegionSize.radius)
}

// float height = 7;
inline void CylinderRegionSize::clear_height() {
  height_ = 0;
}
inline float CylinderRegionSize::height() const {
  // @@protoc_insertion_point(field_get:proto.CylinderRegionSize.height)
  return height_;
}
inline void CylinderRegionSize::set_height(float value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:proto.CylinderRegionSize.height)
}

// -------------------------------------------------------------------

// PolygonRegionSize

// repeated .proto.VectorPlane point_list = 5;
inline int PolygonRegionSize::point_list_size() const {
  return point_list_.size();
}
inline void PolygonRegionSize::clear_point_list() {
  point_list_.Clear();
}
inline const ::proto::VectorPlane& PolygonRegionSize::point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PolygonRegionSize.point_list)
  return point_list_.Get(index);
}
inline ::proto::VectorPlane* PolygonRegionSize::mutable_point_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PolygonRegionSize.point_list)
  return point_list_.Mutable(index);
}
inline ::proto::VectorPlane* PolygonRegionSize::add_point_list() {
  // @@protoc_insertion_point(field_add:proto.PolygonRegionSize.point_list)
  return point_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::VectorPlane >*
PolygonRegionSize::mutable_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PolygonRegionSize.point_list)
  return &point_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::VectorPlane >&
PolygonRegionSize::point_list() const {
  // @@protoc_insertion_point(field_list:proto.PolygonRegionSize.point_list)
  return point_list_;
}

// float height = 9;
inline void PolygonRegionSize::clear_height() {
  height_ = 0;
}
inline float PolygonRegionSize::height() const {
  // @@protoc_insertion_point(field_get:proto.PolygonRegionSize.height)
  return height_;
}
inline void PolygonRegionSize::set_height(float value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:proto.PolygonRegionSize.height)
}

// -------------------------------------------------------------------

// PlayerEyePointStateNotify

// uint32 region_entity_id = 15;
inline void PlayerEyePointStateNotify::clear_region_entity_id() {
  region_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerEyePointStateNotify::region_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEyePointStateNotify.region_entity_id)
  return region_entity_id_;
}
inline void PlayerEyePointStateNotify::set_region_entity_id(::google::protobuf::uint32 value) {
  
  region_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEyePointStateNotify.region_entity_id)
}

// .proto.Vector eye_point_pos = 1;
inline bool PlayerEyePointStateNotify::has_eye_point_pos() const {
  return this != internal_default_instance() && eye_point_pos_ != NULL;
}
inline void PlayerEyePointStateNotify::clear_eye_point_pos() {
  if (GetArenaNoVirtual() == NULL && eye_point_pos_ != NULL) delete eye_point_pos_;
  eye_point_pos_ = NULL;
}
inline const ::proto::Vector& PlayerEyePointStateNotify::eye_point_pos() const {
  const ::proto::Vector* p = eye_point_pos_;
  // @@protoc_insertion_point(field_get:proto.PlayerEyePointStateNotify.eye_point_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* PlayerEyePointStateNotify::mutable_eye_point_pos() {
  
  if (eye_point_pos_ == NULL) {
    eye_point_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerEyePointStateNotify.eye_point_pos)
  return eye_point_pos_;
}
inline ::proto::Vector* PlayerEyePointStateNotify::release_eye_point_pos() {
  // @@protoc_insertion_point(field_release:proto.PlayerEyePointStateNotify.eye_point_pos)
  
  ::proto::Vector* temp = eye_point_pos_;
  eye_point_pos_ = NULL;
  return temp;
}
inline void PlayerEyePointStateNotify::set_allocated_eye_point_pos(::proto::Vector* eye_point_pos) {
  delete eye_point_pos_;
  eye_point_pos_ = eye_point_pos;
  if (eye_point_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerEyePointStateNotify.eye_point_pos)
}

// bool is_use_eye_point = 3;
inline void PlayerEyePointStateNotify::clear_is_use_eye_point() {
  is_use_eye_point_ = false;
}
inline bool PlayerEyePointStateNotify::is_use_eye_point() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEyePointStateNotify.is_use_eye_point)
  return is_use_eye_point_;
}
inline void PlayerEyePointStateNotify::set_is_use_eye_point(bool value) {
  
  is_use_eye_point_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEyePointStateNotify.is_use_eye_point)
}

// uint32 region_config_id = 7;
inline void PlayerEyePointStateNotify::clear_region_config_id() {
  region_config_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerEyePointStateNotify::region_config_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEyePointStateNotify.region_config_id)
  return region_config_id_;
}
inline void PlayerEyePointStateNotify::set_region_config_id(::google::protobuf::uint32 value) {
  
  region_config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEyePointStateNotify.region_config_id)
}

// uint32 region_shape = 12;
inline void PlayerEyePointStateNotify::clear_region_shape() {
  region_shape_ = 0u;
}
inline ::google::protobuf::uint32 PlayerEyePointStateNotify::region_shape() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEyePointStateNotify.region_shape)
  return region_shape_;
}
inline void PlayerEyePointStateNotify::set_region_shape(::google::protobuf::uint32 value) {
  
  region_shape_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEyePointStateNotify.region_shape)
}

// bool is_filter_stream_pos = 2;
inline void PlayerEyePointStateNotify::clear_is_filter_stream_pos() {
  is_filter_stream_pos_ = false;
}
inline bool PlayerEyePointStateNotify::is_filter_stream_pos() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEyePointStateNotify.is_filter_stream_pos)
  return is_filter_stream_pos_;
}
inline void PlayerEyePointStateNotify::set_is_filter_stream_pos(bool value) {
  
  is_filter_stream_pos_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEyePointStateNotify.is_filter_stream_pos)
}

// int32 fix_lod_level = 5;
inline void PlayerEyePointStateNotify::clear_fix_lod_level() {
  fix_lod_level_ = 0;
}
inline ::google::protobuf::int32 PlayerEyePointStateNotify::fix_lod_level() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEyePointStateNotify.fix_lod_level)
  return fix_lod_level_;
}
inline void PlayerEyePointStateNotify::set_fix_lod_level(::google::protobuf::int32 value) {
  
  fix_lod_level_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEyePointStateNotify.fix_lod_level)
}

// uint32 region_group_id = 4;
inline void PlayerEyePointStateNotify::clear_region_group_id() {
  region_group_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerEyePointStateNotify::region_group_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEyePointStateNotify.region_group_id)
  return region_group_id_;
}
inline void PlayerEyePointStateNotify::set_region_group_id(::google::protobuf::uint32 value) {
  
  region_group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEyePointStateNotify.region_group_id)
}

// float sphere_radius = 255;
inline bool PlayerEyePointStateNotify::has_sphere_radius() const {
  return region_size_case() == kSphereRadius;
}
inline void PlayerEyePointStateNotify::set_has_sphere_radius() {
  _oneof_case_[0] = kSphereRadius;
}
inline void PlayerEyePointStateNotify::clear_sphere_radius() {
  if (has_sphere_radius()) {
    region_size_.sphere_radius_ = 0;
    clear_has_region_size();
  }
}
inline float PlayerEyePointStateNotify::sphere_radius() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEyePointStateNotify.sphere_radius)
  if (has_sphere_radius()) {
    return region_size_.sphere_radius_;
  }
  return 0;
}
inline void PlayerEyePointStateNotify::set_sphere_radius(float value) {
  if (!has_sphere_radius()) {
    clear_region_size();
    set_has_sphere_radius();
  }
  region_size_.sphere_radius_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEyePointStateNotify.sphere_radius)
}

// .proto.Vector cubic_size = 1823;
inline bool PlayerEyePointStateNotify::has_cubic_size() const {
  return region_size_case() == kCubicSize;
}
inline void PlayerEyePointStateNotify::set_has_cubic_size() {
  _oneof_case_[0] = kCubicSize;
}
inline void PlayerEyePointStateNotify::clear_cubic_size() {
  if (has_cubic_size()) {
    delete region_size_.cubic_size_;
    clear_has_region_size();
  }
}
inline  const ::proto::Vector& PlayerEyePointStateNotify::cubic_size() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEyePointStateNotify.cubic_size)
  return has_cubic_size()
      ? *region_size_.cubic_size_
      : ::proto::Vector::default_instance();
}
inline ::proto::Vector* PlayerEyePointStateNotify::mutable_cubic_size() {
  if (!has_cubic_size()) {
    clear_region_size();
    set_has_cubic_size();
    region_size_.cubic_size_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerEyePointStateNotify.cubic_size)
  return region_size_.cubic_size_;
}
inline ::proto::Vector* PlayerEyePointStateNotify::release_cubic_size() {
  // @@protoc_insertion_point(field_release:proto.PlayerEyePointStateNotify.cubic_size)
  if (has_cubic_size()) {
    clear_has_region_size();
    ::proto::Vector* temp = region_size_.cubic_size_;
    region_size_.cubic_size_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void PlayerEyePointStateNotify::set_allocated_cubic_size(::proto::Vector* cubic_size) {
  clear_region_size();
  if (cubic_size) {
    set_has_cubic_size();
    region_size_.cubic_size_ = cubic_size;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerEyePointStateNotify.cubic_size)
}

// .proto.CylinderRegionSize cylinder_size = 1862;
inline bool PlayerEyePointStateNotify::has_cylinder_size() const {
  return region_size_case() == kCylinderSize;
}
inline void PlayerEyePointStateNotify::set_has_cylinder_size() {
  _oneof_case_[0] = kCylinderSize;
}
inline void PlayerEyePointStateNotify::clear_cylinder_size() {
  if (has_cylinder_size()) {
    delete region_size_.cylinder_size_;
    clear_has_region_size();
  }
}
inline  const ::proto::CylinderRegionSize& PlayerEyePointStateNotify::cylinder_size() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEyePointStateNotify.cylinder_size)
  return has_cylinder_size()
      ? *region_size_.cylinder_size_
      : ::proto::CylinderRegionSize::default_instance();
}
inline ::proto::CylinderRegionSize* PlayerEyePointStateNotify::mutable_cylinder_size() {
  if (!has_cylinder_size()) {
    clear_region_size();
    set_has_cylinder_size();
    region_size_.cylinder_size_ = new ::proto::CylinderRegionSize;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerEyePointStateNotify.cylinder_size)
  return region_size_.cylinder_size_;
}
inline ::proto::CylinderRegionSize* PlayerEyePointStateNotify::release_cylinder_size() {
  // @@protoc_insertion_point(field_release:proto.PlayerEyePointStateNotify.cylinder_size)
  if (has_cylinder_size()) {
    clear_has_region_size();
    ::proto::CylinderRegionSize* temp = region_size_.cylinder_size_;
    region_size_.cylinder_size_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void PlayerEyePointStateNotify::set_allocated_cylinder_size(::proto::CylinderRegionSize* cylinder_size) {
  clear_region_size();
  if (cylinder_size) {
    set_has_cylinder_size();
    region_size_.cylinder_size_ = cylinder_size;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerEyePointStateNotify.cylinder_size)
}

// .proto.PolygonRegionSize polygon_size = 877;
inline bool PlayerEyePointStateNotify::has_polygon_size() const {
  return region_size_case() == kPolygonSize;
}
inline void PlayerEyePointStateNotify::set_has_polygon_size() {
  _oneof_case_[0] = kPolygonSize;
}
inline void PlayerEyePointStateNotify::clear_polygon_size() {
  if (has_polygon_size()) {
    delete region_size_.polygon_size_;
    clear_has_region_size();
  }
}
inline  const ::proto::PolygonRegionSize& PlayerEyePointStateNotify::polygon_size() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEyePointStateNotify.polygon_size)
  return has_polygon_size()
      ? *region_size_.polygon_size_
      : ::proto::PolygonRegionSize::default_instance();
}
inline ::proto::PolygonRegionSize* PlayerEyePointStateNotify::mutable_polygon_size() {
  if (!has_polygon_size()) {
    clear_region_size();
    set_has_polygon_size();
    region_size_.polygon_size_ = new ::proto::PolygonRegionSize;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerEyePointStateNotify.polygon_size)
  return region_size_.polygon_size_;
}
inline ::proto::PolygonRegionSize* PlayerEyePointStateNotify::release_polygon_size() {
  // @@protoc_insertion_point(field_release:proto.PlayerEyePointStateNotify.polygon_size)
  if (has_polygon_size()) {
    clear_has_region_size();
    ::proto::PolygonRegionSize* temp = region_size_.polygon_size_;
    region_size_.polygon_size_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void PlayerEyePointStateNotify::set_allocated_polygon_size(::proto::PolygonRegionSize* polygon_size) {
  clear_region_size();
  if (polygon_size) {
    set_has_polygon_size();
    region_size_.polygon_size_ = polygon_size;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerEyePointStateNotify.polygon_size)
}

inline bool PlayerEyePointStateNotify::has_region_size() const {
  return region_size_case() != REGION_SIZE_NOT_SET;
}
inline void PlayerEyePointStateNotify::clear_has_region_size() {
  _oneof_case_[0] = REGION_SIZE_NOT_SET;
}
inline PlayerEyePointStateNotify::RegionSizeCase PlayerEyePointStateNotify::region_size_case() const {
  return PlayerEyePointStateNotify::RegionSizeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// GetMapMarkTipsReq

// -------------------------------------------------------------------

// GetMapMarkTipsRsp

// int32 retcode = 7;
inline void GetMapMarkTipsRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetMapMarkTipsRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetMapMarkTipsRsp.retcode)
  return retcode_;
}
inline void GetMapMarkTipsRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetMapMarkTipsRsp.retcode)
}

// repeated .proto.MapMarkTipsInfo mark_tips_list = 11;
inline int GetMapMarkTipsRsp::mark_tips_list_size() const {
  return mark_tips_list_.size();
}
inline void GetMapMarkTipsRsp::clear_mark_tips_list() {
  mark_tips_list_.Clear();
}
inline const ::proto::MapMarkTipsInfo& GetMapMarkTipsRsp::mark_tips_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetMapMarkTipsRsp.mark_tips_list)
  return mark_tips_list_.Get(index);
}
inline ::proto::MapMarkTipsInfo* GetMapMarkTipsRsp::mutable_mark_tips_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetMapMarkTipsRsp.mark_tips_list)
  return mark_tips_list_.Mutable(index);
}
inline ::proto::MapMarkTipsInfo* GetMapMarkTipsRsp::add_mark_tips_list() {
  // @@protoc_insertion_point(field_add:proto.GetMapMarkTipsRsp.mark_tips_list)
  return mark_tips_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::MapMarkTipsInfo >*
GetMapMarkTipsRsp::mutable_mark_tips_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetMapMarkTipsRsp.mark_tips_list)
  return &mark_tips_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::MapMarkTipsInfo >&
GetMapMarkTipsRsp::mark_tips_list() const {
  // @@protoc_insertion_point(field_list:proto.GetMapMarkTipsRsp.mark_tips_list)
  return mark_tips_list_;
}

// -------------------------------------------------------------------

// ChangeWorldToSingleModeReq

// -------------------------------------------------------------------

// ChangeWorldToSingleModeRsp

// uint32 quit_mp_valid_time = 15;
inline void ChangeWorldToSingleModeRsp::clear_quit_mp_valid_time() {
  quit_mp_valid_time_ = 0u;
}
inline ::google::protobuf::uint32 ChangeWorldToSingleModeRsp::quit_mp_valid_time() const {
  // @@protoc_insertion_point(field_get:proto.ChangeWorldToSingleModeRsp.quit_mp_valid_time)
  return quit_mp_valid_time_;
}
inline void ChangeWorldToSingleModeRsp::set_quit_mp_valid_time(::google::protobuf::uint32 value) {
  
  quit_mp_valid_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeWorldToSingleModeRsp.quit_mp_valid_time)
}

// int32 retcode = 4;
inline void ChangeWorldToSingleModeRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ChangeWorldToSingleModeRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ChangeWorldToSingleModeRsp.retcode)
  return retcode_;
}
inline void ChangeWorldToSingleModeRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeWorldToSingleModeRsp.retcode)
}

// -------------------------------------------------------------------

// GetWorldMpInfoReq

// -------------------------------------------------------------------

// GetWorldMpInfoRsp

// int32 retcode = 12;
inline void GetWorldMpInfoRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetWorldMpInfoRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetWorldMpInfoRsp.retcode)
  return retcode_;
}
inline void GetWorldMpInfoRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetWorldMpInfoRsp.retcode)
}

// bool is_in_mp_mode = 1;
inline void GetWorldMpInfoRsp::clear_is_in_mp_mode() {
  is_in_mp_mode_ = false;
}
inline bool GetWorldMpInfoRsp::is_in_mp_mode() const {
  // @@protoc_insertion_point(field_get:proto.GetWorldMpInfoRsp.is_in_mp_mode)
  return is_in_mp_mode_;
}
inline void GetWorldMpInfoRsp::set_is_in_mp_mode(bool value) {
  
  is_in_mp_mode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetWorldMpInfoRsp.is_in_mp_mode)
}

// uint32 quit_mp_valid_time = 9;
inline void GetWorldMpInfoRsp::clear_quit_mp_valid_time() {
  quit_mp_valid_time_ = 0u;
}
inline ::google::protobuf::uint32 GetWorldMpInfoRsp::quit_mp_valid_time() const {
  // @@protoc_insertion_point(field_get:proto.GetWorldMpInfoRsp.quit_mp_valid_time)
  return quit_mp_valid_time_;
}
inline void GetWorldMpInfoRsp::set_quit_mp_valid_time(::google::protobuf::uint32 value) {
  
  quit_mp_valid_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GetWorldMpInfoRsp.quit_mp_valid_time)
}

// -------------------------------------------------------------------

// EntityConfigHashEntry

// uint32 job_id = 13;
inline void EntityConfigHashEntry::clear_job_id() {
  job_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityConfigHashEntry::job_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityConfigHashEntry.job_id)
  return job_id_;
}
inline void EntityConfigHashEntry::set_job_id(::google::protobuf::uint32 value) {
  
  job_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityConfigHashEntry.job_id)
}

// int32 hash_value = 6;
inline void EntityConfigHashEntry::clear_hash_value() {
  hash_value_ = 0;
}
inline ::google::protobuf::int32 EntityConfigHashEntry::hash_value() const {
  // @@protoc_insertion_point(field_get:proto.EntityConfigHashEntry.hash_value)
  return hash_value_;
}
inline void EntityConfigHashEntry::set_hash_value(::google::protobuf::int32 value) {
  
  hash_value_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityConfigHashEntry.hash_value)
}

// uint32 entity_id = 11;
inline void EntityConfigHashEntry::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityConfigHashEntry::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityConfigHashEntry.entity_id)
  return entity_id_;
}
inline void EntityConfigHashEntry::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityConfigHashEntry.entity_id)
}

// -------------------------------------------------------------------

// EntityConfigHashNotify

// repeated .proto.EntityConfigHashEntry ability_entry_list = 3;
inline int EntityConfigHashNotify::ability_entry_list_size() const {
  return ability_entry_list_.size();
}
inline void EntityConfigHashNotify::clear_ability_entry_list() {
  ability_entry_list_.Clear();
}
inline const ::proto::EntityConfigHashEntry& EntityConfigHashNotify::ability_entry_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.EntityConfigHashNotify.ability_entry_list)
  return ability_entry_list_.Get(index);
}
inline ::proto::EntityConfigHashEntry* EntityConfigHashNotify::mutable_ability_entry_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.EntityConfigHashNotify.ability_entry_list)
  return ability_entry_list_.Mutable(index);
}
inline ::proto::EntityConfigHashEntry* EntityConfigHashNotify::add_ability_entry_list() {
  // @@protoc_insertion_point(field_add:proto.EntityConfigHashNotify.ability_entry_list)
  return ability_entry_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::EntityConfigHashEntry >*
EntityConfigHashNotify::mutable_ability_entry_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.EntityConfigHashNotify.ability_entry_list)
  return &ability_entry_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::EntityConfigHashEntry >&
EntityConfigHashNotify::ability_entry_list() const {
  // @@protoc_insertion_point(field_list:proto.EntityConfigHashNotify.ability_entry_list)
  return ability_entry_list_;
}

// repeated .proto.EntityConfigHashEntry avatar_entry_list = 15;
inline int EntityConfigHashNotify::avatar_entry_list_size() const {
  return avatar_entry_list_.size();
}
inline void EntityConfigHashNotify::clear_avatar_entry_list() {
  avatar_entry_list_.Clear();
}
inline const ::proto::EntityConfigHashEntry& EntityConfigHashNotify::avatar_entry_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.EntityConfigHashNotify.avatar_entry_list)
  return avatar_entry_list_.Get(index);
}
inline ::proto::EntityConfigHashEntry* EntityConfigHashNotify::mutable_avatar_entry_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.EntityConfigHashNotify.avatar_entry_list)
  return avatar_entry_list_.Mutable(index);
}
inline ::proto::EntityConfigHashEntry* EntityConfigHashNotify::add_avatar_entry_list() {
  // @@protoc_insertion_point(field_add:proto.EntityConfigHashNotify.avatar_entry_list)
  return avatar_entry_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::EntityConfigHashEntry >*
EntityConfigHashNotify::mutable_avatar_entry_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.EntityConfigHashNotify.avatar_entry_list)
  return &avatar_entry_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::EntityConfigHashEntry >&
EntityConfigHashNotify::avatar_entry_list() const {
  // @@protoc_insertion_point(field_list:proto.EntityConfigHashNotify.avatar_entry_list)
  return avatar_entry_list_;
}

// repeated .proto.EntityConfigHashEntry combat_entry_list = 8;
inline int EntityConfigHashNotify::combat_entry_list_size() const {
  return combat_entry_list_.size();
}
inline void EntityConfigHashNotify::clear_combat_entry_list() {
  combat_entry_list_.Clear();
}
inline const ::proto::EntityConfigHashEntry& EntityConfigHashNotify::combat_entry_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.EntityConfigHashNotify.combat_entry_list)
  return combat_entry_list_.Get(index);
}
inline ::proto::EntityConfigHashEntry* EntityConfigHashNotify::mutable_combat_entry_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.EntityConfigHashNotify.combat_entry_list)
  return combat_entry_list_.Mutable(index);
}
inline ::proto::EntityConfigHashEntry* EntityConfigHashNotify::add_combat_entry_list() {
  // @@protoc_insertion_point(field_add:proto.EntityConfigHashNotify.combat_entry_list)
  return combat_entry_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::EntityConfigHashEntry >*
EntityConfigHashNotify::mutable_combat_entry_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.EntityConfigHashNotify.combat_entry_list)
  return &combat_entry_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::EntityConfigHashEntry >&
EntityConfigHashNotify::combat_entry_list() const {
  // @@protoc_insertion_point(field_list:proto.EntityConfigHashNotify.combat_entry_list)
  return combat_entry_list_;
}

// -------------------------------------------------------------------

// ForceDragAvatarNotify

// uint32 scene_time = 3;
inline void ForceDragAvatarNotify::clear_scene_time() {
  scene_time_ = 0u;
}
inline ::google::protobuf::uint32 ForceDragAvatarNotify::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.ForceDragAvatarNotify.scene_time)
  return scene_time_;
}
inline void ForceDragAvatarNotify::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ForceDragAvatarNotify.scene_time)
}

// uint64 delta_time_ms = 1;
inline void ForceDragAvatarNotify::clear_delta_time_ms() {
  delta_time_ms_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ForceDragAvatarNotify::delta_time_ms() const {
  // @@protoc_insertion_point(field_get:proto.ForceDragAvatarNotify.delta_time_ms)
  return delta_time_ms_;
}
inline void ForceDragAvatarNotify::set_delta_time_ms(::google::protobuf::uint64 value) {
  
  delta_time_ms_ = value;
  // @@protoc_insertion_point(field_set:proto.ForceDragAvatarNotify.delta_time_ms)
}

// uint32 entity_id = 2;
inline void ForceDragAvatarNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 ForceDragAvatarNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ForceDragAvatarNotify.entity_id)
  return entity_id_;
}
inline void ForceDragAvatarNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ForceDragAvatarNotify.entity_id)
}

// .proto.MotionInfo motion_info = 10;
inline bool ForceDragAvatarNotify::has_motion_info() const {
  return this != internal_default_instance() && motion_info_ != NULL;
}
inline void ForceDragAvatarNotify::clear_motion_info() {
  if (GetArenaNoVirtual() == NULL && motion_info_ != NULL) delete motion_info_;
  motion_info_ = NULL;
}
inline const ::proto::MotionInfo& ForceDragAvatarNotify::motion_info() const {
  const ::proto::MotionInfo* p = motion_info_;
  // @@protoc_insertion_point(field_get:proto.ForceDragAvatarNotify.motion_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MotionInfo*>(
      &::proto::_MotionInfo_default_instance_);
}
inline ::proto::MotionInfo* ForceDragAvatarNotify::mutable_motion_info() {
  
  if (motion_info_ == NULL) {
    motion_info_ = new ::proto::MotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ForceDragAvatarNotify.motion_info)
  return motion_info_;
}
inline ::proto::MotionInfo* ForceDragAvatarNotify::release_motion_info() {
  // @@protoc_insertion_point(field_release:proto.ForceDragAvatarNotify.motion_info)
  
  ::proto::MotionInfo* temp = motion_info_;
  motion_info_ = NULL;
  return temp;
}
inline void ForceDragAvatarNotify::set_allocated_motion_info(::proto::MotionInfo* motion_info) {
  delete motion_info_;
  motion_info_ = motion_info;
  if (motion_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ForceDragAvatarNotify.motion_info)
}

// bool is_first_valid = 8;
inline void ForceDragAvatarNotify::clear_is_first_valid() {
  is_first_valid_ = false;
}
inline bool ForceDragAvatarNotify::is_first_valid() const {
  // @@protoc_insertion_point(field_get:proto.ForceDragAvatarNotify.is_first_valid)
  return is_first_valid_;
}
inline void ForceDragAvatarNotify::set_is_first_valid(bool value) {
  
  is_first_valid_ = value;
  // @@protoc_insertion_point(field_set:proto.ForceDragAvatarNotify.is_first_valid)
}

// uint64 last_move_time_ms = 12;
inline void ForceDragAvatarNotify::clear_last_move_time_ms() {
  last_move_time_ms_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ForceDragAvatarNotify::last_move_time_ms() const {
  // @@protoc_insertion_point(field_get:proto.ForceDragAvatarNotify.last_move_time_ms)
  return last_move_time_ms_;
}
inline void ForceDragAvatarNotify::set_last_move_time_ms(::google::protobuf::uint64 value) {
  
  last_move_time_ms_ = value;
  // @@protoc_insertion_point(field_set:proto.ForceDragAvatarNotify.last_move_time_ms)
}

// -------------------------------------------------------------------

// MonsterPointArrayRouteUpdateNotify

// uint32 entity_id = 7;
inline void MonsterPointArrayRouteUpdateNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 MonsterPointArrayRouteUpdateNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.MonsterPointArrayRouteUpdateNotify.entity_id)
  return entity_id_;
}
inline void MonsterPointArrayRouteUpdateNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MonsterPointArrayRouteUpdateNotify.entity_id)
}

// .proto.MonsterRoute monster_route = 5;
inline bool MonsterPointArrayRouteUpdateNotify::has_monster_route() const {
  return this != internal_default_instance() && monster_route_ != NULL;
}
inline void MonsterPointArrayRouteUpdateNotify::clear_monster_route() {
  if (GetArenaNoVirtual() == NULL && monster_route_ != NULL) delete monster_route_;
  monster_route_ = NULL;
}
inline const ::proto::MonsterRoute& MonsterPointArrayRouteUpdateNotify::monster_route() const {
  const ::proto::MonsterRoute* p = monster_route_;
  // @@protoc_insertion_point(field_get:proto.MonsterPointArrayRouteUpdateNotify.monster_route)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MonsterRoute*>(
      &::proto::_MonsterRoute_default_instance_);
}
inline ::proto::MonsterRoute* MonsterPointArrayRouteUpdateNotify::mutable_monster_route() {
  
  if (monster_route_ == NULL) {
    monster_route_ = new ::proto::MonsterRoute;
  }
  // @@protoc_insertion_point(field_mutable:proto.MonsterPointArrayRouteUpdateNotify.monster_route)
  return monster_route_;
}
inline ::proto::MonsterRoute* MonsterPointArrayRouteUpdateNotify::release_monster_route() {
  // @@protoc_insertion_point(field_release:proto.MonsterPointArrayRouteUpdateNotify.monster_route)
  
  ::proto::MonsterRoute* temp = monster_route_;
  monster_route_ = NULL;
  return temp;
}
inline void MonsterPointArrayRouteUpdateNotify::set_allocated_monster_route(::proto::MonsterRoute* monster_route) {
  delete monster_route_;
  monster_route_ = monster_route;
  if (monster_route) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MonsterPointArrayRouteUpdateNotify.monster_route)
}

// -------------------------------------------------------------------

// ForceDragBackTransferNotify

// -------------------------------------------------------------------

// GetScenePerformanceReq

// -------------------------------------------------------------------

// GetScenePerformanceRsp

// uint32 monster_num = 9;
inline void GetScenePerformanceRsp::clear_monster_num() {
  monster_num_ = 0u;
}
inline ::google::protobuf::uint32 GetScenePerformanceRsp::monster_num() const {
  // @@protoc_insertion_point(field_get:proto.GetScenePerformanceRsp.monster_num)
  return monster_num_;
}
inline void GetScenePerformanceRsp::set_monster_num(::google::protobuf::uint32 value) {
  
  monster_num_ = value;
  // @@protoc_insertion_point(field_set:proto.GetScenePerformanceRsp.monster_num)
}

// uint32 gather_num_insight = 1;
inline void GetScenePerformanceRsp::clear_gather_num_insight() {
  gather_num_insight_ = 0u;
}
inline ::google::protobuf::uint32 GetScenePerformanceRsp::gather_num_insight() const {
  // @@protoc_insertion_point(field_get:proto.GetScenePerformanceRsp.gather_num_insight)
  return gather_num_insight_;
}
inline void GetScenePerformanceRsp::set_gather_num_insight(::google::protobuf::uint32 value) {
  
  gather_num_insight_ = value;
  // @@protoc_insertion_point(field_set:proto.GetScenePerformanceRsp.gather_num_insight)
}

// uint32 gadget_num = 6;
inline void GetScenePerformanceRsp::clear_gadget_num() {
  gadget_num_ = 0u;
}
inline ::google::protobuf::uint32 GetScenePerformanceRsp::gadget_num() const {
  // @@protoc_insertion_point(field_get:proto.GetScenePerformanceRsp.gadget_num)
  return gadget_num_;
}
inline void GetScenePerformanceRsp::set_gadget_num(::google::protobuf::uint32 value) {
  
  gadget_num_ = value;
  // @@protoc_insertion_point(field_set:proto.GetScenePerformanceRsp.gadget_num)
}

// int32 retcode = 7;
inline void GetScenePerformanceRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetScenePerformanceRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetScenePerformanceRsp.retcode)
  return retcode_;
}
inline void GetScenePerformanceRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetScenePerformanceRsp.retcode)
}

// uint32 dynamic_group_num = 12;
inline void GetScenePerformanceRsp::clear_dynamic_group_num() {
  dynamic_group_num_ = 0u;
}
inline ::google::protobuf::uint32 GetScenePerformanceRsp::dynamic_group_num() const {
  // @@protoc_insertion_point(field_get:proto.GetScenePerformanceRsp.dynamic_group_num)
  return dynamic_group_num_;
}
inline void GetScenePerformanceRsp::set_dynamic_group_num(::google::protobuf::uint32 value) {
  
  dynamic_group_num_ = value;
  // @@protoc_insertion_point(field_set:proto.GetScenePerformanceRsp.dynamic_group_num)
}

// uint32 group_num = 2;
inline void GetScenePerformanceRsp::clear_group_num() {
  group_num_ = 0u;
}
inline ::google::protobuf::uint32 GetScenePerformanceRsp::group_num() const {
  // @@protoc_insertion_point(field_get:proto.GetScenePerformanceRsp.group_num)
  return group_num_;
}
inline void GetScenePerformanceRsp::set_group_num(::google::protobuf::uint32 value) {
  
  group_num_ = value;
  // @@protoc_insertion_point(field_set:proto.GetScenePerformanceRsp.group_num)
}

// .proto.Vector pos = 4;
inline bool GetScenePerformanceRsp::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void GetScenePerformanceRsp::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& GetScenePerformanceRsp::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.GetScenePerformanceRsp.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* GetScenePerformanceRsp::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetScenePerformanceRsp.pos)
  return pos_;
}
inline ::proto::Vector* GetScenePerformanceRsp::release_pos() {
  // @@protoc_insertion_point(field_release:proto.GetScenePerformanceRsp.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void GetScenePerformanceRsp::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetScenePerformanceRsp.pos)
}

// uint32 entity_num = 8;
inline void GetScenePerformanceRsp::clear_entity_num() {
  entity_num_ = 0u;
}
inline ::google::protobuf::uint32 GetScenePerformanceRsp::entity_num() const {
  // @@protoc_insertion_point(field_get:proto.GetScenePerformanceRsp.entity_num)
  return entity_num_;
}
inline void GetScenePerformanceRsp::set_entity_num(::google::protobuf::uint32 value) {
  
  entity_num_ = value;
  // @@protoc_insertion_point(field_set:proto.GetScenePerformanceRsp.entity_num)
}

// uint32 gather_num = 13;
inline void GetScenePerformanceRsp::clear_gather_num() {
  gather_num_ = 0u;
}
inline ::google::protobuf::uint32 GetScenePerformanceRsp::gather_num() const {
  // @@protoc_insertion_point(field_get:proto.GetScenePerformanceRsp.gather_num)
  return gather_num_;
}
inline void GetScenePerformanceRsp::set_gather_num(::google::protobuf::uint32 value) {
  
  gather_num_ = value;
  // @@protoc_insertion_point(field_set:proto.GetScenePerformanceRsp.gather_num)
}

// -------------------------------------------------------------------

// SceneAudioNotify

// repeated float param2 = 14;
inline int SceneAudioNotify::param2_size() const {
  return param2_.size();
}
inline void SceneAudioNotify::clear_param2() {
  param2_.Clear();
}
inline float SceneAudioNotify::param2(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAudioNotify.param2)
  return param2_.Get(index);
}
inline void SceneAudioNotify::set_param2(int index, float value) {
  param2_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneAudioNotify.param2)
}
inline void SceneAudioNotify::add_param2(float value) {
  param2_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneAudioNotify.param2)
}
inline const ::google::protobuf::RepeatedField< float >&
SceneAudioNotify::param2() const {
  // @@protoc_insertion_point(field_list:proto.SceneAudioNotify.param2)
  return param2_;
}
inline ::google::protobuf::RepeatedField< float >*
SceneAudioNotify::mutable_param2() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAudioNotify.param2)
  return &param2_;
}

// int32 type = 3;
inline void SceneAudioNotify::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 SceneAudioNotify::type() const {
  // @@protoc_insertion_point(field_get:proto.SceneAudioNotify.type)
  return type_;
}
inline void SceneAudioNotify::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAudioNotify.type)
}

// repeated string param3 = 11;
inline int SceneAudioNotify::param3_size() const {
  return param3_.size();
}
inline void SceneAudioNotify::clear_param3() {
  param3_.Clear();
}
inline const ::std::string& SceneAudioNotify::param3(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAudioNotify.param3)
  return param3_.Get(index);
}
inline ::std::string* SceneAudioNotify::mutable_param3(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneAudioNotify.param3)
  return param3_.Mutable(index);
}
inline void SceneAudioNotify::set_param3(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.SceneAudioNotify.param3)
  param3_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SceneAudioNotify::set_param3(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.SceneAudioNotify.param3)
  param3_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SceneAudioNotify::set_param3(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  param3_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.SceneAudioNotify.param3)
}
inline void SceneAudioNotify::set_param3(int index, const char* value, size_t size) {
  param3_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.SceneAudioNotify.param3)
}
inline ::std::string* SceneAudioNotify::add_param3() {
  // @@protoc_insertion_point(field_add_mutable:proto.SceneAudioNotify.param3)
  return param3_.Add();
}
inline void SceneAudioNotify::add_param3(const ::std::string& value) {
  param3_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.SceneAudioNotify.param3)
}
#if LANG_CXX11
inline void SceneAudioNotify::add_param3(::std::string&& value) {
  param3_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.SceneAudioNotify.param3)
}
#endif
inline void SceneAudioNotify::add_param3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  param3_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.SceneAudioNotify.param3)
}
inline void SceneAudioNotify::add_param3(const char* value, size_t size) {
  param3_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.SceneAudioNotify.param3)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SceneAudioNotify::param3() const {
  // @@protoc_insertion_point(field_list:proto.SceneAudioNotify.param3)
  return param3_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SceneAudioNotify::mutable_param3() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAudioNotify.param3)
  return &param3_;
}

// uint32 source_uid = 6;
inline void SceneAudioNotify::clear_source_uid() {
  source_uid_ = 0u;
}
inline ::google::protobuf::uint32 SceneAudioNotify::source_uid() const {
  // @@protoc_insertion_point(field_get:proto.SceneAudioNotify.source_uid)
  return source_uid_;
}
inline void SceneAudioNotify::set_source_uid(::google::protobuf::uint32 value) {
  
  source_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAudioNotify.source_uid)
}

// repeated uint32 param1 = 4;
inline int SceneAudioNotify::param1_size() const {
  return param1_.size();
}
inline void SceneAudioNotify::clear_param1() {
  param1_.Clear();
}
inline ::google::protobuf::uint32 SceneAudioNotify::param1(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAudioNotify.param1)
  return param1_.Get(index);
}
inline void SceneAudioNotify::set_param1(int index, ::google::protobuf::uint32 value) {
  param1_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneAudioNotify.param1)
}
inline void SceneAudioNotify::add_param1(::google::protobuf::uint32 value) {
  param1_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneAudioNotify.param1)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneAudioNotify::param1() const {
  // @@protoc_insertion_point(field_list:proto.SceneAudioNotify.param1)
  return param1_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneAudioNotify::mutable_param1() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAudioNotify.param1)
  return &param1_;
}

// -------------------------------------------------------------------

// HitTreeNotify

// uint32 tree_type = 11;
inline void HitTreeNotify::clear_tree_type() {
  tree_type_ = 0u;
}
inline ::google::protobuf::uint32 HitTreeNotify::tree_type() const {
  // @@protoc_insertion_point(field_get:proto.HitTreeNotify.tree_type)
  return tree_type_;
}
inline void HitTreeNotify::set_tree_type(::google::protobuf::uint32 value) {
  
  tree_type_ = value;
  // @@protoc_insertion_point(field_set:proto.HitTreeNotify.tree_type)
}

// .proto.Vector tree_pos = 2;
inline bool HitTreeNotify::has_tree_pos() const {
  return this != internal_default_instance() && tree_pos_ != NULL;
}
inline void HitTreeNotify::clear_tree_pos() {
  if (GetArenaNoVirtual() == NULL && tree_pos_ != NULL) delete tree_pos_;
  tree_pos_ = NULL;
}
inline const ::proto::Vector& HitTreeNotify::tree_pos() const {
  const ::proto::Vector* p = tree_pos_;
  // @@protoc_insertion_point(field_get:proto.HitTreeNotify.tree_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* HitTreeNotify::mutable_tree_pos() {
  
  if (tree_pos_ == NULL) {
    tree_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.HitTreeNotify.tree_pos)
  return tree_pos_;
}
inline ::proto::Vector* HitTreeNotify::release_tree_pos() {
  // @@protoc_insertion_point(field_release:proto.HitTreeNotify.tree_pos)
  
  ::proto::Vector* temp = tree_pos_;
  tree_pos_ = NULL;
  return temp;
}
inline void HitTreeNotify::set_allocated_tree_pos(::proto::Vector* tree_pos) {
  delete tree_pos_;
  tree_pos_ = tree_pos;
  if (tree_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HitTreeNotify.tree_pos)
}

// .proto.Vector drop_pos = 8;
inline bool HitTreeNotify::has_drop_pos() const {
  return this != internal_default_instance() && drop_pos_ != NULL;
}
inline void HitTreeNotify::clear_drop_pos() {
  if (GetArenaNoVirtual() == NULL && drop_pos_ != NULL) delete drop_pos_;
  drop_pos_ = NULL;
}
inline const ::proto::Vector& HitTreeNotify::drop_pos() const {
  const ::proto::Vector* p = drop_pos_;
  // @@protoc_insertion_point(field_get:proto.HitTreeNotify.drop_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* HitTreeNotify::mutable_drop_pos() {
  
  if (drop_pos_ == NULL) {
    drop_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.HitTreeNotify.drop_pos)
  return drop_pos_;
}
inline ::proto::Vector* HitTreeNotify::release_drop_pos() {
  // @@protoc_insertion_point(field_release:proto.HitTreeNotify.drop_pos)
  
  ::proto::Vector* temp = drop_pos_;
  drop_pos_ = NULL;
  return temp;
}
inline void HitTreeNotify::set_allocated_drop_pos(::proto::Vector* drop_pos) {
  delete drop_pos_;
  drop_pos_ = drop_pos;
  if (drop_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HitTreeNotify.drop_pos)
}

// -------------------------------------------------------------------

// EntityTagChangeNotify

// string tag = 2;
inline void EntityTagChangeNotify::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EntityTagChangeNotify::tag() const {
  // @@protoc_insertion_point(field_get:proto.EntityTagChangeNotify.tag)
  return tag_.GetNoArena();
}
inline void EntityTagChangeNotify::set_tag(const ::std::string& value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.EntityTagChangeNotify.tag)
}
#if LANG_CXX11
inline void EntityTagChangeNotify::set_tag(::std::string&& value) {
  
  tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.EntityTagChangeNotify.tag)
}
#endif
inline void EntityTagChangeNotify::set_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.EntityTagChangeNotify.tag)
}
inline void EntityTagChangeNotify::set_tag(const char* value, size_t size) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.EntityTagChangeNotify.tag)
}
inline ::std::string* EntityTagChangeNotify::mutable_tag() {
  
  // @@protoc_insertion_point(field_mutable:proto.EntityTagChangeNotify.tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EntityTagChangeNotify::release_tag() {
  // @@protoc_insertion_point(field_release:proto.EntityTagChangeNotify.tag)
  
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EntityTagChangeNotify::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    
  } else {
    
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:proto.EntityTagChangeNotify.tag)
}

// uint32 entity_id = 8;
inline void EntityTagChangeNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityTagChangeNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityTagChangeNotify.entity_id)
  return entity_id_;
}
inline void EntityTagChangeNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityTagChangeNotify.entity_id)
}

// bool is_add = 10;
inline void EntityTagChangeNotify::clear_is_add() {
  is_add_ = false;
}
inline bool EntityTagChangeNotify::is_add() const {
  // @@protoc_insertion_point(field_get:proto.EntityTagChangeNotify.is_add)
  return is_add_;
}
inline void EntityTagChangeNotify::set_is_add(bool value) {
  
  is_add_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityTagChangeNotify.is_add)
}

// -------------------------------------------------------------------

// AvatarFollowRouteNotify

// uint32 entity_id = 4;
inline void AvatarFollowRouteNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarFollowRouteNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarFollowRouteNotify.entity_id)
  return entity_id_;
}
inline void AvatarFollowRouteNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarFollowRouteNotify.entity_id)
}

// uint32 template_id = 6;
inline void AvatarFollowRouteNotify::clear_template_id() {
  template_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarFollowRouteNotify::template_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarFollowRouteNotify.template_id)
  return template_id_;
}
inline void AvatarFollowRouteNotify::set_template_id(::google::protobuf::uint32 value) {
  
  template_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarFollowRouteNotify.template_id)
}

// uint32 start_scene_time_ms = 8;
inline void AvatarFollowRouteNotify::clear_start_scene_time_ms() {
  start_scene_time_ms_ = 0u;
}
inline ::google::protobuf::uint32 AvatarFollowRouteNotify::start_scene_time_ms() const {
  // @@protoc_insertion_point(field_get:proto.AvatarFollowRouteNotify.start_scene_time_ms)
  return start_scene_time_ms_;
}
inline void AvatarFollowRouteNotify::set_start_scene_time_ms(::google::protobuf::uint32 value) {
  
  start_scene_time_ms_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarFollowRouteNotify.start_scene_time_ms)
}

// .proto.Route route = 2;
inline bool AvatarFollowRouteNotify::has_route() const {
  return this != internal_default_instance() && route_ != NULL;
}
inline void AvatarFollowRouteNotify::clear_route() {
  if (GetArenaNoVirtual() == NULL && route_ != NULL) delete route_;
  route_ = NULL;
}
inline const ::proto::Route& AvatarFollowRouteNotify::route() const {
  const ::proto::Route* p = route_;
  // @@protoc_insertion_point(field_get:proto.AvatarFollowRouteNotify.route)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Route*>(
      &::proto::_Route_default_instance_);
}
inline ::proto::Route* AvatarFollowRouteNotify::mutable_route() {
  
  if (route_ == NULL) {
    route_ = new ::proto::Route;
  }
  // @@protoc_insertion_point(field_mutable:proto.AvatarFollowRouteNotify.route)
  return route_;
}
inline ::proto::Route* AvatarFollowRouteNotify::release_route() {
  // @@protoc_insertion_point(field_release:proto.AvatarFollowRouteNotify.route)
  
  ::proto::Route* temp = route_;
  route_ = NULL;
  return temp;
}
inline void AvatarFollowRouteNotify::set_allocated_route(::proto::Route* route) {
  delete route_;
  route_ = route;
  if (route) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarFollowRouteNotify.route)
}

// string client_params = 13;
inline void AvatarFollowRouteNotify::clear_client_params() {
  client_params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AvatarFollowRouteNotify::client_params() const {
  // @@protoc_insertion_point(field_get:proto.AvatarFollowRouteNotify.client_params)
  return client_params_.GetNoArena();
}
inline void AvatarFollowRouteNotify::set_client_params(const ::std::string& value) {
  
  client_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AvatarFollowRouteNotify.client_params)
}
#if LANG_CXX11
inline void AvatarFollowRouteNotify::set_client_params(::std::string&& value) {
  
  client_params_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AvatarFollowRouteNotify.client_params)
}
#endif
inline void AvatarFollowRouteNotify::set_client_params(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AvatarFollowRouteNotify.client_params)
}
inline void AvatarFollowRouteNotify::set_client_params(const char* value, size_t size) {
  
  client_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AvatarFollowRouteNotify.client_params)
}
inline ::std::string* AvatarFollowRouteNotify::mutable_client_params() {
  
  // @@protoc_insertion_point(field_mutable:proto.AvatarFollowRouteNotify.client_params)
  return client_params_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AvatarFollowRouteNotify::release_client_params() {
  // @@protoc_insertion_point(field_release:proto.AvatarFollowRouteNotify.client_params)
  
  return client_params_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AvatarFollowRouteNotify::set_allocated_client_params(::std::string* client_params) {
  if (client_params != NULL) {
    
  } else {
    
  }
  client_params_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_params);
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarFollowRouteNotify.client_params)
}

// -------------------------------------------------------------------

// SceneEntityUpdateNotify

// uint32 param = 10;
inline void SceneEntityUpdateNotify::clear_param() {
  param_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityUpdateNotify::param() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityUpdateNotify.param)
  return param_;
}
inline void SceneEntityUpdateNotify::set_param(::google::protobuf::uint32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityUpdateNotify.param)
}

// .proto.VisionType appear_type = 13;
inline void SceneEntityUpdateNotify::clear_appear_type() {
  appear_type_ = 0;
}
inline ::proto::VisionType SceneEntityUpdateNotify::appear_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityUpdateNotify.appear_type)
  return static_cast< ::proto::VisionType >(appear_type_);
}
inline void SceneEntityUpdateNotify::set_appear_type(::proto::VisionType value) {
  
  appear_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityUpdateNotify.appear_type)
}

// repeated .proto.SceneEntityInfo entity_list = 5;
inline int SceneEntityUpdateNotify::entity_list_size() const {
  return entity_list_.size();
}
inline void SceneEntityUpdateNotify::clear_entity_list() {
  entity_list_.Clear();
}
inline const ::proto::SceneEntityInfo& SceneEntityUpdateNotify::entity_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityUpdateNotify.entity_list)
  return entity_list_.Get(index);
}
inline ::proto::SceneEntityInfo* SceneEntityUpdateNotify::mutable_entity_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityUpdateNotify.entity_list)
  return entity_list_.Mutable(index);
}
inline ::proto::SceneEntityInfo* SceneEntityUpdateNotify::add_entity_list() {
  // @@protoc_insertion_point(field_add:proto.SceneEntityUpdateNotify.entity_list)
  return entity_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::SceneEntityInfo >*
SceneEntityUpdateNotify::mutable_entity_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneEntityUpdateNotify.entity_list)
  return &entity_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::SceneEntityInfo >&
SceneEntityUpdateNotify::entity_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneEntityUpdateNotify.entity_list)
  return entity_list_;
}

// -------------------------------------------------------------------

// ClientHashDebugNotify

// uint32 job_id = 12;
inline void ClientHashDebugNotify::clear_job_id() {
  job_id_ = 0u;
}
inline ::google::protobuf::uint32 ClientHashDebugNotify::job_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientHashDebugNotify.job_id)
  return job_id_;
}
inline void ClientHashDebugNotify::set_job_id(::google::protobuf::uint32 value) {
  
  job_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientHashDebugNotify.job_id)
}

// -------------------------------------------------------------------

// PlayerWorldSceneInfo

// uint32 scene_id = 11;
inline void PlayerWorldSceneInfo::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerWorldSceneInfo::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerWorldSceneInfo.scene_id)
  return scene_id_;
}
inline void PlayerWorldSceneInfo::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerWorldSceneInfo.scene_id)
}

// repeated uint32 scene_tag_id_list = 8;
inline int PlayerWorldSceneInfo::scene_tag_id_list_size() const {
  return scene_tag_id_list_.size();
}
inline void PlayerWorldSceneInfo::clear_scene_tag_id_list() {
  scene_tag_id_list_.Clear();
}
inline ::google::protobuf::uint32 PlayerWorldSceneInfo::scene_tag_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerWorldSceneInfo.scene_tag_id_list)
  return scene_tag_id_list_.Get(index);
}
inline void PlayerWorldSceneInfo::set_scene_tag_id_list(int index, ::google::protobuf::uint32 value) {
  scene_tag_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.PlayerWorldSceneInfo.scene_tag_id_list)
}
inline void PlayerWorldSceneInfo::add_scene_tag_id_list(::google::protobuf::uint32 value) {
  scene_tag_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.PlayerWorldSceneInfo.scene_tag_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PlayerWorldSceneInfo::scene_tag_id_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerWorldSceneInfo.scene_tag_id_list)
  return scene_tag_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PlayerWorldSceneInfo::mutable_scene_tag_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerWorldSceneInfo.scene_tag_id_list)
  return &scene_tag_id_list_;
}

// bool is_locked = 12;
inline void PlayerWorldSceneInfo::clear_is_locked() {
  is_locked_ = false;
}
inline bool PlayerWorldSceneInfo::is_locked() const {
  // @@protoc_insertion_point(field_get:proto.PlayerWorldSceneInfo.is_locked)
  return is_locked_;
}
inline void PlayerWorldSceneInfo::set_is_locked(bool value) {
  
  is_locked_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerWorldSceneInfo.is_locked)
}

// -------------------------------------------------------------------

// PlayerWorldSceneInfoListNotify

// repeated .proto.PlayerWorldSceneInfo info_list = 5;
inline int PlayerWorldSceneInfoListNotify::info_list_size() const {
  return info_list_.size();
}
inline void PlayerWorldSceneInfoListNotify::clear_info_list() {
  info_list_.Clear();
}
inline const ::proto::PlayerWorldSceneInfo& PlayerWorldSceneInfoListNotify::info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerWorldSceneInfoListNotify.info_list)
  return info_list_.Get(index);
}
inline ::proto::PlayerWorldSceneInfo* PlayerWorldSceneInfoListNotify::mutable_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerWorldSceneInfoListNotify.info_list)
  return info_list_.Mutable(index);
}
inline ::proto::PlayerWorldSceneInfo* PlayerWorldSceneInfoListNotify::add_info_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerWorldSceneInfoListNotify.info_list)
  return info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::PlayerWorldSceneInfo >*
PlayerWorldSceneInfoListNotify::mutable_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerWorldSceneInfoListNotify.info_list)
  return &info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::PlayerWorldSceneInfo >&
PlayerWorldSceneInfoListNotify::info_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerWorldSceneInfoListNotify.info_list)
  return info_list_;
}

// -------------------------------------------------------------------

// LuaEnvironmentEffectNotify

// uint32 type = 1;
inline void LuaEnvironmentEffectNotify::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 LuaEnvironmentEffectNotify::type() const {
  // @@protoc_insertion_point(field_get:proto.LuaEnvironmentEffectNotify.type)
  return type_;
}
inline void LuaEnvironmentEffectNotify::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.LuaEnvironmentEffectNotify.type)
}

// repeated int32 int_param_list = 12;
inline int LuaEnvironmentEffectNotify::int_param_list_size() const {
  return int_param_list_.size();
}
inline void LuaEnvironmentEffectNotify::clear_int_param_list() {
  int_param_list_.Clear();
}
inline ::google::protobuf::int32 LuaEnvironmentEffectNotify::int_param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.LuaEnvironmentEffectNotify.int_param_list)
  return int_param_list_.Get(index);
}
inline void LuaEnvironmentEffectNotify::set_int_param_list(int index, ::google::protobuf::int32 value) {
  int_param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.LuaEnvironmentEffectNotify.int_param_list)
}
inline void LuaEnvironmentEffectNotify::add_int_param_list(::google::protobuf::int32 value) {
  int_param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.LuaEnvironmentEffectNotify.int_param_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LuaEnvironmentEffectNotify::int_param_list() const {
  // @@protoc_insertion_point(field_list:proto.LuaEnvironmentEffectNotify.int_param_list)
  return int_param_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LuaEnvironmentEffectNotify::mutable_int_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.LuaEnvironmentEffectNotify.int_param_list)
  return &int_param_list_;
}

// string effect_alias = 3;
inline void LuaEnvironmentEffectNotify::clear_effect_alias() {
  effect_alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LuaEnvironmentEffectNotify::effect_alias() const {
  // @@protoc_insertion_point(field_get:proto.LuaEnvironmentEffectNotify.effect_alias)
  return effect_alias_.GetNoArena();
}
inline void LuaEnvironmentEffectNotify::set_effect_alias(const ::std::string& value) {
  
  effect_alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.LuaEnvironmentEffectNotify.effect_alias)
}
#if LANG_CXX11
inline void LuaEnvironmentEffectNotify::set_effect_alias(::std::string&& value) {
  
  effect_alias_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.LuaEnvironmentEffectNotify.effect_alias)
}
#endif
inline void LuaEnvironmentEffectNotify::set_effect_alias(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  effect_alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.LuaEnvironmentEffectNotify.effect_alias)
}
inline void LuaEnvironmentEffectNotify::set_effect_alias(const char* value, size_t size) {
  
  effect_alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.LuaEnvironmentEffectNotify.effect_alias)
}
inline ::std::string* LuaEnvironmentEffectNotify::mutable_effect_alias() {
  
  // @@protoc_insertion_point(field_mutable:proto.LuaEnvironmentEffectNotify.effect_alias)
  return effect_alias_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LuaEnvironmentEffectNotify::release_effect_alias() {
  // @@protoc_insertion_point(field_release:proto.LuaEnvironmentEffectNotify.effect_alias)
  
  return effect_alias_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LuaEnvironmentEffectNotify::set_allocated_effect_alias(::std::string* effect_alias) {
  if (effect_alias != NULL) {
    
  } else {
    
  }
  effect_alias_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), effect_alias);
  // @@protoc_insertion_point(field_set_allocated:proto.LuaEnvironmentEffectNotify.effect_alias)
}

// repeated float float_param_list = 14;
inline int LuaEnvironmentEffectNotify::float_param_list_size() const {
  return float_param_list_.size();
}
inline void LuaEnvironmentEffectNotify::clear_float_param_list() {
  float_param_list_.Clear();
}
inline float LuaEnvironmentEffectNotify::float_param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.LuaEnvironmentEffectNotify.float_param_list)
  return float_param_list_.Get(index);
}
inline void LuaEnvironmentEffectNotify::set_float_param_list(int index, float value) {
  float_param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.LuaEnvironmentEffectNotify.float_param_list)
}
inline void LuaEnvironmentEffectNotify::add_float_param_list(float value) {
  float_param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.LuaEnvironmentEffectNotify.float_param_list)
}
inline const ::google::protobuf::RepeatedField< float >&
LuaEnvironmentEffectNotify::float_param_list() const {
  // @@protoc_insertion_point(field_list:proto.LuaEnvironmentEffectNotify.float_param_list)
  return float_param_list_;
}
inline ::google::protobuf::RepeatedField< float >*
LuaEnvironmentEffectNotify::mutable_float_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.LuaEnvironmentEffectNotify.float_param_list)
  return &float_param_list_;
}

// -------------------------------------------------------------------

// ClientLoadingCostumeVerificationNotify

// uint32 costume_id = 9;
inline void ClientLoadingCostumeVerificationNotify::clear_costume_id() {
  costume_id_ = 0u;
}
inline ::google::protobuf::uint32 ClientLoadingCostumeVerificationNotify::costume_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientLoadingCostumeVerificationNotify.costume_id)
  return costume_id_;
}
inline void ClientLoadingCostumeVerificationNotify::set_costume_id(::google::protobuf::uint32 value) {
  
  costume_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientLoadingCostumeVerificationNotify.costume_id)
}

// uint64 prefab_hash = 2;
inline void ClientLoadingCostumeVerificationNotify::clear_prefab_hash() {
  prefab_hash_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ClientLoadingCostumeVerificationNotify::prefab_hash() const {
  // @@protoc_insertion_point(field_get:proto.ClientLoadingCostumeVerificationNotify.prefab_hash)
  return prefab_hash_;
}
inline void ClientLoadingCostumeVerificationNotify::set_prefab_hash(::google::protobuf::uint64 value) {
  
  prefab_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientLoadingCostumeVerificationNotify.prefab_hash)
}

// uint64 guid = 14;
inline void ClientLoadingCostumeVerificationNotify::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ClientLoadingCostumeVerificationNotify::guid() const {
  // @@protoc_insertion_point(field_get:proto.ClientLoadingCostumeVerificationNotify.guid)
  return guid_;
}
inline void ClientLoadingCostumeVerificationNotify::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientLoadingCostumeVerificationNotify.guid)
}

// -------------------------------------------------------------------

// ShowClientGuideNotify

// string guide_name = 7;
inline void ShowClientGuideNotify::clear_guide_name() {
  guide_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShowClientGuideNotify::guide_name() const {
  // @@protoc_insertion_point(field_get:proto.ShowClientGuideNotify.guide_name)
  return guide_name_.GetNoArena();
}
inline void ShowClientGuideNotify::set_guide_name(const ::std::string& value) {
  
  guide_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ShowClientGuideNotify.guide_name)
}
#if LANG_CXX11
inline void ShowClientGuideNotify::set_guide_name(::std::string&& value) {
  
  guide_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ShowClientGuideNotify.guide_name)
}
#endif
inline void ShowClientGuideNotify::set_guide_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  guide_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ShowClientGuideNotify.guide_name)
}
inline void ShowClientGuideNotify::set_guide_name(const char* value, size_t size) {
  
  guide_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ShowClientGuideNotify.guide_name)
}
inline ::std::string* ShowClientGuideNotify::mutable_guide_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.ShowClientGuideNotify.guide_name)
  return guide_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShowClientGuideNotify::release_guide_name() {
  // @@protoc_insertion_point(field_release:proto.ShowClientGuideNotify.guide_name)
  
  return guide_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShowClientGuideNotify::set_allocated_guide_name(::std::string* guide_name) {
  if (guide_name != NULL) {
    
  } else {
    
  }
  guide_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guide_name);
  // @@protoc_insertion_point(field_set_allocated:proto.ShowClientGuideNotify.guide_name)
}

// -------------------------------------------------------------------

// ShowClientTutorialNotify

// uint32 tutorial_id = 2;
inline void ShowClientTutorialNotify::clear_tutorial_id() {
  tutorial_id_ = 0u;
}
inline ::google::protobuf::uint32 ShowClientTutorialNotify::tutorial_id() const {
  // @@protoc_insertion_point(field_get:proto.ShowClientTutorialNotify.tutorial_id)
  return tutorial_id_;
}
inline void ShowClientTutorialNotify::set_tutorial_id(::google::protobuf::uint32 value) {
  
  tutorial_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ShowClientTutorialNotify.tutorial_id)
}

// -------------------------------------------------------------------

// GetMapAreaReq

// -------------------------------------------------------------------

// GetMapAreaRsp

// int32 retcode = 14;
inline void GetMapAreaRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetMapAreaRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetMapAreaRsp.retcode)
  return retcode_;
}
inline void GetMapAreaRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetMapAreaRsp.retcode)
}

// repeated .proto.MapAreaInfo map_area_info_list = 9;
inline int GetMapAreaRsp::map_area_info_list_size() const {
  return map_area_info_list_.size();
}
inline void GetMapAreaRsp::clear_map_area_info_list() {
  map_area_info_list_.Clear();
}
inline const ::proto::MapAreaInfo& GetMapAreaRsp::map_area_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetMapAreaRsp.map_area_info_list)
  return map_area_info_list_.Get(index);
}
inline ::proto::MapAreaInfo* GetMapAreaRsp::mutable_map_area_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetMapAreaRsp.map_area_info_list)
  return map_area_info_list_.Mutable(index);
}
inline ::proto::MapAreaInfo* GetMapAreaRsp::add_map_area_info_list() {
  // @@protoc_insertion_point(field_add:proto.GetMapAreaRsp.map_area_info_list)
  return map_area_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::MapAreaInfo >*
GetMapAreaRsp::mutable_map_area_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetMapAreaRsp.map_area_info_list)
  return &map_area_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::MapAreaInfo >&
GetMapAreaRsp::map_area_info_list() const {
  // @@protoc_insertion_point(field_list:proto.GetMapAreaRsp.map_area_info_list)
  return map_area_info_list_;
}

// -------------------------------------------------------------------

// MapAreaChangeNotify

// repeated .proto.MapAreaInfo map_area_info_list = 3;
inline int MapAreaChangeNotify::map_area_info_list_size() const {
  return map_area_info_list_.size();
}
inline void MapAreaChangeNotify::clear_map_area_info_list() {
  map_area_info_list_.Clear();
}
inline const ::proto::MapAreaInfo& MapAreaChangeNotify::map_area_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MapAreaChangeNotify.map_area_info_list)
  return map_area_info_list_.Get(index);
}
inline ::proto::MapAreaInfo* MapAreaChangeNotify::mutable_map_area_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MapAreaChangeNotify.map_area_info_list)
  return map_area_info_list_.Mutable(index);
}
inline ::proto::MapAreaInfo* MapAreaChangeNotify::add_map_area_info_list() {
  // @@protoc_insertion_point(field_add:proto.MapAreaChangeNotify.map_area_info_list)
  return map_area_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::MapAreaInfo >*
MapAreaChangeNotify::mutable_map_area_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MapAreaChangeNotify.map_area_info_list)
  return &map_area_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::MapAreaInfo >&
MapAreaChangeNotify::map_area_info_list() const {
  // @@protoc_insertion_point(field_list:proto.MapAreaChangeNotify.map_area_info_list)
  return map_area_info_list_;
}

// -------------------------------------------------------------------

// LeaveWorldNotify

// -------------------------------------------------------------------

// GuestBeginEnterSceneNotify

// uint32 scene_id = 8;
inline void GuestBeginEnterSceneNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 GuestBeginEnterSceneNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.GuestBeginEnterSceneNotify.scene_id)
  return scene_id_;
}
inline void GuestBeginEnterSceneNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GuestBeginEnterSceneNotify.scene_id)
}

// uint32 uid = 15;
inline void GuestBeginEnterSceneNotify::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 GuestBeginEnterSceneNotify::uid() const {
  // @@protoc_insertion_point(field_get:proto.GuestBeginEnterSceneNotify.uid)
  return uid_;
}
inline void GuestBeginEnterSceneNotify::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GuestBeginEnterSceneNotify.uid)
}

// -------------------------------------------------------------------

// GuestPostEnterSceneNotify

// uint32 scene_id = 5;
inline void GuestPostEnterSceneNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 GuestPostEnterSceneNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.GuestPostEnterSceneNotify.scene_id)
  return scene_id_;
}
inline void GuestPostEnterSceneNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GuestPostEnterSceneNotify.scene_id)
}

// uint32 uid = 4;
inline void GuestPostEnterSceneNotify::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 GuestPostEnterSceneNotify::uid() const {
  // @@protoc_insertion_point(field_get:proto.GuestPostEnterSceneNotify.uid)
  return uid_;
}
inline void GuestPostEnterSceneNotify::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GuestPostEnterSceneNotify.uid)
}

// -------------------------------------------------------------------

// LevelTagDataNotify

// repeated uint32 level_tag_id_list = 9;
inline int LevelTagDataNotify::level_tag_id_list_size() const {
  return level_tag_id_list_.size();
}
inline void LevelTagDataNotify::clear_level_tag_id_list() {
  level_tag_id_list_.Clear();
}
inline ::google::protobuf::uint32 LevelTagDataNotify::level_tag_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.LevelTagDataNotify.level_tag_id_list)
  return level_tag_id_list_.Get(index);
}
inline void LevelTagDataNotify::set_level_tag_id_list(int index, ::google::protobuf::uint32 value) {
  level_tag_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.LevelTagDataNotify.level_tag_id_list)
}
inline void LevelTagDataNotify::add_level_tag_id_list(::google::protobuf::uint32 value) {
  level_tag_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.LevelTagDataNotify.level_tag_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LevelTagDataNotify::level_tag_id_list() const {
  // @@protoc_insertion_point(field_list:proto.LevelTagDataNotify.level_tag_id_list)
  return level_tag_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LevelTagDataNotify::mutable_level_tag_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.LevelTagDataNotify.level_tag_id_list)
  return &level_tag_id_list_;
}

// -------------------------------------------------------------------

// StopReminderNotify

// uint32 reminder_id = 15;
inline void StopReminderNotify::clear_reminder_id() {
  reminder_id_ = 0u;
}
inline ::google::protobuf::uint32 StopReminderNotify::reminder_id() const {
  // @@protoc_insertion_point(field_get:proto.StopReminderNotify.reminder_id)
  return reminder_id_;
}
inline void StopReminderNotify::set_reminder_id(::google::protobuf::uint32 value) {
  
  reminder_id_ = value;
  // @@protoc_insertion_point(field_set:proto.StopReminderNotify.reminder_id)
}

// -------------------------------------------------------------------

// AreaPlayInfoNotify

// uint32 detail_play_type = 14;
inline void AreaPlayInfoNotify::clear_detail_play_type() {
  detail_play_type_ = 0u;
}
inline ::google::protobuf::uint32 AreaPlayInfoNotify::detail_play_type() const {
  // @@protoc_insertion_point(field_get:proto.AreaPlayInfoNotify.detail_play_type)
  return detail_play_type_;
}
inline void AreaPlayInfoNotify::set_detail_play_type(::google::protobuf::uint32 value) {
  
  detail_play_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AreaPlayInfoNotify.detail_play_type)
}

// .proto.AreaPlayType area_play_type = 11;
inline void AreaPlayInfoNotify::clear_area_play_type() {
  area_play_type_ = 0;
}
inline ::proto::AreaPlayType AreaPlayInfoNotify::area_play_type() const {
  // @@protoc_insertion_point(field_get:proto.AreaPlayInfoNotify.area_play_type)
  return static_cast< ::proto::AreaPlayType >(area_play_type_);
}
inline void AreaPlayInfoNotify::set_area_play_type(::proto::AreaPlayType value) {
  
  area_play_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AreaPlayInfoNotify.area_play_type)
}

// -------------------------------------------------------------------

// CheckGroupReplacedReq

// repeated uint32 group_id_list = 7;
inline int CheckGroupReplacedReq::group_id_list_size() const {
  return group_id_list_.size();
}
inline void CheckGroupReplacedReq::clear_group_id_list() {
  group_id_list_.Clear();
}
inline ::google::protobuf::uint32 CheckGroupReplacedReq::group_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CheckGroupReplacedReq.group_id_list)
  return group_id_list_.Get(index);
}
inline void CheckGroupReplacedReq::set_group_id_list(int index, ::google::protobuf::uint32 value) {
  group_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.CheckGroupReplacedReq.group_id_list)
}
inline void CheckGroupReplacedReq::add_group_id_list(::google::protobuf::uint32 value) {
  group_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.CheckGroupReplacedReq.group_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CheckGroupReplacedReq::group_id_list() const {
  // @@protoc_insertion_point(field_list:proto.CheckGroupReplacedReq.group_id_list)
  return group_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CheckGroupReplacedReq::mutable_group_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CheckGroupReplacedReq.group_id_list)
  return &group_id_list_;
}

// -------------------------------------------------------------------

// CheckGroupReplacedRsp

// int32 retcode = 4;
inline void CheckGroupReplacedRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 CheckGroupReplacedRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.CheckGroupReplacedRsp.retcode)
  return retcode_;
}
inline void CheckGroupReplacedRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckGroupReplacedRsp.retcode)
}

// repeated uint32 replaced_group_id_list = 6;
inline int CheckGroupReplacedRsp::replaced_group_id_list_size() const {
  return replaced_group_id_list_.size();
}
inline void CheckGroupReplacedRsp::clear_replaced_group_id_list() {
  replaced_group_id_list_.Clear();
}
inline ::google::protobuf::uint32 CheckGroupReplacedRsp::replaced_group_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CheckGroupReplacedRsp.replaced_group_id_list)
  return replaced_group_id_list_.Get(index);
}
inline void CheckGroupReplacedRsp::set_replaced_group_id_list(int index, ::google::protobuf::uint32 value) {
  replaced_group_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.CheckGroupReplacedRsp.replaced_group_id_list)
}
inline void CheckGroupReplacedRsp::add_replaced_group_id_list(::google::protobuf::uint32 value) {
  replaced_group_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.CheckGroupReplacedRsp.replaced_group_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CheckGroupReplacedRsp::replaced_group_id_list() const {
  // @@protoc_insertion_point(field_list:proto.CheckGroupReplacedRsp.replaced_group_id_list)
  return replaced_group_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CheckGroupReplacedRsp::mutable_replaced_group_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CheckGroupReplacedRsp.replaced_group_id_list)
  return &replaced_group_id_list_;
}

// -------------------------------------------------------------------

// DeathZoneObserveNotify

// uint32 target_entity_id = 14;
inline void DeathZoneObserveNotify::clear_target_entity_id() {
  target_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 DeathZoneObserveNotify::target_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.DeathZoneObserveNotify.target_entity_id)
  return target_entity_id_;
}
inline void DeathZoneObserveNotify::set_target_entity_id(::google::protobuf::uint32 value) {
  
  target_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DeathZoneObserveNotify.target_entity_id)
}

// uint32 source_entity_id = 12;
inline void DeathZoneObserveNotify::clear_source_entity_id() {
  source_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 DeathZoneObserveNotify::source_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.DeathZoneObserveNotify.source_entity_id)
  return source_entity_id_;
}
inline void DeathZoneObserveNotify::set_source_entity_id(::google::protobuf::uint32 value) {
  
  source_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DeathZoneObserveNotify.source_entity_id)
}

// -------------------------------------------------------------------

// HitTreeInfo

// .proto.Vector tree_pos = 12;
inline bool HitTreeInfo::has_tree_pos() const {
  return this != internal_default_instance() && tree_pos_ != NULL;
}
inline void HitTreeInfo::clear_tree_pos() {
  if (GetArenaNoVirtual() == NULL && tree_pos_ != NULL) delete tree_pos_;
  tree_pos_ = NULL;
}
inline const ::proto::Vector& HitTreeInfo::tree_pos() const {
  const ::proto::Vector* p = tree_pos_;
  // @@protoc_insertion_point(field_get:proto.HitTreeInfo.tree_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* HitTreeInfo::mutable_tree_pos() {
  
  if (tree_pos_ == NULL) {
    tree_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.HitTreeInfo.tree_pos)
  return tree_pos_;
}
inline ::proto::Vector* HitTreeInfo::release_tree_pos() {
  // @@protoc_insertion_point(field_release:proto.HitTreeInfo.tree_pos)
  
  ::proto::Vector* temp = tree_pos_;
  tree_pos_ = NULL;
  return temp;
}
inline void HitTreeInfo::set_allocated_tree_pos(::proto::Vector* tree_pos) {
  delete tree_pos_;
  tree_pos_ = tree_pos;
  if (tree_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HitTreeInfo.tree_pos)
}

// uint32 tree_type = 8;
inline void HitTreeInfo::clear_tree_type() {
  tree_type_ = 0u;
}
inline ::google::protobuf::uint32 HitTreeInfo::tree_type() const {
  // @@protoc_insertion_point(field_get:proto.HitTreeInfo.tree_type)
  return tree_type_;
}
inline void HitTreeInfo::set_tree_type(::google::protobuf::uint32 value) {
  
  tree_type_ = value;
  // @@protoc_insertion_point(field_set:proto.HitTreeInfo.tree_type)
}

// -------------------------------------------------------------------

// WorldChestOpenNotify

// uint32 group_id = 6;
inline void WorldChestOpenNotify::clear_group_id() {
  group_id_ = 0u;
}
inline ::google::protobuf::uint32 WorldChestOpenNotify::group_id() const {
  // @@protoc_insertion_point(field_get:proto.WorldChestOpenNotify.group_id)
  return group_id_;
}
inline void WorldChestOpenNotify::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldChestOpenNotify.group_id)
}

// uint32 scene_id = 9;
inline void WorldChestOpenNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 WorldChestOpenNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.WorldChestOpenNotify.scene_id)
  return scene_id_;
}
inline void WorldChestOpenNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldChestOpenNotify.scene_id)
}

// uint32 config_id = 12;
inline void WorldChestOpenNotify::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 WorldChestOpenNotify::config_id() const {
  // @@protoc_insertion_point(field_get:proto.WorldChestOpenNotify.config_id)
  return config_id_;
}
inline void WorldChestOpenNotify::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldChestOpenNotify.config_id)
}

// -------------------------------------------------------------------

// WidgetQuickHitTreeReq

// repeated .proto.HitTreeInfo hit_tree_info_list = 5;
inline int WidgetQuickHitTreeReq::hit_tree_info_list_size() const {
  return hit_tree_info_list_.size();
}
inline void WidgetQuickHitTreeReq::clear_hit_tree_info_list() {
  hit_tree_info_list_.Clear();
}
inline const ::proto::HitTreeInfo& WidgetQuickHitTreeReq::hit_tree_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WidgetQuickHitTreeReq.hit_tree_info_list)
  return hit_tree_info_list_.Get(index);
}
inline ::proto::HitTreeInfo* WidgetQuickHitTreeReq::mutable_hit_tree_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.WidgetQuickHitTreeReq.hit_tree_info_list)
  return hit_tree_info_list_.Mutable(index);
}
inline ::proto::HitTreeInfo* WidgetQuickHitTreeReq::add_hit_tree_info_list() {
  // @@protoc_insertion_point(field_add:proto.WidgetQuickHitTreeReq.hit_tree_info_list)
  return hit_tree_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HitTreeInfo >*
WidgetQuickHitTreeReq::mutable_hit_tree_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WidgetQuickHitTreeReq.hit_tree_info_list)
  return &hit_tree_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HitTreeInfo >&
WidgetQuickHitTreeReq::hit_tree_info_list() const {
  // @@protoc_insertion_point(field_list:proto.WidgetQuickHitTreeReq.hit_tree_info_list)
  return hit_tree_info_list_;
}

// -------------------------------------------------------------------

// WidgetQuickHitTreeRsp

// int32 retcode = 2;
inline void WidgetQuickHitTreeRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 WidgetQuickHitTreeRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.WidgetQuickHitTreeRsp.retcode)
  return retcode_;
}
inline void WidgetQuickHitTreeRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetQuickHitTreeRsp.retcode)
}

// -------------------------------------------------------------------

// BeginCameraSceneLookWithTemplateNotify

// .proto.Vector look_pos = 8;
inline bool BeginCameraSceneLookWithTemplateNotify::has_look_pos() const {
  return this != internal_default_instance() && look_pos_ != NULL;
}
inline void BeginCameraSceneLookWithTemplateNotify::clear_look_pos() {
  if (GetArenaNoVirtual() == NULL && look_pos_ != NULL) delete look_pos_;
  look_pos_ = NULL;
}
inline const ::proto::Vector& BeginCameraSceneLookWithTemplateNotify::look_pos() const {
  const ::proto::Vector* p = look_pos_;
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookWithTemplateNotify.look_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* BeginCameraSceneLookWithTemplateNotify::mutable_look_pos() {
  
  if (look_pos_ == NULL) {
    look_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.BeginCameraSceneLookWithTemplateNotify.look_pos)
  return look_pos_;
}
inline ::proto::Vector* BeginCameraSceneLookWithTemplateNotify::release_look_pos() {
  // @@protoc_insertion_point(field_release:proto.BeginCameraSceneLookWithTemplateNotify.look_pos)
  
  ::proto::Vector* temp = look_pos_;
  look_pos_ = NULL;
  return temp;
}
inline void BeginCameraSceneLookWithTemplateNotify::set_allocated_look_pos(::proto::Vector* look_pos) {
  delete look_pos_;
  look_pos_ = look_pos;
  if (look_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.BeginCameraSceneLookWithTemplateNotify.look_pos)
}

// uint32 template_id = 5;
inline void BeginCameraSceneLookWithTemplateNotify::clear_template_id() {
  template_id_ = 0u;
}
inline ::google::protobuf::uint32 BeginCameraSceneLookWithTemplateNotify::template_id() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookWithTemplateNotify.template_id)
  return template_id_;
}
inline void BeginCameraSceneLookWithTemplateNotify::set_template_id(::google::protobuf::uint32 value) {
  
  template_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookWithTemplateNotify.template_id)
}

// .proto.Vector follow_pos = 2;
inline bool BeginCameraSceneLookWithTemplateNotify::has_follow_pos() const {
  return this != internal_default_instance() && follow_pos_ != NULL;
}
inline void BeginCameraSceneLookWithTemplateNotify::clear_follow_pos() {
  if (GetArenaNoVirtual() == NULL && follow_pos_ != NULL) delete follow_pos_;
  follow_pos_ = NULL;
}
inline const ::proto::Vector& BeginCameraSceneLookWithTemplateNotify::follow_pos() const {
  const ::proto::Vector* p = follow_pos_;
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookWithTemplateNotify.follow_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* BeginCameraSceneLookWithTemplateNotify::mutable_follow_pos() {
  
  if (follow_pos_ == NULL) {
    follow_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.BeginCameraSceneLookWithTemplateNotify.follow_pos)
  return follow_pos_;
}
inline ::proto::Vector* BeginCameraSceneLookWithTemplateNotify::release_follow_pos() {
  // @@protoc_insertion_point(field_release:proto.BeginCameraSceneLookWithTemplateNotify.follow_pos)
  
  ::proto::Vector* temp = follow_pos_;
  follow_pos_ = NULL;
  return temp;
}
inline void BeginCameraSceneLookWithTemplateNotify::set_allocated_follow_pos(::proto::Vector* follow_pos) {
  delete follow_pos_;
  follow_pos_ = follow_pos;
  if (follow_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.BeginCameraSceneLookWithTemplateNotify.follow_pos)
}

// uint32 entity_id = 12;
inline void BeginCameraSceneLookWithTemplateNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 BeginCameraSceneLookWithTemplateNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookWithTemplateNotify.entity_id)
  return entity_id_;
}
inline void BeginCameraSceneLookWithTemplateNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookWithTemplateNotify.entity_id)
}

// repeated string other_params = 13;
inline int BeginCameraSceneLookWithTemplateNotify::other_params_size() const {
  return other_params_.size();
}
inline void BeginCameraSceneLookWithTemplateNotify::clear_other_params() {
  other_params_.Clear();
}
inline const ::std::string& BeginCameraSceneLookWithTemplateNotify::other_params(int index) const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookWithTemplateNotify.other_params)
  return other_params_.Get(index);
}
inline ::std::string* BeginCameraSceneLookWithTemplateNotify::mutable_other_params(int index) {
  // @@protoc_insertion_point(field_mutable:proto.BeginCameraSceneLookWithTemplateNotify.other_params)
  return other_params_.Mutable(index);
}
inline void BeginCameraSceneLookWithTemplateNotify::set_other_params(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookWithTemplateNotify.other_params)
  other_params_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void BeginCameraSceneLookWithTemplateNotify::set_other_params(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookWithTemplateNotify.other_params)
  other_params_.Mutable(index)->assign(std::move(value));
}
#endif
inline void BeginCameraSceneLookWithTemplateNotify::set_other_params(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  other_params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.BeginCameraSceneLookWithTemplateNotify.other_params)
}
inline void BeginCameraSceneLookWithTemplateNotify::set_other_params(int index, const char* value, size_t size) {
  other_params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.BeginCameraSceneLookWithTemplateNotify.other_params)
}
inline ::std::string* BeginCameraSceneLookWithTemplateNotify::add_other_params() {
  // @@protoc_insertion_point(field_add_mutable:proto.BeginCameraSceneLookWithTemplateNotify.other_params)
  return other_params_.Add();
}
inline void BeginCameraSceneLookWithTemplateNotify::add_other_params(const ::std::string& value) {
  other_params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.BeginCameraSceneLookWithTemplateNotify.other_params)
}
#if LANG_CXX11
inline void BeginCameraSceneLookWithTemplateNotify::add_other_params(::std::string&& value) {
  other_params_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.BeginCameraSceneLookWithTemplateNotify.other_params)
}
#endif
inline void BeginCameraSceneLookWithTemplateNotify::add_other_params(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  other_params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.BeginCameraSceneLookWithTemplateNotify.other_params)
}
inline void BeginCameraSceneLookWithTemplateNotify::add_other_params(const char* value, size_t size) {
  other_params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.BeginCameraSceneLookWithTemplateNotify.other_params)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BeginCameraSceneLookWithTemplateNotify::other_params() const {
  // @@protoc_insertion_point(field_list:proto.BeginCameraSceneLookWithTemplateNotify.other_params)
  return other_params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BeginCameraSceneLookWithTemplateNotify::mutable_other_params() {
  // @@protoc_insertion_point(field_mutable_list:proto.BeginCameraSceneLookWithTemplateNotify.other_params)
  return &other_params_;
}

// .proto.BeginCameraSceneLookWithTemplateNotify.FollowType follow_type = 9;
inline void BeginCameraSceneLookWithTemplateNotify::clear_follow_type() {
  follow_type_ = 0;
}
inline ::proto::BeginCameraSceneLookWithTemplateNotify_FollowType BeginCameraSceneLookWithTemplateNotify::follow_type() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookWithTemplateNotify.follow_type)
  return static_cast< ::proto::BeginCameraSceneLookWithTemplateNotify_FollowType >(follow_type_);
}
inline void BeginCameraSceneLookWithTemplateNotify::set_follow_type(::proto::BeginCameraSceneLookWithTemplateNotify_FollowType value) {
  
  follow_type_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookWithTemplateNotify.follow_type)
}

// -------------------------------------------------------------------

// RefreshEntityAuthNotify

// repeated uint32 entity_id_list = 7;
inline int RefreshEntityAuthNotify::entity_id_list_size() const {
  return entity_id_list_.size();
}
inline void RefreshEntityAuthNotify::clear_entity_id_list() {
  entity_id_list_.Clear();
}
inline ::google::protobuf::uint32 RefreshEntityAuthNotify::entity_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.RefreshEntityAuthNotify.entity_id_list)
  return entity_id_list_.Get(index);
}
inline void RefreshEntityAuthNotify::set_entity_id_list(int index, ::google::protobuf::uint32 value) {
  entity_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.RefreshEntityAuthNotify.entity_id_list)
}
inline void RefreshEntityAuthNotify::add_entity_id_list(::google::protobuf::uint32 value) {
  entity_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.RefreshEntityAuthNotify.entity_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RefreshEntityAuthNotify::entity_id_list() const {
  // @@protoc_insertion_point(field_list:proto.RefreshEntityAuthNotify.entity_id_list)
  return entity_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RefreshEntityAuthNotify::mutable_entity_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.RefreshEntityAuthNotify.entity_id_list)
  return &entity_id_list_;
}

// -------------------------------------------------------------------

// ScenePlayerBackgroundAvatarRefreshNotify

// repeated .proto.SceneEntityInfo entity_list = 4;
inline int ScenePlayerBackgroundAvatarRefreshNotify::entity_list_size() const {
  return entity_list_.size();
}
inline void ScenePlayerBackgroundAvatarRefreshNotify::clear_entity_list() {
  entity_list_.Clear();
}
inline const ::proto::SceneEntityInfo& ScenePlayerBackgroundAvatarRefreshNotify::entity_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerBackgroundAvatarRefreshNotify.entity_list)
  return entity_list_.Get(index);
}
inline ::proto::SceneEntityInfo* ScenePlayerBackgroundAvatarRefreshNotify::mutable_entity_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerBackgroundAvatarRefreshNotify.entity_list)
  return entity_list_.Mutable(index);
}
inline ::proto::SceneEntityInfo* ScenePlayerBackgroundAvatarRefreshNotify::add_entity_list() {
  // @@protoc_insertion_point(field_add:proto.ScenePlayerBackgroundAvatarRefreshNotify.entity_list)
  return entity_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::SceneEntityInfo >*
ScenePlayerBackgroundAvatarRefreshNotify::mutable_entity_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ScenePlayerBackgroundAvatarRefreshNotify.entity_list)
  return &entity_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::SceneEntityInfo >&
ScenePlayerBackgroundAvatarRefreshNotify::entity_list() const {
  // @@protoc_insertion_point(field_list:proto.ScenePlayerBackgroundAvatarRefreshNotify.entity_list)
  return entity_list_;
}

// .proto.VisionType appear_type = 8;
inline void ScenePlayerBackgroundAvatarRefreshNotify::clear_appear_type() {
  appear_type_ = 0;
}
inline ::proto::VisionType ScenePlayerBackgroundAvatarRefreshNotify::appear_type() const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerBackgroundAvatarRefreshNotify.appear_type)
  return static_cast< ::proto::VisionType >(appear_type_);
}
inline void ScenePlayerBackgroundAvatarRefreshNotify::set_appear_type(::proto::VisionType value) {
  
  appear_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ScenePlayerBackgroundAvatarRefreshNotify.appear_type)
}

// uint32 param = 9;
inline void ScenePlayerBackgroundAvatarRefreshNotify::clear_param() {
  param_ = 0u;
}
inline ::google::protobuf::uint32 ScenePlayerBackgroundAvatarRefreshNotify::param() const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerBackgroundAvatarRefreshNotify.param)
  return param_;
}
inline void ScenePlayerBackgroundAvatarRefreshNotify::set_param(::google::protobuf::uint32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:proto.ScenePlayerBackgroundAvatarRefreshNotify.param)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::EntityJumpNotify_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EntityJumpNotify_Type>() {
  return ::proto::EntityJumpNotify_Type_descriptor();
}
template <> struct is_proto_enum< ::proto::BeginCameraSceneLookNotify_KeepRotType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BeginCameraSceneLookNotify_KeepRotType>() {
  return ::proto::BeginCameraSceneLookNotify_KeepRotType_descriptor();
}
template <> struct is_proto_enum< ::proto::ScenePlayerSoundNotify_PlaySoundType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ScenePlayerSoundNotify_PlaySoundType>() {
  return ::proto::ScenePlayerSoundNotify_PlaySoundType_descriptor();
}
template <> struct is_proto_enum< ::proto::MarkMapReq_Operation> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MarkMapReq_Operation>() {
  return ::proto::MarkMapReq_Operation_descriptor();
}
template <> struct is_proto_enum< ::proto::WorldDataNotify_DataType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::WorldDataNotify_DataType>() {
  return ::proto::WorldDataNotify_DataType_descriptor();
}
template <> struct is_proto_enum< ::proto::ChatInfo_SystemHintType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChatInfo_SystemHintType>() {
  return ::proto::ChatInfo_SystemHintType_descriptor();
}
template <> struct is_proto_enum< ::proto::BeginCameraSceneLookWithTemplateNotify_FollowType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BeginCameraSceneLookWithTemplateNotify_FollowType>() {
  return ::proto::BeginCameraSceneLookWithTemplateNotify_FollowType_descriptor();
}
template <> struct is_proto_enum< ::proto::EnterType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EnterType>() {
  return ::proto::EnterType_descriptor();
}
template <> struct is_proto_enum< ::proto::VisionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::VisionType>() {
  return ::proto::VisionType_descriptor();
}
template <> struct is_proto_enum< ::proto::CreateReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CreateReason>() {
  return ::proto::CreateReason_descriptor();
}
template <> struct is_proto_enum< ::proto::TransmitReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::TransmitReason>() {
  return ::proto::TransmitReason_descriptor();
}
template <> struct is_proto_enum< ::proto::SealBattleType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SealBattleType>() {
  return ::proto::SealBattleType_descriptor();
}
template <> struct is_proto_enum< ::proto::DungeonEntryBlockReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DungeonEntryBlockReason>() {
  return ::proto::DungeonEntryBlockReason_descriptor();
}
template <> struct is_proto_enum< ::proto::AreaPlayType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AreaPlayType>() {
  return ::proto::AreaPlayType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5fscene_2eproto__INCLUDED
