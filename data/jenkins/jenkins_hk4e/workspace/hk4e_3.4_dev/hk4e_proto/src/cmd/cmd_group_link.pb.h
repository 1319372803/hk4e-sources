// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_group_link.proto

#ifndef PROTOBUF_cmd_2fcmd_5fgroup_5flink_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5fgroup_5flink_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class GroupLinkAllNotify;
class GroupLinkAllNotifyDefaultTypeInternal;
extern GroupLinkAllNotifyDefaultTypeInternal _GroupLinkAllNotify_default_instance_;
class GroupLinkBundle;
class GroupLinkBundleDefaultTypeInternal;
extern GroupLinkBundleDefaultTypeInternal _GroupLinkBundle_default_instance_;
class GroupLinkChangeNotify;
class GroupLinkChangeNotifyDefaultTypeInternal;
extern GroupLinkChangeNotifyDefaultTypeInternal _GroupLinkChangeNotify_default_instance_;
class GroupLinkDeleteNotify;
class GroupLinkDeleteNotifyDefaultTypeInternal;
extern GroupLinkDeleteNotifyDefaultTypeInternal _GroupLinkDeleteNotify_default_instance_;
class GroupLinkMarkUpdateNotify;
class GroupLinkMarkUpdateNotifyDefaultTypeInternal;
extern GroupLinkMarkUpdateNotifyDefaultTypeInternal _GroupLinkMarkUpdateNotify_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5fgroup_5flink_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5fgroup_5flink_2eproto

// ===================================================================

class GroupLinkBundle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GroupLinkBundle) */ {
 public:
  GroupLinkBundle();
  virtual ~GroupLinkBundle();

  GroupLinkBundle(const GroupLinkBundle& from);

  inline GroupLinkBundle& operator=(const GroupLinkBundle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupLinkBundle(GroupLinkBundle&& from) noexcept
    : GroupLinkBundle() {
    *this = ::std::move(from);
  }

  inline GroupLinkBundle& operator=(GroupLinkBundle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupLinkBundle& default_instance();

  static inline const GroupLinkBundle* internal_default_instance() {
    return reinterpret_cast<const GroupLinkBundle*>(
               &_GroupLinkBundle_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GroupLinkBundle* other);
  friend void swap(GroupLinkBundle& a, GroupLinkBundle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupLinkBundle* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupLinkBundle* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupLinkBundle& from);
  void MergeFrom(const GroupLinkBundle& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupLinkBundle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector center = 4;
  bool has_center() const;
  void clear_center();
  static const int kCenterFieldNumber = 4;
  const ::proto::Vector& center() const;
  ::proto::Vector* mutable_center();
  ::proto::Vector* release_center();
  void set_allocated_center(::proto::Vector* center);

  // uint32 radius = 1;
  void clear_radius();
  static const int kRadiusFieldNumber = 1;
  ::google::protobuf::uint32 radius() const;
  void set_radius(::google::protobuf::uint32 value);

  // uint32 bundle_id = 3;
  void clear_bundle_id();
  static const int kBundleIdFieldNumber = 3;
  ::google::protobuf::uint32 bundle_id() const;
  void set_bundle_id(::google::protobuf::uint32 value);

  // uint32 scene_id = 5;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 5;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // bool is_activated = 12;
  void clear_is_activated();
  static const int kIsActivatedFieldNumber = 12;
  bool is_activated() const;
  void set_is_activated(bool value);

  // bool is_show_mark = 14;
  void clear_is_show_mark();
  static const int kIsShowMarkFieldNumber = 14;
  bool is_show_mark() const;
  void set_is_show_mark(bool value);

  // @@protoc_insertion_point(class_scope:proto.GroupLinkBundle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* center_;
  ::google::protobuf::uint32 radius_;
  ::google::protobuf::uint32 bundle_id_;
  ::google::protobuf::uint32 scene_id_;
  bool is_activated_;
  bool is_show_mark_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgroup_5flink_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupLinkAllNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GroupLinkAllNotify) */ {
 public:
  GroupLinkAllNotify();
  virtual ~GroupLinkAllNotify();

  GroupLinkAllNotify(const GroupLinkAllNotify& from);

  inline GroupLinkAllNotify& operator=(const GroupLinkAllNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupLinkAllNotify(GroupLinkAllNotify&& from) noexcept
    : GroupLinkAllNotify() {
    *this = ::std::move(from);
  }

  inline GroupLinkAllNotify& operator=(GroupLinkAllNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupLinkAllNotify& default_instance();

  static inline const GroupLinkAllNotify* internal_default_instance() {
    return reinterpret_cast<const GroupLinkAllNotify*>(
               &_GroupLinkAllNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(GroupLinkAllNotify* other);
  friend void swap(GroupLinkAllNotify& a, GroupLinkAllNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupLinkAllNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupLinkAllNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupLinkAllNotify& from);
  void MergeFrom(const GroupLinkAllNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupLinkAllNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.GroupLinkBundle bundle_list = 5;
  int bundle_list_size() const;
  void clear_bundle_list();
  static const int kBundleListFieldNumber = 5;
  const ::proto::GroupLinkBundle& bundle_list(int index) const;
  ::proto::GroupLinkBundle* mutable_bundle_list(int index);
  ::proto::GroupLinkBundle* add_bundle_list();
  ::google::protobuf::RepeatedPtrField< ::proto::GroupLinkBundle >*
      mutable_bundle_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::GroupLinkBundle >&
      bundle_list() const;

  // @@protoc_insertion_point(class_scope:proto.GroupLinkAllNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::GroupLinkBundle > bundle_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgroup_5flink_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupLinkChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GroupLinkChangeNotify) */ {
 public:
  GroupLinkChangeNotify();
  virtual ~GroupLinkChangeNotify();

  GroupLinkChangeNotify(const GroupLinkChangeNotify& from);

  inline GroupLinkChangeNotify& operator=(const GroupLinkChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupLinkChangeNotify(GroupLinkChangeNotify&& from) noexcept
    : GroupLinkChangeNotify() {
    *this = ::std::move(from);
  }

  inline GroupLinkChangeNotify& operator=(GroupLinkChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupLinkChangeNotify& default_instance();

  static inline const GroupLinkChangeNotify* internal_default_instance() {
    return reinterpret_cast<const GroupLinkChangeNotify*>(
               &_GroupLinkChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(GroupLinkChangeNotify* other);
  friend void swap(GroupLinkChangeNotify& a, GroupLinkChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupLinkChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupLinkChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupLinkChangeNotify& from);
  void MergeFrom(const GroupLinkChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupLinkChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.GroupLinkBundle bundle = 8;
  bool has_bundle() const;
  void clear_bundle();
  static const int kBundleFieldNumber = 8;
  const ::proto::GroupLinkBundle& bundle() const;
  ::proto::GroupLinkBundle* mutable_bundle();
  ::proto::GroupLinkBundle* release_bundle();
  void set_allocated_bundle(::proto::GroupLinkBundle* bundle);

  // @@protoc_insertion_point(class_scope:proto.GroupLinkChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::GroupLinkBundle* bundle_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgroup_5flink_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupLinkDeleteNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GroupLinkDeleteNotify) */ {
 public:
  GroupLinkDeleteNotify();
  virtual ~GroupLinkDeleteNotify();

  GroupLinkDeleteNotify(const GroupLinkDeleteNotify& from);

  inline GroupLinkDeleteNotify& operator=(const GroupLinkDeleteNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupLinkDeleteNotify(GroupLinkDeleteNotify&& from) noexcept
    : GroupLinkDeleteNotify() {
    *this = ::std::move(from);
  }

  inline GroupLinkDeleteNotify& operator=(GroupLinkDeleteNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupLinkDeleteNotify& default_instance();

  static inline const GroupLinkDeleteNotify* internal_default_instance() {
    return reinterpret_cast<const GroupLinkDeleteNotify*>(
               &_GroupLinkDeleteNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(GroupLinkDeleteNotify* other);
  friend void swap(GroupLinkDeleteNotify& a, GroupLinkDeleteNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupLinkDeleteNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupLinkDeleteNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupLinkDeleteNotify& from);
  void MergeFrom(const GroupLinkDeleteNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupLinkDeleteNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 bundle_id = 12;
  void clear_bundle_id();
  static const int kBundleIdFieldNumber = 12;
  ::google::protobuf::uint32 bundle_id() const;
  void set_bundle_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GroupLinkDeleteNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 bundle_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgroup_5flink_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupLinkMarkUpdateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GroupLinkMarkUpdateNotify) */ {
 public:
  GroupLinkMarkUpdateNotify();
  virtual ~GroupLinkMarkUpdateNotify();

  GroupLinkMarkUpdateNotify(const GroupLinkMarkUpdateNotify& from);

  inline GroupLinkMarkUpdateNotify& operator=(const GroupLinkMarkUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupLinkMarkUpdateNotify(GroupLinkMarkUpdateNotify&& from) noexcept
    : GroupLinkMarkUpdateNotify() {
    *this = ::std::move(from);
  }

  inline GroupLinkMarkUpdateNotify& operator=(GroupLinkMarkUpdateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupLinkMarkUpdateNotify& default_instance();

  static inline const GroupLinkMarkUpdateNotify* internal_default_instance() {
    return reinterpret_cast<const GroupLinkMarkUpdateNotify*>(
               &_GroupLinkMarkUpdateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(GroupLinkMarkUpdateNotify* other);
  friend void swap(GroupLinkMarkUpdateNotify& a, GroupLinkMarkUpdateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupLinkMarkUpdateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupLinkMarkUpdateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupLinkMarkUpdateNotify& from);
  void MergeFrom(const GroupLinkMarkUpdateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupLinkMarkUpdateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.GroupLinkBundle bundle = 11;
  bool has_bundle() const;
  void clear_bundle();
  static const int kBundleFieldNumber = 11;
  const ::proto::GroupLinkBundle& bundle() const;
  ::proto::GroupLinkBundle* mutable_bundle();
  ::proto::GroupLinkBundle* release_bundle();
  void set_allocated_bundle(::proto::GroupLinkBundle* bundle);

  // @@protoc_insertion_point(class_scope:proto.GroupLinkMarkUpdateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::GroupLinkBundle* bundle_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgroup_5flink_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GroupLinkBundle

// .proto.Vector center = 4;
inline bool GroupLinkBundle::has_center() const {
  return this != internal_default_instance() && center_ != NULL;
}
inline void GroupLinkBundle::clear_center() {
  if (GetArenaNoVirtual() == NULL && center_ != NULL) delete center_;
  center_ = NULL;
}
inline const ::proto::Vector& GroupLinkBundle::center() const {
  const ::proto::Vector* p = center_;
  // @@protoc_insertion_point(field_get:proto.GroupLinkBundle.center)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* GroupLinkBundle::mutable_center() {
  
  if (center_ == NULL) {
    center_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.GroupLinkBundle.center)
  return center_;
}
inline ::proto::Vector* GroupLinkBundle::release_center() {
  // @@protoc_insertion_point(field_release:proto.GroupLinkBundle.center)
  
  ::proto::Vector* temp = center_;
  center_ = NULL;
  return temp;
}
inline void GroupLinkBundle::set_allocated_center(::proto::Vector* center) {
  delete center_;
  center_ = center;
  if (center) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GroupLinkBundle.center)
}

// bool is_activated = 12;
inline void GroupLinkBundle::clear_is_activated() {
  is_activated_ = false;
}
inline bool GroupLinkBundle::is_activated() const {
  // @@protoc_insertion_point(field_get:proto.GroupLinkBundle.is_activated)
  return is_activated_;
}
inline void GroupLinkBundle::set_is_activated(bool value) {
  
  is_activated_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupLinkBundle.is_activated)
}

// uint32 bundle_id = 3;
inline void GroupLinkBundle::clear_bundle_id() {
  bundle_id_ = 0u;
}
inline ::google::protobuf::uint32 GroupLinkBundle::bundle_id() const {
  // @@protoc_insertion_point(field_get:proto.GroupLinkBundle.bundle_id)
  return bundle_id_;
}
inline void GroupLinkBundle::set_bundle_id(::google::protobuf::uint32 value) {
  
  bundle_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupLinkBundle.bundle_id)
}

// bool is_show_mark = 14;
inline void GroupLinkBundle::clear_is_show_mark() {
  is_show_mark_ = false;
}
inline bool GroupLinkBundle::is_show_mark() const {
  // @@protoc_insertion_point(field_get:proto.GroupLinkBundle.is_show_mark)
  return is_show_mark_;
}
inline void GroupLinkBundle::set_is_show_mark(bool value) {
  
  is_show_mark_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupLinkBundle.is_show_mark)
}

// uint32 scene_id = 5;
inline void GroupLinkBundle::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 GroupLinkBundle::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.GroupLinkBundle.scene_id)
  return scene_id_;
}
inline void GroupLinkBundle::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupLinkBundle.scene_id)
}

// uint32 radius = 1;
inline void GroupLinkBundle::clear_radius() {
  radius_ = 0u;
}
inline ::google::protobuf::uint32 GroupLinkBundle::radius() const {
  // @@protoc_insertion_point(field_get:proto.GroupLinkBundle.radius)
  return radius_;
}
inline void GroupLinkBundle::set_radius(::google::protobuf::uint32 value) {
  
  radius_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupLinkBundle.radius)
}

// -------------------------------------------------------------------

// GroupLinkAllNotify

// repeated .proto.GroupLinkBundle bundle_list = 5;
inline int GroupLinkAllNotify::bundle_list_size() const {
  return bundle_list_.size();
}
inline void GroupLinkAllNotify::clear_bundle_list() {
  bundle_list_.Clear();
}
inline const ::proto::GroupLinkBundle& GroupLinkAllNotify::bundle_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GroupLinkAllNotify.bundle_list)
  return bundle_list_.Get(index);
}
inline ::proto::GroupLinkBundle* GroupLinkAllNotify::mutable_bundle_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GroupLinkAllNotify.bundle_list)
  return bundle_list_.Mutable(index);
}
inline ::proto::GroupLinkBundle* GroupLinkAllNotify::add_bundle_list() {
  // @@protoc_insertion_point(field_add:proto.GroupLinkAllNotify.bundle_list)
  return bundle_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::GroupLinkBundle >*
GroupLinkAllNotify::mutable_bundle_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GroupLinkAllNotify.bundle_list)
  return &bundle_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::GroupLinkBundle >&
GroupLinkAllNotify::bundle_list() const {
  // @@protoc_insertion_point(field_list:proto.GroupLinkAllNotify.bundle_list)
  return bundle_list_;
}

// -------------------------------------------------------------------

// GroupLinkChangeNotify

// .proto.GroupLinkBundle bundle = 8;
inline bool GroupLinkChangeNotify::has_bundle() const {
  return this != internal_default_instance() && bundle_ != NULL;
}
inline void GroupLinkChangeNotify::clear_bundle() {
  if (GetArenaNoVirtual() == NULL && bundle_ != NULL) delete bundle_;
  bundle_ = NULL;
}
inline const ::proto::GroupLinkBundle& GroupLinkChangeNotify::bundle() const {
  const ::proto::GroupLinkBundle* p = bundle_;
  // @@protoc_insertion_point(field_get:proto.GroupLinkChangeNotify.bundle)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::GroupLinkBundle*>(
      &::proto::_GroupLinkBundle_default_instance_);
}
inline ::proto::GroupLinkBundle* GroupLinkChangeNotify::mutable_bundle() {
  
  if (bundle_ == NULL) {
    bundle_ = new ::proto::GroupLinkBundle;
  }
  // @@protoc_insertion_point(field_mutable:proto.GroupLinkChangeNotify.bundle)
  return bundle_;
}
inline ::proto::GroupLinkBundle* GroupLinkChangeNotify::release_bundle() {
  // @@protoc_insertion_point(field_release:proto.GroupLinkChangeNotify.bundle)
  
  ::proto::GroupLinkBundle* temp = bundle_;
  bundle_ = NULL;
  return temp;
}
inline void GroupLinkChangeNotify::set_allocated_bundle(::proto::GroupLinkBundle* bundle) {
  delete bundle_;
  bundle_ = bundle;
  if (bundle) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GroupLinkChangeNotify.bundle)
}

// -------------------------------------------------------------------

// GroupLinkDeleteNotify

// uint32 bundle_id = 12;
inline void GroupLinkDeleteNotify::clear_bundle_id() {
  bundle_id_ = 0u;
}
inline ::google::protobuf::uint32 GroupLinkDeleteNotify::bundle_id() const {
  // @@protoc_insertion_point(field_get:proto.GroupLinkDeleteNotify.bundle_id)
  return bundle_id_;
}
inline void GroupLinkDeleteNotify::set_bundle_id(::google::protobuf::uint32 value) {
  
  bundle_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupLinkDeleteNotify.bundle_id)
}

// -------------------------------------------------------------------

// GroupLinkMarkUpdateNotify

// .proto.GroupLinkBundle bundle = 11;
inline bool GroupLinkMarkUpdateNotify::has_bundle() const {
  return this != internal_default_instance() && bundle_ != NULL;
}
inline void GroupLinkMarkUpdateNotify::clear_bundle() {
  if (GetArenaNoVirtual() == NULL && bundle_ != NULL) delete bundle_;
  bundle_ = NULL;
}
inline const ::proto::GroupLinkBundle& GroupLinkMarkUpdateNotify::bundle() const {
  const ::proto::GroupLinkBundle* p = bundle_;
  // @@protoc_insertion_point(field_get:proto.GroupLinkMarkUpdateNotify.bundle)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::GroupLinkBundle*>(
      &::proto::_GroupLinkBundle_default_instance_);
}
inline ::proto::GroupLinkBundle* GroupLinkMarkUpdateNotify::mutable_bundle() {
  
  if (bundle_ == NULL) {
    bundle_ = new ::proto::GroupLinkBundle;
  }
  // @@protoc_insertion_point(field_mutable:proto.GroupLinkMarkUpdateNotify.bundle)
  return bundle_;
}
inline ::proto::GroupLinkBundle* GroupLinkMarkUpdateNotify::release_bundle() {
  // @@protoc_insertion_point(field_release:proto.GroupLinkMarkUpdateNotify.bundle)
  
  ::proto::GroupLinkBundle* temp = bundle_;
  bundle_ = NULL;
  return temp;
}
inline void GroupLinkMarkUpdateNotify::set_allocated_bundle(::proto::GroupLinkBundle* bundle) {
  delete bundle_;
  bundle_ = bundle;
  if (bundle) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GroupLinkMarkUpdateNotify.bundle)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5fgroup_5flink_2eproto__INCLUDED
