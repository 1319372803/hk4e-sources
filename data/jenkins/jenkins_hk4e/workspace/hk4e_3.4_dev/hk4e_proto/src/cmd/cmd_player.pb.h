// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_player.proto

#ifndef PROTOBUF_cmd_2fcmd_5fplayer_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5fplayer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class AddRandTaskInfoNotify;
class AddRandTaskInfoNotifyDefaultTypeInternal;
extern AddRandTaskInfoNotifyDefaultTypeInternal _AddRandTaskInfoNotify_default_instance_;
class AdjustTrackingInfo;
class AdjustTrackingInfoDefaultTypeInternal;
extern AdjustTrackingInfoDefaultTypeInternal _AdjustTrackingInfo_default_instance_;
class AdjustWorldLevelReq;
class AdjustWorldLevelReqDefaultTypeInternal;
extern AdjustWorldLevelReqDefaultTypeInternal _AdjustWorldLevelReq_default_instance_;
class AdjustWorldLevelRsp;
class AdjustWorldLevelRspDefaultTypeInternal;
extern AdjustWorldLevelRspDefaultTypeInternal _AdjustWorldLevelRsp_default_instance_;
class AntiAddictNotify;
class AntiAddictNotifyDefaultTypeInternal;
extern AntiAddictNotifyDefaultTypeInternal _AntiAddictNotify_default_instance_;
class ChangeGameTimeReq;
class ChangeGameTimeReqDefaultTypeInternal;
extern ChangeGameTimeReqDefaultTypeInternal _ChangeGameTimeReq_default_instance_;
class ChangeGameTimeRsp;
class ChangeGameTimeRspDefaultTypeInternal;
extern ChangeGameTimeRspDefaultTypeInternal _ChangeGameTimeRsp_default_instance_;
class ClientLockGameTimeNotify;
class ClientLockGameTimeNotifyDefaultTypeInternal;
extern ClientLockGameTimeNotifyDefaultTypeInternal _ClientLockGameTimeNotify_default_instance_;
class ClientTriggerEventNotify;
class ClientTriggerEventNotifyDefaultTypeInternal;
extern ClientTriggerEventNotifyDefaultTypeInternal _ClientTriggerEventNotify_default_instance_;
class CompoundDataNotify;
class CompoundDataNotifyDefaultTypeInternal;
extern CompoundDataNotifyDefaultTypeInternal _CompoundDataNotify_default_instance_;
class CompoundQueueData;
class CompoundQueueDataDefaultTypeInternal;
extern CompoundQueueDataDefaultTypeInternal _CompoundQueueData_default_instance_;
class CompoundUnlockNotify;
class CompoundUnlockNotifyDefaultTypeInternal;
extern CompoundUnlockNotifyDefaultTypeInternal _CompoundUnlockNotify_default_instance_;
class CookDataNotify;
class CookDataNotifyDefaultTypeInternal;
extern CookDataNotifyDefaultTypeInternal _CookDataNotify_default_instance_;
class CookGradeDataNotify;
class CookGradeDataNotifyDefaultTypeInternal;
extern CookGradeDataNotifyDefaultTypeInternal _CookGradeDataNotify_default_instance_;
class CookRecipeData;
class CookRecipeDataDefaultTypeInternal;
extern CookRecipeDataDefaultTypeInternal _CookRecipeData_default_instance_;
class CookRecipeDataNotify;
class CookRecipeDataNotifyDefaultTypeInternal;
extern CookRecipeDataNotifyDefaultTypeInternal _CookRecipeDataNotify_default_instance_;
class DailyTaskDataNotify;
class DailyTaskDataNotifyDefaultTypeInternal;
extern DailyTaskDataNotifyDefaultTypeInternal _DailyTaskDataNotify_default_instance_;
class DailyTaskFilterCityReq;
class DailyTaskFilterCityReqDefaultTypeInternal;
extern DailyTaskFilterCityReqDefaultTypeInternal _DailyTaskFilterCityReq_default_instance_;
class DailyTaskFilterCityRsp;
class DailyTaskFilterCityRspDefaultTypeInternal;
extern DailyTaskFilterCityRspDefaultTypeInternal _DailyTaskFilterCityRsp_default_instance_;
class DailyTaskInfo;
class DailyTaskInfoDefaultTypeInternal;
extern DailyTaskInfoDefaultTypeInternal _DailyTaskInfo_default_instance_;
class DailyTaskProgressNotify;
class DailyTaskProgressNotifyDefaultTypeInternal;
extern DailyTaskProgressNotifyDefaultTypeInternal _DailyTaskProgressNotify_default_instance_;
class DailyTaskScoreRewardNotify;
class DailyTaskScoreRewardNotifyDefaultTypeInternal;
extern DailyTaskScoreRewardNotifyDefaultTypeInternal _DailyTaskScoreRewardNotify_default_instance_;
class DailyTaskUnlockedCitiesNotify;
class DailyTaskUnlockedCitiesNotifyDefaultTypeInternal;
extern DailyTaskUnlockedCitiesNotifyDefaultTypeInternal _DailyTaskUnlockedCitiesNotify_default_instance_;
class DataResVersionNotify;
class DataResVersionNotifyDefaultTypeInternal;
extern DataResVersionNotifyDefaultTypeInternal _DataResVersionNotify_default_instance_;
class DoSetPlayerBornDataNotify;
class DoSetPlayerBornDataNotifyDefaultTypeInternal;
extern DoSetPlayerBornDataNotifyDefaultTypeInternal _DoSetPlayerBornDataNotify_default_instance_;
class ExclusiveRuleInfo;
class ExclusiveRuleInfoDefaultTypeInternal;
extern ExclusiveRuleInfoDefaultTypeInternal _ExclusiveRuleInfo_default_instance_;
class ExclusiveRuleNotify;
class ExclusiveRuleNotifyDefaultTypeInternal;
extern ExclusiveRuleNotifyDefaultTypeInternal _ExclusiveRuleNotify_default_instance_;
class GameplayRecommendationElementReliquaryRequest;
class GameplayRecommendationElementReliquaryRequestDefaultTypeInternal;
extern GameplayRecommendationElementReliquaryRequestDefaultTypeInternal _GameplayRecommendationElementReliquaryRequest_default_instance_;
class GameplayRecommendationElementReliquaryResponse;
class GameplayRecommendationElementReliquaryResponseDefaultTypeInternal;
extern GameplayRecommendationElementReliquaryResponseDefaultTypeInternal _GameplayRecommendationElementReliquaryResponse_default_instance_;
class GameplayRecommendationReliquaryMainPropData;
class GameplayRecommendationReliquaryMainPropDataDefaultTypeInternal;
extern GameplayRecommendationReliquaryMainPropDataDefaultTypeInternal _GameplayRecommendationReliquaryMainPropData_default_instance_;
class GameplayRecommendationReliquaryRequest;
class GameplayRecommendationReliquaryRequestDefaultTypeInternal;
extern GameplayRecommendationReliquaryRequestDefaultTypeInternal _GameplayRecommendationReliquaryRequest_default_instance_;
class GameplayRecommendationReliquaryResponse;
class GameplayRecommendationReliquaryResponseDefaultTypeInternal;
extern GameplayRecommendationReliquaryResponseDefaultTypeInternal _GameplayRecommendationReliquaryResponse_default_instance_;
class GameplayRecommendationSkillRequest;
class GameplayRecommendationSkillRequestDefaultTypeInternal;
extern GameplayRecommendationSkillRequestDefaultTypeInternal _GameplayRecommendationSkillRequest_default_instance_;
class GameplayRecommendationSkillResponse;
class GameplayRecommendationSkillResponseDefaultTypeInternal;
extern GameplayRecommendationSkillResponseDefaultTypeInternal _GameplayRecommendationSkillResponse_default_instance_;
class GetCompoundDataReq;
class GetCompoundDataReqDefaultTypeInternal;
extern GetCompoundDataReqDefaultTypeInternal _GetCompoundDataReq_default_instance_;
class GetCompoundDataRsp;
class GetCompoundDataRspDefaultTypeInternal;
extern GetCompoundDataRspDefaultTypeInternal _GetCompoundDataRsp_default_instance_;
class GetGameplayRecommendationReq;
class GetGameplayRecommendationReqDefaultTypeInternal;
extern GetGameplayRecommendationReqDefaultTypeInternal _GetGameplayRecommendationReq_default_instance_;
class GetGameplayRecommendationRsp;
class GetGameplayRecommendationRspDefaultTypeInternal;
extern GetGameplayRecommendationRspDefaultTypeInternal _GetGameplayRecommendationRsp_default_instance_;
class GetNextResourceInfoReq;
class GetNextResourceInfoReqDefaultTypeInternal;
extern GetNextResourceInfoReqDefaultTypeInternal _GetNextResourceInfoReq_default_instance_;
class GetNextResourceInfoRsp;
class GetNextResourceInfoRspDefaultTypeInternal;
extern GetNextResourceInfoRspDefaultTypeInternal _GetNextResourceInfoRsp_default_instance_;
class GetPlayerTokenReq;
class GetPlayerTokenReqDefaultTypeInternal;
extern GetPlayerTokenReqDefaultTypeInternal _GetPlayerTokenReq_default_instance_;
class GetPlayerTokenRsp;
class GetPlayerTokenRspDefaultTypeInternal;
extern GetPlayerTokenRspDefaultTypeInternal _GetPlayerTokenRsp_default_instance_;
class GivingRecord;
class GivingRecordDefaultTypeInternal;
extern GivingRecordDefaultTypeInternal _GivingRecord_default_instance_;
class GivingRecordChangeNotify;
class GivingRecordChangeNotifyDefaultTypeInternal;
extern GivingRecordChangeNotifyDefaultTypeInternal _GivingRecordChangeNotify_default_instance_;
class GivingRecordNotify;
class GivingRecordNotifyDefaultTypeInternal;
extern GivingRecordNotifyDefaultTypeInternal _GivingRecordNotify_default_instance_;
class GivingRecord_MaterialCntMapEntry;
class GivingRecord_MaterialCntMapEntryDefaultTypeInternal;
extern GivingRecord_MaterialCntMapEntryDefaultTypeInternal _GivingRecord_MaterialCntMapEntry_default_instance_;
class ItemGivingReq;
class ItemGivingReqDefaultTypeInternal;
extern ItemGivingReqDefaultTypeInternal _ItemGivingReq_default_instance_;
class ItemGivingReq_ItemGuidCountMapEntry;
class ItemGivingReq_ItemGuidCountMapEntryDefaultTypeInternal;
extern ItemGivingReq_ItemGuidCountMapEntryDefaultTypeInternal _ItemGivingReq_ItemGuidCountMapEntry_default_instance_;
class ItemGivingRsp;
class ItemGivingRspDefaultTypeInternal;
extern ItemGivingRspDefaultTypeInternal _ItemGivingRsp_default_instance_;
class NicknameAuditConfigNotify;
class NicknameAuditConfigNotifyDefaultTypeInternal;
extern NicknameAuditConfigNotifyDefaultTypeInternal _NicknameAuditConfigNotify_default_instance_;
class OpenStateChangeNotify;
class OpenStateChangeNotifyDefaultTypeInternal;
extern OpenStateChangeNotifyDefaultTypeInternal _OpenStateChangeNotify_default_instance_;
class OpenStateChangeNotify_OpenStateMapEntry;
class OpenStateChangeNotify_OpenStateMapEntryDefaultTypeInternal;
extern OpenStateChangeNotify_OpenStateMapEntryDefaultTypeInternal _OpenStateChangeNotify_OpenStateMapEntry_default_instance_;
class OpenStateUpdateNotify;
class OpenStateUpdateNotifyDefaultTypeInternal;
extern OpenStateUpdateNotifyDefaultTypeInternal _OpenStateUpdateNotify_default_instance_;
class OpenStateUpdateNotify_OpenStateMapEntry;
class OpenStateUpdateNotify_OpenStateMapEntryDefaultTypeInternal;
extern OpenStateUpdateNotify_OpenStateMapEntryDefaultTypeInternal _OpenStateUpdateNotify_OpenStateMapEntry_default_instance_;
class PlayerCompoundMaterialBoostReq;
class PlayerCompoundMaterialBoostReqDefaultTypeInternal;
extern PlayerCompoundMaterialBoostReqDefaultTypeInternal _PlayerCompoundMaterialBoostReq_default_instance_;
class PlayerCompoundMaterialBoostRsp;
class PlayerCompoundMaterialBoostRspDefaultTypeInternal;
extern PlayerCompoundMaterialBoostRspDefaultTypeInternal _PlayerCompoundMaterialBoostRsp_default_instance_;
class PlayerCompoundMaterialReq;
class PlayerCompoundMaterialReqDefaultTypeInternal;
extern PlayerCompoundMaterialReqDefaultTypeInternal _PlayerCompoundMaterialReq_default_instance_;
class PlayerCompoundMaterialRsp;
class PlayerCompoundMaterialRspDefaultTypeInternal;
extern PlayerCompoundMaterialRspDefaultTypeInternal _PlayerCompoundMaterialRsp_default_instance_;
class PlayerCookArgsReq;
class PlayerCookArgsReqDefaultTypeInternal;
extern PlayerCookArgsReqDefaultTypeInternal _PlayerCookArgsReq_default_instance_;
class PlayerCookArgsRsp;
class PlayerCookArgsRspDefaultTypeInternal;
extern PlayerCookArgsRspDefaultTypeInternal _PlayerCookArgsRsp_default_instance_;
class PlayerCookReq;
class PlayerCookReqDefaultTypeInternal;
extern PlayerCookReqDefaultTypeInternal _PlayerCookReq_default_instance_;
class PlayerCookRsp;
class PlayerCookRspDefaultTypeInternal;
extern PlayerCookRspDefaultTypeInternal _PlayerCookRsp_default_instance_;
class PlayerDataNotify;
class PlayerDataNotifyDefaultTypeInternal;
extern PlayerDataNotifyDefaultTypeInternal _PlayerDataNotify_default_instance_;
class PlayerDataNotify_PropMapEntry;
class PlayerDataNotify_PropMapEntryDefaultTypeInternal;
extern PlayerDataNotify_PropMapEntryDefaultTypeInternal _PlayerDataNotify_PropMapEntry_default_instance_;
class PlayerForceExitReq;
class PlayerForceExitReqDefaultTypeInternal;
extern PlayerForceExitReqDefaultTypeInternal _PlayerForceExitReq_default_instance_;
class PlayerForceExitRsp;
class PlayerForceExitRspDefaultTypeInternal;
extern PlayerForceExitRspDefaultTypeInternal _PlayerForceExitRsp_default_instance_;
class PlayerGameTimeByLuaNotify;
class PlayerGameTimeByLuaNotifyDefaultTypeInternal;
extern PlayerGameTimeByLuaNotifyDefaultTypeInternal _PlayerGameTimeByLuaNotify_default_instance_;
class PlayerGameTimeNotify;
class PlayerGameTimeNotifyDefaultTypeInternal;
extern PlayerGameTimeNotifyDefaultTypeInternal _PlayerGameTimeNotify_default_instance_;
class PlayerInjectFixNotify;
class PlayerInjectFixNotifyDefaultTypeInternal;
extern PlayerInjectFixNotifyDefaultTypeInternal _PlayerInjectFixNotify_default_instance_;
class PlayerIpRegionNotify;
class PlayerIpRegionNotifyDefaultTypeInternal;
extern PlayerIpRegionNotifyDefaultTypeInternal _PlayerIpRegionNotify_default_instance_;
class PlayerLevelRewardUpdateNotify;
class PlayerLevelRewardUpdateNotifyDefaultTypeInternal;
extern PlayerLevelRewardUpdateNotifyDefaultTypeInternal _PlayerLevelRewardUpdateNotify_default_instance_;
class PlayerLoginReq;
class PlayerLoginReqDefaultTypeInternal;
extern PlayerLoginReqDefaultTypeInternal _PlayerLoginReq_default_instance_;
class PlayerLoginRsp;
class PlayerLoginRspDefaultTypeInternal;
extern PlayerLoginRspDefaultTypeInternal _PlayerLoginRsp_default_instance_;
class PlayerLoginRsp_AbilityHashMapEntry;
class PlayerLoginRsp_AbilityHashMapEntryDefaultTypeInternal;
extern PlayerLoginRsp_AbilityHashMapEntryDefaultTypeInternal _PlayerLoginRsp_AbilityHashMapEntry_default_instance_;
class PlayerLoginRsp_BlockInfoMapEntry;
class PlayerLoginRsp_BlockInfoMapEntryDefaultTypeInternal;
extern PlayerLoginRsp_BlockInfoMapEntryDefaultTypeInternal _PlayerLoginRsp_BlockInfoMapEntry_default_instance_;
class PlayerLogoutNotify;
class PlayerLogoutNotifyDefaultTypeInternal;
extern PlayerLogoutNotifyDefaultTypeInternal _PlayerLogoutNotify_default_instance_;
class PlayerLogoutReq;
class PlayerLogoutReqDefaultTypeInternal;
extern PlayerLogoutReqDefaultTypeInternal _PlayerLogoutReq_default_instance_;
class PlayerLogoutRsp;
class PlayerLogoutRspDefaultTypeInternal;
extern PlayerLogoutRspDefaultTypeInternal _PlayerLogoutRsp_default_instance_;
class PlayerLuaShellNotify;
class PlayerLuaShellNotifyDefaultTypeInternal;
extern PlayerLuaShellNotifyDefaultTypeInternal _PlayerLuaShellNotify_default_instance_;
class PlayerNicknameAuditDataNotify;
class PlayerNicknameAuditDataNotifyDefaultTypeInternal;
extern PlayerNicknameAuditDataNotifyDefaultTypeInternal _PlayerNicknameAuditDataNotify_default_instance_;
class PlayerNicknameNotify;
class PlayerNicknameNotifyDefaultTypeInternal;
extern PlayerNicknameNotifyDefaultTypeInternal _PlayerNicknameNotify_default_instance_;
class PlayerPropChangeNotify;
class PlayerPropChangeNotifyDefaultTypeInternal;
extern PlayerPropChangeNotifyDefaultTypeInternal _PlayerPropChangeNotify_default_instance_;
class PlayerPropNotify;
class PlayerPropNotifyDefaultTypeInternal;
extern PlayerPropNotifyDefaultTypeInternal _PlayerPropNotify_default_instance_;
class PlayerPropNotify_PropMapEntry;
class PlayerPropNotify_PropMapEntryDefaultTypeInternal;
extern PlayerPropNotify_PropMapEntryDefaultTypeInternal _PlayerPropNotify_PropMapEntry_default_instance_;
class PlayerRandomCookReq;
class PlayerRandomCookReqDefaultTypeInternal;
extern PlayerRandomCookReqDefaultTypeInternal _PlayerRandomCookReq_default_instance_;
class PlayerRandomCookRsp;
class PlayerRandomCookRspDefaultTypeInternal;
extern PlayerRandomCookRspDefaultTypeInternal _PlayerRandomCookRsp_default_instance_;
class PlayerSetLanguageReq;
class PlayerSetLanguageReqDefaultTypeInternal;
extern PlayerSetLanguageReqDefaultTypeInternal _PlayerSetLanguageReq_default_instance_;
class PlayerSetLanguageRsp;
class PlayerSetLanguageRspDefaultTypeInternal;
extern PlayerSetLanguageRspDefaultTypeInternal _PlayerSetLanguageRsp_default_instance_;
class PlayerSetPauseReq;
class PlayerSetPauseReqDefaultTypeInternal;
extern PlayerSetPauseReqDefaultTypeInternal _PlayerSetPauseReq_default_instance_;
class PlayerSetPauseRsp;
class PlayerSetPauseRspDefaultTypeInternal;
extern PlayerSetPauseRspDefaultTypeInternal _PlayerSetPauseRsp_default_instance_;
class PlayerTimeNotify;
class PlayerTimeNotifyDefaultTypeInternal;
extern PlayerTimeNotifyDefaultTypeInternal _PlayerTimeNotify_default_instance_;
class ReadNicknameAuditReq;
class ReadNicknameAuditReqDefaultTypeInternal;
extern ReadNicknameAuditReqDefaultTypeInternal _ReadNicknameAuditReq_default_instance_;
class ReadNicknameAuditRsp;
class ReadNicknameAuditRspDefaultTypeInternal;
extern ReadNicknameAuditRspDefaultTypeInternal _ReadNicknameAuditRsp_default_instance_;
class RemoveRandTaskInfoNotify;
class RemoveRandTaskInfoNotifyDefaultTypeInternal;
extern RemoveRandTaskInfoNotifyDefaultTypeInternal _RemoveRandTaskInfoNotify_default_instance_;
class ServerDisconnectClientNotify;
class ServerDisconnectClientNotifyDefaultTypeInternal;
extern ServerDisconnectClientNotifyDefaultTypeInternal _ServerDisconnectClientNotify_default_instance_;
class SetOpenStateReq;
class SetOpenStateReqDefaultTypeInternal;
extern SetOpenStateReqDefaultTypeInternal _SetOpenStateReq_default_instance_;
class SetOpenStateRsp;
class SetOpenStateRspDefaultTypeInternal;
extern SetOpenStateRspDefaultTypeInternal _SetOpenStateRsp_default_instance_;
class SetPlayerBornDataReq;
class SetPlayerBornDataReqDefaultTypeInternal;
extern SetPlayerBornDataReqDefaultTypeInternal _SetPlayerBornDataReq_default_instance_;
class SetPlayerBornDataRsp;
class SetPlayerBornDataRspDefaultTypeInternal;
extern SetPlayerBornDataRspDefaultTypeInternal _SetPlayerBornDataRsp_default_instance_;
class SetPlayerNameReq;
class SetPlayerNameReqDefaultTypeInternal;
extern SetPlayerNameReqDefaultTypeInternal _SetPlayerNameReq_default_instance_;
class SetPlayerNameRsp;
class SetPlayerNameRspDefaultTypeInternal;
extern SetPlayerNameRspDefaultTypeInternal _SetPlayerNameRsp_default_instance_;
class SetPlayerPropReq;
class SetPlayerPropReqDefaultTypeInternal;
extern SetPlayerPropReqDefaultTypeInternal _SetPlayerPropReq_default_instance_;
class SetPlayerPropRsp;
class SetPlayerPropRspDefaultTypeInternal;
extern SetPlayerPropRspDefaultTypeInternal _SetPlayerPropRsp_default_instance_;
class ShortAbilityHashPair;
class ShortAbilityHashPairDefaultTypeInternal;
extern ShortAbilityHashPairDefaultTypeInternal _ShortAbilityHashPair_default_instance_;
class TakeBackGivingItemReq;
class TakeBackGivingItemReqDefaultTypeInternal;
extern TakeBackGivingItemReqDefaultTypeInternal _TakeBackGivingItemReq_default_instance_;
class TakeBackGivingItemRsp;
class TakeBackGivingItemRspDefaultTypeInternal;
extern TakeBackGivingItemRspDefaultTypeInternal _TakeBackGivingItemRsp_default_instance_;
class TakeCompoundOutputReq;
class TakeCompoundOutputReqDefaultTypeInternal;
extern TakeCompoundOutputReqDefaultTypeInternal _TakeCompoundOutputReq_default_instance_;
class TakeCompoundOutputRsp;
class TakeCompoundOutputRspDefaultTypeInternal;
extern TakeCompoundOutputRspDefaultTypeInternal _TakeCompoundOutputRsp_default_instance_;
class TakePlayerLevelRewardReq;
class TakePlayerLevelRewardReqDefaultTypeInternal;
extern TakePlayerLevelRewardReqDefaultTypeInternal _TakePlayerLevelRewardReq_default_instance_;
class TakePlayerLevelRewardRsp;
class TakePlayerLevelRewardRspDefaultTypeInternal;
extern TakePlayerLevelRewardRspDefaultTypeInternal _TakePlayerLevelRewardRsp_default_instance_;
class TaskVar;
class TaskVarDefaultTypeInternal;
extern TaskVarDefaultTypeInternal _TaskVar_default_instance_;
class TaskVarNotify;
class TaskVarNotifyDefaultTypeInternal;
extern TaskVarNotifyDefaultTypeInternal _TaskVarNotify_default_instance_;
class TrackingIOInfo;
class TrackingIOInfoDefaultTypeInternal;
extern TrackingIOInfoDefaultTypeInternal _TrackingIOInfo_default_instance_;
class WorldOwnerDailyTaskNotify;
class WorldOwnerDailyTaskNotifyDefaultTypeInternal;
extern WorldOwnerDailyTaskNotifyDefaultTypeInternal _WorldOwnerDailyTaskNotify_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5fplayer_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5fplayer_2eproto

enum PlayerLogoutReq_Reason {
  PlayerLogoutReq_Reason_DISCONNECT = 0,
  PlayerLogoutReq_Reason_CLIENT_REQ = 1,
  PlayerLogoutReq_Reason_TIMEOUT = 2,
  PlayerLogoutReq_Reason_ADMIN_REQ = 3,
  PlayerLogoutReq_Reason_SERVER_CLOSE = 4,
  PlayerLogoutReq_Reason_GM_CLEAR = 5,
  PlayerLogoutReq_Reason_PLAYER_TRANSFER = 6,
  PlayerLogoutReq_Reason_CLIENT_CHECKSUM_INVALID = 7,
  PlayerLogoutReq_Reason_PlayerLogoutReq_Reason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerLogoutReq_Reason_PlayerLogoutReq_Reason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerLogoutReq_Reason_IsValid(int value);
const PlayerLogoutReq_Reason PlayerLogoutReq_Reason_Reason_MIN = PlayerLogoutReq_Reason_DISCONNECT;
const PlayerLogoutReq_Reason PlayerLogoutReq_Reason_Reason_MAX = PlayerLogoutReq_Reason_CLIENT_CHECKSUM_INVALID;
const int PlayerLogoutReq_Reason_Reason_ARRAYSIZE = PlayerLogoutReq_Reason_Reason_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerLogoutReq_Reason_descriptor();
inline const ::std::string& PlayerLogoutReq_Reason_Name(PlayerLogoutReq_Reason value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerLogoutReq_Reason_descriptor(), value);
}
inline bool PlayerLogoutReq_Reason_Parse(
    const ::std::string& name, PlayerLogoutReq_Reason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerLogoutReq_Reason>(
    PlayerLogoutReq_Reason_descriptor(), name, value);
}
enum DataResVersionNotify_DataResVersionOpType {
  DataResVersionNotify_DataResVersionOpType_OP_TYPE_NONE = 0,
  DataResVersionNotify_DataResVersionOpType_OP_TYPE_RELOGIN = 1,
  DataResVersionNotify_DataResVersionOpType_OP_TYPE_MP_RELOGIN = 2,
  DataResVersionNotify_DataResVersionOpType_DataResVersionNotify_DataResVersionOpType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DataResVersionNotify_DataResVersionOpType_DataResVersionNotify_DataResVersionOpType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DataResVersionNotify_DataResVersionOpType_IsValid(int value);
const DataResVersionNotify_DataResVersionOpType DataResVersionNotify_DataResVersionOpType_DataResVersionOpType_MIN = DataResVersionNotify_DataResVersionOpType_OP_TYPE_NONE;
const DataResVersionNotify_DataResVersionOpType DataResVersionNotify_DataResVersionOpType_DataResVersionOpType_MAX = DataResVersionNotify_DataResVersionOpType_OP_TYPE_MP_RELOGIN;
const int DataResVersionNotify_DataResVersionOpType_DataResVersionOpType_ARRAYSIZE = DataResVersionNotify_DataResVersionOpType_DataResVersionOpType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DataResVersionNotify_DataResVersionOpType_descriptor();
inline const ::std::string& DataResVersionNotify_DataResVersionOpType_Name(DataResVersionNotify_DataResVersionOpType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DataResVersionNotify_DataResVersionOpType_descriptor(), value);
}
inline bool DataResVersionNotify_DataResVersionOpType_Parse(
    const ::std::string& name, DataResVersionNotify_DataResVersionOpType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataResVersionNotify_DataResVersionOpType>(
    DataResVersionNotify_DataResVersionOpType_descriptor(), name, value);
}
enum RemoveRandTaskInfoNotify_FinishReason {
  RemoveRandTaskInfoNotify_FinishReason_DEFAULT = 0,
  RemoveRandTaskInfoNotify_FinishReason_CLEAR = 1,
  RemoveRandTaskInfoNotify_FinishReason_DISTANCE = 2,
  RemoveRandTaskInfoNotify_FinishReason_FINISH = 3,
  RemoveRandTaskInfoNotify_FinishReason_RemoveRandTaskInfoNotify_FinishReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RemoveRandTaskInfoNotify_FinishReason_RemoveRandTaskInfoNotify_FinishReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RemoveRandTaskInfoNotify_FinishReason_IsValid(int value);
const RemoveRandTaskInfoNotify_FinishReason RemoveRandTaskInfoNotify_FinishReason_FinishReason_MIN = RemoveRandTaskInfoNotify_FinishReason_DEFAULT;
const RemoveRandTaskInfoNotify_FinishReason RemoveRandTaskInfoNotify_FinishReason_FinishReason_MAX = RemoveRandTaskInfoNotify_FinishReason_FINISH;
const int RemoveRandTaskInfoNotify_FinishReason_FinishReason_ARRAYSIZE = RemoveRandTaskInfoNotify_FinishReason_FinishReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* RemoveRandTaskInfoNotify_FinishReason_descriptor();
inline const ::std::string& RemoveRandTaskInfoNotify_FinishReason_Name(RemoveRandTaskInfoNotify_FinishReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    RemoveRandTaskInfoNotify_FinishReason_descriptor(), value);
}
inline bool RemoveRandTaskInfoNotify_FinishReason_Parse(
    const ::std::string& name, RemoveRandTaskInfoNotify_FinishReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RemoveRandTaskInfoNotify_FinishReason>(
    RemoveRandTaskInfoNotify_FinishReason_descriptor(), name, value);
}
enum ItemGivingReq_ItemGivingType {
  ItemGivingReq_ItemGivingType_QUEST = 0,
  ItemGivingReq_ItemGivingType_GADGET = 1,
  ItemGivingReq_ItemGivingType_ItemGivingReq_ItemGivingType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ItemGivingReq_ItemGivingType_ItemGivingReq_ItemGivingType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ItemGivingReq_ItemGivingType_IsValid(int value);
const ItemGivingReq_ItemGivingType ItemGivingReq_ItemGivingType_ItemGivingType_MIN = ItemGivingReq_ItemGivingType_QUEST;
const ItemGivingReq_ItemGivingType ItemGivingReq_ItemGivingType_ItemGivingType_MAX = ItemGivingReq_ItemGivingType_GADGET;
const int ItemGivingReq_ItemGivingType_ItemGivingType_ARRAYSIZE = ItemGivingReq_ItemGivingType_ItemGivingType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ItemGivingReq_ItemGivingType_descriptor();
inline const ::std::string& ItemGivingReq_ItemGivingType_Name(ItemGivingReq_ItemGivingType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ItemGivingReq_ItemGivingType_descriptor(), value);
}
inline bool ItemGivingReq_ItemGivingType_Parse(
    const ::std::string& name, ItemGivingReq_ItemGivingType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ItemGivingReq_ItemGivingType>(
    ItemGivingReq_ItemGivingType_descriptor(), name, value);
}
enum CompoundBoostTakeStatusType {
  COMPOUND_BOOST_TAKE_STATUS_NONE = 0,
  COMPOUND_BOOST_TAKE_STATUS_BOOST_ONLY = 1,
  COMPOUND_BOOST_TAKE_STATUS_BOOST_AND_TAKE = 2,
  COMPOUND_BOOST_TAKE_STATUS_BAG_FULL = 3,
  CompoundBoostTakeStatusType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CompoundBoostTakeStatusType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CompoundBoostTakeStatusType_IsValid(int value);
const CompoundBoostTakeStatusType CompoundBoostTakeStatusType_MIN = COMPOUND_BOOST_TAKE_STATUS_NONE;
const CompoundBoostTakeStatusType CompoundBoostTakeStatusType_MAX = COMPOUND_BOOST_TAKE_STATUS_BAG_FULL;
const int CompoundBoostTakeStatusType_ARRAYSIZE = CompoundBoostTakeStatusType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CompoundBoostTakeStatusType_descriptor();
inline const ::std::string& CompoundBoostTakeStatusType_Name(CompoundBoostTakeStatusType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CompoundBoostTakeStatusType_descriptor(), value);
}
inline bool CompoundBoostTakeStatusType_Parse(
    const ::std::string& name, CompoundBoostTakeStatusType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CompoundBoostTakeStatusType>(
    CompoundBoostTakeStatusType_descriptor(), name, value);
}
// ===================================================================

class GetPlayerTokenReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetPlayerTokenReq) */ {
 public:
  GetPlayerTokenReq();
  virtual ~GetPlayerTokenReq();

  GetPlayerTokenReq(const GetPlayerTokenReq& from);

  inline GetPlayerTokenReq& operator=(const GetPlayerTokenReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPlayerTokenReq(GetPlayerTokenReq&& from) noexcept
    : GetPlayerTokenReq() {
    *this = ::std::move(from);
  }

  inline GetPlayerTokenReq& operator=(GetPlayerTokenReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPlayerTokenReq& default_instance();

  static inline const GetPlayerTokenReq* internal_default_instance() {
    return reinterpret_cast<const GetPlayerTokenReq*>(
               &_GetPlayerTokenReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GetPlayerTokenReq* other);
  friend void swap(GetPlayerTokenReq& a, GetPlayerTokenReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPlayerTokenReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetPlayerTokenReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetPlayerTokenReq& from);
  void MergeFrom(const GetPlayerTokenReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetPlayerTokenReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string client_ip_str = 3;
  void clear_client_ip_str();
  static const int kClientIpStrFieldNumber = 3;
  const ::std::string& client_ip_str() const;
  void set_client_ip_str(const ::std::string& value);
  #if LANG_CXX11
  void set_client_ip_str(::std::string&& value);
  #endif
  void set_client_ip_str(const char* value);
  void set_client_ip_str(const char* value, size_t size);
  ::std::string* mutable_client_ip_str();
  ::std::string* release_client_ip_str();
  void set_allocated_client_ip_str(::std::string* client_ip_str);

  // string psn_region = 4;
  void clear_psn_region();
  static const int kPsnRegionFieldNumber = 4;
  const ::std::string& psn_region() const;
  void set_psn_region(const ::std::string& value);
  #if LANG_CXX11
  void set_psn_region(::std::string&& value);
  #endif
  void set_psn_region(const char* value);
  void set_psn_region(const char* value, size_t size);
  ::std::string* mutable_psn_region();
  ::std::string* release_psn_region();
  void set_allocated_psn_region(::std::string* psn_region);

  // string country_code = 5;
  void clear_country_code();
  static const int kCountryCodeFieldNumber = 5;
  const ::std::string& country_code() const;
  void set_country_code(const ::std::string& value);
  #if LANG_CXX11
  void set_country_code(::std::string&& value);
  #endif
  void set_country_code(const char* value);
  void set_country_code(const char* value, size_t size);
  ::std::string* mutable_country_code();
  ::std::string* release_country_code();
  void set_allocated_country_code(::std::string* country_code);

  // string online_id = 7;
  void clear_online_id();
  static const int kOnlineIdFieldNumber = 7;
  const ::std::string& online_id() const;
  void set_online_id(const ::std::string& value);
  #if LANG_CXX11
  void set_online_id(::std::string&& value);
  #endif
  void set_online_id(const char* value);
  void set_online_id(const char* value, size_t size);
  ::std::string* mutable_online_id();
  ::std::string* release_online_id();
  void set_allocated_online_id(::std::string* online_id);

  // string account_ext = 9;
  void clear_account_ext();
  static const int kAccountExtFieldNumber = 9;
  const ::std::string& account_ext() const;
  void set_account_ext(const ::std::string& value);
  #if LANG_CXX11
  void set_account_ext(::std::string&& value);
  #endif
  void set_account_ext(const char* value);
  void set_account_ext(const char* value, size_t size);
  ::std::string* mutable_account_ext();
  ::std::string* release_account_ext();
  void set_allocated_account_ext(::std::string* account_ext);

  // string account_token = 10;
  void clear_account_token();
  static const int kAccountTokenFieldNumber = 10;
  const ::std::string& account_token() const;
  void set_account_token(const ::std::string& value);
  #if LANG_CXX11
  void set_account_token(::std::string&& value);
  #endif
  void set_account_token(const char* value);
  void set_account_token(const char* value, size_t size);
  ::std::string* mutable_account_token();
  ::std::string* release_account_token();
  void set_allocated_account_token(::std::string* account_token);

  // string account_uid = 11;
  void clear_account_uid();
  static const int kAccountUidFieldNumber = 11;
  const ::std::string& account_uid() const;
  void set_account_uid(const ::std::string& value);
  #if LANG_CXX11
  void set_account_uid(::std::string&& value);
  #endif
  void set_account_uid(const char* value);
  void set_account_uid(const char* value, size_t size);
  ::std::string* mutable_account_uid();
  ::std::string* release_account_uid();
  void set_allocated_account_uid(::std::string* account_uid);

  // string psn_id = 13;
  void clear_psn_id();
  static const int kPsnIdFieldNumber = 13;
  const ::std::string& psn_id() const;
  void set_psn_id(const ::std::string& value);
  #if LANG_CXX11
  void set_psn_id(::std::string&& value);
  #endif
  void set_psn_id(const char* value);
  void set_psn_id(const char* value, size_t size);
  ::std::string* mutable_psn_id();
  ::std::string* release_psn_id();
  void set_allocated_psn_id(::std::string* psn_id);

  // string client_rand_key = 760;
  void clear_client_rand_key();
  static const int kClientRandKeyFieldNumber = 760;
  const ::std::string& client_rand_key() const;
  void set_client_rand_key(const ::std::string& value);
  #if LANG_CXX11
  void set_client_rand_key(::std::string&& value);
  #endif
  void set_client_rand_key(const char* value);
  void set_client_rand_key(const char* value, size_t size);
  ::std::string* mutable_client_rand_key();
  ::std::string* release_client_rand_key();
  void set_allocated_client_rand_key(::std::string* client_rand_key);

  // string birthday = 1718;
  void clear_birthday();
  static const int kBirthdayFieldNumber = 1718;
  const ::std::string& birthday() const;
  void set_birthday(const ::std::string& value);
  #if LANG_CXX11
  void set_birthday(::std::string&& value);
  #endif
  void set_birthday(const char* value);
  void set_birthday(const char* value, size_t size);
  ::std::string* mutable_birthday();
  ::std::string* release_birthday();
  void set_allocated_birthday(::std::string* birthday);

  // uint32 account_type = 1;
  void clear_account_type();
  static const int kAccountTypeFieldNumber = 1;
  ::google::protobuf::uint32 account_type() const;
  void set_account_type(::google::protobuf::uint32 value);

  // uint32 uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // bool is_guest = 6;
  void clear_is_guest();
  static const int kIsGuestFieldNumber = 6;
  bool is_guest() const;
  void set_is_guest(bool value);

  // uint32 sub_channel_id = 8;
  void clear_sub_channel_id();
  static const int kSubChannelIdFieldNumber = 8;
  ::google::protobuf::uint32 sub_channel_id() const;
  void set_sub_channel_id(::google::protobuf::uint32 value);

  // uint32 platform_type = 12;
  void clear_platform_type();
  static const int kPlatformTypeFieldNumber = 12;
  ::google::protobuf::uint32 platform_type() const;
  void set_platform_type(::google::protobuf::uint32 value);

  // uint32 cloud_client_ip = 14;
  void clear_cloud_client_ip();
  static const int kCloudClientIpFieldNumber = 14;
  ::google::protobuf::uint32 cloud_client_ip() const;
  void set_cloud_client_ip(::google::protobuf::uint32 value);

  // uint32 channel_id = 15;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 15;
  ::google::protobuf::uint32 channel_id() const;
  void set_channel_id(::google::protobuf::uint32 value);

  // uint32 lang = 892;
  void clear_lang();
  static const int kLangFieldNumber = 892;
  ::google::protobuf::uint32 lang() const;
  void set_lang(::google::protobuf::uint32 value);

  // uint32 minors_reg_min_age = 995;
  void clear_minors_reg_min_age();
  static const int kMinorsRegMinAgeFieldNumber = 995;
  ::google::protobuf::uint32 minors_reg_min_age() const;
  void set_minors_reg_min_age(::google::protobuf::uint32 value);

  // uint32 key_id = 1787;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 1787;
  ::google::protobuf::uint32 key_id() const;
  void set_key_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetPlayerTokenReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr client_ip_str_;
  ::google::protobuf::internal::ArenaStringPtr psn_region_;
  ::google::protobuf::internal::ArenaStringPtr country_code_;
  ::google::protobuf::internal::ArenaStringPtr online_id_;
  ::google::protobuf::internal::ArenaStringPtr account_ext_;
  ::google::protobuf::internal::ArenaStringPtr account_token_;
  ::google::protobuf::internal::ArenaStringPtr account_uid_;
  ::google::protobuf::internal::ArenaStringPtr psn_id_;
  ::google::protobuf::internal::ArenaStringPtr client_rand_key_;
  ::google::protobuf::internal::ArenaStringPtr birthday_;
  ::google::protobuf::uint32 account_type_;
  ::google::protobuf::uint32 uid_;
  bool is_guest_;
  ::google::protobuf::uint32 sub_channel_id_;
  ::google::protobuf::uint32 platform_type_;
  ::google::protobuf::uint32 cloud_client_ip_;
  ::google::protobuf::uint32 channel_id_;
  ::google::protobuf::uint32 lang_;
  ::google::protobuf::uint32 minors_reg_min_age_;
  ::google::protobuf::uint32 key_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetPlayerTokenRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetPlayerTokenRsp) */ {
 public:
  GetPlayerTokenRsp();
  virtual ~GetPlayerTokenRsp();

  GetPlayerTokenRsp(const GetPlayerTokenRsp& from);

  inline GetPlayerTokenRsp& operator=(const GetPlayerTokenRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPlayerTokenRsp(GetPlayerTokenRsp&& from) noexcept
    : GetPlayerTokenRsp() {
    *this = ::std::move(from);
  }

  inline GetPlayerTokenRsp& operator=(GetPlayerTokenRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPlayerTokenRsp& default_instance();

  static inline const GetPlayerTokenRsp* internal_default_instance() {
    return reinterpret_cast<const GetPlayerTokenRsp*>(
               &_GetPlayerTokenRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(GetPlayerTokenRsp* other);
  friend void swap(GetPlayerTokenRsp& a, GetPlayerTokenRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPlayerTokenRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetPlayerTokenRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetPlayerTokenRsp& from);
  void MergeFrom(const GetPlayerTokenRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetPlayerTokenRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 finish_collection_id_list = 1640;
  int finish_collection_id_list_size() const;
  void clear_finish_collection_id_list();
  static const int kFinishCollectionIdListFieldNumber = 1640;
  ::google::protobuf::uint32 finish_collection_id_list(int index) const;
  void set_finish_collection_id_list(int index, ::google::protobuf::uint32 value);
  void add_finish_collection_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      finish_collection_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_finish_collection_id_list();

  // bytes extra_bin_data = 3;
  void clear_extra_bin_data();
  static const int kExtraBinDataFieldNumber = 3;
  const ::std::string& extra_bin_data() const;
  void set_extra_bin_data(const ::std::string& value);
  #if LANG_CXX11
  void set_extra_bin_data(::std::string&& value);
  #endif
  void set_extra_bin_data(const char* value);
  void set_extra_bin_data(const void* value, size_t size);
  ::std::string* mutable_extra_bin_data();
  ::std::string* release_extra_bin_data();
  void set_allocated_extra_bin_data(::std::string* extra_bin_data);

  // bytes security_cmd_buffer = 6;
  void clear_security_cmd_buffer();
  static const int kSecurityCmdBufferFieldNumber = 6;
  const ::std::string& security_cmd_buffer() const;
  void set_security_cmd_buffer(const ::std::string& value);
  #if LANG_CXX11
  void set_security_cmd_buffer(::std::string&& value);
  #endif
  void set_security_cmd_buffer(const char* value);
  void set_security_cmd_buffer(const void* value, size_t size);
  ::std::string* mutable_security_cmd_buffer();
  ::std::string* release_security_cmd_buffer();
  void set_allocated_security_cmd_buffer(::std::string* security_cmd_buffer);

  // string msg = 7;
  void clear_msg();
  static const int kMsgFieldNumber = 7;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // string token = 11;
  void clear_token();
  static const int kTokenFieldNumber = 11;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string account_uid = 12;
  void clear_account_uid();
  static const int kAccountUidFieldNumber = 12;
  const ::std::string& account_uid() const;
  void set_account_uid(const ::std::string& value);
  #if LANG_CXX11
  void set_account_uid(::std::string&& value);
  #endif
  void set_account_uid(const char* value);
  void set_account_uid(const char* value, size_t size);
  ::std::string* mutable_account_uid();
  ::std::string* release_account_uid();
  void set_allocated_account_uid(::std::string* account_uid);

  // string secret_key = 15;
  void clear_secret_key();
  static const int kSecretKeyFieldNumber = 15;
  const ::std::string& secret_key() const;
  void set_secret_key(const ::std::string& value);
  #if LANG_CXX11
  void set_secret_key(::std::string&& value);
  #endif
  void set_secret_key(const char* value);
  void set_secret_key(const char* value, size_t size);
  ::std::string* mutable_secret_key();
  ::std::string* release_secret_key();
  void set_allocated_secret_key(::std::string* secret_key);

  // string client_ip_str = 860;
  void clear_client_ip_str();
  static const int kClientIpStrFieldNumber = 860;
  const ::std::string& client_ip_str() const;
  void set_client_ip_str(const ::std::string& value);
  #if LANG_CXX11
  void set_client_ip_str(::std::string&& value);
  #endif
  void set_client_ip_str(const char* value);
  void set_client_ip_str(const char* value, size_t size);
  ::std::string* mutable_client_ip_str();
  ::std::string* release_client_ip_str();
  void set_allocated_client_ip_str(::std::string* client_ip_str);

  // string birthday = 937;
  void clear_birthday();
  static const int kBirthdayFieldNumber = 937;
  const ::std::string& birthday() const;
  void set_birthday(const ::std::string& value);
  #if LANG_CXX11
  void set_birthday(::std::string&& value);
  #endif
  void set_birthday(const char* value);
  void set_birthday(const char* value, size_t size);
  ::std::string* mutable_birthday();
  ::std::string* release_birthday();
  void set_allocated_birthday(::std::string* birthday);

  // string sign = 1140;
  void clear_sign();
  static const int kSignFieldNumber = 1140;
  const ::std::string& sign() const;
  void set_sign(const ::std::string& value);
  #if LANG_CXX11
  void set_sign(::std::string&& value);
  #endif
  void set_sign(const char* value);
  void set_sign(const char* value, size_t size);
  ::std::string* mutable_sign();
  ::std::string* release_sign();
  void set_allocated_sign(::std::string* sign);

  // string server_rand_key = 1493;
  void clear_server_rand_key();
  static const int kServerRandKeyFieldNumber = 1493;
  const ::std::string& server_rand_key() const;
  void set_server_rand_key(const ::std::string& value);
  #if LANG_CXX11
  void set_server_rand_key(::std::string&& value);
  #endif
  void set_server_rand_key(const char* value);
  void set_server_rand_key(const char* value, size_t size);
  ::std::string* mutable_server_rand_key();
  ::std::string* release_server_rand_key();
  void set_allocated_server_rand_key(::std::string* server_rand_key);

  // string client_version_random_key = 1529;
  void clear_client_version_random_key();
  static const int kClientVersionRandomKeyFieldNumber = 1529;
  const ::std::string& client_version_random_key() const;
  void set_client_version_random_key(const ::std::string& value);
  #if LANG_CXX11
  void set_client_version_random_key(::std::string&& value);
  #endif
  void set_client_version_random_key(const char* value);
  void set_client_version_random_key(const char* value, size_t size);
  ::std::string* mutable_client_version_random_key();
  ::std::string* release_client_version_random_key();
  void set_allocated_client_version_random_key(::std::string* client_version_random_key);

  // string psn_id = 1811;
  void clear_psn_id();
  static const int kPsnIdFieldNumber = 1811;
  const ::std::string& psn_id() const;
  void set_psn_id(const ::std::string& value);
  #if LANG_CXX11
  void set_psn_id(::std::string&& value);
  #endif
  void set_psn_id(const char* value);
  void set_psn_id(const char* value, size_t size);
  ::std::string* mutable_psn_id();
  ::std::string* release_psn_id();
  void set_allocated_psn_id(::std::string* psn_id);

  // string country_code = 2013;
  void clear_country_code();
  static const int kCountryCodeFieldNumber = 2013;
  const ::std::string& country_code() const;
  void set_country_code(const ::std::string& value);
  #if LANG_CXX11
  void set_country_code(::std::string&& value);
  #endif
  void set_country_code(const char* value);
  void set_country_code(const char* value, size_t size);
  ::std::string* mutable_country_code();
  ::std::string* release_country_code();
  void set_allocated_country_code(::std::string* country_code);

  // .proto.StopServerInfo stop_server = 1382;
  bool has_stop_server() const;
  void clear_stop_server();
  static const int kStopServerFieldNumber = 1382;
  const ::proto::StopServerInfo& stop_server() const;
  ::proto::StopServerInfo* mutable_stop_server();
  ::proto::StopServerInfo* release_stop_server();
  void set_allocated_stop_server(::proto::StopServerInfo* stop_server);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // int32 retcode = 2;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 2;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 account_type = 5;
  void clear_account_type();
  static const int kAccountTypeFieldNumber = 5;
  ::google::protobuf::uint32 account_type() const;
  void set_account_type(::google::protobuf::uint32 value);

  // uint32 platform_type = 8;
  void clear_platform_type();
  static const int kPlatformTypeFieldNumber = 8;
  ::google::protobuf::uint32 platform_type() const;
  void set_platform_type(::google::protobuf::uint32 value);

  // uint32 gm_uid = 10;
  void clear_gm_uid();
  static const int kGmUidFieldNumber = 10;
  ::google::protobuf::uint32 gm_uid() const;
  void set_gm_uid(::google::protobuf::uint32 value);

  // uint32 black_uid_end_time = 14;
  void clear_black_uid_end_time();
  static const int kBlackUidEndTimeFieldNumber = 14;
  ::google::protobuf::uint32 black_uid_end_time() const;
  void set_black_uid_end_time(::google::protobuf::uint32 value);

  // uint64 secret_key_seed = 13;
  void clear_secret_key_seed();
  static const int kSecretKeySeedFieldNumber = 13;
  ::google::protobuf::uint64 secret_key_seed() const;
  void set_secret_key_seed(::google::protobuf::uint64 value);

  // uint32 sub_channel_id = 1802;
  void clear_sub_channel_id();
  static const int kSubChannelIdFieldNumber = 1802;
  ::google::protobuf::uint32 sub_channel_id() const;
  void set_sub_channel_id(::google::protobuf::uint32 value);

  // bool is_login_white_list = 573;
  void clear_is_login_white_list();
  static const int kIsLoginWhiteListFieldNumber = 573;
  bool is_login_white_list() const;
  void set_is_login_white_list(bool value);

  // bool is_guest = 4;
  void clear_is_guest();
  static const int kIsGuestFieldNumber = 4;
  bool is_guest() const;
  void set_is_guest(bool value);

  // bool is_watchdog_uid = 2028;
  void clear_is_watchdog_uid();
  static const int kIsWatchdogUidFieldNumber = 2028;
  bool is_watchdog_uid() const;
  void set_is_watchdog_uid(bool value);

  // bool is_proficient_player = 9;
  void clear_is_proficient_player();
  static const int kIsProficientPlayerFieldNumber = 9;
  bool is_proficient_player() const;
  void set_is_proficient_player(bool value);

  // uint32 channel_id = 896;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 896;
  ::google::protobuf::uint32 channel_id() const;
  void set_channel_id(::google::protobuf::uint32 value);

  // uint32 reg_platform = 1112;
  void clear_reg_platform();
  static const int kRegPlatformFieldNumber = 1112;
  ::google::protobuf::uint32 reg_platform() const;
  void set_reg_platform(::google::protobuf::uint32 value);

  // uint32 key_id = 1172;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 1172;
  ::google::protobuf::uint32 key_id() const;
  void set_key_id(::google::protobuf::uint32 value);

  // uint32 minors_reg_min_age = 1561;
  void clear_minors_reg_min_age();
  static const int kMinorsRegMinAgeFieldNumber = 1561;
  ::google::protobuf::uint32 minors_reg_min_age() const;
  void set_minors_reg_min_age(::google::protobuf::uint32 value);

  // uint32 tag = 1635;
  void clear_tag();
  static const int kTagFieldNumber = 1635;
  ::google::protobuf::uint32 tag() const;
  void set_tag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetPlayerTokenRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > finish_collection_id_list_;
  mutable int _finish_collection_id_list_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr extra_bin_data_;
  ::google::protobuf::internal::ArenaStringPtr security_cmd_buffer_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr account_uid_;
  ::google::protobuf::internal::ArenaStringPtr secret_key_;
  ::google::protobuf::internal::ArenaStringPtr client_ip_str_;
  ::google::protobuf::internal::ArenaStringPtr birthday_;
  ::google::protobuf::internal::ArenaStringPtr sign_;
  ::google::protobuf::internal::ArenaStringPtr server_rand_key_;
  ::google::protobuf::internal::ArenaStringPtr client_version_random_key_;
  ::google::protobuf::internal::ArenaStringPtr psn_id_;
  ::google::protobuf::internal::ArenaStringPtr country_code_;
  ::proto::StopServerInfo* stop_server_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 account_type_;
  ::google::protobuf::uint32 platform_type_;
  ::google::protobuf::uint32 gm_uid_;
  ::google::protobuf::uint32 black_uid_end_time_;
  ::google::protobuf::uint64 secret_key_seed_;
  ::google::protobuf::uint32 sub_channel_id_;
  bool is_login_white_list_;
  bool is_guest_;
  bool is_watchdog_uid_;
  bool is_proficient_player_;
  ::google::protobuf::uint32 channel_id_;
  ::google::protobuf::uint32 reg_platform_;
  ::google::protobuf::uint32 key_id_;
  ::google::protobuf::uint32 minors_reg_min_age_;
  ::google::protobuf::uint32 tag_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TrackingIOInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TrackingIOInfo) */ {
 public:
  TrackingIOInfo();
  virtual ~TrackingIOInfo();

  TrackingIOInfo(const TrackingIOInfo& from);

  inline TrackingIOInfo& operator=(const TrackingIOInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrackingIOInfo(TrackingIOInfo&& from) noexcept
    : TrackingIOInfo() {
    *this = ::std::move(from);
  }

  inline TrackingIOInfo& operator=(TrackingIOInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TrackingIOInfo& default_instance();

  static inline const TrackingIOInfo* internal_default_instance() {
    return reinterpret_cast<const TrackingIOInfo*>(
               &_TrackingIOInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(TrackingIOInfo* other);
  friend void swap(TrackingIOInfo& a, TrackingIOInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrackingIOInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  TrackingIOInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TrackingIOInfo& from);
  void MergeFrom(const TrackingIOInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TrackingIOInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string appid = 1;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // string client_tz = 5;
  void clear_client_tz();
  static const int kClientTzFieldNumber = 5;
  const ::std::string& client_tz() const;
  void set_client_tz(const ::std::string& value);
  #if LANG_CXX11
  void set_client_tz(::std::string&& value);
  #endif
  void set_client_tz(const char* value);
  void set_client_tz(const char* value, size_t size);
  ::std::string* mutable_client_tz();
  ::std::string* release_client_tz();
  void set_allocated_client_tz(::std::string* client_tz);

  // string mac = 6;
  void clear_mac();
  static const int kMacFieldNumber = 6;
  const ::std::string& mac() const;
  void set_mac(const ::std::string& value);
  #if LANG_CXX11
  void set_mac(::std::string&& value);
  #endif
  void set_mac(const char* value);
  void set_mac(const char* value, size_t size);
  ::std::string* mutable_mac();
  ::std::string* release_mac();
  void set_allocated_mac(::std::string* mac);

  // string current_caid = 7;
  void clear_current_caid();
  static const int kCurrentCaidFieldNumber = 7;
  const ::std::string& current_caid() const;
  void set_current_caid(const ::std::string& value);
  #if LANG_CXX11
  void set_current_caid(::std::string&& value);
  #endif
  void set_current_caid(const char* value);
  void set_current_caid(const char* value, size_t size);
  ::std::string* mutable_current_caid();
  ::std::string* release_current_caid();
  void set_allocated_current_caid(::std::string* current_caid);

  // string deviceid = 9;
  void clear_deviceid();
  static const int kDeviceidFieldNumber = 9;
  const ::std::string& deviceid() const;
  void set_deviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_deviceid(::std::string&& value);
  #endif
  void set_deviceid(const char* value);
  void set_deviceid(const char* value, size_t size);
  ::std::string* mutable_deviceid();
  ::std::string* release_deviceid();
  void set_allocated_deviceid(::std::string* deviceid);

  // string rydevicetype = 11;
  void clear_rydevicetype();
  static const int kRydevicetypeFieldNumber = 11;
  const ::std::string& rydevicetype() const;
  void set_rydevicetype(const ::std::string& value);
  #if LANG_CXX11
  void set_rydevicetype(::std::string&& value);
  #endif
  void set_rydevicetype(const char* value);
  void set_rydevicetype(const char* value, size_t size);
  ::std::string* mutable_rydevicetype();
  ::std::string* release_rydevicetype();
  void set_allocated_rydevicetype(::std::string* rydevicetype);

  // string cached_caid = 15;
  void clear_cached_caid();
  static const int kCachedCaidFieldNumber = 15;
  const ::std::string& cached_caid() const;
  void set_cached_caid(const ::std::string& value);
  #if LANG_CXX11
  void set_cached_caid(::std::string&& value);
  #endif
  void set_cached_caid(const char* value);
  void set_cached_caid(const char* value, size_t size);
  ::std::string* mutable_cached_caid();
  ::std::string* release_cached_caid();
  void set_allocated_cached_caid(::std::string* cached_caid);

  // @@protoc_insertion_point(class_scope:proto.TrackingIOInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr client_tz_;
  ::google::protobuf::internal::ArenaStringPtr mac_;
  ::google::protobuf::internal::ArenaStringPtr current_caid_;
  ::google::protobuf::internal::ArenaStringPtr deviceid_;
  ::google::protobuf::internal::ArenaStringPtr rydevicetype_;
  ::google::protobuf::internal::ArenaStringPtr cached_caid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AdjustTrackingInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AdjustTrackingInfo) */ {
 public:
  AdjustTrackingInfo();
  virtual ~AdjustTrackingInfo();

  AdjustTrackingInfo(const AdjustTrackingInfo& from);

  inline AdjustTrackingInfo& operator=(const AdjustTrackingInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AdjustTrackingInfo(AdjustTrackingInfo&& from) noexcept
    : AdjustTrackingInfo() {
    *this = ::std::move(from);
  }

  inline AdjustTrackingInfo& operator=(AdjustTrackingInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AdjustTrackingInfo& default_instance();

  static inline const AdjustTrackingInfo* internal_default_instance() {
    return reinterpret_cast<const AdjustTrackingInfo*>(
               &_AdjustTrackingInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(AdjustTrackingInfo* other);
  friend void swap(AdjustTrackingInfo& a, AdjustTrackingInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AdjustTrackingInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AdjustTrackingInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AdjustTrackingInfo& from);
  void MergeFrom(const AdjustTrackingInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AdjustTrackingInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string idfa = 2;
  void clear_idfa();
  static const int kIdfaFieldNumber = 2;
  const ::std::string& idfa() const;
  void set_idfa(const ::std::string& value);
  #if LANG_CXX11
  void set_idfa(::std::string&& value);
  #endif
  void set_idfa(const char* value);
  void set_idfa(const char* value, size_t size);
  ::std::string* mutable_idfa();
  ::std::string* release_idfa();
  void set_allocated_idfa(::std::string* idfa);

  // string gps_adid = 3;
  void clear_gps_adid();
  static const int kGpsAdidFieldNumber = 3;
  const ::std::string& gps_adid() const;
  void set_gps_adid(const ::std::string& value);
  #if LANG_CXX11
  void set_gps_adid(::std::string&& value);
  #endif
  void set_gps_adid(const char* value);
  void set_gps_adid(const char* value, size_t size);
  ::std::string* mutable_gps_adid();
  ::std::string* release_gps_adid();
  void set_allocated_gps_adid(::std::string* gps_adid);

  // string adid = 4;
  void clear_adid();
  static const int kAdidFieldNumber = 4;
  const ::std::string& adid() const;
  void set_adid(const ::std::string& value);
  #if LANG_CXX11
  void set_adid(::std::string&& value);
  #endif
  void set_adid(const char* value);
  void set_adid(const char* value, size_t size);
  ::std::string* mutable_adid();
  ::std::string* release_adid();
  void set_allocated_adid(::std::string* adid);

  // string event_token = 9;
  void clear_event_token();
  static const int kEventTokenFieldNumber = 9;
  const ::std::string& event_token() const;
  void set_event_token(const ::std::string& value);
  #if LANG_CXX11
  void set_event_token(::std::string&& value);
  #endif
  void set_event_token(const char* value);
  void set_event_token(const char* value, size_t size);
  ::std::string* mutable_event_token();
  ::std::string* release_event_token();
  void set_allocated_event_token(::std::string* event_token);

  // string fire_adid = 13;
  void clear_fire_adid();
  static const int kFireAdidFieldNumber = 13;
  const ::std::string& fire_adid() const;
  void set_fire_adid(const ::std::string& value);
  #if LANG_CXX11
  void set_fire_adid(::std::string&& value);
  #endif
  void set_fire_adid(const char* value);
  void set_fire_adid(const char* value, size_t size);
  ::std::string* mutable_fire_adid();
  ::std::string* release_fire_adid();
  void set_allocated_fire_adid(::std::string* fire_adid);

  // string app_token = 14;
  void clear_app_token();
  static const int kAppTokenFieldNumber = 14;
  const ::std::string& app_token() const;
  void set_app_token(const ::std::string& value);
  #if LANG_CXX11
  void set_app_token(::std::string&& value);
  #endif
  void set_app_token(const char* value);
  void set_app_token(const char* value, size_t size);
  ::std::string* mutable_app_token();
  ::std::string* release_app_token();
  void set_allocated_app_token(::std::string* app_token);

  // @@protoc_insertion_point(class_scope:proto.AdjustTrackingInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr idfa_;
  ::google::protobuf::internal::ArenaStringPtr gps_adid_;
  ::google::protobuf::internal::ArenaStringPtr adid_;
  ::google::protobuf::internal::ArenaStringPtr event_token_;
  ::google::protobuf::internal::ArenaStringPtr fire_adid_;
  ::google::protobuf::internal::ArenaStringPtr app_token_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerLoginReq) */ {
 public:
  PlayerLoginReq();
  virtual ~PlayerLoginReq();

  PlayerLoginReq(const PlayerLoginReq& from);

  inline PlayerLoginReq& operator=(const PlayerLoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLoginReq(PlayerLoginReq&& from) noexcept
    : PlayerLoginReq() {
    *this = ::std::move(from);
  }

  inline PlayerLoginReq& operator=(PlayerLoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLoginReq& default_instance();

  static inline const PlayerLoginReq* internal_default_instance() {
    return reinterpret_cast<const PlayerLoginReq*>(
               &_PlayerLoginReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(PlayerLoginReq* other);
  friend void swap(PlayerLoginReq& a, PlayerLoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerLoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerLoginReq& from);
  void MergeFrom(const PlayerLoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string device_info = 1;
  void clear_device_info();
  static const int kDeviceInfoFieldNumber = 1;
  const ::std::string& device_info() const;
  void set_device_info(const ::std::string& value);
  #if LANG_CXX11
  void set_device_info(::std::string&& value);
  #endif
  void set_device_info(const char* value);
  void set_device_info(const char* value, size_t size);
  ::std::string* mutable_device_info();
  ::std::string* release_device_info();
  void set_allocated_device_info(::std::string* device_info);

  // string account_uid = 2;
  void clear_account_uid();
  static const int kAccountUidFieldNumber = 2;
  const ::std::string& account_uid() const;
  void set_account_uid(const ::std::string& value);
  #if LANG_CXX11
  void set_account_uid(::std::string&& value);
  #endif
  void set_account_uid(const char* value);
  void set_account_uid(const char* value, size_t size);
  ::std::string* mutable_account_uid();
  ::std::string* release_account_uid();
  void set_allocated_account_uid(::std::string* account_uid);

  // string device_uuid = 4;
  void clear_device_uuid();
  static const int kDeviceUuidFieldNumber = 4;
  const ::std::string& device_uuid() const;
  void set_device_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_device_uuid(::std::string&& value);
  #endif
  void set_device_uuid(const char* value);
  void set_device_uuid(const char* value, size_t size);
  ::std::string* mutable_device_uuid();
  ::std::string* release_device_uuid();
  void set_allocated_device_uuid(::std::string* device_uuid);

  // string platform = 7;
  void clear_platform();
  static const int kPlatformFieldNumber = 7;
  const ::std::string& platform() const;
  void set_platform(const ::std::string& value);
  #if LANG_CXX11
  void set_platform(::std::string&& value);
  #endif
  void set_platform(const char* value);
  void set_platform(const char* value, size_t size);
  ::std::string* mutable_platform();
  ::std::string* release_platform();
  void set_allocated_platform(::std::string* platform);

  // string device_name = 9;
  void clear_device_name();
  static const int kDeviceNameFieldNumber = 9;
  const ::std::string& device_name() const;
  void set_device_name(const ::std::string& value);
  #if LANG_CXX11
  void set_device_name(::std::string&& value);
  #endif
  void set_device_name(const char* value);
  void set_device_name(const char* value, size_t size);
  ::std::string* mutable_device_name();
  ::std::string* release_device_name();
  void set_allocated_device_name(::std::string* device_name);

  // string system_version = 10;
  void clear_system_version();
  static const int kSystemVersionFieldNumber = 10;
  const ::std::string& system_version() const;
  void set_system_version(const ::std::string& value);
  #if LANG_CXX11
  void set_system_version(::std::string&& value);
  #endif
  void set_system_version(const char* value);
  void set_system_version(const char* value, size_t size);
  ::std::string* mutable_system_version();
  ::std::string* release_system_version();
  void set_allocated_system_version(::std::string* system_version);

  // string client_version = 12;
  void clear_client_version();
  static const int kClientVersionFieldNumber = 12;
  const ::std::string& client_version() const;
  void set_client_version(const ::std::string& value);
  #if LANG_CXX11
  void set_client_version(::std::string&& value);
  #endif
  void set_client_version(const char* value);
  void set_client_version(const char* value, size_t size);
  ::std::string* mutable_client_version();
  ::std::string* release_client_version();
  void set_allocated_client_version(::std::string* client_version);

  // string token = 15;
  void clear_token();
  static const int kTokenFieldNumber = 15;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string security_library_md5 = 772;
  void clear_security_library_md5();
  static const int kSecurityLibraryMd5FieldNumber = 772;
  const ::std::string& security_library_md5() const;
  void set_security_library_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_security_library_md5(::std::string&& value);
  #endif
  void set_security_library_md5(const char* value);
  void set_security_library_md5(const char* value, size_t size);
  ::std::string* mutable_security_library_md5();
  ::std::string* release_security_library_md5();
  void set_allocated_security_library_md5(::std::string* security_library_md5);

  // string checksum_client_version = 861;
  void clear_checksum_client_version();
  static const int kChecksumClientVersionFieldNumber = 861;
  const ::std::string& checksum_client_version() const;
  void set_checksum_client_version(const ::std::string& value);
  #if LANG_CXX11
  void set_checksum_client_version(::std::string&& value);
  #endif
  void set_checksum_client_version(const char* value);
  void set_checksum_client_version(const char* value, size_t size);
  ::std::string* mutable_checksum_client_version();
  ::std::string* release_checksum_client_version();
  void set_allocated_checksum_client_version(::std::string* checksum_client_version);

  // string online_id = 903;
  void clear_online_id();
  static const int kOnlineIdFieldNumber = 903;
  const ::std::string& online_id() const;
  void set_online_id(const ::std::string& value);
  #if LANG_CXX11
  void set_online_id(::std::string&& value);
  #endif
  void set_online_id(const char* value);
  void set_online_id(const char* value, size_t size);
  ::std::string* mutable_online_id();
  ::std::string* release_online_id();
  void set_allocated_online_id(::std::string* online_id);

  // string cps = 1163;
  void clear_cps();
  static const int kCpsFieldNumber = 1163;
  const ::std::string& cps() const;
  void set_cps(const ::std::string& value);
  #if LANG_CXX11
  void set_cps(::std::string&& value);
  #endif
  void set_cps(const char* value);
  void set_cps(const char* value, size_t size);
  ::std::string* mutable_cps();
  ::std::string* release_cps();
  void set_allocated_cps(::std::string* cps);

  // string security_library_version = 1213;
  void clear_security_library_version();
  static const int kSecurityLibraryVersionFieldNumber = 1213;
  const ::std::string& security_library_version() const;
  void set_security_library_version(const ::std::string& value);
  #if LANG_CXX11
  void set_security_library_version(::std::string&& value);
  #endif
  void set_security_library_version(const char* value);
  void set_security_library_version(const char* value, size_t size);
  ::std::string* mutable_security_library_version();
  ::std::string* release_security_library_version();
  void set_allocated_security_library_version(::std::string* security_library_version);

  // string psn_id = 1268;
  void clear_psn_id();
  static const int kPsnIdFieldNumber = 1268;
  const ::std::string& psn_id() const;
  void set_psn_id(const ::std::string& value);
  #if LANG_CXX11
  void set_psn_id(::std::string&& value);
  #endif
  void set_psn_id(const char* value);
  void set_psn_id(const char* value, size_t size);
  ::std::string* mutable_psn_id();
  ::std::string* release_psn_id();
  void set_allocated_psn_id(::std::string* psn_id);

  // bytes extra_bin_data = 1458;
  void clear_extra_bin_data();
  static const int kExtraBinDataFieldNumber = 1458;
  const ::std::string& extra_bin_data() const;
  void set_extra_bin_data(const ::std::string& value);
  #if LANG_CXX11
  void set_extra_bin_data(::std::string&& value);
  #endif
  void set_extra_bin_data(const char* value);
  void set_extra_bin_data(const void* value, size_t size);
  ::std::string* mutable_extra_bin_data();
  ::std::string* release_extra_bin_data();
  void set_allocated_extra_bin_data(::std::string* extra_bin_data);

  // string checksum = 1532;
  void clear_checksum();
  static const int kChecksumFieldNumber = 1532;
  const ::std::string& checksum() const;
  void set_checksum(const ::std::string& value);
  #if LANG_CXX11
  void set_checksum(::std::string&& value);
  #endif
  void set_checksum(const char* value);
  void set_checksum(const char* value, size_t size);
  ::std::string* mutable_checksum();
  ::std::string* release_checksum();
  void set_allocated_checksum(::std::string* checksum);

  // string birthday = 1652;
  void clear_birthday();
  static const int kBirthdayFieldNumber = 1652;
  const ::std::string& birthday() const;
  void set_birthday(const ::std::string& value);
  #if LANG_CXX11
  void set_birthday(::std::string&& value);
  #endif
  void set_birthday(const char* value);
  void set_birthday(const char* value, size_t size);
  ::std::string* mutable_birthday();
  ::std::string* release_birthday();
  void set_allocated_birthday(::std::string* birthday);

  // string client_verison_hash = 1707;
  void clear_client_verison_hash();
  static const int kClientVerisonHashFieldNumber = 1707;
  const ::std::string& client_verison_hash() const;
  void set_client_verison_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_client_verison_hash(::std::string&& value);
  #endif
  void set_client_verison_hash(const char* value);
  void set_client_verison_hash(const char* value, size_t size);
  ::std::string* mutable_client_verison_hash();
  ::std::string* release_client_verison_hash();
  void set_allocated_client_verison_hash(::std::string* client_verison_hash);

  // bytes security_cmd_reply = 1995;
  void clear_security_cmd_reply();
  static const int kSecurityCmdReplyFieldNumber = 1995;
  const ::std::string& security_cmd_reply() const;
  void set_security_cmd_reply(const ::std::string& value);
  #if LANG_CXX11
  void set_security_cmd_reply(::std::string&& value);
  #endif
  void set_security_cmd_reply(const char* value);
  void set_security_cmd_reply(const void* value, size_t size);
  ::std::string* mutable_security_cmd_reply();
  ::std::string* release_security_cmd_reply();
  void set_allocated_security_cmd_reply(::std::string* security_cmd_reply);

  // string country_code = 2000;
  void clear_country_code();
  static const int kCountryCodeFieldNumber = 2000;
  const ::std::string& country_code() const;
  void set_country_code(const ::std::string& value);
  #if LANG_CXX11
  void set_country_code(::std::string&& value);
  #endif
  void set_country_code(const char* value);
  void set_country_code(const char* value, size_t size);
  ::std::string* mutable_country_code();
  ::std::string* release_country_code();
  void set_allocated_country_code(::std::string* country_code);

  // bytes environment_error_code = 2026;
  void clear_environment_error_code();
  static const int kEnvironmentErrorCodeFieldNumber = 2026;
  const ::std::string& environment_error_code() const;
  void set_environment_error_code(const ::std::string& value);
  #if LANG_CXX11
  void set_environment_error_code(::std::string&& value);
  #endif
  void set_environment_error_code(const char* value);
  void set_environment_error_code(const void* value, size_t size);
  ::std::string* mutable_environment_error_code();
  ::std::string* release_environment_error_code();
  void set_allocated_environment_error_code(::std::string* environment_error_code);

  // .proto.TrackingIOInfo tracking_io_info = 1660;
  bool has_tracking_io_info() const;
  void clear_tracking_io_info();
  static const int kTrackingIoInfoFieldNumber = 1660;
  const ::proto::TrackingIOInfo& tracking_io_info() const;
  ::proto::TrackingIOInfo* mutable_tracking_io_info();
  ::proto::TrackingIOInfo* release_tracking_io_info();
  void set_allocated_tracking_io_info(::proto::TrackingIOInfo* tracking_io_info);

  // .proto.AdjustTrackingInfo adjust_tracking_info = 1816;
  bool has_adjust_tracking_info() const;
  void clear_adjust_tracking_info();
  static const int kAdjustTrackingInfoFieldNumber = 1816;
  const ::proto::AdjustTrackingInfo& adjust_tracking_info() const;
  ::proto::AdjustTrackingInfo* mutable_adjust_tracking_info();
  ::proto::AdjustTrackingInfo* release_adjust_tracking_info();
  void set_allocated_adjust_tracking_info(::proto::AdjustTrackingInfo* adjust_tracking_info);

  // uint64 login_rand = 3;
  void clear_login_rand();
  static const int kLoginRandFieldNumber = 3;
  ::google::protobuf::uint64 login_rand() const;
  void set_login_rand(::google::protobuf::uint64 value);

  // uint32 language_type = 6;
  void clear_language_type();
  static const int kLanguageTypeFieldNumber = 6;
  ::google::protobuf::uint32 language_type() const;
  void set_language_type(::google::protobuf::uint32 value);

  // uint32 target_uid = 11;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 11;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // uint32 account_type = 13;
  void clear_account_type();
  static const int kAccountTypeFieldNumber = 13;
  ::google::protobuf::uint32 account_type() const;
  void set_account_type(::google::protobuf::uint32 value);

  // uint32 platform_type = 14;
  void clear_platform_type();
  static const int kPlatformTypeFieldNumber = 14;
  ::google::protobuf::uint32 platform_type() const;
  void set_platform_type(::google::protobuf::uint32 value);

  // uint32 sub_channel_id = 23;
  void clear_sub_channel_id();
  static const int kSubChannelIdFieldNumber = 23;
  ::google::protobuf::uint32 sub_channel_id() const;
  void set_sub_channel_id(::google::protobuf::uint32 value);

  // bool is_transfer = 908;
  void clear_is_transfer();
  static const int kIsTransferFieldNumber = 908;
  bool is_transfer() const;
  void set_is_transfer(bool value);

  // bool is_guest = 5;
  void clear_is_guest();
  static const int kIsGuestFieldNumber = 5;
  bool is_guest() const;
  void set_is_guest(bool value);

  // bool is_editor = 8;
  void clear_is_editor();
  static const int kIsEditorFieldNumber = 8;
  bool is_editor() const;
  void set_is_editor(bool value);

  // uint32 client_port = 431;
  void clear_client_port();
  static const int kClientPortFieldNumber = 431;
  ::google::protobuf::uint32 client_port() const;
  void set_client_port(::google::protobuf::uint32 value);

  // uint32 gm_uid = 612;
  void clear_gm_uid();
  static const int kGmUidFieldNumber = 612;
  ::google::protobuf::uint32 gm_uid() const;
  void set_gm_uid(::google::protobuf::uint32 value);

  // uint32 reg_platform = 615;
  void clear_reg_platform();
  static const int kRegPlatformFieldNumber = 615;
  ::google::protobuf::uint32 reg_platform() const;
  void set_reg_platform(::google::protobuf::uint32 value);

  // uint32 client_data_version = 688;
  void clear_client_data_version();
  static const int kClientDataVersionFieldNumber = 688;
  ::google::protobuf::uint32 client_data_version() const;
  void set_client_data_version(::google::protobuf::uint32 value);

  // uint32 target_home_param = 984;
  void clear_target_home_param();
  static const int kTargetHomeParamFieldNumber = 984;
  ::google::protobuf::uint32 target_home_param() const;
  void set_target_home_param(::google::protobuf::uint32 value);

  // uint32 channel_id = 1314;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 1314;
  ::google::protobuf::uint32 channel_id() const;
  void set_channel_id(::google::protobuf::uint32 value);

  // uint32 cloud_client_ip = 1335;
  void clear_cloud_client_ip();
  static const int kCloudClientIpFieldNumber = 1335;
  ::google::protobuf::uint32 cloud_client_ip() const;
  void set_cloud_client_ip(::google::protobuf::uint32 value);

  // uint32 client_token = 1546;
  void clear_client_token();
  static const int kClientTokenFieldNumber = 1546;
  ::google::protobuf::uint32 client_token() const;
  void set_client_token(::google::protobuf::uint32 value);

  // uint32 tag = 1787;
  void clear_tag();
  static const int kTagFieldNumber = 1787;
  ::google::protobuf::uint32 tag() const;
  void set_tag(::google::protobuf::uint32 value);

  // uint32 target_home_owner_uid = 1864;
  void clear_target_home_owner_uid();
  static const int kTargetHomeOwnerUidFieldNumber = 1864;
  ::google::protobuf::uint32 target_home_owner_uid() const;
  void set_target_home_owner_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerLoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr device_info_;
  ::google::protobuf::internal::ArenaStringPtr account_uid_;
  ::google::protobuf::internal::ArenaStringPtr device_uuid_;
  ::google::protobuf::internal::ArenaStringPtr platform_;
  ::google::protobuf::internal::ArenaStringPtr device_name_;
  ::google::protobuf::internal::ArenaStringPtr system_version_;
  ::google::protobuf::internal::ArenaStringPtr client_version_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr security_library_md5_;
  ::google::protobuf::internal::ArenaStringPtr checksum_client_version_;
  ::google::protobuf::internal::ArenaStringPtr online_id_;
  ::google::protobuf::internal::ArenaStringPtr cps_;
  ::google::protobuf::internal::ArenaStringPtr security_library_version_;
  ::google::protobuf::internal::ArenaStringPtr psn_id_;
  ::google::protobuf::internal::ArenaStringPtr extra_bin_data_;
  ::google::protobuf::internal::ArenaStringPtr checksum_;
  ::google::protobuf::internal::ArenaStringPtr birthday_;
  ::google::protobuf::internal::ArenaStringPtr client_verison_hash_;
  ::google::protobuf::internal::ArenaStringPtr security_cmd_reply_;
  ::google::protobuf::internal::ArenaStringPtr country_code_;
  ::google::protobuf::internal::ArenaStringPtr environment_error_code_;
  ::proto::TrackingIOInfo* tracking_io_info_;
  ::proto::AdjustTrackingInfo* adjust_tracking_info_;
  ::google::protobuf::uint64 login_rand_;
  ::google::protobuf::uint32 language_type_;
  ::google::protobuf::uint32 target_uid_;
  ::google::protobuf::uint32 account_type_;
  ::google::protobuf::uint32 platform_type_;
  ::google::protobuf::uint32 sub_channel_id_;
  bool is_transfer_;
  bool is_guest_;
  bool is_editor_;
  ::google::protobuf::uint32 client_port_;
  ::google::protobuf::uint32 gm_uid_;
  ::google::protobuf::uint32 reg_platform_;
  ::google::protobuf::uint32 client_data_version_;
  ::google::protobuf::uint32 target_home_param_;
  ::google::protobuf::uint32 channel_id_;
  ::google::protobuf::uint32 cloud_client_ip_;
  ::google::protobuf::uint32 client_token_;
  ::google::protobuf::uint32 tag_;
  ::google::protobuf::uint32 target_home_owner_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShortAbilityHashPair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ShortAbilityHashPair) */ {
 public:
  ShortAbilityHashPair();
  virtual ~ShortAbilityHashPair();

  ShortAbilityHashPair(const ShortAbilityHashPair& from);

  inline ShortAbilityHashPair& operator=(const ShortAbilityHashPair& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShortAbilityHashPair(ShortAbilityHashPair&& from) noexcept
    : ShortAbilityHashPair() {
    *this = ::std::move(from);
  }

  inline ShortAbilityHashPair& operator=(ShortAbilityHashPair&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShortAbilityHashPair& default_instance();

  static inline const ShortAbilityHashPair* internal_default_instance() {
    return reinterpret_cast<const ShortAbilityHashPair*>(
               &_ShortAbilityHashPair_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ShortAbilityHashPair* other);
  friend void swap(ShortAbilityHashPair& a, ShortAbilityHashPair& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShortAbilityHashPair* New() const PROTOBUF_FINAL { return New(NULL); }

  ShortAbilityHashPair* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShortAbilityHashPair& from);
  void MergeFrom(const ShortAbilityHashPair& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShortAbilityHashPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sfixed32 ability_name_hash = 1;
  void clear_ability_name_hash();
  static const int kAbilityNameHashFieldNumber = 1;
  ::google::protobuf::int32 ability_name_hash() const;
  void set_ability_name_hash(::google::protobuf::int32 value);

  // sfixed32 ability_config_hash = 15;
  void clear_ability_config_hash();
  static const int kAbilityConfigHashFieldNumber = 15;
  ::google::protobuf::int32 ability_config_hash() const;
  void set_ability_config_hash(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ShortAbilityHashPair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 ability_name_hash_;
  ::google::protobuf::int32 ability_config_hash_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class PlayerLoginRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerLoginRsp) */ {
 public:
  PlayerLoginRsp();
  virtual ~PlayerLoginRsp();

  PlayerLoginRsp(const PlayerLoginRsp& from);

  inline PlayerLoginRsp& operator=(const PlayerLoginRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLoginRsp(PlayerLoginRsp&& from) noexcept
    : PlayerLoginRsp() {
    *this = ::std::move(from);
  }

  inline PlayerLoginRsp& operator=(PlayerLoginRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLoginRsp& default_instance();

  static inline const PlayerLoginRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerLoginRsp*>(
               &_PlayerLoginRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(PlayerLoginRsp* other);
  friend void swap(PlayerLoginRsp& a, PlayerLoginRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLoginRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerLoginRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerLoginRsp& from);
  void MergeFrom(const PlayerLoginRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerLoginRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, int32> ability_hash_map = 11;
  int ability_hash_map_size() const;
  void clear_ability_hash_map();
  static const int kAbilityHashMapFieldNumber = 11;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >&
      ability_hash_map() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >*
      mutable_ability_hash_map();

  // repeated .proto.ShortAbilityHashPair short_ability_hash_map = 250;
  int short_ability_hash_map_size() const;
  void clear_short_ability_hash_map();
  static const int kShortAbilityHashMapFieldNumber = 250;
  const ::proto::ShortAbilityHashPair& short_ability_hash_map(int index) const;
  ::proto::ShortAbilityHashPair* mutable_short_ability_hash_map(int index);
  ::proto::ShortAbilityHashPair* add_short_ability_hash_map();
  ::google::protobuf::RepeatedPtrField< ::proto::ShortAbilityHashPair >*
      mutable_short_ability_hash_map();
  const ::google::protobuf::RepeatedPtrField< ::proto::ShortAbilityHashPair >&
      short_ability_hash_map() const;

  // map<uint32, .proto.BlockInfo> block_info_map = 571;
  int block_info_map_size() const;
  void clear_block_info_map();
  static const int kBlockInfoMapFieldNumber = 571;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >&
      block_info_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >*
      mutable_block_info_map();

  // repeated .proto.FeatureBlockInfo feature_block_info_list = 1352;
  int feature_block_info_list_size() const;
  void clear_feature_block_info_list();
  static const int kFeatureBlockInfoListFieldNumber = 1352;
  const ::proto::FeatureBlockInfo& feature_block_info_list(int index) const;
  ::proto::FeatureBlockInfo* mutable_feature_block_info_list(int index);
  ::proto::FeatureBlockInfo* add_feature_block_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::FeatureBlockInfo >*
      mutable_feature_block_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::FeatureBlockInfo >&
      feature_block_info_list() const;

  // string game_biz = 5;
  void clear_game_biz();
  static const int kGameBizFieldNumber = 5;
  const ::std::string& game_biz() const;
  void set_game_biz(const ::std::string& value);
  #if LANG_CXX11
  void set_game_biz(::std::string&& value);
  #endif
  void set_game_biz(const char* value);
  void set_game_biz(const char* value, size_t size);
  ::std::string* mutable_game_biz();
  ::std::string* release_game_biz();
  void set_allocated_game_biz(::std::string* game_biz);

  // bytes player_data = 13;
  void clear_player_data();
  static const int kPlayerDataFieldNumber = 13;
  const ::std::string& player_data() const;
  void set_player_data(const ::std::string& value);
  #if LANG_CXX11
  void set_player_data(::std::string&& value);
  #endif
  void set_player_data(const char* value);
  void set_player_data(const void* value, size_t size);
  ::std::string* mutable_player_data();
  ::std::string* release_player_data();
  void set_allocated_player_data(::std::string* player_data);

  // string next_resource_url = 621;
  void clear_next_resource_url();
  static const int kNextResourceUrlFieldNumber = 621;
  const ::std::string& next_resource_url() const;
  void set_next_resource_url(const ::std::string& value);
  #if LANG_CXX11
  void set_next_resource_url(::std::string&& value);
  #endif
  void set_next_resource_url(const char* value);
  void set_next_resource_url(const char* value, size_t size);
  ::std::string* mutable_next_resource_url();
  ::std::string* release_next_resource_url();
  void set_allocated_next_resource_url(::std::string* next_resource_url);

  // string birthday = 624;
  void clear_birthday();
  static const int kBirthdayFieldNumber = 624;
  const ::std::string& birthday() const;
  void set_birthday(const ::std::string& value);
  #if LANG_CXX11
  void set_birthday(::std::string&& value);
  #endif
  void set_birthday(const char* value);
  void set_birthday(const char* value, size_t size);
  ::std::string* mutable_birthday();
  ::std::string* release_birthday();
  void set_allocated_birthday(::std::string* birthday);

  // string client_version_suffix = 1047;
  void clear_client_version_suffix();
  static const int kClientVersionSuffixFieldNumber = 1047;
  const ::std::string& client_version_suffix() const;
  void set_client_version_suffix(const ::std::string& value);
  #if LANG_CXX11
  void set_client_version_suffix(::std::string&& value);
  #endif
  void set_client_version_suffix(const char* value);
  void set_client_version_suffix(const char* value, size_t size);
  ::std::string* mutable_client_version_suffix();
  ::std::string* release_client_version_suffix();
  void set_allocated_client_version_suffix(::std::string* client_version_suffix);

  // string client_silence_version_suffix = 1299;
  void clear_client_silence_version_suffix();
  static const int kClientSilenceVersionSuffixFieldNumber = 1299;
  const ::std::string& client_silence_version_suffix() const;
  void set_client_silence_version_suffix(const ::std::string& value);
  #if LANG_CXX11
  void set_client_silence_version_suffix(::std::string&& value);
  #endif
  void set_client_silence_version_suffix(const char* value);
  void set_client_silence_version_suffix(const char* value, size_t size);
  ::std::string* mutable_client_silence_version_suffix();
  ::std::string* release_client_silence_version_suffix();
  void set_allocated_client_silence_version_suffix(::std::string* client_silence_version_suffix);

  // string client_silence_md5 = 1746;
  void clear_client_silence_md5();
  static const int kClientSilenceMd5FieldNumber = 1746;
  const ::std::string& client_silence_md5() const;
  void set_client_silence_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_client_silence_md5(::std::string&& value);
  #endif
  void set_client_silence_md5(const char* value);
  void set_client_silence_md5(const char* value, size_t size);
  ::std::string* mutable_client_silence_md5();
  ::std::string* release_client_silence_md5();
  void set_allocated_client_silence_md5(::std::string* client_silence_md5);

  // string client_md5 = 1830;
  void clear_client_md5();
  static const int kClientMd5FieldNumber = 1830;
  const ::std::string& client_md5() const;
  void set_client_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_client_md5(::std::string&& value);
  #endif
  void set_client_md5(const char* value);
  void set_client_md5(const char* value, size_t size);
  ::std::string* mutable_client_md5();
  ::std::string* release_client_md5();
  void set_allocated_client_md5(::std::string* client_md5);

  // string country_code = 1900;
  void clear_country_code();
  static const int kCountryCodeFieldNumber = 1900;
  const ::std::string& country_code() const;
  void set_country_code(const ::std::string& value);
  #if LANG_CXX11
  void set_country_code(::std::string&& value);
  #endif
  void set_country_code(const char* value);
  void set_country_code(const char* value, size_t size);
  ::std::string* mutable_country_code();
  ::std::string* release_country_code();
  void set_allocated_country_code(::std::string* country_code);

  // bytes sc_info = 2024;
  void clear_sc_info();
  static const int kScInfoFieldNumber = 2024;
  const ::std::string& sc_info() const;
  void set_sc_info(const ::std::string& value);
  #if LANG_CXX11
  void set_sc_info(::std::string&& value);
  #endif
  void set_sc_info(const char* value);
  void set_sc_info(const void* value, size_t size);
  ::std::string* mutable_sc_info();
  ::std::string* release_sc_info();
  void set_allocated_sc_info(::std::string* sc_info);

  // string register_cps = 2040;
  void clear_register_cps();
  static const int kRegisterCpsFieldNumber = 2040;
  const ::std::string& register_cps() const;
  void set_register_cps(const ::std::string& value);
  #if LANG_CXX11
  void set_register_cps(::std::string&& value);
  #endif
  void set_register_cps(const char* value);
  void set_register_cps(const char* value, size_t size);
  ::std::string* mutable_register_cps();
  ::std::string* release_register_cps();
  void set_allocated_register_cps(::std::string* register_cps);

  // .proto.ResVersionConfig next_res_version_config = 1573;
  bool has_next_res_version_config() const;
  void clear_next_res_version_config();
  static const int kNextResVersionConfigFieldNumber = 1573;
  const ::proto::ResVersionConfig& next_res_version_config() const;
  ::proto::ResVersionConfig* mutable_next_res_version_config();
  ::proto::ResVersionConfig* release_next_res_version_config();
  void set_allocated_next_res_version_config(::proto::ResVersionConfig* next_res_version_config);

  // .proto.ResVersionConfig res_version_config = 1969;
  bool has_res_version_config() const;
  void clear_res_version_config();
  static const int kResVersionConfigFieldNumber = 1969;
  const ::proto::ResVersionConfig& res_version_config() const;
  ::proto::ResVersionConfig* mutable_res_version_config();
  ::proto::ResVersionConfig* release_res_version_config();
  void set_allocated_res_version_config(::proto::ResVersionConfig* res_version_config);

  // uint32 client_data_version = 1;
  void clear_client_data_version();
  static const int kClientDataVersionFieldNumber = 1;
  ::google::protobuf::uint32 client_data_version() const;
  void set_client_data_version(::google::protobuf::uint32 value);

  // uint32 client_silence_data_version = 6;
  void clear_client_silence_data_version();
  static const int kClientSilenceDataVersionFieldNumber = 6;
  ::google::protobuf::uint32 client_silence_data_version() const;
  void set_client_silence_data_version(::google::protobuf::uint32 value);

  // uint64 login_rand = 4;
  void clear_login_rand();
  static const int kLoginRandFieldNumber = 4;
  ::google::protobuf::uint64 login_rand() const;
  void set_login_rand(::google::protobuf::uint64 value);

  // uint32 player_data_version = 7;
  void clear_player_data_version();
  static const int kPlayerDataVersionFieldNumber = 7;
  ::google::protobuf::uint32 player_data_version() const;
  void set_player_data_version(::google::protobuf::uint32 value);

  // int32 ability_hash_code = 12;
  void clear_ability_hash_code();
  static const int kAbilityHashCodeFieldNumber = 12;
  ::google::protobuf::int32 ability_hash_code() const;
  void set_ability_hash_code(::google::protobuf::int32 value);

  // uint32 target_uid = 14;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 14;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // int32 retcode = 15;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 15;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // double total_tick_time = 125;
  void clear_total_tick_time();
  static const int kTotalTickTimeFieldNumber = 125;
  double total_tick_time() const;
  void set_total_tick_time(double value);

  // uint32 target_home_owner_uid = 553;
  void clear_target_home_owner_uid();
  static const int kTargetHomeOwnerUidFieldNumber = 553;
  ::google::protobuf::uint32 target_home_owner_uid() const;
  void set_target_home_owner_uid(::google::protobuf::uint32 value);

  // bool is_relogin = 10;
  void clear_is_relogin();
  static const int kIsReloginFieldNumber = 10;
  bool is_relogin() const;
  void set_is_relogin(bool value);

  // bool is_enable_client_hash_debug = 932;
  void clear_is_enable_client_hash_debug();
  static const int kIsEnableClientHashDebugFieldNumber = 932;
  bool is_enable_client_hash_debug() const;
  void set_is_enable_client_hash_debug(bool value);

  // bool is_login_rsp_split = 1649;
  void clear_is_login_rsp_split();
  static const int kIsLoginRspSplitFieldNumber = 1649;
  bool is_login_rsp_split() const;
  void set_is_login_rsp_split(bool value);

  // bool is_use_ability_hash = 2;
  void clear_is_use_ability_hash();
  static const int kIsUseAbilityHashFieldNumber = 2;
  bool is_use_ability_hash() const;
  void set_is_use_ability_hash(bool value);

  // bool is_data_need_relogin = 951;
  void clear_is_data_need_relogin();
  static const int kIsDataNeedReloginFieldNumber = 951;
  bool is_data_need_relogin() const;
  void set_is_data_need_relogin(bool value);

  // bool is_sc_open = 1429;
  void clear_is_sc_open();
  static const int kIsScOpenFieldNumber = 1429;
  bool is_sc_open() const;
  void set_is_sc_open(bool value);

  // bool is_audit = 1685;
  void clear_is_audit();
  static const int kIsAuditFieldNumber = 1685;
  bool is_audit() const;
  void set_is_audit(bool value);

  // bool is_transfer = 2018;
  void clear_is_transfer();
  static const int kIsTransferFieldNumber = 2018;
  bool is_transfer() const;
  void set_is_transfer(bool value);

  // bool is_new_player = 8;
  void clear_is_new_player();
  static const int kIsNewPlayerFieldNumber = 8;
  bool is_new_player() const;
  void set_is_new_player(bool value);

  // @@protoc_insertion_point(class_scope:proto.PlayerLoginRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class PlayerLoginRsp_AbilityHashMapEntry : public ::google::protobuf::internal::MapEntry<PlayerLoginRsp_AbilityHashMapEntry, 
      ::std::string, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<PlayerLoginRsp_AbilityHashMapEntry, 
      ::std::string, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > SuperType;
    PlayerLoginRsp_AbilityHashMapEntry();
    PlayerLoginRsp_AbilityHashMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const PlayerLoginRsp_AbilityHashMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_PlayerLoginRsp_AbilityHashMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      PlayerLoginRsp_AbilityHashMapEntry,
      ::std::string, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > ability_hash_map_;
  private:
  ::google::protobuf::RepeatedPtrField< ::proto::ShortAbilityHashPair > short_ability_hash_map_;
  public:
  class PlayerLoginRsp_BlockInfoMapEntry : public ::google::protobuf::internal::MapEntry<PlayerLoginRsp_BlockInfoMapEntry, 
      ::google::protobuf::uint32, ::proto::BlockInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<PlayerLoginRsp_BlockInfoMapEntry, 
      ::google::protobuf::uint32, ::proto::BlockInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    PlayerLoginRsp_BlockInfoMapEntry();
    PlayerLoginRsp_BlockInfoMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const PlayerLoginRsp_BlockInfoMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_PlayerLoginRsp_BlockInfoMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      PlayerLoginRsp_BlockInfoMapEntry,
      ::google::protobuf::uint32, ::proto::BlockInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > block_info_map_;
  private:
  ::google::protobuf::RepeatedPtrField< ::proto::FeatureBlockInfo > feature_block_info_list_;
  ::google::protobuf::internal::ArenaStringPtr game_biz_;
  ::google::protobuf::internal::ArenaStringPtr player_data_;
  ::google::protobuf::internal::ArenaStringPtr next_resource_url_;
  ::google::protobuf::internal::ArenaStringPtr birthday_;
  ::google::protobuf::internal::ArenaStringPtr client_version_suffix_;
  ::google::protobuf::internal::ArenaStringPtr client_silence_version_suffix_;
  ::google::protobuf::internal::ArenaStringPtr client_silence_md5_;
  ::google::protobuf::internal::ArenaStringPtr client_md5_;
  ::google::protobuf::internal::ArenaStringPtr country_code_;
  ::google::protobuf::internal::ArenaStringPtr sc_info_;
  ::google::protobuf::internal::ArenaStringPtr register_cps_;
  ::proto::ResVersionConfig* next_res_version_config_;
  ::proto::ResVersionConfig* res_version_config_;
  ::google::protobuf::uint32 client_data_version_;
  ::google::protobuf::uint32 client_silence_data_version_;
  ::google::protobuf::uint64 login_rand_;
  ::google::protobuf::uint32 player_data_version_;
  ::google::protobuf::int32 ability_hash_code_;
  ::google::protobuf::uint32 target_uid_;
  ::google::protobuf::int32 retcode_;
  double total_tick_time_;
  ::google::protobuf::uint32 target_home_owner_uid_;
  bool is_relogin_;
  bool is_enable_client_hash_debug_;
  bool is_login_rsp_split_;
  bool is_use_ability_hash_;
  bool is_data_need_relogin_;
  bool is_sc_open_;
  bool is_audit_;
  bool is_transfer_;
  bool is_new_player_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerLogoutReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerLogoutReq) */ {
 public:
  PlayerLogoutReq();
  virtual ~PlayerLogoutReq();

  PlayerLogoutReq(const PlayerLogoutReq& from);

  inline PlayerLogoutReq& operator=(const PlayerLogoutReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLogoutReq(PlayerLogoutReq&& from) noexcept
    : PlayerLogoutReq() {
    *this = ::std::move(from);
  }

  inline PlayerLogoutReq& operator=(PlayerLogoutReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLogoutReq& default_instance();

  static inline const PlayerLogoutReq* internal_default_instance() {
    return reinterpret_cast<const PlayerLogoutReq*>(
               &_PlayerLogoutReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(PlayerLogoutReq* other);
  friend void swap(PlayerLogoutReq& a, PlayerLogoutReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLogoutReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerLogoutReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerLogoutReq& from);
  void MergeFrom(const PlayerLogoutReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerLogoutReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerLogoutReq_Reason Reason;
  static const Reason DISCONNECT =
    PlayerLogoutReq_Reason_DISCONNECT;
  static const Reason CLIENT_REQ =
    PlayerLogoutReq_Reason_CLIENT_REQ;
  static const Reason TIMEOUT =
    PlayerLogoutReq_Reason_TIMEOUT;
  static const Reason ADMIN_REQ =
    PlayerLogoutReq_Reason_ADMIN_REQ;
  static const Reason SERVER_CLOSE =
    PlayerLogoutReq_Reason_SERVER_CLOSE;
  static const Reason GM_CLEAR =
    PlayerLogoutReq_Reason_GM_CLEAR;
  static const Reason PLAYER_TRANSFER =
    PlayerLogoutReq_Reason_PLAYER_TRANSFER;
  static const Reason CLIENT_CHECKSUM_INVALID =
    PlayerLogoutReq_Reason_CLIENT_CHECKSUM_INVALID;
  static inline bool Reason_IsValid(int value) {
    return PlayerLogoutReq_Reason_IsValid(value);
  }
  static const Reason Reason_MIN =
    PlayerLogoutReq_Reason_Reason_MIN;
  static const Reason Reason_MAX =
    PlayerLogoutReq_Reason_Reason_MAX;
  static const int Reason_ARRAYSIZE =
    PlayerLogoutReq_Reason_Reason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Reason_descriptor() {
    return PlayerLogoutReq_Reason_descriptor();
  }
  static inline const ::std::string& Reason_Name(Reason value) {
    return PlayerLogoutReq_Reason_Name(value);
  }
  static inline bool Reason_Parse(const ::std::string& name,
      Reason* value) {
    return PlayerLogoutReq_Reason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.PlayerLogoutReq.Reason reason = 6;
  void clear_reason();
  static const int kReasonFieldNumber = 6;
  ::proto::PlayerLogoutReq_Reason reason() const;
  void set_reason(::proto::PlayerLogoutReq_Reason value);

  // @@protoc_insertion_point(class_scope:proto.PlayerLogoutReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerLogoutRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerLogoutRsp) */ {
 public:
  PlayerLogoutRsp();
  virtual ~PlayerLogoutRsp();

  PlayerLogoutRsp(const PlayerLogoutRsp& from);

  inline PlayerLogoutRsp& operator=(const PlayerLogoutRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLogoutRsp(PlayerLogoutRsp&& from) noexcept
    : PlayerLogoutRsp() {
    *this = ::std::move(from);
  }

  inline PlayerLogoutRsp& operator=(PlayerLogoutRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLogoutRsp& default_instance();

  static inline const PlayerLogoutRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerLogoutRsp*>(
               &_PlayerLogoutRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(PlayerLogoutRsp* other);
  friend void swap(PlayerLogoutRsp& a, PlayerLogoutRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLogoutRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerLogoutRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerLogoutRsp& from);
  void MergeFrom(const PlayerLogoutRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerLogoutRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 12;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 12;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerLogoutRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerLogoutNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerLogoutNotify) */ {
 public:
  PlayerLogoutNotify();
  virtual ~PlayerLogoutNotify();

  PlayerLogoutNotify(const PlayerLogoutNotify& from);

  inline PlayerLogoutNotify& operator=(const PlayerLogoutNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLogoutNotify(PlayerLogoutNotify&& from) noexcept
    : PlayerLogoutNotify() {
    *this = ::std::move(from);
  }

  inline PlayerLogoutNotify& operator=(PlayerLogoutNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLogoutNotify& default_instance();

  static inline const PlayerLogoutNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerLogoutNotify*>(
               &_PlayerLogoutNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(PlayerLogoutNotify* other);
  friend void swap(PlayerLogoutNotify& a, PlayerLogoutNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLogoutNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerLogoutNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerLogoutNotify& from);
  void MergeFrom(const PlayerLogoutNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerLogoutNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 13;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 13;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerLogoutNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class PlayerDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerDataNotify) */ {
 public:
  PlayerDataNotify();
  virtual ~PlayerDataNotify();

  PlayerDataNotify(const PlayerDataNotify& from);

  inline PlayerDataNotify& operator=(const PlayerDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerDataNotify(PlayerDataNotify&& from) noexcept
    : PlayerDataNotify() {
    *this = ::std::move(from);
  }

  inline PlayerDataNotify& operator=(PlayerDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerDataNotify& default_instance();

  static inline const PlayerDataNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerDataNotify*>(
               &_PlayerDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(PlayerDataNotify* other);
  friend void swap(PlayerDataNotify& a, PlayerDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerDataNotify& from);
  void MergeFrom(const PlayerDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, .proto.PropValue> prop_map = 15;
  int prop_map_size() const;
  void clear_prop_map();
  static const int kPropMapFieldNumber = 15;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
      prop_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
      mutable_prop_map();

  // string nick_name = 8;
  void clear_nick_name();
  static const int kNickNameFieldNumber = 8;
  const ::std::string& nick_name() const;
  void set_nick_name(const ::std::string& value);
  #if LANG_CXX11
  void set_nick_name(::std::string&& value);
  #endif
  void set_nick_name(const char* value);
  void set_nick_name(const char* value, size_t size);
  ::std::string* mutable_nick_name();
  ::std::string* release_nick_name();
  void set_allocated_nick_name(::std::string* nick_name);

  // uint64 server_time = 7;
  void clear_server_time();
  static const int kServerTimeFieldNumber = 7;
  ::google::protobuf::uint64 server_time() const;
  void set_server_time(::google::protobuf::uint64 value);

  // uint32 region_id = 6;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 6;
  ::google::protobuf::uint32 region_id() const;
  void set_region_id(::google::protobuf::uint32 value);

  // bool is_first_login_today = 12;
  void clear_is_first_login_today();
  static const int kIsFirstLoginTodayFieldNumber = 12;
  bool is_first_login_today() const;
  void set_is_first_login_today(bool value);

  // @@protoc_insertion_point(class_scope:proto.PlayerDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class PlayerDataNotify_PropMapEntry : public ::google::protobuf::internal::MapEntry<PlayerDataNotify_PropMapEntry, 
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<PlayerDataNotify_PropMapEntry, 
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    PlayerDataNotify_PropMapEntry();
    PlayerDataNotify_PropMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const PlayerDataNotify_PropMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_PlayerDataNotify_PropMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      PlayerDataNotify_PropMapEntry,
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > prop_map_;
  private:
  ::google::protobuf::internal::ArenaStringPtr nick_name_;
  ::google::protobuf::uint64 server_time_;
  ::google::protobuf::uint32 region_id_;
  bool is_first_login_today_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChangeGameTimeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChangeGameTimeReq) */ {
 public:
  ChangeGameTimeReq();
  virtual ~ChangeGameTimeReq();

  ChangeGameTimeReq(const ChangeGameTimeReq& from);

  inline ChangeGameTimeReq& operator=(const ChangeGameTimeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChangeGameTimeReq(ChangeGameTimeReq&& from) noexcept
    : ChangeGameTimeReq() {
    *this = ::std::move(from);
  }

  inline ChangeGameTimeReq& operator=(ChangeGameTimeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeGameTimeReq& default_instance();

  static inline const ChangeGameTimeReq* internal_default_instance() {
    return reinterpret_cast<const ChangeGameTimeReq*>(
               &_ChangeGameTimeReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(ChangeGameTimeReq* other);
  friend void swap(ChangeGameTimeReq& a, ChangeGameTimeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChangeGameTimeReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ChangeGameTimeReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChangeGameTimeReq& from);
  void MergeFrom(const ChangeGameTimeReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChangeGameTimeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 extra_days = 12;
  void clear_extra_days();
  static const int kExtraDaysFieldNumber = 12;
  ::google::protobuf::uint32 extra_days() const;
  void set_extra_days(::google::protobuf::uint32 value);

  // uint32 game_time = 6;
  void clear_game_time();
  static const int kGameTimeFieldNumber = 6;
  ::google::protobuf::uint32 game_time() const;
  void set_game_time(::google::protobuf::uint32 value);

  // bool is_force_set = 11;
  void clear_is_force_set();
  static const int kIsForceSetFieldNumber = 11;
  bool is_force_set() const;
  void set_is_force_set(bool value);

  // @@protoc_insertion_point(class_scope:proto.ChangeGameTimeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 extra_days_;
  ::google::protobuf::uint32 game_time_;
  bool is_force_set_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChangeGameTimeRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChangeGameTimeRsp) */ {
 public:
  ChangeGameTimeRsp();
  virtual ~ChangeGameTimeRsp();

  ChangeGameTimeRsp(const ChangeGameTimeRsp& from);

  inline ChangeGameTimeRsp& operator=(const ChangeGameTimeRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChangeGameTimeRsp(ChangeGameTimeRsp&& from) noexcept
    : ChangeGameTimeRsp() {
    *this = ::std::move(from);
  }

  inline ChangeGameTimeRsp& operator=(ChangeGameTimeRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeGameTimeRsp& default_instance();

  static inline const ChangeGameTimeRsp* internal_default_instance() {
    return reinterpret_cast<const ChangeGameTimeRsp*>(
               &_ChangeGameTimeRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(ChangeGameTimeRsp* other);
  friend void swap(ChangeGameTimeRsp& a, ChangeGameTimeRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChangeGameTimeRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ChangeGameTimeRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChangeGameTimeRsp& from);
  void MergeFrom(const ChangeGameTimeRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChangeGameTimeRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 cur_game_time = 14;
  void clear_cur_game_time();
  static const int kCurGameTimeFieldNumber = 14;
  ::google::protobuf::uint32 cur_game_time() const;
  void set_cur_game_time(::google::protobuf::uint32 value);

  // uint32 extra_days = 5;
  void clear_extra_days();
  static const int kExtraDaysFieldNumber = 5;
  ::google::protobuf::uint32 extra_days() const;
  void set_extra_days(::google::protobuf::uint32 value);

  // int32 retcode = 8;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 8;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ChangeGameTimeRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 cur_game_time_;
  ::google::protobuf::uint32 extra_days_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerGameTimeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerGameTimeNotify) */ {
 public:
  PlayerGameTimeNotify();
  virtual ~PlayerGameTimeNotify();

  PlayerGameTimeNotify(const PlayerGameTimeNotify& from);

  inline PlayerGameTimeNotify& operator=(const PlayerGameTimeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerGameTimeNotify(PlayerGameTimeNotify&& from) noexcept
    : PlayerGameTimeNotify() {
    *this = ::std::move(from);
  }

  inline PlayerGameTimeNotify& operator=(PlayerGameTimeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerGameTimeNotify& default_instance();

  static inline const PlayerGameTimeNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerGameTimeNotify*>(
               &_PlayerGameTimeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(PlayerGameTimeNotify* other);
  friend void swap(PlayerGameTimeNotify& a, PlayerGameTimeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerGameTimeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerGameTimeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerGameTimeNotify& from);
  void MergeFrom(const PlayerGameTimeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerGameTimeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_home = 13;
  void clear_is_home();
  static const int kIsHomeFieldNumber = 13;
  bool is_home() const;
  void set_is_home(bool value);

  // uint32 game_time = 3;
  void clear_game_time();
  static const int kGameTimeFieldNumber = 3;
  ::google::protobuf::uint32 game_time() const;
  void set_game_time(::google::protobuf::uint32 value);

  // uint32 uid = 7;
  void clear_uid();
  static const int kUidFieldNumber = 7;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerGameTimeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_home_;
  ::google::protobuf::uint32 game_time_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class PlayerPropNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerPropNotify) */ {
 public:
  PlayerPropNotify();
  virtual ~PlayerPropNotify();

  PlayerPropNotify(const PlayerPropNotify& from);

  inline PlayerPropNotify& operator=(const PlayerPropNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerPropNotify(PlayerPropNotify&& from) noexcept
    : PlayerPropNotify() {
    *this = ::std::move(from);
  }

  inline PlayerPropNotify& operator=(PlayerPropNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerPropNotify& default_instance();

  static inline const PlayerPropNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerPropNotify*>(
               &_PlayerPropNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(PlayerPropNotify* other);
  friend void swap(PlayerPropNotify& a, PlayerPropNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerPropNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerPropNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerPropNotify& from);
  void MergeFrom(const PlayerPropNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerPropNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, .proto.PropValue> prop_map = 13;
  int prop_map_size() const;
  void clear_prop_map();
  static const int kPropMapFieldNumber = 13;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
      prop_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
      mutable_prop_map();

  // @@protoc_insertion_point(class_scope:proto.PlayerPropNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class PlayerPropNotify_PropMapEntry : public ::google::protobuf::internal::MapEntry<PlayerPropNotify_PropMapEntry, 
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<PlayerPropNotify_PropMapEntry, 
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    PlayerPropNotify_PropMapEntry();
    PlayerPropNotify_PropMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const PlayerPropNotify_PropMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_PlayerPropNotify_PropMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      PlayerPropNotify_PropMapEntry,
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > prop_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientTriggerEventNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClientTriggerEventNotify) */ {
 public:
  ClientTriggerEventNotify();
  virtual ~ClientTriggerEventNotify();

  ClientTriggerEventNotify(const ClientTriggerEventNotify& from);

  inline ClientTriggerEventNotify& operator=(const ClientTriggerEventNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientTriggerEventNotify(ClientTriggerEventNotify&& from) noexcept
    : ClientTriggerEventNotify() {
    *this = ::std::move(from);
  }

  inline ClientTriggerEventNotify& operator=(ClientTriggerEventNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientTriggerEventNotify& default_instance();

  static inline const ClientTriggerEventNotify* internal_default_instance() {
    return reinterpret_cast<const ClientTriggerEventNotify*>(
               &_ClientTriggerEventNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(ClientTriggerEventNotify* other);
  friend void swap(ClientTriggerEventNotify& a, ClientTriggerEventNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientTriggerEventNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientTriggerEventNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientTriggerEventNotify& from);
  void MergeFrom(const ClientTriggerEventNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientTriggerEventNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.EventTriggerType event_type = 2;
  void clear_event_type();
  static const int kEventTypeFieldNumber = 2;
  ::proto::EventTriggerType event_type() const;
  void set_event_type(::proto::EventTriggerType value);

  // uint32 force_id = 3;
  void clear_force_id();
  static const int kForceIdFieldNumber = 3;
  ::google::protobuf::uint32 force_id() const;
  void set_force_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ClientTriggerEventNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int event_type_;
  ::google::protobuf::uint32 force_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPlayerPropReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPlayerPropReq) */ {
 public:
  SetPlayerPropReq();
  virtual ~SetPlayerPropReq();

  SetPlayerPropReq(const SetPlayerPropReq& from);

  inline SetPlayerPropReq& operator=(const SetPlayerPropReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPlayerPropReq(SetPlayerPropReq&& from) noexcept
    : SetPlayerPropReq() {
    *this = ::std::move(from);
  }

  inline SetPlayerPropReq& operator=(SetPlayerPropReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerPropReq& default_instance();

  static inline const SetPlayerPropReq* internal_default_instance() {
    return reinterpret_cast<const SetPlayerPropReq*>(
               &_SetPlayerPropReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(SetPlayerPropReq* other);
  friend void swap(SetPlayerPropReq& a, SetPlayerPropReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPlayerPropReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPlayerPropReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPlayerPropReq& from);
  void MergeFrom(const SetPlayerPropReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPlayerPropReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.PropValue prop_list = 7;
  int prop_list_size() const;
  void clear_prop_list();
  static const int kPropListFieldNumber = 7;
  const ::proto::PropValue& prop_list(int index) const;
  ::proto::PropValue* mutable_prop_list(int index);
  ::proto::PropValue* add_prop_list();
  ::google::protobuf::RepeatedPtrField< ::proto::PropValue >*
      mutable_prop_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::PropValue >&
      prop_list() const;

  // @@protoc_insertion_point(class_scope:proto.SetPlayerPropReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::PropValue > prop_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPlayerPropRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPlayerPropRsp) */ {
 public:
  SetPlayerPropRsp();
  virtual ~SetPlayerPropRsp();

  SetPlayerPropRsp(const SetPlayerPropRsp& from);

  inline SetPlayerPropRsp& operator=(const SetPlayerPropRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPlayerPropRsp(SetPlayerPropRsp&& from) noexcept
    : SetPlayerPropRsp() {
    *this = ::std::move(from);
  }

  inline SetPlayerPropRsp& operator=(SetPlayerPropRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerPropRsp& default_instance();

  static inline const SetPlayerPropRsp* internal_default_instance() {
    return reinterpret_cast<const SetPlayerPropRsp*>(
               &_SetPlayerPropRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(SetPlayerPropRsp* other);
  friend void swap(SetPlayerPropRsp& a, SetPlayerPropRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPlayerPropRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPlayerPropRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPlayerPropRsp& from);
  void MergeFrom(const SetPlayerPropRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPlayerPropRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 11;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 11;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SetPlayerPropRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPlayerBornDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPlayerBornDataReq) */ {
 public:
  SetPlayerBornDataReq();
  virtual ~SetPlayerBornDataReq();

  SetPlayerBornDataReq(const SetPlayerBornDataReq& from);

  inline SetPlayerBornDataReq& operator=(const SetPlayerBornDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPlayerBornDataReq(SetPlayerBornDataReq&& from) noexcept
    : SetPlayerBornDataReq() {
    *this = ::std::move(from);
  }

  inline SetPlayerBornDataReq& operator=(SetPlayerBornDataReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerBornDataReq& default_instance();

  static inline const SetPlayerBornDataReq* internal_default_instance() {
    return reinterpret_cast<const SetPlayerBornDataReq*>(
               &_SetPlayerBornDataReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(SetPlayerBornDataReq* other);
  friend void swap(SetPlayerBornDataReq& a, SetPlayerBornDataReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPlayerBornDataReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPlayerBornDataReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPlayerBornDataReq& from);
  void MergeFrom(const SetPlayerBornDataReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPlayerBornDataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string nick_name = 13;
  void clear_nick_name();
  static const int kNickNameFieldNumber = 13;
  const ::std::string& nick_name() const;
  void set_nick_name(const ::std::string& value);
  #if LANG_CXX11
  void set_nick_name(::std::string&& value);
  #endif
  void set_nick_name(const char* value);
  void set_nick_name(const char* value, size_t size);
  ::std::string* mutable_nick_name();
  ::std::string* release_nick_name();
  void set_allocated_nick_name(::std::string* nick_name);

  // uint32 avatar_id = 2;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 2;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetPlayerBornDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nick_name_;
  ::google::protobuf::uint32 avatar_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPlayerBornDataRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPlayerBornDataRsp) */ {
 public:
  SetPlayerBornDataRsp();
  virtual ~SetPlayerBornDataRsp();

  SetPlayerBornDataRsp(const SetPlayerBornDataRsp& from);

  inline SetPlayerBornDataRsp& operator=(const SetPlayerBornDataRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPlayerBornDataRsp(SetPlayerBornDataRsp&& from) noexcept
    : SetPlayerBornDataRsp() {
    *this = ::std::move(from);
  }

  inline SetPlayerBornDataRsp& operator=(SetPlayerBornDataRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerBornDataRsp& default_instance();

  static inline const SetPlayerBornDataRsp* internal_default_instance() {
    return reinterpret_cast<const SetPlayerBornDataRsp*>(
               &_SetPlayerBornDataRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(SetPlayerBornDataRsp* other);
  friend void swap(SetPlayerBornDataRsp& a, SetPlayerBornDataRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPlayerBornDataRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPlayerBornDataRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPlayerBornDataRsp& from);
  void MergeFrom(const SetPlayerBornDataRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPlayerBornDataRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 10;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 10;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SetPlayerBornDataRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DoSetPlayerBornDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DoSetPlayerBornDataNotify) */ {
 public:
  DoSetPlayerBornDataNotify();
  virtual ~DoSetPlayerBornDataNotify();

  DoSetPlayerBornDataNotify(const DoSetPlayerBornDataNotify& from);

  inline DoSetPlayerBornDataNotify& operator=(const DoSetPlayerBornDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DoSetPlayerBornDataNotify(DoSetPlayerBornDataNotify&& from) noexcept
    : DoSetPlayerBornDataNotify() {
    *this = ::std::move(from);
  }

  inline DoSetPlayerBornDataNotify& operator=(DoSetPlayerBornDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DoSetPlayerBornDataNotify& default_instance();

  static inline const DoSetPlayerBornDataNotify* internal_default_instance() {
    return reinterpret_cast<const DoSetPlayerBornDataNotify*>(
               &_DoSetPlayerBornDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(DoSetPlayerBornDataNotify* other);
  friend void swap(DoSetPlayerBornDataNotify& a, DoSetPlayerBornDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DoSetPlayerBornDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  DoSetPlayerBornDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DoSetPlayerBornDataNotify& from);
  void MergeFrom(const DoSetPlayerBornDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DoSetPlayerBornDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.DoSetPlayerBornDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerPropChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerPropChangeNotify) */ {
 public:
  PlayerPropChangeNotify();
  virtual ~PlayerPropChangeNotify();

  PlayerPropChangeNotify(const PlayerPropChangeNotify& from);

  inline PlayerPropChangeNotify& operator=(const PlayerPropChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerPropChangeNotify(PlayerPropChangeNotify&& from) noexcept
    : PlayerPropChangeNotify() {
    *this = ::std::move(from);
  }

  inline PlayerPropChangeNotify& operator=(PlayerPropChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerPropChangeNotify& default_instance();

  static inline const PlayerPropChangeNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerPropChangeNotify*>(
               &_PlayerPropChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(PlayerPropChangeNotify* other);
  friend void swap(PlayerPropChangeNotify& a, PlayerPropChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerPropChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerPropChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerPropChangeNotify& from);
  void MergeFrom(const PlayerPropChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerPropChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 prop_type = 12;
  void clear_prop_type();
  static const int kPropTypeFieldNumber = 12;
  ::google::protobuf::uint32 prop_type() const;
  void set_prop_type(::google::protobuf::uint32 value);

  // uint32 prop_delta = 13;
  void clear_prop_delta();
  static const int kPropDeltaFieldNumber = 13;
  ::google::protobuf::uint32 prop_delta() const;
  void set_prop_delta(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerPropChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 prop_type_;
  ::google::protobuf::uint32 prop_delta_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPlayerNameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPlayerNameReq) */ {
 public:
  SetPlayerNameReq();
  virtual ~SetPlayerNameReq();

  SetPlayerNameReq(const SetPlayerNameReq& from);

  inline SetPlayerNameReq& operator=(const SetPlayerNameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPlayerNameReq(SetPlayerNameReq&& from) noexcept
    : SetPlayerNameReq() {
    *this = ::std::move(from);
  }

  inline SetPlayerNameReq& operator=(SetPlayerNameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerNameReq& default_instance();

  static inline const SetPlayerNameReq* internal_default_instance() {
    return reinterpret_cast<const SetPlayerNameReq*>(
               &_SetPlayerNameReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(SetPlayerNameReq* other);
  friend void swap(SetPlayerNameReq& a, SetPlayerNameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPlayerNameReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPlayerNameReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPlayerNameReq& from);
  void MergeFrom(const SetPlayerNameReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPlayerNameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string nick_name = 1;
  void clear_nick_name();
  static const int kNickNameFieldNumber = 1;
  const ::std::string& nick_name() const;
  void set_nick_name(const ::std::string& value);
  #if LANG_CXX11
  void set_nick_name(::std::string&& value);
  #endif
  void set_nick_name(const char* value);
  void set_nick_name(const char* value, size_t size);
  ::std::string* mutable_nick_name();
  ::std::string* release_nick_name();
  void set_allocated_nick_name(::std::string* nick_name);

  // @@protoc_insertion_point(class_scope:proto.SetPlayerNameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nick_name_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPlayerNameRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPlayerNameRsp) */ {
 public:
  SetPlayerNameRsp();
  virtual ~SetPlayerNameRsp();

  SetPlayerNameRsp(const SetPlayerNameRsp& from);

  inline SetPlayerNameRsp& operator=(const SetPlayerNameRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPlayerNameRsp(SetPlayerNameRsp&& from) noexcept
    : SetPlayerNameRsp() {
    *this = ::std::move(from);
  }

  inline SetPlayerNameRsp& operator=(SetPlayerNameRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerNameRsp& default_instance();

  static inline const SetPlayerNameRsp* internal_default_instance() {
    return reinterpret_cast<const SetPlayerNameRsp*>(
               &_SetPlayerNameRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(SetPlayerNameRsp* other);
  friend void swap(SetPlayerNameRsp& a, SetPlayerNameRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPlayerNameRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPlayerNameRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPlayerNameRsp& from);
  void MergeFrom(const SetPlayerNameRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPlayerNameRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string nick_name = 14;
  void clear_nick_name();
  static const int kNickNameFieldNumber = 14;
  const ::std::string& nick_name() const;
  void set_nick_name(const ::std::string& value);
  #if LANG_CXX11
  void set_nick_name(::std::string&& value);
  #endif
  void set_nick_name(const char* value);
  void set_nick_name(const char* value, size_t size);
  ::std::string* mutable_nick_name();
  ::std::string* release_nick_name();
  void set_allocated_nick_name(::std::string* nick_name);

  // int32 retcode = 9;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 9;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SetPlayerNameRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nick_name_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetOpenStateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetOpenStateReq) */ {
 public:
  SetOpenStateReq();
  virtual ~SetOpenStateReq();

  SetOpenStateReq(const SetOpenStateReq& from);

  inline SetOpenStateReq& operator=(const SetOpenStateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetOpenStateReq(SetOpenStateReq&& from) noexcept
    : SetOpenStateReq() {
    *this = ::std::move(from);
  }

  inline SetOpenStateReq& operator=(SetOpenStateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetOpenStateReq& default_instance();

  static inline const SetOpenStateReq* internal_default_instance() {
    return reinterpret_cast<const SetOpenStateReq*>(
               &_SetOpenStateReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(SetOpenStateReq* other);
  friend void swap(SetOpenStateReq& a, SetOpenStateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetOpenStateReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetOpenStateReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetOpenStateReq& from);
  void MergeFrom(const SetOpenStateReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetOpenStateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 value = 5;
  void clear_value();
  static const int kValueFieldNumber = 5;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // uint32 key = 12;
  void clear_key();
  static const int kKeyFieldNumber = 12;
  ::google::protobuf::uint32 key() const;
  void set_key(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetOpenStateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 key_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetOpenStateRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetOpenStateRsp) */ {
 public:
  SetOpenStateRsp();
  virtual ~SetOpenStateRsp();

  SetOpenStateRsp(const SetOpenStateRsp& from);

  inline SetOpenStateRsp& operator=(const SetOpenStateRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetOpenStateRsp(SetOpenStateRsp&& from) noexcept
    : SetOpenStateRsp() {
    *this = ::std::move(from);
  }

  inline SetOpenStateRsp& operator=(SetOpenStateRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetOpenStateRsp& default_instance();

  static inline const SetOpenStateRsp* internal_default_instance() {
    return reinterpret_cast<const SetOpenStateRsp*>(
               &_SetOpenStateRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(SetOpenStateRsp* other);
  friend void swap(SetOpenStateRsp& a, SetOpenStateRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetOpenStateRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetOpenStateRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetOpenStateRsp& from);
  void MergeFrom(const SetOpenStateRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetOpenStateRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 value = 15;
  void clear_value();
  static const int kValueFieldNumber = 15;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // uint32 key = 9;
  void clear_key();
  static const int kKeyFieldNumber = 9;
  ::google::protobuf::uint32 key() const;
  void set_key(::google::protobuf::uint32 value);

  // int32 retcode = 14;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 14;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SetOpenStateRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 key_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class OpenStateUpdateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OpenStateUpdateNotify) */ {
 public:
  OpenStateUpdateNotify();
  virtual ~OpenStateUpdateNotify();

  OpenStateUpdateNotify(const OpenStateUpdateNotify& from);

  inline OpenStateUpdateNotify& operator=(const OpenStateUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpenStateUpdateNotify(OpenStateUpdateNotify&& from) noexcept
    : OpenStateUpdateNotify() {
    *this = ::std::move(from);
  }

  inline OpenStateUpdateNotify& operator=(OpenStateUpdateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenStateUpdateNotify& default_instance();

  static inline const OpenStateUpdateNotify* internal_default_instance() {
    return reinterpret_cast<const OpenStateUpdateNotify*>(
               &_OpenStateUpdateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(OpenStateUpdateNotify* other);
  friend void swap(OpenStateUpdateNotify& a, OpenStateUpdateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpenStateUpdateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  OpenStateUpdateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpenStateUpdateNotify& from);
  void MergeFrom(const OpenStateUpdateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpenStateUpdateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> open_state_map = 6;
  int open_state_map_size() const;
  void clear_open_state_map();
  static const int kOpenStateMapFieldNumber = 6;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      open_state_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_open_state_map();

  // @@protoc_insertion_point(class_scope:proto.OpenStateUpdateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class OpenStateUpdateNotify_OpenStateMapEntry : public ::google::protobuf::internal::MapEntry<OpenStateUpdateNotify_OpenStateMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<OpenStateUpdateNotify_OpenStateMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    OpenStateUpdateNotify_OpenStateMapEntry();
    OpenStateUpdateNotify_OpenStateMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const OpenStateUpdateNotify_OpenStateMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_OpenStateUpdateNotify_OpenStateMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      OpenStateUpdateNotify_OpenStateMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > open_state_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class OpenStateChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OpenStateChangeNotify) */ {
 public:
  OpenStateChangeNotify();
  virtual ~OpenStateChangeNotify();

  OpenStateChangeNotify(const OpenStateChangeNotify& from);

  inline OpenStateChangeNotify& operator=(const OpenStateChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpenStateChangeNotify(OpenStateChangeNotify&& from) noexcept
    : OpenStateChangeNotify() {
    *this = ::std::move(from);
  }

  inline OpenStateChangeNotify& operator=(OpenStateChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenStateChangeNotify& default_instance();

  static inline const OpenStateChangeNotify* internal_default_instance() {
    return reinterpret_cast<const OpenStateChangeNotify*>(
               &_OpenStateChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(OpenStateChangeNotify* other);
  friend void swap(OpenStateChangeNotify& a, OpenStateChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpenStateChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  OpenStateChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpenStateChangeNotify& from);
  void MergeFrom(const OpenStateChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpenStateChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> open_state_map = 4;
  int open_state_map_size() const;
  void clear_open_state_map();
  static const int kOpenStateMapFieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      open_state_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_open_state_map();

  // @@protoc_insertion_point(class_scope:proto.OpenStateChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class OpenStateChangeNotify_OpenStateMapEntry : public ::google::protobuf::internal::MapEntry<OpenStateChangeNotify_OpenStateMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<OpenStateChangeNotify_OpenStateMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    OpenStateChangeNotify_OpenStateMapEntry();
    OpenStateChangeNotify_OpenStateMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const OpenStateChangeNotify_OpenStateMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_OpenStateChangeNotify_OpenStateMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      OpenStateChangeNotify_OpenStateMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > open_state_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerCookReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerCookReq) */ {
 public:
  PlayerCookReq();
  virtual ~PlayerCookReq();

  PlayerCookReq(const PlayerCookReq& from);

  inline PlayerCookReq& operator=(const PlayerCookReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCookReq(PlayerCookReq&& from) noexcept
    : PlayerCookReq() {
    *this = ::std::move(from);
  }

  inline PlayerCookReq& operator=(PlayerCookReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCookReq& default_instance();

  static inline const PlayerCookReq* internal_default_instance() {
    return reinterpret_cast<const PlayerCookReq*>(
               &_PlayerCookReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(PlayerCookReq* other);
  friend void swap(PlayerCookReq& a, PlayerCookReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCookReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerCookReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerCookReq& from);
  void MergeFrom(const PlayerCookReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerCookReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 cook_count = 1;
  void clear_cook_count();
  static const int kCookCountFieldNumber = 1;
  ::google::protobuf::uint32 cook_count() const;
  void set_cook_count(::google::protobuf::uint32 value);

  // uint32 recipe_id = 8;
  void clear_recipe_id();
  static const int kRecipeIdFieldNumber = 8;
  ::google::protobuf::uint32 recipe_id() const;
  void set_recipe_id(::google::protobuf::uint32 value);

  // uint32 qte_quality = 12;
  void clear_qte_quality();
  static const int kQteQualityFieldNumber = 12;
  ::google::protobuf::uint32 qte_quality() const;
  void set_qte_quality(::google::protobuf::uint32 value);

  // uint32 assist_avatar = 14;
  void clear_assist_avatar();
  static const int kAssistAvatarFieldNumber = 14;
  ::google::protobuf::uint32 assist_avatar() const;
  void set_assist_avatar(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerCookReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 cook_count_;
  ::google::protobuf::uint32 recipe_id_;
  ::google::protobuf::uint32 qte_quality_;
  ::google::protobuf::uint32 assist_avatar_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerCookRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerCookRsp) */ {
 public:
  PlayerCookRsp();
  virtual ~PlayerCookRsp();

  PlayerCookRsp(const PlayerCookRsp& from);

  inline PlayerCookRsp& operator=(const PlayerCookRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCookRsp(PlayerCookRsp&& from) noexcept
    : PlayerCookRsp() {
    *this = ::std::move(from);
  }

  inline PlayerCookRsp& operator=(PlayerCookRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCookRsp& default_instance();

  static inline const PlayerCookRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerCookRsp*>(
               &_PlayerCookRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(PlayerCookRsp* other);
  friend void swap(PlayerCookRsp& a, PlayerCookRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCookRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerCookRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerCookRsp& from);
  void MergeFrom(const PlayerCookRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerCookRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ItemParam item_list = 11;
  int item_list_size() const;
  void clear_item_list();
  static const int kItemListFieldNumber = 11;
  const ::proto::ItemParam& item_list(int index) const;
  ::proto::ItemParam* mutable_item_list(int index);
  ::proto::ItemParam* add_item_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
      mutable_item_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
      item_list() const;

  // repeated .proto.ItemParam extral_item_list = 15;
  int extral_item_list_size() const;
  void clear_extral_item_list();
  static const int kExtralItemListFieldNumber = 15;
  const ::proto::ItemParam& extral_item_list(int index) const;
  ::proto::ItemParam* mutable_extral_item_list(int index);
  ::proto::ItemParam* add_extral_item_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
      mutable_extral_item_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
      extral_item_list() const;

  // .proto.CookRecipeData recipe_data = 7;
  bool has_recipe_data() const;
  void clear_recipe_data();
  static const int kRecipeDataFieldNumber = 7;
  const ::proto::CookRecipeData& recipe_data() const;
  ::proto::CookRecipeData* mutable_recipe_data();
  ::proto::CookRecipeData* release_recipe_data();
  void set_allocated_recipe_data(::proto::CookRecipeData* recipe_data);

  // int32 retcode = 3;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 3;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 qte_quality = 5;
  void clear_qte_quality();
  static const int kQteQualityFieldNumber = 5;
  ::google::protobuf::uint32 qte_quality() const;
  void set_qte_quality(::google::protobuf::uint32 value);

  // uint32 cook_count = 12;
  void clear_cook_count();
  static const int kCookCountFieldNumber = 12;
  ::google::protobuf::uint32 cook_count() const;
  void set_cook_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerCookRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam > item_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam > extral_item_list_;
  ::proto::CookRecipeData* recipe_data_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 qte_quality_;
  ::google::protobuf::uint32 cook_count_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerRandomCookReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerRandomCookReq) */ {
 public:
  PlayerRandomCookReq();
  virtual ~PlayerRandomCookReq();

  PlayerRandomCookReq(const PlayerRandomCookReq& from);

  inline PlayerRandomCookReq& operator=(const PlayerRandomCookReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerRandomCookReq(PlayerRandomCookReq&& from) noexcept
    : PlayerRandomCookReq() {
    *this = ::std::move(from);
  }

  inline PlayerRandomCookReq& operator=(PlayerRandomCookReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerRandomCookReq& default_instance();

  static inline const PlayerRandomCookReq* internal_default_instance() {
    return reinterpret_cast<const PlayerRandomCookReq*>(
               &_PlayerRandomCookReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(PlayerRandomCookReq* other);
  friend void swap(PlayerRandomCookReq& a, PlayerRandomCookReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerRandomCookReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerRandomCookReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerRandomCookReq& from);
  void MergeFrom(const PlayerRandomCookReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerRandomCookReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ItemParam material_list = 13;
  int material_list_size() const;
  void clear_material_list();
  static const int kMaterialListFieldNumber = 13;
  const ::proto::ItemParam& material_list(int index) const;
  ::proto::ItemParam* mutable_material_list(int index);
  ::proto::ItemParam* add_material_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
      mutable_material_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
      material_list() const;

  // @@protoc_insertion_point(class_scope:proto.PlayerRandomCookReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam > material_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerRandomCookRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerRandomCookRsp) */ {
 public:
  PlayerRandomCookRsp();
  virtual ~PlayerRandomCookRsp();

  PlayerRandomCookRsp(const PlayerRandomCookRsp& from);

  inline PlayerRandomCookRsp& operator=(const PlayerRandomCookRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerRandomCookRsp(PlayerRandomCookRsp&& from) noexcept
    : PlayerRandomCookRsp() {
    *this = ::std::move(from);
  }

  inline PlayerRandomCookRsp& operator=(PlayerRandomCookRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerRandomCookRsp& default_instance();

  static inline const PlayerRandomCookRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerRandomCookRsp*>(
               &_PlayerRandomCookRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(PlayerRandomCookRsp* other);
  friend void swap(PlayerRandomCookRsp& a, PlayerRandomCookRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerRandomCookRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerRandomCookRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerRandomCookRsp& from);
  void MergeFrom(const PlayerRandomCookRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerRandomCookRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 4;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 4;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerRandomCookRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CookRecipeData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CookRecipeData) */ {
 public:
  CookRecipeData();
  virtual ~CookRecipeData();

  CookRecipeData(const CookRecipeData& from);

  inline CookRecipeData& operator=(const CookRecipeData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CookRecipeData(CookRecipeData&& from) noexcept
    : CookRecipeData() {
    *this = ::std::move(from);
  }

  inline CookRecipeData& operator=(CookRecipeData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CookRecipeData& default_instance();

  static inline const CookRecipeData* internal_default_instance() {
    return reinterpret_cast<const CookRecipeData*>(
               &_CookRecipeData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(CookRecipeData* other);
  friend void swap(CookRecipeData& a, CookRecipeData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CookRecipeData* New() const PROTOBUF_FINAL { return New(NULL); }

  CookRecipeData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CookRecipeData& from);
  void MergeFrom(const CookRecipeData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CookRecipeData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 recipe_id = 9;
  void clear_recipe_id();
  static const int kRecipeIdFieldNumber = 9;
  ::google::protobuf::uint32 recipe_id() const;
  void set_recipe_id(::google::protobuf::uint32 value);

  // uint32 proficiency = 13;
  void clear_proficiency();
  static const int kProficiencyFieldNumber = 13;
  ::google::protobuf::uint32 proficiency() const;
  void set_proficiency(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CookRecipeData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 recipe_id_;
  ::google::protobuf::uint32 proficiency_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CookDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CookDataNotify) */ {
 public:
  CookDataNotify();
  virtual ~CookDataNotify();

  CookDataNotify(const CookDataNotify& from);

  inline CookDataNotify& operator=(const CookDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CookDataNotify(CookDataNotify&& from) noexcept
    : CookDataNotify() {
    *this = ::std::move(from);
  }

  inline CookDataNotify& operator=(CookDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CookDataNotify& default_instance();

  static inline const CookDataNotify* internal_default_instance() {
    return reinterpret_cast<const CookDataNotify*>(
               &_CookDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(CookDataNotify* other);
  friend void swap(CookDataNotify& a, CookDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CookDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CookDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CookDataNotify& from);
  void MergeFrom(const CookDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CookDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.CookRecipeData recipe_data_list = 2;
  int recipe_data_list_size() const;
  void clear_recipe_data_list();
  static const int kRecipeDataListFieldNumber = 2;
  const ::proto::CookRecipeData& recipe_data_list(int index) const;
  ::proto::CookRecipeData* mutable_recipe_data_list(int index);
  ::proto::CookRecipeData* add_recipe_data_list();
  ::google::protobuf::RepeatedPtrField< ::proto::CookRecipeData >*
      mutable_recipe_data_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::CookRecipeData >&
      recipe_data_list() const;

  // uint32 grade = 11;
  void clear_grade();
  static const int kGradeFieldNumber = 11;
  ::google::protobuf::uint32 grade() const;
  void set_grade(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CookDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::CookRecipeData > recipe_data_list_;
  ::google::protobuf::uint32 grade_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CookRecipeDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CookRecipeDataNotify) */ {
 public:
  CookRecipeDataNotify();
  virtual ~CookRecipeDataNotify();

  CookRecipeDataNotify(const CookRecipeDataNotify& from);

  inline CookRecipeDataNotify& operator=(const CookRecipeDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CookRecipeDataNotify(CookRecipeDataNotify&& from) noexcept
    : CookRecipeDataNotify() {
    *this = ::std::move(from);
  }

  inline CookRecipeDataNotify& operator=(CookRecipeDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CookRecipeDataNotify& default_instance();

  static inline const CookRecipeDataNotify* internal_default_instance() {
    return reinterpret_cast<const CookRecipeDataNotify*>(
               &_CookRecipeDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(CookRecipeDataNotify* other);
  friend void swap(CookRecipeDataNotify& a, CookRecipeDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CookRecipeDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CookRecipeDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CookRecipeDataNotify& from);
  void MergeFrom(const CookRecipeDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CookRecipeDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.CookRecipeData recipe_data = 4;
  bool has_recipe_data() const;
  void clear_recipe_data();
  static const int kRecipeDataFieldNumber = 4;
  const ::proto::CookRecipeData& recipe_data() const;
  ::proto::CookRecipeData* mutable_recipe_data();
  ::proto::CookRecipeData* release_recipe_data();
  void set_allocated_recipe_data(::proto::CookRecipeData* recipe_data);

  // @@protoc_insertion_point(class_scope:proto.CookRecipeDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::CookRecipeData* recipe_data_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CookGradeDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CookGradeDataNotify) */ {
 public:
  CookGradeDataNotify();
  virtual ~CookGradeDataNotify();

  CookGradeDataNotify(const CookGradeDataNotify& from);

  inline CookGradeDataNotify& operator=(const CookGradeDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CookGradeDataNotify(CookGradeDataNotify&& from) noexcept
    : CookGradeDataNotify() {
    *this = ::std::move(from);
  }

  inline CookGradeDataNotify& operator=(CookGradeDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CookGradeDataNotify& default_instance();

  static inline const CookGradeDataNotify* internal_default_instance() {
    return reinterpret_cast<const CookGradeDataNotify*>(
               &_CookGradeDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(CookGradeDataNotify* other);
  friend void swap(CookGradeDataNotify& a, CookGradeDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CookGradeDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CookGradeDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CookGradeDataNotify& from);
  void MergeFrom(const CookGradeDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CookGradeDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 grade = 12;
  void clear_grade();
  static const int kGradeFieldNumber = 12;
  ::google::protobuf::uint32 grade() const;
  void set_grade(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CookGradeDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 grade_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerCompoundMaterialReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerCompoundMaterialReq) */ {
 public:
  PlayerCompoundMaterialReq();
  virtual ~PlayerCompoundMaterialReq();

  PlayerCompoundMaterialReq(const PlayerCompoundMaterialReq& from);

  inline PlayerCompoundMaterialReq& operator=(const PlayerCompoundMaterialReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCompoundMaterialReq(PlayerCompoundMaterialReq&& from) noexcept
    : PlayerCompoundMaterialReq() {
    *this = ::std::move(from);
  }

  inline PlayerCompoundMaterialReq& operator=(PlayerCompoundMaterialReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCompoundMaterialReq& default_instance();

  static inline const PlayerCompoundMaterialReq* internal_default_instance() {
    return reinterpret_cast<const PlayerCompoundMaterialReq*>(
               &_PlayerCompoundMaterialReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(PlayerCompoundMaterialReq* other);
  friend void swap(PlayerCompoundMaterialReq& a, PlayerCompoundMaterialReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCompoundMaterialReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerCompoundMaterialReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerCompoundMaterialReq& from);
  void MergeFrom(const PlayerCompoundMaterialReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerCompoundMaterialReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 compound_id = 3;
  void clear_compound_id();
  static const int kCompoundIdFieldNumber = 3;
  ::google::protobuf::uint32 compound_id() const;
  void set_compound_id(::google::protobuf::uint32 value);

  // uint32 count = 11;
  void clear_count();
  static const int kCountFieldNumber = 11;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerCompoundMaterialReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 compound_id_;
  ::google::protobuf::uint32 count_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CompoundQueueData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CompoundQueueData) */ {
 public:
  CompoundQueueData();
  virtual ~CompoundQueueData();

  CompoundQueueData(const CompoundQueueData& from);

  inline CompoundQueueData& operator=(const CompoundQueueData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CompoundQueueData(CompoundQueueData&& from) noexcept
    : CompoundQueueData() {
    *this = ::std::move(from);
  }

  inline CompoundQueueData& operator=(CompoundQueueData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CompoundQueueData& default_instance();

  static inline const CompoundQueueData* internal_default_instance() {
    return reinterpret_cast<const CompoundQueueData*>(
               &_CompoundQueueData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(CompoundQueueData* other);
  friend void swap(CompoundQueueData& a, CompoundQueueData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CompoundQueueData* New() const PROTOBUF_FINAL { return New(NULL); }

  CompoundQueueData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CompoundQueueData& from);
  void MergeFrom(const CompoundQueueData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CompoundQueueData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 output_count = 1;
  void clear_output_count();
  static const int kOutputCountFieldNumber = 1;
  ::google::protobuf::uint32 output_count() const;
  void set_output_count(::google::protobuf::uint32 value);

  // uint32 compound_id = 4;
  void clear_compound_id();
  static const int kCompoundIdFieldNumber = 4;
  ::google::protobuf::uint32 compound_id() const;
  void set_compound_id(::google::protobuf::uint32 value);

  // uint32 wait_count = 8;
  void clear_wait_count();
  static const int kWaitCountFieldNumber = 8;
  ::google::protobuf::uint32 wait_count() const;
  void set_wait_count(::google::protobuf::uint32 value);

  // uint32 output_time = 14;
  void clear_output_time();
  static const int kOutputTimeFieldNumber = 14;
  ::google::protobuf::uint32 output_time() const;
  void set_output_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CompoundQueueData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 output_count_;
  ::google::protobuf::uint32 compound_id_;
  ::google::protobuf::uint32 wait_count_;
  ::google::protobuf::uint32 output_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerCompoundMaterialRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerCompoundMaterialRsp) */ {
 public:
  PlayerCompoundMaterialRsp();
  virtual ~PlayerCompoundMaterialRsp();

  PlayerCompoundMaterialRsp(const PlayerCompoundMaterialRsp& from);

  inline PlayerCompoundMaterialRsp& operator=(const PlayerCompoundMaterialRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCompoundMaterialRsp(PlayerCompoundMaterialRsp&& from) noexcept
    : PlayerCompoundMaterialRsp() {
    *this = ::std::move(from);
  }

  inline PlayerCompoundMaterialRsp& operator=(PlayerCompoundMaterialRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCompoundMaterialRsp& default_instance();

  static inline const PlayerCompoundMaterialRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerCompoundMaterialRsp*>(
               &_PlayerCompoundMaterialRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(PlayerCompoundMaterialRsp* other);
  friend void swap(PlayerCompoundMaterialRsp& a, PlayerCompoundMaterialRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCompoundMaterialRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerCompoundMaterialRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerCompoundMaterialRsp& from);
  void MergeFrom(const PlayerCompoundMaterialRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerCompoundMaterialRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.CompoundQueueData compound_que_data = 5;
  bool has_compound_que_data() const;
  void clear_compound_que_data();
  static const int kCompoundQueDataFieldNumber = 5;
  const ::proto::CompoundQueueData& compound_que_data() const;
  ::proto::CompoundQueueData* mutable_compound_que_data();
  ::proto::CompoundQueueData* release_compound_que_data();
  void set_allocated_compound_que_data(::proto::CompoundQueueData* compound_que_data);

  // int32 retcode = 12;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 12;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerCompoundMaterialRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::CompoundQueueData* compound_que_data_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeCompoundOutputReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeCompoundOutputReq) */ {
 public:
  TakeCompoundOutputReq();
  virtual ~TakeCompoundOutputReq();

  TakeCompoundOutputReq(const TakeCompoundOutputReq& from);

  inline TakeCompoundOutputReq& operator=(const TakeCompoundOutputReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeCompoundOutputReq(TakeCompoundOutputReq&& from) noexcept
    : TakeCompoundOutputReq() {
    *this = ::std::move(from);
  }

  inline TakeCompoundOutputReq& operator=(TakeCompoundOutputReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeCompoundOutputReq& default_instance();

  static inline const TakeCompoundOutputReq* internal_default_instance() {
    return reinterpret_cast<const TakeCompoundOutputReq*>(
               &_TakeCompoundOutputReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(TakeCompoundOutputReq* other);
  friend void swap(TakeCompoundOutputReq& a, TakeCompoundOutputReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeCompoundOutputReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeCompoundOutputReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeCompoundOutputReq& from);
  void MergeFrom(const TakeCompoundOutputReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeCompoundOutputReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 compound_group_id = 3;
  void clear_compound_group_id();
  static const int kCompoundGroupIdFieldNumber = 3;
  ::google::protobuf::uint32 compound_group_id() const;
  void set_compound_group_id(::google::protobuf::uint32 value);

  // uint32 compound_id = 10;
  void clear_compound_id();
  static const int kCompoundIdFieldNumber = 10;
  ::google::protobuf::uint32 compound_id() const;
  void set_compound_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeCompoundOutputReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 compound_group_id_;
  ::google::protobuf::uint32 compound_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeCompoundOutputRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeCompoundOutputRsp) */ {
 public:
  TakeCompoundOutputRsp();
  virtual ~TakeCompoundOutputRsp();

  TakeCompoundOutputRsp(const TakeCompoundOutputRsp& from);

  inline TakeCompoundOutputRsp& operator=(const TakeCompoundOutputRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeCompoundOutputRsp(TakeCompoundOutputRsp&& from) noexcept
    : TakeCompoundOutputRsp() {
    *this = ::std::move(from);
  }

  inline TakeCompoundOutputRsp& operator=(TakeCompoundOutputRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeCompoundOutputRsp& default_instance();

  static inline const TakeCompoundOutputRsp* internal_default_instance() {
    return reinterpret_cast<const TakeCompoundOutputRsp*>(
               &_TakeCompoundOutputRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(TakeCompoundOutputRsp* other);
  friend void swap(TakeCompoundOutputRsp& a, TakeCompoundOutputRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeCompoundOutputRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeCompoundOutputRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeCompoundOutputRsp& from);
  void MergeFrom(const TakeCompoundOutputRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeCompoundOutputRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ItemParam item_list = 6;
  int item_list_size() const;
  void clear_item_list();
  static const int kItemListFieldNumber = 6;
  const ::proto::ItemParam& item_list(int index) const;
  ::proto::ItemParam* mutable_item_list(int index);
  ::proto::ItemParam* add_item_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
      mutable_item_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
      item_list() const;

  // int32 retcode = 2;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 2;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeCompoundOutputRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam > item_list_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CompoundDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CompoundDataNotify) */ {
 public:
  CompoundDataNotify();
  virtual ~CompoundDataNotify();

  CompoundDataNotify(const CompoundDataNotify& from);

  inline CompoundDataNotify& operator=(const CompoundDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CompoundDataNotify(CompoundDataNotify&& from) noexcept
    : CompoundDataNotify() {
    *this = ::std::move(from);
  }

  inline CompoundDataNotify& operator=(CompoundDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CompoundDataNotify& default_instance();

  static inline const CompoundDataNotify* internal_default_instance() {
    return reinterpret_cast<const CompoundDataNotify*>(
               &_CompoundDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(CompoundDataNotify* other);
  friend void swap(CompoundDataNotify& a, CompoundDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CompoundDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CompoundDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CompoundDataNotify& from);
  void MergeFrom(const CompoundDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CompoundDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 unlock_compound_list = 1;
  int unlock_compound_list_size() const;
  void clear_unlock_compound_list();
  static const int kUnlockCompoundListFieldNumber = 1;
  ::google::protobuf::uint32 unlock_compound_list(int index) const;
  void set_unlock_compound_list(int index, ::google::protobuf::uint32 value);
  void add_unlock_compound_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unlock_compound_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unlock_compound_list();

  // repeated .proto.CompoundQueueData compound_que_data_list = 9;
  int compound_que_data_list_size() const;
  void clear_compound_que_data_list();
  static const int kCompoundQueDataListFieldNumber = 9;
  const ::proto::CompoundQueueData& compound_que_data_list(int index) const;
  ::proto::CompoundQueueData* mutable_compound_que_data_list(int index);
  ::proto::CompoundQueueData* add_compound_que_data_list();
  ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >*
      mutable_compound_que_data_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >&
      compound_que_data_list() const;

  // @@protoc_insertion_point(class_scope:proto.CompoundDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unlock_compound_list_;
  mutable int _unlock_compound_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData > compound_que_data_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetCompoundDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetCompoundDataReq) */ {
 public:
  GetCompoundDataReq();
  virtual ~GetCompoundDataReq();

  GetCompoundDataReq(const GetCompoundDataReq& from);

  inline GetCompoundDataReq& operator=(const GetCompoundDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetCompoundDataReq(GetCompoundDataReq&& from) noexcept
    : GetCompoundDataReq() {
    *this = ::std::move(from);
  }

  inline GetCompoundDataReq& operator=(GetCompoundDataReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCompoundDataReq& default_instance();

  static inline const GetCompoundDataReq* internal_default_instance() {
    return reinterpret_cast<const GetCompoundDataReq*>(
               &_GetCompoundDataReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(GetCompoundDataReq* other);
  friend void swap(GetCompoundDataReq& a, GetCompoundDataReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetCompoundDataReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetCompoundDataReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetCompoundDataReq& from);
  void MergeFrom(const GetCompoundDataReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetCompoundDataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.GetCompoundDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetCompoundDataRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetCompoundDataRsp) */ {
 public:
  GetCompoundDataRsp();
  virtual ~GetCompoundDataRsp();

  GetCompoundDataRsp(const GetCompoundDataRsp& from);

  inline GetCompoundDataRsp& operator=(const GetCompoundDataRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetCompoundDataRsp(GetCompoundDataRsp&& from) noexcept
    : GetCompoundDataRsp() {
    *this = ::std::move(from);
  }

  inline GetCompoundDataRsp& operator=(GetCompoundDataRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCompoundDataRsp& default_instance();

  static inline const GetCompoundDataRsp* internal_default_instance() {
    return reinterpret_cast<const GetCompoundDataRsp*>(
               &_GetCompoundDataRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(GetCompoundDataRsp* other);
  friend void swap(GetCompoundDataRsp& a, GetCompoundDataRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetCompoundDataRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetCompoundDataRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetCompoundDataRsp& from);
  void MergeFrom(const GetCompoundDataRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetCompoundDataRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.CompoundQueueData compound_que_data_list = 7;
  int compound_que_data_list_size() const;
  void clear_compound_que_data_list();
  static const int kCompoundQueDataListFieldNumber = 7;
  const ::proto::CompoundQueueData& compound_que_data_list(int index) const;
  ::proto::CompoundQueueData* mutable_compound_que_data_list(int index);
  ::proto::CompoundQueueData* add_compound_que_data_list();
  ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >*
      mutable_compound_que_data_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >&
      compound_que_data_list() const;

  // repeated uint32 unlock_compound_list = 11;
  int unlock_compound_list_size() const;
  void clear_unlock_compound_list();
  static const int kUnlockCompoundListFieldNumber = 11;
  ::google::protobuf::uint32 unlock_compound_list(int index) const;
  void set_unlock_compound_list(int index, ::google::protobuf::uint32 value);
  void add_unlock_compound_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unlock_compound_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unlock_compound_list();

  // int32 retcode = 3;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 3;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetCompoundDataRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData > compound_que_data_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unlock_compound_list_;
  mutable int _unlock_compound_list_cached_byte_size_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerTimeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerTimeNotify) */ {
 public:
  PlayerTimeNotify();
  virtual ~PlayerTimeNotify();

  PlayerTimeNotify(const PlayerTimeNotify& from);

  inline PlayerTimeNotify& operator=(const PlayerTimeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerTimeNotify(PlayerTimeNotify&& from) noexcept
    : PlayerTimeNotify() {
    *this = ::std::move(from);
  }

  inline PlayerTimeNotify& operator=(PlayerTimeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerTimeNotify& default_instance();

  static inline const PlayerTimeNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerTimeNotify*>(
               &_PlayerTimeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(PlayerTimeNotify* other);
  friend void swap(PlayerTimeNotify& a, PlayerTimeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerTimeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerTimeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerTimeNotify& from);
  void MergeFrom(const PlayerTimeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerTimeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_paused = 14;
  void clear_is_paused();
  static const int kIsPausedFieldNumber = 14;
  bool is_paused() const;
  void set_is_paused(bool value);

  // uint64 server_time = 5;
  void clear_server_time();
  static const int kServerTimeFieldNumber = 5;
  ::google::protobuf::uint64 server_time() const;
  void set_server_time(::google::protobuf::uint64 value);

  // uint64 player_time = 11;
  void clear_player_time();
  static const int kPlayerTimeFieldNumber = 11;
  ::google::protobuf::uint64 player_time() const;
  void set_player_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerTimeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_paused_;
  ::google::protobuf::uint64 server_time_;
  ::google::protobuf::uint64 player_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerSetPauseReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerSetPauseReq) */ {
 public:
  PlayerSetPauseReq();
  virtual ~PlayerSetPauseReq();

  PlayerSetPauseReq(const PlayerSetPauseReq& from);

  inline PlayerSetPauseReq& operator=(const PlayerSetPauseReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerSetPauseReq(PlayerSetPauseReq&& from) noexcept
    : PlayerSetPauseReq() {
    *this = ::std::move(from);
  }

  inline PlayerSetPauseReq& operator=(PlayerSetPauseReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerSetPauseReq& default_instance();

  static inline const PlayerSetPauseReq* internal_default_instance() {
    return reinterpret_cast<const PlayerSetPauseReq*>(
               &_PlayerSetPauseReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(PlayerSetPauseReq* other);
  friend void swap(PlayerSetPauseReq& a, PlayerSetPauseReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerSetPauseReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerSetPauseReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerSetPauseReq& from);
  void MergeFrom(const PlayerSetPauseReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerSetPauseReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_paused = 1;
  void clear_is_paused();
  static const int kIsPausedFieldNumber = 1;
  bool is_paused() const;
  void set_is_paused(bool value);

  // @@protoc_insertion_point(class_scope:proto.PlayerSetPauseReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_paused_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerSetPauseRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerSetPauseRsp) */ {
 public:
  PlayerSetPauseRsp();
  virtual ~PlayerSetPauseRsp();

  PlayerSetPauseRsp(const PlayerSetPauseRsp& from);

  inline PlayerSetPauseRsp& operator=(const PlayerSetPauseRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerSetPauseRsp(PlayerSetPauseRsp&& from) noexcept
    : PlayerSetPauseRsp() {
    *this = ::std::move(from);
  }

  inline PlayerSetPauseRsp& operator=(PlayerSetPauseRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerSetPauseRsp& default_instance();

  static inline const PlayerSetPauseRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerSetPauseRsp*>(
               &_PlayerSetPauseRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(PlayerSetPauseRsp* other);
  friend void swap(PlayerSetPauseRsp& a, PlayerSetPauseRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerSetPauseRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerSetPauseRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerSetPauseRsp& from);
  void MergeFrom(const PlayerSetPauseRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerSetPauseRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 15;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 15;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerSetPauseRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerSetLanguageReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerSetLanguageReq) */ {
 public:
  PlayerSetLanguageReq();
  virtual ~PlayerSetLanguageReq();

  PlayerSetLanguageReq(const PlayerSetLanguageReq& from);

  inline PlayerSetLanguageReq& operator=(const PlayerSetLanguageReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerSetLanguageReq(PlayerSetLanguageReq&& from) noexcept
    : PlayerSetLanguageReq() {
    *this = ::std::move(from);
  }

  inline PlayerSetLanguageReq& operator=(PlayerSetLanguageReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerSetLanguageReq& default_instance();

  static inline const PlayerSetLanguageReq* internal_default_instance() {
    return reinterpret_cast<const PlayerSetLanguageReq*>(
               &_PlayerSetLanguageReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(PlayerSetLanguageReq* other);
  friend void swap(PlayerSetLanguageReq& a, PlayerSetLanguageReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerSetLanguageReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerSetLanguageReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerSetLanguageReq& from);
  void MergeFrom(const PlayerSetLanguageReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerSetLanguageReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 language_type = 5;
  void clear_language_type();
  static const int kLanguageTypeFieldNumber = 5;
  ::google::protobuf::uint32 language_type() const;
  void set_language_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerSetLanguageReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 language_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerSetLanguageRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerSetLanguageRsp) */ {
 public:
  PlayerSetLanguageRsp();
  virtual ~PlayerSetLanguageRsp();

  PlayerSetLanguageRsp(const PlayerSetLanguageRsp& from);

  inline PlayerSetLanguageRsp& operator=(const PlayerSetLanguageRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerSetLanguageRsp(PlayerSetLanguageRsp&& from) noexcept
    : PlayerSetLanguageRsp() {
    *this = ::std::move(from);
  }

  inline PlayerSetLanguageRsp& operator=(PlayerSetLanguageRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerSetLanguageRsp& default_instance();

  static inline const PlayerSetLanguageRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerSetLanguageRsp*>(
               &_PlayerSetLanguageRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(PlayerSetLanguageRsp* other);
  friend void swap(PlayerSetLanguageRsp& a, PlayerSetLanguageRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerSetLanguageRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerSetLanguageRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerSetLanguageRsp& from);
  void MergeFrom(const PlayerSetLanguageRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerSetLanguageRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 11;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 11;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerSetLanguageRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataResVersionNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DataResVersionNotify) */ {
 public:
  DataResVersionNotify();
  virtual ~DataResVersionNotify();

  DataResVersionNotify(const DataResVersionNotify& from);

  inline DataResVersionNotify& operator=(const DataResVersionNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataResVersionNotify(DataResVersionNotify&& from) noexcept
    : DataResVersionNotify() {
    *this = ::std::move(from);
  }

  inline DataResVersionNotify& operator=(DataResVersionNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataResVersionNotify& default_instance();

  static inline const DataResVersionNotify* internal_default_instance() {
    return reinterpret_cast<const DataResVersionNotify*>(
               &_DataResVersionNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(DataResVersionNotify* other);
  friend void swap(DataResVersionNotify& a, DataResVersionNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataResVersionNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  DataResVersionNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DataResVersionNotify& from);
  void MergeFrom(const DataResVersionNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DataResVersionNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DataResVersionNotify_DataResVersionOpType DataResVersionOpType;
  static const DataResVersionOpType OP_TYPE_NONE =
    DataResVersionNotify_DataResVersionOpType_OP_TYPE_NONE;
  static const DataResVersionOpType OP_TYPE_RELOGIN =
    DataResVersionNotify_DataResVersionOpType_OP_TYPE_RELOGIN;
  static const DataResVersionOpType OP_TYPE_MP_RELOGIN =
    DataResVersionNotify_DataResVersionOpType_OP_TYPE_MP_RELOGIN;
  static inline bool DataResVersionOpType_IsValid(int value) {
    return DataResVersionNotify_DataResVersionOpType_IsValid(value);
  }
  static const DataResVersionOpType DataResVersionOpType_MIN =
    DataResVersionNotify_DataResVersionOpType_DataResVersionOpType_MIN;
  static const DataResVersionOpType DataResVersionOpType_MAX =
    DataResVersionNotify_DataResVersionOpType_DataResVersionOpType_MAX;
  static const int DataResVersionOpType_ARRAYSIZE =
    DataResVersionNotify_DataResVersionOpType_DataResVersionOpType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DataResVersionOpType_descriptor() {
    return DataResVersionNotify_DataResVersionOpType_descriptor();
  }
  static inline const ::std::string& DataResVersionOpType_Name(DataResVersionOpType value) {
    return DataResVersionNotify_DataResVersionOpType_Name(value);
  }
  static inline bool DataResVersionOpType_Parse(const ::std::string& name,
      DataResVersionOpType* value) {
    return DataResVersionNotify_DataResVersionOpType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string client_version_suffix = 5;
  void clear_client_version_suffix();
  static const int kClientVersionSuffixFieldNumber = 5;
  const ::std::string& client_version_suffix() const;
  void set_client_version_suffix(const ::std::string& value);
  #if LANG_CXX11
  void set_client_version_suffix(::std::string&& value);
  #endif
  void set_client_version_suffix(const char* value);
  void set_client_version_suffix(const char* value, size_t size);
  ::std::string* mutable_client_version_suffix();
  ::std::string* release_client_version_suffix();
  void set_allocated_client_version_suffix(::std::string* client_version_suffix);

  // string client_silence_md5 = 10;
  void clear_client_silence_md5();
  static const int kClientSilenceMd5FieldNumber = 10;
  const ::std::string& client_silence_md5() const;
  void set_client_silence_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_client_silence_md5(::std::string&& value);
  #endif
  void set_client_silence_md5(const char* value);
  void set_client_silence_md5(const char* value, size_t size);
  ::std::string* mutable_client_silence_md5();
  ::std::string* release_client_silence_md5();
  void set_allocated_client_silence_md5(::std::string* client_silence_md5);

  // string client_md5 = 14;
  void clear_client_md5();
  static const int kClientMd5FieldNumber = 14;
  const ::std::string& client_md5() const;
  void set_client_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_client_md5(::std::string&& value);
  #endif
  void set_client_md5(const char* value);
  void set_client_md5(const char* value, size_t size);
  ::std::string* mutable_client_md5();
  ::std::string* release_client_md5();
  void set_allocated_client_md5(::std::string* client_md5);

  // string client_silence_version_suffix = 15;
  void clear_client_silence_version_suffix();
  static const int kClientSilenceVersionSuffixFieldNumber = 15;
  const ::std::string& client_silence_version_suffix() const;
  void set_client_silence_version_suffix(const ::std::string& value);
  #if LANG_CXX11
  void set_client_silence_version_suffix(::std::string&& value);
  #endif
  void set_client_silence_version_suffix(const char* value);
  void set_client_silence_version_suffix(const char* value, size_t size);
  ::std::string* mutable_client_silence_version_suffix();
  ::std::string* release_client_silence_version_suffix();
  void set_allocated_client_silence_version_suffix(::std::string* client_silence_version_suffix);

  // .proto.ResVersionConfig res_version_config = 9;
  bool has_res_version_config() const;
  void clear_res_version_config();
  static const int kResVersionConfigFieldNumber = 9;
  const ::proto::ResVersionConfig& res_version_config() const;
  ::proto::ResVersionConfig* mutable_res_version_config();
  ::proto::ResVersionConfig* release_res_version_config();
  void set_allocated_res_version_config(::proto::ResVersionConfig* res_version_config);

  // uint32 client_silence_data_version = 1;
  void clear_client_silence_data_version();
  static const int kClientSilenceDataVersionFieldNumber = 1;
  ::google::protobuf::uint32 client_silence_data_version() const;
  void set_client_silence_data_version(::google::protobuf::uint32 value);

  // uint32 client_data_version = 2;
  void clear_client_data_version();
  static const int kClientDataVersionFieldNumber = 2;
  ::google::protobuf::uint32 client_data_version() const;
  void set_client_data_version(::google::protobuf::uint32 value);

  // bool is_data_need_relogin = 7;
  void clear_is_data_need_relogin();
  static const int kIsDataNeedReloginFieldNumber = 7;
  bool is_data_need_relogin() const;
  void set_is_data_need_relogin(bool value);

  // .proto.DataResVersionNotify.DataResVersionOpType op_type = 12;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 12;
  ::proto::DataResVersionNotify_DataResVersionOpType op_type() const;
  void set_op_type(::proto::DataResVersionNotify_DataResVersionOpType value);

  // @@protoc_insertion_point(class_scope:proto.DataResVersionNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr client_version_suffix_;
  ::google::protobuf::internal::ArenaStringPtr client_silence_md5_;
  ::google::protobuf::internal::ArenaStringPtr client_md5_;
  ::google::protobuf::internal::ArenaStringPtr client_silence_version_suffix_;
  ::proto::ResVersionConfig* res_version_config_;
  ::google::protobuf::uint32 client_silence_data_version_;
  ::google::protobuf::uint32 client_data_version_;
  bool is_data_need_relogin_;
  int op_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DailyTaskInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DailyTaskInfo) */ {
 public:
  DailyTaskInfo();
  virtual ~DailyTaskInfo();

  DailyTaskInfo(const DailyTaskInfo& from);

  inline DailyTaskInfo& operator=(const DailyTaskInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DailyTaskInfo(DailyTaskInfo&& from) noexcept
    : DailyTaskInfo() {
    *this = ::std::move(from);
  }

  inline DailyTaskInfo& operator=(DailyTaskInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskInfo& default_instance();

  static inline const DailyTaskInfo* internal_default_instance() {
    return reinterpret_cast<const DailyTaskInfo*>(
               &_DailyTaskInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(DailyTaskInfo* other);
  friend void swap(DailyTaskInfo& a, DailyTaskInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DailyTaskInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  DailyTaskInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DailyTaskInfo& from);
  void MergeFrom(const DailyTaskInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DailyTaskInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 reward_id = 3;
  void clear_reward_id();
  static const int kRewardIdFieldNumber = 3;
  ::google::protobuf::uint32 reward_id() const;
  void set_reward_id(::google::protobuf::uint32 value);

  // uint32 daily_task_id = 4;
  void clear_daily_task_id();
  static const int kDailyTaskIdFieldNumber = 4;
  ::google::protobuf::uint32 daily_task_id() const;
  void set_daily_task_id(::google::protobuf::uint32 value);

  // bool is_finished = 14;
  void clear_is_finished();
  static const int kIsFinishedFieldNumber = 14;
  bool is_finished() const;
  void set_is_finished(bool value);

  // uint32 finish_progress = 10;
  void clear_finish_progress();
  static const int kFinishProgressFieldNumber = 10;
  ::google::protobuf::uint32 finish_progress() const;
  void set_finish_progress(::google::protobuf::uint32 value);

  // uint32 progress = 13;
  void clear_progress();
  static const int kProgressFieldNumber = 13;
  ::google::protobuf::uint32 progress() const;
  void set_progress(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DailyTaskInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 reward_id_;
  ::google::protobuf::uint32 daily_task_id_;
  bool is_finished_;
  ::google::protobuf::uint32 finish_progress_;
  ::google::protobuf::uint32 progress_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DailyTaskDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DailyTaskDataNotify) */ {
 public:
  DailyTaskDataNotify();
  virtual ~DailyTaskDataNotify();

  DailyTaskDataNotify(const DailyTaskDataNotify& from);

  inline DailyTaskDataNotify& operator=(const DailyTaskDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DailyTaskDataNotify(DailyTaskDataNotify&& from) noexcept
    : DailyTaskDataNotify() {
    *this = ::std::move(from);
  }

  inline DailyTaskDataNotify& operator=(DailyTaskDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskDataNotify& default_instance();

  static inline const DailyTaskDataNotify* internal_default_instance() {
    return reinterpret_cast<const DailyTaskDataNotify*>(
               &_DailyTaskDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(DailyTaskDataNotify* other);
  friend void swap(DailyTaskDataNotify& a, DailyTaskDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DailyTaskDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  DailyTaskDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DailyTaskDataNotify& from);
  void MergeFrom(const DailyTaskDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DailyTaskDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 score_reward_id = 11;
  void clear_score_reward_id();
  static const int kScoreRewardIdFieldNumber = 11;
  ::google::protobuf::uint32 score_reward_id() const;
  void set_score_reward_id(::google::protobuf::uint32 value);

  // uint32 finished_num = 4;
  void clear_finished_num();
  static const int kFinishedNumFieldNumber = 4;
  ::google::protobuf::uint32 finished_num() const;
  void set_finished_num(::google::protobuf::uint32 value);

  // bool is_taken_score_reward = 9;
  void clear_is_taken_score_reward();
  static const int kIsTakenScoreRewardFieldNumber = 9;
  bool is_taken_score_reward() const;
  void set_is_taken_score_reward(bool value);

  // @@protoc_insertion_point(class_scope:proto.DailyTaskDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 score_reward_id_;
  ::google::protobuf::uint32 finished_num_;
  bool is_taken_score_reward_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DailyTaskProgressNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DailyTaskProgressNotify) */ {
 public:
  DailyTaskProgressNotify();
  virtual ~DailyTaskProgressNotify();

  DailyTaskProgressNotify(const DailyTaskProgressNotify& from);

  inline DailyTaskProgressNotify& operator=(const DailyTaskProgressNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DailyTaskProgressNotify(DailyTaskProgressNotify&& from) noexcept
    : DailyTaskProgressNotify() {
    *this = ::std::move(from);
  }

  inline DailyTaskProgressNotify& operator=(DailyTaskProgressNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskProgressNotify& default_instance();

  static inline const DailyTaskProgressNotify* internal_default_instance() {
    return reinterpret_cast<const DailyTaskProgressNotify*>(
               &_DailyTaskProgressNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(DailyTaskProgressNotify* other);
  friend void swap(DailyTaskProgressNotify& a, DailyTaskProgressNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DailyTaskProgressNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  DailyTaskProgressNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DailyTaskProgressNotify& from);
  void MergeFrom(const DailyTaskProgressNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DailyTaskProgressNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.DailyTaskInfo info = 12;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 12;
  const ::proto::DailyTaskInfo& info() const;
  ::proto::DailyTaskInfo* mutable_info();
  ::proto::DailyTaskInfo* release_info();
  void set_allocated_info(::proto::DailyTaskInfo* info);

  // @@protoc_insertion_point(class_scope:proto.DailyTaskProgressNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::DailyTaskInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DailyTaskScoreRewardNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DailyTaskScoreRewardNotify) */ {
 public:
  DailyTaskScoreRewardNotify();
  virtual ~DailyTaskScoreRewardNotify();

  DailyTaskScoreRewardNotify(const DailyTaskScoreRewardNotify& from);

  inline DailyTaskScoreRewardNotify& operator=(const DailyTaskScoreRewardNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DailyTaskScoreRewardNotify(DailyTaskScoreRewardNotify&& from) noexcept
    : DailyTaskScoreRewardNotify() {
    *this = ::std::move(from);
  }

  inline DailyTaskScoreRewardNotify& operator=(DailyTaskScoreRewardNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskScoreRewardNotify& default_instance();

  static inline const DailyTaskScoreRewardNotify* internal_default_instance() {
    return reinterpret_cast<const DailyTaskScoreRewardNotify*>(
               &_DailyTaskScoreRewardNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(DailyTaskScoreRewardNotify* other);
  friend void swap(DailyTaskScoreRewardNotify& a, DailyTaskScoreRewardNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DailyTaskScoreRewardNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  DailyTaskScoreRewardNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DailyTaskScoreRewardNotify& from);
  void MergeFrom(const DailyTaskScoreRewardNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DailyTaskScoreRewardNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 reward_id = 14;
  void clear_reward_id();
  static const int kRewardIdFieldNumber = 14;
  ::google::protobuf::uint32 reward_id() const;
  void set_reward_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DailyTaskScoreRewardNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 reward_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorldOwnerDailyTaskNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WorldOwnerDailyTaskNotify) */ {
 public:
  WorldOwnerDailyTaskNotify();
  virtual ~WorldOwnerDailyTaskNotify();

  WorldOwnerDailyTaskNotify(const WorldOwnerDailyTaskNotify& from);

  inline WorldOwnerDailyTaskNotify& operator=(const WorldOwnerDailyTaskNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldOwnerDailyTaskNotify(WorldOwnerDailyTaskNotify&& from) noexcept
    : WorldOwnerDailyTaskNotify() {
    *this = ::std::move(from);
  }

  inline WorldOwnerDailyTaskNotify& operator=(WorldOwnerDailyTaskNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldOwnerDailyTaskNotify& default_instance();

  static inline const WorldOwnerDailyTaskNotify* internal_default_instance() {
    return reinterpret_cast<const WorldOwnerDailyTaskNotify*>(
               &_WorldOwnerDailyTaskNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(WorldOwnerDailyTaskNotify* other);
  friend void swap(WorldOwnerDailyTaskNotify& a, WorldOwnerDailyTaskNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldOwnerDailyTaskNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  WorldOwnerDailyTaskNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorldOwnerDailyTaskNotify& from);
  void MergeFrom(const WorldOwnerDailyTaskNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorldOwnerDailyTaskNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.DailyTaskInfo task_list = 1;
  int task_list_size() const;
  void clear_task_list();
  static const int kTaskListFieldNumber = 1;
  const ::proto::DailyTaskInfo& task_list(int index) const;
  ::proto::DailyTaskInfo* mutable_task_list(int index);
  ::proto::DailyTaskInfo* add_task_list();
  ::google::protobuf::RepeatedPtrField< ::proto::DailyTaskInfo >*
      mutable_task_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::DailyTaskInfo >&
      task_list() const;

  // uint32 filter_city_id = 2;
  void clear_filter_city_id();
  static const int kFilterCityIdFieldNumber = 2;
  ::google::protobuf::uint32 filter_city_id() const;
  void set_filter_city_id(::google::protobuf::uint32 value);

  // uint32 finished_daily_task_num = 5;
  void clear_finished_daily_task_num();
  static const int kFinishedDailyTaskNumFieldNumber = 5;
  ::google::protobuf::uint32 finished_daily_task_num() const;
  void set_finished_daily_task_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.WorldOwnerDailyTaskNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::DailyTaskInfo > task_list_;
  ::google::protobuf::uint32 filter_city_id_;
  ::google::protobuf::uint32 finished_daily_task_num_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddRandTaskInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AddRandTaskInfoNotify) */ {
 public:
  AddRandTaskInfoNotify();
  virtual ~AddRandTaskInfoNotify();

  AddRandTaskInfoNotify(const AddRandTaskInfoNotify& from);

  inline AddRandTaskInfoNotify& operator=(const AddRandTaskInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddRandTaskInfoNotify(AddRandTaskInfoNotify&& from) noexcept
    : AddRandTaskInfoNotify() {
    *this = ::std::move(from);
  }

  inline AddRandTaskInfoNotify& operator=(AddRandTaskInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddRandTaskInfoNotify& default_instance();

  static inline const AddRandTaskInfoNotify* internal_default_instance() {
    return reinterpret_cast<const AddRandTaskInfoNotify*>(
               &_AddRandTaskInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(AddRandTaskInfoNotify* other);
  friend void swap(AddRandTaskInfoNotify& a, AddRandTaskInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddRandTaskInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AddRandTaskInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddRandTaskInfoNotify& from);
  void MergeFrom(const AddRandTaskInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddRandTaskInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 13;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 13;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // uint32 rand_task_id = 5;
  void clear_rand_task_id();
  static const int kRandTaskIdFieldNumber = 5;
  ::google::protobuf::uint32 rand_task_id() const;
  void set_rand_task_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AddRandTaskInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::google::protobuf::uint32 rand_task_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoveRandTaskInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RemoveRandTaskInfoNotify) */ {
 public:
  RemoveRandTaskInfoNotify();
  virtual ~RemoveRandTaskInfoNotify();

  RemoveRandTaskInfoNotify(const RemoveRandTaskInfoNotify& from);

  inline RemoveRandTaskInfoNotify& operator=(const RemoveRandTaskInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoveRandTaskInfoNotify(RemoveRandTaskInfoNotify&& from) noexcept
    : RemoveRandTaskInfoNotify() {
    *this = ::std::move(from);
  }

  inline RemoveRandTaskInfoNotify& operator=(RemoveRandTaskInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveRandTaskInfoNotify& default_instance();

  static inline const RemoveRandTaskInfoNotify* internal_default_instance() {
    return reinterpret_cast<const RemoveRandTaskInfoNotify*>(
               &_RemoveRandTaskInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    62;

  void Swap(RemoveRandTaskInfoNotify* other);
  friend void swap(RemoveRandTaskInfoNotify& a, RemoveRandTaskInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoveRandTaskInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoveRandTaskInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoveRandTaskInfoNotify& from);
  void MergeFrom(const RemoveRandTaskInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoveRandTaskInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RemoveRandTaskInfoNotify_FinishReason FinishReason;
  static const FinishReason DEFAULT =
    RemoveRandTaskInfoNotify_FinishReason_DEFAULT;
  static const FinishReason CLEAR =
    RemoveRandTaskInfoNotify_FinishReason_CLEAR;
  static const FinishReason DISTANCE =
    RemoveRandTaskInfoNotify_FinishReason_DISTANCE;
  static const FinishReason FINISH =
    RemoveRandTaskInfoNotify_FinishReason_FINISH;
  static inline bool FinishReason_IsValid(int value) {
    return RemoveRandTaskInfoNotify_FinishReason_IsValid(value);
  }
  static const FinishReason FinishReason_MIN =
    RemoveRandTaskInfoNotify_FinishReason_FinishReason_MIN;
  static const FinishReason FinishReason_MAX =
    RemoveRandTaskInfoNotify_FinishReason_FinishReason_MAX;
  static const int FinishReason_ARRAYSIZE =
    RemoveRandTaskInfoNotify_FinishReason_FinishReason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  FinishReason_descriptor() {
    return RemoveRandTaskInfoNotify_FinishReason_descriptor();
  }
  static inline const ::std::string& FinishReason_Name(FinishReason value) {
    return RemoveRandTaskInfoNotify_FinishReason_Name(value);
  }
  static inline bool FinishReason_Parse(const ::std::string& name,
      FinishReason* value) {
    return RemoveRandTaskInfoNotify_FinishReason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 rand_task_id = 13;
  void clear_rand_task_id();
  static const int kRandTaskIdFieldNumber = 13;
  ::google::protobuf::uint32 rand_task_id() const;
  void set_rand_task_id(::google::protobuf::uint32 value);

  // bool is_succ = 9;
  void clear_is_succ();
  static const int kIsSuccFieldNumber = 9;
  bool is_succ() const;
  void set_is_succ(bool value);

  // .proto.RemoveRandTaskInfoNotify.FinishReason reason = 10;
  void clear_reason();
  static const int kReasonFieldNumber = 10;
  ::proto::RemoveRandTaskInfoNotify_FinishReason reason() const;
  void set_reason(::proto::RemoveRandTaskInfoNotify_FinishReason value);

  // @@protoc_insertion_point(class_scope:proto.RemoveRandTaskInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 rand_task_id_;
  bool is_succ_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakePlayerLevelRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakePlayerLevelRewardReq) */ {
 public:
  TakePlayerLevelRewardReq();
  virtual ~TakePlayerLevelRewardReq();

  TakePlayerLevelRewardReq(const TakePlayerLevelRewardReq& from);

  inline TakePlayerLevelRewardReq& operator=(const TakePlayerLevelRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakePlayerLevelRewardReq(TakePlayerLevelRewardReq&& from) noexcept
    : TakePlayerLevelRewardReq() {
    *this = ::std::move(from);
  }

  inline TakePlayerLevelRewardReq& operator=(TakePlayerLevelRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakePlayerLevelRewardReq& default_instance();

  static inline const TakePlayerLevelRewardReq* internal_default_instance() {
    return reinterpret_cast<const TakePlayerLevelRewardReq*>(
               &_TakePlayerLevelRewardReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(TakePlayerLevelRewardReq* other);
  friend void swap(TakePlayerLevelRewardReq& a, TakePlayerLevelRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakePlayerLevelRewardReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TakePlayerLevelRewardReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakePlayerLevelRewardReq& from);
  void MergeFrom(const TakePlayerLevelRewardReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakePlayerLevelRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 level = 3;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TakePlayerLevelRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 level_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakePlayerLevelRewardRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakePlayerLevelRewardRsp) */ {
 public:
  TakePlayerLevelRewardRsp();
  virtual ~TakePlayerLevelRewardRsp();

  TakePlayerLevelRewardRsp(const TakePlayerLevelRewardRsp& from);

  inline TakePlayerLevelRewardRsp& operator=(const TakePlayerLevelRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakePlayerLevelRewardRsp(TakePlayerLevelRewardRsp&& from) noexcept
    : TakePlayerLevelRewardRsp() {
    *this = ::std::move(from);
  }

  inline TakePlayerLevelRewardRsp& operator=(TakePlayerLevelRewardRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakePlayerLevelRewardRsp& default_instance();

  static inline const TakePlayerLevelRewardRsp* internal_default_instance() {
    return reinterpret_cast<const TakePlayerLevelRewardRsp*>(
               &_TakePlayerLevelRewardRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(TakePlayerLevelRewardRsp* other);
  friend void swap(TakePlayerLevelRewardRsp& a, TakePlayerLevelRewardRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakePlayerLevelRewardRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  TakePlayerLevelRewardRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakePlayerLevelRewardRsp& from);
  void MergeFrom(const TakePlayerLevelRewardRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakePlayerLevelRewardRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 13;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 13;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 level = 6;
  void clear_level();
  static const int kLevelFieldNumber = 6;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 reward_id = 9;
  void clear_reward_id();
  static const int kRewardIdFieldNumber = 9;
  ::google::protobuf::uint32 reward_id() const;
  void set_reward_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TakePlayerLevelRewardRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 reward_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerLevelRewardUpdateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerLevelRewardUpdateNotify) */ {
 public:
  PlayerLevelRewardUpdateNotify();
  virtual ~PlayerLevelRewardUpdateNotify();

  PlayerLevelRewardUpdateNotify(const PlayerLevelRewardUpdateNotify& from);

  inline PlayerLevelRewardUpdateNotify& operator=(const PlayerLevelRewardUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLevelRewardUpdateNotify(PlayerLevelRewardUpdateNotify&& from) noexcept
    : PlayerLevelRewardUpdateNotify() {
    *this = ::std::move(from);
  }

  inline PlayerLevelRewardUpdateNotify& operator=(PlayerLevelRewardUpdateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLevelRewardUpdateNotify& default_instance();

  static inline const PlayerLevelRewardUpdateNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerLevelRewardUpdateNotify*>(
               &_PlayerLevelRewardUpdateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(PlayerLevelRewardUpdateNotify* other);
  friend void swap(PlayerLevelRewardUpdateNotify& a, PlayerLevelRewardUpdateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLevelRewardUpdateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerLevelRewardUpdateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerLevelRewardUpdateNotify& from);
  void MergeFrom(const PlayerLevelRewardUpdateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerLevelRewardUpdateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 level_list = 9;
  int level_list_size() const;
  void clear_level_list();
  static const int kLevelListFieldNumber = 9;
  ::google::protobuf::uint32 level_list(int index) const;
  void set_level_list(int index, ::google::protobuf::uint32 value);
  void add_level_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      level_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_level_list();

  // @@protoc_insertion_point(class_scope:proto.PlayerLevelRewardUpdateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > level_list_;
  mutable int _level_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class GivingRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GivingRecord) */ {
 public:
  GivingRecord();
  virtual ~GivingRecord();

  GivingRecord(const GivingRecord& from);

  inline GivingRecord& operator=(const GivingRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GivingRecord(GivingRecord&& from) noexcept
    : GivingRecord() {
    *this = ::std::move(from);
  }

  inline GivingRecord& operator=(GivingRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GivingRecord& default_instance();

  static inline const GivingRecord* internal_default_instance() {
    return reinterpret_cast<const GivingRecord*>(
               &_GivingRecord_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    67;

  void Swap(GivingRecord* other);
  friend void swap(GivingRecord& a, GivingRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GivingRecord* New() const PROTOBUF_FINAL { return New(NULL); }

  GivingRecord* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GivingRecord& from);
  void MergeFrom(const GivingRecord& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GivingRecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> material_cnt_map = 15;
  int material_cnt_map_size() const;
  void clear_material_cnt_map();
  static const int kMaterialCntMapFieldNumber = 15;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      material_cnt_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_material_cnt_map();

  // uint32 config_id = 2;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 2;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // uint32 giving_id = 3;
  void clear_giving_id();
  static const int kGivingIdFieldNumber = 3;
  ::google::protobuf::uint32 giving_id() const;
  void set_giving_id(::google::protobuf::uint32 value);

  // uint32 group_id = 5;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 5;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // uint32 last_group_id = 6;
  void clear_last_group_id();
  static const int kLastGroupIdFieldNumber = 6;
  ::google::protobuf::uint32 last_group_id() const;
  void set_last_group_id(::google::protobuf::uint32 value);

  // bool is_finished = 9;
  void clear_is_finished();
  static const int kIsFinishedFieldNumber = 9;
  bool is_finished() const;
  void set_is_finished(bool value);

  // bool is_gadget_giving = 8;
  void clear_is_gadget_giving();
  static const int kIsGadgetGivingFieldNumber = 8;
  bool is_gadget_giving() const;
  void set_is_gadget_giving(bool value);

  // @@protoc_insertion_point(class_scope:proto.GivingRecord)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class GivingRecord_MaterialCntMapEntry : public ::google::protobuf::internal::MapEntry<GivingRecord_MaterialCntMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<GivingRecord_MaterialCntMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    GivingRecord_MaterialCntMapEntry();
    GivingRecord_MaterialCntMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const GivingRecord_MaterialCntMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_GivingRecord_MaterialCntMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      GivingRecord_MaterialCntMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > material_cnt_map_;
  private:
  ::google::protobuf::uint32 config_id_;
  ::google::protobuf::uint32 giving_id_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 last_group_id_;
  bool is_finished_;
  bool is_gadget_giving_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GivingRecordNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GivingRecordNotify) */ {
 public:
  GivingRecordNotify();
  virtual ~GivingRecordNotify();

  GivingRecordNotify(const GivingRecordNotify& from);

  inline GivingRecordNotify& operator=(const GivingRecordNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GivingRecordNotify(GivingRecordNotify&& from) noexcept
    : GivingRecordNotify() {
    *this = ::std::move(from);
  }

  inline GivingRecordNotify& operator=(GivingRecordNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GivingRecordNotify& default_instance();

  static inline const GivingRecordNotify* internal_default_instance() {
    return reinterpret_cast<const GivingRecordNotify*>(
               &_GivingRecordNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    68;

  void Swap(GivingRecordNotify* other);
  friend void swap(GivingRecordNotify& a, GivingRecordNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GivingRecordNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GivingRecordNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GivingRecordNotify& from);
  void MergeFrom(const GivingRecordNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GivingRecordNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.GivingRecord giving_record_list = 14;
  int giving_record_list_size() const;
  void clear_giving_record_list();
  static const int kGivingRecordListFieldNumber = 14;
  const ::proto::GivingRecord& giving_record_list(int index) const;
  ::proto::GivingRecord* mutable_giving_record_list(int index);
  ::proto::GivingRecord* add_giving_record_list();
  ::google::protobuf::RepeatedPtrField< ::proto::GivingRecord >*
      mutable_giving_record_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::GivingRecord >&
      giving_record_list() const;

  // @@protoc_insertion_point(class_scope:proto.GivingRecordNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::GivingRecord > giving_record_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GivingRecordChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GivingRecordChangeNotify) */ {
 public:
  GivingRecordChangeNotify();
  virtual ~GivingRecordChangeNotify();

  GivingRecordChangeNotify(const GivingRecordChangeNotify& from);

  inline GivingRecordChangeNotify& operator=(const GivingRecordChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GivingRecordChangeNotify(GivingRecordChangeNotify&& from) noexcept
    : GivingRecordChangeNotify() {
    *this = ::std::move(from);
  }

  inline GivingRecordChangeNotify& operator=(GivingRecordChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GivingRecordChangeNotify& default_instance();

  static inline const GivingRecordChangeNotify* internal_default_instance() {
    return reinterpret_cast<const GivingRecordChangeNotify*>(
               &_GivingRecordChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    69;

  void Swap(GivingRecordChangeNotify* other);
  friend void swap(GivingRecordChangeNotify& a, GivingRecordChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GivingRecordChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GivingRecordChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GivingRecordChangeNotify& from);
  void MergeFrom(const GivingRecordChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GivingRecordChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.GivingRecord giving_record = 15;
  bool has_giving_record() const;
  void clear_giving_record();
  static const int kGivingRecordFieldNumber = 15;
  const ::proto::GivingRecord& giving_record() const;
  ::proto::GivingRecord* mutable_giving_record();
  ::proto::GivingRecord* release_giving_record();
  void set_allocated_giving_record(::proto::GivingRecord* giving_record);

  // bool is_deactive = 11;
  void clear_is_deactive();
  static const int kIsDeactiveFieldNumber = 11;
  bool is_deactive() const;
  void set_is_deactive(bool value);

  // @@protoc_insertion_point(class_scope:proto.GivingRecordChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::GivingRecord* giving_record_;
  bool is_deactive_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class ItemGivingReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ItemGivingReq) */ {
 public:
  ItemGivingReq();
  virtual ~ItemGivingReq();

  ItemGivingReq(const ItemGivingReq& from);

  inline ItemGivingReq& operator=(const ItemGivingReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ItemGivingReq(ItemGivingReq&& from) noexcept
    : ItemGivingReq() {
    *this = ::std::move(from);
  }

  inline ItemGivingReq& operator=(ItemGivingReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemGivingReq& default_instance();

  static inline const ItemGivingReq* internal_default_instance() {
    return reinterpret_cast<const ItemGivingReq*>(
               &_ItemGivingReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    71;

  void Swap(ItemGivingReq* other);
  friend void swap(ItemGivingReq& a, ItemGivingReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ItemGivingReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ItemGivingReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ItemGivingReq& from);
  void MergeFrom(const ItemGivingReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ItemGivingReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef ItemGivingReq_ItemGivingType ItemGivingType;
  static const ItemGivingType QUEST =
    ItemGivingReq_ItemGivingType_QUEST;
  static const ItemGivingType GADGET =
    ItemGivingReq_ItemGivingType_GADGET;
  static inline bool ItemGivingType_IsValid(int value) {
    return ItemGivingReq_ItemGivingType_IsValid(value);
  }
  static const ItemGivingType ItemGivingType_MIN =
    ItemGivingReq_ItemGivingType_ItemGivingType_MIN;
  static const ItemGivingType ItemGivingType_MAX =
    ItemGivingReq_ItemGivingType_ItemGivingType_MAX;
  static const int ItemGivingType_ARRAYSIZE =
    ItemGivingReq_ItemGivingType_ItemGivingType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ItemGivingType_descriptor() {
    return ItemGivingReq_ItemGivingType_descriptor();
  }
  static inline const ::std::string& ItemGivingType_Name(ItemGivingType value) {
    return ItemGivingReq_ItemGivingType_Name(value);
  }
  static inline bool ItemGivingType_Parse(const ::std::string& name,
      ItemGivingType* value) {
    return ItemGivingReq_ItemGivingType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.ItemParam item_param_list = 4;
  int item_param_list_size() const;
  void clear_item_param_list();
  static const int kItemParamListFieldNumber = 4;
  const ::proto::ItemParam& item_param_list(int index) const;
  ::proto::ItemParam* mutable_item_param_list(int index);
  ::proto::ItemParam* add_item_param_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
      mutable_item_param_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
      item_param_list() const;

  // map<uint64, uint32> item_guid_count_map = 15;
  int item_guid_count_map_size() const;
  void clear_item_guid_count_map();
  static const int kItemGuidCountMapFieldNumber = 15;
  const ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >&
      item_guid_count_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >*
      mutable_item_guid_count_map();

  // .proto.ItemGivingReq.ItemGivingType item_giving_type = 2;
  void clear_item_giving_type();
  static const int kItemGivingTypeFieldNumber = 2;
  ::proto::ItemGivingReq_ItemGivingType item_giving_type() const;
  void set_item_giving_type(::proto::ItemGivingReq_ItemGivingType value);

  // uint32 giving_id = 13;
  void clear_giving_id();
  static const int kGivingIdFieldNumber = 13;
  ::google::protobuf::uint32 giving_id() const;
  void set_giving_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ItemGivingReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam > item_param_list_;
  public:
  class ItemGivingReq_ItemGuidCountMapEntry : public ::google::protobuf::internal::MapEntry<ItemGivingReq_ItemGuidCountMapEntry, 
      ::google::protobuf::uint64, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<ItemGivingReq_ItemGuidCountMapEntry, 
      ::google::protobuf::uint64, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    ItemGivingReq_ItemGuidCountMapEntry();
    ItemGivingReq_ItemGuidCountMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const ItemGivingReq_ItemGuidCountMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_ItemGivingReq_ItemGuidCountMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      ItemGivingReq_ItemGuidCountMapEntry,
      ::google::protobuf::uint64, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > item_guid_count_map_;
  private:
  int item_giving_type_;
  ::google::protobuf::uint32 giving_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ItemGivingRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ItemGivingRsp) */ {
 public:
  ItemGivingRsp();
  virtual ~ItemGivingRsp();

  ItemGivingRsp(const ItemGivingRsp& from);

  inline ItemGivingRsp& operator=(const ItemGivingRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ItemGivingRsp(ItemGivingRsp&& from) noexcept
    : ItemGivingRsp() {
    *this = ::std::move(from);
  }

  inline ItemGivingRsp& operator=(ItemGivingRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemGivingRsp& default_instance();

  static inline const ItemGivingRsp* internal_default_instance() {
    return reinterpret_cast<const ItemGivingRsp*>(
               &_ItemGivingRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    72;

  void Swap(ItemGivingRsp* other);
  friend void swap(ItemGivingRsp& a, ItemGivingRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ItemGivingRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ItemGivingRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ItemGivingRsp& from);
  void MergeFrom(const ItemGivingRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ItemGivingRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 giving_group_id = 1;
  void clear_giving_group_id();
  static const int kGivingGroupIdFieldNumber = 1;
  ::google::protobuf::uint32 giving_group_id() const;
  void set_giving_group_id(::google::protobuf::uint32 value);

  // int32 retcode = 3;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 3;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 giving_id = 13;
  void clear_giving_id();
  static const int kGivingIdFieldNumber = 13;
  ::google::protobuf::uint32 giving_id() const;
  void set_giving_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ItemGivingRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 giving_group_id_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 giving_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerCookArgsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerCookArgsReq) */ {
 public:
  PlayerCookArgsReq();
  virtual ~PlayerCookArgsReq();

  PlayerCookArgsReq(const PlayerCookArgsReq& from);

  inline PlayerCookArgsReq& operator=(const PlayerCookArgsReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCookArgsReq(PlayerCookArgsReq&& from) noexcept
    : PlayerCookArgsReq() {
    *this = ::std::move(from);
  }

  inline PlayerCookArgsReq& operator=(PlayerCookArgsReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCookArgsReq& default_instance();

  static inline const PlayerCookArgsReq* internal_default_instance() {
    return reinterpret_cast<const PlayerCookArgsReq*>(
               &_PlayerCookArgsReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    73;

  void Swap(PlayerCookArgsReq* other);
  friend void swap(PlayerCookArgsReq& a, PlayerCookArgsReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCookArgsReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerCookArgsReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerCookArgsReq& from);
  void MergeFrom(const PlayerCookArgsReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerCookArgsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 assist_avatar = 10;
  void clear_assist_avatar();
  static const int kAssistAvatarFieldNumber = 10;
  ::google::protobuf::uint32 assist_avatar() const;
  void set_assist_avatar(::google::protobuf::uint32 value);

  // uint32 recipe_id = 11;
  void clear_recipe_id();
  static const int kRecipeIdFieldNumber = 11;
  ::google::protobuf::uint32 recipe_id() const;
  void set_recipe_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerCookArgsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 assist_avatar_;
  ::google::protobuf::uint32 recipe_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerCookArgsRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerCookArgsRsp) */ {
 public:
  PlayerCookArgsRsp();
  virtual ~PlayerCookArgsRsp();

  PlayerCookArgsRsp(const PlayerCookArgsRsp& from);

  inline PlayerCookArgsRsp& operator=(const PlayerCookArgsRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCookArgsRsp(PlayerCookArgsRsp&& from) noexcept
    : PlayerCookArgsRsp() {
    *this = ::std::move(from);
  }

  inline PlayerCookArgsRsp& operator=(PlayerCookArgsRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCookArgsRsp& default_instance();

  static inline const PlayerCookArgsRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerCookArgsRsp*>(
               &_PlayerCookArgsRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    74;

  void Swap(PlayerCookArgsRsp* other);
  friend void swap(PlayerCookArgsRsp& a, PlayerCookArgsRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCookArgsRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerCookArgsRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerCookArgsRsp& from);
  void MergeFrom(const PlayerCookArgsRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerCookArgsRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 4;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 4;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // float qte_range_ratio = 12;
  void clear_qte_range_ratio();
  static const int kQteRangeRatioFieldNumber = 12;
  float qte_range_ratio() const;
  void set_qte_range_ratio(float value);

  // @@protoc_insertion_point(class_scope:proto.PlayerCookArgsRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  float qte_range_ratio_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerLuaShellNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerLuaShellNotify) */ {
 public:
  PlayerLuaShellNotify();
  virtual ~PlayerLuaShellNotify();

  PlayerLuaShellNotify(const PlayerLuaShellNotify& from);

  inline PlayerLuaShellNotify& operator=(const PlayerLuaShellNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLuaShellNotify(PlayerLuaShellNotify&& from) noexcept
    : PlayerLuaShellNotify() {
    *this = ::std::move(from);
  }

  inline PlayerLuaShellNotify& operator=(PlayerLuaShellNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLuaShellNotify& default_instance();

  static inline const PlayerLuaShellNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerLuaShellNotify*>(
               &_PlayerLuaShellNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    75;

  void Swap(PlayerLuaShellNotify* other);
  friend void swap(PlayerLuaShellNotify& a, PlayerLuaShellNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLuaShellNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerLuaShellNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerLuaShellNotify& from);
  void MergeFrom(const PlayerLuaShellNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerLuaShellNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes lua_shell = 12;
  void clear_lua_shell();
  static const int kLuaShellFieldNumber = 12;
  const ::std::string& lua_shell() const;
  void set_lua_shell(const ::std::string& value);
  #if LANG_CXX11
  void set_lua_shell(::std::string&& value);
  #endif
  void set_lua_shell(const char* value);
  void set_lua_shell(const void* value, size_t size);
  ::std::string* mutable_lua_shell();
  ::std::string* release_lua_shell();
  void set_allocated_lua_shell(::std::string* lua_shell);

  // uint32 use_type = 10;
  void clear_use_type();
  static const int kUseTypeFieldNumber = 10;
  ::google::protobuf::uint32 use_type() const;
  void set_use_type(::google::protobuf::uint32 value);

  // uint32 id = 5;
  void clear_id();
  static const int kIdFieldNumber = 5;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // .proto.LuaShellType shell_type = 7;
  void clear_shell_type();
  static const int kShellTypeFieldNumber = 7;
  ::proto::LuaShellType shell_type() const;
  void set_shell_type(::proto::LuaShellType value);

  // @@protoc_insertion_point(class_scope:proto.PlayerLuaShellNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr lua_shell_;
  ::google::protobuf::uint32 use_type_;
  ::google::protobuf::uint32 id_;
  int shell_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerDisconnectClientNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerDisconnectClientNotify) */ {
 public:
  ServerDisconnectClientNotify();
  virtual ~ServerDisconnectClientNotify();

  ServerDisconnectClientNotify(const ServerDisconnectClientNotify& from);

  inline ServerDisconnectClientNotify& operator=(const ServerDisconnectClientNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerDisconnectClientNotify(ServerDisconnectClientNotify&& from) noexcept
    : ServerDisconnectClientNotify() {
    *this = ::std::move(from);
  }

  inline ServerDisconnectClientNotify& operator=(ServerDisconnectClientNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerDisconnectClientNotify& default_instance();

  static inline const ServerDisconnectClientNotify* internal_default_instance() {
    return reinterpret_cast<const ServerDisconnectClientNotify*>(
               &_ServerDisconnectClientNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    76;

  void Swap(ServerDisconnectClientNotify* other);
  friend void swap(ServerDisconnectClientNotify& a, ServerDisconnectClientNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerDisconnectClientNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerDisconnectClientNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerDisconnectClientNotify& from);
  void MergeFrom(const ServerDisconnectClientNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerDisconnectClientNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 data = 10;
  void clear_data();
  static const int kDataFieldNumber = 10;
  ::google::protobuf::uint32 data() const;
  void set_data(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerDisconnectClientNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 data_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AntiAddictNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AntiAddictNotify) */ {
 public:
  AntiAddictNotify();
  virtual ~AntiAddictNotify();

  AntiAddictNotify(const AntiAddictNotify& from);

  inline AntiAddictNotify& operator=(const AntiAddictNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AntiAddictNotify(AntiAddictNotify&& from) noexcept
    : AntiAddictNotify() {
    *this = ::std::move(from);
  }

  inline AntiAddictNotify& operator=(AntiAddictNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AntiAddictNotify& default_instance();

  static inline const AntiAddictNotify* internal_default_instance() {
    return reinterpret_cast<const AntiAddictNotify*>(
               &_AntiAddictNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    77;

  void Swap(AntiAddictNotify* other);
  friend void swap(AntiAddictNotify& a, AntiAddictNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AntiAddictNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AntiAddictNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AntiAddictNotify& from);
  void MergeFrom(const AntiAddictNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AntiAddictNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg = 3;
  void clear_msg();
  static const int kMsgFieldNumber = 3;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // string level = 5;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  const ::std::string& level() const;
  void set_level(const ::std::string& value);
  #if LANG_CXX11
  void set_level(::std::string&& value);
  #endif
  void set_level(const char* value);
  void set_level(const char* value, size_t size);
  ::std::string* mutable_level();
  ::std::string* release_level();
  void set_allocated_level(::std::string* level);

  // int32 msg_type = 6;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 6;
  ::google::protobuf::int32 msg_type() const;
  void set_msg_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.AntiAddictNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr level_;
  ::google::protobuf::int32 msg_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerForceExitReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerForceExitReq) */ {
 public:
  PlayerForceExitReq();
  virtual ~PlayerForceExitReq();

  PlayerForceExitReq(const PlayerForceExitReq& from);

  inline PlayerForceExitReq& operator=(const PlayerForceExitReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerForceExitReq(PlayerForceExitReq&& from) noexcept
    : PlayerForceExitReq() {
    *this = ::std::move(from);
  }

  inline PlayerForceExitReq& operator=(PlayerForceExitReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerForceExitReq& default_instance();

  static inline const PlayerForceExitReq* internal_default_instance() {
    return reinterpret_cast<const PlayerForceExitReq*>(
               &_PlayerForceExitReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    78;

  void Swap(PlayerForceExitReq* other);
  friend void swap(PlayerForceExitReq& a, PlayerForceExitReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerForceExitReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerForceExitReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerForceExitReq& from);
  void MergeFrom(const PlayerForceExitReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerForceExitReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.PlayerForceExitReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerForceExitRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerForceExitRsp) */ {
 public:
  PlayerForceExitRsp();
  virtual ~PlayerForceExitRsp();

  PlayerForceExitRsp(const PlayerForceExitRsp& from);

  inline PlayerForceExitRsp& operator=(const PlayerForceExitRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerForceExitRsp(PlayerForceExitRsp&& from) noexcept
    : PlayerForceExitRsp() {
    *this = ::std::move(from);
  }

  inline PlayerForceExitRsp& operator=(PlayerForceExitRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerForceExitRsp& default_instance();

  static inline const PlayerForceExitRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerForceExitRsp*>(
               &_PlayerForceExitRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    79;

  void Swap(PlayerForceExitRsp* other);
  friend void swap(PlayerForceExitRsp& a, PlayerForceExitRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerForceExitRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerForceExitRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerForceExitRsp& from);
  void MergeFrom(const PlayerForceExitRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerForceExitRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 15;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 15;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerForceExitRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerInjectFixNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerInjectFixNotify) */ {
 public:
  PlayerInjectFixNotify();
  virtual ~PlayerInjectFixNotify();

  PlayerInjectFixNotify(const PlayerInjectFixNotify& from);

  inline PlayerInjectFixNotify& operator=(const PlayerInjectFixNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerInjectFixNotify(PlayerInjectFixNotify&& from) noexcept
    : PlayerInjectFixNotify() {
    *this = ::std::move(from);
  }

  inline PlayerInjectFixNotify& operator=(PlayerInjectFixNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerInjectFixNotify& default_instance();

  static inline const PlayerInjectFixNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerInjectFixNotify*>(
               &_PlayerInjectFixNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    80;

  void Swap(PlayerInjectFixNotify* other);
  friend void swap(PlayerInjectFixNotify& a, PlayerInjectFixNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerInjectFixNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerInjectFixNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerInjectFixNotify& from);
  void MergeFrom(const PlayerInjectFixNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerInjectFixNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes inject_fix = 10;
  void clear_inject_fix();
  static const int kInjectFixFieldNumber = 10;
  const ::std::string& inject_fix() const;
  void set_inject_fix(const ::std::string& value);
  #if LANG_CXX11
  void set_inject_fix(::std::string&& value);
  #endif
  void set_inject_fix(const char* value);
  void set_inject_fix(const void* value, size_t size);
  ::std::string* mutable_inject_fix();
  ::std::string* release_inject_fix();
  void set_allocated_inject_fix(::std::string* inject_fix);

  // uint32 id = 13;
  void clear_id();
  static const int kIdFieldNumber = 13;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerInjectFixNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr inject_fix_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TaskVar : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TaskVar) */ {
 public:
  TaskVar();
  virtual ~TaskVar();

  TaskVar(const TaskVar& from);

  inline TaskVar& operator=(const TaskVar& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TaskVar(TaskVar&& from) noexcept
    : TaskVar() {
    *this = ::std::move(from);
  }

  inline TaskVar& operator=(TaskVar&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskVar& default_instance();

  static inline const TaskVar* internal_default_instance() {
    return reinterpret_cast<const TaskVar*>(
               &_TaskVar_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    81;

  void Swap(TaskVar* other);
  friend void swap(TaskVar& a, TaskVar& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TaskVar* New() const PROTOBUF_FINAL { return New(NULL); }

  TaskVar* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TaskVar& from);
  void MergeFrom(const TaskVar& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TaskVar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 value_list = 6;
  int value_list_size() const;
  void clear_value_list();
  static const int kValueListFieldNumber = 6;
  ::google::protobuf::int32 value_list(int index) const;
  void set_value_list(int index, ::google::protobuf::int32 value);
  void add_value_list(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value_list();

  // uint32 key = 8;
  void clear_key();
  static const int kKeyFieldNumber = 8;
  ::google::protobuf::uint32 key() const;
  void set_key(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TaskVar)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value_list_;
  mutable int _value_list_cached_byte_size_;
  ::google::protobuf::uint32 key_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TaskVarNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TaskVarNotify) */ {
 public:
  TaskVarNotify();
  virtual ~TaskVarNotify();

  TaskVarNotify(const TaskVarNotify& from);

  inline TaskVarNotify& operator=(const TaskVarNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TaskVarNotify(TaskVarNotify&& from) noexcept
    : TaskVarNotify() {
    *this = ::std::move(from);
  }

  inline TaskVarNotify& operator=(TaskVarNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskVarNotify& default_instance();

  static inline const TaskVarNotify* internal_default_instance() {
    return reinterpret_cast<const TaskVarNotify*>(
               &_TaskVarNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    82;

  void Swap(TaskVarNotify* other);
  friend void swap(TaskVarNotify& a, TaskVarNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TaskVarNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  TaskVarNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TaskVarNotify& from);
  void MergeFrom(const TaskVarNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TaskVarNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.TaskVar task_var_list = 7;
  int task_var_list_size() const;
  void clear_task_var_list();
  static const int kTaskVarListFieldNumber = 7;
  const ::proto::TaskVar& task_var_list(int index) const;
  ::proto::TaskVar* mutable_task_var_list(int index);
  ::proto::TaskVar* add_task_var_list();
  ::google::protobuf::RepeatedPtrField< ::proto::TaskVar >*
      mutable_task_var_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::TaskVar >&
      task_var_list() const;

  // @@protoc_insertion_point(class_scope:proto.TaskVarNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::TaskVar > task_var_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientLockGameTimeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClientLockGameTimeNotify) */ {
 public:
  ClientLockGameTimeNotify();
  virtual ~ClientLockGameTimeNotify();

  ClientLockGameTimeNotify(const ClientLockGameTimeNotify& from);

  inline ClientLockGameTimeNotify& operator=(const ClientLockGameTimeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientLockGameTimeNotify(ClientLockGameTimeNotify&& from) noexcept
    : ClientLockGameTimeNotify() {
    *this = ::std::move(from);
  }

  inline ClientLockGameTimeNotify& operator=(ClientLockGameTimeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientLockGameTimeNotify& default_instance();

  static inline const ClientLockGameTimeNotify* internal_default_instance() {
    return reinterpret_cast<const ClientLockGameTimeNotify*>(
               &_ClientLockGameTimeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    83;

  void Swap(ClientLockGameTimeNotify* other);
  friend void swap(ClientLockGameTimeNotify& a, ClientLockGameTimeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientLockGameTimeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientLockGameTimeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientLockGameTimeNotify& from);
  void MergeFrom(const ClientLockGameTimeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientLockGameTimeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_lock = 5;
  void clear_is_lock();
  static const int kIsLockFieldNumber = 5;
  bool is_lock() const;
  void set_is_lock(bool value);

  // @@protoc_insertion_point(class_scope:proto.ClientLockGameTimeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_lock_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetNextResourceInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetNextResourceInfoReq) */ {
 public:
  GetNextResourceInfoReq();
  virtual ~GetNextResourceInfoReq();

  GetNextResourceInfoReq(const GetNextResourceInfoReq& from);

  inline GetNextResourceInfoReq& operator=(const GetNextResourceInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetNextResourceInfoReq(GetNextResourceInfoReq&& from) noexcept
    : GetNextResourceInfoReq() {
    *this = ::std::move(from);
  }

  inline GetNextResourceInfoReq& operator=(GetNextResourceInfoReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNextResourceInfoReq& default_instance();

  static inline const GetNextResourceInfoReq* internal_default_instance() {
    return reinterpret_cast<const GetNextResourceInfoReq*>(
               &_GetNextResourceInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    84;

  void Swap(GetNextResourceInfoReq* other);
  friend void swap(GetNextResourceInfoReq& a, GetNextResourceInfoReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetNextResourceInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetNextResourceInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetNextResourceInfoReq& from);
  void MergeFrom(const GetNextResourceInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetNextResourceInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.GetNextResourceInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetNextResourceInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetNextResourceInfoRsp) */ {
 public:
  GetNextResourceInfoRsp();
  virtual ~GetNextResourceInfoRsp();

  GetNextResourceInfoRsp(const GetNextResourceInfoRsp& from);

  inline GetNextResourceInfoRsp& operator=(const GetNextResourceInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetNextResourceInfoRsp(GetNextResourceInfoRsp&& from) noexcept
    : GetNextResourceInfoRsp() {
    *this = ::std::move(from);
  }

  inline GetNextResourceInfoRsp& operator=(GetNextResourceInfoRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNextResourceInfoRsp& default_instance();

  static inline const GetNextResourceInfoRsp* internal_default_instance() {
    return reinterpret_cast<const GetNextResourceInfoRsp*>(
               &_GetNextResourceInfoRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    85;

  void Swap(GetNextResourceInfoRsp* other);
  friend void swap(GetNextResourceInfoRsp& a, GetNextResourceInfoRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetNextResourceInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetNextResourceInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetNextResourceInfoRsp& from);
  void MergeFrom(const GetNextResourceInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetNextResourceInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string next_resource_url = 14;
  void clear_next_resource_url();
  static const int kNextResourceUrlFieldNumber = 14;
  const ::std::string& next_resource_url() const;
  void set_next_resource_url(const ::std::string& value);
  #if LANG_CXX11
  void set_next_resource_url(::std::string&& value);
  #endif
  void set_next_resource_url(const char* value);
  void set_next_resource_url(const char* value, size_t size);
  ::std::string* mutable_next_resource_url();
  ::std::string* release_next_resource_url();
  void set_allocated_next_resource_url(::std::string* next_resource_url);

  // .proto.ResVersionConfig next_res_version_config = 2;
  bool has_next_res_version_config() const;
  void clear_next_res_version_config();
  static const int kNextResVersionConfigFieldNumber = 2;
  const ::proto::ResVersionConfig& next_res_version_config() const;
  ::proto::ResVersionConfig* mutable_next_res_version_config();
  ::proto::ResVersionConfig* release_next_res_version_config();
  void set_allocated_next_res_version_config(::proto::ResVersionConfig* next_res_version_config);

  // int32 retcode = 12;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 12;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetNextResourceInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr next_resource_url_;
  ::proto::ResVersionConfig* next_res_version_config_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AdjustWorldLevelReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AdjustWorldLevelReq) */ {
 public:
  AdjustWorldLevelReq();
  virtual ~AdjustWorldLevelReq();

  AdjustWorldLevelReq(const AdjustWorldLevelReq& from);

  inline AdjustWorldLevelReq& operator=(const AdjustWorldLevelReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AdjustWorldLevelReq(AdjustWorldLevelReq&& from) noexcept
    : AdjustWorldLevelReq() {
    *this = ::std::move(from);
  }

  inline AdjustWorldLevelReq& operator=(AdjustWorldLevelReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AdjustWorldLevelReq& default_instance();

  static inline const AdjustWorldLevelReq* internal_default_instance() {
    return reinterpret_cast<const AdjustWorldLevelReq*>(
               &_AdjustWorldLevelReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    86;

  void Swap(AdjustWorldLevelReq* other);
  friend void swap(AdjustWorldLevelReq& a, AdjustWorldLevelReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AdjustWorldLevelReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AdjustWorldLevelReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AdjustWorldLevelReq& from);
  void MergeFrom(const AdjustWorldLevelReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AdjustWorldLevelReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 expect_world_level = 8;
  void clear_expect_world_level();
  static const int kExpectWorldLevelFieldNumber = 8;
  ::google::protobuf::uint32 expect_world_level() const;
  void set_expect_world_level(::google::protobuf::uint32 value);

  // uint32 cur_world_level = 9;
  void clear_cur_world_level();
  static const int kCurWorldLevelFieldNumber = 9;
  ::google::protobuf::uint32 cur_world_level() const;
  void set_cur_world_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AdjustWorldLevelReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 expect_world_level_;
  ::google::protobuf::uint32 cur_world_level_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AdjustWorldLevelRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AdjustWorldLevelRsp) */ {
 public:
  AdjustWorldLevelRsp();
  virtual ~AdjustWorldLevelRsp();

  AdjustWorldLevelRsp(const AdjustWorldLevelRsp& from);

  inline AdjustWorldLevelRsp& operator=(const AdjustWorldLevelRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AdjustWorldLevelRsp(AdjustWorldLevelRsp&& from) noexcept
    : AdjustWorldLevelRsp() {
    *this = ::std::move(from);
  }

  inline AdjustWorldLevelRsp& operator=(AdjustWorldLevelRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AdjustWorldLevelRsp& default_instance();

  static inline const AdjustWorldLevelRsp* internal_default_instance() {
    return reinterpret_cast<const AdjustWorldLevelRsp*>(
               &_AdjustWorldLevelRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    87;

  void Swap(AdjustWorldLevelRsp* other);
  friend void swap(AdjustWorldLevelRsp& a, AdjustWorldLevelRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AdjustWorldLevelRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AdjustWorldLevelRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AdjustWorldLevelRsp& from);
  void MergeFrom(const AdjustWorldLevelRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AdjustWorldLevelRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 cd_over_time = 15;
  void clear_cd_over_time();
  static const int kCdOverTimeFieldNumber = 15;
  ::google::protobuf::uint32 cd_over_time() const;
  void set_cd_over_time(::google::protobuf::uint32 value);

  // int32 retcode = 13;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 13;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 after_world_level = 14;
  void clear_after_world_level();
  static const int kAfterWorldLevelFieldNumber = 14;
  ::google::protobuf::uint32 after_world_level() const;
  void set_after_world_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AdjustWorldLevelRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 cd_over_time_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 after_world_level_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DailyTaskFilterCityReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DailyTaskFilterCityReq) */ {
 public:
  DailyTaskFilterCityReq();
  virtual ~DailyTaskFilterCityReq();

  DailyTaskFilterCityReq(const DailyTaskFilterCityReq& from);

  inline DailyTaskFilterCityReq& operator=(const DailyTaskFilterCityReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DailyTaskFilterCityReq(DailyTaskFilterCityReq&& from) noexcept
    : DailyTaskFilterCityReq() {
    *this = ::std::move(from);
  }

  inline DailyTaskFilterCityReq& operator=(DailyTaskFilterCityReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskFilterCityReq& default_instance();

  static inline const DailyTaskFilterCityReq* internal_default_instance() {
    return reinterpret_cast<const DailyTaskFilterCityReq*>(
               &_DailyTaskFilterCityReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    88;

  void Swap(DailyTaskFilterCityReq* other);
  friend void swap(DailyTaskFilterCityReq& a, DailyTaskFilterCityReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DailyTaskFilterCityReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DailyTaskFilterCityReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DailyTaskFilterCityReq& from);
  void MergeFrom(const DailyTaskFilterCityReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DailyTaskFilterCityReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 city_id = 8;
  void clear_city_id();
  static const int kCityIdFieldNumber = 8;
  ::google::protobuf::uint32 city_id() const;
  void set_city_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DailyTaskFilterCityReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 city_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DailyTaskFilterCityRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DailyTaskFilterCityRsp) */ {
 public:
  DailyTaskFilterCityRsp();
  virtual ~DailyTaskFilterCityRsp();

  DailyTaskFilterCityRsp(const DailyTaskFilterCityRsp& from);

  inline DailyTaskFilterCityRsp& operator=(const DailyTaskFilterCityRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DailyTaskFilterCityRsp(DailyTaskFilterCityRsp&& from) noexcept
    : DailyTaskFilterCityRsp() {
    *this = ::std::move(from);
  }

  inline DailyTaskFilterCityRsp& operator=(DailyTaskFilterCityRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskFilterCityRsp& default_instance();

  static inline const DailyTaskFilterCityRsp* internal_default_instance() {
    return reinterpret_cast<const DailyTaskFilterCityRsp*>(
               &_DailyTaskFilterCityRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    89;

  void Swap(DailyTaskFilterCityRsp* other);
  friend void swap(DailyTaskFilterCityRsp& a, DailyTaskFilterCityRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DailyTaskFilterCityRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DailyTaskFilterCityRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DailyTaskFilterCityRsp& from);
  void MergeFrom(const DailyTaskFilterCityRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DailyTaskFilterCityRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 5;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 5;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 city_id = 9;
  void clear_city_id();
  static const int kCityIdFieldNumber = 9;
  ::google::protobuf::uint32 city_id() const;
  void set_city_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DailyTaskFilterCityRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 city_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DailyTaskUnlockedCitiesNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DailyTaskUnlockedCitiesNotify) */ {
 public:
  DailyTaskUnlockedCitiesNotify();
  virtual ~DailyTaskUnlockedCitiesNotify();

  DailyTaskUnlockedCitiesNotify(const DailyTaskUnlockedCitiesNotify& from);

  inline DailyTaskUnlockedCitiesNotify& operator=(const DailyTaskUnlockedCitiesNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DailyTaskUnlockedCitiesNotify(DailyTaskUnlockedCitiesNotify&& from) noexcept
    : DailyTaskUnlockedCitiesNotify() {
    *this = ::std::move(from);
  }

  inline DailyTaskUnlockedCitiesNotify& operator=(DailyTaskUnlockedCitiesNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskUnlockedCitiesNotify& default_instance();

  static inline const DailyTaskUnlockedCitiesNotify* internal_default_instance() {
    return reinterpret_cast<const DailyTaskUnlockedCitiesNotify*>(
               &_DailyTaskUnlockedCitiesNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    90;

  void Swap(DailyTaskUnlockedCitiesNotify* other);
  friend void swap(DailyTaskUnlockedCitiesNotify& a, DailyTaskUnlockedCitiesNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DailyTaskUnlockedCitiesNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  DailyTaskUnlockedCitiesNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DailyTaskUnlockedCitiesNotify& from);
  void MergeFrom(const DailyTaskUnlockedCitiesNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DailyTaskUnlockedCitiesNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 unlocked_city_list = 12;
  int unlocked_city_list_size() const;
  void clear_unlocked_city_list();
  static const int kUnlockedCityListFieldNumber = 12;
  ::google::protobuf::uint32 unlocked_city_list(int index) const;
  void set_unlocked_city_list(int index, ::google::protobuf::uint32 value);
  void add_unlocked_city_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unlocked_city_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unlocked_city_list();

  // @@protoc_insertion_point(class_scope:proto.DailyTaskUnlockedCitiesNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unlocked_city_list_;
  mutable int _unlocked_city_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExclusiveRuleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ExclusiveRuleInfo) */ {
 public:
  ExclusiveRuleInfo();
  virtual ~ExclusiveRuleInfo();

  ExclusiveRuleInfo(const ExclusiveRuleInfo& from);

  inline ExclusiveRuleInfo& operator=(const ExclusiveRuleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExclusiveRuleInfo(ExclusiveRuleInfo&& from) noexcept
    : ExclusiveRuleInfo() {
    *this = ::std::move(from);
  }

  inline ExclusiveRuleInfo& operator=(ExclusiveRuleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExclusiveRuleInfo& default_instance();

  static inline const ExclusiveRuleInfo* internal_default_instance() {
    return reinterpret_cast<const ExclusiveRuleInfo*>(
               &_ExclusiveRuleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    91;

  void Swap(ExclusiveRuleInfo* other);
  friend void swap(ExclusiveRuleInfo& a, ExclusiveRuleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExclusiveRuleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ExclusiveRuleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExclusiveRuleInfo& from);
  void MergeFrom(const ExclusiveRuleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExclusiveRuleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 object_id_list = 1;
  int object_id_list_size() const;
  void clear_object_id_list();
  static const int kObjectIdListFieldNumber = 1;
  ::google::protobuf::uint32 object_id_list(int index) const;
  void set_object_id_list(int index, ::google::protobuf::uint32 value);
  void add_object_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      object_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_object_id_list();

  // uint32 rule_type = 10;
  void clear_rule_type();
  static const int kRuleTypeFieldNumber = 10;
  ::google::protobuf::uint32 rule_type() const;
  void set_rule_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ExclusiveRuleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > object_id_list_;
  mutable int _object_id_list_cached_byte_size_;
  ::google::protobuf::uint32 rule_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExclusiveRuleNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ExclusiveRuleNotify) */ {
 public:
  ExclusiveRuleNotify();
  virtual ~ExclusiveRuleNotify();

  ExclusiveRuleNotify(const ExclusiveRuleNotify& from);

  inline ExclusiveRuleNotify& operator=(const ExclusiveRuleNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExclusiveRuleNotify(ExclusiveRuleNotify&& from) noexcept
    : ExclusiveRuleNotify() {
    *this = ::std::move(from);
  }

  inline ExclusiveRuleNotify& operator=(ExclusiveRuleNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExclusiveRuleNotify& default_instance();

  static inline const ExclusiveRuleNotify* internal_default_instance() {
    return reinterpret_cast<const ExclusiveRuleNotify*>(
               &_ExclusiveRuleNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    92;

  void Swap(ExclusiveRuleNotify* other);
  friend void swap(ExclusiveRuleNotify& a, ExclusiveRuleNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExclusiveRuleNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ExclusiveRuleNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExclusiveRuleNotify& from);
  void MergeFrom(const ExclusiveRuleNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExclusiveRuleNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ExclusiveRuleInfo rule_info_list = 5;
  int rule_info_list_size() const;
  void clear_rule_info_list();
  static const int kRuleInfoListFieldNumber = 5;
  const ::proto::ExclusiveRuleInfo& rule_info_list(int index) const;
  ::proto::ExclusiveRuleInfo* mutable_rule_info_list(int index);
  ::proto::ExclusiveRuleInfo* add_rule_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ExclusiveRuleInfo >*
      mutable_rule_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ExclusiveRuleInfo >&
      rule_info_list() const;

  // @@protoc_insertion_point(class_scope:proto.ExclusiveRuleNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ExclusiveRuleInfo > rule_info_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CompoundUnlockNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CompoundUnlockNotify) */ {
 public:
  CompoundUnlockNotify();
  virtual ~CompoundUnlockNotify();

  CompoundUnlockNotify(const CompoundUnlockNotify& from);

  inline CompoundUnlockNotify& operator=(const CompoundUnlockNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CompoundUnlockNotify(CompoundUnlockNotify&& from) noexcept
    : CompoundUnlockNotify() {
    *this = ::std::move(from);
  }

  inline CompoundUnlockNotify& operator=(CompoundUnlockNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CompoundUnlockNotify& default_instance();

  static inline const CompoundUnlockNotify* internal_default_instance() {
    return reinterpret_cast<const CompoundUnlockNotify*>(
               &_CompoundUnlockNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    93;

  void Swap(CompoundUnlockNotify* other);
  friend void swap(CompoundUnlockNotify& a, CompoundUnlockNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CompoundUnlockNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CompoundUnlockNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CompoundUnlockNotify& from);
  void MergeFrom(const CompoundUnlockNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CompoundUnlockNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 compound_id = 3;
  void clear_compound_id();
  static const int kCompoundIdFieldNumber = 3;
  ::google::protobuf::uint32 compound_id() const;
  void set_compound_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CompoundUnlockNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 compound_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameplayRecommendationSkillRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GameplayRecommendationSkillRequest) */ {
 public:
  GameplayRecommendationSkillRequest();
  virtual ~GameplayRecommendationSkillRequest();

  GameplayRecommendationSkillRequest(const GameplayRecommendationSkillRequest& from);

  inline GameplayRecommendationSkillRequest& operator=(const GameplayRecommendationSkillRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameplayRecommendationSkillRequest(GameplayRecommendationSkillRequest&& from) noexcept
    : GameplayRecommendationSkillRequest() {
    *this = ::std::move(from);
  }

  inline GameplayRecommendationSkillRequest& operator=(GameplayRecommendationSkillRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameplayRecommendationSkillRequest& default_instance();

  static inline const GameplayRecommendationSkillRequest* internal_default_instance() {
    return reinterpret_cast<const GameplayRecommendationSkillRequest*>(
               &_GameplayRecommendationSkillRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    94;

  void Swap(GameplayRecommendationSkillRequest* other);
  friend void swap(GameplayRecommendationSkillRequest& a, GameplayRecommendationSkillRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameplayRecommendationSkillRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GameplayRecommendationSkillRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameplayRecommendationSkillRequest& from);
  void MergeFrom(const GameplayRecommendationSkillRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameplayRecommendationSkillRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 skill_depot_id = 1;
  void clear_skill_depot_id();
  static const int kSkillDepotIdFieldNumber = 1;
  ::google::protobuf::uint32 skill_depot_id() const;
  void set_skill_depot_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GameplayRecommendationSkillRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 skill_depot_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameplayRecommendationReliquaryRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GameplayRecommendationReliquaryRequest) */ {
 public:
  GameplayRecommendationReliquaryRequest();
  virtual ~GameplayRecommendationReliquaryRequest();

  GameplayRecommendationReliquaryRequest(const GameplayRecommendationReliquaryRequest& from);

  inline GameplayRecommendationReliquaryRequest& operator=(const GameplayRecommendationReliquaryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameplayRecommendationReliquaryRequest(GameplayRecommendationReliquaryRequest&& from) noexcept
    : GameplayRecommendationReliquaryRequest() {
    *this = ::std::move(from);
  }

  inline GameplayRecommendationReliquaryRequest& operator=(GameplayRecommendationReliquaryRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameplayRecommendationReliquaryRequest& default_instance();

  static inline const GameplayRecommendationReliquaryRequest* internal_default_instance() {
    return reinterpret_cast<const GameplayRecommendationReliquaryRequest*>(
               &_GameplayRecommendationReliquaryRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    95;

  void Swap(GameplayRecommendationReliquaryRequest* other);
  friend void swap(GameplayRecommendationReliquaryRequest& a, GameplayRecommendationReliquaryRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameplayRecommendationReliquaryRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GameplayRecommendationReliquaryRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameplayRecommendationReliquaryRequest& from);
  void MergeFrom(const GameplayRecommendationReliquaryRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameplayRecommendationReliquaryRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 equip_type = 6;
  void clear_equip_type();
  static const int kEquipTypeFieldNumber = 6;
  ::google::protobuf::uint32 equip_type() const;
  void set_equip_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GameplayRecommendationReliquaryRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 equip_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameplayRecommendationElementReliquaryRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GameplayRecommendationElementReliquaryRequest) */ {
 public:
  GameplayRecommendationElementReliquaryRequest();
  virtual ~GameplayRecommendationElementReliquaryRequest();

  GameplayRecommendationElementReliquaryRequest(const GameplayRecommendationElementReliquaryRequest& from);

  inline GameplayRecommendationElementReliquaryRequest& operator=(const GameplayRecommendationElementReliquaryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameplayRecommendationElementReliquaryRequest(GameplayRecommendationElementReliquaryRequest&& from) noexcept
    : GameplayRecommendationElementReliquaryRequest() {
    *this = ::std::move(from);
  }

  inline GameplayRecommendationElementReliquaryRequest& operator=(GameplayRecommendationElementReliquaryRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameplayRecommendationElementReliquaryRequest& default_instance();

  static inline const GameplayRecommendationElementReliquaryRequest* internal_default_instance() {
    return reinterpret_cast<const GameplayRecommendationElementReliquaryRequest*>(
               &_GameplayRecommendationElementReliquaryRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    96;

  void Swap(GameplayRecommendationElementReliquaryRequest* other);
  friend void swap(GameplayRecommendationElementReliquaryRequest& a, GameplayRecommendationElementReliquaryRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameplayRecommendationElementReliquaryRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GameplayRecommendationElementReliquaryRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameplayRecommendationElementReliquaryRequest& from);
  void MergeFrom(const GameplayRecommendationElementReliquaryRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameplayRecommendationElementReliquaryRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 equip_type = 9;
  void clear_equip_type();
  static const int kEquipTypeFieldNumber = 9;
  ::google::protobuf::uint32 equip_type() const;
  void set_equip_type(::google::protobuf::uint32 value);

  // uint32 element_type = 12;
  void clear_element_type();
  static const int kElementTypeFieldNumber = 12;
  ::google::protobuf::uint32 element_type() const;
  void set_element_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GameplayRecommendationElementReliquaryRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 equip_type_;
  ::google::protobuf::uint32 element_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetGameplayRecommendationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetGameplayRecommendationReq) */ {
 public:
  GetGameplayRecommendationReq();
  virtual ~GetGameplayRecommendationReq();

  GetGameplayRecommendationReq(const GetGameplayRecommendationReq& from);

  inline GetGameplayRecommendationReq& operator=(const GetGameplayRecommendationReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetGameplayRecommendationReq(GetGameplayRecommendationReq&& from) noexcept
    : GetGameplayRecommendationReq() {
    *this = ::std::move(from);
  }

  inline GetGameplayRecommendationReq& operator=(GetGameplayRecommendationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGameplayRecommendationReq& default_instance();

  enum DetailCase {
    kSkillRequest = 553,
    kReliquaryRequest = 1993,
    kElementReliquaryRequest = 1489,
    DETAIL_NOT_SET = 0,
  };

  static inline const GetGameplayRecommendationReq* internal_default_instance() {
    return reinterpret_cast<const GetGameplayRecommendationReq*>(
               &_GetGameplayRecommendationReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    97;

  void Swap(GetGameplayRecommendationReq* other);
  friend void swap(GetGameplayRecommendationReq& a, GetGameplayRecommendationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetGameplayRecommendationReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetGameplayRecommendationReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetGameplayRecommendationReq& from);
  void MergeFrom(const GetGameplayRecommendationReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetGameplayRecommendationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 avatar_id = 9;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 9;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // .proto.GameplayRecommendationSkillRequest skill_request = 553;
  bool has_skill_request() const;
  void clear_skill_request();
  static const int kSkillRequestFieldNumber = 553;
  const ::proto::GameplayRecommendationSkillRequest& skill_request() const;
  ::proto::GameplayRecommendationSkillRequest* mutable_skill_request();
  ::proto::GameplayRecommendationSkillRequest* release_skill_request();
  void set_allocated_skill_request(::proto::GameplayRecommendationSkillRequest* skill_request);

  // .proto.GameplayRecommendationReliquaryRequest reliquary_request = 1993;
  bool has_reliquary_request() const;
  void clear_reliquary_request();
  static const int kReliquaryRequestFieldNumber = 1993;
  const ::proto::GameplayRecommendationReliquaryRequest& reliquary_request() const;
  ::proto::GameplayRecommendationReliquaryRequest* mutable_reliquary_request();
  ::proto::GameplayRecommendationReliquaryRequest* release_reliquary_request();
  void set_allocated_reliquary_request(::proto::GameplayRecommendationReliquaryRequest* reliquary_request);

  // .proto.GameplayRecommendationElementReliquaryRequest element_reliquary_request = 1489;
  bool has_element_reliquary_request() const;
  void clear_element_reliquary_request();
  static const int kElementReliquaryRequestFieldNumber = 1489;
  const ::proto::GameplayRecommendationElementReliquaryRequest& element_reliquary_request() const;
  ::proto::GameplayRecommendationElementReliquaryRequest* mutable_element_reliquary_request();
  ::proto::GameplayRecommendationElementReliquaryRequest* release_element_reliquary_request();
  void set_allocated_element_reliquary_request(::proto::GameplayRecommendationElementReliquaryRequest* element_reliquary_request);

  DetailCase detail_case() const;
  // @@protoc_insertion_point(class_scope:proto.GetGameplayRecommendationReq)
 private:
  void set_has_skill_request();
  void set_has_reliquary_request();
  void set_has_element_reliquary_request();

  inline bool has_detail() const;
  void clear_detail();
  inline void clear_has_detail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 avatar_id_;
  union DetailUnion {
    DetailUnion() {}
    ::proto::GameplayRecommendationSkillRequest* skill_request_;
    ::proto::GameplayRecommendationReliquaryRequest* reliquary_request_;
    ::proto::GameplayRecommendationElementReliquaryRequest* element_reliquary_request_;
  } detail_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameplayRecommendationSkillResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GameplayRecommendationSkillResponse) */ {
 public:
  GameplayRecommendationSkillResponse();
  virtual ~GameplayRecommendationSkillResponse();

  GameplayRecommendationSkillResponse(const GameplayRecommendationSkillResponse& from);

  inline GameplayRecommendationSkillResponse& operator=(const GameplayRecommendationSkillResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameplayRecommendationSkillResponse(GameplayRecommendationSkillResponse&& from) noexcept
    : GameplayRecommendationSkillResponse() {
    *this = ::std::move(from);
  }

  inline GameplayRecommendationSkillResponse& operator=(GameplayRecommendationSkillResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameplayRecommendationSkillResponse& default_instance();

  static inline const GameplayRecommendationSkillResponse* internal_default_instance() {
    return reinterpret_cast<const GameplayRecommendationSkillResponse*>(
               &_GameplayRecommendationSkillResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    98;

  void Swap(GameplayRecommendationSkillResponse* other);
  friend void swap(GameplayRecommendationSkillResponse& a, GameplayRecommendationSkillResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameplayRecommendationSkillResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GameplayRecommendationSkillResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameplayRecommendationSkillResponse& from);
  void MergeFrom(const GameplayRecommendationSkillResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameplayRecommendationSkillResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 skill_id_list = 9;
  int skill_id_list_size() const;
  void clear_skill_id_list();
  static const int kSkillIdListFieldNumber = 9;
  ::google::protobuf::uint32 skill_id_list(int index) const;
  void set_skill_id_list(int index, ::google::protobuf::uint32 value);
  void add_skill_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skill_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skill_id_list();

  // uint32 skill_depot_id = 13;
  void clear_skill_depot_id();
  static const int kSkillDepotIdFieldNumber = 13;
  ::google::protobuf::uint32 skill_depot_id() const;
  void set_skill_depot_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GameplayRecommendationSkillResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skill_id_list_;
  mutable int _skill_id_list_cached_byte_size_;
  ::google::protobuf::uint32 skill_depot_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameplayRecommendationReliquaryMainPropData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GameplayRecommendationReliquaryMainPropData) */ {
 public:
  GameplayRecommendationReliquaryMainPropData();
  virtual ~GameplayRecommendationReliquaryMainPropData();

  GameplayRecommendationReliquaryMainPropData(const GameplayRecommendationReliquaryMainPropData& from);

  inline GameplayRecommendationReliquaryMainPropData& operator=(const GameplayRecommendationReliquaryMainPropData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameplayRecommendationReliquaryMainPropData(GameplayRecommendationReliquaryMainPropData&& from) noexcept
    : GameplayRecommendationReliquaryMainPropData() {
    *this = ::std::move(from);
  }

  inline GameplayRecommendationReliquaryMainPropData& operator=(GameplayRecommendationReliquaryMainPropData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameplayRecommendationReliquaryMainPropData& default_instance();

  static inline const GameplayRecommendationReliquaryMainPropData* internal_default_instance() {
    return reinterpret_cast<const GameplayRecommendationReliquaryMainPropData*>(
               &_GameplayRecommendationReliquaryMainPropData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    99;

  void Swap(GameplayRecommendationReliquaryMainPropData* other);
  friend void swap(GameplayRecommendationReliquaryMainPropData& a, GameplayRecommendationReliquaryMainPropData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameplayRecommendationReliquaryMainPropData* New() const PROTOBUF_FINAL { return New(NULL); }

  GameplayRecommendationReliquaryMainPropData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameplayRecommendationReliquaryMainPropData& from);
  void MergeFrom(const GameplayRecommendationReliquaryMainPropData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameplayRecommendationReliquaryMainPropData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 permillage = 1;
  void clear_permillage();
  static const int kPermillageFieldNumber = 1;
  ::google::protobuf::uint32 permillage() const;
  void set_permillage(::google::protobuf::uint32 value);

  // uint32 main_prop_id = 12;
  void clear_main_prop_id();
  static const int kMainPropIdFieldNumber = 12;
  ::google::protobuf::uint32 main_prop_id() const;
  void set_main_prop_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GameplayRecommendationReliquaryMainPropData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 permillage_;
  ::google::protobuf::uint32 main_prop_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameplayRecommendationReliquaryResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GameplayRecommendationReliquaryResponse) */ {
 public:
  GameplayRecommendationReliquaryResponse();
  virtual ~GameplayRecommendationReliquaryResponse();

  GameplayRecommendationReliquaryResponse(const GameplayRecommendationReliquaryResponse& from);

  inline GameplayRecommendationReliquaryResponse& operator=(const GameplayRecommendationReliquaryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameplayRecommendationReliquaryResponse(GameplayRecommendationReliquaryResponse&& from) noexcept
    : GameplayRecommendationReliquaryResponse() {
    *this = ::std::move(from);
  }

  inline GameplayRecommendationReliquaryResponse& operator=(GameplayRecommendationReliquaryResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameplayRecommendationReliquaryResponse& default_instance();

  static inline const GameplayRecommendationReliquaryResponse* internal_default_instance() {
    return reinterpret_cast<const GameplayRecommendationReliquaryResponse*>(
               &_GameplayRecommendationReliquaryResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    100;

  void Swap(GameplayRecommendationReliquaryResponse* other);
  friend void swap(GameplayRecommendationReliquaryResponse& a, GameplayRecommendationReliquaryResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameplayRecommendationReliquaryResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GameplayRecommendationReliquaryResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameplayRecommendationReliquaryResponse& from);
  void MergeFrom(const GameplayRecommendationReliquaryResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameplayRecommendationReliquaryResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.GameplayRecommendationReliquaryMainPropData main_prop_data_list = 8;
  int main_prop_data_list_size() const;
  void clear_main_prop_data_list();
  static const int kMainPropDataListFieldNumber = 8;
  const ::proto::GameplayRecommendationReliquaryMainPropData& main_prop_data_list(int index) const;
  ::proto::GameplayRecommendationReliquaryMainPropData* mutable_main_prop_data_list(int index);
  ::proto::GameplayRecommendationReliquaryMainPropData* add_main_prop_data_list();
  ::google::protobuf::RepeatedPtrField< ::proto::GameplayRecommendationReliquaryMainPropData >*
      mutable_main_prop_data_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::GameplayRecommendationReliquaryMainPropData >&
      main_prop_data_list() const;

  // uint32 equip_type = 3;
  void clear_equip_type();
  static const int kEquipTypeFieldNumber = 3;
  ::google::protobuf::uint32 equip_type() const;
  void set_equip_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GameplayRecommendationReliquaryResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::GameplayRecommendationReliquaryMainPropData > main_prop_data_list_;
  ::google::protobuf::uint32 equip_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameplayRecommendationElementReliquaryResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GameplayRecommendationElementReliquaryResponse) */ {
 public:
  GameplayRecommendationElementReliquaryResponse();
  virtual ~GameplayRecommendationElementReliquaryResponse();

  GameplayRecommendationElementReliquaryResponse(const GameplayRecommendationElementReliquaryResponse& from);

  inline GameplayRecommendationElementReliquaryResponse& operator=(const GameplayRecommendationElementReliquaryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameplayRecommendationElementReliquaryResponse(GameplayRecommendationElementReliquaryResponse&& from) noexcept
    : GameplayRecommendationElementReliquaryResponse() {
    *this = ::std::move(from);
  }

  inline GameplayRecommendationElementReliquaryResponse& operator=(GameplayRecommendationElementReliquaryResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameplayRecommendationElementReliquaryResponse& default_instance();

  static inline const GameplayRecommendationElementReliquaryResponse* internal_default_instance() {
    return reinterpret_cast<const GameplayRecommendationElementReliquaryResponse*>(
               &_GameplayRecommendationElementReliquaryResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    101;

  void Swap(GameplayRecommendationElementReliquaryResponse* other);
  friend void swap(GameplayRecommendationElementReliquaryResponse& a, GameplayRecommendationElementReliquaryResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameplayRecommendationElementReliquaryResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GameplayRecommendationElementReliquaryResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameplayRecommendationElementReliquaryResponse& from);
  void MergeFrom(const GameplayRecommendationElementReliquaryResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameplayRecommendationElementReliquaryResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.GameplayRecommendationReliquaryMainPropData main_prop_data_list = 5;
  int main_prop_data_list_size() const;
  void clear_main_prop_data_list();
  static const int kMainPropDataListFieldNumber = 5;
  const ::proto::GameplayRecommendationReliquaryMainPropData& main_prop_data_list(int index) const;
  ::proto::GameplayRecommendationReliquaryMainPropData* mutable_main_prop_data_list(int index);
  ::proto::GameplayRecommendationReliquaryMainPropData* add_main_prop_data_list();
  ::google::protobuf::RepeatedPtrField< ::proto::GameplayRecommendationReliquaryMainPropData >*
      mutable_main_prop_data_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::GameplayRecommendationReliquaryMainPropData >&
      main_prop_data_list() const;

  // uint32 element_type = 11;
  void clear_element_type();
  static const int kElementTypeFieldNumber = 11;
  ::google::protobuf::uint32 element_type() const;
  void set_element_type(::google::protobuf::uint32 value);

  // uint32 equip_type = 15;
  void clear_equip_type();
  static const int kEquipTypeFieldNumber = 15;
  ::google::protobuf::uint32 equip_type() const;
  void set_equip_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GameplayRecommendationElementReliquaryResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::GameplayRecommendationReliquaryMainPropData > main_prop_data_list_;
  ::google::protobuf::uint32 element_type_;
  ::google::protobuf::uint32 equip_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetGameplayRecommendationRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetGameplayRecommendationRsp) */ {
 public:
  GetGameplayRecommendationRsp();
  virtual ~GetGameplayRecommendationRsp();

  GetGameplayRecommendationRsp(const GetGameplayRecommendationRsp& from);

  inline GetGameplayRecommendationRsp& operator=(const GetGameplayRecommendationRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetGameplayRecommendationRsp(GetGameplayRecommendationRsp&& from) noexcept
    : GetGameplayRecommendationRsp() {
    *this = ::std::move(from);
  }

  inline GetGameplayRecommendationRsp& operator=(GetGameplayRecommendationRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGameplayRecommendationRsp& default_instance();

  enum DetailCase {
    kSkillResponse = 1022,
    kReliquaryResponse = 196,
    kElementReliquaryResponse = 167,
    DETAIL_NOT_SET = 0,
  };

  static inline const GetGameplayRecommendationRsp* internal_default_instance() {
    return reinterpret_cast<const GetGameplayRecommendationRsp*>(
               &_GetGameplayRecommendationRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    102;

  void Swap(GetGameplayRecommendationRsp* other);
  friend void swap(GetGameplayRecommendationRsp& a, GetGameplayRecommendationRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetGameplayRecommendationRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetGameplayRecommendationRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetGameplayRecommendationRsp& from);
  void MergeFrom(const GetGameplayRecommendationRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetGameplayRecommendationRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 6;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 6;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 avatar_id = 15;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 15;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // .proto.GameplayRecommendationSkillResponse skill_response = 1022;
  bool has_skill_response() const;
  void clear_skill_response();
  static const int kSkillResponseFieldNumber = 1022;
  const ::proto::GameplayRecommendationSkillResponse& skill_response() const;
  ::proto::GameplayRecommendationSkillResponse* mutable_skill_response();
  ::proto::GameplayRecommendationSkillResponse* release_skill_response();
  void set_allocated_skill_response(::proto::GameplayRecommendationSkillResponse* skill_response);

  // .proto.GameplayRecommendationReliquaryResponse reliquary_response = 196;
  bool has_reliquary_response() const;
  void clear_reliquary_response();
  static const int kReliquaryResponseFieldNumber = 196;
  const ::proto::GameplayRecommendationReliquaryResponse& reliquary_response() const;
  ::proto::GameplayRecommendationReliquaryResponse* mutable_reliquary_response();
  ::proto::GameplayRecommendationReliquaryResponse* release_reliquary_response();
  void set_allocated_reliquary_response(::proto::GameplayRecommendationReliquaryResponse* reliquary_response);

  // .proto.GameplayRecommendationElementReliquaryResponse element_reliquary_response = 167;
  bool has_element_reliquary_response() const;
  void clear_element_reliquary_response();
  static const int kElementReliquaryResponseFieldNumber = 167;
  const ::proto::GameplayRecommendationElementReliquaryResponse& element_reliquary_response() const;
  ::proto::GameplayRecommendationElementReliquaryResponse* mutable_element_reliquary_response();
  ::proto::GameplayRecommendationElementReliquaryResponse* release_element_reliquary_response();
  void set_allocated_element_reliquary_response(::proto::GameplayRecommendationElementReliquaryResponse* element_reliquary_response);

  DetailCase detail_case() const;
  // @@protoc_insertion_point(class_scope:proto.GetGameplayRecommendationRsp)
 private:
  void set_has_skill_response();
  void set_has_reliquary_response();
  void set_has_element_reliquary_response();

  inline bool has_detail() const;
  void clear_detail();
  inline void clear_has_detail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 avatar_id_;
  union DetailUnion {
    DetailUnion() {}
    ::proto::GameplayRecommendationSkillResponse* skill_response_;
    ::proto::GameplayRecommendationReliquaryResponse* reliquary_response_;
    ::proto::GameplayRecommendationElementReliquaryResponse* element_reliquary_response_;
  } detail_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeBackGivingItemReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeBackGivingItemReq) */ {
 public:
  TakeBackGivingItemReq();
  virtual ~TakeBackGivingItemReq();

  TakeBackGivingItemReq(const TakeBackGivingItemReq& from);

  inline TakeBackGivingItemReq& operator=(const TakeBackGivingItemReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeBackGivingItemReq(TakeBackGivingItemReq&& from) noexcept
    : TakeBackGivingItemReq() {
    *this = ::std::move(from);
  }

  inline TakeBackGivingItemReq& operator=(TakeBackGivingItemReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeBackGivingItemReq& default_instance();

  static inline const TakeBackGivingItemReq* internal_default_instance() {
    return reinterpret_cast<const TakeBackGivingItemReq*>(
               &_TakeBackGivingItemReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    103;

  void Swap(TakeBackGivingItemReq* other);
  friend void swap(TakeBackGivingItemReq& a, TakeBackGivingItemReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeBackGivingItemReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeBackGivingItemReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeBackGivingItemReq& from);
  void MergeFrom(const TakeBackGivingItemReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeBackGivingItemReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 giving_id = 4;
  void clear_giving_id();
  static const int kGivingIdFieldNumber = 4;
  ::google::protobuf::uint32 giving_id() const;
  void set_giving_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeBackGivingItemReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 giving_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeBackGivingItemRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeBackGivingItemRsp) */ {
 public:
  TakeBackGivingItemRsp();
  virtual ~TakeBackGivingItemRsp();

  TakeBackGivingItemRsp(const TakeBackGivingItemRsp& from);

  inline TakeBackGivingItemRsp& operator=(const TakeBackGivingItemRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeBackGivingItemRsp(TakeBackGivingItemRsp&& from) noexcept
    : TakeBackGivingItemRsp() {
    *this = ::std::move(from);
  }

  inline TakeBackGivingItemRsp& operator=(TakeBackGivingItemRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeBackGivingItemRsp& default_instance();

  static inline const TakeBackGivingItemRsp* internal_default_instance() {
    return reinterpret_cast<const TakeBackGivingItemRsp*>(
               &_TakeBackGivingItemRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    104;

  void Swap(TakeBackGivingItemRsp* other);
  friend void swap(TakeBackGivingItemRsp& a, TakeBackGivingItemRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeBackGivingItemRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeBackGivingItemRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeBackGivingItemRsp& from);
  void MergeFrom(const TakeBackGivingItemRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeBackGivingItemRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 6;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 6;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 giving_id = 10;
  void clear_giving_id();
  static const int kGivingIdFieldNumber = 10;
  ::google::protobuf::uint32 giving_id() const;
  void set_giving_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeBackGivingItemRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 giving_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerNicknameAuditDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerNicknameAuditDataNotify) */ {
 public:
  PlayerNicknameAuditDataNotify();
  virtual ~PlayerNicknameAuditDataNotify();

  PlayerNicknameAuditDataNotify(const PlayerNicknameAuditDataNotify& from);

  inline PlayerNicknameAuditDataNotify& operator=(const PlayerNicknameAuditDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerNicknameAuditDataNotify(PlayerNicknameAuditDataNotify&& from) noexcept
    : PlayerNicknameAuditDataNotify() {
    *this = ::std::move(from);
  }

  inline PlayerNicknameAuditDataNotify& operator=(PlayerNicknameAuditDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerNicknameAuditDataNotify& default_instance();

  static inline const PlayerNicknameAuditDataNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerNicknameAuditDataNotify*>(
               &_PlayerNicknameAuditDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    105;

  void Swap(PlayerNicknameAuditDataNotify* other);
  friend void swap(PlayerNicknameAuditDataNotify& a, PlayerNicknameAuditDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerNicknameAuditDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerNicknameAuditDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerNicknameAuditDataNotify& from);
  void MergeFrom(const PlayerNicknameAuditDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerNicknameAuditDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.ContentAuditInfo info = 13;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 13;
  const ::proto::ContentAuditInfo& info() const;
  ::proto::ContentAuditInfo* mutable_info();
  ::proto::ContentAuditInfo* release_info();
  void set_allocated_info(::proto::ContentAuditInfo* info);

  // @@protoc_insertion_point(class_scope:proto.PlayerNicknameAuditDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ContentAuditInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerNicknameNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerNicknameNotify) */ {
 public:
  PlayerNicknameNotify();
  virtual ~PlayerNicknameNotify();

  PlayerNicknameNotify(const PlayerNicknameNotify& from);

  inline PlayerNicknameNotify& operator=(const PlayerNicknameNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerNicknameNotify(PlayerNicknameNotify&& from) noexcept
    : PlayerNicknameNotify() {
    *this = ::std::move(from);
  }

  inline PlayerNicknameNotify& operator=(PlayerNicknameNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerNicknameNotify& default_instance();

  static inline const PlayerNicknameNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerNicknameNotify*>(
               &_PlayerNicknameNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    106;

  void Swap(PlayerNicknameNotify* other);
  friend void swap(PlayerNicknameNotify& a, PlayerNicknameNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerNicknameNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerNicknameNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerNicknameNotify& from);
  void MergeFrom(const PlayerNicknameNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerNicknameNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string nickname = 7;
  void clear_nickname();
  static const int kNicknameFieldNumber = 7;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // @@protoc_insertion_point(class_scope:proto.PlayerNicknameNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NicknameAuditConfigNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.NicknameAuditConfigNotify) */ {
 public:
  NicknameAuditConfigNotify();
  virtual ~NicknameAuditConfigNotify();

  NicknameAuditConfigNotify(const NicknameAuditConfigNotify& from);

  inline NicknameAuditConfigNotify& operator=(const NicknameAuditConfigNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NicknameAuditConfigNotify(NicknameAuditConfigNotify&& from) noexcept
    : NicknameAuditConfigNotify() {
    *this = ::std::move(from);
  }

  inline NicknameAuditConfigNotify& operator=(NicknameAuditConfigNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NicknameAuditConfigNotify& default_instance();

  static inline const NicknameAuditConfigNotify* internal_default_instance() {
    return reinterpret_cast<const NicknameAuditConfigNotify*>(
               &_NicknameAuditConfigNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    107;

  void Swap(NicknameAuditConfigNotify* other);
  friend void swap(NicknameAuditConfigNotify& a, NicknameAuditConfigNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NicknameAuditConfigNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  NicknameAuditConfigNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NicknameAuditConfigNotify& from);
  void MergeFrom(const NicknameAuditConfigNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NicknameAuditConfigNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_open = 8;
  void clear_is_open();
  static const int kIsOpenFieldNumber = 8;
  bool is_open() const;
  void set_is_open(bool value);

  // uint32 submit_limit = 12;
  void clear_submit_limit();
  static const int kSubmitLimitFieldNumber = 12;
  ::google::protobuf::uint32 submit_limit() const;
  void set_submit_limit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.NicknameAuditConfigNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_open_;
  ::google::protobuf::uint32 submit_limit_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReadNicknameAuditReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ReadNicknameAuditReq) */ {
 public:
  ReadNicknameAuditReq();
  virtual ~ReadNicknameAuditReq();

  ReadNicknameAuditReq(const ReadNicknameAuditReq& from);

  inline ReadNicknameAuditReq& operator=(const ReadNicknameAuditReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadNicknameAuditReq(ReadNicknameAuditReq&& from) noexcept
    : ReadNicknameAuditReq() {
    *this = ::std::move(from);
  }

  inline ReadNicknameAuditReq& operator=(ReadNicknameAuditReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadNicknameAuditReq& default_instance();

  static inline const ReadNicknameAuditReq* internal_default_instance() {
    return reinterpret_cast<const ReadNicknameAuditReq*>(
               &_ReadNicknameAuditReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    108;

  void Swap(ReadNicknameAuditReq* other);
  friend void swap(ReadNicknameAuditReq& a, ReadNicknameAuditReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadNicknameAuditReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ReadNicknameAuditReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReadNicknameAuditReq& from);
  void MergeFrom(const ReadNicknameAuditReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReadNicknameAuditReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.ReadNicknameAuditReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReadNicknameAuditRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ReadNicknameAuditRsp) */ {
 public:
  ReadNicknameAuditRsp();
  virtual ~ReadNicknameAuditRsp();

  ReadNicknameAuditRsp(const ReadNicknameAuditRsp& from);

  inline ReadNicknameAuditRsp& operator=(const ReadNicknameAuditRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadNicknameAuditRsp(ReadNicknameAuditRsp&& from) noexcept
    : ReadNicknameAuditRsp() {
    *this = ::std::move(from);
  }

  inline ReadNicknameAuditRsp& operator=(ReadNicknameAuditRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadNicknameAuditRsp& default_instance();

  static inline const ReadNicknameAuditRsp* internal_default_instance() {
    return reinterpret_cast<const ReadNicknameAuditRsp*>(
               &_ReadNicknameAuditRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    109;

  void Swap(ReadNicknameAuditRsp* other);
  friend void swap(ReadNicknameAuditRsp& a, ReadNicknameAuditRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadNicknameAuditRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ReadNicknameAuditRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReadNicknameAuditRsp& from);
  void MergeFrom(const ReadNicknameAuditRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReadNicknameAuditRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 12;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 12;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ReadNicknameAuditRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerCompoundMaterialBoostReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerCompoundMaterialBoostReq) */ {
 public:
  PlayerCompoundMaterialBoostReq();
  virtual ~PlayerCompoundMaterialBoostReq();

  PlayerCompoundMaterialBoostReq(const PlayerCompoundMaterialBoostReq& from);

  inline PlayerCompoundMaterialBoostReq& operator=(const PlayerCompoundMaterialBoostReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCompoundMaterialBoostReq(PlayerCompoundMaterialBoostReq&& from) noexcept
    : PlayerCompoundMaterialBoostReq() {
    *this = ::std::move(from);
  }

  inline PlayerCompoundMaterialBoostReq& operator=(PlayerCompoundMaterialBoostReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCompoundMaterialBoostReq& default_instance();

  static inline const PlayerCompoundMaterialBoostReq* internal_default_instance() {
    return reinterpret_cast<const PlayerCompoundMaterialBoostReq*>(
               &_PlayerCompoundMaterialBoostReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    110;

  void Swap(PlayerCompoundMaterialBoostReq* other);
  friend void swap(PlayerCompoundMaterialBoostReq& a, PlayerCompoundMaterialBoostReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCompoundMaterialBoostReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerCompoundMaterialBoostReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerCompoundMaterialBoostReq& from);
  void MergeFrom(const PlayerCompoundMaterialBoostReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerCompoundMaterialBoostReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 consume_material_count = 1;
  void clear_consume_material_count();
  static const int kConsumeMaterialCountFieldNumber = 1;
  ::google::protobuf::uint32 consume_material_count() const;
  void set_consume_material_count(::google::protobuf::uint32 value);

  // bool is_boost_all = 8;
  void clear_is_boost_all();
  static const int kIsBoostAllFieldNumber = 8;
  bool is_boost_all() const;
  void set_is_boost_all(bool value);

  // uint32 consume_material_id = 9;
  void clear_consume_material_id();
  static const int kConsumeMaterialIdFieldNumber = 9;
  ::google::protobuf::uint32 consume_material_id() const;
  void set_consume_material_id(::google::protobuf::uint32 value);

  // uint32 target_compound_group_id = 14;
  void clear_target_compound_group_id();
  static const int kTargetCompoundGroupIdFieldNumber = 14;
  ::google::protobuf::uint32 target_compound_group_id() const;
  void set_target_compound_group_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerCompoundMaterialBoostReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 consume_material_count_;
  bool is_boost_all_;
  ::google::protobuf::uint32 consume_material_id_;
  ::google::protobuf::uint32 target_compound_group_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerCompoundMaterialBoostRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerCompoundMaterialBoostRsp) */ {
 public:
  PlayerCompoundMaterialBoostRsp();
  virtual ~PlayerCompoundMaterialBoostRsp();

  PlayerCompoundMaterialBoostRsp(const PlayerCompoundMaterialBoostRsp& from);

  inline PlayerCompoundMaterialBoostRsp& operator=(const PlayerCompoundMaterialBoostRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCompoundMaterialBoostRsp(PlayerCompoundMaterialBoostRsp&& from) noexcept
    : PlayerCompoundMaterialBoostRsp() {
    *this = ::std::move(from);
  }

  inline PlayerCompoundMaterialBoostRsp& operator=(PlayerCompoundMaterialBoostRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCompoundMaterialBoostRsp& default_instance();

  static inline const PlayerCompoundMaterialBoostRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerCompoundMaterialBoostRsp*>(
               &_PlayerCompoundMaterialBoostRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    111;

  void Swap(PlayerCompoundMaterialBoostRsp* other);
  friend void swap(PlayerCompoundMaterialBoostRsp& a, PlayerCompoundMaterialBoostRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCompoundMaterialBoostRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerCompoundMaterialBoostRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerCompoundMaterialBoostRsp& from);
  void MergeFrom(const PlayerCompoundMaterialBoostRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerCompoundMaterialBoostRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.CompoundQueueData compound_que_data_list = 1;
  int compound_que_data_list_size() const;
  void clear_compound_que_data_list();
  static const int kCompoundQueDataListFieldNumber = 1;
  const ::proto::CompoundQueueData& compound_que_data_list(int index) const;
  ::proto::CompoundQueueData* mutable_compound_que_data_list(int index);
  ::proto::CompoundQueueData* add_compound_que_data_list();
  ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >*
      mutable_compound_que_data_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >&
      compound_que_data_list() const;

  // repeated .proto.ItemParam take_item_list = 2;
  int take_item_list_size() const;
  void clear_take_item_list();
  static const int kTakeItemListFieldNumber = 2;
  const ::proto::ItemParam& take_item_list(int index) const;
  ::proto::ItemParam* mutable_take_item_list(int index);
  ::proto::ItemParam* add_take_item_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
      mutable_take_item_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
      take_item_list() const;

  // .proto.CompoundBoostTakeStatusType take_status = 6;
  void clear_take_status();
  static const int kTakeStatusFieldNumber = 6;
  ::proto::CompoundBoostTakeStatusType take_status() const;
  void set_take_status(::proto::CompoundBoostTakeStatusType value);

  // int32 retcode = 7;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 7;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerCompoundMaterialBoostRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData > compound_que_data_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam > take_item_list_;
  int take_status_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerGameTimeByLuaNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerGameTimeByLuaNotify) */ {
 public:
  PlayerGameTimeByLuaNotify();
  virtual ~PlayerGameTimeByLuaNotify();

  PlayerGameTimeByLuaNotify(const PlayerGameTimeByLuaNotify& from);

  inline PlayerGameTimeByLuaNotify& operator=(const PlayerGameTimeByLuaNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerGameTimeByLuaNotify(PlayerGameTimeByLuaNotify&& from) noexcept
    : PlayerGameTimeByLuaNotify() {
    *this = ::std::move(from);
  }

  inline PlayerGameTimeByLuaNotify& operator=(PlayerGameTimeByLuaNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerGameTimeByLuaNotify& default_instance();

  static inline const PlayerGameTimeByLuaNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerGameTimeByLuaNotify*>(
               &_PlayerGameTimeByLuaNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    112;

  void Swap(PlayerGameTimeByLuaNotify* other);
  friend void swap(PlayerGameTimeByLuaNotify& a, PlayerGameTimeByLuaNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerGameTimeByLuaNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerGameTimeByLuaNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerGameTimeByLuaNotify& from);
  void MergeFrom(const PlayerGameTimeByLuaNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerGameTimeByLuaNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 uid = 13;
  void clear_uid();
  static const int kUidFieldNumber = 13;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 sim_speed = 9;
  void clear_sim_speed();
  static const int kSimSpeedFieldNumber = 9;
  ::google::protobuf::uint32 sim_speed() const;
  void set_sim_speed(::google::protobuf::uint32 value);

  // uint32 game_time = 10;
  void clear_game_time();
  static const int kGameTimeFieldNumber = 10;
  ::google::protobuf::uint32 game_time() const;
  void set_game_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerGameTimeByLuaNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 sim_speed_;
  ::google::protobuf::uint32 game_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerIpRegionNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerIpRegionNotify) */ {
 public:
  PlayerIpRegionNotify();
  virtual ~PlayerIpRegionNotify();

  PlayerIpRegionNotify(const PlayerIpRegionNotify& from);

  inline PlayerIpRegionNotify& operator=(const PlayerIpRegionNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerIpRegionNotify(PlayerIpRegionNotify&& from) noexcept
    : PlayerIpRegionNotify() {
    *this = ::std::move(from);
  }

  inline PlayerIpRegionNotify& operator=(PlayerIpRegionNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerIpRegionNotify& default_instance();

  static inline const PlayerIpRegionNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerIpRegionNotify*>(
               &_PlayerIpRegionNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    113;

  void Swap(PlayerIpRegionNotify* other);
  friend void swap(PlayerIpRegionNotify& a, PlayerIpRegionNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerIpRegionNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerIpRegionNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerIpRegionNotify& from);
  void MergeFrom(const PlayerIpRegionNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerIpRegionNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ip_code = 9;
  void clear_ip_code();
  static const int kIpCodeFieldNumber = 9;
  const ::std::string& ip_code() const;
  void set_ip_code(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_code(::std::string&& value);
  #endif
  void set_ip_code(const char* value);
  void set_ip_code(const char* value, size_t size);
  ::std::string* mutable_ip_code();
  ::std::string* release_ip_code();
  void set_allocated_ip_code(::std::string* ip_code);

  // @@protoc_insertion_point(class_scope:proto.PlayerIpRegionNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_code_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetPlayerTokenReq

// string account_ext = 9;
inline void GetPlayerTokenReq::clear_account_ext() {
  account_ext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenReq::account_ext() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.account_ext)
  return account_ext_.GetNoArena();
}
inline void GetPlayerTokenReq::set_account_ext(const ::std::string& value) {
  
  account_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.account_ext)
}
#if LANG_CXX11
inline void GetPlayerTokenReq::set_account_ext(::std::string&& value) {
  
  account_ext_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenReq.account_ext)
}
#endif
inline void GetPlayerTokenReq::set_account_ext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenReq.account_ext)
}
inline void GetPlayerTokenReq::set_account_ext(const char* value, size_t size) {
  
  account_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenReq.account_ext)
}
inline ::std::string* GetPlayerTokenReq::mutable_account_ext() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenReq.account_ext)
  return account_ext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenReq::release_account_ext() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenReq.account_ext)
  
  return account_ext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenReq::set_allocated_account_ext(::std::string* account_ext) {
  if (account_ext != NULL) {
    
  } else {
    
  }
  account_ext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_ext);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenReq.account_ext)
}

// string account_token = 10;
inline void GetPlayerTokenReq::clear_account_token() {
  account_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenReq::account_token() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.account_token)
  return account_token_.GetNoArena();
}
inline void GetPlayerTokenReq::set_account_token(const ::std::string& value) {
  
  account_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.account_token)
}
#if LANG_CXX11
inline void GetPlayerTokenReq::set_account_token(::std::string&& value) {
  
  account_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenReq.account_token)
}
#endif
inline void GetPlayerTokenReq::set_account_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenReq.account_token)
}
inline void GetPlayerTokenReq::set_account_token(const char* value, size_t size) {
  
  account_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenReq.account_token)
}
inline ::std::string* GetPlayerTokenReq::mutable_account_token() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenReq.account_token)
  return account_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenReq::release_account_token() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenReq.account_token)
  
  return account_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenReq::set_allocated_account_token(::std::string* account_token) {
  if (account_token != NULL) {
    
  } else {
    
  }
  account_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_token);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenReq.account_token)
}

// uint32 channel_id = 15;
inline void GetPlayerTokenReq::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenReq::channel_id() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.channel_id)
  return channel_id_;
}
inline void GetPlayerTokenReq::set_channel_id(::google::protobuf::uint32 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.channel_id)
}

// bool is_guest = 6;
inline void GetPlayerTokenReq::clear_is_guest() {
  is_guest_ = false;
}
inline bool GetPlayerTokenReq::is_guest() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.is_guest)
  return is_guest_;
}
inline void GetPlayerTokenReq::set_is_guest(bool value) {
  
  is_guest_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.is_guest)
}

// string psn_region = 4;
inline void GetPlayerTokenReq::clear_psn_region() {
  psn_region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenReq::psn_region() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.psn_region)
  return psn_region_.GetNoArena();
}
inline void GetPlayerTokenReq::set_psn_region(const ::std::string& value) {
  
  psn_region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.psn_region)
}
#if LANG_CXX11
inline void GetPlayerTokenReq::set_psn_region(::std::string&& value) {
  
  psn_region_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenReq.psn_region)
}
#endif
inline void GetPlayerTokenReq::set_psn_region(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  psn_region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenReq.psn_region)
}
inline void GetPlayerTokenReq::set_psn_region(const char* value, size_t size) {
  
  psn_region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenReq.psn_region)
}
inline ::std::string* GetPlayerTokenReq::mutable_psn_region() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenReq.psn_region)
  return psn_region_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenReq::release_psn_region() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenReq.psn_region)
  
  return psn_region_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenReq::set_allocated_psn_region(::std::string* psn_region) {
  if (psn_region != NULL) {
    
  } else {
    
  }
  psn_region_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), psn_region);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenReq.psn_region)
}

// uint32 sub_channel_id = 8;
inline void GetPlayerTokenReq::clear_sub_channel_id() {
  sub_channel_id_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenReq::sub_channel_id() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.sub_channel_id)
  return sub_channel_id_;
}
inline void GetPlayerTokenReq::set_sub_channel_id(::google::protobuf::uint32 value) {
  
  sub_channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.sub_channel_id)
}

// string account_uid = 11;
inline void GetPlayerTokenReq::clear_account_uid() {
  account_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenReq::account_uid() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.account_uid)
  return account_uid_.GetNoArena();
}
inline void GetPlayerTokenReq::set_account_uid(const ::std::string& value) {
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.account_uid)
}
#if LANG_CXX11
inline void GetPlayerTokenReq::set_account_uid(::std::string&& value) {
  
  account_uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenReq.account_uid)
}
#endif
inline void GetPlayerTokenReq::set_account_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenReq.account_uid)
}
inline void GetPlayerTokenReq::set_account_uid(const char* value, size_t size) {
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenReq.account_uid)
}
inline ::std::string* GetPlayerTokenReq::mutable_account_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenReq.account_uid)
  return account_uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenReq::release_account_uid() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenReq.account_uid)
  
  return account_uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenReq::set_allocated_account_uid(::std::string* account_uid) {
  if (account_uid != NULL) {
    
  } else {
    
  }
  account_uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_uid);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenReq.account_uid)
}

// uint32 key_id = 1787;
inline void GetPlayerTokenReq::clear_key_id() {
  key_id_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenReq::key_id() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.key_id)
  return key_id_;
}
inline void GetPlayerTokenReq::set_key_id(::google::protobuf::uint32 value) {
  
  key_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.key_id)
}

// uint32 account_type = 1;
inline void GetPlayerTokenReq::clear_account_type() {
  account_type_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenReq::account_type() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.account_type)
  return account_type_;
}
inline void GetPlayerTokenReq::set_account_type(::google::protobuf::uint32 value) {
  
  account_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.account_type)
}

// uint32 cloud_client_ip = 14;
inline void GetPlayerTokenReq::clear_cloud_client_ip() {
  cloud_client_ip_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenReq::cloud_client_ip() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.cloud_client_ip)
  return cloud_client_ip_;
}
inline void GetPlayerTokenReq::set_cloud_client_ip(::google::protobuf::uint32 value) {
  
  cloud_client_ip_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.cloud_client_ip)
}

// uint32 minors_reg_min_age = 995;
inline void GetPlayerTokenReq::clear_minors_reg_min_age() {
  minors_reg_min_age_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenReq::minors_reg_min_age() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.minors_reg_min_age)
  return minors_reg_min_age_;
}
inline void GetPlayerTokenReq::set_minors_reg_min_age(::google::protobuf::uint32 value) {
  
  minors_reg_min_age_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.minors_reg_min_age)
}

// uint32 uid = 2;
inline void GetPlayerTokenReq::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenReq::uid() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.uid)
  return uid_;
}
inline void GetPlayerTokenReq::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.uid)
}

// string online_id = 7;
inline void GetPlayerTokenReq::clear_online_id() {
  online_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenReq::online_id() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.online_id)
  return online_id_.GetNoArena();
}
inline void GetPlayerTokenReq::set_online_id(const ::std::string& value) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.online_id)
}
#if LANG_CXX11
inline void GetPlayerTokenReq::set_online_id(::std::string&& value) {
  
  online_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenReq.online_id)
}
#endif
inline void GetPlayerTokenReq::set_online_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenReq.online_id)
}
inline void GetPlayerTokenReq::set_online_id(const char* value, size_t size) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenReq.online_id)
}
inline ::std::string* GetPlayerTokenReq::mutable_online_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenReq.online_id)
  return online_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenReq::release_online_id() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenReq.online_id)
  
  return online_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenReq::set_allocated_online_id(::std::string* online_id) {
  if (online_id != NULL) {
    
  } else {
    
  }
  online_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), online_id);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenReq.online_id)
}

// string birthday = 1718;
inline void GetPlayerTokenReq::clear_birthday() {
  birthday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenReq::birthday() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.birthday)
  return birthday_.GetNoArena();
}
inline void GetPlayerTokenReq::set_birthday(const ::std::string& value) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.birthday)
}
#if LANG_CXX11
inline void GetPlayerTokenReq::set_birthday(::std::string&& value) {
  
  birthday_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenReq.birthday)
}
#endif
inline void GetPlayerTokenReq::set_birthday(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenReq.birthday)
}
inline void GetPlayerTokenReq::set_birthday(const char* value, size_t size) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenReq.birthday)
}
inline ::std::string* GetPlayerTokenReq::mutable_birthday() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenReq.birthday)
  return birthday_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenReq::release_birthday() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenReq.birthday)
  
  return birthday_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenReq::set_allocated_birthday(::std::string* birthday) {
  if (birthday != NULL) {
    
  } else {
    
  }
  birthday_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), birthday);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenReq.birthday)
}

// string client_ip_str = 3;
inline void GetPlayerTokenReq::clear_client_ip_str() {
  client_ip_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenReq::client_ip_str() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.client_ip_str)
  return client_ip_str_.GetNoArena();
}
inline void GetPlayerTokenReq::set_client_ip_str(const ::std::string& value) {
  
  client_ip_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.client_ip_str)
}
#if LANG_CXX11
inline void GetPlayerTokenReq::set_client_ip_str(::std::string&& value) {
  
  client_ip_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenReq.client_ip_str)
}
#endif
inline void GetPlayerTokenReq::set_client_ip_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_ip_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenReq.client_ip_str)
}
inline void GetPlayerTokenReq::set_client_ip_str(const char* value, size_t size) {
  
  client_ip_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenReq.client_ip_str)
}
inline ::std::string* GetPlayerTokenReq::mutable_client_ip_str() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenReq.client_ip_str)
  return client_ip_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenReq::release_client_ip_str() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenReq.client_ip_str)
  
  return client_ip_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenReq::set_allocated_client_ip_str(::std::string* client_ip_str) {
  if (client_ip_str != NULL) {
    
  } else {
    
  }
  client_ip_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_ip_str);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenReq.client_ip_str)
}

// uint32 platform_type = 12;
inline void GetPlayerTokenReq::clear_platform_type() {
  platform_type_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenReq::platform_type() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.platform_type)
  return platform_type_;
}
inline void GetPlayerTokenReq::set_platform_type(::google::protobuf::uint32 value) {
  
  platform_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.platform_type)
}

// string client_rand_key = 760;
inline void GetPlayerTokenReq::clear_client_rand_key() {
  client_rand_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenReq::client_rand_key() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.client_rand_key)
  return client_rand_key_.GetNoArena();
}
inline void GetPlayerTokenReq::set_client_rand_key(const ::std::string& value) {
  
  client_rand_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.client_rand_key)
}
#if LANG_CXX11
inline void GetPlayerTokenReq::set_client_rand_key(::std::string&& value) {
  
  client_rand_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenReq.client_rand_key)
}
#endif
inline void GetPlayerTokenReq::set_client_rand_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_rand_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenReq.client_rand_key)
}
inline void GetPlayerTokenReq::set_client_rand_key(const char* value, size_t size) {
  
  client_rand_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenReq.client_rand_key)
}
inline ::std::string* GetPlayerTokenReq::mutable_client_rand_key() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenReq.client_rand_key)
  return client_rand_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenReq::release_client_rand_key() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenReq.client_rand_key)
  
  return client_rand_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenReq::set_allocated_client_rand_key(::std::string* client_rand_key) {
  if (client_rand_key != NULL) {
    
  } else {
    
  }
  client_rand_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_rand_key);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenReq.client_rand_key)
}

// string country_code = 5;
inline void GetPlayerTokenReq::clear_country_code() {
  country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenReq::country_code() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.country_code)
  return country_code_.GetNoArena();
}
inline void GetPlayerTokenReq::set_country_code(const ::std::string& value) {
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.country_code)
}
#if LANG_CXX11
inline void GetPlayerTokenReq::set_country_code(::std::string&& value) {
  
  country_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenReq.country_code)
}
#endif
inline void GetPlayerTokenReq::set_country_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenReq.country_code)
}
inline void GetPlayerTokenReq::set_country_code(const char* value, size_t size) {
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenReq.country_code)
}
inline ::std::string* GetPlayerTokenReq::mutable_country_code() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenReq.country_code)
  return country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenReq::release_country_code() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenReq.country_code)
  
  return country_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenReq::set_allocated_country_code(::std::string* country_code) {
  if (country_code != NULL) {
    
  } else {
    
  }
  country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country_code);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenReq.country_code)
}

// uint32 lang = 892;
inline void GetPlayerTokenReq::clear_lang() {
  lang_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenReq::lang() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.lang)
  return lang_;
}
inline void GetPlayerTokenReq::set_lang(::google::protobuf::uint32 value) {
  
  lang_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.lang)
}

// string psn_id = 13;
inline void GetPlayerTokenReq::clear_psn_id() {
  psn_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenReq::psn_id() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.psn_id)
  return psn_id_.GetNoArena();
}
inline void GetPlayerTokenReq::set_psn_id(const ::std::string& value) {
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.psn_id)
}
#if LANG_CXX11
inline void GetPlayerTokenReq::set_psn_id(::std::string&& value) {
  
  psn_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenReq.psn_id)
}
#endif
inline void GetPlayerTokenReq::set_psn_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenReq.psn_id)
}
inline void GetPlayerTokenReq::set_psn_id(const char* value, size_t size) {
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenReq.psn_id)
}
inline ::std::string* GetPlayerTokenReq::mutable_psn_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenReq.psn_id)
  return psn_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenReq::release_psn_id() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenReq.psn_id)
  
  return psn_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenReq::set_allocated_psn_id(::std::string* psn_id) {
  if (psn_id != NULL) {
    
  } else {
    
  }
  psn_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), psn_id);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenReq.psn_id)
}

// -------------------------------------------------------------------

// GetPlayerTokenRsp

// uint32 minors_reg_min_age = 1561;
inline void GetPlayerTokenRsp::clear_minors_reg_min_age() {
  minors_reg_min_age_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenRsp::minors_reg_min_age() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.minors_reg_min_age)
  return minors_reg_min_age_;
}
inline void GetPlayerTokenRsp::set_minors_reg_min_age(::google::protobuf::uint32 value) {
  
  minors_reg_min_age_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.minors_reg_min_age)
}

// uint32 channel_id = 896;
inline void GetPlayerTokenRsp::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenRsp::channel_id() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.channel_id)
  return channel_id_;
}
inline void GetPlayerTokenRsp::set_channel_id(::google::protobuf::uint32 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.channel_id)
}

// uint32 platform_type = 8;
inline void GetPlayerTokenRsp::clear_platform_type() {
  platform_type_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenRsp::platform_type() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.platform_type)
  return platform_type_;
}
inline void GetPlayerTokenRsp::set_platform_type(::google::protobuf::uint32 value) {
  
  platform_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.platform_type)
}

// string account_uid = 12;
inline void GetPlayerTokenRsp::clear_account_uid() {
  account_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenRsp::account_uid() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.account_uid)
  return account_uid_.GetNoArena();
}
inline void GetPlayerTokenRsp::set_account_uid(const ::std::string& value) {
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.account_uid)
}
#if LANG_CXX11
inline void GetPlayerTokenRsp::set_account_uid(::std::string&& value) {
  
  account_uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.account_uid)
}
#endif
inline void GetPlayerTokenRsp::set_account_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.account_uid)
}
inline void GetPlayerTokenRsp::set_account_uid(const char* value, size_t size) {
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.account_uid)
}
inline ::std::string* GetPlayerTokenRsp::mutable_account_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.account_uid)
  return account_uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenRsp::release_account_uid() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.account_uid)
  
  return account_uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenRsp::set_allocated_account_uid(::std::string* account_uid) {
  if (account_uid != NULL) {
    
  } else {
    
  }
  account_uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_uid);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.account_uid)
}

// bool is_login_white_list = 573;
inline void GetPlayerTokenRsp::clear_is_login_white_list() {
  is_login_white_list_ = false;
}
inline bool GetPlayerTokenRsp::is_login_white_list() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.is_login_white_list)
  return is_login_white_list_;
}
inline void GetPlayerTokenRsp::set_is_login_white_list(bool value) {
  
  is_login_white_list_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.is_login_white_list)
}

// bool is_guest = 4;
inline void GetPlayerTokenRsp::clear_is_guest() {
  is_guest_ = false;
}
inline bool GetPlayerTokenRsp::is_guest() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.is_guest)
  return is_guest_;
}
inline void GetPlayerTokenRsp::set_is_guest(bool value) {
  
  is_guest_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.is_guest)
}

// uint32 black_uid_end_time = 14;
inline void GetPlayerTokenRsp::clear_black_uid_end_time() {
  black_uid_end_time_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenRsp::black_uid_end_time() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.black_uid_end_time)
  return black_uid_end_time_;
}
inline void GetPlayerTokenRsp::set_black_uid_end_time(::google::protobuf::uint32 value) {
  
  black_uid_end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.black_uid_end_time)
}

// bool is_watchdog_uid = 2028;
inline void GetPlayerTokenRsp::clear_is_watchdog_uid() {
  is_watchdog_uid_ = false;
}
inline bool GetPlayerTokenRsp::is_watchdog_uid() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.is_watchdog_uid)
  return is_watchdog_uid_;
}
inline void GetPlayerTokenRsp::set_is_watchdog_uid(bool value) {
  
  is_watchdog_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.is_watchdog_uid)
}

// string psn_id = 1811;
inline void GetPlayerTokenRsp::clear_psn_id() {
  psn_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenRsp::psn_id() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.psn_id)
  return psn_id_.GetNoArena();
}
inline void GetPlayerTokenRsp::set_psn_id(const ::std::string& value) {
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.psn_id)
}
#if LANG_CXX11
inline void GetPlayerTokenRsp::set_psn_id(::std::string&& value) {
  
  psn_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.psn_id)
}
#endif
inline void GetPlayerTokenRsp::set_psn_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.psn_id)
}
inline void GetPlayerTokenRsp::set_psn_id(const char* value, size_t size) {
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.psn_id)
}
inline ::std::string* GetPlayerTokenRsp::mutable_psn_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.psn_id)
  return psn_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenRsp::release_psn_id() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.psn_id)
  
  return psn_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenRsp::set_allocated_psn_id(::std::string* psn_id) {
  if (psn_id != NULL) {
    
  } else {
    
  }
  psn_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), psn_id);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.psn_id)
}

// uint32 tag = 1635;
inline void GetPlayerTokenRsp::clear_tag() {
  tag_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenRsp::tag() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.tag)
  return tag_;
}
inline void GetPlayerTokenRsp::set_tag(::google::protobuf::uint32 value) {
  
  tag_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.tag)
}

// string country_code = 2013;
inline void GetPlayerTokenRsp::clear_country_code() {
  country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenRsp::country_code() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.country_code)
  return country_code_.GetNoArena();
}
inline void GetPlayerTokenRsp::set_country_code(const ::std::string& value) {
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.country_code)
}
#if LANG_CXX11
inline void GetPlayerTokenRsp::set_country_code(::std::string&& value) {
  
  country_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.country_code)
}
#endif
inline void GetPlayerTokenRsp::set_country_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.country_code)
}
inline void GetPlayerTokenRsp::set_country_code(const char* value, size_t size) {
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.country_code)
}
inline ::std::string* GetPlayerTokenRsp::mutable_country_code() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.country_code)
  return country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenRsp::release_country_code() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.country_code)
  
  return country_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenRsp::set_allocated_country_code(::std::string* country_code) {
  if (country_code != NULL) {
    
  } else {
    
  }
  country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country_code);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.country_code)
}

// string token = 11;
inline void GetPlayerTokenRsp::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenRsp::token() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.token)
  return token_.GetNoArena();
}
inline void GetPlayerTokenRsp::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.token)
}
#if LANG_CXX11
inline void GetPlayerTokenRsp::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.token)
}
#endif
inline void GetPlayerTokenRsp::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.token)
}
inline void GetPlayerTokenRsp::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.token)
}
inline ::std::string* GetPlayerTokenRsp::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenRsp::release_token() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenRsp::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.token)
}

// uint32 sub_channel_id = 1802;
inline void GetPlayerTokenRsp::clear_sub_channel_id() {
  sub_channel_id_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenRsp::sub_channel_id() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.sub_channel_id)
  return sub_channel_id_;
}
inline void GetPlayerTokenRsp::set_sub_channel_id(::google::protobuf::uint32 value) {
  
  sub_channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.sub_channel_id)
}

// bytes security_cmd_buffer = 6;
inline void GetPlayerTokenRsp::clear_security_cmd_buffer() {
  security_cmd_buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenRsp::security_cmd_buffer() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.security_cmd_buffer)
  return security_cmd_buffer_.GetNoArena();
}
inline void GetPlayerTokenRsp::set_security_cmd_buffer(const ::std::string& value) {
  
  security_cmd_buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.security_cmd_buffer)
}
#if LANG_CXX11
inline void GetPlayerTokenRsp::set_security_cmd_buffer(::std::string&& value) {
  
  security_cmd_buffer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.security_cmd_buffer)
}
#endif
inline void GetPlayerTokenRsp::set_security_cmd_buffer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  security_cmd_buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.security_cmd_buffer)
}
inline void GetPlayerTokenRsp::set_security_cmd_buffer(const void* value, size_t size) {
  
  security_cmd_buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.security_cmd_buffer)
}
inline ::std::string* GetPlayerTokenRsp::mutable_security_cmd_buffer() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.security_cmd_buffer)
  return security_cmd_buffer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenRsp::release_security_cmd_buffer() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.security_cmd_buffer)
  
  return security_cmd_buffer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenRsp::set_allocated_security_cmd_buffer(::std::string* security_cmd_buffer) {
  if (security_cmd_buffer != NULL) {
    
  } else {
    
  }
  security_cmd_buffer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), security_cmd_buffer);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.security_cmd_buffer)
}

// string client_version_random_key = 1529;
inline void GetPlayerTokenRsp::clear_client_version_random_key() {
  client_version_random_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenRsp::client_version_random_key() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.client_version_random_key)
  return client_version_random_key_.GetNoArena();
}
inline void GetPlayerTokenRsp::set_client_version_random_key(const ::std::string& value) {
  
  client_version_random_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.client_version_random_key)
}
#if LANG_CXX11
inline void GetPlayerTokenRsp::set_client_version_random_key(::std::string&& value) {
  
  client_version_random_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.client_version_random_key)
}
#endif
inline void GetPlayerTokenRsp::set_client_version_random_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_version_random_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.client_version_random_key)
}
inline void GetPlayerTokenRsp::set_client_version_random_key(const char* value, size_t size) {
  
  client_version_random_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.client_version_random_key)
}
inline ::std::string* GetPlayerTokenRsp::mutable_client_version_random_key() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.client_version_random_key)
  return client_version_random_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenRsp::release_client_version_random_key() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.client_version_random_key)
  
  return client_version_random_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenRsp::set_allocated_client_version_random_key(::std::string* client_version_random_key) {
  if (client_version_random_key != NULL) {
    
  } else {
    
  }
  client_version_random_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version_random_key);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.client_version_random_key)
}

// string birthday = 937;
inline void GetPlayerTokenRsp::clear_birthday() {
  birthday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenRsp::birthday() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.birthday)
  return birthday_.GetNoArena();
}
inline void GetPlayerTokenRsp::set_birthday(const ::std::string& value) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.birthday)
}
#if LANG_CXX11
inline void GetPlayerTokenRsp::set_birthday(::std::string&& value) {
  
  birthday_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.birthday)
}
#endif
inline void GetPlayerTokenRsp::set_birthday(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.birthday)
}
inline void GetPlayerTokenRsp::set_birthday(const char* value, size_t size) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.birthday)
}
inline ::std::string* GetPlayerTokenRsp::mutable_birthday() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.birthday)
  return birthday_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenRsp::release_birthday() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.birthday)
  
  return birthday_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenRsp::set_allocated_birthday(::std::string* birthday) {
  if (birthday != NULL) {
    
  } else {
    
  }
  birthday_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), birthday);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.birthday)
}

// uint64 secret_key_seed = 13;
inline void GetPlayerTokenRsp::clear_secret_key_seed() {
  secret_key_seed_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetPlayerTokenRsp::secret_key_seed() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.secret_key_seed)
  return secret_key_seed_;
}
inline void GetPlayerTokenRsp::set_secret_key_seed(::google::protobuf::uint64 value) {
  
  secret_key_seed_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.secret_key_seed)
}

// uint32 account_type = 5;
inline void GetPlayerTokenRsp::clear_account_type() {
  account_type_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenRsp::account_type() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.account_type)
  return account_type_;
}
inline void GetPlayerTokenRsp::set_account_type(::google::protobuf::uint32 value) {
  
  account_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.account_type)
}

// string msg = 7;
inline void GetPlayerTokenRsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenRsp::msg() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.msg)
  return msg_.GetNoArena();
}
inline void GetPlayerTokenRsp::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.msg)
}
#if LANG_CXX11
inline void GetPlayerTokenRsp::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.msg)
}
#endif
inline void GetPlayerTokenRsp::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.msg)
}
inline void GetPlayerTokenRsp::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.msg)
}
inline ::std::string* GetPlayerTokenRsp::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenRsp::release_msg() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenRsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.msg)
}

// repeated uint32 finish_collection_id_list = 1640;
inline int GetPlayerTokenRsp::finish_collection_id_list_size() const {
  return finish_collection_id_list_.size();
}
inline void GetPlayerTokenRsp::clear_finish_collection_id_list() {
  finish_collection_id_list_.Clear();
}
inline ::google::protobuf::uint32 GetPlayerTokenRsp::finish_collection_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.finish_collection_id_list)
  return finish_collection_id_list_.Get(index);
}
inline void GetPlayerTokenRsp::set_finish_collection_id_list(int index, ::google::protobuf::uint32 value) {
  finish_collection_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.finish_collection_id_list)
}
inline void GetPlayerTokenRsp::add_finish_collection_id_list(::google::protobuf::uint32 value) {
  finish_collection_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetPlayerTokenRsp.finish_collection_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetPlayerTokenRsp::finish_collection_id_list() const {
  // @@protoc_insertion_point(field_list:proto.GetPlayerTokenRsp.finish_collection_id_list)
  return finish_collection_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetPlayerTokenRsp::mutable_finish_collection_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetPlayerTokenRsp.finish_collection_id_list)
  return &finish_collection_id_list_;
}

// string sign = 1140;
inline void GetPlayerTokenRsp::clear_sign() {
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenRsp::sign() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.sign)
  return sign_.GetNoArena();
}
inline void GetPlayerTokenRsp::set_sign(const ::std::string& value) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.sign)
}
#if LANG_CXX11
inline void GetPlayerTokenRsp::set_sign(::std::string&& value) {
  
  sign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.sign)
}
#endif
inline void GetPlayerTokenRsp::set_sign(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.sign)
}
inline void GetPlayerTokenRsp::set_sign(const char* value, size_t size) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.sign)
}
inline ::std::string* GetPlayerTokenRsp::mutable_sign() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.sign)
  return sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenRsp::release_sign() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.sign)
  
  return sign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenRsp::set_allocated_sign(::std::string* sign) {
  if (sign != NULL) {
    
  } else {
    
  }
  sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.sign)
}

// string secret_key = 15;
inline void GetPlayerTokenRsp::clear_secret_key() {
  secret_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenRsp::secret_key() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.secret_key)
  return secret_key_.GetNoArena();
}
inline void GetPlayerTokenRsp::set_secret_key(const ::std::string& value) {
  
  secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.secret_key)
}
#if LANG_CXX11
inline void GetPlayerTokenRsp::set_secret_key(::std::string&& value) {
  
  secret_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.secret_key)
}
#endif
inline void GetPlayerTokenRsp::set_secret_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.secret_key)
}
inline void GetPlayerTokenRsp::set_secret_key(const char* value, size_t size) {
  
  secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.secret_key)
}
inline ::std::string* GetPlayerTokenRsp::mutable_secret_key() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.secret_key)
  return secret_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenRsp::release_secret_key() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.secret_key)
  
  return secret_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenRsp::set_allocated_secret_key(::std::string* secret_key) {
  if (secret_key != NULL) {
    
  } else {
    
  }
  secret_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secret_key);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.secret_key)
}

// .proto.StopServerInfo stop_server = 1382;
inline bool GetPlayerTokenRsp::has_stop_server() const {
  return this != internal_default_instance() && stop_server_ != NULL;
}
inline void GetPlayerTokenRsp::clear_stop_server() {
  if (GetArenaNoVirtual() == NULL && stop_server_ != NULL) delete stop_server_;
  stop_server_ = NULL;
}
inline const ::proto::StopServerInfo& GetPlayerTokenRsp::stop_server() const {
  const ::proto::StopServerInfo* p = stop_server_;
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.stop_server)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::StopServerInfo*>(
      &::proto::_StopServerInfo_default_instance_);
}
inline ::proto::StopServerInfo* GetPlayerTokenRsp::mutable_stop_server() {
  
  if (stop_server_ == NULL) {
    stop_server_ = new ::proto::StopServerInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.stop_server)
  return stop_server_;
}
inline ::proto::StopServerInfo* GetPlayerTokenRsp::release_stop_server() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.stop_server)
  
  ::proto::StopServerInfo* temp = stop_server_;
  stop_server_ = NULL;
  return temp;
}
inline void GetPlayerTokenRsp::set_allocated_stop_server(::proto::StopServerInfo* stop_server) {
  delete stop_server_;
  stop_server_ = stop_server;
  if (stop_server) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.stop_server)
}

// int32 retcode = 2;
inline void GetPlayerTokenRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetPlayerTokenRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.retcode)
  return retcode_;
}
inline void GetPlayerTokenRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.retcode)
}

// uint32 uid = 1;
inline void GetPlayerTokenRsp::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenRsp::uid() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.uid)
  return uid_;
}
inline void GetPlayerTokenRsp::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.uid)
}

// bool is_proficient_player = 9;
inline void GetPlayerTokenRsp::clear_is_proficient_player() {
  is_proficient_player_ = false;
}
inline bool GetPlayerTokenRsp::is_proficient_player() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.is_proficient_player)
  return is_proficient_player_;
}
inline void GetPlayerTokenRsp::set_is_proficient_player(bool value) {
  
  is_proficient_player_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.is_proficient_player)
}

// uint32 reg_platform = 1112;
inline void GetPlayerTokenRsp::clear_reg_platform() {
  reg_platform_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenRsp::reg_platform() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.reg_platform)
  return reg_platform_;
}
inline void GetPlayerTokenRsp::set_reg_platform(::google::protobuf::uint32 value) {
  
  reg_platform_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.reg_platform)
}

// string server_rand_key = 1493;
inline void GetPlayerTokenRsp::clear_server_rand_key() {
  server_rand_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenRsp::server_rand_key() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.server_rand_key)
  return server_rand_key_.GetNoArena();
}
inline void GetPlayerTokenRsp::set_server_rand_key(const ::std::string& value) {
  
  server_rand_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.server_rand_key)
}
#if LANG_CXX11
inline void GetPlayerTokenRsp::set_server_rand_key(::std::string&& value) {
  
  server_rand_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.server_rand_key)
}
#endif
inline void GetPlayerTokenRsp::set_server_rand_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  server_rand_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.server_rand_key)
}
inline void GetPlayerTokenRsp::set_server_rand_key(const char* value, size_t size) {
  
  server_rand_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.server_rand_key)
}
inline ::std::string* GetPlayerTokenRsp::mutable_server_rand_key() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.server_rand_key)
  return server_rand_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenRsp::release_server_rand_key() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.server_rand_key)
  
  return server_rand_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenRsp::set_allocated_server_rand_key(::std::string* server_rand_key) {
  if (server_rand_key != NULL) {
    
  } else {
    
  }
  server_rand_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_rand_key);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.server_rand_key)
}

// bytes extra_bin_data = 3;
inline void GetPlayerTokenRsp::clear_extra_bin_data() {
  extra_bin_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenRsp::extra_bin_data() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.extra_bin_data)
  return extra_bin_data_.GetNoArena();
}
inline void GetPlayerTokenRsp::set_extra_bin_data(const ::std::string& value) {
  
  extra_bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.extra_bin_data)
}
#if LANG_CXX11
inline void GetPlayerTokenRsp::set_extra_bin_data(::std::string&& value) {
  
  extra_bin_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.extra_bin_data)
}
#endif
inline void GetPlayerTokenRsp::set_extra_bin_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  extra_bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.extra_bin_data)
}
inline void GetPlayerTokenRsp::set_extra_bin_data(const void* value, size_t size) {
  
  extra_bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.extra_bin_data)
}
inline ::std::string* GetPlayerTokenRsp::mutable_extra_bin_data() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.extra_bin_data)
  return extra_bin_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenRsp::release_extra_bin_data() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.extra_bin_data)
  
  return extra_bin_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenRsp::set_allocated_extra_bin_data(::std::string* extra_bin_data) {
  if (extra_bin_data != NULL) {
    
  } else {
    
  }
  extra_bin_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra_bin_data);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.extra_bin_data)
}

// string client_ip_str = 860;
inline void GetPlayerTokenRsp::clear_client_ip_str() {
  client_ip_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenRsp::client_ip_str() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.client_ip_str)
  return client_ip_str_.GetNoArena();
}
inline void GetPlayerTokenRsp::set_client_ip_str(const ::std::string& value) {
  
  client_ip_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.client_ip_str)
}
#if LANG_CXX11
inline void GetPlayerTokenRsp::set_client_ip_str(::std::string&& value) {
  
  client_ip_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.client_ip_str)
}
#endif
inline void GetPlayerTokenRsp::set_client_ip_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_ip_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.client_ip_str)
}
inline void GetPlayerTokenRsp::set_client_ip_str(const char* value, size_t size) {
  
  client_ip_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.client_ip_str)
}
inline ::std::string* GetPlayerTokenRsp::mutable_client_ip_str() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.client_ip_str)
  return client_ip_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenRsp::release_client_ip_str() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.client_ip_str)
  
  return client_ip_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenRsp::set_allocated_client_ip_str(::std::string* client_ip_str) {
  if (client_ip_str != NULL) {
    
  } else {
    
  }
  client_ip_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_ip_str);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.client_ip_str)
}

// uint32 gm_uid = 10;
inline void GetPlayerTokenRsp::clear_gm_uid() {
  gm_uid_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenRsp::gm_uid() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.gm_uid)
  return gm_uid_;
}
inline void GetPlayerTokenRsp::set_gm_uid(::google::protobuf::uint32 value) {
  
  gm_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.gm_uid)
}

// uint32 key_id = 1172;
inline void GetPlayerTokenRsp::clear_key_id() {
  key_id_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenRsp::key_id() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.key_id)
  return key_id_;
}
inline void GetPlayerTokenRsp::set_key_id(::google::protobuf::uint32 value) {
  
  key_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.key_id)
}

// -------------------------------------------------------------------

// TrackingIOInfo

// string rydevicetype = 11;
inline void TrackingIOInfo::clear_rydevicetype() {
  rydevicetype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrackingIOInfo::rydevicetype() const {
  // @@protoc_insertion_point(field_get:proto.TrackingIOInfo.rydevicetype)
  return rydevicetype_.GetNoArena();
}
inline void TrackingIOInfo::set_rydevicetype(const ::std::string& value) {
  
  rydevicetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.TrackingIOInfo.rydevicetype)
}
#if LANG_CXX11
inline void TrackingIOInfo::set_rydevicetype(::std::string&& value) {
  
  rydevicetype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.TrackingIOInfo.rydevicetype)
}
#endif
inline void TrackingIOInfo::set_rydevicetype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  rydevicetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.TrackingIOInfo.rydevicetype)
}
inline void TrackingIOInfo::set_rydevicetype(const char* value, size_t size) {
  
  rydevicetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.TrackingIOInfo.rydevicetype)
}
inline ::std::string* TrackingIOInfo::mutable_rydevicetype() {
  
  // @@protoc_insertion_point(field_mutable:proto.TrackingIOInfo.rydevicetype)
  return rydevicetype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrackingIOInfo::release_rydevicetype() {
  // @@protoc_insertion_point(field_release:proto.TrackingIOInfo.rydevicetype)
  
  return rydevicetype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrackingIOInfo::set_allocated_rydevicetype(::std::string* rydevicetype) {
  if (rydevicetype != NULL) {
    
  } else {
    
  }
  rydevicetype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rydevicetype);
  // @@protoc_insertion_point(field_set_allocated:proto.TrackingIOInfo.rydevicetype)
}

// string mac = 6;
inline void TrackingIOInfo::clear_mac() {
  mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrackingIOInfo::mac() const {
  // @@protoc_insertion_point(field_get:proto.TrackingIOInfo.mac)
  return mac_.GetNoArena();
}
inline void TrackingIOInfo::set_mac(const ::std::string& value) {
  
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.TrackingIOInfo.mac)
}
#if LANG_CXX11
inline void TrackingIOInfo::set_mac(::std::string&& value) {
  
  mac_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.TrackingIOInfo.mac)
}
#endif
inline void TrackingIOInfo::set_mac(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.TrackingIOInfo.mac)
}
inline void TrackingIOInfo::set_mac(const char* value, size_t size) {
  
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.TrackingIOInfo.mac)
}
inline ::std::string* TrackingIOInfo::mutable_mac() {
  
  // @@protoc_insertion_point(field_mutable:proto.TrackingIOInfo.mac)
  return mac_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrackingIOInfo::release_mac() {
  // @@protoc_insertion_point(field_release:proto.TrackingIOInfo.mac)
  
  return mac_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrackingIOInfo::set_allocated_mac(::std::string* mac) {
  if (mac != NULL) {
    
  } else {
    
  }
  mac_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac);
  // @@protoc_insertion_point(field_set_allocated:proto.TrackingIOInfo.mac)
}

// string deviceid = 9;
inline void TrackingIOInfo::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrackingIOInfo::deviceid() const {
  // @@protoc_insertion_point(field_get:proto.TrackingIOInfo.deviceid)
  return deviceid_.GetNoArena();
}
inline void TrackingIOInfo::set_deviceid(const ::std::string& value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.TrackingIOInfo.deviceid)
}
#if LANG_CXX11
inline void TrackingIOInfo::set_deviceid(::std::string&& value) {
  
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.TrackingIOInfo.deviceid)
}
#endif
inline void TrackingIOInfo::set_deviceid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.TrackingIOInfo.deviceid)
}
inline void TrackingIOInfo::set_deviceid(const char* value, size_t size) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.TrackingIOInfo.deviceid)
}
inline ::std::string* TrackingIOInfo::mutable_deviceid() {
  
  // @@protoc_insertion_point(field_mutable:proto.TrackingIOInfo.deviceid)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrackingIOInfo::release_deviceid() {
  // @@protoc_insertion_point(field_release:proto.TrackingIOInfo.deviceid)
  
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrackingIOInfo::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    
  } else {
    
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:proto.TrackingIOInfo.deviceid)
}

// string client_tz = 5;
inline void TrackingIOInfo::clear_client_tz() {
  client_tz_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrackingIOInfo::client_tz() const {
  // @@protoc_insertion_point(field_get:proto.TrackingIOInfo.client_tz)
  return client_tz_.GetNoArena();
}
inline void TrackingIOInfo::set_client_tz(const ::std::string& value) {
  
  client_tz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.TrackingIOInfo.client_tz)
}
#if LANG_CXX11
inline void TrackingIOInfo::set_client_tz(::std::string&& value) {
  
  client_tz_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.TrackingIOInfo.client_tz)
}
#endif
inline void TrackingIOInfo::set_client_tz(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_tz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.TrackingIOInfo.client_tz)
}
inline void TrackingIOInfo::set_client_tz(const char* value, size_t size) {
  
  client_tz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.TrackingIOInfo.client_tz)
}
inline ::std::string* TrackingIOInfo::mutable_client_tz() {
  
  // @@protoc_insertion_point(field_mutable:proto.TrackingIOInfo.client_tz)
  return client_tz_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrackingIOInfo::release_client_tz() {
  // @@protoc_insertion_point(field_release:proto.TrackingIOInfo.client_tz)
  
  return client_tz_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrackingIOInfo::set_allocated_client_tz(::std::string* client_tz) {
  if (client_tz != NULL) {
    
  } else {
    
  }
  client_tz_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_tz);
  // @@protoc_insertion_point(field_set_allocated:proto.TrackingIOInfo.client_tz)
}

// string current_caid = 7;
inline void TrackingIOInfo::clear_current_caid() {
  current_caid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrackingIOInfo::current_caid() const {
  // @@protoc_insertion_point(field_get:proto.TrackingIOInfo.current_caid)
  return current_caid_.GetNoArena();
}
inline void TrackingIOInfo::set_current_caid(const ::std::string& value) {
  
  current_caid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.TrackingIOInfo.current_caid)
}
#if LANG_CXX11
inline void TrackingIOInfo::set_current_caid(::std::string&& value) {
  
  current_caid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.TrackingIOInfo.current_caid)
}
#endif
inline void TrackingIOInfo::set_current_caid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  current_caid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.TrackingIOInfo.current_caid)
}
inline void TrackingIOInfo::set_current_caid(const char* value, size_t size) {
  
  current_caid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.TrackingIOInfo.current_caid)
}
inline ::std::string* TrackingIOInfo::mutable_current_caid() {
  
  // @@protoc_insertion_point(field_mutable:proto.TrackingIOInfo.current_caid)
  return current_caid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrackingIOInfo::release_current_caid() {
  // @@protoc_insertion_point(field_release:proto.TrackingIOInfo.current_caid)
  
  return current_caid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrackingIOInfo::set_allocated_current_caid(::std::string* current_caid) {
  if (current_caid != NULL) {
    
  } else {
    
  }
  current_caid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), current_caid);
  // @@protoc_insertion_point(field_set_allocated:proto.TrackingIOInfo.current_caid)
}

// string cached_caid = 15;
inline void TrackingIOInfo::clear_cached_caid() {
  cached_caid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrackingIOInfo::cached_caid() const {
  // @@protoc_insertion_point(field_get:proto.TrackingIOInfo.cached_caid)
  return cached_caid_.GetNoArena();
}
inline void TrackingIOInfo::set_cached_caid(const ::std::string& value) {
  
  cached_caid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.TrackingIOInfo.cached_caid)
}
#if LANG_CXX11
inline void TrackingIOInfo::set_cached_caid(::std::string&& value) {
  
  cached_caid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.TrackingIOInfo.cached_caid)
}
#endif
inline void TrackingIOInfo::set_cached_caid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cached_caid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.TrackingIOInfo.cached_caid)
}
inline void TrackingIOInfo::set_cached_caid(const char* value, size_t size) {
  
  cached_caid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.TrackingIOInfo.cached_caid)
}
inline ::std::string* TrackingIOInfo::mutable_cached_caid() {
  
  // @@protoc_insertion_point(field_mutable:proto.TrackingIOInfo.cached_caid)
  return cached_caid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrackingIOInfo::release_cached_caid() {
  // @@protoc_insertion_point(field_release:proto.TrackingIOInfo.cached_caid)
  
  return cached_caid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrackingIOInfo::set_allocated_cached_caid(::std::string* cached_caid) {
  if (cached_caid != NULL) {
    
  } else {
    
  }
  cached_caid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cached_caid);
  // @@protoc_insertion_point(field_set_allocated:proto.TrackingIOInfo.cached_caid)
}

// string appid = 1;
inline void TrackingIOInfo::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrackingIOInfo::appid() const {
  // @@protoc_insertion_point(field_get:proto.TrackingIOInfo.appid)
  return appid_.GetNoArena();
}
inline void TrackingIOInfo::set_appid(const ::std::string& value) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.TrackingIOInfo.appid)
}
#if LANG_CXX11
inline void TrackingIOInfo::set_appid(::std::string&& value) {
  
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.TrackingIOInfo.appid)
}
#endif
inline void TrackingIOInfo::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.TrackingIOInfo.appid)
}
inline void TrackingIOInfo::set_appid(const char* value, size_t size) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.TrackingIOInfo.appid)
}
inline ::std::string* TrackingIOInfo::mutable_appid() {
  
  // @@protoc_insertion_point(field_mutable:proto.TrackingIOInfo.appid)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrackingIOInfo::release_appid() {
  // @@protoc_insertion_point(field_release:proto.TrackingIOInfo.appid)
  
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrackingIOInfo::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    
  } else {
    
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:proto.TrackingIOInfo.appid)
}

// -------------------------------------------------------------------

// AdjustTrackingInfo

// string event_token = 9;
inline void AdjustTrackingInfo::clear_event_token() {
  event_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AdjustTrackingInfo::event_token() const {
  // @@protoc_insertion_point(field_get:proto.AdjustTrackingInfo.event_token)
  return event_token_.GetNoArena();
}
inline void AdjustTrackingInfo::set_event_token(const ::std::string& value) {
  
  event_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AdjustTrackingInfo.event_token)
}
#if LANG_CXX11
inline void AdjustTrackingInfo::set_event_token(::std::string&& value) {
  
  event_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AdjustTrackingInfo.event_token)
}
#endif
inline void AdjustTrackingInfo::set_event_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  event_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AdjustTrackingInfo.event_token)
}
inline void AdjustTrackingInfo::set_event_token(const char* value, size_t size) {
  
  event_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AdjustTrackingInfo.event_token)
}
inline ::std::string* AdjustTrackingInfo::mutable_event_token() {
  
  // @@protoc_insertion_point(field_mutable:proto.AdjustTrackingInfo.event_token)
  return event_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdjustTrackingInfo::release_event_token() {
  // @@protoc_insertion_point(field_release:proto.AdjustTrackingInfo.event_token)
  
  return event_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdjustTrackingInfo::set_allocated_event_token(::std::string* event_token) {
  if (event_token != NULL) {
    
  } else {
    
  }
  event_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), event_token);
  // @@protoc_insertion_point(field_set_allocated:proto.AdjustTrackingInfo.event_token)
}

// string adid = 4;
inline void AdjustTrackingInfo::clear_adid() {
  adid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AdjustTrackingInfo::adid() const {
  // @@protoc_insertion_point(field_get:proto.AdjustTrackingInfo.adid)
  return adid_.GetNoArena();
}
inline void AdjustTrackingInfo::set_adid(const ::std::string& value) {
  
  adid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AdjustTrackingInfo.adid)
}
#if LANG_CXX11
inline void AdjustTrackingInfo::set_adid(::std::string&& value) {
  
  adid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AdjustTrackingInfo.adid)
}
#endif
inline void AdjustTrackingInfo::set_adid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  adid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AdjustTrackingInfo.adid)
}
inline void AdjustTrackingInfo::set_adid(const char* value, size_t size) {
  
  adid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AdjustTrackingInfo.adid)
}
inline ::std::string* AdjustTrackingInfo::mutable_adid() {
  
  // @@protoc_insertion_point(field_mutable:proto.AdjustTrackingInfo.adid)
  return adid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdjustTrackingInfo::release_adid() {
  // @@protoc_insertion_point(field_release:proto.AdjustTrackingInfo.adid)
  
  return adid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdjustTrackingInfo::set_allocated_adid(::std::string* adid) {
  if (adid != NULL) {
    
  } else {
    
  }
  adid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), adid);
  // @@protoc_insertion_point(field_set_allocated:proto.AdjustTrackingInfo.adid)
}

// string idfa = 2;
inline void AdjustTrackingInfo::clear_idfa() {
  idfa_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AdjustTrackingInfo::idfa() const {
  // @@protoc_insertion_point(field_get:proto.AdjustTrackingInfo.idfa)
  return idfa_.GetNoArena();
}
inline void AdjustTrackingInfo::set_idfa(const ::std::string& value) {
  
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AdjustTrackingInfo.idfa)
}
#if LANG_CXX11
inline void AdjustTrackingInfo::set_idfa(::std::string&& value) {
  
  idfa_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AdjustTrackingInfo.idfa)
}
#endif
inline void AdjustTrackingInfo::set_idfa(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AdjustTrackingInfo.idfa)
}
inline void AdjustTrackingInfo::set_idfa(const char* value, size_t size) {
  
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AdjustTrackingInfo.idfa)
}
inline ::std::string* AdjustTrackingInfo::mutable_idfa() {
  
  // @@protoc_insertion_point(field_mutable:proto.AdjustTrackingInfo.idfa)
  return idfa_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdjustTrackingInfo::release_idfa() {
  // @@protoc_insertion_point(field_release:proto.AdjustTrackingInfo.idfa)
  
  return idfa_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdjustTrackingInfo::set_allocated_idfa(::std::string* idfa) {
  if (idfa != NULL) {
    
  } else {
    
  }
  idfa_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), idfa);
  // @@protoc_insertion_point(field_set_allocated:proto.AdjustTrackingInfo.idfa)
}

// string app_token = 14;
inline void AdjustTrackingInfo::clear_app_token() {
  app_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AdjustTrackingInfo::app_token() const {
  // @@protoc_insertion_point(field_get:proto.AdjustTrackingInfo.app_token)
  return app_token_.GetNoArena();
}
inline void AdjustTrackingInfo::set_app_token(const ::std::string& value) {
  
  app_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AdjustTrackingInfo.app_token)
}
#if LANG_CXX11
inline void AdjustTrackingInfo::set_app_token(::std::string&& value) {
  
  app_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AdjustTrackingInfo.app_token)
}
#endif
inline void AdjustTrackingInfo::set_app_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AdjustTrackingInfo.app_token)
}
inline void AdjustTrackingInfo::set_app_token(const char* value, size_t size) {
  
  app_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AdjustTrackingInfo.app_token)
}
inline ::std::string* AdjustTrackingInfo::mutable_app_token() {
  
  // @@protoc_insertion_point(field_mutable:proto.AdjustTrackingInfo.app_token)
  return app_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdjustTrackingInfo::release_app_token() {
  // @@protoc_insertion_point(field_release:proto.AdjustTrackingInfo.app_token)
  
  return app_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdjustTrackingInfo::set_allocated_app_token(::std::string* app_token) {
  if (app_token != NULL) {
    
  } else {
    
  }
  app_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_token);
  // @@protoc_insertion_point(field_set_allocated:proto.AdjustTrackingInfo.app_token)
}

// string gps_adid = 3;
inline void AdjustTrackingInfo::clear_gps_adid() {
  gps_adid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AdjustTrackingInfo::gps_adid() const {
  // @@protoc_insertion_point(field_get:proto.AdjustTrackingInfo.gps_adid)
  return gps_adid_.GetNoArena();
}
inline void AdjustTrackingInfo::set_gps_adid(const ::std::string& value) {
  
  gps_adid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AdjustTrackingInfo.gps_adid)
}
#if LANG_CXX11
inline void AdjustTrackingInfo::set_gps_adid(::std::string&& value) {
  
  gps_adid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AdjustTrackingInfo.gps_adid)
}
#endif
inline void AdjustTrackingInfo::set_gps_adid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gps_adid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AdjustTrackingInfo.gps_adid)
}
inline void AdjustTrackingInfo::set_gps_adid(const char* value, size_t size) {
  
  gps_adid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AdjustTrackingInfo.gps_adid)
}
inline ::std::string* AdjustTrackingInfo::mutable_gps_adid() {
  
  // @@protoc_insertion_point(field_mutable:proto.AdjustTrackingInfo.gps_adid)
  return gps_adid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdjustTrackingInfo::release_gps_adid() {
  // @@protoc_insertion_point(field_release:proto.AdjustTrackingInfo.gps_adid)
  
  return gps_adid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdjustTrackingInfo::set_allocated_gps_adid(::std::string* gps_adid) {
  if (gps_adid != NULL) {
    
  } else {
    
  }
  gps_adid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gps_adid);
  // @@protoc_insertion_point(field_set_allocated:proto.AdjustTrackingInfo.gps_adid)
}

// string fire_adid = 13;
inline void AdjustTrackingInfo::clear_fire_adid() {
  fire_adid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AdjustTrackingInfo::fire_adid() const {
  // @@protoc_insertion_point(field_get:proto.AdjustTrackingInfo.fire_adid)
  return fire_adid_.GetNoArena();
}
inline void AdjustTrackingInfo::set_fire_adid(const ::std::string& value) {
  
  fire_adid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AdjustTrackingInfo.fire_adid)
}
#if LANG_CXX11
inline void AdjustTrackingInfo::set_fire_adid(::std::string&& value) {
  
  fire_adid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AdjustTrackingInfo.fire_adid)
}
#endif
inline void AdjustTrackingInfo::set_fire_adid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fire_adid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AdjustTrackingInfo.fire_adid)
}
inline void AdjustTrackingInfo::set_fire_adid(const char* value, size_t size) {
  
  fire_adid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AdjustTrackingInfo.fire_adid)
}
inline ::std::string* AdjustTrackingInfo::mutable_fire_adid() {
  
  // @@protoc_insertion_point(field_mutable:proto.AdjustTrackingInfo.fire_adid)
  return fire_adid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdjustTrackingInfo::release_fire_adid() {
  // @@protoc_insertion_point(field_release:proto.AdjustTrackingInfo.fire_adid)
  
  return fire_adid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdjustTrackingInfo::set_allocated_fire_adid(::std::string* fire_adid) {
  if (fire_adid != NULL) {
    
  } else {
    
  }
  fire_adid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fire_adid);
  // @@protoc_insertion_point(field_set_allocated:proto.AdjustTrackingInfo.fire_adid)
}

// -------------------------------------------------------------------

// PlayerLoginReq

// uint32 language_type = 6;
inline void PlayerLoginReq::clear_language_type() {
  language_type_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginReq::language_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.language_type)
  return language_type_;
}
inline void PlayerLoginReq::set_language_type(::google::protobuf::uint32 value) {
  
  language_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.language_type)
}

// uint32 reg_platform = 615;
inline void PlayerLoginReq::clear_reg_platform() {
  reg_platform_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginReq::reg_platform() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.reg_platform)
  return reg_platform_;
}
inline void PlayerLoginReq::set_reg_platform(::google::protobuf::uint32 value) {
  
  reg_platform_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.reg_platform)
}

// .proto.TrackingIOInfo tracking_io_info = 1660;
inline bool PlayerLoginReq::has_tracking_io_info() const {
  return this != internal_default_instance() && tracking_io_info_ != NULL;
}
inline void PlayerLoginReq::clear_tracking_io_info() {
  if (GetArenaNoVirtual() == NULL && tracking_io_info_ != NULL) delete tracking_io_info_;
  tracking_io_info_ = NULL;
}
inline const ::proto::TrackingIOInfo& PlayerLoginReq::tracking_io_info() const {
  const ::proto::TrackingIOInfo* p = tracking_io_info_;
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.tracking_io_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TrackingIOInfo*>(
      &::proto::_TrackingIOInfo_default_instance_);
}
inline ::proto::TrackingIOInfo* PlayerLoginReq::mutable_tracking_io_info() {
  
  if (tracking_io_info_ == NULL) {
    tracking_io_info_ = new ::proto::TrackingIOInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.tracking_io_info)
  return tracking_io_info_;
}
inline ::proto::TrackingIOInfo* PlayerLoginReq::release_tracking_io_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.tracking_io_info)
  
  ::proto::TrackingIOInfo* temp = tracking_io_info_;
  tracking_io_info_ = NULL;
  return temp;
}
inline void PlayerLoginReq::set_allocated_tracking_io_info(::proto::TrackingIOInfo* tracking_io_info) {
  delete tracking_io_info_;
  tracking_io_info_ = tracking_io_info;
  if (tracking_io_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.tracking_io_info)
}

// uint32 account_type = 13;
inline void PlayerLoginReq::clear_account_type() {
  account_type_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginReq::account_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.account_type)
  return account_type_;
}
inline void PlayerLoginReq::set_account_type(::google::protobuf::uint32 value) {
  
  account_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.account_type)
}

// string token = 15;
inline void PlayerLoginReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::token() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.token)
  return token_.GetNoArena();
}
inline void PlayerLoginReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.token)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.token)
}
#endif
inline void PlayerLoginReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.token)
}
inline void PlayerLoginReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.token)
}
inline ::std::string* PlayerLoginReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_token() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.token)
}

// bytes extra_bin_data = 1458;
inline void PlayerLoginReq::clear_extra_bin_data() {
  extra_bin_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::extra_bin_data() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.extra_bin_data)
  return extra_bin_data_.GetNoArena();
}
inline void PlayerLoginReq::set_extra_bin_data(const ::std::string& value) {
  
  extra_bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.extra_bin_data)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_extra_bin_data(::std::string&& value) {
  
  extra_bin_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.extra_bin_data)
}
#endif
inline void PlayerLoginReq::set_extra_bin_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  extra_bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.extra_bin_data)
}
inline void PlayerLoginReq::set_extra_bin_data(const void* value, size_t size) {
  
  extra_bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.extra_bin_data)
}
inline ::std::string* PlayerLoginReq::mutable_extra_bin_data() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.extra_bin_data)
  return extra_bin_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_extra_bin_data() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.extra_bin_data)
  
  return extra_bin_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_extra_bin_data(::std::string* extra_bin_data) {
  if (extra_bin_data != NULL) {
    
  } else {
    
  }
  extra_bin_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra_bin_data);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.extra_bin_data)
}

// uint32 channel_id = 1314;
inline void PlayerLoginReq::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginReq::channel_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.channel_id)
  return channel_id_;
}
inline void PlayerLoginReq::set_channel_id(::google::protobuf::uint32 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.channel_id)
}

// uint32 client_data_version = 688;
inline void PlayerLoginReq::clear_client_data_version() {
  client_data_version_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginReq::client_data_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.client_data_version)
  return client_data_version_;
}
inline void PlayerLoginReq::set_client_data_version(::google::protobuf::uint32 value) {
  
  client_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.client_data_version)
}

// string account_uid = 2;
inline void PlayerLoginReq::clear_account_uid() {
  account_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::account_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.account_uid)
  return account_uid_.GetNoArena();
}
inline void PlayerLoginReq::set_account_uid(const ::std::string& value) {
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.account_uid)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_account_uid(::std::string&& value) {
  
  account_uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.account_uid)
}
#endif
inline void PlayerLoginReq::set_account_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.account_uid)
}
inline void PlayerLoginReq::set_account_uid(const char* value, size_t size) {
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.account_uid)
}
inline ::std::string* PlayerLoginReq::mutable_account_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.account_uid)
  return account_uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_account_uid() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.account_uid)
  
  return account_uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_account_uid(::std::string* account_uid) {
  if (account_uid != NULL) {
    
  } else {
    
  }
  account_uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_uid);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.account_uid)
}

// string client_version = 12;
inline void PlayerLoginReq::clear_client_version() {
  client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::client_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.client_version)
  return client_version_.GetNoArena();
}
inline void PlayerLoginReq::set_client_version(const ::std::string& value) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.client_version)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_client_version(::std::string&& value) {
  
  client_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.client_version)
}
#endif
inline void PlayerLoginReq::set_client_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.client_version)
}
inline void PlayerLoginReq::set_client_version(const char* value, size_t size) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.client_version)
}
inline ::std::string* PlayerLoginReq::mutable_client_version() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.client_version)
  return client_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_client_version() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.client_version)
  
  return client_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_client_version(::std::string* client_version) {
  if (client_version != NULL) {
    
  } else {
    
  }
  client_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.client_version)
}

// string security_library_md5 = 772;
inline void PlayerLoginReq::clear_security_library_md5() {
  security_library_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::security_library_md5() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.security_library_md5)
  return security_library_md5_.GetNoArena();
}
inline void PlayerLoginReq::set_security_library_md5(const ::std::string& value) {
  
  security_library_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.security_library_md5)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_security_library_md5(::std::string&& value) {
  
  security_library_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.security_library_md5)
}
#endif
inline void PlayerLoginReq::set_security_library_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  security_library_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.security_library_md5)
}
inline void PlayerLoginReq::set_security_library_md5(const char* value, size_t size) {
  
  security_library_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.security_library_md5)
}
inline ::std::string* PlayerLoginReq::mutable_security_library_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.security_library_md5)
  return security_library_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_security_library_md5() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.security_library_md5)
  
  return security_library_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_security_library_md5(::std::string* security_library_md5) {
  if (security_library_md5 != NULL) {
    
  } else {
    
  }
  security_library_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), security_library_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.security_library_md5)
}

// string country_code = 2000;
inline void PlayerLoginReq::clear_country_code() {
  country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::country_code() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.country_code)
  return country_code_.GetNoArena();
}
inline void PlayerLoginReq::set_country_code(const ::std::string& value) {
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.country_code)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_country_code(::std::string&& value) {
  
  country_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.country_code)
}
#endif
inline void PlayerLoginReq::set_country_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.country_code)
}
inline void PlayerLoginReq::set_country_code(const char* value, size_t size) {
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.country_code)
}
inline ::std::string* PlayerLoginReq::mutable_country_code() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.country_code)
  return country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_country_code() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.country_code)
  
  return country_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_country_code(::std::string* country_code) {
  if (country_code != NULL) {
    
  } else {
    
  }
  country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country_code);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.country_code)
}

// string psn_id = 1268;
inline void PlayerLoginReq::clear_psn_id() {
  psn_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::psn_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.psn_id)
  return psn_id_.GetNoArena();
}
inline void PlayerLoginReq::set_psn_id(const ::std::string& value) {
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.psn_id)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_psn_id(::std::string&& value) {
  
  psn_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.psn_id)
}
#endif
inline void PlayerLoginReq::set_psn_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.psn_id)
}
inline void PlayerLoginReq::set_psn_id(const char* value, size_t size) {
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.psn_id)
}
inline ::std::string* PlayerLoginReq::mutable_psn_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.psn_id)
  return psn_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_psn_id() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.psn_id)
  
  return psn_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_psn_id(::std::string* psn_id) {
  if (psn_id != NULL) {
    
  } else {
    
  }
  psn_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), psn_id);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.psn_id)
}

// uint32 client_port = 431;
inline void PlayerLoginReq::clear_client_port() {
  client_port_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginReq::client_port() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.client_port)
  return client_port_;
}
inline void PlayerLoginReq::set_client_port(::google::protobuf::uint32 value) {
  
  client_port_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.client_port)
}

// string device_name = 9;
inline void PlayerLoginReq::clear_device_name() {
  device_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::device_name() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.device_name)
  return device_name_.GetNoArena();
}
inline void PlayerLoginReq::set_device_name(const ::std::string& value) {
  
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.device_name)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_device_name(::std::string&& value) {
  
  device_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.device_name)
}
#endif
inline void PlayerLoginReq::set_device_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.device_name)
}
inline void PlayerLoginReq::set_device_name(const char* value, size_t size) {
  
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.device_name)
}
inline ::std::string* PlayerLoginReq::mutable_device_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.device_name)
  return device_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_device_name() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.device_name)
  
  return device_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_device_name(::std::string* device_name) {
  if (device_name != NULL) {
    
  } else {
    
  }
  device_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_name);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.device_name)
}

// string cps = 1163;
inline void PlayerLoginReq::clear_cps() {
  cps_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::cps() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.cps)
  return cps_.GetNoArena();
}
inline void PlayerLoginReq::set_cps(const ::std::string& value) {
  
  cps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.cps)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_cps(::std::string&& value) {
  
  cps_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.cps)
}
#endif
inline void PlayerLoginReq::set_cps(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.cps)
}
inline void PlayerLoginReq::set_cps(const char* value, size_t size) {
  
  cps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.cps)
}
inline ::std::string* PlayerLoginReq::mutable_cps() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.cps)
  return cps_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_cps() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.cps)
  
  return cps_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_cps(::std::string* cps) {
  if (cps != NULL) {
    
  } else {
    
  }
  cps_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cps);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.cps)
}

// uint64 login_rand = 3;
inline void PlayerLoginReq::clear_login_rand() {
  login_rand_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PlayerLoginReq::login_rand() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.login_rand)
  return login_rand_;
}
inline void PlayerLoginReq::set_login_rand(::google::protobuf::uint64 value) {
  
  login_rand_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.login_rand)
}

// uint32 target_home_param = 984;
inline void PlayerLoginReq::clear_target_home_param() {
  target_home_param_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginReq::target_home_param() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.target_home_param)
  return target_home_param_;
}
inline void PlayerLoginReq::set_target_home_param(::google::protobuf::uint32 value) {
  
  target_home_param_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.target_home_param)
}

// .proto.AdjustTrackingInfo adjust_tracking_info = 1816;
inline bool PlayerLoginReq::has_adjust_tracking_info() const {
  return this != internal_default_instance() && adjust_tracking_info_ != NULL;
}
inline void PlayerLoginReq::clear_adjust_tracking_info() {
  if (GetArenaNoVirtual() == NULL && adjust_tracking_info_ != NULL) delete adjust_tracking_info_;
  adjust_tracking_info_ = NULL;
}
inline const ::proto::AdjustTrackingInfo& PlayerLoginReq::adjust_tracking_info() const {
  const ::proto::AdjustTrackingInfo* p = adjust_tracking_info_;
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.adjust_tracking_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AdjustTrackingInfo*>(
      &::proto::_AdjustTrackingInfo_default_instance_);
}
inline ::proto::AdjustTrackingInfo* PlayerLoginReq::mutable_adjust_tracking_info() {
  
  if (adjust_tracking_info_ == NULL) {
    adjust_tracking_info_ = new ::proto::AdjustTrackingInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.adjust_tracking_info)
  return adjust_tracking_info_;
}
inline ::proto::AdjustTrackingInfo* PlayerLoginReq::release_adjust_tracking_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.adjust_tracking_info)
  
  ::proto::AdjustTrackingInfo* temp = adjust_tracking_info_;
  adjust_tracking_info_ = NULL;
  return temp;
}
inline void PlayerLoginReq::set_allocated_adjust_tracking_info(::proto::AdjustTrackingInfo* adjust_tracking_info) {
  delete adjust_tracking_info_;
  adjust_tracking_info_ = adjust_tracking_info;
  if (adjust_tracking_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.adjust_tracking_info)
}

// bool is_transfer = 908;
inline void PlayerLoginReq::clear_is_transfer() {
  is_transfer_ = false;
}
inline bool PlayerLoginReq::is_transfer() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.is_transfer)
  return is_transfer_;
}
inline void PlayerLoginReq::set_is_transfer(bool value) {
  
  is_transfer_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.is_transfer)
}

// uint32 tag = 1787;
inline void PlayerLoginReq::clear_tag() {
  tag_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginReq::tag() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.tag)
  return tag_;
}
inline void PlayerLoginReq::set_tag(::google::protobuf::uint32 value) {
  
  tag_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.tag)
}

// bool is_guest = 5;
inline void PlayerLoginReq::clear_is_guest() {
  is_guest_ = false;
}
inline bool PlayerLoginReq::is_guest() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.is_guest)
  return is_guest_;
}
inline void PlayerLoginReq::set_is_guest(bool value) {
  
  is_guest_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.is_guest)
}

// bytes environment_error_code = 2026;
inline void PlayerLoginReq::clear_environment_error_code() {
  environment_error_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::environment_error_code() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.environment_error_code)
  return environment_error_code_.GetNoArena();
}
inline void PlayerLoginReq::set_environment_error_code(const ::std::string& value) {
  
  environment_error_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.environment_error_code)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_environment_error_code(::std::string&& value) {
  
  environment_error_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.environment_error_code)
}
#endif
inline void PlayerLoginReq::set_environment_error_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  environment_error_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.environment_error_code)
}
inline void PlayerLoginReq::set_environment_error_code(const void* value, size_t size) {
  
  environment_error_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.environment_error_code)
}
inline ::std::string* PlayerLoginReq::mutable_environment_error_code() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.environment_error_code)
  return environment_error_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_environment_error_code() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.environment_error_code)
  
  return environment_error_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_environment_error_code(::std::string* environment_error_code) {
  if (environment_error_code != NULL) {
    
  } else {
    
  }
  environment_error_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), environment_error_code);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.environment_error_code)
}

// string online_id = 903;
inline void PlayerLoginReq::clear_online_id() {
  online_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::online_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.online_id)
  return online_id_.GetNoArena();
}
inline void PlayerLoginReq::set_online_id(const ::std::string& value) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.online_id)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_online_id(::std::string&& value) {
  
  online_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.online_id)
}
#endif
inline void PlayerLoginReq::set_online_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.online_id)
}
inline void PlayerLoginReq::set_online_id(const char* value, size_t size) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.online_id)
}
inline ::std::string* PlayerLoginReq::mutable_online_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.online_id)
  return online_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_online_id() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.online_id)
  
  return online_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_online_id(::std::string* online_id) {
  if (online_id != NULL) {
    
  } else {
    
  }
  online_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), online_id);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.online_id)
}

// bool is_editor = 8;
inline void PlayerLoginReq::clear_is_editor() {
  is_editor_ = false;
}
inline bool PlayerLoginReq::is_editor() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.is_editor)
  return is_editor_;
}
inline void PlayerLoginReq::set_is_editor(bool value) {
  
  is_editor_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.is_editor)
}

// string checksum_client_version = 861;
inline void PlayerLoginReq::clear_checksum_client_version() {
  checksum_client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::checksum_client_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.checksum_client_version)
  return checksum_client_version_.GetNoArena();
}
inline void PlayerLoginReq::set_checksum_client_version(const ::std::string& value) {
  
  checksum_client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.checksum_client_version)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_checksum_client_version(::std::string&& value) {
  
  checksum_client_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.checksum_client_version)
}
#endif
inline void PlayerLoginReq::set_checksum_client_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  checksum_client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.checksum_client_version)
}
inline void PlayerLoginReq::set_checksum_client_version(const char* value, size_t size) {
  
  checksum_client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.checksum_client_version)
}
inline ::std::string* PlayerLoginReq::mutable_checksum_client_version() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.checksum_client_version)
  return checksum_client_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_checksum_client_version() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.checksum_client_version)
  
  return checksum_client_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_checksum_client_version(::std::string* checksum_client_version) {
  if (checksum_client_version != NULL) {
    
  } else {
    
  }
  checksum_client_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), checksum_client_version);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.checksum_client_version)
}

// bytes security_cmd_reply = 1995;
inline void PlayerLoginReq::clear_security_cmd_reply() {
  security_cmd_reply_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::security_cmd_reply() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.security_cmd_reply)
  return security_cmd_reply_.GetNoArena();
}
inline void PlayerLoginReq::set_security_cmd_reply(const ::std::string& value) {
  
  security_cmd_reply_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.security_cmd_reply)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_security_cmd_reply(::std::string&& value) {
  
  security_cmd_reply_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.security_cmd_reply)
}
#endif
inline void PlayerLoginReq::set_security_cmd_reply(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  security_cmd_reply_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.security_cmd_reply)
}
inline void PlayerLoginReq::set_security_cmd_reply(const void* value, size_t size) {
  
  security_cmd_reply_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.security_cmd_reply)
}
inline ::std::string* PlayerLoginReq::mutable_security_cmd_reply() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.security_cmd_reply)
  return security_cmd_reply_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_security_cmd_reply() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.security_cmd_reply)
  
  return security_cmd_reply_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_security_cmd_reply(::std::string* security_cmd_reply) {
  if (security_cmd_reply != NULL) {
    
  } else {
    
  }
  security_cmd_reply_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), security_cmd_reply);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.security_cmd_reply)
}

// string security_library_version = 1213;
inline void PlayerLoginReq::clear_security_library_version() {
  security_library_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::security_library_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.security_library_version)
  return security_library_version_.GetNoArena();
}
inline void PlayerLoginReq::set_security_library_version(const ::std::string& value) {
  
  security_library_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.security_library_version)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_security_library_version(::std::string&& value) {
  
  security_library_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.security_library_version)
}
#endif
inline void PlayerLoginReq::set_security_library_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  security_library_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.security_library_version)
}
inline void PlayerLoginReq::set_security_library_version(const char* value, size_t size) {
  
  security_library_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.security_library_version)
}
inline ::std::string* PlayerLoginReq::mutable_security_library_version() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.security_library_version)
  return security_library_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_security_library_version() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.security_library_version)
  
  return security_library_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_security_library_version(::std::string* security_library_version) {
  if (security_library_version != NULL) {
    
  } else {
    
  }
  security_library_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), security_library_version);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.security_library_version)
}

// string birthday = 1652;
inline void PlayerLoginReq::clear_birthday() {
  birthday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::birthday() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.birthday)
  return birthday_.GetNoArena();
}
inline void PlayerLoginReq::set_birthday(const ::std::string& value) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.birthday)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_birthday(::std::string&& value) {
  
  birthday_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.birthday)
}
#endif
inline void PlayerLoginReq::set_birthday(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.birthday)
}
inline void PlayerLoginReq::set_birthday(const char* value, size_t size) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.birthday)
}
inline ::std::string* PlayerLoginReq::mutable_birthday() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.birthday)
  return birthday_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_birthday() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.birthday)
  
  return birthday_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_birthday(::std::string* birthday) {
  if (birthday != NULL) {
    
  } else {
    
  }
  birthday_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), birthday);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.birthday)
}

// string device_uuid = 4;
inline void PlayerLoginReq::clear_device_uuid() {
  device_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::device_uuid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.device_uuid)
  return device_uuid_.GetNoArena();
}
inline void PlayerLoginReq::set_device_uuid(const ::std::string& value) {
  
  device_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.device_uuid)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_device_uuid(::std::string&& value) {
  
  device_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.device_uuid)
}
#endif
inline void PlayerLoginReq::set_device_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.device_uuid)
}
inline void PlayerLoginReq::set_device_uuid(const char* value, size_t size) {
  
  device_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.device_uuid)
}
inline ::std::string* PlayerLoginReq::mutable_device_uuid() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.device_uuid)
  return device_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_device_uuid() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.device_uuid)
  
  return device_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_device_uuid(::std::string* device_uuid) {
  if (device_uuid != NULL) {
    
  } else {
    
  }
  device_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_uuid);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.device_uuid)
}

// uint32 client_token = 1546;
inline void PlayerLoginReq::clear_client_token() {
  client_token_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginReq::client_token() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.client_token)
  return client_token_;
}
inline void PlayerLoginReq::set_client_token(::google::protobuf::uint32 value) {
  
  client_token_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.client_token)
}

// uint32 sub_channel_id = 23;
inline void PlayerLoginReq::clear_sub_channel_id() {
  sub_channel_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginReq::sub_channel_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.sub_channel_id)
  return sub_channel_id_;
}
inline void PlayerLoginReq::set_sub_channel_id(::google::protobuf::uint32 value) {
  
  sub_channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.sub_channel_id)
}

// uint32 target_uid = 11;
inline void PlayerLoginReq::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.target_uid)
  return target_uid_;
}
inline void PlayerLoginReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.target_uid)
}

// string device_info = 1;
inline void PlayerLoginReq::clear_device_info() {
  device_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::device_info() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.device_info)
  return device_info_.GetNoArena();
}
inline void PlayerLoginReq::set_device_info(const ::std::string& value) {
  
  device_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.device_info)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_device_info(::std::string&& value) {
  
  device_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.device_info)
}
#endif
inline void PlayerLoginReq::set_device_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.device_info)
}
inline void PlayerLoginReq::set_device_info(const char* value, size_t size) {
  
  device_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.device_info)
}
inline ::std::string* PlayerLoginReq::mutable_device_info() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.device_info)
  return device_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_device_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.device_info)
  
  return device_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_device_info(::std::string* device_info) {
  if (device_info != NULL) {
    
  } else {
    
  }
  device_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_info);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.device_info)
}

// string client_verison_hash = 1707;
inline void PlayerLoginReq::clear_client_verison_hash() {
  client_verison_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::client_verison_hash() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.client_verison_hash)
  return client_verison_hash_.GetNoArena();
}
inline void PlayerLoginReq::set_client_verison_hash(const ::std::string& value) {
  
  client_verison_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.client_verison_hash)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_client_verison_hash(::std::string&& value) {
  
  client_verison_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.client_verison_hash)
}
#endif
inline void PlayerLoginReq::set_client_verison_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_verison_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.client_verison_hash)
}
inline void PlayerLoginReq::set_client_verison_hash(const char* value, size_t size) {
  
  client_verison_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.client_verison_hash)
}
inline ::std::string* PlayerLoginReq::mutable_client_verison_hash() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.client_verison_hash)
  return client_verison_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_client_verison_hash() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.client_verison_hash)
  
  return client_verison_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_client_verison_hash(::std::string* client_verison_hash) {
  if (client_verison_hash != NULL) {
    
  } else {
    
  }
  client_verison_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_verison_hash);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.client_verison_hash)
}

// string checksum = 1532;
inline void PlayerLoginReq::clear_checksum() {
  checksum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::checksum() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.checksum)
  return checksum_.GetNoArena();
}
inline void PlayerLoginReq::set_checksum(const ::std::string& value) {
  
  checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.checksum)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_checksum(::std::string&& value) {
  
  checksum_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.checksum)
}
#endif
inline void PlayerLoginReq::set_checksum(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.checksum)
}
inline void PlayerLoginReq::set_checksum(const char* value, size_t size) {
  
  checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.checksum)
}
inline ::std::string* PlayerLoginReq::mutable_checksum() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.checksum)
  return checksum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_checksum() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.checksum)
  
  return checksum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_checksum(::std::string* checksum) {
  if (checksum != NULL) {
    
  } else {
    
  }
  checksum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), checksum);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.checksum)
}

// uint32 platform_type = 14;
inline void PlayerLoginReq::clear_platform_type() {
  platform_type_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginReq::platform_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.platform_type)
  return platform_type_;
}
inline void PlayerLoginReq::set_platform_type(::google::protobuf::uint32 value) {
  
  platform_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.platform_type)
}

// uint32 target_home_owner_uid = 1864;
inline void PlayerLoginReq::clear_target_home_owner_uid() {
  target_home_owner_uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginReq::target_home_owner_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.target_home_owner_uid)
  return target_home_owner_uid_;
}
inline void PlayerLoginReq::set_target_home_owner_uid(::google::protobuf::uint32 value) {
  
  target_home_owner_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.target_home_owner_uid)
}

// uint32 cloud_client_ip = 1335;
inline void PlayerLoginReq::clear_cloud_client_ip() {
  cloud_client_ip_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginReq::cloud_client_ip() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.cloud_client_ip)
  return cloud_client_ip_;
}
inline void PlayerLoginReq::set_cloud_client_ip(::google::protobuf::uint32 value) {
  
  cloud_client_ip_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.cloud_client_ip)
}

// uint32 gm_uid = 612;
inline void PlayerLoginReq::clear_gm_uid() {
  gm_uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginReq::gm_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.gm_uid)
  return gm_uid_;
}
inline void PlayerLoginReq::set_gm_uid(::google::protobuf::uint32 value) {
  
  gm_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.gm_uid)
}

// string system_version = 10;
inline void PlayerLoginReq::clear_system_version() {
  system_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::system_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.system_version)
  return system_version_.GetNoArena();
}
inline void PlayerLoginReq::set_system_version(const ::std::string& value) {
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.system_version)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_system_version(::std::string&& value) {
  
  system_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.system_version)
}
#endif
inline void PlayerLoginReq::set_system_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.system_version)
}
inline void PlayerLoginReq::set_system_version(const char* value, size_t size) {
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.system_version)
}
inline ::std::string* PlayerLoginReq::mutable_system_version() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.system_version)
  return system_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_system_version() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.system_version)
  
  return system_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_system_version(::std::string* system_version) {
  if (system_version != NULL) {
    
  } else {
    
  }
  system_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), system_version);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.system_version)
}

// string platform = 7;
inline void PlayerLoginReq::clear_platform() {
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::platform() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.platform)
  return platform_.GetNoArena();
}
inline void PlayerLoginReq::set_platform(const ::std::string& value) {
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.platform)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_platform(::std::string&& value) {
  
  platform_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.platform)
}
#endif
inline void PlayerLoginReq::set_platform(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.platform)
}
inline void PlayerLoginReq::set_platform(const char* value, size_t size) {
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.platform)
}
inline ::std::string* PlayerLoginReq::mutable_platform() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.platform)
  return platform_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_platform() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.platform)
  
  return platform_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_platform(::std::string* platform) {
  if (platform != NULL) {
    
  } else {
    
  }
  platform_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.platform)
}

// -------------------------------------------------------------------

// ShortAbilityHashPair

// sfixed32 ability_config_hash = 15;
inline void ShortAbilityHashPair::clear_ability_config_hash() {
  ability_config_hash_ = 0;
}
inline ::google::protobuf::int32 ShortAbilityHashPair::ability_config_hash() const {
  // @@protoc_insertion_point(field_get:proto.ShortAbilityHashPair.ability_config_hash)
  return ability_config_hash_;
}
inline void ShortAbilityHashPair::set_ability_config_hash(::google::protobuf::int32 value) {
  
  ability_config_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.ShortAbilityHashPair.ability_config_hash)
}

// sfixed32 ability_name_hash = 1;
inline void ShortAbilityHashPair::clear_ability_name_hash() {
  ability_name_hash_ = 0;
}
inline ::google::protobuf::int32 ShortAbilityHashPair::ability_name_hash() const {
  // @@protoc_insertion_point(field_get:proto.ShortAbilityHashPair.ability_name_hash)
  return ability_name_hash_;
}
inline void ShortAbilityHashPair::set_ability_name_hash(::google::protobuf::int32 value) {
  
  ability_name_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.ShortAbilityHashPair.ability_name_hash)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PlayerLoginRsp

// uint32 client_data_version = 1;
inline void PlayerLoginRsp::clear_client_data_version() {
  client_data_version_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginRsp::client_data_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.client_data_version)
  return client_data_version_;
}
inline void PlayerLoginRsp::set_client_data_version(::google::protobuf::uint32 value) {
  
  client_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.client_data_version)
}

// bool is_sc_open = 1429;
inline void PlayerLoginRsp::clear_is_sc_open() {
  is_sc_open_ = false;
}
inline bool PlayerLoginRsp::is_sc_open() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.is_sc_open)
  return is_sc_open_;
}
inline void PlayerLoginRsp::set_is_sc_open(bool value) {
  
  is_sc_open_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.is_sc_open)
}

// int32 retcode = 15;
inline void PlayerLoginRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PlayerLoginRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.retcode)
  return retcode_;
}
inline void PlayerLoginRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.retcode)
}

// map<uint32, .proto.BlockInfo> block_info_map = 571;
inline int PlayerLoginRsp::block_info_map_size() const {
  return block_info_map_.size();
}
inline void PlayerLoginRsp::clear_block_info_map() {
  block_info_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >&
PlayerLoginRsp::block_info_map() const {
  // @@protoc_insertion_point(field_map:proto.PlayerLoginRsp.block_info_map)
  return block_info_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >*
PlayerLoginRsp::mutable_block_info_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.PlayerLoginRsp.block_info_map)
  return block_info_map_.MutableMap();
}

// bool is_audit = 1685;
inline void PlayerLoginRsp::clear_is_audit() {
  is_audit_ = false;
}
inline bool PlayerLoginRsp::is_audit() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.is_audit)
  return is_audit_;
}
inline void PlayerLoginRsp::set_is_audit(bool value) {
  
  is_audit_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.is_audit)
}

// bool is_transfer = 2018;
inline void PlayerLoginRsp::clear_is_transfer() {
  is_transfer_ = false;
}
inline bool PlayerLoginRsp::is_transfer() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.is_transfer)
  return is_transfer_;
}
inline void PlayerLoginRsp::set_is_transfer(bool value) {
  
  is_transfer_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.is_transfer)
}

// string client_silence_md5 = 1746;
inline void PlayerLoginRsp::clear_client_silence_md5() {
  client_silence_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginRsp::client_silence_md5() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.client_silence_md5)
  return client_silence_md5_.GetNoArena();
}
inline void PlayerLoginRsp::set_client_silence_md5(const ::std::string& value) {
  
  client_silence_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.client_silence_md5)
}
#if LANG_CXX11
inline void PlayerLoginRsp::set_client_silence_md5(::std::string&& value) {
  
  client_silence_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.client_silence_md5)
}
#endif
inline void PlayerLoginRsp::set_client_silence_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_silence_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.client_silence_md5)
}
inline void PlayerLoginRsp::set_client_silence_md5(const char* value, size_t size) {
  
  client_silence_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.client_silence_md5)
}
inline ::std::string* PlayerLoginRsp::mutable_client_silence_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.client_silence_md5)
  return client_silence_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginRsp::release_client_silence_md5() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.client_silence_md5)
  
  return client_silence_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginRsp::set_allocated_client_silence_md5(::std::string* client_silence_md5) {
  if (client_silence_md5 != NULL) {
    
  } else {
    
  }
  client_silence_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_silence_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.client_silence_md5)
}

// .proto.ResVersionConfig next_res_version_config = 1573;
inline bool PlayerLoginRsp::has_next_res_version_config() const {
  return this != internal_default_instance() && next_res_version_config_ != NULL;
}
inline void PlayerLoginRsp::clear_next_res_version_config() {
  if (GetArenaNoVirtual() == NULL && next_res_version_config_ != NULL) delete next_res_version_config_;
  next_res_version_config_ = NULL;
}
inline const ::proto::ResVersionConfig& PlayerLoginRsp::next_res_version_config() const {
  const ::proto::ResVersionConfig* p = next_res_version_config_;
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.next_res_version_config)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ResVersionConfig*>(
      &::proto::_ResVersionConfig_default_instance_);
}
inline ::proto::ResVersionConfig* PlayerLoginRsp::mutable_next_res_version_config() {
  
  if (next_res_version_config_ == NULL) {
    next_res_version_config_ = new ::proto::ResVersionConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.next_res_version_config)
  return next_res_version_config_;
}
inline ::proto::ResVersionConfig* PlayerLoginRsp::release_next_res_version_config() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.next_res_version_config)
  
  ::proto::ResVersionConfig* temp = next_res_version_config_;
  next_res_version_config_ = NULL;
  return temp;
}
inline void PlayerLoginRsp::set_allocated_next_res_version_config(::proto::ResVersionConfig* next_res_version_config) {
  delete next_res_version_config_;
  next_res_version_config_ = next_res_version_config;
  if (next_res_version_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.next_res_version_config)
}

// uint32 client_silence_data_version = 6;
inline void PlayerLoginRsp::clear_client_silence_data_version() {
  client_silence_data_version_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginRsp::client_silence_data_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.client_silence_data_version)
  return client_silence_data_version_;
}
inline void PlayerLoginRsp::set_client_silence_data_version(::google::protobuf::uint32 value) {
  
  client_silence_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.client_silence_data_version)
}

// uint64 login_rand = 4;
inline void PlayerLoginRsp::clear_login_rand() {
  login_rand_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PlayerLoginRsp::login_rand() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.login_rand)
  return login_rand_;
}
inline void PlayerLoginRsp::set_login_rand(::google::protobuf::uint64 value) {
  
  login_rand_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.login_rand)
}

// bool is_new_player = 8;
inline void PlayerLoginRsp::clear_is_new_player() {
  is_new_player_ = false;
}
inline bool PlayerLoginRsp::is_new_player() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.is_new_player)
  return is_new_player_;
}
inline void PlayerLoginRsp::set_is_new_player(bool value) {
  
  is_new_player_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.is_new_player)
}

// string client_version_suffix = 1047;
inline void PlayerLoginRsp::clear_client_version_suffix() {
  client_version_suffix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginRsp::client_version_suffix() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.client_version_suffix)
  return client_version_suffix_.GetNoArena();
}
inline void PlayerLoginRsp::set_client_version_suffix(const ::std::string& value) {
  
  client_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.client_version_suffix)
}
#if LANG_CXX11
inline void PlayerLoginRsp::set_client_version_suffix(::std::string&& value) {
  
  client_version_suffix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.client_version_suffix)
}
#endif
inline void PlayerLoginRsp::set_client_version_suffix(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.client_version_suffix)
}
inline void PlayerLoginRsp::set_client_version_suffix(const char* value, size_t size) {
  
  client_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.client_version_suffix)
}
inline ::std::string* PlayerLoginRsp::mutable_client_version_suffix() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.client_version_suffix)
  return client_version_suffix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginRsp::release_client_version_suffix() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.client_version_suffix)
  
  return client_version_suffix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginRsp::set_allocated_client_version_suffix(::std::string* client_version_suffix) {
  if (client_version_suffix != NULL) {
    
  } else {
    
  }
  client_version_suffix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version_suffix);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.client_version_suffix)
}

// string game_biz = 5;
inline void PlayerLoginRsp::clear_game_biz() {
  game_biz_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginRsp::game_biz() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.game_biz)
  return game_biz_.GetNoArena();
}
inline void PlayerLoginRsp::set_game_biz(const ::std::string& value) {
  
  game_biz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.game_biz)
}
#if LANG_CXX11
inline void PlayerLoginRsp::set_game_biz(::std::string&& value) {
  
  game_biz_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.game_biz)
}
#endif
inline void PlayerLoginRsp::set_game_biz(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  game_biz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.game_biz)
}
inline void PlayerLoginRsp::set_game_biz(const char* value, size_t size) {
  
  game_biz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.game_biz)
}
inline ::std::string* PlayerLoginRsp::mutable_game_biz() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.game_biz)
  return game_biz_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginRsp::release_game_biz() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.game_biz)
  
  return game_biz_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginRsp::set_allocated_game_biz(::std::string* game_biz) {
  if (game_biz != NULL) {
    
  } else {
    
  }
  game_biz_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_biz);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.game_biz)
}

// string next_resource_url = 621;
inline void PlayerLoginRsp::clear_next_resource_url() {
  next_resource_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginRsp::next_resource_url() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.next_resource_url)
  return next_resource_url_.GetNoArena();
}
inline void PlayerLoginRsp::set_next_resource_url(const ::std::string& value) {
  
  next_resource_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.next_resource_url)
}
#if LANG_CXX11
inline void PlayerLoginRsp::set_next_resource_url(::std::string&& value) {
  
  next_resource_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.next_resource_url)
}
#endif
inline void PlayerLoginRsp::set_next_resource_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_resource_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.next_resource_url)
}
inline void PlayerLoginRsp::set_next_resource_url(const char* value, size_t size) {
  
  next_resource_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.next_resource_url)
}
inline ::std::string* PlayerLoginRsp::mutable_next_resource_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.next_resource_url)
  return next_resource_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginRsp::release_next_resource_url() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.next_resource_url)
  
  return next_resource_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginRsp::set_allocated_next_resource_url(::std::string* next_resource_url) {
  if (next_resource_url != NULL) {
    
  } else {
    
  }
  next_resource_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_resource_url);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.next_resource_url)
}

// bool is_relogin = 10;
inline void PlayerLoginRsp::clear_is_relogin() {
  is_relogin_ = false;
}
inline bool PlayerLoginRsp::is_relogin() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.is_relogin)
  return is_relogin_;
}
inline void PlayerLoginRsp::set_is_relogin(bool value) {
  
  is_relogin_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.is_relogin)
}

// double total_tick_time = 125;
inline void PlayerLoginRsp::clear_total_tick_time() {
  total_tick_time_ = 0;
}
inline double PlayerLoginRsp::total_tick_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.total_tick_time)
  return total_tick_time_;
}
inline void PlayerLoginRsp::set_total_tick_time(double value) {
  
  total_tick_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.total_tick_time)
}

// bool is_enable_client_hash_debug = 932;
inline void PlayerLoginRsp::clear_is_enable_client_hash_debug() {
  is_enable_client_hash_debug_ = false;
}
inline bool PlayerLoginRsp::is_enable_client_hash_debug() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.is_enable_client_hash_debug)
  return is_enable_client_hash_debug_;
}
inline void PlayerLoginRsp::set_is_enable_client_hash_debug(bool value) {
  
  is_enable_client_hash_debug_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.is_enable_client_hash_debug)
}

// bytes sc_info = 2024;
inline void PlayerLoginRsp::clear_sc_info() {
  sc_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginRsp::sc_info() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.sc_info)
  return sc_info_.GetNoArena();
}
inline void PlayerLoginRsp::set_sc_info(const ::std::string& value) {
  
  sc_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.sc_info)
}
#if LANG_CXX11
inline void PlayerLoginRsp::set_sc_info(::std::string&& value) {
  
  sc_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.sc_info)
}
#endif
inline void PlayerLoginRsp::set_sc_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sc_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.sc_info)
}
inline void PlayerLoginRsp::set_sc_info(const void* value, size_t size) {
  
  sc_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.sc_info)
}
inline ::std::string* PlayerLoginRsp::mutable_sc_info() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.sc_info)
  return sc_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginRsp::release_sc_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.sc_info)
  
  return sc_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginRsp::set_allocated_sc_info(::std::string* sc_info) {
  if (sc_info != NULL) {
    
  } else {
    
  }
  sc_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sc_info);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.sc_info)
}

// int32 ability_hash_code = 12;
inline void PlayerLoginRsp::clear_ability_hash_code() {
  ability_hash_code_ = 0;
}
inline ::google::protobuf::int32 PlayerLoginRsp::ability_hash_code() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.ability_hash_code)
  return ability_hash_code_;
}
inline void PlayerLoginRsp::set_ability_hash_code(::google::protobuf::int32 value) {
  
  ability_hash_code_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.ability_hash_code)
}

// string register_cps = 2040;
inline void PlayerLoginRsp::clear_register_cps() {
  register_cps_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginRsp::register_cps() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.register_cps)
  return register_cps_.GetNoArena();
}
inline void PlayerLoginRsp::set_register_cps(const ::std::string& value) {
  
  register_cps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.register_cps)
}
#if LANG_CXX11
inline void PlayerLoginRsp::set_register_cps(::std::string&& value) {
  
  register_cps_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.register_cps)
}
#endif
inline void PlayerLoginRsp::set_register_cps(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  register_cps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.register_cps)
}
inline void PlayerLoginRsp::set_register_cps(const char* value, size_t size) {
  
  register_cps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.register_cps)
}
inline ::std::string* PlayerLoginRsp::mutable_register_cps() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.register_cps)
  return register_cps_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginRsp::release_register_cps() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.register_cps)
  
  return register_cps_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginRsp::set_allocated_register_cps(::std::string* register_cps) {
  if (register_cps != NULL) {
    
  } else {
    
  }
  register_cps_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), register_cps);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.register_cps)
}

// bool is_login_rsp_split = 1649;
inline void PlayerLoginRsp::clear_is_login_rsp_split() {
  is_login_rsp_split_ = false;
}
inline bool PlayerLoginRsp::is_login_rsp_split() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.is_login_rsp_split)
  return is_login_rsp_split_;
}
inline void PlayerLoginRsp::set_is_login_rsp_split(bool value) {
  
  is_login_rsp_split_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.is_login_rsp_split)
}

// bool is_use_ability_hash = 2;
inline void PlayerLoginRsp::clear_is_use_ability_hash() {
  is_use_ability_hash_ = false;
}
inline bool PlayerLoginRsp::is_use_ability_hash() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.is_use_ability_hash)
  return is_use_ability_hash_;
}
inline void PlayerLoginRsp::set_is_use_ability_hash(bool value) {
  
  is_use_ability_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.is_use_ability_hash)
}

// map<string, int32> ability_hash_map = 11;
inline int PlayerLoginRsp::ability_hash_map_size() const {
  return ability_hash_map_.size();
}
inline void PlayerLoginRsp::clear_ability_hash_map() {
  ability_hash_map_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >&
PlayerLoginRsp::ability_hash_map() const {
  // @@protoc_insertion_point(field_map:proto.PlayerLoginRsp.ability_hash_map)
  return ability_hash_map_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >*
PlayerLoginRsp::mutable_ability_hash_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.PlayerLoginRsp.ability_hash_map)
  return ability_hash_map_.MutableMap();
}

// repeated .proto.ShortAbilityHashPair short_ability_hash_map = 250;
inline int PlayerLoginRsp::short_ability_hash_map_size() const {
  return short_ability_hash_map_.size();
}
inline void PlayerLoginRsp::clear_short_ability_hash_map() {
  short_ability_hash_map_.Clear();
}
inline const ::proto::ShortAbilityHashPair& PlayerLoginRsp::short_ability_hash_map(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.short_ability_hash_map)
  return short_ability_hash_map_.Get(index);
}
inline ::proto::ShortAbilityHashPair* PlayerLoginRsp::mutable_short_ability_hash_map(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.short_ability_hash_map)
  return short_ability_hash_map_.Mutable(index);
}
inline ::proto::ShortAbilityHashPair* PlayerLoginRsp::add_short_ability_hash_map() {
  // @@protoc_insertion_point(field_add:proto.PlayerLoginRsp.short_ability_hash_map)
  return short_ability_hash_map_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ShortAbilityHashPair >*
PlayerLoginRsp::mutable_short_ability_hash_map() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerLoginRsp.short_ability_hash_map)
  return &short_ability_hash_map_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ShortAbilityHashPair >&
PlayerLoginRsp::short_ability_hash_map() const {
  // @@protoc_insertion_point(field_list:proto.PlayerLoginRsp.short_ability_hash_map)
  return short_ability_hash_map_;
}

// string client_md5 = 1830;
inline void PlayerLoginRsp::clear_client_md5() {
  client_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginRsp::client_md5() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.client_md5)
  return client_md5_.GetNoArena();
}
inline void PlayerLoginRsp::set_client_md5(const ::std::string& value) {
  
  client_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.client_md5)
}
#if LANG_CXX11
inline void PlayerLoginRsp::set_client_md5(::std::string&& value) {
  
  client_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.client_md5)
}
#endif
inline void PlayerLoginRsp::set_client_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.client_md5)
}
inline void PlayerLoginRsp::set_client_md5(const char* value, size_t size) {
  
  client_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.client_md5)
}
inline ::std::string* PlayerLoginRsp::mutable_client_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.client_md5)
  return client_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginRsp::release_client_md5() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.client_md5)
  
  return client_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginRsp::set_allocated_client_md5(::std::string* client_md5) {
  if (client_md5 != NULL) {
    
  } else {
    
  }
  client_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.client_md5)
}

// string country_code = 1900;
inline void PlayerLoginRsp::clear_country_code() {
  country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginRsp::country_code() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.country_code)
  return country_code_.GetNoArena();
}
inline void PlayerLoginRsp::set_country_code(const ::std::string& value) {
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.country_code)
}
#if LANG_CXX11
inline void PlayerLoginRsp::set_country_code(::std::string&& value) {
  
  country_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.country_code)
}
#endif
inline void PlayerLoginRsp::set_country_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.country_code)
}
inline void PlayerLoginRsp::set_country_code(const char* value, size_t size) {
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.country_code)
}
inline ::std::string* PlayerLoginRsp::mutable_country_code() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.country_code)
  return country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginRsp::release_country_code() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.country_code)
  
  return country_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginRsp::set_allocated_country_code(::std::string* country_code) {
  if (country_code != NULL) {
    
  } else {
    
  }
  country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country_code);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.country_code)
}

// bool is_data_need_relogin = 951;
inline void PlayerLoginRsp::clear_is_data_need_relogin() {
  is_data_need_relogin_ = false;
}
inline bool PlayerLoginRsp::is_data_need_relogin() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.is_data_need_relogin)
  return is_data_need_relogin_;
}
inline void PlayerLoginRsp::set_is_data_need_relogin(bool value) {
  
  is_data_need_relogin_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.is_data_need_relogin)
}

// .proto.ResVersionConfig res_version_config = 1969;
inline bool PlayerLoginRsp::has_res_version_config() const {
  return this != internal_default_instance() && res_version_config_ != NULL;
}
inline void PlayerLoginRsp::clear_res_version_config() {
  if (GetArenaNoVirtual() == NULL && res_version_config_ != NULL) delete res_version_config_;
  res_version_config_ = NULL;
}
inline const ::proto::ResVersionConfig& PlayerLoginRsp::res_version_config() const {
  const ::proto::ResVersionConfig* p = res_version_config_;
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.res_version_config)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ResVersionConfig*>(
      &::proto::_ResVersionConfig_default_instance_);
}
inline ::proto::ResVersionConfig* PlayerLoginRsp::mutable_res_version_config() {
  
  if (res_version_config_ == NULL) {
    res_version_config_ = new ::proto::ResVersionConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.res_version_config)
  return res_version_config_;
}
inline ::proto::ResVersionConfig* PlayerLoginRsp::release_res_version_config() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.res_version_config)
  
  ::proto::ResVersionConfig* temp = res_version_config_;
  res_version_config_ = NULL;
  return temp;
}
inline void PlayerLoginRsp::set_allocated_res_version_config(::proto::ResVersionConfig* res_version_config) {
  delete res_version_config_;
  res_version_config_ = res_version_config;
  if (res_version_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.res_version_config)
}

// repeated .proto.FeatureBlockInfo feature_block_info_list = 1352;
inline int PlayerLoginRsp::feature_block_info_list_size() const {
  return feature_block_info_list_.size();
}
inline void PlayerLoginRsp::clear_feature_block_info_list() {
  feature_block_info_list_.Clear();
}
inline const ::proto::FeatureBlockInfo& PlayerLoginRsp::feature_block_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.feature_block_info_list)
  return feature_block_info_list_.Get(index);
}
inline ::proto::FeatureBlockInfo* PlayerLoginRsp::mutable_feature_block_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.feature_block_info_list)
  return feature_block_info_list_.Mutable(index);
}
inline ::proto::FeatureBlockInfo* PlayerLoginRsp::add_feature_block_info_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerLoginRsp.feature_block_info_list)
  return feature_block_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::FeatureBlockInfo >*
PlayerLoginRsp::mutable_feature_block_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerLoginRsp.feature_block_info_list)
  return &feature_block_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::FeatureBlockInfo >&
PlayerLoginRsp::feature_block_info_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerLoginRsp.feature_block_info_list)
  return feature_block_info_list_;
}

// string birthday = 624;
inline void PlayerLoginRsp::clear_birthday() {
  birthday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginRsp::birthday() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.birthday)
  return birthday_.GetNoArena();
}
inline void PlayerLoginRsp::set_birthday(const ::std::string& value) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.birthday)
}
#if LANG_CXX11
inline void PlayerLoginRsp::set_birthday(::std::string&& value) {
  
  birthday_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.birthday)
}
#endif
inline void PlayerLoginRsp::set_birthday(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.birthday)
}
inline void PlayerLoginRsp::set_birthday(const char* value, size_t size) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.birthday)
}
inline ::std::string* PlayerLoginRsp::mutable_birthday() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.birthday)
  return birthday_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginRsp::release_birthday() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.birthday)
  
  return birthday_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginRsp::set_allocated_birthday(::std::string* birthday) {
  if (birthday != NULL) {
    
  } else {
    
  }
  birthday_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), birthday);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.birthday)
}

// uint32 target_uid = 14;
inline void PlayerLoginRsp::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.target_uid)
  return target_uid_;
}
inline void PlayerLoginRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.target_uid)
}

// bytes player_data = 13;
inline void PlayerLoginRsp::clear_player_data() {
  player_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginRsp::player_data() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.player_data)
  return player_data_.GetNoArena();
}
inline void PlayerLoginRsp::set_player_data(const ::std::string& value) {
  
  player_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.player_data)
}
#if LANG_CXX11
inline void PlayerLoginRsp::set_player_data(::std::string&& value) {
  
  player_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.player_data)
}
#endif
inline void PlayerLoginRsp::set_player_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  player_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.player_data)
}
inline void PlayerLoginRsp::set_player_data(const void* value, size_t size) {
  
  player_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.player_data)
}
inline ::std::string* PlayerLoginRsp::mutable_player_data() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.player_data)
  return player_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginRsp::release_player_data() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.player_data)
  
  return player_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginRsp::set_allocated_player_data(::std::string* player_data) {
  if (player_data != NULL) {
    
  } else {
    
  }
  player_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_data);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.player_data)
}

// string client_silence_version_suffix = 1299;
inline void PlayerLoginRsp::clear_client_silence_version_suffix() {
  client_silence_version_suffix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginRsp::client_silence_version_suffix() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.client_silence_version_suffix)
  return client_silence_version_suffix_.GetNoArena();
}
inline void PlayerLoginRsp::set_client_silence_version_suffix(const ::std::string& value) {
  
  client_silence_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.client_silence_version_suffix)
}
#if LANG_CXX11
inline void PlayerLoginRsp::set_client_silence_version_suffix(::std::string&& value) {
  
  client_silence_version_suffix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.client_silence_version_suffix)
}
#endif
inline void PlayerLoginRsp::set_client_silence_version_suffix(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_silence_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.client_silence_version_suffix)
}
inline void PlayerLoginRsp::set_client_silence_version_suffix(const char* value, size_t size) {
  
  client_silence_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.client_silence_version_suffix)
}
inline ::std::string* PlayerLoginRsp::mutable_client_silence_version_suffix() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.client_silence_version_suffix)
  return client_silence_version_suffix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginRsp::release_client_silence_version_suffix() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.client_silence_version_suffix)
  
  return client_silence_version_suffix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginRsp::set_allocated_client_silence_version_suffix(::std::string* client_silence_version_suffix) {
  if (client_silence_version_suffix != NULL) {
    
  } else {
    
  }
  client_silence_version_suffix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_silence_version_suffix);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.client_silence_version_suffix)
}

// uint32 target_home_owner_uid = 553;
inline void PlayerLoginRsp::clear_target_home_owner_uid() {
  target_home_owner_uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginRsp::target_home_owner_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.target_home_owner_uid)
  return target_home_owner_uid_;
}
inline void PlayerLoginRsp::set_target_home_owner_uid(::google::protobuf::uint32 value) {
  
  target_home_owner_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.target_home_owner_uid)
}

// uint32 player_data_version = 7;
inline void PlayerLoginRsp::clear_player_data_version() {
  player_data_version_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginRsp::player_data_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.player_data_version)
  return player_data_version_;
}
inline void PlayerLoginRsp::set_player_data_version(::google::protobuf::uint32 value) {
  
  player_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.player_data_version)
}

// -------------------------------------------------------------------

// PlayerLogoutReq

// .proto.PlayerLogoutReq.Reason reason = 6;
inline void PlayerLogoutReq::clear_reason() {
  reason_ = 0;
}
inline ::proto::PlayerLogoutReq_Reason PlayerLogoutReq::reason() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLogoutReq.reason)
  return static_cast< ::proto::PlayerLogoutReq_Reason >(reason_);
}
inline void PlayerLogoutReq::set_reason(::proto::PlayerLogoutReq_Reason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLogoutReq.reason)
}

// -------------------------------------------------------------------

// PlayerLogoutRsp

// int32 retcode = 12;
inline void PlayerLogoutRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PlayerLogoutRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLogoutRsp.retcode)
  return retcode_;
}
inline void PlayerLogoutRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLogoutRsp.retcode)
}

// -------------------------------------------------------------------

// PlayerLogoutNotify

// int32 retcode = 13;
inline void PlayerLogoutNotify::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PlayerLogoutNotify::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLogoutNotify.retcode)
  return retcode_;
}
inline void PlayerLogoutNotify::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLogoutNotify.retcode)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PlayerDataNotify

// uint64 server_time = 7;
inline void PlayerDataNotify::clear_server_time() {
  server_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PlayerDataNotify::server_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerDataNotify.server_time)
  return server_time_;
}
inline void PlayerDataNotify::set_server_time(::google::protobuf::uint64 value) {
  
  server_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerDataNotify.server_time)
}

// string nick_name = 8;
inline void PlayerDataNotify::clear_nick_name() {
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerDataNotify::nick_name() const {
  // @@protoc_insertion_point(field_get:proto.PlayerDataNotify.nick_name)
  return nick_name_.GetNoArena();
}
inline void PlayerDataNotify::set_nick_name(const ::std::string& value) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerDataNotify.nick_name)
}
#if LANG_CXX11
inline void PlayerDataNotify::set_nick_name(::std::string&& value) {
  
  nick_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerDataNotify.nick_name)
}
#endif
inline void PlayerDataNotify::set_nick_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerDataNotify.nick_name)
}
inline void PlayerDataNotify::set_nick_name(const char* value, size_t size) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerDataNotify.nick_name)
}
inline ::std::string* PlayerDataNotify::mutable_nick_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerDataNotify.nick_name)
  return nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerDataNotify::release_nick_name() {
  // @@protoc_insertion_point(field_release:proto.PlayerDataNotify.nick_name)
  
  return nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerDataNotify::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name != NULL) {
    
  } else {
    
  }
  nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick_name);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerDataNotify.nick_name)
}

// bool is_first_login_today = 12;
inline void PlayerDataNotify::clear_is_first_login_today() {
  is_first_login_today_ = false;
}
inline bool PlayerDataNotify::is_first_login_today() const {
  // @@protoc_insertion_point(field_get:proto.PlayerDataNotify.is_first_login_today)
  return is_first_login_today_;
}
inline void PlayerDataNotify::set_is_first_login_today(bool value) {
  
  is_first_login_today_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerDataNotify.is_first_login_today)
}

// uint32 region_id = 6;
inline void PlayerDataNotify::clear_region_id() {
  region_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerDataNotify::region_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerDataNotify.region_id)
  return region_id_;
}
inline void PlayerDataNotify::set_region_id(::google::protobuf::uint32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerDataNotify.region_id)
}

// map<uint32, .proto.PropValue> prop_map = 15;
inline int PlayerDataNotify::prop_map_size() const {
  return prop_map_.size();
}
inline void PlayerDataNotify::clear_prop_map() {
  prop_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
PlayerDataNotify::prop_map() const {
  // @@protoc_insertion_point(field_map:proto.PlayerDataNotify.prop_map)
  return prop_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
PlayerDataNotify::mutable_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.PlayerDataNotify.prop_map)
  return prop_map_.MutableMap();
}

// -------------------------------------------------------------------

// ChangeGameTimeReq

// uint32 game_time = 6;
inline void ChangeGameTimeReq::clear_game_time() {
  game_time_ = 0u;
}
inline ::google::protobuf::uint32 ChangeGameTimeReq::game_time() const {
  // @@protoc_insertion_point(field_get:proto.ChangeGameTimeReq.game_time)
  return game_time_;
}
inline void ChangeGameTimeReq::set_game_time(::google::protobuf::uint32 value) {
  
  game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeGameTimeReq.game_time)
}

// bool is_force_set = 11;
inline void ChangeGameTimeReq::clear_is_force_set() {
  is_force_set_ = false;
}
inline bool ChangeGameTimeReq::is_force_set() const {
  // @@protoc_insertion_point(field_get:proto.ChangeGameTimeReq.is_force_set)
  return is_force_set_;
}
inline void ChangeGameTimeReq::set_is_force_set(bool value) {
  
  is_force_set_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeGameTimeReq.is_force_set)
}

// uint32 extra_days = 12;
inline void ChangeGameTimeReq::clear_extra_days() {
  extra_days_ = 0u;
}
inline ::google::protobuf::uint32 ChangeGameTimeReq::extra_days() const {
  // @@protoc_insertion_point(field_get:proto.ChangeGameTimeReq.extra_days)
  return extra_days_;
}
inline void ChangeGameTimeReq::set_extra_days(::google::protobuf::uint32 value) {
  
  extra_days_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeGameTimeReq.extra_days)
}

// -------------------------------------------------------------------

// ChangeGameTimeRsp

// int32 retcode = 8;
inline void ChangeGameTimeRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ChangeGameTimeRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ChangeGameTimeRsp.retcode)
  return retcode_;
}
inline void ChangeGameTimeRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeGameTimeRsp.retcode)
}

// uint32 extra_days = 5;
inline void ChangeGameTimeRsp::clear_extra_days() {
  extra_days_ = 0u;
}
inline ::google::protobuf::uint32 ChangeGameTimeRsp::extra_days() const {
  // @@protoc_insertion_point(field_get:proto.ChangeGameTimeRsp.extra_days)
  return extra_days_;
}
inline void ChangeGameTimeRsp::set_extra_days(::google::protobuf::uint32 value) {
  
  extra_days_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeGameTimeRsp.extra_days)
}

// uint32 cur_game_time = 14;
inline void ChangeGameTimeRsp::clear_cur_game_time() {
  cur_game_time_ = 0u;
}
inline ::google::protobuf::uint32 ChangeGameTimeRsp::cur_game_time() const {
  // @@protoc_insertion_point(field_get:proto.ChangeGameTimeRsp.cur_game_time)
  return cur_game_time_;
}
inline void ChangeGameTimeRsp::set_cur_game_time(::google::protobuf::uint32 value) {
  
  cur_game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeGameTimeRsp.cur_game_time)
}

// -------------------------------------------------------------------

// PlayerGameTimeNotify

// uint32 uid = 7;
inline void PlayerGameTimeNotify::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerGameTimeNotify::uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGameTimeNotify.uid)
  return uid_;
}
inline void PlayerGameTimeNotify::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGameTimeNotify.uid)
}

// uint32 game_time = 3;
inline void PlayerGameTimeNotify::clear_game_time() {
  game_time_ = 0u;
}
inline ::google::protobuf::uint32 PlayerGameTimeNotify::game_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGameTimeNotify.game_time)
  return game_time_;
}
inline void PlayerGameTimeNotify::set_game_time(::google::protobuf::uint32 value) {
  
  game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGameTimeNotify.game_time)
}

// bool is_home = 13;
inline void PlayerGameTimeNotify::clear_is_home() {
  is_home_ = false;
}
inline bool PlayerGameTimeNotify::is_home() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGameTimeNotify.is_home)
  return is_home_;
}
inline void PlayerGameTimeNotify::set_is_home(bool value) {
  
  is_home_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGameTimeNotify.is_home)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PlayerPropNotify

// map<uint32, .proto.PropValue> prop_map = 13;
inline int PlayerPropNotify::prop_map_size() const {
  return prop_map_.size();
}
inline void PlayerPropNotify::clear_prop_map() {
  prop_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
PlayerPropNotify::prop_map() const {
  // @@protoc_insertion_point(field_map:proto.PlayerPropNotify.prop_map)
  return prop_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
PlayerPropNotify::mutable_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.PlayerPropNotify.prop_map)
  return prop_map_.MutableMap();
}

// -------------------------------------------------------------------

// ClientTriggerEventNotify

// uint32 force_id = 3;
inline void ClientTriggerEventNotify::clear_force_id() {
  force_id_ = 0u;
}
inline ::google::protobuf::uint32 ClientTriggerEventNotify::force_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientTriggerEventNotify.force_id)
  return force_id_;
}
inline void ClientTriggerEventNotify::set_force_id(::google::protobuf::uint32 value) {
  
  force_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientTriggerEventNotify.force_id)
}

// .proto.EventTriggerType event_type = 2;
inline void ClientTriggerEventNotify::clear_event_type() {
  event_type_ = 0;
}
inline ::proto::EventTriggerType ClientTriggerEventNotify::event_type() const {
  // @@protoc_insertion_point(field_get:proto.ClientTriggerEventNotify.event_type)
  return static_cast< ::proto::EventTriggerType >(event_type_);
}
inline void ClientTriggerEventNotify::set_event_type(::proto::EventTriggerType value) {
  
  event_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientTriggerEventNotify.event_type)
}

// -------------------------------------------------------------------

// SetPlayerPropReq

// repeated .proto.PropValue prop_list = 7;
inline int SetPlayerPropReq::prop_list_size() const {
  return prop_list_.size();
}
inline void SetPlayerPropReq::clear_prop_list() {
  prop_list_.Clear();
}
inline const ::proto::PropValue& SetPlayerPropReq::prop_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerPropReq.prop_list)
  return prop_list_.Get(index);
}
inline ::proto::PropValue* SetPlayerPropReq::mutable_prop_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerPropReq.prop_list)
  return prop_list_.Mutable(index);
}
inline ::proto::PropValue* SetPlayerPropReq::add_prop_list() {
  // @@protoc_insertion_point(field_add:proto.SetPlayerPropReq.prop_list)
  return prop_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::PropValue >*
SetPlayerPropReq::mutable_prop_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SetPlayerPropReq.prop_list)
  return &prop_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::PropValue >&
SetPlayerPropReq::prop_list() const {
  // @@protoc_insertion_point(field_list:proto.SetPlayerPropReq.prop_list)
  return prop_list_;
}

// -------------------------------------------------------------------

// SetPlayerPropRsp

// int32 retcode = 11;
inline void SetPlayerPropRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SetPlayerPropRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerPropRsp.retcode)
  return retcode_;
}
inline void SetPlayerPropRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerPropRsp.retcode)
}

// -------------------------------------------------------------------

// SetPlayerBornDataReq

// uint32 avatar_id = 2;
inline void SetPlayerBornDataReq::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 SetPlayerBornDataReq::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerBornDataReq.avatar_id)
  return avatar_id_;
}
inline void SetPlayerBornDataReq::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerBornDataReq.avatar_id)
}

// string nick_name = 13;
inline void SetPlayerBornDataReq::clear_nick_name() {
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetPlayerBornDataReq::nick_name() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerBornDataReq.nick_name)
  return nick_name_.GetNoArena();
}
inline void SetPlayerBornDataReq::set_nick_name(const ::std::string& value) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetPlayerBornDataReq.nick_name)
}
#if LANG_CXX11
inline void SetPlayerBornDataReq::set_nick_name(::std::string&& value) {
  
  nick_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetPlayerBornDataReq.nick_name)
}
#endif
inline void SetPlayerBornDataReq::set_nick_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetPlayerBornDataReq.nick_name)
}
inline void SetPlayerBornDataReq::set_nick_name(const char* value, size_t size) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetPlayerBornDataReq.nick_name)
}
inline ::std::string* SetPlayerBornDataReq::mutable_nick_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerBornDataReq.nick_name)
  return nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetPlayerBornDataReq::release_nick_name() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerBornDataReq.nick_name)
  
  return nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetPlayerBornDataReq::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name != NULL) {
    
  } else {
    
  }
  nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick_name);
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerBornDataReq.nick_name)
}

// -------------------------------------------------------------------

// SetPlayerBornDataRsp

// int32 retcode = 10;
inline void SetPlayerBornDataRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SetPlayerBornDataRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerBornDataRsp.retcode)
  return retcode_;
}
inline void SetPlayerBornDataRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerBornDataRsp.retcode)
}

// -------------------------------------------------------------------

// DoSetPlayerBornDataNotify

// -------------------------------------------------------------------

// PlayerPropChangeNotify

// uint32 prop_delta = 13;
inline void PlayerPropChangeNotify::clear_prop_delta() {
  prop_delta_ = 0u;
}
inline ::google::protobuf::uint32 PlayerPropChangeNotify::prop_delta() const {
  // @@protoc_insertion_point(field_get:proto.PlayerPropChangeNotify.prop_delta)
  return prop_delta_;
}
inline void PlayerPropChangeNotify::set_prop_delta(::google::protobuf::uint32 value) {
  
  prop_delta_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerPropChangeNotify.prop_delta)
}

// uint32 prop_type = 12;
inline void PlayerPropChangeNotify::clear_prop_type() {
  prop_type_ = 0u;
}
inline ::google::protobuf::uint32 PlayerPropChangeNotify::prop_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerPropChangeNotify.prop_type)
  return prop_type_;
}
inline void PlayerPropChangeNotify::set_prop_type(::google::protobuf::uint32 value) {
  
  prop_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerPropChangeNotify.prop_type)
}

// -------------------------------------------------------------------

// SetPlayerNameReq

// string nick_name = 1;
inline void SetPlayerNameReq::clear_nick_name() {
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetPlayerNameReq::nick_name() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerNameReq.nick_name)
  return nick_name_.GetNoArena();
}
inline void SetPlayerNameReq::set_nick_name(const ::std::string& value) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetPlayerNameReq.nick_name)
}
#if LANG_CXX11
inline void SetPlayerNameReq::set_nick_name(::std::string&& value) {
  
  nick_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetPlayerNameReq.nick_name)
}
#endif
inline void SetPlayerNameReq::set_nick_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetPlayerNameReq.nick_name)
}
inline void SetPlayerNameReq::set_nick_name(const char* value, size_t size) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetPlayerNameReq.nick_name)
}
inline ::std::string* SetPlayerNameReq::mutable_nick_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerNameReq.nick_name)
  return nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetPlayerNameReq::release_nick_name() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerNameReq.nick_name)
  
  return nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetPlayerNameReq::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name != NULL) {
    
  } else {
    
  }
  nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick_name);
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerNameReq.nick_name)
}

// -------------------------------------------------------------------

// SetPlayerNameRsp

// int32 retcode = 9;
inline void SetPlayerNameRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SetPlayerNameRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerNameRsp.retcode)
  return retcode_;
}
inline void SetPlayerNameRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerNameRsp.retcode)
}

// string nick_name = 14;
inline void SetPlayerNameRsp::clear_nick_name() {
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetPlayerNameRsp::nick_name() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerNameRsp.nick_name)
  return nick_name_.GetNoArena();
}
inline void SetPlayerNameRsp::set_nick_name(const ::std::string& value) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetPlayerNameRsp.nick_name)
}
#if LANG_CXX11
inline void SetPlayerNameRsp::set_nick_name(::std::string&& value) {
  
  nick_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetPlayerNameRsp.nick_name)
}
#endif
inline void SetPlayerNameRsp::set_nick_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetPlayerNameRsp.nick_name)
}
inline void SetPlayerNameRsp::set_nick_name(const char* value, size_t size) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetPlayerNameRsp.nick_name)
}
inline ::std::string* SetPlayerNameRsp::mutable_nick_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerNameRsp.nick_name)
  return nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetPlayerNameRsp::release_nick_name() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerNameRsp.nick_name)
  
  return nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetPlayerNameRsp::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name != NULL) {
    
  } else {
    
  }
  nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick_name);
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerNameRsp.nick_name)
}

// -------------------------------------------------------------------

// SetOpenStateReq

// uint32 key = 12;
inline void SetOpenStateReq::clear_key() {
  key_ = 0u;
}
inline ::google::protobuf::uint32 SetOpenStateReq::key() const {
  // @@protoc_insertion_point(field_get:proto.SetOpenStateReq.key)
  return key_;
}
inline void SetOpenStateReq::set_key(::google::protobuf::uint32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto.SetOpenStateReq.key)
}

// uint32 value = 5;
inline void SetOpenStateReq::clear_value() {
  value_ = 0u;
}
inline ::google::protobuf::uint32 SetOpenStateReq::value() const {
  // @@protoc_insertion_point(field_get:proto.SetOpenStateReq.value)
  return value_;
}
inline void SetOpenStateReq::set_value(::google::protobuf::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.SetOpenStateReq.value)
}

// -------------------------------------------------------------------

// SetOpenStateRsp

// uint32 key = 9;
inline void SetOpenStateRsp::clear_key() {
  key_ = 0u;
}
inline ::google::protobuf::uint32 SetOpenStateRsp::key() const {
  // @@protoc_insertion_point(field_get:proto.SetOpenStateRsp.key)
  return key_;
}
inline void SetOpenStateRsp::set_key(::google::protobuf::uint32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto.SetOpenStateRsp.key)
}

// int32 retcode = 14;
inline void SetOpenStateRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SetOpenStateRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetOpenStateRsp.retcode)
  return retcode_;
}
inline void SetOpenStateRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetOpenStateRsp.retcode)
}

// uint32 value = 15;
inline void SetOpenStateRsp::clear_value() {
  value_ = 0u;
}
inline ::google::protobuf::uint32 SetOpenStateRsp::value() const {
  // @@protoc_insertion_point(field_get:proto.SetOpenStateRsp.value)
  return value_;
}
inline void SetOpenStateRsp::set_value(::google::protobuf::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.SetOpenStateRsp.value)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// OpenStateUpdateNotify

// map<uint32, uint32> open_state_map = 6;
inline int OpenStateUpdateNotify::open_state_map_size() const {
  return open_state_map_.size();
}
inline void OpenStateUpdateNotify::clear_open_state_map() {
  open_state_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
OpenStateUpdateNotify::open_state_map() const {
  // @@protoc_insertion_point(field_map:proto.OpenStateUpdateNotify.open_state_map)
  return open_state_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
OpenStateUpdateNotify::mutable_open_state_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.OpenStateUpdateNotify.open_state_map)
  return open_state_map_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// OpenStateChangeNotify

// map<uint32, uint32> open_state_map = 4;
inline int OpenStateChangeNotify::open_state_map_size() const {
  return open_state_map_.size();
}
inline void OpenStateChangeNotify::clear_open_state_map() {
  open_state_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
OpenStateChangeNotify::open_state_map() const {
  // @@protoc_insertion_point(field_map:proto.OpenStateChangeNotify.open_state_map)
  return open_state_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
OpenStateChangeNotify::mutable_open_state_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.OpenStateChangeNotify.open_state_map)
  return open_state_map_.MutableMap();
}

// -------------------------------------------------------------------

// PlayerCookReq

// uint32 cook_count = 1;
inline void PlayerCookReq::clear_cook_count() {
  cook_count_ = 0u;
}
inline ::google::protobuf::uint32 PlayerCookReq::cook_count() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookReq.cook_count)
  return cook_count_;
}
inline void PlayerCookReq::set_cook_count(::google::protobuf::uint32 value) {
  
  cook_count_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookReq.cook_count)
}

// uint32 qte_quality = 12;
inline void PlayerCookReq::clear_qte_quality() {
  qte_quality_ = 0u;
}
inline ::google::protobuf::uint32 PlayerCookReq::qte_quality() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookReq.qte_quality)
  return qte_quality_;
}
inline void PlayerCookReq::set_qte_quality(::google::protobuf::uint32 value) {
  
  qte_quality_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookReq.qte_quality)
}

// uint32 recipe_id = 8;
inline void PlayerCookReq::clear_recipe_id() {
  recipe_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerCookReq::recipe_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookReq.recipe_id)
  return recipe_id_;
}
inline void PlayerCookReq::set_recipe_id(::google::protobuf::uint32 value) {
  
  recipe_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookReq.recipe_id)
}

// uint32 assist_avatar = 14;
inline void PlayerCookReq::clear_assist_avatar() {
  assist_avatar_ = 0u;
}
inline ::google::protobuf::uint32 PlayerCookReq::assist_avatar() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookReq.assist_avatar)
  return assist_avatar_;
}
inline void PlayerCookReq::set_assist_avatar(::google::protobuf::uint32 value) {
  
  assist_avatar_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookReq.assist_avatar)
}

// -------------------------------------------------------------------

// PlayerCookRsp

// repeated .proto.ItemParam extral_item_list = 15;
inline int PlayerCookRsp::extral_item_list_size() const {
  return extral_item_list_.size();
}
inline void PlayerCookRsp::clear_extral_item_list() {
  extral_item_list_.Clear();
}
inline const ::proto::ItemParam& PlayerCookRsp::extral_item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookRsp.extral_item_list)
  return extral_item_list_.Get(index);
}
inline ::proto::ItemParam* PlayerCookRsp::mutable_extral_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerCookRsp.extral_item_list)
  return extral_item_list_.Mutable(index);
}
inline ::proto::ItemParam* PlayerCookRsp::add_extral_item_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerCookRsp.extral_item_list)
  return extral_item_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
PlayerCookRsp::mutable_extral_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerCookRsp.extral_item_list)
  return &extral_item_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
PlayerCookRsp::extral_item_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerCookRsp.extral_item_list)
  return extral_item_list_;
}

// uint32 cook_count = 12;
inline void PlayerCookRsp::clear_cook_count() {
  cook_count_ = 0u;
}
inline ::google::protobuf::uint32 PlayerCookRsp::cook_count() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookRsp.cook_count)
  return cook_count_;
}
inline void PlayerCookRsp::set_cook_count(::google::protobuf::uint32 value) {
  
  cook_count_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookRsp.cook_count)
}

// repeated .proto.ItemParam item_list = 11;
inline int PlayerCookRsp::item_list_size() const {
  return item_list_.size();
}
inline void PlayerCookRsp::clear_item_list() {
  item_list_.Clear();
}
inline const ::proto::ItemParam& PlayerCookRsp::item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookRsp.item_list)
  return item_list_.Get(index);
}
inline ::proto::ItemParam* PlayerCookRsp::mutable_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerCookRsp.item_list)
  return item_list_.Mutable(index);
}
inline ::proto::ItemParam* PlayerCookRsp::add_item_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerCookRsp.item_list)
  return item_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
PlayerCookRsp::mutable_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerCookRsp.item_list)
  return &item_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
PlayerCookRsp::item_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerCookRsp.item_list)
  return item_list_;
}

// int32 retcode = 3;
inline void PlayerCookRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PlayerCookRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookRsp.retcode)
  return retcode_;
}
inline void PlayerCookRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookRsp.retcode)
}

// uint32 qte_quality = 5;
inline void PlayerCookRsp::clear_qte_quality() {
  qte_quality_ = 0u;
}
inline ::google::protobuf::uint32 PlayerCookRsp::qte_quality() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookRsp.qte_quality)
  return qte_quality_;
}
inline void PlayerCookRsp::set_qte_quality(::google::protobuf::uint32 value) {
  
  qte_quality_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookRsp.qte_quality)
}

// .proto.CookRecipeData recipe_data = 7;
inline bool PlayerCookRsp::has_recipe_data() const {
  return this != internal_default_instance() && recipe_data_ != NULL;
}
inline void PlayerCookRsp::clear_recipe_data() {
  if (GetArenaNoVirtual() == NULL && recipe_data_ != NULL) delete recipe_data_;
  recipe_data_ = NULL;
}
inline const ::proto::CookRecipeData& PlayerCookRsp::recipe_data() const {
  const ::proto::CookRecipeData* p = recipe_data_;
  // @@protoc_insertion_point(field_get:proto.PlayerCookRsp.recipe_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CookRecipeData*>(
      &::proto::_CookRecipeData_default_instance_);
}
inline ::proto::CookRecipeData* PlayerCookRsp::mutable_recipe_data() {
  
  if (recipe_data_ == NULL) {
    recipe_data_ = new ::proto::CookRecipeData;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerCookRsp.recipe_data)
  return recipe_data_;
}
inline ::proto::CookRecipeData* PlayerCookRsp::release_recipe_data() {
  // @@protoc_insertion_point(field_release:proto.PlayerCookRsp.recipe_data)
  
  ::proto::CookRecipeData* temp = recipe_data_;
  recipe_data_ = NULL;
  return temp;
}
inline void PlayerCookRsp::set_allocated_recipe_data(::proto::CookRecipeData* recipe_data) {
  delete recipe_data_;
  recipe_data_ = recipe_data;
  if (recipe_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerCookRsp.recipe_data)
}

// -------------------------------------------------------------------

// PlayerRandomCookReq

// repeated .proto.ItemParam material_list = 13;
inline int PlayerRandomCookReq::material_list_size() const {
  return material_list_.size();
}
inline void PlayerRandomCookReq::clear_material_list() {
  material_list_.Clear();
}
inline const ::proto::ItemParam& PlayerRandomCookReq::material_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerRandomCookReq.material_list)
  return material_list_.Get(index);
}
inline ::proto::ItemParam* PlayerRandomCookReq::mutable_material_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerRandomCookReq.material_list)
  return material_list_.Mutable(index);
}
inline ::proto::ItemParam* PlayerRandomCookReq::add_material_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerRandomCookReq.material_list)
  return material_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
PlayerRandomCookReq::mutable_material_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerRandomCookReq.material_list)
  return &material_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
PlayerRandomCookReq::material_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerRandomCookReq.material_list)
  return material_list_;
}

// -------------------------------------------------------------------

// PlayerRandomCookRsp

// int32 retcode = 4;
inline void PlayerRandomCookRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PlayerRandomCookRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerRandomCookRsp.retcode)
  return retcode_;
}
inline void PlayerRandomCookRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerRandomCookRsp.retcode)
}

// -------------------------------------------------------------------

// CookRecipeData

// uint32 proficiency = 13;
inline void CookRecipeData::clear_proficiency() {
  proficiency_ = 0u;
}
inline ::google::protobuf::uint32 CookRecipeData::proficiency() const {
  // @@protoc_insertion_point(field_get:proto.CookRecipeData.proficiency)
  return proficiency_;
}
inline void CookRecipeData::set_proficiency(::google::protobuf::uint32 value) {
  
  proficiency_ = value;
  // @@protoc_insertion_point(field_set:proto.CookRecipeData.proficiency)
}

// uint32 recipe_id = 9;
inline void CookRecipeData::clear_recipe_id() {
  recipe_id_ = 0u;
}
inline ::google::protobuf::uint32 CookRecipeData::recipe_id() const {
  // @@protoc_insertion_point(field_get:proto.CookRecipeData.recipe_id)
  return recipe_id_;
}
inline void CookRecipeData::set_recipe_id(::google::protobuf::uint32 value) {
  
  recipe_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CookRecipeData.recipe_id)
}

// -------------------------------------------------------------------

// CookDataNotify

// repeated .proto.CookRecipeData recipe_data_list = 2;
inline int CookDataNotify::recipe_data_list_size() const {
  return recipe_data_list_.size();
}
inline void CookDataNotify::clear_recipe_data_list() {
  recipe_data_list_.Clear();
}
inline const ::proto::CookRecipeData& CookDataNotify::recipe_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CookDataNotify.recipe_data_list)
  return recipe_data_list_.Get(index);
}
inline ::proto::CookRecipeData* CookDataNotify::mutable_recipe_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CookDataNotify.recipe_data_list)
  return recipe_data_list_.Mutable(index);
}
inline ::proto::CookRecipeData* CookDataNotify::add_recipe_data_list() {
  // @@protoc_insertion_point(field_add:proto.CookDataNotify.recipe_data_list)
  return recipe_data_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::CookRecipeData >*
CookDataNotify::mutable_recipe_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CookDataNotify.recipe_data_list)
  return &recipe_data_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::CookRecipeData >&
CookDataNotify::recipe_data_list() const {
  // @@protoc_insertion_point(field_list:proto.CookDataNotify.recipe_data_list)
  return recipe_data_list_;
}

// uint32 grade = 11;
inline void CookDataNotify::clear_grade() {
  grade_ = 0u;
}
inline ::google::protobuf::uint32 CookDataNotify::grade() const {
  // @@protoc_insertion_point(field_get:proto.CookDataNotify.grade)
  return grade_;
}
inline void CookDataNotify::set_grade(::google::protobuf::uint32 value) {
  
  grade_ = value;
  // @@protoc_insertion_point(field_set:proto.CookDataNotify.grade)
}

// -------------------------------------------------------------------

// CookRecipeDataNotify

// .proto.CookRecipeData recipe_data = 4;
inline bool CookRecipeDataNotify::has_recipe_data() const {
  return this != internal_default_instance() && recipe_data_ != NULL;
}
inline void CookRecipeDataNotify::clear_recipe_data() {
  if (GetArenaNoVirtual() == NULL && recipe_data_ != NULL) delete recipe_data_;
  recipe_data_ = NULL;
}
inline const ::proto::CookRecipeData& CookRecipeDataNotify::recipe_data() const {
  const ::proto::CookRecipeData* p = recipe_data_;
  // @@protoc_insertion_point(field_get:proto.CookRecipeDataNotify.recipe_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CookRecipeData*>(
      &::proto::_CookRecipeData_default_instance_);
}
inline ::proto::CookRecipeData* CookRecipeDataNotify::mutable_recipe_data() {
  
  if (recipe_data_ == NULL) {
    recipe_data_ = new ::proto::CookRecipeData;
  }
  // @@protoc_insertion_point(field_mutable:proto.CookRecipeDataNotify.recipe_data)
  return recipe_data_;
}
inline ::proto::CookRecipeData* CookRecipeDataNotify::release_recipe_data() {
  // @@protoc_insertion_point(field_release:proto.CookRecipeDataNotify.recipe_data)
  
  ::proto::CookRecipeData* temp = recipe_data_;
  recipe_data_ = NULL;
  return temp;
}
inline void CookRecipeDataNotify::set_allocated_recipe_data(::proto::CookRecipeData* recipe_data) {
  delete recipe_data_;
  recipe_data_ = recipe_data;
  if (recipe_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CookRecipeDataNotify.recipe_data)
}

// -------------------------------------------------------------------

// CookGradeDataNotify

// uint32 grade = 12;
inline void CookGradeDataNotify::clear_grade() {
  grade_ = 0u;
}
inline ::google::protobuf::uint32 CookGradeDataNotify::grade() const {
  // @@protoc_insertion_point(field_get:proto.CookGradeDataNotify.grade)
  return grade_;
}
inline void CookGradeDataNotify::set_grade(::google::protobuf::uint32 value) {
  
  grade_ = value;
  // @@protoc_insertion_point(field_set:proto.CookGradeDataNotify.grade)
}

// -------------------------------------------------------------------

// PlayerCompoundMaterialReq

// uint32 count = 11;
inline void PlayerCompoundMaterialReq::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 PlayerCompoundMaterialReq::count() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialReq.count)
  return count_;
}
inline void PlayerCompoundMaterialReq::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCompoundMaterialReq.count)
}

// uint32 compound_id = 3;
inline void PlayerCompoundMaterialReq::clear_compound_id() {
  compound_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerCompoundMaterialReq::compound_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialReq.compound_id)
  return compound_id_;
}
inline void PlayerCompoundMaterialReq::set_compound_id(::google::protobuf::uint32 value) {
  
  compound_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCompoundMaterialReq.compound_id)
}

// -------------------------------------------------------------------

// CompoundQueueData

// uint32 output_count = 1;
inline void CompoundQueueData::clear_output_count() {
  output_count_ = 0u;
}
inline ::google::protobuf::uint32 CompoundQueueData::output_count() const {
  // @@protoc_insertion_point(field_get:proto.CompoundQueueData.output_count)
  return output_count_;
}
inline void CompoundQueueData::set_output_count(::google::protobuf::uint32 value) {
  
  output_count_ = value;
  // @@protoc_insertion_point(field_set:proto.CompoundQueueData.output_count)
}

// uint32 compound_id = 4;
inline void CompoundQueueData::clear_compound_id() {
  compound_id_ = 0u;
}
inline ::google::protobuf::uint32 CompoundQueueData::compound_id() const {
  // @@protoc_insertion_point(field_get:proto.CompoundQueueData.compound_id)
  return compound_id_;
}
inline void CompoundQueueData::set_compound_id(::google::protobuf::uint32 value) {
  
  compound_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CompoundQueueData.compound_id)
}

// uint32 output_time = 14;
inline void CompoundQueueData::clear_output_time() {
  output_time_ = 0u;
}
inline ::google::protobuf::uint32 CompoundQueueData::output_time() const {
  // @@protoc_insertion_point(field_get:proto.CompoundQueueData.output_time)
  return output_time_;
}
inline void CompoundQueueData::set_output_time(::google::protobuf::uint32 value) {
  
  output_time_ = value;
  // @@protoc_insertion_point(field_set:proto.CompoundQueueData.output_time)
}

// uint32 wait_count = 8;
inline void CompoundQueueData::clear_wait_count() {
  wait_count_ = 0u;
}
inline ::google::protobuf::uint32 CompoundQueueData::wait_count() const {
  // @@protoc_insertion_point(field_get:proto.CompoundQueueData.wait_count)
  return wait_count_;
}
inline void CompoundQueueData::set_wait_count(::google::protobuf::uint32 value) {
  
  wait_count_ = value;
  // @@protoc_insertion_point(field_set:proto.CompoundQueueData.wait_count)
}

// -------------------------------------------------------------------

// PlayerCompoundMaterialRsp

// .proto.CompoundQueueData compound_que_data = 5;
inline bool PlayerCompoundMaterialRsp::has_compound_que_data() const {
  return this != internal_default_instance() && compound_que_data_ != NULL;
}
inline void PlayerCompoundMaterialRsp::clear_compound_que_data() {
  if (GetArenaNoVirtual() == NULL && compound_que_data_ != NULL) delete compound_que_data_;
  compound_que_data_ = NULL;
}
inline const ::proto::CompoundQueueData& PlayerCompoundMaterialRsp::compound_que_data() const {
  const ::proto::CompoundQueueData* p = compound_que_data_;
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialRsp.compound_que_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CompoundQueueData*>(
      &::proto::_CompoundQueueData_default_instance_);
}
inline ::proto::CompoundQueueData* PlayerCompoundMaterialRsp::mutable_compound_que_data() {
  
  if (compound_que_data_ == NULL) {
    compound_que_data_ = new ::proto::CompoundQueueData;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerCompoundMaterialRsp.compound_que_data)
  return compound_que_data_;
}
inline ::proto::CompoundQueueData* PlayerCompoundMaterialRsp::release_compound_que_data() {
  // @@protoc_insertion_point(field_release:proto.PlayerCompoundMaterialRsp.compound_que_data)
  
  ::proto::CompoundQueueData* temp = compound_que_data_;
  compound_que_data_ = NULL;
  return temp;
}
inline void PlayerCompoundMaterialRsp::set_allocated_compound_que_data(::proto::CompoundQueueData* compound_que_data) {
  delete compound_que_data_;
  compound_que_data_ = compound_que_data;
  if (compound_que_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerCompoundMaterialRsp.compound_que_data)
}

// int32 retcode = 12;
inline void PlayerCompoundMaterialRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PlayerCompoundMaterialRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialRsp.retcode)
  return retcode_;
}
inline void PlayerCompoundMaterialRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCompoundMaterialRsp.retcode)
}

// -------------------------------------------------------------------

// TakeCompoundOutputReq

// uint32 compound_group_id = 3;
inline void TakeCompoundOutputReq::clear_compound_group_id() {
  compound_group_id_ = 0u;
}
inline ::google::protobuf::uint32 TakeCompoundOutputReq::compound_group_id() const {
  // @@protoc_insertion_point(field_get:proto.TakeCompoundOutputReq.compound_group_id)
  return compound_group_id_;
}
inline void TakeCompoundOutputReq::set_compound_group_id(::google::protobuf::uint32 value) {
  
  compound_group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeCompoundOutputReq.compound_group_id)
}

// uint32 compound_id = 10;
inline void TakeCompoundOutputReq::clear_compound_id() {
  compound_id_ = 0u;
}
inline ::google::protobuf::uint32 TakeCompoundOutputReq::compound_id() const {
  // @@protoc_insertion_point(field_get:proto.TakeCompoundOutputReq.compound_id)
  return compound_id_;
}
inline void TakeCompoundOutputReq::set_compound_id(::google::protobuf::uint32 value) {
  
  compound_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeCompoundOutputReq.compound_id)
}

// -------------------------------------------------------------------

// TakeCompoundOutputRsp

// repeated .proto.ItemParam item_list = 6;
inline int TakeCompoundOutputRsp::item_list_size() const {
  return item_list_.size();
}
inline void TakeCompoundOutputRsp::clear_item_list() {
  item_list_.Clear();
}
inline const ::proto::ItemParam& TakeCompoundOutputRsp::item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TakeCompoundOutputRsp.item_list)
  return item_list_.Get(index);
}
inline ::proto::ItemParam* TakeCompoundOutputRsp::mutable_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TakeCompoundOutputRsp.item_list)
  return item_list_.Mutable(index);
}
inline ::proto::ItemParam* TakeCompoundOutputRsp::add_item_list() {
  // @@protoc_insertion_point(field_add:proto.TakeCompoundOutputRsp.item_list)
  return item_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
TakeCompoundOutputRsp::mutable_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TakeCompoundOutputRsp.item_list)
  return &item_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
TakeCompoundOutputRsp::item_list() const {
  // @@protoc_insertion_point(field_list:proto.TakeCompoundOutputRsp.item_list)
  return item_list_;
}

// int32 retcode = 2;
inline void TakeCompoundOutputRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 TakeCompoundOutputRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TakeCompoundOutputRsp.retcode)
  return retcode_;
}
inline void TakeCompoundOutputRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeCompoundOutputRsp.retcode)
}

// -------------------------------------------------------------------

// CompoundDataNotify

// repeated uint32 unlock_compound_list = 1;
inline int CompoundDataNotify::unlock_compound_list_size() const {
  return unlock_compound_list_.size();
}
inline void CompoundDataNotify::clear_unlock_compound_list() {
  unlock_compound_list_.Clear();
}
inline ::google::protobuf::uint32 CompoundDataNotify::unlock_compound_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CompoundDataNotify.unlock_compound_list)
  return unlock_compound_list_.Get(index);
}
inline void CompoundDataNotify::set_unlock_compound_list(int index, ::google::protobuf::uint32 value) {
  unlock_compound_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.CompoundDataNotify.unlock_compound_list)
}
inline void CompoundDataNotify::add_unlock_compound_list(::google::protobuf::uint32 value) {
  unlock_compound_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.CompoundDataNotify.unlock_compound_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CompoundDataNotify::unlock_compound_list() const {
  // @@protoc_insertion_point(field_list:proto.CompoundDataNotify.unlock_compound_list)
  return unlock_compound_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CompoundDataNotify::mutable_unlock_compound_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CompoundDataNotify.unlock_compound_list)
  return &unlock_compound_list_;
}

// repeated .proto.CompoundQueueData compound_que_data_list = 9;
inline int CompoundDataNotify::compound_que_data_list_size() const {
  return compound_que_data_list_.size();
}
inline void CompoundDataNotify::clear_compound_que_data_list() {
  compound_que_data_list_.Clear();
}
inline const ::proto::CompoundQueueData& CompoundDataNotify::compound_que_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CompoundDataNotify.compound_que_data_list)
  return compound_que_data_list_.Get(index);
}
inline ::proto::CompoundQueueData* CompoundDataNotify::mutable_compound_que_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CompoundDataNotify.compound_que_data_list)
  return compound_que_data_list_.Mutable(index);
}
inline ::proto::CompoundQueueData* CompoundDataNotify::add_compound_que_data_list() {
  // @@protoc_insertion_point(field_add:proto.CompoundDataNotify.compound_que_data_list)
  return compound_que_data_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >*
CompoundDataNotify::mutable_compound_que_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CompoundDataNotify.compound_que_data_list)
  return &compound_que_data_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >&
CompoundDataNotify::compound_que_data_list() const {
  // @@protoc_insertion_point(field_list:proto.CompoundDataNotify.compound_que_data_list)
  return compound_que_data_list_;
}

// -------------------------------------------------------------------

// GetCompoundDataReq

// -------------------------------------------------------------------

// GetCompoundDataRsp

// int32 retcode = 3;
inline void GetCompoundDataRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetCompoundDataRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetCompoundDataRsp.retcode)
  return retcode_;
}
inline void GetCompoundDataRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetCompoundDataRsp.retcode)
}

// repeated uint32 unlock_compound_list = 11;
inline int GetCompoundDataRsp::unlock_compound_list_size() const {
  return unlock_compound_list_.size();
}
inline void GetCompoundDataRsp::clear_unlock_compound_list() {
  unlock_compound_list_.Clear();
}
inline ::google::protobuf::uint32 GetCompoundDataRsp::unlock_compound_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetCompoundDataRsp.unlock_compound_list)
  return unlock_compound_list_.Get(index);
}
inline void GetCompoundDataRsp::set_unlock_compound_list(int index, ::google::protobuf::uint32 value) {
  unlock_compound_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetCompoundDataRsp.unlock_compound_list)
}
inline void GetCompoundDataRsp::add_unlock_compound_list(::google::protobuf::uint32 value) {
  unlock_compound_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetCompoundDataRsp.unlock_compound_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetCompoundDataRsp::unlock_compound_list() const {
  // @@protoc_insertion_point(field_list:proto.GetCompoundDataRsp.unlock_compound_list)
  return unlock_compound_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetCompoundDataRsp::mutable_unlock_compound_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetCompoundDataRsp.unlock_compound_list)
  return &unlock_compound_list_;
}

// repeated .proto.CompoundQueueData compound_que_data_list = 7;
inline int GetCompoundDataRsp::compound_que_data_list_size() const {
  return compound_que_data_list_.size();
}
inline void GetCompoundDataRsp::clear_compound_que_data_list() {
  compound_que_data_list_.Clear();
}
inline const ::proto::CompoundQueueData& GetCompoundDataRsp::compound_que_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetCompoundDataRsp.compound_que_data_list)
  return compound_que_data_list_.Get(index);
}
inline ::proto::CompoundQueueData* GetCompoundDataRsp::mutable_compound_que_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetCompoundDataRsp.compound_que_data_list)
  return compound_que_data_list_.Mutable(index);
}
inline ::proto::CompoundQueueData* GetCompoundDataRsp::add_compound_que_data_list() {
  // @@protoc_insertion_point(field_add:proto.GetCompoundDataRsp.compound_que_data_list)
  return compound_que_data_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >*
GetCompoundDataRsp::mutable_compound_que_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetCompoundDataRsp.compound_que_data_list)
  return &compound_que_data_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >&
GetCompoundDataRsp::compound_que_data_list() const {
  // @@protoc_insertion_point(field_list:proto.GetCompoundDataRsp.compound_que_data_list)
  return compound_que_data_list_;
}

// -------------------------------------------------------------------

// PlayerTimeNotify

// uint64 server_time = 5;
inline void PlayerTimeNotify::clear_server_time() {
  server_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PlayerTimeNotify::server_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerTimeNotify.server_time)
  return server_time_;
}
inline void PlayerTimeNotify::set_server_time(::google::protobuf::uint64 value) {
  
  server_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerTimeNotify.server_time)
}

// uint64 player_time = 11;
inline void PlayerTimeNotify::clear_player_time() {
  player_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PlayerTimeNotify::player_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerTimeNotify.player_time)
  return player_time_;
}
inline void PlayerTimeNotify::set_player_time(::google::protobuf::uint64 value) {
  
  player_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerTimeNotify.player_time)
}

// bool is_paused = 14;
inline void PlayerTimeNotify::clear_is_paused() {
  is_paused_ = false;
}
inline bool PlayerTimeNotify::is_paused() const {
  // @@protoc_insertion_point(field_get:proto.PlayerTimeNotify.is_paused)
  return is_paused_;
}
inline void PlayerTimeNotify::set_is_paused(bool value) {
  
  is_paused_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerTimeNotify.is_paused)
}

// -------------------------------------------------------------------

// PlayerSetPauseReq

// bool is_paused = 1;
inline void PlayerSetPauseReq::clear_is_paused() {
  is_paused_ = false;
}
inline bool PlayerSetPauseReq::is_paused() const {
  // @@protoc_insertion_point(field_get:proto.PlayerSetPauseReq.is_paused)
  return is_paused_;
}
inline void PlayerSetPauseReq::set_is_paused(bool value) {
  
  is_paused_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerSetPauseReq.is_paused)
}

// -------------------------------------------------------------------

// PlayerSetPauseRsp

// int32 retcode = 15;
inline void PlayerSetPauseRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PlayerSetPauseRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerSetPauseRsp.retcode)
  return retcode_;
}
inline void PlayerSetPauseRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerSetPauseRsp.retcode)
}

// -------------------------------------------------------------------

// PlayerSetLanguageReq

// uint32 language_type = 5;
inline void PlayerSetLanguageReq::clear_language_type() {
  language_type_ = 0u;
}
inline ::google::protobuf::uint32 PlayerSetLanguageReq::language_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerSetLanguageReq.language_type)
  return language_type_;
}
inline void PlayerSetLanguageReq::set_language_type(::google::protobuf::uint32 value) {
  
  language_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerSetLanguageReq.language_type)
}

// -------------------------------------------------------------------

// PlayerSetLanguageRsp

// int32 retcode = 11;
inline void PlayerSetLanguageRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PlayerSetLanguageRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerSetLanguageRsp.retcode)
  return retcode_;
}
inline void PlayerSetLanguageRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerSetLanguageRsp.retcode)
}

// -------------------------------------------------------------------

// DataResVersionNotify

// string client_silence_md5 = 10;
inline void DataResVersionNotify::clear_client_silence_md5() {
  client_silence_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataResVersionNotify::client_silence_md5() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.client_silence_md5)
  return client_silence_md5_.GetNoArena();
}
inline void DataResVersionNotify::set_client_silence_md5(const ::std::string& value) {
  
  client_silence_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.client_silence_md5)
}
#if LANG_CXX11
inline void DataResVersionNotify::set_client_silence_md5(::std::string&& value) {
  
  client_silence_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.DataResVersionNotify.client_silence_md5)
}
#endif
inline void DataResVersionNotify::set_client_silence_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_silence_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.DataResVersionNotify.client_silence_md5)
}
inline void DataResVersionNotify::set_client_silence_md5(const char* value, size_t size) {
  
  client_silence_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.DataResVersionNotify.client_silence_md5)
}
inline ::std::string* DataResVersionNotify::mutable_client_silence_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.DataResVersionNotify.client_silence_md5)
  return client_silence_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataResVersionNotify::release_client_silence_md5() {
  // @@protoc_insertion_point(field_release:proto.DataResVersionNotify.client_silence_md5)
  
  return client_silence_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataResVersionNotify::set_allocated_client_silence_md5(::std::string* client_silence_md5) {
  if (client_silence_md5 != NULL) {
    
  } else {
    
  }
  client_silence_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_silence_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.DataResVersionNotify.client_silence_md5)
}

// string client_silence_version_suffix = 15;
inline void DataResVersionNotify::clear_client_silence_version_suffix() {
  client_silence_version_suffix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataResVersionNotify::client_silence_version_suffix() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.client_silence_version_suffix)
  return client_silence_version_suffix_.GetNoArena();
}
inline void DataResVersionNotify::set_client_silence_version_suffix(const ::std::string& value) {
  
  client_silence_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.client_silence_version_suffix)
}
#if LANG_CXX11
inline void DataResVersionNotify::set_client_silence_version_suffix(::std::string&& value) {
  
  client_silence_version_suffix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.DataResVersionNotify.client_silence_version_suffix)
}
#endif
inline void DataResVersionNotify::set_client_silence_version_suffix(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_silence_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.DataResVersionNotify.client_silence_version_suffix)
}
inline void DataResVersionNotify::set_client_silence_version_suffix(const char* value, size_t size) {
  
  client_silence_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.DataResVersionNotify.client_silence_version_suffix)
}
inline ::std::string* DataResVersionNotify::mutable_client_silence_version_suffix() {
  
  // @@protoc_insertion_point(field_mutable:proto.DataResVersionNotify.client_silence_version_suffix)
  return client_silence_version_suffix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataResVersionNotify::release_client_silence_version_suffix() {
  // @@protoc_insertion_point(field_release:proto.DataResVersionNotify.client_silence_version_suffix)
  
  return client_silence_version_suffix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataResVersionNotify::set_allocated_client_silence_version_suffix(::std::string* client_silence_version_suffix) {
  if (client_silence_version_suffix != NULL) {
    
  } else {
    
  }
  client_silence_version_suffix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_silence_version_suffix);
  // @@protoc_insertion_point(field_set_allocated:proto.DataResVersionNotify.client_silence_version_suffix)
}

// .proto.ResVersionConfig res_version_config = 9;
inline bool DataResVersionNotify::has_res_version_config() const {
  return this != internal_default_instance() && res_version_config_ != NULL;
}
inline void DataResVersionNotify::clear_res_version_config() {
  if (GetArenaNoVirtual() == NULL && res_version_config_ != NULL) delete res_version_config_;
  res_version_config_ = NULL;
}
inline const ::proto::ResVersionConfig& DataResVersionNotify::res_version_config() const {
  const ::proto::ResVersionConfig* p = res_version_config_;
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.res_version_config)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ResVersionConfig*>(
      &::proto::_ResVersionConfig_default_instance_);
}
inline ::proto::ResVersionConfig* DataResVersionNotify::mutable_res_version_config() {
  
  if (res_version_config_ == NULL) {
    res_version_config_ = new ::proto::ResVersionConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto.DataResVersionNotify.res_version_config)
  return res_version_config_;
}
inline ::proto::ResVersionConfig* DataResVersionNotify::release_res_version_config() {
  // @@protoc_insertion_point(field_release:proto.DataResVersionNotify.res_version_config)
  
  ::proto::ResVersionConfig* temp = res_version_config_;
  res_version_config_ = NULL;
  return temp;
}
inline void DataResVersionNotify::set_allocated_res_version_config(::proto::ResVersionConfig* res_version_config) {
  delete res_version_config_;
  res_version_config_ = res_version_config;
  if (res_version_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.DataResVersionNotify.res_version_config)
}

// bool is_data_need_relogin = 7;
inline void DataResVersionNotify::clear_is_data_need_relogin() {
  is_data_need_relogin_ = false;
}
inline bool DataResVersionNotify::is_data_need_relogin() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.is_data_need_relogin)
  return is_data_need_relogin_;
}
inline void DataResVersionNotify::set_is_data_need_relogin(bool value) {
  
  is_data_need_relogin_ = value;
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.is_data_need_relogin)
}

// .proto.DataResVersionNotify.DataResVersionOpType op_type = 12;
inline void DataResVersionNotify::clear_op_type() {
  op_type_ = 0;
}
inline ::proto::DataResVersionNotify_DataResVersionOpType DataResVersionNotify::op_type() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.op_type)
  return static_cast< ::proto::DataResVersionNotify_DataResVersionOpType >(op_type_);
}
inline void DataResVersionNotify::set_op_type(::proto::DataResVersionNotify_DataResVersionOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.op_type)
}

// uint32 client_data_version = 2;
inline void DataResVersionNotify::clear_client_data_version() {
  client_data_version_ = 0u;
}
inline ::google::protobuf::uint32 DataResVersionNotify::client_data_version() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.client_data_version)
  return client_data_version_;
}
inline void DataResVersionNotify::set_client_data_version(::google::protobuf::uint32 value) {
  
  client_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.client_data_version)
}

// string client_version_suffix = 5;
inline void DataResVersionNotify::clear_client_version_suffix() {
  client_version_suffix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataResVersionNotify::client_version_suffix() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.client_version_suffix)
  return client_version_suffix_.GetNoArena();
}
inline void DataResVersionNotify::set_client_version_suffix(const ::std::string& value) {
  
  client_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.client_version_suffix)
}
#if LANG_CXX11
inline void DataResVersionNotify::set_client_version_suffix(::std::string&& value) {
  
  client_version_suffix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.DataResVersionNotify.client_version_suffix)
}
#endif
inline void DataResVersionNotify::set_client_version_suffix(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.DataResVersionNotify.client_version_suffix)
}
inline void DataResVersionNotify::set_client_version_suffix(const char* value, size_t size) {
  
  client_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.DataResVersionNotify.client_version_suffix)
}
inline ::std::string* DataResVersionNotify::mutable_client_version_suffix() {
  
  // @@protoc_insertion_point(field_mutable:proto.DataResVersionNotify.client_version_suffix)
  return client_version_suffix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataResVersionNotify::release_client_version_suffix() {
  // @@protoc_insertion_point(field_release:proto.DataResVersionNotify.client_version_suffix)
  
  return client_version_suffix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataResVersionNotify::set_allocated_client_version_suffix(::std::string* client_version_suffix) {
  if (client_version_suffix != NULL) {
    
  } else {
    
  }
  client_version_suffix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version_suffix);
  // @@protoc_insertion_point(field_set_allocated:proto.DataResVersionNotify.client_version_suffix)
}

// uint32 client_silence_data_version = 1;
inline void DataResVersionNotify::clear_client_silence_data_version() {
  client_silence_data_version_ = 0u;
}
inline ::google::protobuf::uint32 DataResVersionNotify::client_silence_data_version() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.client_silence_data_version)
  return client_silence_data_version_;
}
inline void DataResVersionNotify::set_client_silence_data_version(::google::protobuf::uint32 value) {
  
  client_silence_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.client_silence_data_version)
}

// string client_md5 = 14;
inline void DataResVersionNotify::clear_client_md5() {
  client_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataResVersionNotify::client_md5() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.client_md5)
  return client_md5_.GetNoArena();
}
inline void DataResVersionNotify::set_client_md5(const ::std::string& value) {
  
  client_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.client_md5)
}
#if LANG_CXX11
inline void DataResVersionNotify::set_client_md5(::std::string&& value) {
  
  client_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.DataResVersionNotify.client_md5)
}
#endif
inline void DataResVersionNotify::set_client_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.DataResVersionNotify.client_md5)
}
inline void DataResVersionNotify::set_client_md5(const char* value, size_t size) {
  
  client_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.DataResVersionNotify.client_md5)
}
inline ::std::string* DataResVersionNotify::mutable_client_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.DataResVersionNotify.client_md5)
  return client_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataResVersionNotify::release_client_md5() {
  // @@protoc_insertion_point(field_release:proto.DataResVersionNotify.client_md5)
  
  return client_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataResVersionNotify::set_allocated_client_md5(::std::string* client_md5) {
  if (client_md5 != NULL) {
    
  } else {
    
  }
  client_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.DataResVersionNotify.client_md5)
}

// -------------------------------------------------------------------

// DailyTaskInfo

// uint32 reward_id = 3;
inline void DailyTaskInfo::clear_reward_id() {
  reward_id_ = 0u;
}
inline ::google::protobuf::uint32 DailyTaskInfo::reward_id() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskInfo.reward_id)
  return reward_id_;
}
inline void DailyTaskInfo::set_reward_id(::google::protobuf::uint32 value) {
  
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskInfo.reward_id)
}

// uint32 progress = 13;
inline void DailyTaskInfo::clear_progress() {
  progress_ = 0u;
}
inline ::google::protobuf::uint32 DailyTaskInfo::progress() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskInfo.progress)
  return progress_;
}
inline void DailyTaskInfo::set_progress(::google::protobuf::uint32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskInfo.progress)
}

// uint32 finish_progress = 10;
inline void DailyTaskInfo::clear_finish_progress() {
  finish_progress_ = 0u;
}
inline ::google::protobuf::uint32 DailyTaskInfo::finish_progress() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskInfo.finish_progress)
  return finish_progress_;
}
inline void DailyTaskInfo::set_finish_progress(::google::protobuf::uint32 value) {
  
  finish_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskInfo.finish_progress)
}

// uint32 daily_task_id = 4;
inline void DailyTaskInfo::clear_daily_task_id() {
  daily_task_id_ = 0u;
}
inline ::google::protobuf::uint32 DailyTaskInfo::daily_task_id() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskInfo.daily_task_id)
  return daily_task_id_;
}
inline void DailyTaskInfo::set_daily_task_id(::google::protobuf::uint32 value) {
  
  daily_task_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskInfo.daily_task_id)
}

// bool is_finished = 14;
inline void DailyTaskInfo::clear_is_finished() {
  is_finished_ = false;
}
inline bool DailyTaskInfo::is_finished() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskInfo.is_finished)
  return is_finished_;
}
inline void DailyTaskInfo::set_is_finished(bool value) {
  
  is_finished_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskInfo.is_finished)
}

// -------------------------------------------------------------------

// DailyTaskDataNotify

// uint32 score_reward_id = 11;
inline void DailyTaskDataNotify::clear_score_reward_id() {
  score_reward_id_ = 0u;
}
inline ::google::protobuf::uint32 DailyTaskDataNotify::score_reward_id() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskDataNotify.score_reward_id)
  return score_reward_id_;
}
inline void DailyTaskDataNotify::set_score_reward_id(::google::protobuf::uint32 value) {
  
  score_reward_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskDataNotify.score_reward_id)
}

// uint32 finished_num = 4;
inline void DailyTaskDataNotify::clear_finished_num() {
  finished_num_ = 0u;
}
inline ::google::protobuf::uint32 DailyTaskDataNotify::finished_num() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskDataNotify.finished_num)
  return finished_num_;
}
inline void DailyTaskDataNotify::set_finished_num(::google::protobuf::uint32 value) {
  
  finished_num_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskDataNotify.finished_num)
}

// bool is_taken_score_reward = 9;
inline void DailyTaskDataNotify::clear_is_taken_score_reward() {
  is_taken_score_reward_ = false;
}
inline bool DailyTaskDataNotify::is_taken_score_reward() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskDataNotify.is_taken_score_reward)
  return is_taken_score_reward_;
}
inline void DailyTaskDataNotify::set_is_taken_score_reward(bool value) {
  
  is_taken_score_reward_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskDataNotify.is_taken_score_reward)
}

// -------------------------------------------------------------------

// DailyTaskProgressNotify

// .proto.DailyTaskInfo info = 12;
inline bool DailyTaskProgressNotify::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void DailyTaskProgressNotify::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::proto::DailyTaskInfo& DailyTaskProgressNotify::info() const {
  const ::proto::DailyTaskInfo* p = info_;
  // @@protoc_insertion_point(field_get:proto.DailyTaskProgressNotify.info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::DailyTaskInfo*>(
      &::proto::_DailyTaskInfo_default_instance_);
}
inline ::proto::DailyTaskInfo* DailyTaskProgressNotify::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::proto::DailyTaskInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.DailyTaskProgressNotify.info)
  return info_;
}
inline ::proto::DailyTaskInfo* DailyTaskProgressNotify::release_info() {
  // @@protoc_insertion_point(field_release:proto.DailyTaskProgressNotify.info)
  
  ::proto::DailyTaskInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void DailyTaskProgressNotify::set_allocated_info(::proto::DailyTaskInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.DailyTaskProgressNotify.info)
}

// -------------------------------------------------------------------

// DailyTaskScoreRewardNotify

// uint32 reward_id = 14;
inline void DailyTaskScoreRewardNotify::clear_reward_id() {
  reward_id_ = 0u;
}
inline ::google::protobuf::uint32 DailyTaskScoreRewardNotify::reward_id() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskScoreRewardNotify.reward_id)
  return reward_id_;
}
inline void DailyTaskScoreRewardNotify::set_reward_id(::google::protobuf::uint32 value) {
  
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskScoreRewardNotify.reward_id)
}

// -------------------------------------------------------------------

// WorldOwnerDailyTaskNotify

// repeated .proto.DailyTaskInfo task_list = 1;
inline int WorldOwnerDailyTaskNotify::task_list_size() const {
  return task_list_.size();
}
inline void WorldOwnerDailyTaskNotify::clear_task_list() {
  task_list_.Clear();
}
inline const ::proto::DailyTaskInfo& WorldOwnerDailyTaskNotify::task_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WorldOwnerDailyTaskNotify.task_list)
  return task_list_.Get(index);
}
inline ::proto::DailyTaskInfo* WorldOwnerDailyTaskNotify::mutable_task_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.WorldOwnerDailyTaskNotify.task_list)
  return task_list_.Mutable(index);
}
inline ::proto::DailyTaskInfo* WorldOwnerDailyTaskNotify::add_task_list() {
  // @@protoc_insertion_point(field_add:proto.WorldOwnerDailyTaskNotify.task_list)
  return task_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::DailyTaskInfo >*
WorldOwnerDailyTaskNotify::mutable_task_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WorldOwnerDailyTaskNotify.task_list)
  return &task_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::DailyTaskInfo >&
WorldOwnerDailyTaskNotify::task_list() const {
  // @@protoc_insertion_point(field_list:proto.WorldOwnerDailyTaskNotify.task_list)
  return task_list_;
}

// uint32 finished_daily_task_num = 5;
inline void WorldOwnerDailyTaskNotify::clear_finished_daily_task_num() {
  finished_daily_task_num_ = 0u;
}
inline ::google::protobuf::uint32 WorldOwnerDailyTaskNotify::finished_daily_task_num() const {
  // @@protoc_insertion_point(field_get:proto.WorldOwnerDailyTaskNotify.finished_daily_task_num)
  return finished_daily_task_num_;
}
inline void WorldOwnerDailyTaskNotify::set_finished_daily_task_num(::google::protobuf::uint32 value) {
  
  finished_daily_task_num_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldOwnerDailyTaskNotify.finished_daily_task_num)
}

// uint32 filter_city_id = 2;
inline void WorldOwnerDailyTaskNotify::clear_filter_city_id() {
  filter_city_id_ = 0u;
}
inline ::google::protobuf::uint32 WorldOwnerDailyTaskNotify::filter_city_id() const {
  // @@protoc_insertion_point(field_get:proto.WorldOwnerDailyTaskNotify.filter_city_id)
  return filter_city_id_;
}
inline void WorldOwnerDailyTaskNotify::set_filter_city_id(::google::protobuf::uint32 value) {
  
  filter_city_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldOwnerDailyTaskNotify.filter_city_id)
}

// -------------------------------------------------------------------

// AddRandTaskInfoNotify

// uint32 rand_task_id = 5;
inline void AddRandTaskInfoNotify::clear_rand_task_id() {
  rand_task_id_ = 0u;
}
inline ::google::protobuf::uint32 AddRandTaskInfoNotify::rand_task_id() const {
  // @@protoc_insertion_point(field_get:proto.AddRandTaskInfoNotify.rand_task_id)
  return rand_task_id_;
}
inline void AddRandTaskInfoNotify::set_rand_task_id(::google::protobuf::uint32 value) {
  
  rand_task_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddRandTaskInfoNotify.rand_task_id)
}

// .proto.Vector pos = 13;
inline bool AddRandTaskInfoNotify::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void AddRandTaskInfoNotify::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& AddRandTaskInfoNotify::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.AddRandTaskInfoNotify.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* AddRandTaskInfoNotify::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.AddRandTaskInfoNotify.pos)
  return pos_;
}
inline ::proto::Vector* AddRandTaskInfoNotify::release_pos() {
  // @@protoc_insertion_point(field_release:proto.AddRandTaskInfoNotify.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void AddRandTaskInfoNotify::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AddRandTaskInfoNotify.pos)
}

// -------------------------------------------------------------------

// RemoveRandTaskInfoNotify

// bool is_succ = 9;
inline void RemoveRandTaskInfoNotify::clear_is_succ() {
  is_succ_ = false;
}
inline bool RemoveRandTaskInfoNotify::is_succ() const {
  // @@protoc_insertion_point(field_get:proto.RemoveRandTaskInfoNotify.is_succ)
  return is_succ_;
}
inline void RemoveRandTaskInfoNotify::set_is_succ(bool value) {
  
  is_succ_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveRandTaskInfoNotify.is_succ)
}

// .proto.RemoveRandTaskInfoNotify.FinishReason reason = 10;
inline void RemoveRandTaskInfoNotify::clear_reason() {
  reason_ = 0;
}
inline ::proto::RemoveRandTaskInfoNotify_FinishReason RemoveRandTaskInfoNotify::reason() const {
  // @@protoc_insertion_point(field_get:proto.RemoveRandTaskInfoNotify.reason)
  return static_cast< ::proto::RemoveRandTaskInfoNotify_FinishReason >(reason_);
}
inline void RemoveRandTaskInfoNotify::set_reason(::proto::RemoveRandTaskInfoNotify_FinishReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveRandTaskInfoNotify.reason)
}

// uint32 rand_task_id = 13;
inline void RemoveRandTaskInfoNotify::clear_rand_task_id() {
  rand_task_id_ = 0u;
}
inline ::google::protobuf::uint32 RemoveRandTaskInfoNotify::rand_task_id() const {
  // @@protoc_insertion_point(field_get:proto.RemoveRandTaskInfoNotify.rand_task_id)
  return rand_task_id_;
}
inline void RemoveRandTaskInfoNotify::set_rand_task_id(::google::protobuf::uint32 value) {
  
  rand_task_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveRandTaskInfoNotify.rand_task_id)
}

// -------------------------------------------------------------------

// TakePlayerLevelRewardReq

// uint32 level = 3;
inline void TakePlayerLevelRewardReq::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 TakePlayerLevelRewardReq::level() const {
  // @@protoc_insertion_point(field_get:proto.TakePlayerLevelRewardReq.level)
  return level_;
}
inline void TakePlayerLevelRewardReq::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.TakePlayerLevelRewardReq.level)
}

// -------------------------------------------------------------------

// TakePlayerLevelRewardRsp

// uint32 reward_id = 9;
inline void TakePlayerLevelRewardRsp::clear_reward_id() {
  reward_id_ = 0u;
}
inline ::google::protobuf::uint32 TakePlayerLevelRewardRsp::reward_id() const {
  // @@protoc_insertion_point(field_get:proto.TakePlayerLevelRewardRsp.reward_id)
  return reward_id_;
}
inline void TakePlayerLevelRewardRsp::set_reward_id(::google::protobuf::uint32 value) {
  
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakePlayerLevelRewardRsp.reward_id)
}

// int32 retcode = 13;
inline void TakePlayerLevelRewardRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 TakePlayerLevelRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TakePlayerLevelRewardRsp.retcode)
  return retcode_;
}
inline void TakePlayerLevelRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TakePlayerLevelRewardRsp.retcode)
}

// uint32 level = 6;
inline void TakePlayerLevelRewardRsp::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 TakePlayerLevelRewardRsp::level() const {
  // @@protoc_insertion_point(field_get:proto.TakePlayerLevelRewardRsp.level)
  return level_;
}
inline void TakePlayerLevelRewardRsp::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.TakePlayerLevelRewardRsp.level)
}

// -------------------------------------------------------------------

// PlayerLevelRewardUpdateNotify

// repeated uint32 level_list = 9;
inline int PlayerLevelRewardUpdateNotify::level_list_size() const {
  return level_list_.size();
}
inline void PlayerLevelRewardUpdateNotify::clear_level_list() {
  level_list_.Clear();
}
inline ::google::protobuf::uint32 PlayerLevelRewardUpdateNotify::level_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerLevelRewardUpdateNotify.level_list)
  return level_list_.Get(index);
}
inline void PlayerLevelRewardUpdateNotify::set_level_list(int index, ::google::protobuf::uint32 value) {
  level_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.PlayerLevelRewardUpdateNotify.level_list)
}
inline void PlayerLevelRewardUpdateNotify::add_level_list(::google::protobuf::uint32 value) {
  level_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.PlayerLevelRewardUpdateNotify.level_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PlayerLevelRewardUpdateNotify::level_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerLevelRewardUpdateNotify.level_list)
  return level_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PlayerLevelRewardUpdateNotify::mutable_level_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerLevelRewardUpdateNotify.level_list)
  return &level_list_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GivingRecord

// bool is_finished = 9;
inline void GivingRecord::clear_is_finished() {
  is_finished_ = false;
}
inline bool GivingRecord::is_finished() const {
  // @@protoc_insertion_point(field_get:proto.GivingRecord.is_finished)
  return is_finished_;
}
inline void GivingRecord::set_is_finished(bool value) {
  
  is_finished_ = value;
  // @@protoc_insertion_point(field_set:proto.GivingRecord.is_finished)
}

// uint32 group_id = 5;
inline void GivingRecord::clear_group_id() {
  group_id_ = 0u;
}
inline ::google::protobuf::uint32 GivingRecord::group_id() const {
  // @@protoc_insertion_point(field_get:proto.GivingRecord.group_id)
  return group_id_;
}
inline void GivingRecord::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GivingRecord.group_id)
}

// bool is_gadget_giving = 8;
inline void GivingRecord::clear_is_gadget_giving() {
  is_gadget_giving_ = false;
}
inline bool GivingRecord::is_gadget_giving() const {
  // @@protoc_insertion_point(field_get:proto.GivingRecord.is_gadget_giving)
  return is_gadget_giving_;
}
inline void GivingRecord::set_is_gadget_giving(bool value) {
  
  is_gadget_giving_ = value;
  // @@protoc_insertion_point(field_set:proto.GivingRecord.is_gadget_giving)
}

// uint32 giving_id = 3;
inline void GivingRecord::clear_giving_id() {
  giving_id_ = 0u;
}
inline ::google::protobuf::uint32 GivingRecord::giving_id() const {
  // @@protoc_insertion_point(field_get:proto.GivingRecord.giving_id)
  return giving_id_;
}
inline void GivingRecord::set_giving_id(::google::protobuf::uint32 value) {
  
  giving_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GivingRecord.giving_id)
}

// uint32 last_group_id = 6;
inline void GivingRecord::clear_last_group_id() {
  last_group_id_ = 0u;
}
inline ::google::protobuf::uint32 GivingRecord::last_group_id() const {
  // @@protoc_insertion_point(field_get:proto.GivingRecord.last_group_id)
  return last_group_id_;
}
inline void GivingRecord::set_last_group_id(::google::protobuf::uint32 value) {
  
  last_group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GivingRecord.last_group_id)
}

// uint32 config_id = 2;
inline void GivingRecord::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 GivingRecord::config_id() const {
  // @@protoc_insertion_point(field_get:proto.GivingRecord.config_id)
  return config_id_;
}
inline void GivingRecord::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GivingRecord.config_id)
}

// map<uint32, uint32> material_cnt_map = 15;
inline int GivingRecord::material_cnt_map_size() const {
  return material_cnt_map_.size();
}
inline void GivingRecord::clear_material_cnt_map() {
  material_cnt_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
GivingRecord::material_cnt_map() const {
  // @@protoc_insertion_point(field_map:proto.GivingRecord.material_cnt_map)
  return material_cnt_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
GivingRecord::mutable_material_cnt_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GivingRecord.material_cnt_map)
  return material_cnt_map_.MutableMap();
}

// -------------------------------------------------------------------

// GivingRecordNotify

// repeated .proto.GivingRecord giving_record_list = 14;
inline int GivingRecordNotify::giving_record_list_size() const {
  return giving_record_list_.size();
}
inline void GivingRecordNotify::clear_giving_record_list() {
  giving_record_list_.Clear();
}
inline const ::proto::GivingRecord& GivingRecordNotify::giving_record_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GivingRecordNotify.giving_record_list)
  return giving_record_list_.Get(index);
}
inline ::proto::GivingRecord* GivingRecordNotify::mutable_giving_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GivingRecordNotify.giving_record_list)
  return giving_record_list_.Mutable(index);
}
inline ::proto::GivingRecord* GivingRecordNotify::add_giving_record_list() {
  // @@protoc_insertion_point(field_add:proto.GivingRecordNotify.giving_record_list)
  return giving_record_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::GivingRecord >*
GivingRecordNotify::mutable_giving_record_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GivingRecordNotify.giving_record_list)
  return &giving_record_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::GivingRecord >&
GivingRecordNotify::giving_record_list() const {
  // @@protoc_insertion_point(field_list:proto.GivingRecordNotify.giving_record_list)
  return giving_record_list_;
}

// -------------------------------------------------------------------

// GivingRecordChangeNotify

// bool is_deactive = 11;
inline void GivingRecordChangeNotify::clear_is_deactive() {
  is_deactive_ = false;
}
inline bool GivingRecordChangeNotify::is_deactive() const {
  // @@protoc_insertion_point(field_get:proto.GivingRecordChangeNotify.is_deactive)
  return is_deactive_;
}
inline void GivingRecordChangeNotify::set_is_deactive(bool value) {
  
  is_deactive_ = value;
  // @@protoc_insertion_point(field_set:proto.GivingRecordChangeNotify.is_deactive)
}

// .proto.GivingRecord giving_record = 15;
inline bool GivingRecordChangeNotify::has_giving_record() const {
  return this != internal_default_instance() && giving_record_ != NULL;
}
inline void GivingRecordChangeNotify::clear_giving_record() {
  if (GetArenaNoVirtual() == NULL && giving_record_ != NULL) delete giving_record_;
  giving_record_ = NULL;
}
inline const ::proto::GivingRecord& GivingRecordChangeNotify::giving_record() const {
  const ::proto::GivingRecord* p = giving_record_;
  // @@protoc_insertion_point(field_get:proto.GivingRecordChangeNotify.giving_record)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::GivingRecord*>(
      &::proto::_GivingRecord_default_instance_);
}
inline ::proto::GivingRecord* GivingRecordChangeNotify::mutable_giving_record() {
  
  if (giving_record_ == NULL) {
    giving_record_ = new ::proto::GivingRecord;
  }
  // @@protoc_insertion_point(field_mutable:proto.GivingRecordChangeNotify.giving_record)
  return giving_record_;
}
inline ::proto::GivingRecord* GivingRecordChangeNotify::release_giving_record() {
  // @@protoc_insertion_point(field_release:proto.GivingRecordChangeNotify.giving_record)
  
  ::proto::GivingRecord* temp = giving_record_;
  giving_record_ = NULL;
  return temp;
}
inline void GivingRecordChangeNotify::set_allocated_giving_record(::proto::GivingRecord* giving_record) {
  delete giving_record_;
  giving_record_ = giving_record;
  if (giving_record) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GivingRecordChangeNotify.giving_record)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ItemGivingReq

// map<uint64, uint32> item_guid_count_map = 15;
inline int ItemGivingReq::item_guid_count_map_size() const {
  return item_guid_count_map_.size();
}
inline void ItemGivingReq::clear_item_guid_count_map() {
  item_guid_count_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >&
ItemGivingReq::item_guid_count_map() const {
  // @@protoc_insertion_point(field_map:proto.ItemGivingReq.item_guid_count_map)
  return item_guid_count_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >*
ItemGivingReq::mutable_item_guid_count_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.ItemGivingReq.item_guid_count_map)
  return item_guid_count_map_.MutableMap();
}

// uint32 giving_id = 13;
inline void ItemGivingReq::clear_giving_id() {
  giving_id_ = 0u;
}
inline ::google::protobuf::uint32 ItemGivingReq::giving_id() const {
  // @@protoc_insertion_point(field_get:proto.ItemGivingReq.giving_id)
  return giving_id_;
}
inline void ItemGivingReq::set_giving_id(::google::protobuf::uint32 value) {
  
  giving_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemGivingReq.giving_id)
}

// repeated .proto.ItemParam item_param_list = 4;
inline int ItemGivingReq::item_param_list_size() const {
  return item_param_list_.size();
}
inline void ItemGivingReq::clear_item_param_list() {
  item_param_list_.Clear();
}
inline const ::proto::ItemParam& ItemGivingReq::item_param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ItemGivingReq.item_param_list)
  return item_param_list_.Get(index);
}
inline ::proto::ItemParam* ItemGivingReq::mutable_item_param_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ItemGivingReq.item_param_list)
  return item_param_list_.Mutable(index);
}
inline ::proto::ItemParam* ItemGivingReq::add_item_param_list() {
  // @@protoc_insertion_point(field_add:proto.ItemGivingReq.item_param_list)
  return item_param_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
ItemGivingReq::mutable_item_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ItemGivingReq.item_param_list)
  return &item_param_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
ItemGivingReq::item_param_list() const {
  // @@protoc_insertion_point(field_list:proto.ItemGivingReq.item_param_list)
  return item_param_list_;
}

// .proto.ItemGivingReq.ItemGivingType item_giving_type = 2;
inline void ItemGivingReq::clear_item_giving_type() {
  item_giving_type_ = 0;
}
inline ::proto::ItemGivingReq_ItemGivingType ItemGivingReq::item_giving_type() const {
  // @@protoc_insertion_point(field_get:proto.ItemGivingReq.item_giving_type)
  return static_cast< ::proto::ItemGivingReq_ItemGivingType >(item_giving_type_);
}
inline void ItemGivingReq::set_item_giving_type(::proto::ItemGivingReq_ItemGivingType value) {
  
  item_giving_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemGivingReq.item_giving_type)
}

// -------------------------------------------------------------------

// ItemGivingRsp

// uint32 giving_group_id = 1;
inline void ItemGivingRsp::clear_giving_group_id() {
  giving_group_id_ = 0u;
}
inline ::google::protobuf::uint32 ItemGivingRsp::giving_group_id() const {
  // @@protoc_insertion_point(field_get:proto.ItemGivingRsp.giving_group_id)
  return giving_group_id_;
}
inline void ItemGivingRsp::set_giving_group_id(::google::protobuf::uint32 value) {
  
  giving_group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemGivingRsp.giving_group_id)
}

// uint32 giving_id = 13;
inline void ItemGivingRsp::clear_giving_id() {
  giving_id_ = 0u;
}
inline ::google::protobuf::uint32 ItemGivingRsp::giving_id() const {
  // @@protoc_insertion_point(field_get:proto.ItemGivingRsp.giving_id)
  return giving_id_;
}
inline void ItemGivingRsp::set_giving_id(::google::protobuf::uint32 value) {
  
  giving_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemGivingRsp.giving_id)
}

// int32 retcode = 3;
inline void ItemGivingRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ItemGivingRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ItemGivingRsp.retcode)
  return retcode_;
}
inline void ItemGivingRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemGivingRsp.retcode)
}

// -------------------------------------------------------------------

// PlayerCookArgsReq

// uint32 assist_avatar = 10;
inline void PlayerCookArgsReq::clear_assist_avatar() {
  assist_avatar_ = 0u;
}
inline ::google::protobuf::uint32 PlayerCookArgsReq::assist_avatar() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookArgsReq.assist_avatar)
  return assist_avatar_;
}
inline void PlayerCookArgsReq::set_assist_avatar(::google::protobuf::uint32 value) {
  
  assist_avatar_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookArgsReq.assist_avatar)
}

// uint32 recipe_id = 11;
inline void PlayerCookArgsReq::clear_recipe_id() {
  recipe_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerCookArgsReq::recipe_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookArgsReq.recipe_id)
  return recipe_id_;
}
inline void PlayerCookArgsReq::set_recipe_id(::google::protobuf::uint32 value) {
  
  recipe_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookArgsReq.recipe_id)
}

// -------------------------------------------------------------------

// PlayerCookArgsRsp

// int32 retcode = 4;
inline void PlayerCookArgsRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PlayerCookArgsRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookArgsRsp.retcode)
  return retcode_;
}
inline void PlayerCookArgsRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookArgsRsp.retcode)
}

// float qte_range_ratio = 12;
inline void PlayerCookArgsRsp::clear_qte_range_ratio() {
  qte_range_ratio_ = 0;
}
inline float PlayerCookArgsRsp::qte_range_ratio() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookArgsRsp.qte_range_ratio)
  return qte_range_ratio_;
}
inline void PlayerCookArgsRsp::set_qte_range_ratio(float value) {
  
  qte_range_ratio_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookArgsRsp.qte_range_ratio)
}

// -------------------------------------------------------------------

// PlayerLuaShellNotify

// .proto.LuaShellType shell_type = 7;
inline void PlayerLuaShellNotify::clear_shell_type() {
  shell_type_ = 0;
}
inline ::proto::LuaShellType PlayerLuaShellNotify::shell_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLuaShellNotify.shell_type)
  return static_cast< ::proto::LuaShellType >(shell_type_);
}
inline void PlayerLuaShellNotify::set_shell_type(::proto::LuaShellType value) {
  
  shell_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLuaShellNotify.shell_type)
}

// uint32 id = 5;
inline void PlayerLuaShellNotify::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLuaShellNotify::id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLuaShellNotify.id)
  return id_;
}
inline void PlayerLuaShellNotify::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLuaShellNotify.id)
}

// bytes lua_shell = 12;
inline void PlayerLuaShellNotify::clear_lua_shell() {
  lua_shell_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLuaShellNotify::lua_shell() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLuaShellNotify.lua_shell)
  return lua_shell_.GetNoArena();
}
inline void PlayerLuaShellNotify::set_lua_shell(const ::std::string& value) {
  
  lua_shell_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLuaShellNotify.lua_shell)
}
#if LANG_CXX11
inline void PlayerLuaShellNotify::set_lua_shell(::std::string&& value) {
  
  lua_shell_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLuaShellNotify.lua_shell)
}
#endif
inline void PlayerLuaShellNotify::set_lua_shell(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lua_shell_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLuaShellNotify.lua_shell)
}
inline void PlayerLuaShellNotify::set_lua_shell(const void* value, size_t size) {
  
  lua_shell_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLuaShellNotify.lua_shell)
}
inline ::std::string* PlayerLuaShellNotify::mutable_lua_shell() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLuaShellNotify.lua_shell)
  return lua_shell_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLuaShellNotify::release_lua_shell() {
  // @@protoc_insertion_point(field_release:proto.PlayerLuaShellNotify.lua_shell)
  
  return lua_shell_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLuaShellNotify::set_allocated_lua_shell(::std::string* lua_shell) {
  if (lua_shell != NULL) {
    
  } else {
    
  }
  lua_shell_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lua_shell);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLuaShellNotify.lua_shell)
}

// uint32 use_type = 10;
inline void PlayerLuaShellNotify::clear_use_type() {
  use_type_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLuaShellNotify::use_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLuaShellNotify.use_type)
  return use_type_;
}
inline void PlayerLuaShellNotify::set_use_type(::google::protobuf::uint32 value) {
  
  use_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLuaShellNotify.use_type)
}

// -------------------------------------------------------------------

// ServerDisconnectClientNotify

// uint32 data = 10;
inline void ServerDisconnectClientNotify::clear_data() {
  data_ = 0u;
}
inline ::google::protobuf::uint32 ServerDisconnectClientNotify::data() const {
  // @@protoc_insertion_point(field_get:proto.ServerDisconnectClientNotify.data)
  return data_;
}
inline void ServerDisconnectClientNotify::set_data(::google::protobuf::uint32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerDisconnectClientNotify.data)
}

// -------------------------------------------------------------------

// AntiAddictNotify

// int32 msg_type = 6;
inline void AntiAddictNotify::clear_msg_type() {
  msg_type_ = 0;
}
inline ::google::protobuf::int32 AntiAddictNotify::msg_type() const {
  // @@protoc_insertion_point(field_get:proto.AntiAddictNotify.msg_type)
  return msg_type_;
}
inline void AntiAddictNotify::set_msg_type(::google::protobuf::int32 value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AntiAddictNotify.msg_type)
}

// string msg = 3;
inline void AntiAddictNotify::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AntiAddictNotify::msg() const {
  // @@protoc_insertion_point(field_get:proto.AntiAddictNotify.msg)
  return msg_.GetNoArena();
}
inline void AntiAddictNotify::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AntiAddictNotify.msg)
}
#if LANG_CXX11
inline void AntiAddictNotify::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AntiAddictNotify.msg)
}
#endif
inline void AntiAddictNotify::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AntiAddictNotify.msg)
}
inline void AntiAddictNotify::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AntiAddictNotify.msg)
}
inline ::std::string* AntiAddictNotify::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:proto.AntiAddictNotify.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AntiAddictNotify::release_msg() {
  // @@protoc_insertion_point(field_release:proto.AntiAddictNotify.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AntiAddictNotify::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:proto.AntiAddictNotify.msg)
}

// string level = 5;
inline void AntiAddictNotify::clear_level() {
  level_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AntiAddictNotify::level() const {
  // @@protoc_insertion_point(field_get:proto.AntiAddictNotify.level)
  return level_.GetNoArena();
}
inline void AntiAddictNotify::set_level(const ::std::string& value) {
  
  level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AntiAddictNotify.level)
}
#if LANG_CXX11
inline void AntiAddictNotify::set_level(::std::string&& value) {
  
  level_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AntiAddictNotify.level)
}
#endif
inline void AntiAddictNotify::set_level(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AntiAddictNotify.level)
}
inline void AntiAddictNotify::set_level(const char* value, size_t size) {
  
  level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AntiAddictNotify.level)
}
inline ::std::string* AntiAddictNotify::mutable_level() {
  
  // @@protoc_insertion_point(field_mutable:proto.AntiAddictNotify.level)
  return level_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AntiAddictNotify::release_level() {
  // @@protoc_insertion_point(field_release:proto.AntiAddictNotify.level)
  
  return level_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AntiAddictNotify::set_allocated_level(::std::string* level) {
  if (level != NULL) {
    
  } else {
    
  }
  level_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), level);
  // @@protoc_insertion_point(field_set_allocated:proto.AntiAddictNotify.level)
}

// -------------------------------------------------------------------

// PlayerForceExitReq

// -------------------------------------------------------------------

// PlayerForceExitRsp

// int32 retcode = 15;
inline void PlayerForceExitRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PlayerForceExitRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerForceExitRsp.retcode)
  return retcode_;
}
inline void PlayerForceExitRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerForceExitRsp.retcode)
}

// -------------------------------------------------------------------

// PlayerInjectFixNotify

// uint32 id = 13;
inline void PlayerInjectFixNotify::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerInjectFixNotify::id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerInjectFixNotify.id)
  return id_;
}
inline void PlayerInjectFixNotify::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerInjectFixNotify.id)
}

// bytes inject_fix = 10;
inline void PlayerInjectFixNotify::clear_inject_fix() {
  inject_fix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerInjectFixNotify::inject_fix() const {
  // @@protoc_insertion_point(field_get:proto.PlayerInjectFixNotify.inject_fix)
  return inject_fix_.GetNoArena();
}
inline void PlayerInjectFixNotify::set_inject_fix(const ::std::string& value) {
  
  inject_fix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerInjectFixNotify.inject_fix)
}
#if LANG_CXX11
inline void PlayerInjectFixNotify::set_inject_fix(::std::string&& value) {
  
  inject_fix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerInjectFixNotify.inject_fix)
}
#endif
inline void PlayerInjectFixNotify::set_inject_fix(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  inject_fix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerInjectFixNotify.inject_fix)
}
inline void PlayerInjectFixNotify::set_inject_fix(const void* value, size_t size) {
  
  inject_fix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerInjectFixNotify.inject_fix)
}
inline ::std::string* PlayerInjectFixNotify::mutable_inject_fix() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerInjectFixNotify.inject_fix)
  return inject_fix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerInjectFixNotify::release_inject_fix() {
  // @@protoc_insertion_point(field_release:proto.PlayerInjectFixNotify.inject_fix)
  
  return inject_fix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerInjectFixNotify::set_allocated_inject_fix(::std::string* inject_fix) {
  if (inject_fix != NULL) {
    
  } else {
    
  }
  inject_fix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inject_fix);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerInjectFixNotify.inject_fix)
}

// -------------------------------------------------------------------

// TaskVar

// uint32 key = 8;
inline void TaskVar::clear_key() {
  key_ = 0u;
}
inline ::google::protobuf::uint32 TaskVar::key() const {
  // @@protoc_insertion_point(field_get:proto.TaskVar.key)
  return key_;
}
inline void TaskVar::set_key(::google::protobuf::uint32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto.TaskVar.key)
}

// repeated int32 value_list = 6;
inline int TaskVar::value_list_size() const {
  return value_list_.size();
}
inline void TaskVar::clear_value_list() {
  value_list_.Clear();
}
inline ::google::protobuf::int32 TaskVar::value_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TaskVar.value_list)
  return value_list_.Get(index);
}
inline void TaskVar::set_value_list(int index, ::google::protobuf::int32 value) {
  value_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.TaskVar.value_list)
}
inline void TaskVar::add_value_list(::google::protobuf::int32 value) {
  value_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.TaskVar.value_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TaskVar::value_list() const {
  // @@protoc_insertion_point(field_list:proto.TaskVar.value_list)
  return value_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TaskVar::mutable_value_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TaskVar.value_list)
  return &value_list_;
}

// -------------------------------------------------------------------

// TaskVarNotify

// repeated .proto.TaskVar task_var_list = 7;
inline int TaskVarNotify::task_var_list_size() const {
  return task_var_list_.size();
}
inline void TaskVarNotify::clear_task_var_list() {
  task_var_list_.Clear();
}
inline const ::proto::TaskVar& TaskVarNotify::task_var_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TaskVarNotify.task_var_list)
  return task_var_list_.Get(index);
}
inline ::proto::TaskVar* TaskVarNotify::mutable_task_var_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TaskVarNotify.task_var_list)
  return task_var_list_.Mutable(index);
}
inline ::proto::TaskVar* TaskVarNotify::add_task_var_list() {
  // @@protoc_insertion_point(field_add:proto.TaskVarNotify.task_var_list)
  return task_var_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::TaskVar >*
TaskVarNotify::mutable_task_var_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TaskVarNotify.task_var_list)
  return &task_var_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::TaskVar >&
TaskVarNotify::task_var_list() const {
  // @@protoc_insertion_point(field_list:proto.TaskVarNotify.task_var_list)
  return task_var_list_;
}

// -------------------------------------------------------------------

// ClientLockGameTimeNotify

// bool is_lock = 5;
inline void ClientLockGameTimeNotify::clear_is_lock() {
  is_lock_ = false;
}
inline bool ClientLockGameTimeNotify::is_lock() const {
  // @@protoc_insertion_point(field_get:proto.ClientLockGameTimeNotify.is_lock)
  return is_lock_;
}
inline void ClientLockGameTimeNotify::set_is_lock(bool value) {
  
  is_lock_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientLockGameTimeNotify.is_lock)
}

// -------------------------------------------------------------------

// GetNextResourceInfoReq

// -------------------------------------------------------------------

// GetNextResourceInfoRsp

// string next_resource_url = 14;
inline void GetNextResourceInfoRsp::clear_next_resource_url() {
  next_resource_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetNextResourceInfoRsp::next_resource_url() const {
  // @@protoc_insertion_point(field_get:proto.GetNextResourceInfoRsp.next_resource_url)
  return next_resource_url_.GetNoArena();
}
inline void GetNextResourceInfoRsp::set_next_resource_url(const ::std::string& value) {
  
  next_resource_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetNextResourceInfoRsp.next_resource_url)
}
#if LANG_CXX11
inline void GetNextResourceInfoRsp::set_next_resource_url(::std::string&& value) {
  
  next_resource_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetNextResourceInfoRsp.next_resource_url)
}
#endif
inline void GetNextResourceInfoRsp::set_next_resource_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_resource_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetNextResourceInfoRsp.next_resource_url)
}
inline void GetNextResourceInfoRsp::set_next_resource_url(const char* value, size_t size) {
  
  next_resource_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetNextResourceInfoRsp.next_resource_url)
}
inline ::std::string* GetNextResourceInfoRsp::mutable_next_resource_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetNextResourceInfoRsp.next_resource_url)
  return next_resource_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetNextResourceInfoRsp::release_next_resource_url() {
  // @@protoc_insertion_point(field_release:proto.GetNextResourceInfoRsp.next_resource_url)
  
  return next_resource_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNextResourceInfoRsp::set_allocated_next_resource_url(::std::string* next_resource_url) {
  if (next_resource_url != NULL) {
    
  } else {
    
  }
  next_resource_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_resource_url);
  // @@protoc_insertion_point(field_set_allocated:proto.GetNextResourceInfoRsp.next_resource_url)
}

// .proto.ResVersionConfig next_res_version_config = 2;
inline bool GetNextResourceInfoRsp::has_next_res_version_config() const {
  return this != internal_default_instance() && next_res_version_config_ != NULL;
}
inline void GetNextResourceInfoRsp::clear_next_res_version_config() {
  if (GetArenaNoVirtual() == NULL && next_res_version_config_ != NULL) delete next_res_version_config_;
  next_res_version_config_ = NULL;
}
inline const ::proto::ResVersionConfig& GetNextResourceInfoRsp::next_res_version_config() const {
  const ::proto::ResVersionConfig* p = next_res_version_config_;
  // @@protoc_insertion_point(field_get:proto.GetNextResourceInfoRsp.next_res_version_config)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ResVersionConfig*>(
      &::proto::_ResVersionConfig_default_instance_);
}
inline ::proto::ResVersionConfig* GetNextResourceInfoRsp::mutable_next_res_version_config() {
  
  if (next_res_version_config_ == NULL) {
    next_res_version_config_ = new ::proto::ResVersionConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetNextResourceInfoRsp.next_res_version_config)
  return next_res_version_config_;
}
inline ::proto::ResVersionConfig* GetNextResourceInfoRsp::release_next_res_version_config() {
  // @@protoc_insertion_point(field_release:proto.GetNextResourceInfoRsp.next_res_version_config)
  
  ::proto::ResVersionConfig* temp = next_res_version_config_;
  next_res_version_config_ = NULL;
  return temp;
}
inline void GetNextResourceInfoRsp::set_allocated_next_res_version_config(::proto::ResVersionConfig* next_res_version_config) {
  delete next_res_version_config_;
  next_res_version_config_ = next_res_version_config;
  if (next_res_version_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetNextResourceInfoRsp.next_res_version_config)
}

// int32 retcode = 12;
inline void GetNextResourceInfoRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetNextResourceInfoRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetNextResourceInfoRsp.retcode)
  return retcode_;
}
inline void GetNextResourceInfoRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetNextResourceInfoRsp.retcode)
}

// -------------------------------------------------------------------

// AdjustWorldLevelReq

// uint32 expect_world_level = 8;
inline void AdjustWorldLevelReq::clear_expect_world_level() {
  expect_world_level_ = 0u;
}
inline ::google::protobuf::uint32 AdjustWorldLevelReq::expect_world_level() const {
  // @@protoc_insertion_point(field_get:proto.AdjustWorldLevelReq.expect_world_level)
  return expect_world_level_;
}
inline void AdjustWorldLevelReq::set_expect_world_level(::google::protobuf::uint32 value) {
  
  expect_world_level_ = value;
  // @@protoc_insertion_point(field_set:proto.AdjustWorldLevelReq.expect_world_level)
}

// uint32 cur_world_level = 9;
inline void AdjustWorldLevelReq::clear_cur_world_level() {
  cur_world_level_ = 0u;
}
inline ::google::protobuf::uint32 AdjustWorldLevelReq::cur_world_level() const {
  // @@protoc_insertion_point(field_get:proto.AdjustWorldLevelReq.cur_world_level)
  return cur_world_level_;
}
inline void AdjustWorldLevelReq::set_cur_world_level(::google::protobuf::uint32 value) {
  
  cur_world_level_ = value;
  // @@protoc_insertion_point(field_set:proto.AdjustWorldLevelReq.cur_world_level)
}

// -------------------------------------------------------------------

// AdjustWorldLevelRsp

// int32 retcode = 13;
inline void AdjustWorldLevelRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 AdjustWorldLevelRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AdjustWorldLevelRsp.retcode)
  return retcode_;
}
inline void AdjustWorldLevelRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AdjustWorldLevelRsp.retcode)
}

// uint32 cd_over_time = 15;
inline void AdjustWorldLevelRsp::clear_cd_over_time() {
  cd_over_time_ = 0u;
}
inline ::google::protobuf::uint32 AdjustWorldLevelRsp::cd_over_time() const {
  // @@protoc_insertion_point(field_get:proto.AdjustWorldLevelRsp.cd_over_time)
  return cd_over_time_;
}
inline void AdjustWorldLevelRsp::set_cd_over_time(::google::protobuf::uint32 value) {
  
  cd_over_time_ = value;
  // @@protoc_insertion_point(field_set:proto.AdjustWorldLevelRsp.cd_over_time)
}

// uint32 after_world_level = 14;
inline void AdjustWorldLevelRsp::clear_after_world_level() {
  after_world_level_ = 0u;
}
inline ::google::protobuf::uint32 AdjustWorldLevelRsp::after_world_level() const {
  // @@protoc_insertion_point(field_get:proto.AdjustWorldLevelRsp.after_world_level)
  return after_world_level_;
}
inline void AdjustWorldLevelRsp::set_after_world_level(::google::protobuf::uint32 value) {
  
  after_world_level_ = value;
  // @@protoc_insertion_point(field_set:proto.AdjustWorldLevelRsp.after_world_level)
}

// -------------------------------------------------------------------

// DailyTaskFilterCityReq

// uint32 city_id = 8;
inline void DailyTaskFilterCityReq::clear_city_id() {
  city_id_ = 0u;
}
inline ::google::protobuf::uint32 DailyTaskFilterCityReq::city_id() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskFilterCityReq.city_id)
  return city_id_;
}
inline void DailyTaskFilterCityReq::set_city_id(::google::protobuf::uint32 value) {
  
  city_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskFilterCityReq.city_id)
}

// -------------------------------------------------------------------

// DailyTaskFilterCityRsp

// int32 retcode = 5;
inline void DailyTaskFilterCityRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 DailyTaskFilterCityRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskFilterCityRsp.retcode)
  return retcode_;
}
inline void DailyTaskFilterCityRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskFilterCityRsp.retcode)
}

// uint32 city_id = 9;
inline void DailyTaskFilterCityRsp::clear_city_id() {
  city_id_ = 0u;
}
inline ::google::protobuf::uint32 DailyTaskFilterCityRsp::city_id() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskFilterCityRsp.city_id)
  return city_id_;
}
inline void DailyTaskFilterCityRsp::set_city_id(::google::protobuf::uint32 value) {
  
  city_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskFilterCityRsp.city_id)
}

// -------------------------------------------------------------------

// DailyTaskUnlockedCitiesNotify

// repeated uint32 unlocked_city_list = 12;
inline int DailyTaskUnlockedCitiesNotify::unlocked_city_list_size() const {
  return unlocked_city_list_.size();
}
inline void DailyTaskUnlockedCitiesNotify::clear_unlocked_city_list() {
  unlocked_city_list_.Clear();
}
inline ::google::protobuf::uint32 DailyTaskUnlockedCitiesNotify::unlocked_city_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskUnlockedCitiesNotify.unlocked_city_list)
  return unlocked_city_list_.Get(index);
}
inline void DailyTaskUnlockedCitiesNotify::set_unlocked_city_list(int index, ::google::protobuf::uint32 value) {
  unlocked_city_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.DailyTaskUnlockedCitiesNotify.unlocked_city_list)
}
inline void DailyTaskUnlockedCitiesNotify::add_unlocked_city_list(::google::protobuf::uint32 value) {
  unlocked_city_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.DailyTaskUnlockedCitiesNotify.unlocked_city_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DailyTaskUnlockedCitiesNotify::unlocked_city_list() const {
  // @@protoc_insertion_point(field_list:proto.DailyTaskUnlockedCitiesNotify.unlocked_city_list)
  return unlocked_city_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DailyTaskUnlockedCitiesNotify::mutable_unlocked_city_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.DailyTaskUnlockedCitiesNotify.unlocked_city_list)
  return &unlocked_city_list_;
}

// -------------------------------------------------------------------

// ExclusiveRuleInfo

// repeated uint32 object_id_list = 1;
inline int ExclusiveRuleInfo::object_id_list_size() const {
  return object_id_list_.size();
}
inline void ExclusiveRuleInfo::clear_object_id_list() {
  object_id_list_.Clear();
}
inline ::google::protobuf::uint32 ExclusiveRuleInfo::object_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ExclusiveRuleInfo.object_id_list)
  return object_id_list_.Get(index);
}
inline void ExclusiveRuleInfo::set_object_id_list(int index, ::google::protobuf::uint32 value) {
  object_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ExclusiveRuleInfo.object_id_list)
}
inline void ExclusiveRuleInfo::add_object_id_list(::google::protobuf::uint32 value) {
  object_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ExclusiveRuleInfo.object_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ExclusiveRuleInfo::object_id_list() const {
  // @@protoc_insertion_point(field_list:proto.ExclusiveRuleInfo.object_id_list)
  return object_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ExclusiveRuleInfo::mutable_object_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ExclusiveRuleInfo.object_id_list)
  return &object_id_list_;
}

// uint32 rule_type = 10;
inline void ExclusiveRuleInfo::clear_rule_type() {
  rule_type_ = 0u;
}
inline ::google::protobuf::uint32 ExclusiveRuleInfo::rule_type() const {
  // @@protoc_insertion_point(field_get:proto.ExclusiveRuleInfo.rule_type)
  return rule_type_;
}
inline void ExclusiveRuleInfo::set_rule_type(::google::protobuf::uint32 value) {
  
  rule_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ExclusiveRuleInfo.rule_type)
}

// -------------------------------------------------------------------

// ExclusiveRuleNotify

// repeated .proto.ExclusiveRuleInfo rule_info_list = 5;
inline int ExclusiveRuleNotify::rule_info_list_size() const {
  return rule_info_list_.size();
}
inline void ExclusiveRuleNotify::clear_rule_info_list() {
  rule_info_list_.Clear();
}
inline const ::proto::ExclusiveRuleInfo& ExclusiveRuleNotify::rule_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ExclusiveRuleNotify.rule_info_list)
  return rule_info_list_.Get(index);
}
inline ::proto::ExclusiveRuleInfo* ExclusiveRuleNotify::mutable_rule_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ExclusiveRuleNotify.rule_info_list)
  return rule_info_list_.Mutable(index);
}
inline ::proto::ExclusiveRuleInfo* ExclusiveRuleNotify::add_rule_info_list() {
  // @@protoc_insertion_point(field_add:proto.ExclusiveRuleNotify.rule_info_list)
  return rule_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ExclusiveRuleInfo >*
ExclusiveRuleNotify::mutable_rule_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ExclusiveRuleNotify.rule_info_list)
  return &rule_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ExclusiveRuleInfo >&
ExclusiveRuleNotify::rule_info_list() const {
  // @@protoc_insertion_point(field_list:proto.ExclusiveRuleNotify.rule_info_list)
  return rule_info_list_;
}

// -------------------------------------------------------------------

// CompoundUnlockNotify

// uint32 compound_id = 3;
inline void CompoundUnlockNotify::clear_compound_id() {
  compound_id_ = 0u;
}
inline ::google::protobuf::uint32 CompoundUnlockNotify::compound_id() const {
  // @@protoc_insertion_point(field_get:proto.CompoundUnlockNotify.compound_id)
  return compound_id_;
}
inline void CompoundUnlockNotify::set_compound_id(::google::protobuf::uint32 value) {
  
  compound_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CompoundUnlockNotify.compound_id)
}

// -------------------------------------------------------------------

// GameplayRecommendationSkillRequest

// uint32 skill_depot_id = 1;
inline void GameplayRecommendationSkillRequest::clear_skill_depot_id() {
  skill_depot_id_ = 0u;
}
inline ::google::protobuf::uint32 GameplayRecommendationSkillRequest::skill_depot_id() const {
  // @@protoc_insertion_point(field_get:proto.GameplayRecommendationSkillRequest.skill_depot_id)
  return skill_depot_id_;
}
inline void GameplayRecommendationSkillRequest::set_skill_depot_id(::google::protobuf::uint32 value) {
  
  skill_depot_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GameplayRecommendationSkillRequest.skill_depot_id)
}

// -------------------------------------------------------------------

// GameplayRecommendationReliquaryRequest

// uint32 equip_type = 6;
inline void GameplayRecommendationReliquaryRequest::clear_equip_type() {
  equip_type_ = 0u;
}
inline ::google::protobuf::uint32 GameplayRecommendationReliquaryRequest::equip_type() const {
  // @@protoc_insertion_point(field_get:proto.GameplayRecommendationReliquaryRequest.equip_type)
  return equip_type_;
}
inline void GameplayRecommendationReliquaryRequest::set_equip_type(::google::protobuf::uint32 value) {
  
  equip_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GameplayRecommendationReliquaryRequest.equip_type)
}

// -------------------------------------------------------------------

// GameplayRecommendationElementReliquaryRequest

// uint32 equip_type = 9;
inline void GameplayRecommendationElementReliquaryRequest::clear_equip_type() {
  equip_type_ = 0u;
}
inline ::google::protobuf::uint32 GameplayRecommendationElementReliquaryRequest::equip_type() const {
  // @@protoc_insertion_point(field_get:proto.GameplayRecommendationElementReliquaryRequest.equip_type)
  return equip_type_;
}
inline void GameplayRecommendationElementReliquaryRequest::set_equip_type(::google::protobuf::uint32 value) {
  
  equip_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GameplayRecommendationElementReliquaryRequest.equip_type)
}

// uint32 element_type = 12;
inline void GameplayRecommendationElementReliquaryRequest::clear_element_type() {
  element_type_ = 0u;
}
inline ::google::protobuf::uint32 GameplayRecommendationElementReliquaryRequest::element_type() const {
  // @@protoc_insertion_point(field_get:proto.GameplayRecommendationElementReliquaryRequest.element_type)
  return element_type_;
}
inline void GameplayRecommendationElementReliquaryRequest::set_element_type(::google::protobuf::uint32 value) {
  
  element_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GameplayRecommendationElementReliquaryRequest.element_type)
}

// -------------------------------------------------------------------

// GetGameplayRecommendationReq

// uint32 avatar_id = 9;
inline void GetGameplayRecommendationReq::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 GetGameplayRecommendationReq::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.GetGameplayRecommendationReq.avatar_id)
  return avatar_id_;
}
inline void GetGameplayRecommendationReq::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetGameplayRecommendationReq.avatar_id)
}

// .proto.GameplayRecommendationSkillRequest skill_request = 553;
inline bool GetGameplayRecommendationReq::has_skill_request() const {
  return detail_case() == kSkillRequest;
}
inline void GetGameplayRecommendationReq::set_has_skill_request() {
  _oneof_case_[0] = kSkillRequest;
}
inline void GetGameplayRecommendationReq::clear_skill_request() {
  if (has_skill_request()) {
    delete detail_.skill_request_;
    clear_has_detail();
  }
}
inline  const ::proto::GameplayRecommendationSkillRequest& GetGameplayRecommendationReq::skill_request() const {
  // @@protoc_insertion_point(field_get:proto.GetGameplayRecommendationReq.skill_request)
  return has_skill_request()
      ? *detail_.skill_request_
      : ::proto::GameplayRecommendationSkillRequest::default_instance();
}
inline ::proto::GameplayRecommendationSkillRequest* GetGameplayRecommendationReq::mutable_skill_request() {
  if (!has_skill_request()) {
    clear_detail();
    set_has_skill_request();
    detail_.skill_request_ = new ::proto::GameplayRecommendationSkillRequest;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetGameplayRecommendationReq.skill_request)
  return detail_.skill_request_;
}
inline ::proto::GameplayRecommendationSkillRequest* GetGameplayRecommendationReq::release_skill_request() {
  // @@protoc_insertion_point(field_release:proto.GetGameplayRecommendationReq.skill_request)
  if (has_skill_request()) {
    clear_has_detail();
    ::proto::GameplayRecommendationSkillRequest* temp = detail_.skill_request_;
    detail_.skill_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void GetGameplayRecommendationReq::set_allocated_skill_request(::proto::GameplayRecommendationSkillRequest* skill_request) {
  clear_detail();
  if (skill_request) {
    set_has_skill_request();
    detail_.skill_request_ = skill_request;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetGameplayRecommendationReq.skill_request)
}

// .proto.GameplayRecommendationReliquaryRequest reliquary_request = 1993;
inline bool GetGameplayRecommendationReq::has_reliquary_request() const {
  return detail_case() == kReliquaryRequest;
}
inline void GetGameplayRecommendationReq::set_has_reliquary_request() {
  _oneof_case_[0] = kReliquaryRequest;
}
inline void GetGameplayRecommendationReq::clear_reliquary_request() {
  if (has_reliquary_request()) {
    delete detail_.reliquary_request_;
    clear_has_detail();
  }
}
inline  const ::proto::GameplayRecommendationReliquaryRequest& GetGameplayRecommendationReq::reliquary_request() const {
  // @@protoc_insertion_point(field_get:proto.GetGameplayRecommendationReq.reliquary_request)
  return has_reliquary_request()
      ? *detail_.reliquary_request_
      : ::proto::GameplayRecommendationReliquaryRequest::default_instance();
}
inline ::proto::GameplayRecommendationReliquaryRequest* GetGameplayRecommendationReq::mutable_reliquary_request() {
  if (!has_reliquary_request()) {
    clear_detail();
    set_has_reliquary_request();
    detail_.reliquary_request_ = new ::proto::GameplayRecommendationReliquaryRequest;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetGameplayRecommendationReq.reliquary_request)
  return detail_.reliquary_request_;
}
inline ::proto::GameplayRecommendationReliquaryRequest* GetGameplayRecommendationReq::release_reliquary_request() {
  // @@protoc_insertion_point(field_release:proto.GetGameplayRecommendationReq.reliquary_request)
  if (has_reliquary_request()) {
    clear_has_detail();
    ::proto::GameplayRecommendationReliquaryRequest* temp = detail_.reliquary_request_;
    detail_.reliquary_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void GetGameplayRecommendationReq::set_allocated_reliquary_request(::proto::GameplayRecommendationReliquaryRequest* reliquary_request) {
  clear_detail();
  if (reliquary_request) {
    set_has_reliquary_request();
    detail_.reliquary_request_ = reliquary_request;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetGameplayRecommendationReq.reliquary_request)
}

// .proto.GameplayRecommendationElementReliquaryRequest element_reliquary_request = 1489;
inline bool GetGameplayRecommendationReq::has_element_reliquary_request() const {
  return detail_case() == kElementReliquaryRequest;
}
inline void GetGameplayRecommendationReq::set_has_element_reliquary_request() {
  _oneof_case_[0] = kElementReliquaryRequest;
}
inline void GetGameplayRecommendationReq::clear_element_reliquary_request() {
  if (has_element_reliquary_request()) {
    delete detail_.element_reliquary_request_;
    clear_has_detail();
  }
}
inline  const ::proto::GameplayRecommendationElementReliquaryRequest& GetGameplayRecommendationReq::element_reliquary_request() const {
  // @@protoc_insertion_point(field_get:proto.GetGameplayRecommendationReq.element_reliquary_request)
  return has_element_reliquary_request()
      ? *detail_.element_reliquary_request_
      : ::proto::GameplayRecommendationElementReliquaryRequest::default_instance();
}
inline ::proto::GameplayRecommendationElementReliquaryRequest* GetGameplayRecommendationReq::mutable_element_reliquary_request() {
  if (!has_element_reliquary_request()) {
    clear_detail();
    set_has_element_reliquary_request();
    detail_.element_reliquary_request_ = new ::proto::GameplayRecommendationElementReliquaryRequest;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetGameplayRecommendationReq.element_reliquary_request)
  return detail_.element_reliquary_request_;
}
inline ::proto::GameplayRecommendationElementReliquaryRequest* GetGameplayRecommendationReq::release_element_reliquary_request() {
  // @@protoc_insertion_point(field_release:proto.GetGameplayRecommendationReq.element_reliquary_request)
  if (has_element_reliquary_request()) {
    clear_has_detail();
    ::proto::GameplayRecommendationElementReliquaryRequest* temp = detail_.element_reliquary_request_;
    detail_.element_reliquary_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void GetGameplayRecommendationReq::set_allocated_element_reliquary_request(::proto::GameplayRecommendationElementReliquaryRequest* element_reliquary_request) {
  clear_detail();
  if (element_reliquary_request) {
    set_has_element_reliquary_request();
    detail_.element_reliquary_request_ = element_reliquary_request;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetGameplayRecommendationReq.element_reliquary_request)
}

inline bool GetGameplayRecommendationReq::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
inline void GetGameplayRecommendationReq::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
inline GetGameplayRecommendationReq::DetailCase GetGameplayRecommendationReq::detail_case() const {
  return GetGameplayRecommendationReq::DetailCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// GameplayRecommendationSkillResponse

// uint32 skill_depot_id = 13;
inline void GameplayRecommendationSkillResponse::clear_skill_depot_id() {
  skill_depot_id_ = 0u;
}
inline ::google::protobuf::uint32 GameplayRecommendationSkillResponse::skill_depot_id() const {
  // @@protoc_insertion_point(field_get:proto.GameplayRecommendationSkillResponse.skill_depot_id)
  return skill_depot_id_;
}
inline void GameplayRecommendationSkillResponse::set_skill_depot_id(::google::protobuf::uint32 value) {
  
  skill_depot_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GameplayRecommendationSkillResponse.skill_depot_id)
}

// repeated uint32 skill_id_list = 9;
inline int GameplayRecommendationSkillResponse::skill_id_list_size() const {
  return skill_id_list_.size();
}
inline void GameplayRecommendationSkillResponse::clear_skill_id_list() {
  skill_id_list_.Clear();
}
inline ::google::protobuf::uint32 GameplayRecommendationSkillResponse::skill_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GameplayRecommendationSkillResponse.skill_id_list)
  return skill_id_list_.Get(index);
}
inline void GameplayRecommendationSkillResponse::set_skill_id_list(int index, ::google::protobuf::uint32 value) {
  skill_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GameplayRecommendationSkillResponse.skill_id_list)
}
inline void GameplayRecommendationSkillResponse::add_skill_id_list(::google::protobuf::uint32 value) {
  skill_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GameplayRecommendationSkillResponse.skill_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GameplayRecommendationSkillResponse::skill_id_list() const {
  // @@protoc_insertion_point(field_list:proto.GameplayRecommendationSkillResponse.skill_id_list)
  return skill_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GameplayRecommendationSkillResponse::mutable_skill_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GameplayRecommendationSkillResponse.skill_id_list)
  return &skill_id_list_;
}

// -------------------------------------------------------------------

// GameplayRecommendationReliquaryMainPropData

// uint32 permillage = 1;
inline void GameplayRecommendationReliquaryMainPropData::clear_permillage() {
  permillage_ = 0u;
}
inline ::google::protobuf::uint32 GameplayRecommendationReliquaryMainPropData::permillage() const {
  // @@protoc_insertion_point(field_get:proto.GameplayRecommendationReliquaryMainPropData.permillage)
  return permillage_;
}
inline void GameplayRecommendationReliquaryMainPropData::set_permillage(::google::protobuf::uint32 value) {
  
  permillage_ = value;
  // @@protoc_insertion_point(field_set:proto.GameplayRecommendationReliquaryMainPropData.permillage)
}

// uint32 main_prop_id = 12;
inline void GameplayRecommendationReliquaryMainPropData::clear_main_prop_id() {
  main_prop_id_ = 0u;
}
inline ::google::protobuf::uint32 GameplayRecommendationReliquaryMainPropData::main_prop_id() const {
  // @@protoc_insertion_point(field_get:proto.GameplayRecommendationReliquaryMainPropData.main_prop_id)
  return main_prop_id_;
}
inline void GameplayRecommendationReliquaryMainPropData::set_main_prop_id(::google::protobuf::uint32 value) {
  
  main_prop_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GameplayRecommendationReliquaryMainPropData.main_prop_id)
}

// -------------------------------------------------------------------

// GameplayRecommendationReliquaryResponse

// repeated .proto.GameplayRecommendationReliquaryMainPropData main_prop_data_list = 8;
inline int GameplayRecommendationReliquaryResponse::main_prop_data_list_size() const {
  return main_prop_data_list_.size();
}
inline void GameplayRecommendationReliquaryResponse::clear_main_prop_data_list() {
  main_prop_data_list_.Clear();
}
inline const ::proto::GameplayRecommendationReliquaryMainPropData& GameplayRecommendationReliquaryResponse::main_prop_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GameplayRecommendationReliquaryResponse.main_prop_data_list)
  return main_prop_data_list_.Get(index);
}
inline ::proto::GameplayRecommendationReliquaryMainPropData* GameplayRecommendationReliquaryResponse::mutable_main_prop_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GameplayRecommendationReliquaryResponse.main_prop_data_list)
  return main_prop_data_list_.Mutable(index);
}
inline ::proto::GameplayRecommendationReliquaryMainPropData* GameplayRecommendationReliquaryResponse::add_main_prop_data_list() {
  // @@protoc_insertion_point(field_add:proto.GameplayRecommendationReliquaryResponse.main_prop_data_list)
  return main_prop_data_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::GameplayRecommendationReliquaryMainPropData >*
GameplayRecommendationReliquaryResponse::mutable_main_prop_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GameplayRecommendationReliquaryResponse.main_prop_data_list)
  return &main_prop_data_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::GameplayRecommendationReliquaryMainPropData >&
GameplayRecommendationReliquaryResponse::main_prop_data_list() const {
  // @@protoc_insertion_point(field_list:proto.GameplayRecommendationReliquaryResponse.main_prop_data_list)
  return main_prop_data_list_;
}

// uint32 equip_type = 3;
inline void GameplayRecommendationReliquaryResponse::clear_equip_type() {
  equip_type_ = 0u;
}
inline ::google::protobuf::uint32 GameplayRecommendationReliquaryResponse::equip_type() const {
  // @@protoc_insertion_point(field_get:proto.GameplayRecommendationReliquaryResponse.equip_type)
  return equip_type_;
}
inline void GameplayRecommendationReliquaryResponse::set_equip_type(::google::protobuf::uint32 value) {
  
  equip_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GameplayRecommendationReliquaryResponse.equip_type)
}

// -------------------------------------------------------------------

// GameplayRecommendationElementReliquaryResponse

// uint32 element_type = 11;
inline void GameplayRecommendationElementReliquaryResponse::clear_element_type() {
  element_type_ = 0u;
}
inline ::google::protobuf::uint32 GameplayRecommendationElementReliquaryResponse::element_type() const {
  // @@protoc_insertion_point(field_get:proto.GameplayRecommendationElementReliquaryResponse.element_type)
  return element_type_;
}
inline void GameplayRecommendationElementReliquaryResponse::set_element_type(::google::protobuf::uint32 value) {
  
  element_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GameplayRecommendationElementReliquaryResponse.element_type)
}

// repeated .proto.GameplayRecommendationReliquaryMainPropData main_prop_data_list = 5;
inline int GameplayRecommendationElementReliquaryResponse::main_prop_data_list_size() const {
  return main_prop_data_list_.size();
}
inline void GameplayRecommendationElementReliquaryResponse::clear_main_prop_data_list() {
  main_prop_data_list_.Clear();
}
inline const ::proto::GameplayRecommendationReliquaryMainPropData& GameplayRecommendationElementReliquaryResponse::main_prop_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GameplayRecommendationElementReliquaryResponse.main_prop_data_list)
  return main_prop_data_list_.Get(index);
}
inline ::proto::GameplayRecommendationReliquaryMainPropData* GameplayRecommendationElementReliquaryResponse::mutable_main_prop_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GameplayRecommendationElementReliquaryResponse.main_prop_data_list)
  return main_prop_data_list_.Mutable(index);
}
inline ::proto::GameplayRecommendationReliquaryMainPropData* GameplayRecommendationElementReliquaryResponse::add_main_prop_data_list() {
  // @@protoc_insertion_point(field_add:proto.GameplayRecommendationElementReliquaryResponse.main_prop_data_list)
  return main_prop_data_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::GameplayRecommendationReliquaryMainPropData >*
GameplayRecommendationElementReliquaryResponse::mutable_main_prop_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GameplayRecommendationElementReliquaryResponse.main_prop_data_list)
  return &main_prop_data_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::GameplayRecommendationReliquaryMainPropData >&
GameplayRecommendationElementReliquaryResponse::main_prop_data_list() const {
  // @@protoc_insertion_point(field_list:proto.GameplayRecommendationElementReliquaryResponse.main_prop_data_list)
  return main_prop_data_list_;
}

// uint32 equip_type = 15;
inline void GameplayRecommendationElementReliquaryResponse::clear_equip_type() {
  equip_type_ = 0u;
}
inline ::google::protobuf::uint32 GameplayRecommendationElementReliquaryResponse::equip_type() const {
  // @@protoc_insertion_point(field_get:proto.GameplayRecommendationElementReliquaryResponse.equip_type)
  return equip_type_;
}
inline void GameplayRecommendationElementReliquaryResponse::set_equip_type(::google::protobuf::uint32 value) {
  
  equip_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GameplayRecommendationElementReliquaryResponse.equip_type)
}

// -------------------------------------------------------------------

// GetGameplayRecommendationRsp

// int32 retcode = 6;
inline void GetGameplayRecommendationRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetGameplayRecommendationRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetGameplayRecommendationRsp.retcode)
  return retcode_;
}
inline void GetGameplayRecommendationRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetGameplayRecommendationRsp.retcode)
}

// uint32 avatar_id = 15;
inline void GetGameplayRecommendationRsp::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 GetGameplayRecommendationRsp::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.GetGameplayRecommendationRsp.avatar_id)
  return avatar_id_;
}
inline void GetGameplayRecommendationRsp::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetGameplayRecommendationRsp.avatar_id)
}

// .proto.GameplayRecommendationSkillResponse skill_response = 1022;
inline bool GetGameplayRecommendationRsp::has_skill_response() const {
  return detail_case() == kSkillResponse;
}
inline void GetGameplayRecommendationRsp::set_has_skill_response() {
  _oneof_case_[0] = kSkillResponse;
}
inline void GetGameplayRecommendationRsp::clear_skill_response() {
  if (has_skill_response()) {
    delete detail_.skill_response_;
    clear_has_detail();
  }
}
inline  const ::proto::GameplayRecommendationSkillResponse& GetGameplayRecommendationRsp::skill_response() const {
  // @@protoc_insertion_point(field_get:proto.GetGameplayRecommendationRsp.skill_response)
  return has_skill_response()
      ? *detail_.skill_response_
      : ::proto::GameplayRecommendationSkillResponse::default_instance();
}
inline ::proto::GameplayRecommendationSkillResponse* GetGameplayRecommendationRsp::mutable_skill_response() {
  if (!has_skill_response()) {
    clear_detail();
    set_has_skill_response();
    detail_.skill_response_ = new ::proto::GameplayRecommendationSkillResponse;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetGameplayRecommendationRsp.skill_response)
  return detail_.skill_response_;
}
inline ::proto::GameplayRecommendationSkillResponse* GetGameplayRecommendationRsp::release_skill_response() {
  // @@protoc_insertion_point(field_release:proto.GetGameplayRecommendationRsp.skill_response)
  if (has_skill_response()) {
    clear_has_detail();
    ::proto::GameplayRecommendationSkillResponse* temp = detail_.skill_response_;
    detail_.skill_response_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void GetGameplayRecommendationRsp::set_allocated_skill_response(::proto::GameplayRecommendationSkillResponse* skill_response) {
  clear_detail();
  if (skill_response) {
    set_has_skill_response();
    detail_.skill_response_ = skill_response;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetGameplayRecommendationRsp.skill_response)
}

// .proto.GameplayRecommendationReliquaryResponse reliquary_response = 196;
inline bool GetGameplayRecommendationRsp::has_reliquary_response() const {
  return detail_case() == kReliquaryResponse;
}
inline void GetGameplayRecommendationRsp::set_has_reliquary_response() {
  _oneof_case_[0] = kReliquaryResponse;
}
inline void GetGameplayRecommendationRsp::clear_reliquary_response() {
  if (has_reliquary_response()) {
    delete detail_.reliquary_response_;
    clear_has_detail();
  }
}
inline  const ::proto::GameplayRecommendationReliquaryResponse& GetGameplayRecommendationRsp::reliquary_response() const {
  // @@protoc_insertion_point(field_get:proto.GetGameplayRecommendationRsp.reliquary_response)
  return has_reliquary_response()
      ? *detail_.reliquary_response_
      : ::proto::GameplayRecommendationReliquaryResponse::default_instance();
}
inline ::proto::GameplayRecommendationReliquaryResponse* GetGameplayRecommendationRsp::mutable_reliquary_response() {
  if (!has_reliquary_response()) {
    clear_detail();
    set_has_reliquary_response();
    detail_.reliquary_response_ = new ::proto::GameplayRecommendationReliquaryResponse;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetGameplayRecommendationRsp.reliquary_response)
  return detail_.reliquary_response_;
}
inline ::proto::GameplayRecommendationReliquaryResponse* GetGameplayRecommendationRsp::release_reliquary_response() {
  // @@protoc_insertion_point(field_release:proto.GetGameplayRecommendationRsp.reliquary_response)
  if (has_reliquary_response()) {
    clear_has_detail();
    ::proto::GameplayRecommendationReliquaryResponse* temp = detail_.reliquary_response_;
    detail_.reliquary_response_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void GetGameplayRecommendationRsp::set_allocated_reliquary_response(::proto::GameplayRecommendationReliquaryResponse* reliquary_response) {
  clear_detail();
  if (reliquary_response) {
    set_has_reliquary_response();
    detail_.reliquary_response_ = reliquary_response;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetGameplayRecommendationRsp.reliquary_response)
}

// .proto.GameplayRecommendationElementReliquaryResponse element_reliquary_response = 167;
inline bool GetGameplayRecommendationRsp::has_element_reliquary_response() const {
  return detail_case() == kElementReliquaryResponse;
}
inline void GetGameplayRecommendationRsp::set_has_element_reliquary_response() {
  _oneof_case_[0] = kElementReliquaryResponse;
}
inline void GetGameplayRecommendationRsp::clear_element_reliquary_response() {
  if (has_element_reliquary_response()) {
    delete detail_.element_reliquary_response_;
    clear_has_detail();
  }
}
inline  const ::proto::GameplayRecommendationElementReliquaryResponse& GetGameplayRecommendationRsp::element_reliquary_response() const {
  // @@protoc_insertion_point(field_get:proto.GetGameplayRecommendationRsp.element_reliquary_response)
  return has_element_reliquary_response()
      ? *detail_.element_reliquary_response_
      : ::proto::GameplayRecommendationElementReliquaryResponse::default_instance();
}
inline ::proto::GameplayRecommendationElementReliquaryResponse* GetGameplayRecommendationRsp::mutable_element_reliquary_response() {
  if (!has_element_reliquary_response()) {
    clear_detail();
    set_has_element_reliquary_response();
    detail_.element_reliquary_response_ = new ::proto::GameplayRecommendationElementReliquaryResponse;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetGameplayRecommendationRsp.element_reliquary_response)
  return detail_.element_reliquary_response_;
}
inline ::proto::GameplayRecommendationElementReliquaryResponse* GetGameplayRecommendationRsp::release_element_reliquary_response() {
  // @@protoc_insertion_point(field_release:proto.GetGameplayRecommendationRsp.element_reliquary_response)
  if (has_element_reliquary_response()) {
    clear_has_detail();
    ::proto::GameplayRecommendationElementReliquaryResponse* temp = detail_.element_reliquary_response_;
    detail_.element_reliquary_response_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void GetGameplayRecommendationRsp::set_allocated_element_reliquary_response(::proto::GameplayRecommendationElementReliquaryResponse* element_reliquary_response) {
  clear_detail();
  if (element_reliquary_response) {
    set_has_element_reliquary_response();
    detail_.element_reliquary_response_ = element_reliquary_response;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetGameplayRecommendationRsp.element_reliquary_response)
}

inline bool GetGameplayRecommendationRsp::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
inline void GetGameplayRecommendationRsp::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
inline GetGameplayRecommendationRsp::DetailCase GetGameplayRecommendationRsp::detail_case() const {
  return GetGameplayRecommendationRsp::DetailCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// TakeBackGivingItemReq

// uint32 giving_id = 4;
inline void TakeBackGivingItemReq::clear_giving_id() {
  giving_id_ = 0u;
}
inline ::google::protobuf::uint32 TakeBackGivingItemReq::giving_id() const {
  // @@protoc_insertion_point(field_get:proto.TakeBackGivingItemReq.giving_id)
  return giving_id_;
}
inline void TakeBackGivingItemReq::set_giving_id(::google::protobuf::uint32 value) {
  
  giving_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeBackGivingItemReq.giving_id)
}

// -------------------------------------------------------------------

// TakeBackGivingItemRsp

// uint32 giving_id = 10;
inline void TakeBackGivingItemRsp::clear_giving_id() {
  giving_id_ = 0u;
}
inline ::google::protobuf::uint32 TakeBackGivingItemRsp::giving_id() const {
  // @@protoc_insertion_point(field_get:proto.TakeBackGivingItemRsp.giving_id)
  return giving_id_;
}
inline void TakeBackGivingItemRsp::set_giving_id(::google::protobuf::uint32 value) {
  
  giving_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeBackGivingItemRsp.giving_id)
}

// int32 retcode = 6;
inline void TakeBackGivingItemRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 TakeBackGivingItemRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TakeBackGivingItemRsp.retcode)
  return retcode_;
}
inline void TakeBackGivingItemRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeBackGivingItemRsp.retcode)
}

// -------------------------------------------------------------------

// PlayerNicknameAuditDataNotify

// .proto.ContentAuditInfo info = 13;
inline bool PlayerNicknameAuditDataNotify::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void PlayerNicknameAuditDataNotify::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::proto::ContentAuditInfo& PlayerNicknameAuditDataNotify::info() const {
  const ::proto::ContentAuditInfo* p = info_;
  // @@protoc_insertion_point(field_get:proto.PlayerNicknameAuditDataNotify.info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ContentAuditInfo*>(
      &::proto::_ContentAuditInfo_default_instance_);
}
inline ::proto::ContentAuditInfo* PlayerNicknameAuditDataNotify::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::proto::ContentAuditInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerNicknameAuditDataNotify.info)
  return info_;
}
inline ::proto::ContentAuditInfo* PlayerNicknameAuditDataNotify::release_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerNicknameAuditDataNotify.info)
  
  ::proto::ContentAuditInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void PlayerNicknameAuditDataNotify::set_allocated_info(::proto::ContentAuditInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerNicknameAuditDataNotify.info)
}

// -------------------------------------------------------------------

// PlayerNicknameNotify

// string nickname = 7;
inline void PlayerNicknameNotify::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerNicknameNotify::nickname() const {
  // @@protoc_insertion_point(field_get:proto.PlayerNicknameNotify.nickname)
  return nickname_.GetNoArena();
}
inline void PlayerNicknameNotify::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerNicknameNotify.nickname)
}
#if LANG_CXX11
inline void PlayerNicknameNotify::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerNicknameNotify.nickname)
}
#endif
inline void PlayerNicknameNotify::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerNicknameNotify.nickname)
}
inline void PlayerNicknameNotify::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerNicknameNotify.nickname)
}
inline ::std::string* PlayerNicknameNotify::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerNicknameNotify.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerNicknameNotify::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.PlayerNicknameNotify.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerNicknameNotify::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerNicknameNotify.nickname)
}

// -------------------------------------------------------------------

// NicknameAuditConfigNotify

// bool is_open = 8;
inline void NicknameAuditConfigNotify::clear_is_open() {
  is_open_ = false;
}
inline bool NicknameAuditConfigNotify::is_open() const {
  // @@protoc_insertion_point(field_get:proto.NicknameAuditConfigNotify.is_open)
  return is_open_;
}
inline void NicknameAuditConfigNotify::set_is_open(bool value) {
  
  is_open_ = value;
  // @@protoc_insertion_point(field_set:proto.NicknameAuditConfigNotify.is_open)
}

// uint32 submit_limit = 12;
inline void NicknameAuditConfigNotify::clear_submit_limit() {
  submit_limit_ = 0u;
}
inline ::google::protobuf::uint32 NicknameAuditConfigNotify::submit_limit() const {
  // @@protoc_insertion_point(field_get:proto.NicknameAuditConfigNotify.submit_limit)
  return submit_limit_;
}
inline void NicknameAuditConfigNotify::set_submit_limit(::google::protobuf::uint32 value) {
  
  submit_limit_ = value;
  // @@protoc_insertion_point(field_set:proto.NicknameAuditConfigNotify.submit_limit)
}

// -------------------------------------------------------------------

// ReadNicknameAuditReq

// -------------------------------------------------------------------

// ReadNicknameAuditRsp

// int32 retcode = 12;
inline void ReadNicknameAuditRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ReadNicknameAuditRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ReadNicknameAuditRsp.retcode)
  return retcode_;
}
inline void ReadNicknameAuditRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ReadNicknameAuditRsp.retcode)
}

// -------------------------------------------------------------------

// PlayerCompoundMaterialBoostReq

// bool is_boost_all = 8;
inline void PlayerCompoundMaterialBoostReq::clear_is_boost_all() {
  is_boost_all_ = false;
}
inline bool PlayerCompoundMaterialBoostReq::is_boost_all() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialBoostReq.is_boost_all)
  return is_boost_all_;
}
inline void PlayerCompoundMaterialBoostReq::set_is_boost_all(bool value) {
  
  is_boost_all_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCompoundMaterialBoostReq.is_boost_all)
}

// uint32 target_compound_group_id = 14;
inline void PlayerCompoundMaterialBoostReq::clear_target_compound_group_id() {
  target_compound_group_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerCompoundMaterialBoostReq::target_compound_group_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialBoostReq.target_compound_group_id)
  return target_compound_group_id_;
}
inline void PlayerCompoundMaterialBoostReq::set_target_compound_group_id(::google::protobuf::uint32 value) {
  
  target_compound_group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCompoundMaterialBoostReq.target_compound_group_id)
}

// uint32 consume_material_id = 9;
inline void PlayerCompoundMaterialBoostReq::clear_consume_material_id() {
  consume_material_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerCompoundMaterialBoostReq::consume_material_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialBoostReq.consume_material_id)
  return consume_material_id_;
}
inline void PlayerCompoundMaterialBoostReq::set_consume_material_id(::google::protobuf::uint32 value) {
  
  consume_material_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCompoundMaterialBoostReq.consume_material_id)
}

// uint32 consume_material_count = 1;
inline void PlayerCompoundMaterialBoostReq::clear_consume_material_count() {
  consume_material_count_ = 0u;
}
inline ::google::protobuf::uint32 PlayerCompoundMaterialBoostReq::consume_material_count() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialBoostReq.consume_material_count)
  return consume_material_count_;
}
inline void PlayerCompoundMaterialBoostReq::set_consume_material_count(::google::protobuf::uint32 value) {
  
  consume_material_count_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCompoundMaterialBoostReq.consume_material_count)
}

// -------------------------------------------------------------------

// PlayerCompoundMaterialBoostRsp

// repeated .proto.ItemParam take_item_list = 2;
inline int PlayerCompoundMaterialBoostRsp::take_item_list_size() const {
  return take_item_list_.size();
}
inline void PlayerCompoundMaterialBoostRsp::clear_take_item_list() {
  take_item_list_.Clear();
}
inline const ::proto::ItemParam& PlayerCompoundMaterialBoostRsp::take_item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialBoostRsp.take_item_list)
  return take_item_list_.Get(index);
}
inline ::proto::ItemParam* PlayerCompoundMaterialBoostRsp::mutable_take_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerCompoundMaterialBoostRsp.take_item_list)
  return take_item_list_.Mutable(index);
}
inline ::proto::ItemParam* PlayerCompoundMaterialBoostRsp::add_take_item_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerCompoundMaterialBoostRsp.take_item_list)
  return take_item_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
PlayerCompoundMaterialBoostRsp::mutable_take_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerCompoundMaterialBoostRsp.take_item_list)
  return &take_item_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
PlayerCompoundMaterialBoostRsp::take_item_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerCompoundMaterialBoostRsp.take_item_list)
  return take_item_list_;
}

// .proto.CompoundBoostTakeStatusType take_status = 6;
inline void PlayerCompoundMaterialBoostRsp::clear_take_status() {
  take_status_ = 0;
}
inline ::proto::CompoundBoostTakeStatusType PlayerCompoundMaterialBoostRsp::take_status() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialBoostRsp.take_status)
  return static_cast< ::proto::CompoundBoostTakeStatusType >(take_status_);
}
inline void PlayerCompoundMaterialBoostRsp::set_take_status(::proto::CompoundBoostTakeStatusType value) {
  
  take_status_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCompoundMaterialBoostRsp.take_status)
}

// int32 retcode = 7;
inline void PlayerCompoundMaterialBoostRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PlayerCompoundMaterialBoostRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialBoostRsp.retcode)
  return retcode_;
}
inline void PlayerCompoundMaterialBoostRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCompoundMaterialBoostRsp.retcode)
}

// repeated .proto.CompoundQueueData compound_que_data_list = 1;
inline int PlayerCompoundMaterialBoostRsp::compound_que_data_list_size() const {
  return compound_que_data_list_.size();
}
inline void PlayerCompoundMaterialBoostRsp::clear_compound_que_data_list() {
  compound_que_data_list_.Clear();
}
inline const ::proto::CompoundQueueData& PlayerCompoundMaterialBoostRsp::compound_que_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialBoostRsp.compound_que_data_list)
  return compound_que_data_list_.Get(index);
}
inline ::proto::CompoundQueueData* PlayerCompoundMaterialBoostRsp::mutable_compound_que_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerCompoundMaterialBoostRsp.compound_que_data_list)
  return compound_que_data_list_.Mutable(index);
}
inline ::proto::CompoundQueueData* PlayerCompoundMaterialBoostRsp::add_compound_que_data_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerCompoundMaterialBoostRsp.compound_que_data_list)
  return compound_que_data_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >*
PlayerCompoundMaterialBoostRsp::mutable_compound_que_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerCompoundMaterialBoostRsp.compound_que_data_list)
  return &compound_que_data_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >&
PlayerCompoundMaterialBoostRsp::compound_que_data_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerCompoundMaterialBoostRsp.compound_que_data_list)
  return compound_que_data_list_;
}

// -------------------------------------------------------------------

// PlayerGameTimeByLuaNotify

// uint32 uid = 13;
inline void PlayerGameTimeByLuaNotify::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerGameTimeByLuaNotify::uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGameTimeByLuaNotify.uid)
  return uid_;
}
inline void PlayerGameTimeByLuaNotify::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGameTimeByLuaNotify.uid)
}

// uint32 sim_speed = 9;
inline void PlayerGameTimeByLuaNotify::clear_sim_speed() {
  sim_speed_ = 0u;
}
inline ::google::protobuf::uint32 PlayerGameTimeByLuaNotify::sim_speed() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGameTimeByLuaNotify.sim_speed)
  return sim_speed_;
}
inline void PlayerGameTimeByLuaNotify::set_sim_speed(::google::protobuf::uint32 value) {
  
  sim_speed_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGameTimeByLuaNotify.sim_speed)
}

// uint32 game_time = 10;
inline void PlayerGameTimeByLuaNotify::clear_game_time() {
  game_time_ = 0u;
}
inline ::google::protobuf::uint32 PlayerGameTimeByLuaNotify::game_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGameTimeByLuaNotify.game_time)
  return game_time_;
}
inline void PlayerGameTimeByLuaNotify::set_game_time(::google::protobuf::uint32 value) {
  
  game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGameTimeByLuaNotify.game_time)
}

// -------------------------------------------------------------------

// PlayerIpRegionNotify

// string ip_code = 9;
inline void PlayerIpRegionNotify::clear_ip_code() {
  ip_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerIpRegionNotify::ip_code() const {
  // @@protoc_insertion_point(field_get:proto.PlayerIpRegionNotify.ip_code)
  return ip_code_.GetNoArena();
}
inline void PlayerIpRegionNotify::set_ip_code(const ::std::string& value) {
  
  ip_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerIpRegionNotify.ip_code)
}
#if LANG_CXX11
inline void PlayerIpRegionNotify::set_ip_code(::std::string&& value) {
  
  ip_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerIpRegionNotify.ip_code)
}
#endif
inline void PlayerIpRegionNotify::set_ip_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerIpRegionNotify.ip_code)
}
inline void PlayerIpRegionNotify::set_ip_code(const char* value, size_t size) {
  
  ip_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerIpRegionNotify.ip_code)
}
inline ::std::string* PlayerIpRegionNotify::mutable_ip_code() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerIpRegionNotify.ip_code)
  return ip_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerIpRegionNotify::release_ip_code() {
  // @@protoc_insertion_point(field_release:proto.PlayerIpRegionNotify.ip_code)
  
  return ip_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerIpRegionNotify::set_allocated_ip_code(::std::string* ip_code) {
  if (ip_code != NULL) {
    
  } else {
    
  }
  ip_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_code);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerIpRegionNotify.ip_code)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::PlayerLogoutReq_Reason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerLogoutReq_Reason>() {
  return ::proto::PlayerLogoutReq_Reason_descriptor();
}
template <> struct is_proto_enum< ::proto::DataResVersionNotify_DataResVersionOpType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DataResVersionNotify_DataResVersionOpType>() {
  return ::proto::DataResVersionNotify_DataResVersionOpType_descriptor();
}
template <> struct is_proto_enum< ::proto::RemoveRandTaskInfoNotify_FinishReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::RemoveRandTaskInfoNotify_FinishReason>() {
  return ::proto::RemoveRandTaskInfoNotify_FinishReason_descriptor();
}
template <> struct is_proto_enum< ::proto::ItemGivingReq_ItemGivingType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ItemGivingReq_ItemGivingType>() {
  return ::proto::ItemGivingReq_ItemGivingType_descriptor();
}
template <> struct is_proto_enum< ::proto::CompoundBoostTakeStatusType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CompoundBoostTakeStatusType>() {
  return ::proto::CompoundBoostTakeStatusType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5fplayer_2eproto__INCLUDED
