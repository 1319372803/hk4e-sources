// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_mp.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_mp.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class PlayerApplyEnterMpNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerApplyEnterMpNotify>
     _instance;
} _PlayerApplyEnterMpNotify_default_instance_;
class PlayerApplyEnterMpReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerApplyEnterMpReq>
     _instance;
} _PlayerApplyEnterMpReq_default_instance_;
class PlayerApplyEnterMpRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerApplyEnterMpRsp>
     _instance;
} _PlayerApplyEnterMpRsp_default_instance_;
class PlayerApplyEnterMpResultNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerApplyEnterMpResultNotify>
     _instance;
} _PlayerApplyEnterMpResultNotify_default_instance_;
class PlayerApplyEnterMpResultReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerApplyEnterMpResultReq>
     _instance;
} _PlayerApplyEnterMpResultReq_default_instance_;
class PlayerApplyEnterMpResultRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerApplyEnterMpResultRsp>
     _instance;
} _PlayerApplyEnterMpResultRsp_default_instance_;
class PlayerQuitFromMpNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerQuitFromMpNotify>
     _instance;
} _PlayerQuitFromMpNotify_default_instance_;
class PlayerPreEnterMpNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerPreEnterMpNotify>
     _instance;
} _PlayerPreEnterMpNotify_default_instance_;
class GetPlayerMpModeAvailabilityReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetPlayerMpModeAvailabilityReq>
     _instance;
} _GetPlayerMpModeAvailabilityReq_default_instance_;
class GetPlayerMpModeAvailabilityRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetPlayerMpModeAvailabilityRsp>
     _instance;
} _GetPlayerMpModeAvailabilityRsp_default_instance_;
class PlayerSetOnlyMPWithPSPlayerReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerSetOnlyMPWithPSPlayerReq>
     _instance;
} _PlayerSetOnlyMPWithPSPlayerReq_default_instance_;
class PlayerSetOnlyMPWithPSPlayerRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerSetOnlyMPWithPSPlayerRsp>
     _instance;
} _PlayerSetOnlyMPWithPSPlayerRsp_default_instance_;
class PSPlayerApplyEnterMpReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PSPlayerApplyEnterMpReq>
     _instance;
} _PSPlayerApplyEnterMpReq_default_instance_;
class PSPlayerApplyEnterMpRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PSPlayerApplyEnterMpRsp>
     _instance;
} _PSPlayerApplyEnterMpRsp_default_instance_;
class MpPlayOwnerCheckReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MpPlayOwnerCheckReq>
     _instance;
} _MpPlayOwnerCheckReq_default_instance_;
class MpPlayOwnerCheckRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MpPlayOwnerCheckRsp>
     _instance;
} _MpPlayOwnerCheckRsp_default_instance_;
class MpPlayOwnerStartInviteReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MpPlayOwnerStartInviteReq>
     _instance;
} _MpPlayOwnerStartInviteReq_default_instance_;
class MpPlayOwnerStartInviteRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MpPlayOwnerStartInviteRsp>
     _instance;
} _MpPlayOwnerStartInviteRsp_default_instance_;
class MpPlayOwnerInviteNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MpPlayOwnerInviteNotify>
     _instance;
} _MpPlayOwnerInviteNotify_default_instance_;
class MpPlayGuestReplyInviteReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MpPlayGuestReplyInviteReq>
     _instance;
} _MpPlayGuestReplyInviteReq_default_instance_;
class MpPlayGuestReplyInviteRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MpPlayGuestReplyInviteRsp>
     _instance;
} _MpPlayGuestReplyInviteRsp_default_instance_;
class MpPlayGuestReplyNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MpPlayGuestReplyNotify>
     _instance;
} _MpPlayGuestReplyNotify_default_instance_;
class MpPlayPrepareNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MpPlayPrepareNotify>
     _instance;
} _MpPlayPrepareNotify_default_instance_;
class MpPlayInviteResultNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MpPlayInviteResultNotify>
     _instance;
} _MpPlayInviteResultNotify_default_instance_;
class MpPlayPrepareInterruptNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MpPlayPrepareInterruptNotify>
     _instance;
} _MpPlayPrepareInterruptNotify_default_instance_;
class MpBlockNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MpBlockNotify>
     _instance;
} _MpBlockNotify_default_instance_;

namespace protobuf_cmd_2fcmd_5fmp_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[26];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpNotify, src_thread_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpNotify, src_app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpNotify, src_player_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpReq, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpRsp, target_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpRsp, param_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpResultNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpResultNotify, is_agreed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpResultNotify, target_nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpResultNotify, reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpResultNotify, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpResultReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpResultReq, apply_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpResultReq, is_agreed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpResultRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpResultRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpResultRsp, is_agreed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpResultRsp, apply_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpResultRsp, param_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerQuitFromMpNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerQuitFromMpNotify, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPreEnterMpNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPreEnterMpNotify, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPreEnterMpNotify, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPreEnterMpNotify, nickname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerMpModeAvailabilityReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerMpModeAvailabilityRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerMpModeAvailabilityRsp, mp_ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerMpModeAvailabilityRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerMpModeAvailabilityRsp, param_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerSetOnlyMPWithPSPlayerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerSetOnlyMPWithPSPlayerReq, is_only_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerSetOnlyMPWithPSPlayerRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerSetOnlyMPWithPSPlayerRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerSetOnlyMPWithPSPlayerRsp, is_only_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSPlayerApplyEnterMpReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSPlayerApplyEnterMpReq, target_psn_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSPlayerApplyEnterMpRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSPlayerApplyEnterMpRsp, target_psn_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSPlayerApplyEnterMpRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSPlayerApplyEnterMpRsp, param_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayOwnerCheckReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayOwnerCheckReq, mp_play_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayOwnerCheckReq, is_skip_match_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayOwnerCheckRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayOwnerCheckRsp, wrong_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayOwnerCheckRsp, is_skip_match_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayOwnerCheckRsp, mp_play_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayOwnerCheckRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayOwnerStartInviteReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayOwnerStartInviteReq, mp_play_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayOwnerStartInviteReq, is_skip_match_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayOwnerStartInviteRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayOwnerStartInviteRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayOwnerStartInviteRsp, mp_play_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayOwnerStartInviteRsp, is_skip_match_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayOwnerInviteNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayOwnerInviteNotify, cd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayOwnerInviteNotify, mp_play_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayOwnerInviteNotify, is_remain_reward_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayGuestReplyInviteReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayGuestReplyInviteReq, mp_play_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayGuestReplyInviteReq, is_agree_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayGuestReplyInviteRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayGuestReplyInviteRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayGuestReplyInviteRsp, mp_play_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayGuestReplyNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayGuestReplyNotify, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayGuestReplyNotify, is_agree_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayGuestReplyNotify, mp_play_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayPrepareNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayPrepareNotify, mp_play_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayPrepareNotify, prepare_end_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayInviteResultNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayInviteResultNotify, mp_play_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayInviteResultNotify, all_argee_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayPrepareInterruptNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpPlayPrepareInterruptNotify, mp_play_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpBlockNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MpBlockNotify, end_time_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(PlayerApplyEnterMpNotify)},
  { 8, -1, sizeof(PlayerApplyEnterMpReq)},
  { 14, -1, sizeof(PlayerApplyEnterMpRsp)},
  { 22, -1, sizeof(PlayerApplyEnterMpResultNotify)},
  { 31, -1, sizeof(PlayerApplyEnterMpResultReq)},
  { 38, -1, sizeof(PlayerApplyEnterMpResultRsp)},
  { 47, -1, sizeof(PlayerQuitFromMpNotify)},
  { 53, -1, sizeof(PlayerPreEnterMpNotify)},
  { 61, -1, sizeof(GetPlayerMpModeAvailabilityReq)},
  { 66, -1, sizeof(GetPlayerMpModeAvailabilityRsp)},
  { 74, -1, sizeof(PlayerSetOnlyMPWithPSPlayerReq)},
  { 80, -1, sizeof(PlayerSetOnlyMPWithPSPlayerRsp)},
  { 87, -1, sizeof(PSPlayerApplyEnterMpReq)},
  { 93, -1, sizeof(PSPlayerApplyEnterMpRsp)},
  { 101, -1, sizeof(MpPlayOwnerCheckReq)},
  { 108, -1, sizeof(MpPlayOwnerCheckRsp)},
  { 117, -1, sizeof(MpPlayOwnerStartInviteReq)},
  { 124, -1, sizeof(MpPlayOwnerStartInviteRsp)},
  { 132, -1, sizeof(MpPlayOwnerInviteNotify)},
  { 140, -1, sizeof(MpPlayGuestReplyInviteReq)},
  { 147, -1, sizeof(MpPlayGuestReplyInviteRsp)},
  { 154, -1, sizeof(MpPlayGuestReplyNotify)},
  { 162, -1, sizeof(MpPlayPrepareNotify)},
  { 169, -1, sizeof(MpPlayInviteResultNotify)},
  { 176, -1, sizeof(MpPlayPrepareInterruptNotify)},
  { 182, -1, sizeof(MpBlockNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerApplyEnterMpNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerApplyEnterMpReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerApplyEnterMpRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerApplyEnterMpResultNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerApplyEnterMpResultReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerApplyEnterMpResultRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerQuitFromMpNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerPreEnterMpNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetPlayerMpModeAvailabilityReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetPlayerMpModeAvailabilityRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerSetOnlyMPWithPSPlayerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerSetOnlyMPWithPSPlayerRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PSPlayerApplyEnterMpReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PSPlayerApplyEnterMpRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MpPlayOwnerCheckReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MpPlayOwnerCheckRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MpPlayOwnerStartInviteReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MpPlayOwnerStartInviteRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MpPlayOwnerInviteNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MpPlayGuestReplyInviteReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MpPlayGuestReplyInviteRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MpPlayGuestReplyNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MpPlayPrepareNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MpPlayInviteResultNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MpPlayPrepareInterruptNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MpBlockNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_mp.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 26);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _PlayerApplyEnterMpNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerApplyEnterMpNotify_default_instance_);_PlayerApplyEnterMpReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerApplyEnterMpReq_default_instance_);_PlayerApplyEnterMpRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerApplyEnterMpRsp_default_instance_);_PlayerApplyEnterMpResultNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerApplyEnterMpResultNotify_default_instance_);_PlayerApplyEnterMpResultReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerApplyEnterMpResultReq_default_instance_);_PlayerApplyEnterMpResultRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerApplyEnterMpResultRsp_default_instance_);_PlayerQuitFromMpNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerQuitFromMpNotify_default_instance_);_PlayerPreEnterMpNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerPreEnterMpNotify_default_instance_);_GetPlayerMpModeAvailabilityReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetPlayerMpModeAvailabilityReq_default_instance_);_GetPlayerMpModeAvailabilityRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetPlayerMpModeAvailabilityRsp_default_instance_);_PlayerSetOnlyMPWithPSPlayerReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerSetOnlyMPWithPSPlayerReq_default_instance_);_PlayerSetOnlyMPWithPSPlayerRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerSetOnlyMPWithPSPlayerRsp_default_instance_);_PSPlayerApplyEnterMpReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PSPlayerApplyEnterMpReq_default_instance_);_PSPlayerApplyEnterMpRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PSPlayerApplyEnterMpRsp_default_instance_);_MpPlayOwnerCheckReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MpPlayOwnerCheckReq_default_instance_);_MpPlayOwnerCheckRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MpPlayOwnerCheckRsp_default_instance_);_MpPlayOwnerStartInviteReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MpPlayOwnerStartInviteReq_default_instance_);_MpPlayOwnerStartInviteRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MpPlayOwnerStartInviteRsp_default_instance_);_MpPlayOwnerInviteNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MpPlayOwnerInviteNotify_default_instance_);_MpPlayGuestReplyInviteReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MpPlayGuestReplyInviteReq_default_instance_);_MpPlayGuestReplyInviteRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MpPlayGuestReplyInviteRsp_default_instance_);_MpPlayGuestReplyNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MpPlayGuestReplyNotify_default_instance_);_MpPlayPrepareNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MpPlayPrepareNotify_default_instance_);_MpPlayInviteResultNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MpPlayInviteResultNotify_default_instance_);_MpPlayPrepareInterruptNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MpPlayPrepareInterruptNotify_default_instance_);_MpBlockNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MpBlockNotify_default_instance_);_PlayerApplyEnterMpNotify_default_instance_._instance.get_mutable()->src_player_info_ = const_cast< ::proto::OnlinePlayerInfo*>(
      ::proto::OnlinePlayerInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020cmd/cmd_mp.proto\022\005proto\032\014define.proto\""
      "z\n\030PlayerApplyEnterMpNotify\022\030\n\020src_threa"
      "d_index\030\005 \001(\r\022\022\n\nsrc_app_id\030\006 \001(\r\0220\n\017src"
      "_player_info\030\002 \001(\0132\027.proto.OnlinePlayerI"
      "nfo\"+\n\025PlayerApplyEnterMpReq\022\022\n\ntarget_u"
      "id\030\004 \001(\r\"K\n\025PlayerApplyEnterMpRsp\022\017\n\007ret"
      "code\030\005 \001(\005\022\022\n\ntarget_uid\030\003 \001(\r\022\r\n\005param\030"
      "\004 \001(\r\"\221\004\n\036PlayerApplyEnterMpResultNotify"
      "\022\021\n\tis_agreed\030\002 \001(\010\022\027\n\017target_nickname\030\014"
      " \001(\t\022<\n\006reason\030\r \001(\0162,.proto.PlayerApply"
      "EnterMpResultNotify.Reason\022\022\n\ntarget_uid"
      "\030\001 \001(\r\"\360\002\n\006Reason\022\020\n\014PLAYER_JUDGE\020\000\022\026\n\022S"
      "CENE_CANNOT_ENTER\020\001\022\032\n\026PLAYER_CANNOT_ENT"
      "ER_MP\020\002\022\020\n\014SYSTEM_JUDGE\020\003\022\033\n\027ALLOW_ENTER"
      "_PLAYER_FULL\020\004\022\037\n\033WORLD_LEVEL_LOWER_THAN"
      "_HOST\020\005\022\021\n\rHOST_IN_MATCH\020\006\022\027\n\023PLAYER_IN_"
      "BLACKLIST\020\007\022\037\n\033PS_PLAYER_NOT_ACCEPT_OTHE"
      "RS\020\010\022\023\n\017HOST_IS_BLOCKED\020\t\022!\n\035OTHER_DATA_"
      "VERSION_NOT_LATEST\020\n\022\033\n\027DATA_VERSION_NOT"
      "_LATEST\020\013\022\036\n\032PLAYER_NOT_IN_PLAYER_WORLD\020"
      "\014\022\016\n\nMAX_PLAYER\020\r\"C\n\033PlayerApplyEnterMpR"
      "esultReq\022\021\n\tapply_uid\030\002 \001(\r\022\021\n\tis_agreed"
      "\030\014 \001(\010\"c\n\033PlayerApplyEnterMpResultRsp\022\017\n"
      "\007retcode\030\001 \001(\005\022\021\n\tis_agreed\030\003 \001(\010\022\021\n\tapp"
      "ly_uid\030\n \001(\r\022\r\n\005param\030\014 \001(\r\"\347\002\n\026PlayerQu"
      "itFromMpNotify\0228\n\006reason\030\013 \001(\0162(.proto.P"
      "layerQuitFromMpNotify.QuitReason\"\222\002\n\nQui"
      "tReason\022\013\n\007INVALID\020\000\022\030\n\024HOST_NO_OTHER_PL"
      "AYER\020\001\022\020\n\014KICK_BY_HOST\020\002\022\024\n\020BACK_TO_MY_W"
      "ORLD\020\003\022\027\n\023KICK_BY_HOST_LOGOUT\020\004\022\026\n\022KICK_"
      "BY_HOST_BLOCK\020\005\022\016\n\nBE_BLOCKED\020\006\022\033\n\027KICK_"
      "BY_HOST_ENTER_HOME\020\007\022\026\n\022HOST_SCENE_INVAL"
      "ID\020\010\022\020\n\014KICK_BY_PLAY\020\t\022-\n)KICK_BY_ISLAND"
      "_PARTY_GALLERY_START_FAILED\020\n\"\231\001\n\026Player"
      "PreEnterMpNotify\0222\n\005state\030\002 \001(\0162#.proto."
      "PlayerPreEnterMpNotify.State\022\013\n\003uid\030\016 \001("
      "\r\022\020\n\010nickname\030\006 \001(\t\",\n\005State\022\013\n\007INVALID\020"
      "\000\022\t\n\005START\020\001\022\013\n\007TIMEOUT\020\002\" \n\036GetPlayerMp"
      "ModeAvailabilityReq\"U\n\036GetPlayerMpModeAv"
      "ailabilityRsp\022\016\n\006mp_ret\030\017 \001(\005\022\017\n\007retcode"
      "\030\002 \001(\005\022\022\n\nparam_list\030\010 \003(\r\"1\n\036PlayerSetO"
      "nlyMPWithPSPlayerReq\022\017\n\007is_only\030\r \001(\010\"B\n"
      "\036PlayerSetOnlyMPWithPSPlayerRsp\022\017\n\007retco"
      "de\030\005 \001(\005\022\017\n\007is_only\030\010 \001(\010\"0\n\027PSPlayerApp"
      "lyEnterMpReq\022\025\n\rtarget_psn_id\030\005 \001(\t\"P\n\027P"
      "SPlayerApplyEnterMpRsp\022\025\n\rtarget_psn_id\030"
      "\002 \001(\t\022\017\n\007retcode\030\006 \001(\005\022\r\n\005param\030\n \001(\r\"@\n"
      "\023MpPlayOwnerCheckReq\022\022\n\nmp_play_id\030\t \001(\r"
      "\022\025\n\ris_skip_match\030\003 \001(\010\"d\n\023MpPlayOwnerCh"
      "eckRsp\022\021\n\twrong_uid\030\004 \001(\r\022\025\n\ris_skip_mat"
      "ch\030\017 \001(\010\022\022\n\nmp_play_id\030\n \001(\r\022\017\n\007retcode\030"
      "\014 \001(\005\"F\n\031MpPlayOwnerStartInviteReq\022\022\n\nmp"
      "_play_id\030\003 \001(\r\022\025\n\ris_skip_match\030\006 \001(\010\"W\n"
      "\031MpPlayOwnerStartInviteRsp\022\017\n\007retcode\030\016 "
      "\001(\005\022\022\n\nmp_play_id\030\003 \001(\r\022\025\n\ris_skip_match"
      "\030\t \001(\010\"S\n\027MpPlayOwnerInviteNotify\022\n\n\002cd\030"
      "\014 \001(\r\022\022\n\nmp_play_id\030\r \001(\r\022\030\n\020is_remain_r"
      "eward\030\n \001(\010\"A\n\031MpPlayGuestReplyInviteReq"
      "\022\022\n\nmp_play_id\030\003 \001(\r\022\020\n\010is_agree\030\017 \001(\010\"@"
      "\n\031MpPlayGuestReplyInviteRsp\022\017\n\007retcode\030\004"
      " \001(\005\022\022\n\nmp_play_id\030\n \001(\r\"K\n\026MpPlayGuestR"
      "eplyNotify\022\013\n\003uid\030\007 \001(\r\022\020\n\010is_agree\030\004 \001("
      "\010\022\022\n\nmp_play_id\030\016 \001(\r\"C\n\023MpPlayPrepareNo"
      "tify\022\022\n\nmp_play_id\030\t \001(\r\022\030\n\020prepare_end_"
      "time\030\013 \001(\r\"A\n\030MpPlayInviteResultNotify\022\022"
      "\n\nmp_play_id\030\013 \001(\r\022\021\n\tall_argee\030\n \001(\010\"2\n"
      "\034MpPlayPrepareInterruptNotify\022\022\n\nmp_play"
      "_id\030\014 \001(\r\"!\n\rMpBlockNotify\022\020\n\010end_time\030\r"
      " \001(\rB(Z&github.com/teyvat-helper/hk4e-pr"
      "oto/pbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2774);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_mp.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5fmp_2eproto

const ::google::protobuf::EnumDescriptor* PlayerApplyEnterMpResultNotify_Reason_descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_enum_descriptors[0];
}
bool PlayerApplyEnterMpResultNotify_Reason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerApplyEnterMpResultNotify_Reason PlayerApplyEnterMpResultNotify::PLAYER_JUDGE;
const PlayerApplyEnterMpResultNotify_Reason PlayerApplyEnterMpResultNotify::SCENE_CANNOT_ENTER;
const PlayerApplyEnterMpResultNotify_Reason PlayerApplyEnterMpResultNotify::PLAYER_CANNOT_ENTER_MP;
const PlayerApplyEnterMpResultNotify_Reason PlayerApplyEnterMpResultNotify::SYSTEM_JUDGE;
const PlayerApplyEnterMpResultNotify_Reason PlayerApplyEnterMpResultNotify::ALLOW_ENTER_PLAYER_FULL;
const PlayerApplyEnterMpResultNotify_Reason PlayerApplyEnterMpResultNotify::WORLD_LEVEL_LOWER_THAN_HOST;
const PlayerApplyEnterMpResultNotify_Reason PlayerApplyEnterMpResultNotify::HOST_IN_MATCH;
const PlayerApplyEnterMpResultNotify_Reason PlayerApplyEnterMpResultNotify::PLAYER_IN_BLACKLIST;
const PlayerApplyEnterMpResultNotify_Reason PlayerApplyEnterMpResultNotify::PS_PLAYER_NOT_ACCEPT_OTHERS;
const PlayerApplyEnterMpResultNotify_Reason PlayerApplyEnterMpResultNotify::HOST_IS_BLOCKED;
const PlayerApplyEnterMpResultNotify_Reason PlayerApplyEnterMpResultNotify::OTHER_DATA_VERSION_NOT_LATEST;
const PlayerApplyEnterMpResultNotify_Reason PlayerApplyEnterMpResultNotify::DATA_VERSION_NOT_LATEST;
const PlayerApplyEnterMpResultNotify_Reason PlayerApplyEnterMpResultNotify::PLAYER_NOT_IN_PLAYER_WORLD;
const PlayerApplyEnterMpResultNotify_Reason PlayerApplyEnterMpResultNotify::MAX_PLAYER;
const PlayerApplyEnterMpResultNotify_Reason PlayerApplyEnterMpResultNotify::Reason_MIN;
const PlayerApplyEnterMpResultNotify_Reason PlayerApplyEnterMpResultNotify::Reason_MAX;
const int PlayerApplyEnterMpResultNotify::Reason_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerQuitFromMpNotify_QuitReason_descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_enum_descriptors[1];
}
bool PlayerQuitFromMpNotify_QuitReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerQuitFromMpNotify_QuitReason PlayerQuitFromMpNotify::INVALID;
const PlayerQuitFromMpNotify_QuitReason PlayerQuitFromMpNotify::HOST_NO_OTHER_PLAYER;
const PlayerQuitFromMpNotify_QuitReason PlayerQuitFromMpNotify::KICK_BY_HOST;
const PlayerQuitFromMpNotify_QuitReason PlayerQuitFromMpNotify::BACK_TO_MY_WORLD;
const PlayerQuitFromMpNotify_QuitReason PlayerQuitFromMpNotify::KICK_BY_HOST_LOGOUT;
const PlayerQuitFromMpNotify_QuitReason PlayerQuitFromMpNotify::KICK_BY_HOST_BLOCK;
const PlayerQuitFromMpNotify_QuitReason PlayerQuitFromMpNotify::BE_BLOCKED;
const PlayerQuitFromMpNotify_QuitReason PlayerQuitFromMpNotify::KICK_BY_HOST_ENTER_HOME;
const PlayerQuitFromMpNotify_QuitReason PlayerQuitFromMpNotify::HOST_SCENE_INVALID;
const PlayerQuitFromMpNotify_QuitReason PlayerQuitFromMpNotify::KICK_BY_PLAY;
const PlayerQuitFromMpNotify_QuitReason PlayerQuitFromMpNotify::KICK_BY_ISLAND_PARTY_GALLERY_START_FAILED;
const PlayerQuitFromMpNotify_QuitReason PlayerQuitFromMpNotify::QuitReason_MIN;
const PlayerQuitFromMpNotify_QuitReason PlayerQuitFromMpNotify::QuitReason_MAX;
const int PlayerQuitFromMpNotify::QuitReason_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerPreEnterMpNotify_State_descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_enum_descriptors[2];
}
bool PlayerPreEnterMpNotify_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerPreEnterMpNotify_State PlayerPreEnterMpNotify::INVALID;
const PlayerPreEnterMpNotify_State PlayerPreEnterMpNotify::START;
const PlayerPreEnterMpNotify_State PlayerPreEnterMpNotify::TIMEOUT;
const PlayerPreEnterMpNotify_State PlayerPreEnterMpNotify::State_MIN;
const PlayerPreEnterMpNotify_State PlayerPreEnterMpNotify::State_MAX;
const int PlayerPreEnterMpNotify::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerApplyEnterMpNotify::kSrcThreadIndexFieldNumber;
const int PlayerApplyEnterMpNotify::kSrcAppIdFieldNumber;
const int PlayerApplyEnterMpNotify::kSrcPlayerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerApplyEnterMpNotify::PlayerApplyEnterMpNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerApplyEnterMpNotify)
}
PlayerApplyEnterMpNotify::PlayerApplyEnterMpNotify(const PlayerApplyEnterMpNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_src_player_info()) {
    src_player_info_ = new ::proto::OnlinePlayerInfo(*from.src_player_info_);
  } else {
    src_player_info_ = NULL;
  }
  ::memcpy(&src_thread_index_, &from.src_thread_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&src_app_id_) -
    reinterpret_cast<char*>(&src_thread_index_)) + sizeof(src_app_id_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerApplyEnterMpNotify)
}

void PlayerApplyEnterMpNotify::SharedCtor() {
  ::memset(&src_player_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&src_app_id_) -
      reinterpret_cast<char*>(&src_player_info_)) + sizeof(src_app_id_));
  _cached_size_ = 0;
}

PlayerApplyEnterMpNotify::~PlayerApplyEnterMpNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerApplyEnterMpNotify)
  SharedDtor();
}

void PlayerApplyEnterMpNotify::SharedDtor() {
  if (this != internal_default_instance()) delete src_player_info_;
}

void PlayerApplyEnterMpNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerApplyEnterMpNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerApplyEnterMpNotify& PlayerApplyEnterMpNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerApplyEnterMpNotify* PlayerApplyEnterMpNotify::New(::google::protobuf::Arena* arena) const {
  PlayerApplyEnterMpNotify* n = new PlayerApplyEnterMpNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerApplyEnterMpNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerApplyEnterMpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && src_player_info_ != NULL) {
    delete src_player_info_;
  }
  src_player_info_ = NULL;
  ::memset(&src_thread_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&src_app_id_) -
      reinterpret_cast<char*>(&src_thread_index_)) + sizeof(src_app_id_));
  _internal_metadata_.Clear();
}

bool PlayerApplyEnterMpNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerApplyEnterMpNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.OnlinePlayerInfo src_player_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_src_player_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 src_thread_index = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &src_thread_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 src_app_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &src_app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerApplyEnterMpNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerApplyEnterMpNotify)
  return false;
#undef DO_
}

void PlayerApplyEnterMpNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerApplyEnterMpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.OnlinePlayerInfo src_player_info = 2;
  if (this->has_src_player_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->src_player_info_, output);
  }

  // uint32 src_thread_index = 5;
  if (this->src_thread_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->src_thread_index(), output);
  }

  // uint32 src_app_id = 6;
  if (this->src_app_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->src_app_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerApplyEnterMpNotify)
}

::google::protobuf::uint8* PlayerApplyEnterMpNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerApplyEnterMpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.OnlinePlayerInfo src_player_info = 2;
  if (this->has_src_player_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->src_player_info_, deterministic, target);
  }

  // uint32 src_thread_index = 5;
  if (this->src_thread_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->src_thread_index(), target);
  }

  // uint32 src_app_id = 6;
  if (this->src_app_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->src_app_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerApplyEnterMpNotify)
  return target;
}

size_t PlayerApplyEnterMpNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerApplyEnterMpNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.OnlinePlayerInfo src_player_info = 2;
  if (this->has_src_player_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->src_player_info_);
  }

  // uint32 src_thread_index = 5;
  if (this->src_thread_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->src_thread_index());
  }

  // uint32 src_app_id = 6;
  if (this->src_app_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->src_app_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerApplyEnterMpNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerApplyEnterMpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerApplyEnterMpNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerApplyEnterMpNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerApplyEnterMpNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerApplyEnterMpNotify)
    MergeFrom(*source);
  }
}

void PlayerApplyEnterMpNotify::MergeFrom(const PlayerApplyEnterMpNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerApplyEnterMpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_src_player_info()) {
    mutable_src_player_info()->::proto::OnlinePlayerInfo::MergeFrom(from.src_player_info());
  }
  if (from.src_thread_index() != 0) {
    set_src_thread_index(from.src_thread_index());
  }
  if (from.src_app_id() != 0) {
    set_src_app_id(from.src_app_id());
  }
}

void PlayerApplyEnterMpNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerApplyEnterMpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerApplyEnterMpNotify::CopyFrom(const PlayerApplyEnterMpNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerApplyEnterMpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerApplyEnterMpNotify::IsInitialized() const {
  return true;
}

void PlayerApplyEnterMpNotify::Swap(PlayerApplyEnterMpNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerApplyEnterMpNotify::InternalSwap(PlayerApplyEnterMpNotify* other) {
  using std::swap;
  swap(src_player_info_, other->src_player_info_);
  swap(src_thread_index_, other->src_thread_index_);
  swap(src_app_id_, other->src_app_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerApplyEnterMpNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerApplyEnterMpNotify

// uint32 src_thread_index = 5;
void PlayerApplyEnterMpNotify::clear_src_thread_index() {
  src_thread_index_ = 0u;
}
::google::protobuf::uint32 PlayerApplyEnterMpNotify::src_thread_index() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpNotify.src_thread_index)
  return src_thread_index_;
}
void PlayerApplyEnterMpNotify::set_src_thread_index(::google::protobuf::uint32 value) {
  
  src_thread_index_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpNotify.src_thread_index)
}

// uint32 src_app_id = 6;
void PlayerApplyEnterMpNotify::clear_src_app_id() {
  src_app_id_ = 0u;
}
::google::protobuf::uint32 PlayerApplyEnterMpNotify::src_app_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpNotify.src_app_id)
  return src_app_id_;
}
void PlayerApplyEnterMpNotify::set_src_app_id(::google::protobuf::uint32 value) {
  
  src_app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpNotify.src_app_id)
}

// .proto.OnlinePlayerInfo src_player_info = 2;
bool PlayerApplyEnterMpNotify::has_src_player_info() const {
  return this != internal_default_instance() && src_player_info_ != NULL;
}
void PlayerApplyEnterMpNotify::clear_src_player_info() {
  if (GetArenaNoVirtual() == NULL && src_player_info_ != NULL) delete src_player_info_;
  src_player_info_ = NULL;
}
const ::proto::OnlinePlayerInfo& PlayerApplyEnterMpNotify::src_player_info() const {
  const ::proto::OnlinePlayerInfo* p = src_player_info_;
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpNotify.src_player_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::OnlinePlayerInfo*>(
      &::proto::_OnlinePlayerInfo_default_instance_);
}
::proto::OnlinePlayerInfo* PlayerApplyEnterMpNotify::mutable_src_player_info() {
  
  if (src_player_info_ == NULL) {
    src_player_info_ = new ::proto::OnlinePlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerApplyEnterMpNotify.src_player_info)
  return src_player_info_;
}
::proto::OnlinePlayerInfo* PlayerApplyEnterMpNotify::release_src_player_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerApplyEnterMpNotify.src_player_info)
  
  ::proto::OnlinePlayerInfo* temp = src_player_info_;
  src_player_info_ = NULL;
  return temp;
}
void PlayerApplyEnterMpNotify::set_allocated_src_player_info(::proto::OnlinePlayerInfo* src_player_info) {
  delete src_player_info_;
  src_player_info_ = src_player_info;
  if (src_player_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerApplyEnterMpNotify.src_player_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerApplyEnterMpReq::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerApplyEnterMpReq::PlayerApplyEnterMpReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerApplyEnterMpReq)
}
PlayerApplyEnterMpReq::PlayerApplyEnterMpReq(const PlayerApplyEnterMpReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerApplyEnterMpReq)
}

void PlayerApplyEnterMpReq::SharedCtor() {
  target_uid_ = 0u;
  _cached_size_ = 0;
}

PlayerApplyEnterMpReq::~PlayerApplyEnterMpReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerApplyEnterMpReq)
  SharedDtor();
}

void PlayerApplyEnterMpReq::SharedDtor() {
}

void PlayerApplyEnterMpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerApplyEnterMpReq::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerApplyEnterMpReq& PlayerApplyEnterMpReq::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerApplyEnterMpReq* PlayerApplyEnterMpReq::New(::google::protobuf::Arena* arena) const {
  PlayerApplyEnterMpReq* n = new PlayerApplyEnterMpReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerApplyEnterMpReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerApplyEnterMpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool PlayerApplyEnterMpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerApplyEnterMpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerApplyEnterMpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerApplyEnterMpReq)
  return false;
#undef DO_
}

void PlayerApplyEnterMpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerApplyEnterMpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 4;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerApplyEnterMpReq)
}

::google::protobuf::uint8* PlayerApplyEnterMpReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerApplyEnterMpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 4;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerApplyEnterMpReq)
  return target;
}

size_t PlayerApplyEnterMpReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerApplyEnterMpReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 4;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerApplyEnterMpReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerApplyEnterMpReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerApplyEnterMpReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerApplyEnterMpReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerApplyEnterMpReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerApplyEnterMpReq)
    MergeFrom(*source);
  }
}

void PlayerApplyEnterMpReq::MergeFrom(const PlayerApplyEnterMpReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerApplyEnterMpReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void PlayerApplyEnterMpReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerApplyEnterMpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerApplyEnterMpReq::CopyFrom(const PlayerApplyEnterMpReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerApplyEnterMpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerApplyEnterMpReq::IsInitialized() const {
  return true;
}

void PlayerApplyEnterMpReq::Swap(PlayerApplyEnterMpReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerApplyEnterMpReq::InternalSwap(PlayerApplyEnterMpReq* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerApplyEnterMpReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerApplyEnterMpReq

// uint32 target_uid = 4;
void PlayerApplyEnterMpReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 PlayerApplyEnterMpReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpReq.target_uid)
  return target_uid_;
}
void PlayerApplyEnterMpReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpReq.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerApplyEnterMpRsp::kRetcodeFieldNumber;
const int PlayerApplyEnterMpRsp::kTargetUidFieldNumber;
const int PlayerApplyEnterMpRsp::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerApplyEnterMpRsp::PlayerApplyEnterMpRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerApplyEnterMpRsp)
}
PlayerApplyEnterMpRsp::PlayerApplyEnterMpRsp(const PlayerApplyEnterMpRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_uid_, &from.target_uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&target_uid_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerApplyEnterMpRsp)
}

void PlayerApplyEnterMpRsp::SharedCtor() {
  ::memset(&target_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&target_uid_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

PlayerApplyEnterMpRsp::~PlayerApplyEnterMpRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerApplyEnterMpRsp)
  SharedDtor();
}

void PlayerApplyEnterMpRsp::SharedDtor() {
}

void PlayerApplyEnterMpRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerApplyEnterMpRsp::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerApplyEnterMpRsp& PlayerApplyEnterMpRsp::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerApplyEnterMpRsp* PlayerApplyEnterMpRsp::New(::google::protobuf::Arena* arena) const {
  PlayerApplyEnterMpRsp* n = new PlayerApplyEnterMpRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerApplyEnterMpRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerApplyEnterMpRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&target_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&target_uid_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool PlayerApplyEnterMpRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerApplyEnterMpRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 param = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerApplyEnterMpRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerApplyEnterMpRsp)
  return false;
#undef DO_
}

void PlayerApplyEnterMpRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerApplyEnterMpRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 3;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->target_uid(), output);
  }

  // uint32 param = 4;
  if (this->param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->param(), output);
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerApplyEnterMpRsp)
}

::google::protobuf::uint8* PlayerApplyEnterMpRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerApplyEnterMpRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 3;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->target_uid(), target);
  }

  // uint32 param = 4;
  if (this->param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->param(), target);
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerApplyEnterMpRsp)
  return target;
}

size_t PlayerApplyEnterMpRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerApplyEnterMpRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 3;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  // uint32 param = 4;
  if (this->param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->param());
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerApplyEnterMpRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerApplyEnterMpRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerApplyEnterMpRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerApplyEnterMpRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerApplyEnterMpRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerApplyEnterMpRsp)
    MergeFrom(*source);
  }
}

void PlayerApplyEnterMpRsp::MergeFrom(const PlayerApplyEnterMpRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerApplyEnterMpRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  if (from.param() != 0) {
    set_param(from.param());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void PlayerApplyEnterMpRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerApplyEnterMpRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerApplyEnterMpRsp::CopyFrom(const PlayerApplyEnterMpRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerApplyEnterMpRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerApplyEnterMpRsp::IsInitialized() const {
  return true;
}

void PlayerApplyEnterMpRsp::Swap(PlayerApplyEnterMpRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerApplyEnterMpRsp::InternalSwap(PlayerApplyEnterMpRsp* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  swap(param_, other->param_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerApplyEnterMpRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerApplyEnterMpRsp

// int32 retcode = 5;
void PlayerApplyEnterMpRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PlayerApplyEnterMpRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpRsp.retcode)
  return retcode_;
}
void PlayerApplyEnterMpRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpRsp.retcode)
}

// uint32 target_uid = 3;
void PlayerApplyEnterMpRsp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 PlayerApplyEnterMpRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpRsp.target_uid)
  return target_uid_;
}
void PlayerApplyEnterMpRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpRsp.target_uid)
}

// uint32 param = 4;
void PlayerApplyEnterMpRsp::clear_param() {
  param_ = 0u;
}
::google::protobuf::uint32 PlayerApplyEnterMpRsp::param() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpRsp.param)
  return param_;
}
void PlayerApplyEnterMpRsp::set_param(::google::protobuf::uint32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpRsp.param)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerApplyEnterMpResultNotify::kIsAgreedFieldNumber;
const int PlayerApplyEnterMpResultNotify::kTargetNicknameFieldNumber;
const int PlayerApplyEnterMpResultNotify::kReasonFieldNumber;
const int PlayerApplyEnterMpResultNotify::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerApplyEnterMpResultNotify::PlayerApplyEnterMpResultNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerApplyEnterMpResultNotify)
}
PlayerApplyEnterMpResultNotify::PlayerApplyEnterMpResultNotify(const PlayerApplyEnterMpResultNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_nickname().size() > 0) {
    target_nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_nickname_);
  }
  ::memcpy(&target_uid_, &from.target_uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&target_uid_)) + sizeof(reason_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerApplyEnterMpResultNotify)
}

void PlayerApplyEnterMpResultNotify::SharedCtor() {
  target_nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&target_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&target_uid_)) + sizeof(reason_));
  _cached_size_ = 0;
}

PlayerApplyEnterMpResultNotify::~PlayerApplyEnterMpResultNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerApplyEnterMpResultNotify)
  SharedDtor();
}

void PlayerApplyEnterMpResultNotify::SharedDtor() {
  target_nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerApplyEnterMpResultNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerApplyEnterMpResultNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerApplyEnterMpResultNotify& PlayerApplyEnterMpResultNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerApplyEnterMpResultNotify* PlayerApplyEnterMpResultNotify::New(::google::protobuf::Arena* arena) const {
  PlayerApplyEnterMpResultNotify* n = new PlayerApplyEnterMpResultNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerApplyEnterMpResultNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerApplyEnterMpResultNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&target_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&target_uid_)) + sizeof(reason_));
  _internal_metadata_.Clear();
}

bool PlayerApplyEnterMpResultNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerApplyEnterMpResultNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_agreed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_agreed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string target_nickname = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_nickname().data(), static_cast<int>(this->target_nickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerApplyEnterMpResultNotify.target_nickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PlayerApplyEnterMpResultNotify.Reason reason = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason(static_cast< ::proto::PlayerApplyEnterMpResultNotify_Reason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerApplyEnterMpResultNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerApplyEnterMpResultNotify)
  return false;
#undef DO_
}

void PlayerApplyEnterMpResultNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerApplyEnterMpResultNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target_uid(), output);
  }

  // bool is_agreed = 2;
  if (this->is_agreed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_agreed(), output);
  }

  // string target_nickname = 12;
  if (this->target_nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_nickname().data(), static_cast<int>(this->target_nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerApplyEnterMpResultNotify.target_nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->target_nickname(), output);
  }

  // .proto.PlayerApplyEnterMpResultNotify.Reason reason = 13;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerApplyEnterMpResultNotify)
}

::google::protobuf::uint8* PlayerApplyEnterMpResultNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerApplyEnterMpResultNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target_uid(), target);
  }

  // bool is_agreed = 2;
  if (this->is_agreed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_agreed(), target);
  }

  // string target_nickname = 12;
  if (this->target_nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_nickname().data(), static_cast<int>(this->target_nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerApplyEnterMpResultNotify.target_nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->target_nickname(), target);
  }

  // .proto.PlayerApplyEnterMpResultNotify.Reason reason = 13;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerApplyEnterMpResultNotify)
  return target;
}

size_t PlayerApplyEnterMpResultNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerApplyEnterMpResultNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string target_nickname = 12;
  if (this->target_nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_nickname());
  }

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  // bool is_agreed = 2;
  if (this->is_agreed() != 0) {
    total_size += 1 + 1;
  }

  // .proto.PlayerApplyEnterMpResultNotify.Reason reason = 13;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerApplyEnterMpResultNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerApplyEnterMpResultNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerApplyEnterMpResultNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerApplyEnterMpResultNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerApplyEnterMpResultNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerApplyEnterMpResultNotify)
    MergeFrom(*source);
  }
}

void PlayerApplyEnterMpResultNotify::MergeFrom(const PlayerApplyEnterMpResultNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerApplyEnterMpResultNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_nickname().size() > 0) {

    target_nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_nickname_);
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  if (from.is_agreed() != 0) {
    set_is_agreed(from.is_agreed());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void PlayerApplyEnterMpResultNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerApplyEnterMpResultNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerApplyEnterMpResultNotify::CopyFrom(const PlayerApplyEnterMpResultNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerApplyEnterMpResultNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerApplyEnterMpResultNotify::IsInitialized() const {
  return true;
}

void PlayerApplyEnterMpResultNotify::Swap(PlayerApplyEnterMpResultNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerApplyEnterMpResultNotify::InternalSwap(PlayerApplyEnterMpResultNotify* other) {
  using std::swap;
  target_nickname_.Swap(&other->target_nickname_);
  swap(target_uid_, other->target_uid_);
  swap(is_agreed_, other->is_agreed_);
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerApplyEnterMpResultNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerApplyEnterMpResultNotify

// bool is_agreed = 2;
void PlayerApplyEnterMpResultNotify::clear_is_agreed() {
  is_agreed_ = false;
}
bool PlayerApplyEnterMpResultNotify::is_agreed() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpResultNotify.is_agreed)
  return is_agreed_;
}
void PlayerApplyEnterMpResultNotify::set_is_agreed(bool value) {
  
  is_agreed_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpResultNotify.is_agreed)
}

// string target_nickname = 12;
void PlayerApplyEnterMpResultNotify::clear_target_nickname() {
  target_nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerApplyEnterMpResultNotify::target_nickname() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpResultNotify.target_nickname)
  return target_nickname_.GetNoArena();
}
void PlayerApplyEnterMpResultNotify::set_target_nickname(const ::std::string& value) {
  
  target_nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpResultNotify.target_nickname)
}
#if LANG_CXX11
void PlayerApplyEnterMpResultNotify::set_target_nickname(::std::string&& value) {
  
  target_nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerApplyEnterMpResultNotify.target_nickname)
}
#endif
void PlayerApplyEnterMpResultNotify::set_target_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  target_nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerApplyEnterMpResultNotify.target_nickname)
}
void PlayerApplyEnterMpResultNotify::set_target_nickname(const char* value, size_t size) {
  
  target_nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerApplyEnterMpResultNotify.target_nickname)
}
::std::string* PlayerApplyEnterMpResultNotify::mutable_target_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerApplyEnterMpResultNotify.target_nickname)
  return target_nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerApplyEnterMpResultNotify::release_target_nickname() {
  // @@protoc_insertion_point(field_release:proto.PlayerApplyEnterMpResultNotify.target_nickname)
  
  return target_nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerApplyEnterMpResultNotify::set_allocated_target_nickname(::std::string* target_nickname) {
  if (target_nickname != NULL) {
    
  } else {
    
  }
  target_nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerApplyEnterMpResultNotify.target_nickname)
}

// .proto.PlayerApplyEnterMpResultNotify.Reason reason = 13;
void PlayerApplyEnterMpResultNotify::clear_reason() {
  reason_ = 0;
}
::proto::PlayerApplyEnterMpResultNotify_Reason PlayerApplyEnterMpResultNotify::reason() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpResultNotify.reason)
  return static_cast< ::proto::PlayerApplyEnterMpResultNotify_Reason >(reason_);
}
void PlayerApplyEnterMpResultNotify::set_reason(::proto::PlayerApplyEnterMpResultNotify_Reason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpResultNotify.reason)
}

// uint32 target_uid = 1;
void PlayerApplyEnterMpResultNotify::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 PlayerApplyEnterMpResultNotify::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpResultNotify.target_uid)
  return target_uid_;
}
void PlayerApplyEnterMpResultNotify::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpResultNotify.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerApplyEnterMpResultReq::kApplyUidFieldNumber;
const int PlayerApplyEnterMpResultReq::kIsAgreedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerApplyEnterMpResultReq::PlayerApplyEnterMpResultReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerApplyEnterMpResultReq)
}
PlayerApplyEnterMpResultReq::PlayerApplyEnterMpResultReq(const PlayerApplyEnterMpResultReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&apply_uid_, &from.apply_uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_agreed_) -
    reinterpret_cast<char*>(&apply_uid_)) + sizeof(is_agreed_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerApplyEnterMpResultReq)
}

void PlayerApplyEnterMpResultReq::SharedCtor() {
  ::memset(&apply_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_agreed_) -
      reinterpret_cast<char*>(&apply_uid_)) + sizeof(is_agreed_));
  _cached_size_ = 0;
}

PlayerApplyEnterMpResultReq::~PlayerApplyEnterMpResultReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerApplyEnterMpResultReq)
  SharedDtor();
}

void PlayerApplyEnterMpResultReq::SharedDtor() {
}

void PlayerApplyEnterMpResultReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerApplyEnterMpResultReq::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerApplyEnterMpResultReq& PlayerApplyEnterMpResultReq::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerApplyEnterMpResultReq* PlayerApplyEnterMpResultReq::New(::google::protobuf::Arena* arena) const {
  PlayerApplyEnterMpResultReq* n = new PlayerApplyEnterMpResultReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerApplyEnterMpResultReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerApplyEnterMpResultReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&apply_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_agreed_) -
      reinterpret_cast<char*>(&apply_uid_)) + sizeof(is_agreed_));
  _internal_metadata_.Clear();
}

bool PlayerApplyEnterMpResultReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerApplyEnterMpResultReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 apply_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &apply_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_agreed = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_agreed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerApplyEnterMpResultReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerApplyEnterMpResultReq)
  return false;
#undef DO_
}

void PlayerApplyEnterMpResultReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerApplyEnterMpResultReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 apply_uid = 2;
  if (this->apply_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->apply_uid(), output);
  }

  // bool is_agreed = 12;
  if (this->is_agreed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->is_agreed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerApplyEnterMpResultReq)
}

::google::protobuf::uint8* PlayerApplyEnterMpResultReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerApplyEnterMpResultReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 apply_uid = 2;
  if (this->apply_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->apply_uid(), target);
  }

  // bool is_agreed = 12;
  if (this->is_agreed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->is_agreed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerApplyEnterMpResultReq)
  return target;
}

size_t PlayerApplyEnterMpResultReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerApplyEnterMpResultReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 apply_uid = 2;
  if (this->apply_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->apply_uid());
  }

  // bool is_agreed = 12;
  if (this->is_agreed() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerApplyEnterMpResultReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerApplyEnterMpResultReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerApplyEnterMpResultReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerApplyEnterMpResultReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerApplyEnterMpResultReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerApplyEnterMpResultReq)
    MergeFrom(*source);
  }
}

void PlayerApplyEnterMpResultReq::MergeFrom(const PlayerApplyEnterMpResultReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerApplyEnterMpResultReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.apply_uid() != 0) {
    set_apply_uid(from.apply_uid());
  }
  if (from.is_agreed() != 0) {
    set_is_agreed(from.is_agreed());
  }
}

void PlayerApplyEnterMpResultReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerApplyEnterMpResultReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerApplyEnterMpResultReq::CopyFrom(const PlayerApplyEnterMpResultReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerApplyEnterMpResultReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerApplyEnterMpResultReq::IsInitialized() const {
  return true;
}

void PlayerApplyEnterMpResultReq::Swap(PlayerApplyEnterMpResultReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerApplyEnterMpResultReq::InternalSwap(PlayerApplyEnterMpResultReq* other) {
  using std::swap;
  swap(apply_uid_, other->apply_uid_);
  swap(is_agreed_, other->is_agreed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerApplyEnterMpResultReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerApplyEnterMpResultReq

// uint32 apply_uid = 2;
void PlayerApplyEnterMpResultReq::clear_apply_uid() {
  apply_uid_ = 0u;
}
::google::protobuf::uint32 PlayerApplyEnterMpResultReq::apply_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpResultReq.apply_uid)
  return apply_uid_;
}
void PlayerApplyEnterMpResultReq::set_apply_uid(::google::protobuf::uint32 value) {
  
  apply_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpResultReq.apply_uid)
}

// bool is_agreed = 12;
void PlayerApplyEnterMpResultReq::clear_is_agreed() {
  is_agreed_ = false;
}
bool PlayerApplyEnterMpResultReq::is_agreed() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpResultReq.is_agreed)
  return is_agreed_;
}
void PlayerApplyEnterMpResultReq::set_is_agreed(bool value) {
  
  is_agreed_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpResultReq.is_agreed)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerApplyEnterMpResultRsp::kRetcodeFieldNumber;
const int PlayerApplyEnterMpResultRsp::kIsAgreedFieldNumber;
const int PlayerApplyEnterMpResultRsp::kApplyUidFieldNumber;
const int PlayerApplyEnterMpResultRsp::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerApplyEnterMpResultRsp::PlayerApplyEnterMpResultRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerApplyEnterMpResultRsp)
}
PlayerApplyEnterMpResultRsp::PlayerApplyEnterMpResultRsp(const PlayerApplyEnterMpResultRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&param_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(param_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerApplyEnterMpResultRsp)
}

void PlayerApplyEnterMpResultRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(param_));
  _cached_size_ = 0;
}

PlayerApplyEnterMpResultRsp::~PlayerApplyEnterMpResultRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerApplyEnterMpResultRsp)
  SharedDtor();
}

void PlayerApplyEnterMpResultRsp::SharedDtor() {
}

void PlayerApplyEnterMpResultRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerApplyEnterMpResultRsp::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerApplyEnterMpResultRsp& PlayerApplyEnterMpResultRsp::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerApplyEnterMpResultRsp* PlayerApplyEnterMpResultRsp::New(::google::protobuf::Arena* arena) const {
  PlayerApplyEnterMpResultRsp* n = new PlayerApplyEnterMpResultRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerApplyEnterMpResultRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerApplyEnterMpResultRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(param_));
  _internal_metadata_.Clear();
}

bool PlayerApplyEnterMpResultRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerApplyEnterMpResultRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_agreed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_agreed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 apply_uid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &apply_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 param = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerApplyEnterMpResultRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerApplyEnterMpResultRsp)
  return false;
#undef DO_
}

void PlayerApplyEnterMpResultRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerApplyEnterMpResultRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // bool is_agreed = 3;
  if (this->is_agreed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_agreed(), output);
  }

  // uint32 apply_uid = 10;
  if (this->apply_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->apply_uid(), output);
  }

  // uint32 param = 12;
  if (this->param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->param(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerApplyEnterMpResultRsp)
}

::google::protobuf::uint8* PlayerApplyEnterMpResultRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerApplyEnterMpResultRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // bool is_agreed = 3;
  if (this->is_agreed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_agreed(), target);
  }

  // uint32 apply_uid = 10;
  if (this->apply_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->apply_uid(), target);
  }

  // uint32 param = 12;
  if (this->param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->param(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerApplyEnterMpResultRsp)
  return target;
}

size_t PlayerApplyEnterMpResultRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerApplyEnterMpResultRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // bool is_agreed = 3;
  if (this->is_agreed() != 0) {
    total_size += 1 + 1;
  }

  // uint32 apply_uid = 10;
  if (this->apply_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->apply_uid());
  }

  // uint32 param = 12;
  if (this->param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->param());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerApplyEnterMpResultRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerApplyEnterMpResultRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerApplyEnterMpResultRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerApplyEnterMpResultRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerApplyEnterMpResultRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerApplyEnterMpResultRsp)
    MergeFrom(*source);
  }
}

void PlayerApplyEnterMpResultRsp::MergeFrom(const PlayerApplyEnterMpResultRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerApplyEnterMpResultRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.is_agreed() != 0) {
    set_is_agreed(from.is_agreed());
  }
  if (from.apply_uid() != 0) {
    set_apply_uid(from.apply_uid());
  }
  if (from.param() != 0) {
    set_param(from.param());
  }
}

void PlayerApplyEnterMpResultRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerApplyEnterMpResultRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerApplyEnterMpResultRsp::CopyFrom(const PlayerApplyEnterMpResultRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerApplyEnterMpResultRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerApplyEnterMpResultRsp::IsInitialized() const {
  return true;
}

void PlayerApplyEnterMpResultRsp::Swap(PlayerApplyEnterMpResultRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerApplyEnterMpResultRsp::InternalSwap(PlayerApplyEnterMpResultRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(is_agreed_, other->is_agreed_);
  swap(apply_uid_, other->apply_uid_);
  swap(param_, other->param_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerApplyEnterMpResultRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerApplyEnterMpResultRsp

// int32 retcode = 1;
void PlayerApplyEnterMpResultRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PlayerApplyEnterMpResultRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpResultRsp.retcode)
  return retcode_;
}
void PlayerApplyEnterMpResultRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpResultRsp.retcode)
}

// bool is_agreed = 3;
void PlayerApplyEnterMpResultRsp::clear_is_agreed() {
  is_agreed_ = false;
}
bool PlayerApplyEnterMpResultRsp::is_agreed() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpResultRsp.is_agreed)
  return is_agreed_;
}
void PlayerApplyEnterMpResultRsp::set_is_agreed(bool value) {
  
  is_agreed_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpResultRsp.is_agreed)
}

// uint32 apply_uid = 10;
void PlayerApplyEnterMpResultRsp::clear_apply_uid() {
  apply_uid_ = 0u;
}
::google::protobuf::uint32 PlayerApplyEnterMpResultRsp::apply_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpResultRsp.apply_uid)
  return apply_uid_;
}
void PlayerApplyEnterMpResultRsp::set_apply_uid(::google::protobuf::uint32 value) {
  
  apply_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpResultRsp.apply_uid)
}

// uint32 param = 12;
void PlayerApplyEnterMpResultRsp::clear_param() {
  param_ = 0u;
}
::google::protobuf::uint32 PlayerApplyEnterMpResultRsp::param() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpResultRsp.param)
  return param_;
}
void PlayerApplyEnterMpResultRsp::set_param(::google::protobuf::uint32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpResultRsp.param)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerQuitFromMpNotify::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerQuitFromMpNotify::PlayerQuitFromMpNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerQuitFromMpNotify)
}
PlayerQuitFromMpNotify::PlayerQuitFromMpNotify(const PlayerQuitFromMpNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_ = from.reason_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerQuitFromMpNotify)
}

void PlayerQuitFromMpNotify::SharedCtor() {
  reason_ = 0;
  _cached_size_ = 0;
}

PlayerQuitFromMpNotify::~PlayerQuitFromMpNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerQuitFromMpNotify)
  SharedDtor();
}

void PlayerQuitFromMpNotify::SharedDtor() {
}

void PlayerQuitFromMpNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerQuitFromMpNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerQuitFromMpNotify& PlayerQuitFromMpNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerQuitFromMpNotify* PlayerQuitFromMpNotify::New(::google::protobuf::Arena* arena) const {
  PlayerQuitFromMpNotify* n = new PlayerQuitFromMpNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerQuitFromMpNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerQuitFromMpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_ = 0;
  _internal_metadata_.Clear();
}

bool PlayerQuitFromMpNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerQuitFromMpNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.PlayerQuitFromMpNotify.QuitReason reason = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason(static_cast< ::proto::PlayerQuitFromMpNotify_QuitReason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerQuitFromMpNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerQuitFromMpNotify)
  return false;
#undef DO_
}

void PlayerQuitFromMpNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerQuitFromMpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.PlayerQuitFromMpNotify.QuitReason reason = 11;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerQuitFromMpNotify)
}

::google::protobuf::uint8* PlayerQuitFromMpNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerQuitFromMpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.PlayerQuitFromMpNotify.QuitReason reason = 11;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerQuitFromMpNotify)
  return target;
}

size_t PlayerQuitFromMpNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerQuitFromMpNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.PlayerQuitFromMpNotify.QuitReason reason = 11;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerQuitFromMpNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerQuitFromMpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerQuitFromMpNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerQuitFromMpNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerQuitFromMpNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerQuitFromMpNotify)
    MergeFrom(*source);
  }
}

void PlayerQuitFromMpNotify::MergeFrom(const PlayerQuitFromMpNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerQuitFromMpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void PlayerQuitFromMpNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerQuitFromMpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerQuitFromMpNotify::CopyFrom(const PlayerQuitFromMpNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerQuitFromMpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerQuitFromMpNotify::IsInitialized() const {
  return true;
}

void PlayerQuitFromMpNotify::Swap(PlayerQuitFromMpNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerQuitFromMpNotify::InternalSwap(PlayerQuitFromMpNotify* other) {
  using std::swap;
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerQuitFromMpNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerQuitFromMpNotify

// .proto.PlayerQuitFromMpNotify.QuitReason reason = 11;
void PlayerQuitFromMpNotify::clear_reason() {
  reason_ = 0;
}
::proto::PlayerQuitFromMpNotify_QuitReason PlayerQuitFromMpNotify::reason() const {
  // @@protoc_insertion_point(field_get:proto.PlayerQuitFromMpNotify.reason)
  return static_cast< ::proto::PlayerQuitFromMpNotify_QuitReason >(reason_);
}
void PlayerQuitFromMpNotify::set_reason(::proto::PlayerQuitFromMpNotify_QuitReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerQuitFromMpNotify.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerPreEnterMpNotify::kStateFieldNumber;
const int PlayerPreEnterMpNotify::kUidFieldNumber;
const int PlayerPreEnterMpNotify::kNicknameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerPreEnterMpNotify::PlayerPreEnterMpNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerPreEnterMpNotify)
}
PlayerPreEnterMpNotify::PlayerPreEnterMpNotify(const PlayerPreEnterMpNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&state_)) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerPreEnterMpNotify)
}

void PlayerPreEnterMpNotify::SharedCtor() {
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&state_)) + sizeof(uid_));
  _cached_size_ = 0;
}

PlayerPreEnterMpNotify::~PlayerPreEnterMpNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerPreEnterMpNotify)
  SharedDtor();
}

void PlayerPreEnterMpNotify::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerPreEnterMpNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerPreEnterMpNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerPreEnterMpNotify& PlayerPreEnterMpNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerPreEnterMpNotify* PlayerPreEnterMpNotify::New(::google::protobuf::Arena* arena) const {
  PlayerPreEnterMpNotify* n = new PlayerPreEnterMpNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerPreEnterMpNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerPreEnterMpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&state_)) + sizeof(uid_));
  _internal_metadata_.Clear();
}

bool PlayerPreEnterMpNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerPreEnterMpNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.PlayerPreEnterMpNotify.State state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::proto::PlayerPreEnterMpNotify_State >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nickname = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerPreEnterMpNotify.nickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uid = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerPreEnterMpNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerPreEnterMpNotify)
  return false;
#undef DO_
}

void PlayerPreEnterMpNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerPreEnterMpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.PlayerPreEnterMpNotify.State state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  // string nickname = 6;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerPreEnterMpNotify.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->nickname(), output);
  }

  // uint32 uid = 14;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerPreEnterMpNotify)
}

::google::protobuf::uint8* PlayerPreEnterMpNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerPreEnterMpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.PlayerPreEnterMpNotify.State state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  // string nickname = 6;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerPreEnterMpNotify.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->nickname(), target);
  }

  // uint32 uid = 14;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerPreEnterMpNotify)
  return target;
}

size_t PlayerPreEnterMpNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerPreEnterMpNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string nickname = 6;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  // .proto.PlayerPreEnterMpNotify.State state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // uint32 uid = 14;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerPreEnterMpNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerPreEnterMpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerPreEnterMpNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerPreEnterMpNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerPreEnterMpNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerPreEnterMpNotify)
    MergeFrom(*source);
  }
}

void PlayerPreEnterMpNotify::MergeFrom(const PlayerPreEnterMpNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerPreEnterMpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void PlayerPreEnterMpNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerPreEnterMpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerPreEnterMpNotify::CopyFrom(const PlayerPreEnterMpNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerPreEnterMpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerPreEnterMpNotify::IsInitialized() const {
  return true;
}

void PlayerPreEnterMpNotify::Swap(PlayerPreEnterMpNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerPreEnterMpNotify::InternalSwap(PlayerPreEnterMpNotify* other) {
  using std::swap;
  nickname_.Swap(&other->nickname_);
  swap(state_, other->state_);
  swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerPreEnterMpNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerPreEnterMpNotify

// .proto.PlayerPreEnterMpNotify.State state = 2;
void PlayerPreEnterMpNotify::clear_state() {
  state_ = 0;
}
::proto::PlayerPreEnterMpNotify_State PlayerPreEnterMpNotify::state() const {
  // @@protoc_insertion_point(field_get:proto.PlayerPreEnterMpNotify.state)
  return static_cast< ::proto::PlayerPreEnterMpNotify_State >(state_);
}
void PlayerPreEnterMpNotify::set_state(::proto::PlayerPreEnterMpNotify_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerPreEnterMpNotify.state)
}

// uint32 uid = 14;
void PlayerPreEnterMpNotify::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 PlayerPreEnterMpNotify::uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerPreEnterMpNotify.uid)
  return uid_;
}
void PlayerPreEnterMpNotify::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerPreEnterMpNotify.uid)
}

// string nickname = 6;
void PlayerPreEnterMpNotify::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerPreEnterMpNotify::nickname() const {
  // @@protoc_insertion_point(field_get:proto.PlayerPreEnterMpNotify.nickname)
  return nickname_.GetNoArena();
}
void PlayerPreEnterMpNotify::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerPreEnterMpNotify.nickname)
}
#if LANG_CXX11
void PlayerPreEnterMpNotify::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerPreEnterMpNotify.nickname)
}
#endif
void PlayerPreEnterMpNotify::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerPreEnterMpNotify.nickname)
}
void PlayerPreEnterMpNotify::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerPreEnterMpNotify.nickname)
}
::std::string* PlayerPreEnterMpNotify::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerPreEnterMpNotify.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerPreEnterMpNotify::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.PlayerPreEnterMpNotify.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerPreEnterMpNotify::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerPreEnterMpNotify.nickname)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPlayerMpModeAvailabilityReq::GetPlayerMpModeAvailabilityReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetPlayerMpModeAvailabilityReq)
}
GetPlayerMpModeAvailabilityReq::GetPlayerMpModeAvailabilityReq(const GetPlayerMpModeAvailabilityReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GetPlayerMpModeAvailabilityReq)
}

void GetPlayerMpModeAvailabilityReq::SharedCtor() {
  _cached_size_ = 0;
}

GetPlayerMpModeAvailabilityReq::~GetPlayerMpModeAvailabilityReq() {
  // @@protoc_insertion_point(destructor:proto.GetPlayerMpModeAvailabilityReq)
  SharedDtor();
}

void GetPlayerMpModeAvailabilityReq::SharedDtor() {
}

void GetPlayerMpModeAvailabilityReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPlayerMpModeAvailabilityReq::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPlayerMpModeAvailabilityReq& GetPlayerMpModeAvailabilityReq::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetPlayerMpModeAvailabilityReq* GetPlayerMpModeAvailabilityReq::New(::google::protobuf::Arena* arena) const {
  GetPlayerMpModeAvailabilityReq* n = new GetPlayerMpModeAvailabilityReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPlayerMpModeAvailabilityReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetPlayerMpModeAvailabilityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetPlayerMpModeAvailabilityReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetPlayerMpModeAvailabilityReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetPlayerMpModeAvailabilityReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetPlayerMpModeAvailabilityReq)
  return false;
#undef DO_
}

void GetPlayerMpModeAvailabilityReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetPlayerMpModeAvailabilityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetPlayerMpModeAvailabilityReq)
}

::google::protobuf::uint8* GetPlayerMpModeAvailabilityReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetPlayerMpModeAvailabilityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetPlayerMpModeAvailabilityReq)
  return target;
}

size_t GetPlayerMpModeAvailabilityReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetPlayerMpModeAvailabilityReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPlayerMpModeAvailabilityReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetPlayerMpModeAvailabilityReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPlayerMpModeAvailabilityReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPlayerMpModeAvailabilityReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetPlayerMpModeAvailabilityReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetPlayerMpModeAvailabilityReq)
    MergeFrom(*source);
  }
}

void GetPlayerMpModeAvailabilityReq::MergeFrom(const GetPlayerMpModeAvailabilityReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetPlayerMpModeAvailabilityReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetPlayerMpModeAvailabilityReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetPlayerMpModeAvailabilityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPlayerMpModeAvailabilityReq::CopyFrom(const GetPlayerMpModeAvailabilityReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetPlayerMpModeAvailabilityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPlayerMpModeAvailabilityReq::IsInitialized() const {
  return true;
}

void GetPlayerMpModeAvailabilityReq::Swap(GetPlayerMpModeAvailabilityReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPlayerMpModeAvailabilityReq::InternalSwap(GetPlayerMpModeAvailabilityReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPlayerMpModeAvailabilityReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPlayerMpModeAvailabilityReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPlayerMpModeAvailabilityRsp::kMpRetFieldNumber;
const int GetPlayerMpModeAvailabilityRsp::kRetcodeFieldNumber;
const int GetPlayerMpModeAvailabilityRsp::kParamListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPlayerMpModeAvailabilityRsp::GetPlayerMpModeAvailabilityRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetPlayerMpModeAvailabilityRsp)
}
GetPlayerMpModeAvailabilityRsp::GetPlayerMpModeAvailabilityRsp(const GetPlayerMpModeAvailabilityRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      param_list_(from.param_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&mp_ret_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(mp_ret_));
  // @@protoc_insertion_point(copy_constructor:proto.GetPlayerMpModeAvailabilityRsp)
}

void GetPlayerMpModeAvailabilityRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mp_ret_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(mp_ret_));
  _cached_size_ = 0;
}

GetPlayerMpModeAvailabilityRsp::~GetPlayerMpModeAvailabilityRsp() {
  // @@protoc_insertion_point(destructor:proto.GetPlayerMpModeAvailabilityRsp)
  SharedDtor();
}

void GetPlayerMpModeAvailabilityRsp::SharedDtor() {
}

void GetPlayerMpModeAvailabilityRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPlayerMpModeAvailabilityRsp::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPlayerMpModeAvailabilityRsp& GetPlayerMpModeAvailabilityRsp::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetPlayerMpModeAvailabilityRsp* GetPlayerMpModeAvailabilityRsp::New(::google::protobuf::Arena* arena) const {
  GetPlayerMpModeAvailabilityRsp* n = new GetPlayerMpModeAvailabilityRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPlayerMpModeAvailabilityRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetPlayerMpModeAvailabilityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mp_ret_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(mp_ret_));
  _internal_metadata_.Clear();
}

bool GetPlayerMpModeAvailabilityRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetPlayerMpModeAvailabilityRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 param_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_param_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 66u, input, this->mutable_param_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mp_ret = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mp_ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetPlayerMpModeAvailabilityRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetPlayerMpModeAvailabilityRsp)
  return false;
#undef DO_
}

void GetPlayerMpModeAvailabilityRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetPlayerMpModeAvailabilityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 2;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->retcode(), output);
  }

  // repeated uint32 param_list = 8;
  if (this->param_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _param_list_cached_byte_size_));
  }
  for (int i = 0, n = this->param_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->param_list(i), output);
  }

  // int32 mp_ret = 15;
  if (this->mp_ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->mp_ret(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetPlayerMpModeAvailabilityRsp)
}

::google::protobuf::uint8* GetPlayerMpModeAvailabilityRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetPlayerMpModeAvailabilityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 2;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->retcode(), target);
  }

  // repeated uint32 param_list = 8;
  if (this->param_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _param_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->param_list_, target);
  }

  // int32 mp_ret = 15;
  if (this->mp_ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->mp_ret(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetPlayerMpModeAvailabilityRsp)
  return target;
}

size_t GetPlayerMpModeAvailabilityRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetPlayerMpModeAvailabilityRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 param_list = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->param_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _param_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 retcode = 2;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // int32 mp_ret = 15;
  if (this->mp_ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mp_ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPlayerMpModeAvailabilityRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetPlayerMpModeAvailabilityRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPlayerMpModeAvailabilityRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPlayerMpModeAvailabilityRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetPlayerMpModeAvailabilityRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetPlayerMpModeAvailabilityRsp)
    MergeFrom(*source);
  }
}

void GetPlayerMpModeAvailabilityRsp::MergeFrom(const GetPlayerMpModeAvailabilityRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetPlayerMpModeAvailabilityRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  param_list_.MergeFrom(from.param_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.mp_ret() != 0) {
    set_mp_ret(from.mp_ret());
  }
}

void GetPlayerMpModeAvailabilityRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetPlayerMpModeAvailabilityRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPlayerMpModeAvailabilityRsp::CopyFrom(const GetPlayerMpModeAvailabilityRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetPlayerMpModeAvailabilityRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPlayerMpModeAvailabilityRsp::IsInitialized() const {
  return true;
}

void GetPlayerMpModeAvailabilityRsp::Swap(GetPlayerMpModeAvailabilityRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPlayerMpModeAvailabilityRsp::InternalSwap(GetPlayerMpModeAvailabilityRsp* other) {
  using std::swap;
  param_list_.InternalSwap(&other->param_list_);
  swap(retcode_, other->retcode_);
  swap(mp_ret_, other->mp_ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPlayerMpModeAvailabilityRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPlayerMpModeAvailabilityRsp

// int32 mp_ret = 15;
void GetPlayerMpModeAvailabilityRsp::clear_mp_ret() {
  mp_ret_ = 0;
}
::google::protobuf::int32 GetPlayerMpModeAvailabilityRsp::mp_ret() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerMpModeAvailabilityRsp.mp_ret)
  return mp_ret_;
}
void GetPlayerMpModeAvailabilityRsp::set_mp_ret(::google::protobuf::int32 value) {
  
  mp_ret_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerMpModeAvailabilityRsp.mp_ret)
}

// int32 retcode = 2;
void GetPlayerMpModeAvailabilityRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetPlayerMpModeAvailabilityRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerMpModeAvailabilityRsp.retcode)
  return retcode_;
}
void GetPlayerMpModeAvailabilityRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerMpModeAvailabilityRsp.retcode)
}

// repeated uint32 param_list = 8;
int GetPlayerMpModeAvailabilityRsp::param_list_size() const {
  return param_list_.size();
}
void GetPlayerMpModeAvailabilityRsp::clear_param_list() {
  param_list_.Clear();
}
::google::protobuf::uint32 GetPlayerMpModeAvailabilityRsp::param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerMpModeAvailabilityRsp.param_list)
  return param_list_.Get(index);
}
void GetPlayerMpModeAvailabilityRsp::set_param_list(int index, ::google::protobuf::uint32 value) {
  param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerMpModeAvailabilityRsp.param_list)
}
void GetPlayerMpModeAvailabilityRsp::add_param_list(::google::protobuf::uint32 value) {
  param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetPlayerMpModeAvailabilityRsp.param_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetPlayerMpModeAvailabilityRsp::param_list() const {
  // @@protoc_insertion_point(field_list:proto.GetPlayerMpModeAvailabilityRsp.param_list)
  return param_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetPlayerMpModeAvailabilityRsp::mutable_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetPlayerMpModeAvailabilityRsp.param_list)
  return &param_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerSetOnlyMPWithPSPlayerReq::kIsOnlyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerSetOnlyMPWithPSPlayerReq::PlayerSetOnlyMPWithPSPlayerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerSetOnlyMPWithPSPlayerReq)
}
PlayerSetOnlyMPWithPSPlayerReq::PlayerSetOnlyMPWithPSPlayerReq(const PlayerSetOnlyMPWithPSPlayerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_only_ = from.is_only_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerSetOnlyMPWithPSPlayerReq)
}

void PlayerSetOnlyMPWithPSPlayerReq::SharedCtor() {
  is_only_ = false;
  _cached_size_ = 0;
}

PlayerSetOnlyMPWithPSPlayerReq::~PlayerSetOnlyMPWithPSPlayerReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerSetOnlyMPWithPSPlayerReq)
  SharedDtor();
}

void PlayerSetOnlyMPWithPSPlayerReq::SharedDtor() {
}

void PlayerSetOnlyMPWithPSPlayerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerSetOnlyMPWithPSPlayerReq::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerSetOnlyMPWithPSPlayerReq& PlayerSetOnlyMPWithPSPlayerReq::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerSetOnlyMPWithPSPlayerReq* PlayerSetOnlyMPWithPSPlayerReq::New(::google::protobuf::Arena* arena) const {
  PlayerSetOnlyMPWithPSPlayerReq* n = new PlayerSetOnlyMPWithPSPlayerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerSetOnlyMPWithPSPlayerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerSetOnlyMPWithPSPlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_only_ = false;
  _internal_metadata_.Clear();
}

bool PlayerSetOnlyMPWithPSPlayerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerSetOnlyMPWithPSPlayerReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_only = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerSetOnlyMPWithPSPlayerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerSetOnlyMPWithPSPlayerReq)
  return false;
#undef DO_
}

void PlayerSetOnlyMPWithPSPlayerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerSetOnlyMPWithPSPlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_only = 13;
  if (this->is_only() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->is_only(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerSetOnlyMPWithPSPlayerReq)
}

::google::protobuf::uint8* PlayerSetOnlyMPWithPSPlayerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerSetOnlyMPWithPSPlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_only = 13;
  if (this->is_only() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->is_only(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerSetOnlyMPWithPSPlayerReq)
  return target;
}

size_t PlayerSetOnlyMPWithPSPlayerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerSetOnlyMPWithPSPlayerReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_only = 13;
  if (this->is_only() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerSetOnlyMPWithPSPlayerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerSetOnlyMPWithPSPlayerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerSetOnlyMPWithPSPlayerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerSetOnlyMPWithPSPlayerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerSetOnlyMPWithPSPlayerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerSetOnlyMPWithPSPlayerReq)
    MergeFrom(*source);
  }
}

void PlayerSetOnlyMPWithPSPlayerReq::MergeFrom(const PlayerSetOnlyMPWithPSPlayerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerSetOnlyMPWithPSPlayerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_only() != 0) {
    set_is_only(from.is_only());
  }
}

void PlayerSetOnlyMPWithPSPlayerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerSetOnlyMPWithPSPlayerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerSetOnlyMPWithPSPlayerReq::CopyFrom(const PlayerSetOnlyMPWithPSPlayerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerSetOnlyMPWithPSPlayerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerSetOnlyMPWithPSPlayerReq::IsInitialized() const {
  return true;
}

void PlayerSetOnlyMPWithPSPlayerReq::Swap(PlayerSetOnlyMPWithPSPlayerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerSetOnlyMPWithPSPlayerReq::InternalSwap(PlayerSetOnlyMPWithPSPlayerReq* other) {
  using std::swap;
  swap(is_only_, other->is_only_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerSetOnlyMPWithPSPlayerReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerSetOnlyMPWithPSPlayerReq

// bool is_only = 13;
void PlayerSetOnlyMPWithPSPlayerReq::clear_is_only() {
  is_only_ = false;
}
bool PlayerSetOnlyMPWithPSPlayerReq::is_only() const {
  // @@protoc_insertion_point(field_get:proto.PlayerSetOnlyMPWithPSPlayerReq.is_only)
  return is_only_;
}
void PlayerSetOnlyMPWithPSPlayerReq::set_is_only(bool value) {
  
  is_only_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerSetOnlyMPWithPSPlayerReq.is_only)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerSetOnlyMPWithPSPlayerRsp::kRetcodeFieldNumber;
const int PlayerSetOnlyMPWithPSPlayerRsp::kIsOnlyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerSetOnlyMPWithPSPlayerRsp::PlayerSetOnlyMPWithPSPlayerRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerSetOnlyMPWithPSPlayerRsp)
}
PlayerSetOnlyMPWithPSPlayerRsp::PlayerSetOnlyMPWithPSPlayerRsp(const PlayerSetOnlyMPWithPSPlayerRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_only_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(is_only_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerSetOnlyMPWithPSPlayerRsp)
}

void PlayerSetOnlyMPWithPSPlayerRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_only_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(is_only_));
  _cached_size_ = 0;
}

PlayerSetOnlyMPWithPSPlayerRsp::~PlayerSetOnlyMPWithPSPlayerRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerSetOnlyMPWithPSPlayerRsp)
  SharedDtor();
}

void PlayerSetOnlyMPWithPSPlayerRsp::SharedDtor() {
}

void PlayerSetOnlyMPWithPSPlayerRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerSetOnlyMPWithPSPlayerRsp::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerSetOnlyMPWithPSPlayerRsp& PlayerSetOnlyMPWithPSPlayerRsp::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerSetOnlyMPWithPSPlayerRsp* PlayerSetOnlyMPWithPSPlayerRsp::New(::google::protobuf::Arena* arena) const {
  PlayerSetOnlyMPWithPSPlayerRsp* n = new PlayerSetOnlyMPWithPSPlayerRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerSetOnlyMPWithPSPlayerRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerSetOnlyMPWithPSPlayerRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_only_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(is_only_));
  _internal_metadata_.Clear();
}

bool PlayerSetOnlyMPWithPSPlayerRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerSetOnlyMPWithPSPlayerRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_only = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerSetOnlyMPWithPSPlayerRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerSetOnlyMPWithPSPlayerRsp)
  return false;
#undef DO_
}

void PlayerSetOnlyMPWithPSPlayerRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerSetOnlyMPWithPSPlayerRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->retcode(), output);
  }

  // bool is_only = 8;
  if (this->is_only() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_only(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerSetOnlyMPWithPSPlayerRsp)
}

::google::protobuf::uint8* PlayerSetOnlyMPWithPSPlayerRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerSetOnlyMPWithPSPlayerRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->retcode(), target);
  }

  // bool is_only = 8;
  if (this->is_only() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_only(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerSetOnlyMPWithPSPlayerRsp)
  return target;
}

size_t PlayerSetOnlyMPWithPSPlayerRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerSetOnlyMPWithPSPlayerRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 5;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // bool is_only = 8;
  if (this->is_only() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerSetOnlyMPWithPSPlayerRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerSetOnlyMPWithPSPlayerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerSetOnlyMPWithPSPlayerRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerSetOnlyMPWithPSPlayerRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerSetOnlyMPWithPSPlayerRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerSetOnlyMPWithPSPlayerRsp)
    MergeFrom(*source);
  }
}

void PlayerSetOnlyMPWithPSPlayerRsp::MergeFrom(const PlayerSetOnlyMPWithPSPlayerRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerSetOnlyMPWithPSPlayerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.is_only() != 0) {
    set_is_only(from.is_only());
  }
}

void PlayerSetOnlyMPWithPSPlayerRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerSetOnlyMPWithPSPlayerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerSetOnlyMPWithPSPlayerRsp::CopyFrom(const PlayerSetOnlyMPWithPSPlayerRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerSetOnlyMPWithPSPlayerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerSetOnlyMPWithPSPlayerRsp::IsInitialized() const {
  return true;
}

void PlayerSetOnlyMPWithPSPlayerRsp::Swap(PlayerSetOnlyMPWithPSPlayerRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerSetOnlyMPWithPSPlayerRsp::InternalSwap(PlayerSetOnlyMPWithPSPlayerRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(is_only_, other->is_only_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerSetOnlyMPWithPSPlayerRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerSetOnlyMPWithPSPlayerRsp

// int32 retcode = 5;
void PlayerSetOnlyMPWithPSPlayerRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PlayerSetOnlyMPWithPSPlayerRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerSetOnlyMPWithPSPlayerRsp.retcode)
  return retcode_;
}
void PlayerSetOnlyMPWithPSPlayerRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerSetOnlyMPWithPSPlayerRsp.retcode)
}

// bool is_only = 8;
void PlayerSetOnlyMPWithPSPlayerRsp::clear_is_only() {
  is_only_ = false;
}
bool PlayerSetOnlyMPWithPSPlayerRsp::is_only() const {
  // @@protoc_insertion_point(field_get:proto.PlayerSetOnlyMPWithPSPlayerRsp.is_only)
  return is_only_;
}
void PlayerSetOnlyMPWithPSPlayerRsp::set_is_only(bool value) {
  
  is_only_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerSetOnlyMPWithPSPlayerRsp.is_only)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PSPlayerApplyEnterMpReq::kTargetPsnIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PSPlayerApplyEnterMpReq::PSPlayerApplyEnterMpReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PSPlayerApplyEnterMpReq)
}
PSPlayerApplyEnterMpReq::PSPlayerApplyEnterMpReq(const PSPlayerApplyEnterMpReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_psn_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_psn_id().size() > 0) {
    target_psn_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_psn_id_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.PSPlayerApplyEnterMpReq)
}

void PSPlayerApplyEnterMpReq::SharedCtor() {
  target_psn_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PSPlayerApplyEnterMpReq::~PSPlayerApplyEnterMpReq() {
  // @@protoc_insertion_point(destructor:proto.PSPlayerApplyEnterMpReq)
  SharedDtor();
}

void PSPlayerApplyEnterMpReq::SharedDtor() {
  target_psn_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PSPlayerApplyEnterMpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSPlayerApplyEnterMpReq::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PSPlayerApplyEnterMpReq& PSPlayerApplyEnterMpReq::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

PSPlayerApplyEnterMpReq* PSPlayerApplyEnterMpReq::New(::google::protobuf::Arena* arena) const {
  PSPlayerApplyEnterMpReq* n = new PSPlayerApplyEnterMpReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PSPlayerApplyEnterMpReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PSPlayerApplyEnterMpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_psn_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PSPlayerApplyEnterMpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PSPlayerApplyEnterMpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string target_psn_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_psn_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_psn_id().data(), static_cast<int>(this->target_psn_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PSPlayerApplyEnterMpReq.target_psn_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PSPlayerApplyEnterMpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PSPlayerApplyEnterMpReq)
  return false;
#undef DO_
}

void PSPlayerApplyEnterMpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PSPlayerApplyEnterMpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_psn_id = 5;
  if (this->target_psn_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_psn_id().data(), static_cast<int>(this->target_psn_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PSPlayerApplyEnterMpReq.target_psn_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->target_psn_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PSPlayerApplyEnterMpReq)
}

::google::protobuf::uint8* PSPlayerApplyEnterMpReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PSPlayerApplyEnterMpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_psn_id = 5;
  if (this->target_psn_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_psn_id().data(), static_cast<int>(this->target_psn_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PSPlayerApplyEnterMpReq.target_psn_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->target_psn_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PSPlayerApplyEnterMpReq)
  return target;
}

size_t PSPlayerApplyEnterMpReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PSPlayerApplyEnterMpReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string target_psn_id = 5;
  if (this->target_psn_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_psn_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSPlayerApplyEnterMpReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PSPlayerApplyEnterMpReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PSPlayerApplyEnterMpReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PSPlayerApplyEnterMpReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PSPlayerApplyEnterMpReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PSPlayerApplyEnterMpReq)
    MergeFrom(*source);
  }
}

void PSPlayerApplyEnterMpReq::MergeFrom(const PSPlayerApplyEnterMpReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PSPlayerApplyEnterMpReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_psn_id().size() > 0) {

    target_psn_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_psn_id_);
  }
}

void PSPlayerApplyEnterMpReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PSPlayerApplyEnterMpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSPlayerApplyEnterMpReq::CopyFrom(const PSPlayerApplyEnterMpReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PSPlayerApplyEnterMpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSPlayerApplyEnterMpReq::IsInitialized() const {
  return true;
}

void PSPlayerApplyEnterMpReq::Swap(PSPlayerApplyEnterMpReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PSPlayerApplyEnterMpReq::InternalSwap(PSPlayerApplyEnterMpReq* other) {
  using std::swap;
  target_psn_id_.Swap(&other->target_psn_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PSPlayerApplyEnterMpReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PSPlayerApplyEnterMpReq

// string target_psn_id = 5;
void PSPlayerApplyEnterMpReq::clear_target_psn_id() {
  target_psn_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PSPlayerApplyEnterMpReq::target_psn_id() const {
  // @@protoc_insertion_point(field_get:proto.PSPlayerApplyEnterMpReq.target_psn_id)
  return target_psn_id_.GetNoArena();
}
void PSPlayerApplyEnterMpReq::set_target_psn_id(const ::std::string& value) {
  
  target_psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PSPlayerApplyEnterMpReq.target_psn_id)
}
#if LANG_CXX11
void PSPlayerApplyEnterMpReq::set_target_psn_id(::std::string&& value) {
  
  target_psn_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PSPlayerApplyEnterMpReq.target_psn_id)
}
#endif
void PSPlayerApplyEnterMpReq::set_target_psn_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  target_psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PSPlayerApplyEnterMpReq.target_psn_id)
}
void PSPlayerApplyEnterMpReq::set_target_psn_id(const char* value, size_t size) {
  
  target_psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PSPlayerApplyEnterMpReq.target_psn_id)
}
::std::string* PSPlayerApplyEnterMpReq::mutable_target_psn_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.PSPlayerApplyEnterMpReq.target_psn_id)
  return target_psn_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PSPlayerApplyEnterMpReq::release_target_psn_id() {
  // @@protoc_insertion_point(field_release:proto.PSPlayerApplyEnterMpReq.target_psn_id)
  
  return target_psn_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PSPlayerApplyEnterMpReq::set_allocated_target_psn_id(::std::string* target_psn_id) {
  if (target_psn_id != NULL) {
    
  } else {
    
  }
  target_psn_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_psn_id);
  // @@protoc_insertion_point(field_set_allocated:proto.PSPlayerApplyEnterMpReq.target_psn_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PSPlayerApplyEnterMpRsp::kTargetPsnIdFieldNumber;
const int PSPlayerApplyEnterMpRsp::kRetcodeFieldNumber;
const int PSPlayerApplyEnterMpRsp::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PSPlayerApplyEnterMpRsp::PSPlayerApplyEnterMpRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PSPlayerApplyEnterMpRsp)
}
PSPlayerApplyEnterMpRsp::PSPlayerApplyEnterMpRsp(const PSPlayerApplyEnterMpRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_psn_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_psn_id().size() > 0) {
    target_psn_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_psn_id_);
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&param_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(param_));
  // @@protoc_insertion_point(copy_constructor:proto.PSPlayerApplyEnterMpRsp)
}

void PSPlayerApplyEnterMpRsp::SharedCtor() {
  target_psn_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(param_));
  _cached_size_ = 0;
}

PSPlayerApplyEnterMpRsp::~PSPlayerApplyEnterMpRsp() {
  // @@protoc_insertion_point(destructor:proto.PSPlayerApplyEnterMpRsp)
  SharedDtor();
}

void PSPlayerApplyEnterMpRsp::SharedDtor() {
  target_psn_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PSPlayerApplyEnterMpRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSPlayerApplyEnterMpRsp::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PSPlayerApplyEnterMpRsp& PSPlayerApplyEnterMpRsp::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

PSPlayerApplyEnterMpRsp* PSPlayerApplyEnterMpRsp::New(::google::protobuf::Arena* arena) const {
  PSPlayerApplyEnterMpRsp* n = new PSPlayerApplyEnterMpRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PSPlayerApplyEnterMpRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PSPlayerApplyEnterMpRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_psn_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(param_));
  _internal_metadata_.Clear();
}

bool PSPlayerApplyEnterMpRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PSPlayerApplyEnterMpRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string target_psn_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_psn_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_psn_id().data(), static_cast<int>(this->target_psn_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PSPlayerApplyEnterMpRsp.target_psn_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 param = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PSPlayerApplyEnterMpRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PSPlayerApplyEnterMpRsp)
  return false;
#undef DO_
}

void PSPlayerApplyEnterMpRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PSPlayerApplyEnterMpRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_psn_id = 2;
  if (this->target_psn_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_psn_id().data(), static_cast<int>(this->target_psn_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PSPlayerApplyEnterMpRsp.target_psn_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->target_psn_id(), output);
  }

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->retcode(), output);
  }

  // uint32 param = 10;
  if (this->param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->param(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PSPlayerApplyEnterMpRsp)
}

::google::protobuf::uint8* PSPlayerApplyEnterMpRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PSPlayerApplyEnterMpRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_psn_id = 2;
  if (this->target_psn_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_psn_id().data(), static_cast<int>(this->target_psn_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PSPlayerApplyEnterMpRsp.target_psn_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->target_psn_id(), target);
  }

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->retcode(), target);
  }

  // uint32 param = 10;
  if (this->param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->param(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PSPlayerApplyEnterMpRsp)
  return target;
}

size_t PSPlayerApplyEnterMpRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PSPlayerApplyEnterMpRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string target_psn_id = 2;
  if (this->target_psn_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_psn_id());
  }

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 param = 10;
  if (this->param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->param());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSPlayerApplyEnterMpRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PSPlayerApplyEnterMpRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PSPlayerApplyEnterMpRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PSPlayerApplyEnterMpRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PSPlayerApplyEnterMpRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PSPlayerApplyEnterMpRsp)
    MergeFrom(*source);
  }
}

void PSPlayerApplyEnterMpRsp::MergeFrom(const PSPlayerApplyEnterMpRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PSPlayerApplyEnterMpRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_psn_id().size() > 0) {

    target_psn_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_psn_id_);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.param() != 0) {
    set_param(from.param());
  }
}

void PSPlayerApplyEnterMpRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PSPlayerApplyEnterMpRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSPlayerApplyEnterMpRsp::CopyFrom(const PSPlayerApplyEnterMpRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PSPlayerApplyEnterMpRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSPlayerApplyEnterMpRsp::IsInitialized() const {
  return true;
}

void PSPlayerApplyEnterMpRsp::Swap(PSPlayerApplyEnterMpRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PSPlayerApplyEnterMpRsp::InternalSwap(PSPlayerApplyEnterMpRsp* other) {
  using std::swap;
  target_psn_id_.Swap(&other->target_psn_id_);
  swap(retcode_, other->retcode_);
  swap(param_, other->param_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PSPlayerApplyEnterMpRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PSPlayerApplyEnterMpRsp

// string target_psn_id = 2;
void PSPlayerApplyEnterMpRsp::clear_target_psn_id() {
  target_psn_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PSPlayerApplyEnterMpRsp::target_psn_id() const {
  // @@protoc_insertion_point(field_get:proto.PSPlayerApplyEnterMpRsp.target_psn_id)
  return target_psn_id_.GetNoArena();
}
void PSPlayerApplyEnterMpRsp::set_target_psn_id(const ::std::string& value) {
  
  target_psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PSPlayerApplyEnterMpRsp.target_psn_id)
}
#if LANG_CXX11
void PSPlayerApplyEnterMpRsp::set_target_psn_id(::std::string&& value) {
  
  target_psn_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PSPlayerApplyEnterMpRsp.target_psn_id)
}
#endif
void PSPlayerApplyEnterMpRsp::set_target_psn_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  target_psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PSPlayerApplyEnterMpRsp.target_psn_id)
}
void PSPlayerApplyEnterMpRsp::set_target_psn_id(const char* value, size_t size) {
  
  target_psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PSPlayerApplyEnterMpRsp.target_psn_id)
}
::std::string* PSPlayerApplyEnterMpRsp::mutable_target_psn_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.PSPlayerApplyEnterMpRsp.target_psn_id)
  return target_psn_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PSPlayerApplyEnterMpRsp::release_target_psn_id() {
  // @@protoc_insertion_point(field_release:proto.PSPlayerApplyEnterMpRsp.target_psn_id)
  
  return target_psn_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PSPlayerApplyEnterMpRsp::set_allocated_target_psn_id(::std::string* target_psn_id) {
  if (target_psn_id != NULL) {
    
  } else {
    
  }
  target_psn_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_psn_id);
  // @@protoc_insertion_point(field_set_allocated:proto.PSPlayerApplyEnterMpRsp.target_psn_id)
}

// int32 retcode = 6;
void PSPlayerApplyEnterMpRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PSPlayerApplyEnterMpRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PSPlayerApplyEnterMpRsp.retcode)
  return retcode_;
}
void PSPlayerApplyEnterMpRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PSPlayerApplyEnterMpRsp.retcode)
}

// uint32 param = 10;
void PSPlayerApplyEnterMpRsp::clear_param() {
  param_ = 0u;
}
::google::protobuf::uint32 PSPlayerApplyEnterMpRsp::param() const {
  // @@protoc_insertion_point(field_get:proto.PSPlayerApplyEnterMpRsp.param)
  return param_;
}
void PSPlayerApplyEnterMpRsp::set_param(::google::protobuf::uint32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:proto.PSPlayerApplyEnterMpRsp.param)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MpPlayOwnerCheckReq::kMpPlayIdFieldNumber;
const int MpPlayOwnerCheckReq::kIsSkipMatchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MpPlayOwnerCheckReq::MpPlayOwnerCheckReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MpPlayOwnerCheckReq)
}
MpPlayOwnerCheckReq::MpPlayOwnerCheckReq(const MpPlayOwnerCheckReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_skip_match_, &from.is_skip_match_,
    static_cast<size_t>(reinterpret_cast<char*>(&mp_play_id_) -
    reinterpret_cast<char*>(&is_skip_match_)) + sizeof(mp_play_id_));
  // @@protoc_insertion_point(copy_constructor:proto.MpPlayOwnerCheckReq)
}

void MpPlayOwnerCheckReq::SharedCtor() {
  ::memset(&is_skip_match_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mp_play_id_) -
      reinterpret_cast<char*>(&is_skip_match_)) + sizeof(mp_play_id_));
  _cached_size_ = 0;
}

MpPlayOwnerCheckReq::~MpPlayOwnerCheckReq() {
  // @@protoc_insertion_point(destructor:proto.MpPlayOwnerCheckReq)
  SharedDtor();
}

void MpPlayOwnerCheckReq::SharedDtor() {
}

void MpPlayOwnerCheckReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MpPlayOwnerCheckReq::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MpPlayOwnerCheckReq& MpPlayOwnerCheckReq::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

MpPlayOwnerCheckReq* MpPlayOwnerCheckReq::New(::google::protobuf::Arena* arena) const {
  MpPlayOwnerCheckReq* n = new MpPlayOwnerCheckReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MpPlayOwnerCheckReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MpPlayOwnerCheckReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&is_skip_match_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mp_play_id_) -
      reinterpret_cast<char*>(&is_skip_match_)) + sizeof(mp_play_id_));
  _internal_metadata_.Clear();
}

bool MpPlayOwnerCheckReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MpPlayOwnerCheckReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_skip_match = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_skip_match_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mp_play_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mp_play_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MpPlayOwnerCheckReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MpPlayOwnerCheckReq)
  return false;
#undef DO_
}

void MpPlayOwnerCheckReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MpPlayOwnerCheckReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_skip_match = 3;
  if (this->is_skip_match() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_skip_match(), output);
  }

  // uint32 mp_play_id = 9;
  if (this->mp_play_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->mp_play_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MpPlayOwnerCheckReq)
}

::google::protobuf::uint8* MpPlayOwnerCheckReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MpPlayOwnerCheckReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_skip_match = 3;
  if (this->is_skip_match() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_skip_match(), target);
  }

  // uint32 mp_play_id = 9;
  if (this->mp_play_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->mp_play_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MpPlayOwnerCheckReq)
  return target;
}

size_t MpPlayOwnerCheckReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MpPlayOwnerCheckReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_skip_match = 3;
  if (this->is_skip_match() != 0) {
    total_size += 1 + 1;
  }

  // uint32 mp_play_id = 9;
  if (this->mp_play_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mp_play_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MpPlayOwnerCheckReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MpPlayOwnerCheckReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MpPlayOwnerCheckReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MpPlayOwnerCheckReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MpPlayOwnerCheckReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MpPlayOwnerCheckReq)
    MergeFrom(*source);
  }
}

void MpPlayOwnerCheckReq::MergeFrom(const MpPlayOwnerCheckReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MpPlayOwnerCheckReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_skip_match() != 0) {
    set_is_skip_match(from.is_skip_match());
  }
  if (from.mp_play_id() != 0) {
    set_mp_play_id(from.mp_play_id());
  }
}

void MpPlayOwnerCheckReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MpPlayOwnerCheckReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MpPlayOwnerCheckReq::CopyFrom(const MpPlayOwnerCheckReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MpPlayOwnerCheckReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MpPlayOwnerCheckReq::IsInitialized() const {
  return true;
}

void MpPlayOwnerCheckReq::Swap(MpPlayOwnerCheckReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MpPlayOwnerCheckReq::InternalSwap(MpPlayOwnerCheckReq* other) {
  using std::swap;
  swap(is_skip_match_, other->is_skip_match_);
  swap(mp_play_id_, other->mp_play_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MpPlayOwnerCheckReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MpPlayOwnerCheckReq

// uint32 mp_play_id = 9;
void MpPlayOwnerCheckReq::clear_mp_play_id() {
  mp_play_id_ = 0u;
}
::google::protobuf::uint32 MpPlayOwnerCheckReq::mp_play_id() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayOwnerCheckReq.mp_play_id)
  return mp_play_id_;
}
void MpPlayOwnerCheckReq::set_mp_play_id(::google::protobuf::uint32 value) {
  
  mp_play_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayOwnerCheckReq.mp_play_id)
}

// bool is_skip_match = 3;
void MpPlayOwnerCheckReq::clear_is_skip_match() {
  is_skip_match_ = false;
}
bool MpPlayOwnerCheckReq::is_skip_match() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayOwnerCheckReq.is_skip_match)
  return is_skip_match_;
}
void MpPlayOwnerCheckReq::set_is_skip_match(bool value) {
  
  is_skip_match_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayOwnerCheckReq.is_skip_match)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MpPlayOwnerCheckRsp::kWrongUidFieldNumber;
const int MpPlayOwnerCheckRsp::kIsSkipMatchFieldNumber;
const int MpPlayOwnerCheckRsp::kMpPlayIdFieldNumber;
const int MpPlayOwnerCheckRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MpPlayOwnerCheckRsp::MpPlayOwnerCheckRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MpPlayOwnerCheckRsp)
}
MpPlayOwnerCheckRsp::MpPlayOwnerCheckRsp(const MpPlayOwnerCheckRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&wrong_uid_, &from.wrong_uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_skip_match_) -
    reinterpret_cast<char*>(&wrong_uid_)) + sizeof(is_skip_match_));
  // @@protoc_insertion_point(copy_constructor:proto.MpPlayOwnerCheckRsp)
}

void MpPlayOwnerCheckRsp::SharedCtor() {
  ::memset(&wrong_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_skip_match_) -
      reinterpret_cast<char*>(&wrong_uid_)) + sizeof(is_skip_match_));
  _cached_size_ = 0;
}

MpPlayOwnerCheckRsp::~MpPlayOwnerCheckRsp() {
  // @@protoc_insertion_point(destructor:proto.MpPlayOwnerCheckRsp)
  SharedDtor();
}

void MpPlayOwnerCheckRsp::SharedDtor() {
}

void MpPlayOwnerCheckRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MpPlayOwnerCheckRsp::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MpPlayOwnerCheckRsp& MpPlayOwnerCheckRsp::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

MpPlayOwnerCheckRsp* MpPlayOwnerCheckRsp::New(::google::protobuf::Arena* arena) const {
  MpPlayOwnerCheckRsp* n = new MpPlayOwnerCheckRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MpPlayOwnerCheckRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MpPlayOwnerCheckRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&wrong_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_skip_match_) -
      reinterpret_cast<char*>(&wrong_uid_)) + sizeof(is_skip_match_));
  _internal_metadata_.Clear();
}

bool MpPlayOwnerCheckRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MpPlayOwnerCheckRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 wrong_uid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wrong_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mp_play_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mp_play_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_skip_match = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_skip_match_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MpPlayOwnerCheckRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MpPlayOwnerCheckRsp)
  return false;
#undef DO_
}

void MpPlayOwnerCheckRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MpPlayOwnerCheckRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 wrong_uid = 4;
  if (this->wrong_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->wrong_uid(), output);
  }

  // uint32 mp_play_id = 10;
  if (this->mp_play_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->mp_play_id(), output);
  }

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->retcode(), output);
  }

  // bool is_skip_match = 15;
  if (this->is_skip_match() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->is_skip_match(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MpPlayOwnerCheckRsp)
}

::google::protobuf::uint8* MpPlayOwnerCheckRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MpPlayOwnerCheckRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 wrong_uid = 4;
  if (this->wrong_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->wrong_uid(), target);
  }

  // uint32 mp_play_id = 10;
  if (this->mp_play_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->mp_play_id(), target);
  }

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->retcode(), target);
  }

  // bool is_skip_match = 15;
  if (this->is_skip_match() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->is_skip_match(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MpPlayOwnerCheckRsp)
  return target;
}

size_t MpPlayOwnerCheckRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MpPlayOwnerCheckRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 wrong_uid = 4;
  if (this->wrong_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->wrong_uid());
  }

  // uint32 mp_play_id = 10;
  if (this->mp_play_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mp_play_id());
  }

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // bool is_skip_match = 15;
  if (this->is_skip_match() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MpPlayOwnerCheckRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MpPlayOwnerCheckRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MpPlayOwnerCheckRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MpPlayOwnerCheckRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MpPlayOwnerCheckRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MpPlayOwnerCheckRsp)
    MergeFrom(*source);
  }
}

void MpPlayOwnerCheckRsp::MergeFrom(const MpPlayOwnerCheckRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MpPlayOwnerCheckRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.wrong_uid() != 0) {
    set_wrong_uid(from.wrong_uid());
  }
  if (from.mp_play_id() != 0) {
    set_mp_play_id(from.mp_play_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.is_skip_match() != 0) {
    set_is_skip_match(from.is_skip_match());
  }
}

void MpPlayOwnerCheckRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MpPlayOwnerCheckRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MpPlayOwnerCheckRsp::CopyFrom(const MpPlayOwnerCheckRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MpPlayOwnerCheckRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MpPlayOwnerCheckRsp::IsInitialized() const {
  return true;
}

void MpPlayOwnerCheckRsp::Swap(MpPlayOwnerCheckRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MpPlayOwnerCheckRsp::InternalSwap(MpPlayOwnerCheckRsp* other) {
  using std::swap;
  swap(wrong_uid_, other->wrong_uid_);
  swap(mp_play_id_, other->mp_play_id_);
  swap(retcode_, other->retcode_);
  swap(is_skip_match_, other->is_skip_match_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MpPlayOwnerCheckRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MpPlayOwnerCheckRsp

// uint32 wrong_uid = 4;
void MpPlayOwnerCheckRsp::clear_wrong_uid() {
  wrong_uid_ = 0u;
}
::google::protobuf::uint32 MpPlayOwnerCheckRsp::wrong_uid() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayOwnerCheckRsp.wrong_uid)
  return wrong_uid_;
}
void MpPlayOwnerCheckRsp::set_wrong_uid(::google::protobuf::uint32 value) {
  
  wrong_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayOwnerCheckRsp.wrong_uid)
}

// bool is_skip_match = 15;
void MpPlayOwnerCheckRsp::clear_is_skip_match() {
  is_skip_match_ = false;
}
bool MpPlayOwnerCheckRsp::is_skip_match() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayOwnerCheckRsp.is_skip_match)
  return is_skip_match_;
}
void MpPlayOwnerCheckRsp::set_is_skip_match(bool value) {
  
  is_skip_match_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayOwnerCheckRsp.is_skip_match)
}

// uint32 mp_play_id = 10;
void MpPlayOwnerCheckRsp::clear_mp_play_id() {
  mp_play_id_ = 0u;
}
::google::protobuf::uint32 MpPlayOwnerCheckRsp::mp_play_id() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayOwnerCheckRsp.mp_play_id)
  return mp_play_id_;
}
void MpPlayOwnerCheckRsp::set_mp_play_id(::google::protobuf::uint32 value) {
  
  mp_play_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayOwnerCheckRsp.mp_play_id)
}

// int32 retcode = 12;
void MpPlayOwnerCheckRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 MpPlayOwnerCheckRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayOwnerCheckRsp.retcode)
  return retcode_;
}
void MpPlayOwnerCheckRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayOwnerCheckRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MpPlayOwnerStartInviteReq::kMpPlayIdFieldNumber;
const int MpPlayOwnerStartInviteReq::kIsSkipMatchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MpPlayOwnerStartInviteReq::MpPlayOwnerStartInviteReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MpPlayOwnerStartInviteReq)
}
MpPlayOwnerStartInviteReq::MpPlayOwnerStartInviteReq(const MpPlayOwnerStartInviteReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mp_play_id_, &from.mp_play_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_skip_match_) -
    reinterpret_cast<char*>(&mp_play_id_)) + sizeof(is_skip_match_));
  // @@protoc_insertion_point(copy_constructor:proto.MpPlayOwnerStartInviteReq)
}

void MpPlayOwnerStartInviteReq::SharedCtor() {
  ::memset(&mp_play_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_skip_match_) -
      reinterpret_cast<char*>(&mp_play_id_)) + sizeof(is_skip_match_));
  _cached_size_ = 0;
}

MpPlayOwnerStartInviteReq::~MpPlayOwnerStartInviteReq() {
  // @@protoc_insertion_point(destructor:proto.MpPlayOwnerStartInviteReq)
  SharedDtor();
}

void MpPlayOwnerStartInviteReq::SharedDtor() {
}

void MpPlayOwnerStartInviteReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MpPlayOwnerStartInviteReq::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MpPlayOwnerStartInviteReq& MpPlayOwnerStartInviteReq::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

MpPlayOwnerStartInviteReq* MpPlayOwnerStartInviteReq::New(::google::protobuf::Arena* arena) const {
  MpPlayOwnerStartInviteReq* n = new MpPlayOwnerStartInviteReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MpPlayOwnerStartInviteReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MpPlayOwnerStartInviteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&mp_play_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_skip_match_) -
      reinterpret_cast<char*>(&mp_play_id_)) + sizeof(is_skip_match_));
  _internal_metadata_.Clear();
}

bool MpPlayOwnerStartInviteReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MpPlayOwnerStartInviteReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 mp_play_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mp_play_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_skip_match = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_skip_match_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MpPlayOwnerStartInviteReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MpPlayOwnerStartInviteReq)
  return false;
#undef DO_
}

void MpPlayOwnerStartInviteReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MpPlayOwnerStartInviteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mp_play_id = 3;
  if (this->mp_play_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->mp_play_id(), output);
  }

  // bool is_skip_match = 6;
  if (this->is_skip_match() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_skip_match(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MpPlayOwnerStartInviteReq)
}

::google::protobuf::uint8* MpPlayOwnerStartInviteReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MpPlayOwnerStartInviteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mp_play_id = 3;
  if (this->mp_play_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->mp_play_id(), target);
  }

  // bool is_skip_match = 6;
  if (this->is_skip_match() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_skip_match(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MpPlayOwnerStartInviteReq)
  return target;
}

size_t MpPlayOwnerStartInviteReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MpPlayOwnerStartInviteReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 mp_play_id = 3;
  if (this->mp_play_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mp_play_id());
  }

  // bool is_skip_match = 6;
  if (this->is_skip_match() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MpPlayOwnerStartInviteReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MpPlayOwnerStartInviteReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MpPlayOwnerStartInviteReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MpPlayOwnerStartInviteReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MpPlayOwnerStartInviteReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MpPlayOwnerStartInviteReq)
    MergeFrom(*source);
  }
}

void MpPlayOwnerStartInviteReq::MergeFrom(const MpPlayOwnerStartInviteReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MpPlayOwnerStartInviteReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mp_play_id() != 0) {
    set_mp_play_id(from.mp_play_id());
  }
  if (from.is_skip_match() != 0) {
    set_is_skip_match(from.is_skip_match());
  }
}

void MpPlayOwnerStartInviteReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MpPlayOwnerStartInviteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MpPlayOwnerStartInviteReq::CopyFrom(const MpPlayOwnerStartInviteReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MpPlayOwnerStartInviteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MpPlayOwnerStartInviteReq::IsInitialized() const {
  return true;
}

void MpPlayOwnerStartInviteReq::Swap(MpPlayOwnerStartInviteReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MpPlayOwnerStartInviteReq::InternalSwap(MpPlayOwnerStartInviteReq* other) {
  using std::swap;
  swap(mp_play_id_, other->mp_play_id_);
  swap(is_skip_match_, other->is_skip_match_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MpPlayOwnerStartInviteReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MpPlayOwnerStartInviteReq

// uint32 mp_play_id = 3;
void MpPlayOwnerStartInviteReq::clear_mp_play_id() {
  mp_play_id_ = 0u;
}
::google::protobuf::uint32 MpPlayOwnerStartInviteReq::mp_play_id() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayOwnerStartInviteReq.mp_play_id)
  return mp_play_id_;
}
void MpPlayOwnerStartInviteReq::set_mp_play_id(::google::protobuf::uint32 value) {
  
  mp_play_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayOwnerStartInviteReq.mp_play_id)
}

// bool is_skip_match = 6;
void MpPlayOwnerStartInviteReq::clear_is_skip_match() {
  is_skip_match_ = false;
}
bool MpPlayOwnerStartInviteReq::is_skip_match() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayOwnerStartInviteReq.is_skip_match)
  return is_skip_match_;
}
void MpPlayOwnerStartInviteReq::set_is_skip_match(bool value) {
  
  is_skip_match_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayOwnerStartInviteReq.is_skip_match)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MpPlayOwnerStartInviteRsp::kRetcodeFieldNumber;
const int MpPlayOwnerStartInviteRsp::kMpPlayIdFieldNumber;
const int MpPlayOwnerStartInviteRsp::kIsSkipMatchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MpPlayOwnerStartInviteRsp::MpPlayOwnerStartInviteRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MpPlayOwnerStartInviteRsp)
}
MpPlayOwnerStartInviteRsp::MpPlayOwnerStartInviteRsp(const MpPlayOwnerStartInviteRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_skip_match_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(is_skip_match_));
  // @@protoc_insertion_point(copy_constructor:proto.MpPlayOwnerStartInviteRsp)
}

void MpPlayOwnerStartInviteRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_skip_match_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(is_skip_match_));
  _cached_size_ = 0;
}

MpPlayOwnerStartInviteRsp::~MpPlayOwnerStartInviteRsp() {
  // @@protoc_insertion_point(destructor:proto.MpPlayOwnerStartInviteRsp)
  SharedDtor();
}

void MpPlayOwnerStartInviteRsp::SharedDtor() {
}

void MpPlayOwnerStartInviteRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MpPlayOwnerStartInviteRsp::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MpPlayOwnerStartInviteRsp& MpPlayOwnerStartInviteRsp::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

MpPlayOwnerStartInviteRsp* MpPlayOwnerStartInviteRsp::New(::google::protobuf::Arena* arena) const {
  MpPlayOwnerStartInviteRsp* n = new MpPlayOwnerStartInviteRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MpPlayOwnerStartInviteRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MpPlayOwnerStartInviteRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_skip_match_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(is_skip_match_));
  _internal_metadata_.Clear();
}

bool MpPlayOwnerStartInviteRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MpPlayOwnerStartInviteRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 mp_play_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mp_play_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_skip_match = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_skip_match_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MpPlayOwnerStartInviteRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MpPlayOwnerStartInviteRsp)
  return false;
#undef DO_
}

void MpPlayOwnerStartInviteRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MpPlayOwnerStartInviteRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mp_play_id = 3;
  if (this->mp_play_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->mp_play_id(), output);
  }

  // bool is_skip_match = 9;
  if (this->is_skip_match() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->is_skip_match(), output);
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MpPlayOwnerStartInviteRsp)
}

::google::protobuf::uint8* MpPlayOwnerStartInviteRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MpPlayOwnerStartInviteRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mp_play_id = 3;
  if (this->mp_play_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->mp_play_id(), target);
  }

  // bool is_skip_match = 9;
  if (this->is_skip_match() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->is_skip_match(), target);
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MpPlayOwnerStartInviteRsp)
  return target;
}

size_t MpPlayOwnerStartInviteRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MpPlayOwnerStartInviteRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 14;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 mp_play_id = 3;
  if (this->mp_play_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mp_play_id());
  }

  // bool is_skip_match = 9;
  if (this->is_skip_match() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MpPlayOwnerStartInviteRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MpPlayOwnerStartInviteRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MpPlayOwnerStartInviteRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MpPlayOwnerStartInviteRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MpPlayOwnerStartInviteRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MpPlayOwnerStartInviteRsp)
    MergeFrom(*source);
  }
}

void MpPlayOwnerStartInviteRsp::MergeFrom(const MpPlayOwnerStartInviteRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MpPlayOwnerStartInviteRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.mp_play_id() != 0) {
    set_mp_play_id(from.mp_play_id());
  }
  if (from.is_skip_match() != 0) {
    set_is_skip_match(from.is_skip_match());
  }
}

void MpPlayOwnerStartInviteRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MpPlayOwnerStartInviteRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MpPlayOwnerStartInviteRsp::CopyFrom(const MpPlayOwnerStartInviteRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MpPlayOwnerStartInviteRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MpPlayOwnerStartInviteRsp::IsInitialized() const {
  return true;
}

void MpPlayOwnerStartInviteRsp::Swap(MpPlayOwnerStartInviteRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MpPlayOwnerStartInviteRsp::InternalSwap(MpPlayOwnerStartInviteRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(mp_play_id_, other->mp_play_id_);
  swap(is_skip_match_, other->is_skip_match_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MpPlayOwnerStartInviteRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MpPlayOwnerStartInviteRsp

// int32 retcode = 14;
void MpPlayOwnerStartInviteRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 MpPlayOwnerStartInviteRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayOwnerStartInviteRsp.retcode)
  return retcode_;
}
void MpPlayOwnerStartInviteRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayOwnerStartInviteRsp.retcode)
}

// uint32 mp_play_id = 3;
void MpPlayOwnerStartInviteRsp::clear_mp_play_id() {
  mp_play_id_ = 0u;
}
::google::protobuf::uint32 MpPlayOwnerStartInviteRsp::mp_play_id() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayOwnerStartInviteRsp.mp_play_id)
  return mp_play_id_;
}
void MpPlayOwnerStartInviteRsp::set_mp_play_id(::google::protobuf::uint32 value) {
  
  mp_play_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayOwnerStartInviteRsp.mp_play_id)
}

// bool is_skip_match = 9;
void MpPlayOwnerStartInviteRsp::clear_is_skip_match() {
  is_skip_match_ = false;
}
bool MpPlayOwnerStartInviteRsp::is_skip_match() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayOwnerStartInviteRsp.is_skip_match)
  return is_skip_match_;
}
void MpPlayOwnerStartInviteRsp::set_is_skip_match(bool value) {
  
  is_skip_match_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayOwnerStartInviteRsp.is_skip_match)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MpPlayOwnerInviteNotify::kCdFieldNumber;
const int MpPlayOwnerInviteNotify::kMpPlayIdFieldNumber;
const int MpPlayOwnerInviteNotify::kIsRemainRewardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MpPlayOwnerInviteNotify::MpPlayOwnerInviteNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MpPlayOwnerInviteNotify)
}
MpPlayOwnerInviteNotify::MpPlayOwnerInviteNotify(const MpPlayOwnerInviteNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mp_play_id_, &from.mp_play_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cd_) -
    reinterpret_cast<char*>(&mp_play_id_)) + sizeof(cd_));
  // @@protoc_insertion_point(copy_constructor:proto.MpPlayOwnerInviteNotify)
}

void MpPlayOwnerInviteNotify::SharedCtor() {
  ::memset(&mp_play_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cd_) -
      reinterpret_cast<char*>(&mp_play_id_)) + sizeof(cd_));
  _cached_size_ = 0;
}

MpPlayOwnerInviteNotify::~MpPlayOwnerInviteNotify() {
  // @@protoc_insertion_point(destructor:proto.MpPlayOwnerInviteNotify)
  SharedDtor();
}

void MpPlayOwnerInviteNotify::SharedDtor() {
}

void MpPlayOwnerInviteNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MpPlayOwnerInviteNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MpPlayOwnerInviteNotify& MpPlayOwnerInviteNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

MpPlayOwnerInviteNotify* MpPlayOwnerInviteNotify::New(::google::protobuf::Arena* arena) const {
  MpPlayOwnerInviteNotify* n = new MpPlayOwnerInviteNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MpPlayOwnerInviteNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MpPlayOwnerInviteNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&mp_play_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cd_) -
      reinterpret_cast<char*>(&mp_play_id_)) + sizeof(cd_));
  _internal_metadata_.Clear();
}

bool MpPlayOwnerInviteNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MpPlayOwnerInviteNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_remain_reward = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_remain_reward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cd = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mp_play_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mp_play_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MpPlayOwnerInviteNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MpPlayOwnerInviteNotify)
  return false;
#undef DO_
}

void MpPlayOwnerInviteNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MpPlayOwnerInviteNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_remain_reward = 10;
  if (this->is_remain_reward() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_remain_reward(), output);
  }

  // uint32 cd = 12;
  if (this->cd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->cd(), output);
  }

  // uint32 mp_play_id = 13;
  if (this->mp_play_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->mp_play_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MpPlayOwnerInviteNotify)
}

::google::protobuf::uint8* MpPlayOwnerInviteNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MpPlayOwnerInviteNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_remain_reward = 10;
  if (this->is_remain_reward() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_remain_reward(), target);
  }

  // uint32 cd = 12;
  if (this->cd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->cd(), target);
  }

  // uint32 mp_play_id = 13;
  if (this->mp_play_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->mp_play_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MpPlayOwnerInviteNotify)
  return target;
}

size_t MpPlayOwnerInviteNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MpPlayOwnerInviteNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 mp_play_id = 13;
  if (this->mp_play_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mp_play_id());
  }

  // bool is_remain_reward = 10;
  if (this->is_remain_reward() != 0) {
    total_size += 1 + 1;
  }

  // uint32 cd = 12;
  if (this->cd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MpPlayOwnerInviteNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MpPlayOwnerInviteNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MpPlayOwnerInviteNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MpPlayOwnerInviteNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MpPlayOwnerInviteNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MpPlayOwnerInviteNotify)
    MergeFrom(*source);
  }
}

void MpPlayOwnerInviteNotify::MergeFrom(const MpPlayOwnerInviteNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MpPlayOwnerInviteNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mp_play_id() != 0) {
    set_mp_play_id(from.mp_play_id());
  }
  if (from.is_remain_reward() != 0) {
    set_is_remain_reward(from.is_remain_reward());
  }
  if (from.cd() != 0) {
    set_cd(from.cd());
  }
}

void MpPlayOwnerInviteNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MpPlayOwnerInviteNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MpPlayOwnerInviteNotify::CopyFrom(const MpPlayOwnerInviteNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MpPlayOwnerInviteNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MpPlayOwnerInviteNotify::IsInitialized() const {
  return true;
}

void MpPlayOwnerInviteNotify::Swap(MpPlayOwnerInviteNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MpPlayOwnerInviteNotify::InternalSwap(MpPlayOwnerInviteNotify* other) {
  using std::swap;
  swap(mp_play_id_, other->mp_play_id_);
  swap(is_remain_reward_, other->is_remain_reward_);
  swap(cd_, other->cd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MpPlayOwnerInviteNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MpPlayOwnerInviteNotify

// uint32 cd = 12;
void MpPlayOwnerInviteNotify::clear_cd() {
  cd_ = 0u;
}
::google::protobuf::uint32 MpPlayOwnerInviteNotify::cd() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayOwnerInviteNotify.cd)
  return cd_;
}
void MpPlayOwnerInviteNotify::set_cd(::google::protobuf::uint32 value) {
  
  cd_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayOwnerInviteNotify.cd)
}

// uint32 mp_play_id = 13;
void MpPlayOwnerInviteNotify::clear_mp_play_id() {
  mp_play_id_ = 0u;
}
::google::protobuf::uint32 MpPlayOwnerInviteNotify::mp_play_id() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayOwnerInviteNotify.mp_play_id)
  return mp_play_id_;
}
void MpPlayOwnerInviteNotify::set_mp_play_id(::google::protobuf::uint32 value) {
  
  mp_play_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayOwnerInviteNotify.mp_play_id)
}

// bool is_remain_reward = 10;
void MpPlayOwnerInviteNotify::clear_is_remain_reward() {
  is_remain_reward_ = false;
}
bool MpPlayOwnerInviteNotify::is_remain_reward() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayOwnerInviteNotify.is_remain_reward)
  return is_remain_reward_;
}
void MpPlayOwnerInviteNotify::set_is_remain_reward(bool value) {
  
  is_remain_reward_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayOwnerInviteNotify.is_remain_reward)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MpPlayGuestReplyInviteReq::kMpPlayIdFieldNumber;
const int MpPlayGuestReplyInviteReq::kIsAgreeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MpPlayGuestReplyInviteReq::MpPlayGuestReplyInviteReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MpPlayGuestReplyInviteReq)
}
MpPlayGuestReplyInviteReq::MpPlayGuestReplyInviteReq(const MpPlayGuestReplyInviteReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mp_play_id_, &from.mp_play_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_agree_) -
    reinterpret_cast<char*>(&mp_play_id_)) + sizeof(is_agree_));
  // @@protoc_insertion_point(copy_constructor:proto.MpPlayGuestReplyInviteReq)
}

void MpPlayGuestReplyInviteReq::SharedCtor() {
  ::memset(&mp_play_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_agree_) -
      reinterpret_cast<char*>(&mp_play_id_)) + sizeof(is_agree_));
  _cached_size_ = 0;
}

MpPlayGuestReplyInviteReq::~MpPlayGuestReplyInviteReq() {
  // @@protoc_insertion_point(destructor:proto.MpPlayGuestReplyInviteReq)
  SharedDtor();
}

void MpPlayGuestReplyInviteReq::SharedDtor() {
}

void MpPlayGuestReplyInviteReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MpPlayGuestReplyInviteReq::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MpPlayGuestReplyInviteReq& MpPlayGuestReplyInviteReq::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

MpPlayGuestReplyInviteReq* MpPlayGuestReplyInviteReq::New(::google::protobuf::Arena* arena) const {
  MpPlayGuestReplyInviteReq* n = new MpPlayGuestReplyInviteReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MpPlayGuestReplyInviteReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MpPlayGuestReplyInviteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&mp_play_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_agree_) -
      reinterpret_cast<char*>(&mp_play_id_)) + sizeof(is_agree_));
  _internal_metadata_.Clear();
}

bool MpPlayGuestReplyInviteReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MpPlayGuestReplyInviteReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 mp_play_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mp_play_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_agree = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_agree_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MpPlayGuestReplyInviteReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MpPlayGuestReplyInviteReq)
  return false;
#undef DO_
}

void MpPlayGuestReplyInviteReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MpPlayGuestReplyInviteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mp_play_id = 3;
  if (this->mp_play_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->mp_play_id(), output);
  }

  // bool is_agree = 15;
  if (this->is_agree() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->is_agree(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MpPlayGuestReplyInviteReq)
}

::google::protobuf::uint8* MpPlayGuestReplyInviteReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MpPlayGuestReplyInviteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mp_play_id = 3;
  if (this->mp_play_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->mp_play_id(), target);
  }

  // bool is_agree = 15;
  if (this->is_agree() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->is_agree(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MpPlayGuestReplyInviteReq)
  return target;
}

size_t MpPlayGuestReplyInviteReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MpPlayGuestReplyInviteReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 mp_play_id = 3;
  if (this->mp_play_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mp_play_id());
  }

  // bool is_agree = 15;
  if (this->is_agree() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MpPlayGuestReplyInviteReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MpPlayGuestReplyInviteReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MpPlayGuestReplyInviteReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MpPlayGuestReplyInviteReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MpPlayGuestReplyInviteReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MpPlayGuestReplyInviteReq)
    MergeFrom(*source);
  }
}

void MpPlayGuestReplyInviteReq::MergeFrom(const MpPlayGuestReplyInviteReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MpPlayGuestReplyInviteReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mp_play_id() != 0) {
    set_mp_play_id(from.mp_play_id());
  }
  if (from.is_agree() != 0) {
    set_is_agree(from.is_agree());
  }
}

void MpPlayGuestReplyInviteReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MpPlayGuestReplyInviteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MpPlayGuestReplyInviteReq::CopyFrom(const MpPlayGuestReplyInviteReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MpPlayGuestReplyInviteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MpPlayGuestReplyInviteReq::IsInitialized() const {
  return true;
}

void MpPlayGuestReplyInviteReq::Swap(MpPlayGuestReplyInviteReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MpPlayGuestReplyInviteReq::InternalSwap(MpPlayGuestReplyInviteReq* other) {
  using std::swap;
  swap(mp_play_id_, other->mp_play_id_);
  swap(is_agree_, other->is_agree_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MpPlayGuestReplyInviteReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MpPlayGuestReplyInviteReq

// uint32 mp_play_id = 3;
void MpPlayGuestReplyInviteReq::clear_mp_play_id() {
  mp_play_id_ = 0u;
}
::google::protobuf::uint32 MpPlayGuestReplyInviteReq::mp_play_id() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayGuestReplyInviteReq.mp_play_id)
  return mp_play_id_;
}
void MpPlayGuestReplyInviteReq::set_mp_play_id(::google::protobuf::uint32 value) {
  
  mp_play_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayGuestReplyInviteReq.mp_play_id)
}

// bool is_agree = 15;
void MpPlayGuestReplyInviteReq::clear_is_agree() {
  is_agree_ = false;
}
bool MpPlayGuestReplyInviteReq::is_agree() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayGuestReplyInviteReq.is_agree)
  return is_agree_;
}
void MpPlayGuestReplyInviteReq::set_is_agree(bool value) {
  
  is_agree_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayGuestReplyInviteReq.is_agree)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MpPlayGuestReplyInviteRsp::kRetcodeFieldNumber;
const int MpPlayGuestReplyInviteRsp::kMpPlayIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MpPlayGuestReplyInviteRsp::MpPlayGuestReplyInviteRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MpPlayGuestReplyInviteRsp)
}
MpPlayGuestReplyInviteRsp::MpPlayGuestReplyInviteRsp(const MpPlayGuestReplyInviteRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&mp_play_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(mp_play_id_));
  // @@protoc_insertion_point(copy_constructor:proto.MpPlayGuestReplyInviteRsp)
}

void MpPlayGuestReplyInviteRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mp_play_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(mp_play_id_));
  _cached_size_ = 0;
}

MpPlayGuestReplyInviteRsp::~MpPlayGuestReplyInviteRsp() {
  // @@protoc_insertion_point(destructor:proto.MpPlayGuestReplyInviteRsp)
  SharedDtor();
}

void MpPlayGuestReplyInviteRsp::SharedDtor() {
}

void MpPlayGuestReplyInviteRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MpPlayGuestReplyInviteRsp::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MpPlayGuestReplyInviteRsp& MpPlayGuestReplyInviteRsp::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

MpPlayGuestReplyInviteRsp* MpPlayGuestReplyInviteRsp::New(::google::protobuf::Arena* arena) const {
  MpPlayGuestReplyInviteRsp* n = new MpPlayGuestReplyInviteRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MpPlayGuestReplyInviteRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MpPlayGuestReplyInviteRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mp_play_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(mp_play_id_));
  _internal_metadata_.Clear();
}

bool MpPlayGuestReplyInviteRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MpPlayGuestReplyInviteRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mp_play_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mp_play_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MpPlayGuestReplyInviteRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MpPlayGuestReplyInviteRsp)
  return false;
#undef DO_
}

void MpPlayGuestReplyInviteRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MpPlayGuestReplyInviteRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->retcode(), output);
  }

  // uint32 mp_play_id = 10;
  if (this->mp_play_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->mp_play_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MpPlayGuestReplyInviteRsp)
}

::google::protobuf::uint8* MpPlayGuestReplyInviteRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MpPlayGuestReplyInviteRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->retcode(), target);
  }

  // uint32 mp_play_id = 10;
  if (this->mp_play_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->mp_play_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MpPlayGuestReplyInviteRsp)
  return target;
}

size_t MpPlayGuestReplyInviteRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MpPlayGuestReplyInviteRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 4;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 mp_play_id = 10;
  if (this->mp_play_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mp_play_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MpPlayGuestReplyInviteRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MpPlayGuestReplyInviteRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MpPlayGuestReplyInviteRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MpPlayGuestReplyInviteRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MpPlayGuestReplyInviteRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MpPlayGuestReplyInviteRsp)
    MergeFrom(*source);
  }
}

void MpPlayGuestReplyInviteRsp::MergeFrom(const MpPlayGuestReplyInviteRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MpPlayGuestReplyInviteRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.mp_play_id() != 0) {
    set_mp_play_id(from.mp_play_id());
  }
}

void MpPlayGuestReplyInviteRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MpPlayGuestReplyInviteRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MpPlayGuestReplyInviteRsp::CopyFrom(const MpPlayGuestReplyInviteRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MpPlayGuestReplyInviteRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MpPlayGuestReplyInviteRsp::IsInitialized() const {
  return true;
}

void MpPlayGuestReplyInviteRsp::Swap(MpPlayGuestReplyInviteRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MpPlayGuestReplyInviteRsp::InternalSwap(MpPlayGuestReplyInviteRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(mp_play_id_, other->mp_play_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MpPlayGuestReplyInviteRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MpPlayGuestReplyInviteRsp

// int32 retcode = 4;
void MpPlayGuestReplyInviteRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 MpPlayGuestReplyInviteRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayGuestReplyInviteRsp.retcode)
  return retcode_;
}
void MpPlayGuestReplyInviteRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayGuestReplyInviteRsp.retcode)
}

// uint32 mp_play_id = 10;
void MpPlayGuestReplyInviteRsp::clear_mp_play_id() {
  mp_play_id_ = 0u;
}
::google::protobuf::uint32 MpPlayGuestReplyInviteRsp::mp_play_id() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayGuestReplyInviteRsp.mp_play_id)
  return mp_play_id_;
}
void MpPlayGuestReplyInviteRsp::set_mp_play_id(::google::protobuf::uint32 value) {
  
  mp_play_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayGuestReplyInviteRsp.mp_play_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MpPlayGuestReplyNotify::kUidFieldNumber;
const int MpPlayGuestReplyNotify::kIsAgreeFieldNumber;
const int MpPlayGuestReplyNotify::kMpPlayIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MpPlayGuestReplyNotify::MpPlayGuestReplyNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MpPlayGuestReplyNotify)
}
MpPlayGuestReplyNotify::MpPlayGuestReplyNotify(const MpPlayGuestReplyNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mp_play_id_, &from.mp_play_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&mp_play_id_)) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:proto.MpPlayGuestReplyNotify)
}

void MpPlayGuestReplyNotify::SharedCtor() {
  ::memset(&mp_play_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&mp_play_id_)) + sizeof(uid_));
  _cached_size_ = 0;
}

MpPlayGuestReplyNotify::~MpPlayGuestReplyNotify() {
  // @@protoc_insertion_point(destructor:proto.MpPlayGuestReplyNotify)
  SharedDtor();
}

void MpPlayGuestReplyNotify::SharedDtor() {
}

void MpPlayGuestReplyNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MpPlayGuestReplyNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MpPlayGuestReplyNotify& MpPlayGuestReplyNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

MpPlayGuestReplyNotify* MpPlayGuestReplyNotify::New(::google::protobuf::Arena* arena) const {
  MpPlayGuestReplyNotify* n = new MpPlayGuestReplyNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MpPlayGuestReplyNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MpPlayGuestReplyNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&mp_play_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&mp_play_id_)) + sizeof(uid_));
  _internal_metadata_.Clear();
}

bool MpPlayGuestReplyNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MpPlayGuestReplyNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_agree = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_agree_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mp_play_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mp_play_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MpPlayGuestReplyNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MpPlayGuestReplyNotify)
  return false;
#undef DO_
}

void MpPlayGuestReplyNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MpPlayGuestReplyNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_agree = 4;
  if (this->is_agree() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_agree(), output);
  }

  // uint32 uid = 7;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->uid(), output);
  }

  // uint32 mp_play_id = 14;
  if (this->mp_play_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->mp_play_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MpPlayGuestReplyNotify)
}

::google::protobuf::uint8* MpPlayGuestReplyNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MpPlayGuestReplyNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_agree = 4;
  if (this->is_agree() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_agree(), target);
  }

  // uint32 uid = 7;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->uid(), target);
  }

  // uint32 mp_play_id = 14;
  if (this->mp_play_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->mp_play_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MpPlayGuestReplyNotify)
  return target;
}

size_t MpPlayGuestReplyNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MpPlayGuestReplyNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 mp_play_id = 14;
  if (this->mp_play_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mp_play_id());
  }

  // bool is_agree = 4;
  if (this->is_agree() != 0) {
    total_size += 1 + 1;
  }

  // uint32 uid = 7;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MpPlayGuestReplyNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MpPlayGuestReplyNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MpPlayGuestReplyNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MpPlayGuestReplyNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MpPlayGuestReplyNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MpPlayGuestReplyNotify)
    MergeFrom(*source);
  }
}

void MpPlayGuestReplyNotify::MergeFrom(const MpPlayGuestReplyNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MpPlayGuestReplyNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mp_play_id() != 0) {
    set_mp_play_id(from.mp_play_id());
  }
  if (from.is_agree() != 0) {
    set_is_agree(from.is_agree());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void MpPlayGuestReplyNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MpPlayGuestReplyNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MpPlayGuestReplyNotify::CopyFrom(const MpPlayGuestReplyNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MpPlayGuestReplyNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MpPlayGuestReplyNotify::IsInitialized() const {
  return true;
}

void MpPlayGuestReplyNotify::Swap(MpPlayGuestReplyNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MpPlayGuestReplyNotify::InternalSwap(MpPlayGuestReplyNotify* other) {
  using std::swap;
  swap(mp_play_id_, other->mp_play_id_);
  swap(is_agree_, other->is_agree_);
  swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MpPlayGuestReplyNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MpPlayGuestReplyNotify

// uint32 uid = 7;
void MpPlayGuestReplyNotify::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 MpPlayGuestReplyNotify::uid() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayGuestReplyNotify.uid)
  return uid_;
}
void MpPlayGuestReplyNotify::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayGuestReplyNotify.uid)
}

// bool is_agree = 4;
void MpPlayGuestReplyNotify::clear_is_agree() {
  is_agree_ = false;
}
bool MpPlayGuestReplyNotify::is_agree() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayGuestReplyNotify.is_agree)
  return is_agree_;
}
void MpPlayGuestReplyNotify::set_is_agree(bool value) {
  
  is_agree_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayGuestReplyNotify.is_agree)
}

// uint32 mp_play_id = 14;
void MpPlayGuestReplyNotify::clear_mp_play_id() {
  mp_play_id_ = 0u;
}
::google::protobuf::uint32 MpPlayGuestReplyNotify::mp_play_id() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayGuestReplyNotify.mp_play_id)
  return mp_play_id_;
}
void MpPlayGuestReplyNotify::set_mp_play_id(::google::protobuf::uint32 value) {
  
  mp_play_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayGuestReplyNotify.mp_play_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MpPlayPrepareNotify::kMpPlayIdFieldNumber;
const int MpPlayPrepareNotify::kPrepareEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MpPlayPrepareNotify::MpPlayPrepareNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MpPlayPrepareNotify)
}
MpPlayPrepareNotify::MpPlayPrepareNotify(const MpPlayPrepareNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mp_play_id_, &from.mp_play_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&prepare_end_time_) -
    reinterpret_cast<char*>(&mp_play_id_)) + sizeof(prepare_end_time_));
  // @@protoc_insertion_point(copy_constructor:proto.MpPlayPrepareNotify)
}

void MpPlayPrepareNotify::SharedCtor() {
  ::memset(&mp_play_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prepare_end_time_) -
      reinterpret_cast<char*>(&mp_play_id_)) + sizeof(prepare_end_time_));
  _cached_size_ = 0;
}

MpPlayPrepareNotify::~MpPlayPrepareNotify() {
  // @@protoc_insertion_point(destructor:proto.MpPlayPrepareNotify)
  SharedDtor();
}

void MpPlayPrepareNotify::SharedDtor() {
}

void MpPlayPrepareNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MpPlayPrepareNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MpPlayPrepareNotify& MpPlayPrepareNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

MpPlayPrepareNotify* MpPlayPrepareNotify::New(::google::protobuf::Arena* arena) const {
  MpPlayPrepareNotify* n = new MpPlayPrepareNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MpPlayPrepareNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MpPlayPrepareNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&mp_play_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prepare_end_time_) -
      reinterpret_cast<char*>(&mp_play_id_)) + sizeof(prepare_end_time_));
  _internal_metadata_.Clear();
}

bool MpPlayPrepareNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MpPlayPrepareNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 mp_play_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mp_play_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 prepare_end_time = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prepare_end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MpPlayPrepareNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MpPlayPrepareNotify)
  return false;
#undef DO_
}

void MpPlayPrepareNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MpPlayPrepareNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mp_play_id = 9;
  if (this->mp_play_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->mp_play_id(), output);
  }

  // uint32 prepare_end_time = 11;
  if (this->prepare_end_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->prepare_end_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MpPlayPrepareNotify)
}

::google::protobuf::uint8* MpPlayPrepareNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MpPlayPrepareNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mp_play_id = 9;
  if (this->mp_play_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->mp_play_id(), target);
  }

  // uint32 prepare_end_time = 11;
  if (this->prepare_end_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->prepare_end_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MpPlayPrepareNotify)
  return target;
}

size_t MpPlayPrepareNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MpPlayPrepareNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 mp_play_id = 9;
  if (this->mp_play_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mp_play_id());
  }

  // uint32 prepare_end_time = 11;
  if (this->prepare_end_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prepare_end_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MpPlayPrepareNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MpPlayPrepareNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MpPlayPrepareNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MpPlayPrepareNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MpPlayPrepareNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MpPlayPrepareNotify)
    MergeFrom(*source);
  }
}

void MpPlayPrepareNotify::MergeFrom(const MpPlayPrepareNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MpPlayPrepareNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mp_play_id() != 0) {
    set_mp_play_id(from.mp_play_id());
  }
  if (from.prepare_end_time() != 0) {
    set_prepare_end_time(from.prepare_end_time());
  }
}

void MpPlayPrepareNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MpPlayPrepareNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MpPlayPrepareNotify::CopyFrom(const MpPlayPrepareNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MpPlayPrepareNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MpPlayPrepareNotify::IsInitialized() const {
  return true;
}

void MpPlayPrepareNotify::Swap(MpPlayPrepareNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MpPlayPrepareNotify::InternalSwap(MpPlayPrepareNotify* other) {
  using std::swap;
  swap(mp_play_id_, other->mp_play_id_);
  swap(prepare_end_time_, other->prepare_end_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MpPlayPrepareNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MpPlayPrepareNotify

// uint32 mp_play_id = 9;
void MpPlayPrepareNotify::clear_mp_play_id() {
  mp_play_id_ = 0u;
}
::google::protobuf::uint32 MpPlayPrepareNotify::mp_play_id() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayPrepareNotify.mp_play_id)
  return mp_play_id_;
}
void MpPlayPrepareNotify::set_mp_play_id(::google::protobuf::uint32 value) {
  
  mp_play_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayPrepareNotify.mp_play_id)
}

// uint32 prepare_end_time = 11;
void MpPlayPrepareNotify::clear_prepare_end_time() {
  prepare_end_time_ = 0u;
}
::google::protobuf::uint32 MpPlayPrepareNotify::prepare_end_time() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayPrepareNotify.prepare_end_time)
  return prepare_end_time_;
}
void MpPlayPrepareNotify::set_prepare_end_time(::google::protobuf::uint32 value) {
  
  prepare_end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayPrepareNotify.prepare_end_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MpPlayInviteResultNotify::kMpPlayIdFieldNumber;
const int MpPlayInviteResultNotify::kAllArgeeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MpPlayInviteResultNotify::MpPlayInviteResultNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MpPlayInviteResultNotify)
}
MpPlayInviteResultNotify::MpPlayInviteResultNotify(const MpPlayInviteResultNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&all_argee_, &from.all_argee_,
    static_cast<size_t>(reinterpret_cast<char*>(&mp_play_id_) -
    reinterpret_cast<char*>(&all_argee_)) + sizeof(mp_play_id_));
  // @@protoc_insertion_point(copy_constructor:proto.MpPlayInviteResultNotify)
}

void MpPlayInviteResultNotify::SharedCtor() {
  ::memset(&all_argee_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mp_play_id_) -
      reinterpret_cast<char*>(&all_argee_)) + sizeof(mp_play_id_));
  _cached_size_ = 0;
}

MpPlayInviteResultNotify::~MpPlayInviteResultNotify() {
  // @@protoc_insertion_point(destructor:proto.MpPlayInviteResultNotify)
  SharedDtor();
}

void MpPlayInviteResultNotify::SharedDtor() {
}

void MpPlayInviteResultNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MpPlayInviteResultNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MpPlayInviteResultNotify& MpPlayInviteResultNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

MpPlayInviteResultNotify* MpPlayInviteResultNotify::New(::google::protobuf::Arena* arena) const {
  MpPlayInviteResultNotify* n = new MpPlayInviteResultNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MpPlayInviteResultNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MpPlayInviteResultNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&all_argee_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mp_play_id_) -
      reinterpret_cast<char*>(&all_argee_)) + sizeof(mp_play_id_));
  _internal_metadata_.Clear();
}

bool MpPlayInviteResultNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MpPlayInviteResultNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool all_argee = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &all_argee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mp_play_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mp_play_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MpPlayInviteResultNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MpPlayInviteResultNotify)
  return false;
#undef DO_
}

void MpPlayInviteResultNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MpPlayInviteResultNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool all_argee = 10;
  if (this->all_argee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->all_argee(), output);
  }

  // uint32 mp_play_id = 11;
  if (this->mp_play_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->mp_play_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MpPlayInviteResultNotify)
}

::google::protobuf::uint8* MpPlayInviteResultNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MpPlayInviteResultNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool all_argee = 10;
  if (this->all_argee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->all_argee(), target);
  }

  // uint32 mp_play_id = 11;
  if (this->mp_play_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->mp_play_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MpPlayInviteResultNotify)
  return target;
}

size_t MpPlayInviteResultNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MpPlayInviteResultNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool all_argee = 10;
  if (this->all_argee() != 0) {
    total_size += 1 + 1;
  }

  // uint32 mp_play_id = 11;
  if (this->mp_play_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mp_play_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MpPlayInviteResultNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MpPlayInviteResultNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MpPlayInviteResultNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MpPlayInviteResultNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MpPlayInviteResultNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MpPlayInviteResultNotify)
    MergeFrom(*source);
  }
}

void MpPlayInviteResultNotify::MergeFrom(const MpPlayInviteResultNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MpPlayInviteResultNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.all_argee() != 0) {
    set_all_argee(from.all_argee());
  }
  if (from.mp_play_id() != 0) {
    set_mp_play_id(from.mp_play_id());
  }
}

void MpPlayInviteResultNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MpPlayInviteResultNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MpPlayInviteResultNotify::CopyFrom(const MpPlayInviteResultNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MpPlayInviteResultNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MpPlayInviteResultNotify::IsInitialized() const {
  return true;
}

void MpPlayInviteResultNotify::Swap(MpPlayInviteResultNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MpPlayInviteResultNotify::InternalSwap(MpPlayInviteResultNotify* other) {
  using std::swap;
  swap(all_argee_, other->all_argee_);
  swap(mp_play_id_, other->mp_play_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MpPlayInviteResultNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MpPlayInviteResultNotify

// uint32 mp_play_id = 11;
void MpPlayInviteResultNotify::clear_mp_play_id() {
  mp_play_id_ = 0u;
}
::google::protobuf::uint32 MpPlayInviteResultNotify::mp_play_id() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayInviteResultNotify.mp_play_id)
  return mp_play_id_;
}
void MpPlayInviteResultNotify::set_mp_play_id(::google::protobuf::uint32 value) {
  
  mp_play_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayInviteResultNotify.mp_play_id)
}

// bool all_argee = 10;
void MpPlayInviteResultNotify::clear_all_argee() {
  all_argee_ = false;
}
bool MpPlayInviteResultNotify::all_argee() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayInviteResultNotify.all_argee)
  return all_argee_;
}
void MpPlayInviteResultNotify::set_all_argee(bool value) {
  
  all_argee_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayInviteResultNotify.all_argee)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MpPlayPrepareInterruptNotify::kMpPlayIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MpPlayPrepareInterruptNotify::MpPlayPrepareInterruptNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MpPlayPrepareInterruptNotify)
}
MpPlayPrepareInterruptNotify::MpPlayPrepareInterruptNotify(const MpPlayPrepareInterruptNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mp_play_id_ = from.mp_play_id_;
  // @@protoc_insertion_point(copy_constructor:proto.MpPlayPrepareInterruptNotify)
}

void MpPlayPrepareInterruptNotify::SharedCtor() {
  mp_play_id_ = 0u;
  _cached_size_ = 0;
}

MpPlayPrepareInterruptNotify::~MpPlayPrepareInterruptNotify() {
  // @@protoc_insertion_point(destructor:proto.MpPlayPrepareInterruptNotify)
  SharedDtor();
}

void MpPlayPrepareInterruptNotify::SharedDtor() {
}

void MpPlayPrepareInterruptNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MpPlayPrepareInterruptNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MpPlayPrepareInterruptNotify& MpPlayPrepareInterruptNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

MpPlayPrepareInterruptNotify* MpPlayPrepareInterruptNotify::New(::google::protobuf::Arena* arena) const {
  MpPlayPrepareInterruptNotify* n = new MpPlayPrepareInterruptNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MpPlayPrepareInterruptNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MpPlayPrepareInterruptNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mp_play_id_ = 0u;
  _internal_metadata_.Clear();
}

bool MpPlayPrepareInterruptNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MpPlayPrepareInterruptNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 mp_play_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mp_play_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MpPlayPrepareInterruptNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MpPlayPrepareInterruptNotify)
  return false;
#undef DO_
}

void MpPlayPrepareInterruptNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MpPlayPrepareInterruptNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mp_play_id = 12;
  if (this->mp_play_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->mp_play_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MpPlayPrepareInterruptNotify)
}

::google::protobuf::uint8* MpPlayPrepareInterruptNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MpPlayPrepareInterruptNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mp_play_id = 12;
  if (this->mp_play_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->mp_play_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MpPlayPrepareInterruptNotify)
  return target;
}

size_t MpPlayPrepareInterruptNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MpPlayPrepareInterruptNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 mp_play_id = 12;
  if (this->mp_play_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mp_play_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MpPlayPrepareInterruptNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MpPlayPrepareInterruptNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MpPlayPrepareInterruptNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MpPlayPrepareInterruptNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MpPlayPrepareInterruptNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MpPlayPrepareInterruptNotify)
    MergeFrom(*source);
  }
}

void MpPlayPrepareInterruptNotify::MergeFrom(const MpPlayPrepareInterruptNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MpPlayPrepareInterruptNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mp_play_id() != 0) {
    set_mp_play_id(from.mp_play_id());
  }
}

void MpPlayPrepareInterruptNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MpPlayPrepareInterruptNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MpPlayPrepareInterruptNotify::CopyFrom(const MpPlayPrepareInterruptNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MpPlayPrepareInterruptNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MpPlayPrepareInterruptNotify::IsInitialized() const {
  return true;
}

void MpPlayPrepareInterruptNotify::Swap(MpPlayPrepareInterruptNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MpPlayPrepareInterruptNotify::InternalSwap(MpPlayPrepareInterruptNotify* other) {
  using std::swap;
  swap(mp_play_id_, other->mp_play_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MpPlayPrepareInterruptNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MpPlayPrepareInterruptNotify

// uint32 mp_play_id = 12;
void MpPlayPrepareInterruptNotify::clear_mp_play_id() {
  mp_play_id_ = 0u;
}
::google::protobuf::uint32 MpPlayPrepareInterruptNotify::mp_play_id() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayPrepareInterruptNotify.mp_play_id)
  return mp_play_id_;
}
void MpPlayPrepareInterruptNotify::set_mp_play_id(::google::protobuf::uint32 value) {
  
  mp_play_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayPrepareInterruptNotify.mp_play_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MpBlockNotify::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MpBlockNotify::MpBlockNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MpBlockNotify)
}
MpBlockNotify::MpBlockNotify(const MpBlockNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  end_time_ = from.end_time_;
  // @@protoc_insertion_point(copy_constructor:proto.MpBlockNotify)
}

void MpBlockNotify::SharedCtor() {
  end_time_ = 0u;
  _cached_size_ = 0;
}

MpBlockNotify::~MpBlockNotify() {
  // @@protoc_insertion_point(destructor:proto.MpBlockNotify)
  SharedDtor();
}

void MpBlockNotify::SharedDtor() {
}

void MpBlockNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MpBlockNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MpBlockNotify& MpBlockNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

MpBlockNotify* MpBlockNotify::New(::google::protobuf::Arena* arena) const {
  MpBlockNotify* n = new MpBlockNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MpBlockNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MpBlockNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  end_time_ = 0u;
  _internal_metadata_.Clear();
}

bool MpBlockNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MpBlockNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 end_time = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MpBlockNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MpBlockNotify)
  return false;
#undef DO_
}

void MpBlockNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MpBlockNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 end_time = 13;
  if (this->end_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->end_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MpBlockNotify)
}

::google::protobuf::uint8* MpBlockNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MpBlockNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 end_time = 13;
  if (this->end_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->end_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MpBlockNotify)
  return target;
}

size_t MpBlockNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MpBlockNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 end_time = 13;
  if (this->end_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->end_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MpBlockNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MpBlockNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MpBlockNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MpBlockNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MpBlockNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MpBlockNotify)
    MergeFrom(*source);
  }
}

void MpBlockNotify::MergeFrom(const MpBlockNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MpBlockNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.end_time() != 0) {
    set_end_time(from.end_time());
  }
}

void MpBlockNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MpBlockNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MpBlockNotify::CopyFrom(const MpBlockNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MpBlockNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MpBlockNotify::IsInitialized() const {
  return true;
}

void MpBlockNotify::Swap(MpBlockNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MpBlockNotify::InternalSwap(MpBlockNotify* other) {
  using std::swap;
  swap(end_time_, other->end_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MpBlockNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MpBlockNotify

// uint32 end_time = 13;
void MpBlockNotify::clear_end_time() {
  end_time_ = 0u;
}
::google::protobuf::uint32 MpBlockNotify::end_time() const {
  // @@protoc_insertion_point(field_get:proto.MpBlockNotify.end_time)
  return end_time_;
}
void MpBlockNotify::set_end_time(::google::protobuf::uint32 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MpBlockNotify.end_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
