// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_misc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_misc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class KeepAliveNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<KeepAliveNotify>
     _instance;
} _KeepAliveNotify_default_instance_;
class GmTalkReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GmTalkReq>
     _instance;
} _GmTalkReq_default_instance_;
class GmTalkRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GmTalkRsp>
     _instance;
} _GmTalkRsp_default_instance_;
class MsgParamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MsgParam>
     _instance;
  ::google::protobuf::uint32 int_param_;
  float flt_param_;
  ::google::protobuf::internal::ArenaStringPtr str_param_;
} _MsgParam_default_instance_;
class ShowMessageNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ShowMessageNotify>
     _instance;
} _ShowMessageNotify_default_instance_;
class PingReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PingReq>
     _instance;
} _PingReq_default_instance_;
class PingRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PingRsp>
     _instance;
} _PingRsp_default_instance_;
class GetOnlinePlayerListReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetOnlinePlayerListReq>
     _instance;
} _GetOnlinePlayerListReq_default_instance_;
class GetOnlinePlayerListRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetOnlinePlayerListRsp>
     _instance;
} _GetOnlinePlayerListRsp_default_instance_;
class ServerTimeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerTimeNotify>
     _instance;
} _ServerTimeNotify_default_instance_;
class ServerLogNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerLogNotify>
     _instance;
} _ServerLogNotify_default_instance_;
class ClientReconnectNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientReconnectNotify>
     _instance;
} _ClientReconnectNotify_default_instance_;
class RobotPushPlayerDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RobotPushPlayerDataNotify>
     _instance;
} _RobotPushPlayerDataNotify_default_instance_;
class ClientReportNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientReportNotify>
     _instance;
} _ClientReportNotify_default_instance_;
class UnionCmdDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UnionCmd>
     _instance;
} _UnionCmd_default_instance_;
class UnionCmdNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UnionCmdNotify>
     _instance;
} _UnionCmdNotify_default_instance_;
class GetOnlinePlayerInfoReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetOnlinePlayerInfoReq>
     _instance;
  ::google::protobuf::uint32 target_uid_;
  ::google::protobuf::internal::ArenaStringPtr online_id_;
  ::google::protobuf::internal::ArenaStringPtr psn_id_;
} _GetOnlinePlayerInfoReq_default_instance_;
class GetOnlinePlayerInfoRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetOnlinePlayerInfoRsp>
     _instance;
} _GetOnlinePlayerInfoRsp_default_instance_;
class SegmentInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SegmentInfo>
     _instance;
} _SegmentInfo_default_instance_;
class SegmentCRCInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SegmentCRCInfo>
     _instance;
} _SegmentCRCInfo_default_instance_;
class CheckSegmentCRCNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CheckSegmentCRCNotify>
     _instance;
} _CheckSegmentCRCNotify_default_instance_;
class CheckSegmentCRCReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CheckSegmentCRCReq>
     _instance;
} _CheckSegmentCRCReq_default_instance_;
class PlayerRTTInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerRTTInfo>
     _instance;
} _PlayerRTTInfo_default_instance_;
class WorldPlayerRTTNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WorldPlayerRTTNotify>
     _instance;
} _WorldPlayerRTTNotify_default_instance_;
class EchoNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EchoNotify>
     _instance;
} _EchoNotify_default_instance_;
class UpdateRedPointNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UpdateRedPointNotify>
     _instance;
} _UpdateRedPointNotify_default_instance_;
class ClientBulletCreateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientBulletCreateNotify>
     _instance;
} _ClientBulletCreateNotify_default_instance_;
class ChangeServerGlobalValueNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChangeServerGlobalValueNotify>
     _instance;
} _ChangeServerGlobalValueNotify_default_instance_;
class GmTalkNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GmTalkNotify>
     _instance;
} _GmTalkNotify_default_instance_;
class LastPacketPrintNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LastPacketPrintNotify>
     _instance;
} _LastPacketPrintNotify_default_instance_;

namespace protobuf_cmd_2fcmd_5fmisc_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[30];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeepAliveNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GmTalkReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GmTalkReq, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GmTalkRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GmTalkRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GmTalkRsp, retmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GmTalkRsp, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgParam, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgParam, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(MsgParamDefaultTypeInternal, int_param_),
  offsetof(MsgParamDefaultTypeInternal, flt_param_),
  offsetof(MsgParamDefaultTypeInternal, str_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgParam, param_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShowMessageNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShowMessageNotify, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShowMessageNotify, params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingReq, client_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingReq, ue_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingReq, total_tick_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingReq, sc_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingReq, seq_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingRsp, client_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingRsp, seq_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlinePlayerListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlinePlayerListRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlinePlayerListRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlinePlayerListRsp, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlinePlayerListRsp, player_info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerTimeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerTimeNotify, server_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerLogNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerLogNotify, server_log_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerLogNotify, log_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerLogNotify, log_level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReconnectNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReconnectNotify, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotPushPlayerDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotPushPlayerDataNotify, bin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReportNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReportNotify, report_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReportNotify, report_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionCmd, body_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionCmd, message_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionCmdNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionCmdNotify, cmd_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlinePlayerInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlinePlayerInfoReq, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlinePlayerInfoReq, is_online_id_),
  offsetof(GetOnlinePlayerInfoReqDefaultTypeInternal, target_uid_),
  offsetof(GetOnlinePlayerInfoReqDefaultTypeInternal, online_id_),
  offsetof(GetOnlinePlayerInfoReqDefaultTypeInternal, psn_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlinePlayerInfoReq, player_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlinePlayerInfoRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlinePlayerInfoRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlinePlayerInfoRsp, target_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlinePlayerInfoRsp, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlinePlayerInfoRsp, target_player_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegmentInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegmentInfo, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegmentInfo, module_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegmentInfo, size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegmentCRCInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegmentCRCInfo, module_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegmentCRCInfo, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegmentCRCInfo, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegmentCRCInfo, crc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegmentCRCInfo, offset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckSegmentCRCNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckSegmentCRCNotify, info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckSegmentCRCReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckSegmentCRCReq, info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRTTInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRTTInfo, rtt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRTTInfo, uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldPlayerRTTNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldPlayerRTTNotify, player_rtt_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EchoNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EchoNotify, seq_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EchoNotify, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRedPointNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRedPointNotify, red_point_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientBulletCreateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientBulletCreateNotify, param_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeServerGlobalValueNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeServerGlobalValueNotify, entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GmTalkNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GmTalkNotify, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LastPacketPrintNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(KeepAliveNotify)},
  { 5, -1, sizeof(GmTalkReq)},
  { 11, -1, sizeof(GmTalkRsp)},
  { 19, -1, sizeof(MsgParam)},
  { 28, -1, sizeof(ShowMessageNotify)},
  { 35, -1, sizeof(PingReq)},
  { 45, -1, sizeof(PingRsp)},
  { 53, -1, sizeof(GetOnlinePlayerListReq)},
  { 58, -1, sizeof(GetOnlinePlayerListRsp)},
  { 66, -1, sizeof(ServerTimeNotify)},
  { 72, -1, sizeof(ServerLogNotify)},
  { 80, -1, sizeof(ClientReconnectNotify)},
  { 86, -1, sizeof(RobotPushPlayerDataNotify)},
  { 92, -1, sizeof(ClientReportNotify)},
  { 99, -1, sizeof(UnionCmd)},
  { 106, -1, sizeof(UnionCmdNotify)},
  { 112, -1, sizeof(GetOnlinePlayerInfoReq)},
  { 122, -1, sizeof(GetOnlinePlayerInfoRsp)},
  { 131, -1, sizeof(SegmentInfo)},
  { 139, -1, sizeof(SegmentCRCInfo)},
  { 149, -1, sizeof(CheckSegmentCRCNotify)},
  { 155, -1, sizeof(CheckSegmentCRCReq)},
  { 161, -1, sizeof(PlayerRTTInfo)},
  { 168, -1, sizeof(WorldPlayerRTTNotify)},
  { 174, -1, sizeof(EchoNotify)},
  { 181, -1, sizeof(UpdateRedPointNotify)},
  { 187, -1, sizeof(ClientBulletCreateNotify)},
  { 193, -1, sizeof(ChangeServerGlobalValueNotify)},
  { 199, -1, sizeof(GmTalkNotify)},
  { 205, -1, sizeof(LastPacketPrintNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_KeepAliveNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GmTalkReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GmTalkRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShowMessageNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PingReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PingRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetOnlinePlayerListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetOnlinePlayerListRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerTimeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerLogNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientReconnectNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RobotPushPlayerDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientReportNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnionCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnionCmdNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetOnlinePlayerInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetOnlinePlayerInfoRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SegmentInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SegmentCRCInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckSegmentCRCNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckSegmentCRCReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerRTTInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WorldPlayerRTTNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EchoNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateRedPointNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientBulletCreateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChangeServerGlobalValueNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GmTalkNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LastPacketPrintNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_misc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 30);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  ::proto::protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  _KeepAliveNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_KeepAliveNotify_default_instance_);_GmTalkReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GmTalkReq_default_instance_);_GmTalkRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GmTalkRsp_default_instance_);_MsgParam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MsgParam_default_instance_);_ShowMessageNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ShowMessageNotify_default_instance_);_PingReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PingReq_default_instance_);_PingRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PingRsp_default_instance_);_GetOnlinePlayerListReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetOnlinePlayerListReq_default_instance_);_GetOnlinePlayerListRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetOnlinePlayerListRsp_default_instance_);_ServerTimeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerTimeNotify_default_instance_);_ServerLogNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerLogNotify_default_instance_);_ClientReconnectNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientReconnectNotify_default_instance_);_RobotPushPlayerDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RobotPushPlayerDataNotify_default_instance_);_ClientReportNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientReportNotify_default_instance_);_UnionCmd_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UnionCmd_default_instance_);_UnionCmdNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UnionCmdNotify_default_instance_);_GetOnlinePlayerInfoReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetOnlinePlayerInfoReq_default_instance_);_GetOnlinePlayerInfoRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetOnlinePlayerInfoRsp_default_instance_);_SegmentInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SegmentInfo_default_instance_);_SegmentCRCInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SegmentCRCInfo_default_instance_);_CheckSegmentCRCNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CheckSegmentCRCNotify_default_instance_);_CheckSegmentCRCReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CheckSegmentCRCReq_default_instance_);_PlayerRTTInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerRTTInfo_default_instance_);_WorldPlayerRTTNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WorldPlayerRTTNotify_default_instance_);_EchoNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EchoNotify_default_instance_);_UpdateRedPointNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UpdateRedPointNotify_default_instance_);_ClientBulletCreateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientBulletCreateNotify_default_instance_);_ChangeServerGlobalValueNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChangeServerGlobalValueNotify_default_instance_);_GmTalkNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GmTalkNotify_default_instance_);_LastPacketPrintNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LastPacketPrintNotify_default_instance_);_MsgParam_default_instance_.int_param_ = 0u;
  _MsgParam_default_instance_.flt_param_ = 0;
  _MsgParam_default_instance_.str_param_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _GetOnlinePlayerInfoReq_default_instance_.target_uid_ = 0u;
  _GetOnlinePlayerInfoReq_default_instance_.online_id_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _GetOnlinePlayerInfoReq_default_instance_.psn_id_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _GetOnlinePlayerInfoRsp_default_instance_._instance.get_mutable()->target_player_info_ = const_cast< ::proto::OnlinePlayerInfo*>(
      ::proto::OnlinePlayerInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022cmd/cmd_misc.proto\022\005proto\032\014define.prot"
      "o\032\024cmd/cmd_social.proto\"\021\n\017KeepAliveNoti"
      "fy\"\030\n\tGmTalkReq\022\013\n\003msg\030\r \001(\t\"9\n\tGmTalkRs"
      "p\022\017\n\007retcode\030\017 \001(\005\022\016\n\006retmsg\030\003 \001(\t\022\013\n\003ms"
      "g\030\r \001(\t\"R\n\010MsgParam\022\023\n\tint_param\030\t \001(\rH\000"
      "\022\023\n\tflt_param\030\007 \001(\002H\000\022\023\n\tstr_param\030\004 \001(\t"
      "H\000B\007\n\005param\"U\n\021ShowMessageNotify\022\037\n\006msg_"
      "id\030\016 \001(\0162\017.proto.SvrMsgId\022\037\n\006params\030\r \003("
      "\0132\017.proto.MsgParam\"f\n\007PingReq\022\023\n\013client_"
      "time\030\014 \001(\r\022\017\n\007ue_time\030\016 \001(\002\022\027\n\017total_tic"
      "k_time\030\006 \001(\001\022\017\n\007sc_data\030\n \001(\014\022\013\n\003seq\030\003 \001"
      "(\r\"<\n\007PingRsp\022\023\n\013client_time\030\017 \001(\r\022\017\n\007re"
      "tcode\030\006 \001(\005\022\013\n\003seq\030\r \001(\r\"\030\n\026GetOnlinePla"
      "yerListReq\"k\n\026GetOnlinePlayerListRsp\022\017\n\007"
      "retcode\030\007 \001(\005\022\r\n\005param\030\013 \001(\r\0221\n\020player_i"
      "nfo_list\030\005 \003(\0132\027.proto.OnlinePlayerInfo\""
      "\'\n\020ServerTimeNotify\022\023\n\013server_time\030\005 \001(\004"
      "\"w\n\017ServerLogNotify\022\022\n\nserver_log\030\007 \001(\t\022"
      "&\n\010log_type\030\t \001(\0162\024.proto.ServerLogType\022"
      "(\n\tlog_level\030\017 \001(\0162\025.proto.ServerLogLeve"
      "l\"E\n\025ClientReconnectNotify\022,\n\006reason\030\006 \001"
      "(\0162\034.proto.ClientReconnectReason\"(\n\031Robo"
      "tPushPlayerDataNotify\022\013\n\003bin\030\006 \001(\014\"\?\n\022Cl"
      "ientReportNotify\022\023\n\013report_type\030\001 \001(\t\022\024\n"
      "\014report_value\030\004 \001(\t\",\n\010UnionCmd\022\014\n\004body\030"
      "\016 \001(\014\022\022\n\nmessage_id\030\010 \001(\r\"3\n\016UnionCmdNot"
      "ify\022!\n\010cmd_list\030\001 \003(\0132\017.proto.UnionCmd\"x"
      "\n\026GetOnlinePlayerInfoReq\022\024\n\014is_online_id"
      "\030\017 \001(\010\022\024\n\ntarget_uid\030\t \001(\rH\000\022\023\n\tonline_i"
      "d\030\007 \001(\tH\000\022\020\n\006psn_id\030\002 \001(\tH\000B\013\n\tplayer_id"
      "\"\201\001\n\026GetOnlinePlayerInfoRsp\022\017\n\007retcode\030\013"
      " \001(\005\022\022\n\ntarget_uid\030\007 \001(\r\022\r\n\005param\030\004 \001(\r\022"
      "3\n\022target_player_info\030\016 \001(\0132\027.proto.Onli"
      "nePlayerInfo\";\n\013SegmentInfo\022\016\n\006offset\030\003 "
      "\001(\r\022\016\n\006module\030\007 \001(\r\022\014\n\004size\030\010 \001(\r\"\\\n\016Seg"
      "mentCRCInfo\022\016\n\006module\030\r \001(\r\022\017\n\007retcode\030\005"
      " \001(\005\022\014\n\004size\030\n \001(\r\022\013\n\003crc\030\003 \001(\t\022\016\n\006offse"
      "t\030\013 \001(\r\">\n\025CheckSegmentCRCNotify\022%\n\tinfo"
      "_list\030\006 \003(\0132\022.proto.SegmentInfo\">\n\022Check"
      "SegmentCRCReq\022(\n\tinfo_list\030\001 \003(\0132\025.proto"
      ".SegmentCRCInfo\")\n\rPlayerRTTInfo\022\013\n\003rtt\030"
      "\002 \001(\r\022\013\n\003uid\030\001 \001(\r\"E\n\024WorldPlayerRTTNoti"
      "fy\022-\n\017player_rtt_list\030\001 \003(\0132\024.proto.Play"
      "erRTTInfo\"-\n\nEchoNotify\022\016\n\006seq_id\030\004 \001(\r\022"
      "\017\n\007content\030\t \001(\t\"C\n\024UpdateRedPointNotify"
      "\022+\n\016red_point_list\030\014 \003(\0132\023.proto.RedPoin"
      "tData\")\n\030ClientBulletCreateNotify\022\r\n\005par"
      "am\030\006 \001(\r\"2\n\035ChangeServerGlobalValueNotif"
      "y\022\021\n\tentity_id\030\004 \001(\r\"\033\n\014GmTalkNotify\022\013\n\003"
      "msg\030\005 \001(\t\"\027\n\025LastPacketPrintNotify*\343\001\n\010S"
      "vrMsgId\022\017\n\013MSG_UNKNOWN\020\000\022\037\n\033MSG_BLOCK_RE"
      "FRESH_COUNTDOWN\020\001\022\037\n\033MSG_AVATAR_REVIVE_B"
      "Y_STATUE\020\002\022!\n\035MSG_DAILY_TASK_REWARD_MAX_"
      "NUM\020\003\022\035\n\031MSG_ROUTINE_TYPE_NOT_OPEN\020\004\022#\n\037"
      "MSG_ROUTINE_TYPE_REWARD_MAX_NUM\020\005\022\035\n\031MSG"
      "_MECHANICUS_COIN_LIMIT\020\006*}\n\rServerLogTyp"
      "e\022\023\n\017SERVER_LOG_NONE\020\000\022\026\n\022SERVER_LOG_ABI"
      "LITY\020\001\022\024\n\020SERVER_LOG_LEVEL\020\002\022\025\n\021SERVER_L"
      "OG_ENTITY\020\003\022\022\n\016SERVER_LOG_LUA\020\004*y\n\016Serve"
      "rLogLevel\022\022\n\016LOG_LEVEL_NONE\020\000\022\023\n\017LOG_LEV"
      "EL_DEBUG\020\001\022\022\n\016LOG_LEVEL_INFO\020\002\022\025\n\021LOG_LE"
      "VEL_WARNING\020\003\022\023\n\017LOG_LEVEL_ERROR\020\004*R\n\025Cl"
      "ientReconnectReason\022\032\n\026CLIENT_RECONNNECT"
      "_NONE\020\000\022\035\n\031CLIENT_RECONNNECT_QUIT_MP\020\001B("
      "Z&github.com/teyvat-helper/hk4e-proto/pb"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2608);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_misc.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
  ::proto::protobuf_cmd_2fcmd_5fsocial_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5fmisc_2eproto

const ::google::protobuf::EnumDescriptor* SvrMsgId_descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_enum_descriptors[0];
}
bool SvrMsgId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ServerLogType_descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_enum_descriptors[1];
}
bool ServerLogType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ServerLogLevel_descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_enum_descriptors[2];
}
bool ServerLogLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ClientReconnectReason_descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_enum_descriptors[3];
}
bool ClientReconnectReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeepAliveNotify::KeepAliveNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.KeepAliveNotify)
}
KeepAliveNotify::KeepAliveNotify(const KeepAliveNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.KeepAliveNotify)
}

void KeepAliveNotify::SharedCtor() {
  _cached_size_ = 0;
}

KeepAliveNotify::~KeepAliveNotify() {
  // @@protoc_insertion_point(destructor:proto.KeepAliveNotify)
  SharedDtor();
}

void KeepAliveNotify::SharedDtor() {
}

void KeepAliveNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeepAliveNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeepAliveNotify& KeepAliveNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

KeepAliveNotify* KeepAliveNotify::New(::google::protobuf::Arena* arena) const {
  KeepAliveNotify* n = new KeepAliveNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeepAliveNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.KeepAliveNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool KeepAliveNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.KeepAliveNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.KeepAliveNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.KeepAliveNotify)
  return false;
#undef DO_
}

void KeepAliveNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.KeepAliveNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.KeepAliveNotify)
}

::google::protobuf::uint8* KeepAliveNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.KeepAliveNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.KeepAliveNotify)
  return target;
}

size_t KeepAliveNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.KeepAliveNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeepAliveNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.KeepAliveNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const KeepAliveNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeepAliveNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.KeepAliveNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.KeepAliveNotify)
    MergeFrom(*source);
  }
}

void KeepAliveNotify::MergeFrom(const KeepAliveNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.KeepAliveNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void KeepAliveNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.KeepAliveNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeepAliveNotify::CopyFrom(const KeepAliveNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.KeepAliveNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeepAliveNotify::IsInitialized() const {
  return true;
}

void KeepAliveNotify::Swap(KeepAliveNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeepAliveNotify::InternalSwap(KeepAliveNotify* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeepAliveNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KeepAliveNotify

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GmTalkReq::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GmTalkReq::GmTalkReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GmTalkReq)
}
GmTalkReq::GmTalkReq(const GmTalkReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GmTalkReq)
}

void GmTalkReq::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GmTalkReq::~GmTalkReq() {
  // @@protoc_insertion_point(destructor:proto.GmTalkReq)
  SharedDtor();
}

void GmTalkReq::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GmTalkReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GmTalkReq::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GmTalkReq& GmTalkReq::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GmTalkReq* GmTalkReq::New(::google::protobuf::Arena* arena) const {
  GmTalkReq* n = new GmTalkReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GmTalkReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GmTalkReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GmTalkReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GmTalkReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string msg = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GmTalkReq.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GmTalkReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GmTalkReq)
  return false;
#undef DO_
}

void GmTalkReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GmTalkReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 13;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GmTalkReq.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GmTalkReq)
}

::google::protobuf::uint8* GmTalkReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GmTalkReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 13;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GmTalkReq.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GmTalkReq)
  return target;
}

size_t GmTalkReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GmTalkReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 13;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GmTalkReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GmTalkReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GmTalkReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GmTalkReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GmTalkReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GmTalkReq)
    MergeFrom(*source);
  }
}

void GmTalkReq::MergeFrom(const GmTalkReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GmTalkReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void GmTalkReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GmTalkReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GmTalkReq::CopyFrom(const GmTalkReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GmTalkReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GmTalkReq::IsInitialized() const {
  return true;
}

void GmTalkReq::Swap(GmTalkReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GmTalkReq::InternalSwap(GmTalkReq* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GmTalkReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GmTalkReq

// string msg = 13;
void GmTalkReq::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GmTalkReq::msg() const {
  // @@protoc_insertion_point(field_get:proto.GmTalkReq.msg)
  return msg_.GetNoArena();
}
void GmTalkReq::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GmTalkReq.msg)
}
#if LANG_CXX11
void GmTalkReq::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GmTalkReq.msg)
}
#endif
void GmTalkReq::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GmTalkReq.msg)
}
void GmTalkReq::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GmTalkReq.msg)
}
::std::string* GmTalkReq::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:proto.GmTalkReq.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GmTalkReq::release_msg() {
  // @@protoc_insertion_point(field_release:proto.GmTalkReq.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GmTalkReq::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:proto.GmTalkReq.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GmTalkRsp::kRetcodeFieldNumber;
const int GmTalkRsp::kRetmsgFieldNumber;
const int GmTalkRsp::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GmTalkRsp::GmTalkRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GmTalkRsp)
}
GmTalkRsp::GmTalkRsp(const GmTalkRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.retmsg().size() > 0) {
    retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
  }
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GmTalkRsp)
}

void GmTalkRsp::SharedCtor() {
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retcode_ = 0;
  _cached_size_ = 0;
}

GmTalkRsp::~GmTalkRsp() {
  // @@protoc_insertion_point(destructor:proto.GmTalkRsp)
  SharedDtor();
}

void GmTalkRsp::SharedDtor() {
  retmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GmTalkRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GmTalkRsp::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GmTalkRsp& GmTalkRsp::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GmTalkRsp* GmTalkRsp::New(::google::protobuf::Arena* arena) const {
  GmTalkRsp* n = new GmTalkRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GmTalkRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GmTalkRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool GmTalkRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GmTalkRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string retmsg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->retmsg().data(), static_cast<int>(this->retmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GmTalkRsp.retmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GmTalkRsp.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GmTalkRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GmTalkRsp)
  return false;
#undef DO_
}

void GmTalkRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GmTalkRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string retmsg = 3;
  if (this->retmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->retmsg().data(), static_cast<int>(this->retmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GmTalkRsp.retmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->retmsg(), output);
  }

  // string msg = 13;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GmTalkRsp.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->msg(), output);
  }

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GmTalkRsp)
}

::google::protobuf::uint8* GmTalkRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GmTalkRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string retmsg = 3;
  if (this->retmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->retmsg().data(), static_cast<int>(this->retmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GmTalkRsp.retmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->retmsg(), target);
  }

  // string msg = 13;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GmTalkRsp.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->msg(), target);
  }

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GmTalkRsp)
  return target;
}

size_t GmTalkRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GmTalkRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string retmsg = 3;
  if (this->retmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->retmsg());
  }

  // string msg = 13;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GmTalkRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GmTalkRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GmTalkRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GmTalkRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GmTalkRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GmTalkRsp)
    MergeFrom(*source);
  }
}

void GmTalkRsp::MergeFrom(const GmTalkRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GmTalkRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retmsg().size() > 0) {

    retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GmTalkRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GmTalkRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GmTalkRsp::CopyFrom(const GmTalkRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GmTalkRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GmTalkRsp::IsInitialized() const {
  return true;
}

void GmTalkRsp::Swap(GmTalkRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GmTalkRsp::InternalSwap(GmTalkRsp* other) {
  using std::swap;
  retmsg_.Swap(&other->retmsg_);
  msg_.Swap(&other->msg_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GmTalkRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GmTalkRsp

// int32 retcode = 15;
void GmTalkRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GmTalkRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GmTalkRsp.retcode)
  return retcode_;
}
void GmTalkRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GmTalkRsp.retcode)
}

// string retmsg = 3;
void GmTalkRsp::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GmTalkRsp::retmsg() const {
  // @@protoc_insertion_point(field_get:proto.GmTalkRsp.retmsg)
  return retmsg_.GetNoArena();
}
void GmTalkRsp::set_retmsg(const ::std::string& value) {
  
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GmTalkRsp.retmsg)
}
#if LANG_CXX11
void GmTalkRsp::set_retmsg(::std::string&& value) {
  
  retmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GmTalkRsp.retmsg)
}
#endif
void GmTalkRsp::set_retmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GmTalkRsp.retmsg)
}
void GmTalkRsp::set_retmsg(const char* value, size_t size) {
  
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GmTalkRsp.retmsg)
}
::std::string* GmTalkRsp::mutable_retmsg() {
  
  // @@protoc_insertion_point(field_mutable:proto.GmTalkRsp.retmsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GmTalkRsp::release_retmsg() {
  // @@protoc_insertion_point(field_release:proto.GmTalkRsp.retmsg)
  
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GmTalkRsp::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    
  } else {
    
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:proto.GmTalkRsp.retmsg)
}

// string msg = 13;
void GmTalkRsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GmTalkRsp::msg() const {
  // @@protoc_insertion_point(field_get:proto.GmTalkRsp.msg)
  return msg_.GetNoArena();
}
void GmTalkRsp::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GmTalkRsp.msg)
}
#if LANG_CXX11
void GmTalkRsp::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GmTalkRsp.msg)
}
#endif
void GmTalkRsp::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GmTalkRsp.msg)
}
void GmTalkRsp::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GmTalkRsp.msg)
}
::std::string* GmTalkRsp::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:proto.GmTalkRsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GmTalkRsp::release_msg() {
  // @@protoc_insertion_point(field_release:proto.GmTalkRsp.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GmTalkRsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:proto.GmTalkRsp.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgParam::kIntParamFieldNumber;
const int MsgParam::kFltParamFieldNumber;
const int MsgParam::kStrParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgParam::MsgParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MsgParam)
}
MsgParam::MsgParam(const MsgParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_param();
  switch (from.param_case()) {
    case kIntParam: {
      set_int_param(from.int_param());
      break;
    }
    case kFltParam: {
      set_flt_param(from.flt_param());
      break;
    }
    case kStrParam: {
      set_str_param(from.str_param());
      break;
    }
    case PARAM_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.MsgParam)
}

void MsgParam::SharedCtor() {
  clear_has_param();
  _cached_size_ = 0;
}

MsgParam::~MsgParam() {
  // @@protoc_insertion_point(destructor:proto.MsgParam)
  SharedDtor();
}

void MsgParam::SharedDtor() {
  if (has_param()) {
    clear_param();
  }
}

void MsgParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgParam::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgParam& MsgParam::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgParam* MsgParam::New(::google::protobuf::Arena* arena) const {
  MsgParam* n = new MsgParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgParam::clear_param() {
// @@protoc_insertion_point(one_of_clear_start:proto.MsgParam)
  switch (param_case()) {
    case kIntParam: {
      // No need to clear
      break;
    }
    case kFltParam: {
      // No need to clear
      break;
    }
    case kStrParam: {
      param_.str_param_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case PARAM_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PARAM_NOT_SET;
}


void MsgParam::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MsgParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_param();
  _internal_metadata_.Clear();
}

bool MsgParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MsgParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string str_param = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str_param()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str_param().data(), static_cast<int>(this->str_param().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.MsgParam.str_param"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float flt_param = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          clear_param();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &param_.flt_param_)));
          set_has_flt_param();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 int_param = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          clear_param();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param_.int_param_)));
          set_has_int_param();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MsgParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MsgParam)
  return false;
#undef DO_
}

void MsgParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MsgParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string str_param = 4;
  if (has_str_param()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_param().data(), static_cast<int>(this->str_param().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.MsgParam.str_param");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->str_param(), output);
  }

  // float flt_param = 7;
  if (has_flt_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->flt_param(), output);
  }

  // uint32 int_param = 9;
  if (has_int_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->int_param(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MsgParam)
}

::google::protobuf::uint8* MsgParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MsgParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string str_param = 4;
  if (has_str_param()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_param().data(), static_cast<int>(this->str_param().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.MsgParam.str_param");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->str_param(), target);
  }

  // float flt_param = 7;
  if (has_flt_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->flt_param(), target);
  }

  // uint32 int_param = 9;
  if (has_int_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->int_param(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MsgParam)
  return target;
}

size_t MsgParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MsgParam)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (param_case()) {
    // uint32 int_param = 9;
    case kIntParam: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->int_param());
      break;
    }
    // float flt_param = 7;
    case kFltParam: {
      total_size += 1 + 4;
      break;
    }
    // string str_param = 4;
    case kStrParam: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str_param());
      break;
    }
    case PARAM_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MsgParam)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MsgParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MsgParam)
    MergeFrom(*source);
  }
}

void MsgParam::MergeFrom(const MsgParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MsgParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.param_case()) {
    case kIntParam: {
      set_int_param(from.int_param());
      break;
    }
    case kFltParam: {
      set_flt_param(from.flt_param());
      break;
    }
    case kStrParam: {
      set_str_param(from.str_param());
      break;
    }
    case PARAM_NOT_SET: {
      break;
    }
  }
}

void MsgParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MsgParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgParam::CopyFrom(const MsgParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MsgParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgParam::IsInitialized() const {
  return true;
}

void MsgParam::Swap(MsgParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgParam::InternalSwap(MsgParam* other) {
  using std::swap;
  swap(param_, other->param_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgParam::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgParam

// uint32 int_param = 9;
bool MsgParam::has_int_param() const {
  return param_case() == kIntParam;
}
void MsgParam::set_has_int_param() {
  _oneof_case_[0] = kIntParam;
}
void MsgParam::clear_int_param() {
  if (has_int_param()) {
    param_.int_param_ = 0u;
    clear_has_param();
  }
}
::google::protobuf::uint32 MsgParam::int_param() const {
  // @@protoc_insertion_point(field_get:proto.MsgParam.int_param)
  if (has_int_param()) {
    return param_.int_param_;
  }
  return 0u;
}
void MsgParam::set_int_param(::google::protobuf::uint32 value) {
  if (!has_int_param()) {
    clear_param();
    set_has_int_param();
  }
  param_.int_param_ = value;
  // @@protoc_insertion_point(field_set:proto.MsgParam.int_param)
}

// float flt_param = 7;
bool MsgParam::has_flt_param() const {
  return param_case() == kFltParam;
}
void MsgParam::set_has_flt_param() {
  _oneof_case_[0] = kFltParam;
}
void MsgParam::clear_flt_param() {
  if (has_flt_param()) {
    param_.flt_param_ = 0;
    clear_has_param();
  }
}
float MsgParam::flt_param() const {
  // @@protoc_insertion_point(field_get:proto.MsgParam.flt_param)
  if (has_flt_param()) {
    return param_.flt_param_;
  }
  return 0;
}
void MsgParam::set_flt_param(float value) {
  if (!has_flt_param()) {
    clear_param();
    set_has_flt_param();
  }
  param_.flt_param_ = value;
  // @@protoc_insertion_point(field_set:proto.MsgParam.flt_param)
}

// string str_param = 4;
bool MsgParam::has_str_param() const {
  return param_case() == kStrParam;
}
void MsgParam::set_has_str_param() {
  _oneof_case_[0] = kStrParam;
}
void MsgParam::clear_str_param() {
  if (has_str_param()) {
    param_.str_param_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_param();
  }
}
const ::std::string& MsgParam::str_param() const {
  // @@protoc_insertion_point(field_get:proto.MsgParam.str_param)
  if (has_str_param()) {
    return param_.str_param_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void MsgParam::set_str_param(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.MsgParam.str_param)
  if (!has_str_param()) {
    clear_param();
    set_has_str_param();
    param_.str_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  param_.str_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MsgParam.str_param)
}
#if LANG_CXX11
void MsgParam::set_str_param(::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.MsgParam.str_param)
  if (!has_str_param()) {
    clear_param();
    set_has_str_param();
    param_.str_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  param_.str_param_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MsgParam.str_param)
}
#endif
void MsgParam::set_str_param(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_str_param()) {
    clear_param();
    set_has_str_param();
    param_.str_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  param_.str_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MsgParam.str_param)
}
void MsgParam::set_str_param(const char* value, size_t size) {
  if (!has_str_param()) {
    clear_param();
    set_has_str_param();
    param_.str_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  param_.str_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MsgParam.str_param)
}
::std::string* MsgParam::mutable_str_param() {
  if (!has_str_param()) {
    clear_param();
    set_has_str_param();
    param_.str_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:proto.MsgParam.str_param)
  return param_.str_param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgParam::release_str_param() {
  // @@protoc_insertion_point(field_release:proto.MsgParam.str_param)
  if (has_str_param()) {
    clear_has_param();
    return param_.str_param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void MsgParam::set_allocated_str_param(::std::string* str_param) {
  if (!has_str_param()) {
    param_.str_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_param();
  if (str_param != NULL) {
    set_has_str_param();
    param_.str_param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        str_param);
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MsgParam.str_param)
}

bool MsgParam::has_param() const {
  return param_case() != PARAM_NOT_SET;
}
void MsgParam::clear_has_param() {
  _oneof_case_[0] = PARAM_NOT_SET;
}
MsgParam::ParamCase MsgParam::param_case() const {
  return MsgParam::ParamCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowMessageNotify::kMsgIdFieldNumber;
const int ShowMessageNotify::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowMessageNotify::ShowMessageNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ShowMessageNotify)
}
ShowMessageNotify::ShowMessageNotify(const ShowMessageNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_ = from.msg_id_;
  // @@protoc_insertion_point(copy_constructor:proto.ShowMessageNotify)
}

void ShowMessageNotify::SharedCtor() {
  msg_id_ = 0;
  _cached_size_ = 0;
}

ShowMessageNotify::~ShowMessageNotify() {
  // @@protoc_insertion_point(destructor:proto.ShowMessageNotify)
  SharedDtor();
}

void ShowMessageNotify::SharedDtor() {
}

void ShowMessageNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShowMessageNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShowMessageNotify& ShowMessageNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShowMessageNotify* ShowMessageNotify::New(::google::protobuf::Arena* arena) const {
  ShowMessageNotify* n = new ShowMessageNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShowMessageNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ShowMessageNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  msg_id_ = 0;
  _internal_metadata_.Clear();
}

bool ShowMessageNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ShowMessageNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.MsgParam params = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SvrMsgId msg_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msg_id(static_cast< ::proto::SvrMsgId >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ShowMessageNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ShowMessageNotify)
  return false;
#undef DO_
}

void ShowMessageNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ShowMessageNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.MsgParam params = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->params(static_cast<int>(i)), output);
  }

  // .proto.SvrMsgId msg_id = 14;
  if (this->msg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ShowMessageNotify)
}

::google::protobuf::uint8* ShowMessageNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ShowMessageNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.MsgParam params = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, this->params(static_cast<int>(i)), deterministic, target);
  }

  // .proto.SvrMsgId msg_id = 14;
  if (this->msg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ShowMessageNotify)
  return target;
}

size_t ShowMessageNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ShowMessageNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.MsgParam params = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->params_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->params(static_cast<int>(i)));
    }
  }

  // .proto.SvrMsgId msg_id = 14;
  if (this->msg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShowMessageNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ShowMessageNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowMessageNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShowMessageNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ShowMessageNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ShowMessageNotify)
    MergeFrom(*source);
  }
}

void ShowMessageNotify::MergeFrom(const ShowMessageNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ShowMessageNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.msg_id() != 0) {
    set_msg_id(from.msg_id());
  }
}

void ShowMessageNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ShowMessageNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowMessageNotify::CopyFrom(const ShowMessageNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ShowMessageNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowMessageNotify::IsInitialized() const {
  return true;
}

void ShowMessageNotify::Swap(ShowMessageNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowMessageNotify::InternalSwap(ShowMessageNotify* other) {
  using std::swap;
  params_.InternalSwap(&other->params_);
  swap(msg_id_, other->msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShowMessageNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShowMessageNotify

// .proto.SvrMsgId msg_id = 14;
void ShowMessageNotify::clear_msg_id() {
  msg_id_ = 0;
}
::proto::SvrMsgId ShowMessageNotify::msg_id() const {
  // @@protoc_insertion_point(field_get:proto.ShowMessageNotify.msg_id)
  return static_cast< ::proto::SvrMsgId >(msg_id_);
}
void ShowMessageNotify::set_msg_id(::proto::SvrMsgId value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ShowMessageNotify.msg_id)
}

// repeated .proto.MsgParam params = 13;
int ShowMessageNotify::params_size() const {
  return params_.size();
}
void ShowMessageNotify::clear_params() {
  params_.Clear();
}
const ::proto::MsgParam& ShowMessageNotify::params(int index) const {
  // @@protoc_insertion_point(field_get:proto.ShowMessageNotify.params)
  return params_.Get(index);
}
::proto::MsgParam* ShowMessageNotify::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ShowMessageNotify.params)
  return params_.Mutable(index);
}
::proto::MsgParam* ShowMessageNotify::add_params() {
  // @@protoc_insertion_point(field_add:proto.ShowMessageNotify.params)
  return params_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::MsgParam >*
ShowMessageNotify::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:proto.ShowMessageNotify.params)
  return &params_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::MsgParam >&
ShowMessageNotify::params() const {
  // @@protoc_insertion_point(field_list:proto.ShowMessageNotify.params)
  return params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PingReq::kClientTimeFieldNumber;
const int PingReq::kUeTimeFieldNumber;
const int PingReq::kTotalTickTimeFieldNumber;
const int PingReq::kScDataFieldNumber;
const int PingReq::kSeqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PingReq::PingReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PingReq)
}
PingReq::PingReq(const PingReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sc_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sc_data().size() > 0) {
    sc_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sc_data_);
  }
  ::memcpy(&total_tick_time_, &from.total_tick_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&client_time_) -
    reinterpret_cast<char*>(&total_tick_time_)) + sizeof(client_time_));
  // @@protoc_insertion_point(copy_constructor:proto.PingReq)
}

void PingReq::SharedCtor() {
  sc_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&total_tick_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_time_) -
      reinterpret_cast<char*>(&total_tick_time_)) + sizeof(client_time_));
  _cached_size_ = 0;
}

PingReq::~PingReq() {
  // @@protoc_insertion_point(destructor:proto.PingReq)
  SharedDtor();
}

void PingReq::SharedDtor() {
  sc_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PingReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PingReq::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PingReq& PingReq::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

PingReq* PingReq::New(::google::protobuf::Arena* arena) const {
  PingReq* n = new PingReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PingReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PingReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sc_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&total_tick_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_time_) -
      reinterpret_cast<char*>(&total_tick_time_)) + sizeof(client_time_));
  _internal_metadata_.Clear();
}

bool PingReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PingReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 seq = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double total_tick_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &total_tick_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes sc_data = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sc_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 client_time = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ue_time = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(117u /* 117 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ue_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PingReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PingReq)
  return false;
#undef DO_
}

void PingReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PingReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 seq = 3;
  if (this->seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->seq(), output);
  }

  // double total_tick_time = 6;
  if (this->total_tick_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->total_tick_time(), output);
  }

  // bytes sc_data = 10;
  if (this->sc_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->sc_data(), output);
  }

  // uint32 client_time = 12;
  if (this->client_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->client_time(), output);
  }

  // float ue_time = 14;
  if (this->ue_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->ue_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PingReq)
}

::google::protobuf::uint8* PingReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PingReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 seq = 3;
  if (this->seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->seq(), target);
  }

  // double total_tick_time = 6;
  if (this->total_tick_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->total_tick_time(), target);
  }

  // bytes sc_data = 10;
  if (this->sc_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->sc_data(), target);
  }

  // uint32 client_time = 12;
  if (this->client_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->client_time(), target);
  }

  // float ue_time = 14;
  if (this->ue_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->ue_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PingReq)
  return target;
}

size_t PingReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PingReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes sc_data = 10;
  if (this->sc_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sc_data());
  }

  // double total_tick_time = 6;
  if (this->total_tick_time() != 0) {
    total_size += 1 + 8;
  }

  // float ue_time = 14;
  if (this->ue_time() != 0) {
    total_size += 1 + 4;
  }

  // uint32 seq = 3;
  if (this->seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seq());
  }

  // uint32 client_time = 12;
  if (this->client_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->client_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PingReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PingReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PingReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PingReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PingReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PingReq)
    MergeFrom(*source);
  }
}

void PingReq::MergeFrom(const PingReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PingReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sc_data().size() > 0) {

    sc_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sc_data_);
  }
  if (from.total_tick_time() != 0) {
    set_total_tick_time(from.total_tick_time());
  }
  if (from.ue_time() != 0) {
    set_ue_time(from.ue_time());
  }
  if (from.seq() != 0) {
    set_seq(from.seq());
  }
  if (from.client_time() != 0) {
    set_client_time(from.client_time());
  }
}

void PingReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PingReq::CopyFrom(const PingReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PingReq::IsInitialized() const {
  return true;
}

void PingReq::Swap(PingReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PingReq::InternalSwap(PingReq* other) {
  using std::swap;
  sc_data_.Swap(&other->sc_data_);
  swap(total_tick_time_, other->total_tick_time_);
  swap(ue_time_, other->ue_time_);
  swap(seq_, other->seq_);
  swap(client_time_, other->client_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PingReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PingReq

// uint32 client_time = 12;
void PingReq::clear_client_time() {
  client_time_ = 0u;
}
::google::protobuf::uint32 PingReq::client_time() const {
  // @@protoc_insertion_point(field_get:proto.PingReq.client_time)
  return client_time_;
}
void PingReq::set_client_time(::google::protobuf::uint32 value) {
  
  client_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PingReq.client_time)
}

// float ue_time = 14;
void PingReq::clear_ue_time() {
  ue_time_ = 0;
}
float PingReq::ue_time() const {
  // @@protoc_insertion_point(field_get:proto.PingReq.ue_time)
  return ue_time_;
}
void PingReq::set_ue_time(float value) {
  
  ue_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PingReq.ue_time)
}

// double total_tick_time = 6;
void PingReq::clear_total_tick_time() {
  total_tick_time_ = 0;
}
double PingReq::total_tick_time() const {
  // @@protoc_insertion_point(field_get:proto.PingReq.total_tick_time)
  return total_tick_time_;
}
void PingReq::set_total_tick_time(double value) {
  
  total_tick_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PingReq.total_tick_time)
}

// bytes sc_data = 10;
void PingReq::clear_sc_data() {
  sc_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PingReq::sc_data() const {
  // @@protoc_insertion_point(field_get:proto.PingReq.sc_data)
  return sc_data_.GetNoArena();
}
void PingReq::set_sc_data(const ::std::string& value) {
  
  sc_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PingReq.sc_data)
}
#if LANG_CXX11
void PingReq::set_sc_data(::std::string&& value) {
  
  sc_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PingReq.sc_data)
}
#endif
void PingReq::set_sc_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sc_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PingReq.sc_data)
}
void PingReq::set_sc_data(const void* value, size_t size) {
  
  sc_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PingReq.sc_data)
}
::std::string* PingReq::mutable_sc_data() {
  
  // @@protoc_insertion_point(field_mutable:proto.PingReq.sc_data)
  return sc_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PingReq::release_sc_data() {
  // @@protoc_insertion_point(field_release:proto.PingReq.sc_data)
  
  return sc_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PingReq::set_allocated_sc_data(::std::string* sc_data) {
  if (sc_data != NULL) {
    
  } else {
    
  }
  sc_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sc_data);
  // @@protoc_insertion_point(field_set_allocated:proto.PingReq.sc_data)
}

// uint32 seq = 3;
void PingReq::clear_seq() {
  seq_ = 0u;
}
::google::protobuf::uint32 PingReq::seq() const {
  // @@protoc_insertion_point(field_get:proto.PingReq.seq)
  return seq_;
}
void PingReq::set_seq(::google::protobuf::uint32 value) {
  
  seq_ = value;
  // @@protoc_insertion_point(field_set:proto.PingReq.seq)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PingRsp::kClientTimeFieldNumber;
const int PingRsp::kRetcodeFieldNumber;
const int PingRsp::kSeqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PingRsp::PingRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PingRsp)
}
PingRsp::PingRsp(const PingRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&client_time_, &from.client_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&seq_) -
    reinterpret_cast<char*>(&client_time_)) + sizeof(seq_));
  // @@protoc_insertion_point(copy_constructor:proto.PingRsp)
}

void PingRsp::SharedCtor() {
  ::memset(&client_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seq_) -
      reinterpret_cast<char*>(&client_time_)) + sizeof(seq_));
  _cached_size_ = 0;
}

PingRsp::~PingRsp() {
  // @@protoc_insertion_point(destructor:proto.PingRsp)
  SharedDtor();
}

void PingRsp::SharedDtor() {
}

void PingRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PingRsp::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PingRsp& PingRsp::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

PingRsp* PingRsp::New(::google::protobuf::Arena* arena) const {
  PingRsp* n = new PingRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PingRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PingRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&client_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seq_) -
      reinterpret_cast<char*>(&client_time_)) + sizeof(seq_));
  _internal_metadata_.Clear();
}

bool PingRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PingRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 seq = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 client_time = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PingRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PingRsp)
  return false;
#undef DO_
}

void PingRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PingRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->retcode(), output);
  }

  // uint32 seq = 13;
  if (this->seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->seq(), output);
  }

  // uint32 client_time = 15;
  if (this->client_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->client_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PingRsp)
}

::google::protobuf::uint8* PingRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PingRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->retcode(), target);
  }

  // uint32 seq = 13;
  if (this->seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->seq(), target);
  }

  // uint32 client_time = 15;
  if (this->client_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->client_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PingRsp)
  return target;
}

size_t PingRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PingRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 client_time = 15;
  if (this->client_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->client_time());
  }

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 seq = 13;
  if (this->seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seq());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PingRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PingRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PingRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PingRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PingRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PingRsp)
    MergeFrom(*source);
  }
}

void PingRsp::MergeFrom(const PingRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PingRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.client_time() != 0) {
    set_client_time(from.client_time());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.seq() != 0) {
    set_seq(from.seq());
  }
}

void PingRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PingRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PingRsp::CopyFrom(const PingRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PingRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PingRsp::IsInitialized() const {
  return true;
}

void PingRsp::Swap(PingRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PingRsp::InternalSwap(PingRsp* other) {
  using std::swap;
  swap(client_time_, other->client_time_);
  swap(retcode_, other->retcode_);
  swap(seq_, other->seq_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PingRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PingRsp

// uint32 client_time = 15;
void PingRsp::clear_client_time() {
  client_time_ = 0u;
}
::google::protobuf::uint32 PingRsp::client_time() const {
  // @@protoc_insertion_point(field_get:proto.PingRsp.client_time)
  return client_time_;
}
void PingRsp::set_client_time(::google::protobuf::uint32 value) {
  
  client_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PingRsp.client_time)
}

// int32 retcode = 6;
void PingRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PingRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PingRsp.retcode)
  return retcode_;
}
void PingRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PingRsp.retcode)
}

// uint32 seq = 13;
void PingRsp::clear_seq() {
  seq_ = 0u;
}
::google::protobuf::uint32 PingRsp::seq() const {
  // @@protoc_insertion_point(field_get:proto.PingRsp.seq)
  return seq_;
}
void PingRsp::set_seq(::google::protobuf::uint32 value) {
  
  seq_ = value;
  // @@protoc_insertion_point(field_set:proto.PingRsp.seq)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOnlinePlayerListReq::GetOnlinePlayerListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetOnlinePlayerListReq)
}
GetOnlinePlayerListReq::GetOnlinePlayerListReq(const GetOnlinePlayerListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GetOnlinePlayerListReq)
}

void GetOnlinePlayerListReq::SharedCtor() {
  _cached_size_ = 0;
}

GetOnlinePlayerListReq::~GetOnlinePlayerListReq() {
  // @@protoc_insertion_point(destructor:proto.GetOnlinePlayerListReq)
  SharedDtor();
}

void GetOnlinePlayerListReq::SharedDtor() {
}

void GetOnlinePlayerListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOnlinePlayerListReq::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetOnlinePlayerListReq& GetOnlinePlayerListReq::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetOnlinePlayerListReq* GetOnlinePlayerListReq::New(::google::protobuf::Arena* arena) const {
  GetOnlinePlayerListReq* n = new GetOnlinePlayerListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetOnlinePlayerListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetOnlinePlayerListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetOnlinePlayerListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetOnlinePlayerListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetOnlinePlayerListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetOnlinePlayerListReq)
  return false;
#undef DO_
}

void GetOnlinePlayerListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetOnlinePlayerListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetOnlinePlayerListReq)
}

::google::protobuf::uint8* GetOnlinePlayerListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetOnlinePlayerListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetOnlinePlayerListReq)
  return target;
}

size_t GetOnlinePlayerListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetOnlinePlayerListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOnlinePlayerListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetOnlinePlayerListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOnlinePlayerListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOnlinePlayerListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetOnlinePlayerListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetOnlinePlayerListReq)
    MergeFrom(*source);
  }
}

void GetOnlinePlayerListReq::MergeFrom(const GetOnlinePlayerListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetOnlinePlayerListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetOnlinePlayerListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetOnlinePlayerListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOnlinePlayerListReq::CopyFrom(const GetOnlinePlayerListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetOnlinePlayerListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOnlinePlayerListReq::IsInitialized() const {
  return true;
}

void GetOnlinePlayerListReq::Swap(GetOnlinePlayerListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOnlinePlayerListReq::InternalSwap(GetOnlinePlayerListReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetOnlinePlayerListReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetOnlinePlayerListReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOnlinePlayerListRsp::kRetcodeFieldNumber;
const int GetOnlinePlayerListRsp::kParamFieldNumber;
const int GetOnlinePlayerListRsp::kPlayerInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOnlinePlayerListRsp::GetOnlinePlayerListRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetOnlinePlayerListRsp)
}
GetOnlinePlayerListRsp::GetOnlinePlayerListRsp(const GetOnlinePlayerListRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_info_list_(from.player_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&param_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(param_));
  // @@protoc_insertion_point(copy_constructor:proto.GetOnlinePlayerListRsp)
}

void GetOnlinePlayerListRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(param_));
  _cached_size_ = 0;
}

GetOnlinePlayerListRsp::~GetOnlinePlayerListRsp() {
  // @@protoc_insertion_point(destructor:proto.GetOnlinePlayerListRsp)
  SharedDtor();
}

void GetOnlinePlayerListRsp::SharedDtor() {
}

void GetOnlinePlayerListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOnlinePlayerListRsp::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetOnlinePlayerListRsp& GetOnlinePlayerListRsp::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetOnlinePlayerListRsp* GetOnlinePlayerListRsp::New(::google::protobuf::Arena* arena) const {
  GetOnlinePlayerListRsp* n = new GetOnlinePlayerListRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetOnlinePlayerListRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetOnlinePlayerListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_info_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(param_));
  _internal_metadata_.Clear();
}

bool GetOnlinePlayerListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetOnlinePlayerListRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.OnlinePlayerInfo player_info_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_player_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 param = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetOnlinePlayerListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetOnlinePlayerListRsp)
  return false;
#undef DO_
}

void GetOnlinePlayerListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetOnlinePlayerListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.OnlinePlayerInfo player_info_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->player_info_list(static_cast<int>(i)), output);
  }

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->retcode(), output);
  }

  // uint32 param = 11;
  if (this->param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->param(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetOnlinePlayerListRsp)
}

::google::protobuf::uint8* GetOnlinePlayerListRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetOnlinePlayerListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.OnlinePlayerInfo player_info_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->player_info_list(static_cast<int>(i)), deterministic, target);
  }

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->retcode(), target);
  }

  // uint32 param = 11;
  if (this->param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->param(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetOnlinePlayerListRsp)
  return target;
}

size_t GetOnlinePlayerListRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetOnlinePlayerListRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.OnlinePlayerInfo player_info_list = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->player_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->player_info_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 param = 11;
  if (this->param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->param());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOnlinePlayerListRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetOnlinePlayerListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOnlinePlayerListRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOnlinePlayerListRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetOnlinePlayerListRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetOnlinePlayerListRsp)
    MergeFrom(*source);
  }
}

void GetOnlinePlayerListRsp::MergeFrom(const GetOnlinePlayerListRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetOnlinePlayerListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_info_list_.MergeFrom(from.player_info_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.param() != 0) {
    set_param(from.param());
  }
}

void GetOnlinePlayerListRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetOnlinePlayerListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOnlinePlayerListRsp::CopyFrom(const GetOnlinePlayerListRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetOnlinePlayerListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOnlinePlayerListRsp::IsInitialized() const {
  return true;
}

void GetOnlinePlayerListRsp::Swap(GetOnlinePlayerListRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOnlinePlayerListRsp::InternalSwap(GetOnlinePlayerListRsp* other) {
  using std::swap;
  player_info_list_.InternalSwap(&other->player_info_list_);
  swap(retcode_, other->retcode_);
  swap(param_, other->param_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetOnlinePlayerListRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetOnlinePlayerListRsp

// int32 retcode = 7;
void GetOnlinePlayerListRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetOnlinePlayerListRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetOnlinePlayerListRsp.retcode)
  return retcode_;
}
void GetOnlinePlayerListRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetOnlinePlayerListRsp.retcode)
}

// uint32 param = 11;
void GetOnlinePlayerListRsp::clear_param() {
  param_ = 0u;
}
::google::protobuf::uint32 GetOnlinePlayerListRsp::param() const {
  // @@protoc_insertion_point(field_get:proto.GetOnlinePlayerListRsp.param)
  return param_;
}
void GetOnlinePlayerListRsp::set_param(::google::protobuf::uint32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:proto.GetOnlinePlayerListRsp.param)
}

// repeated .proto.OnlinePlayerInfo player_info_list = 5;
int GetOnlinePlayerListRsp::player_info_list_size() const {
  return player_info_list_.size();
}
void GetOnlinePlayerListRsp::clear_player_info_list() {
  player_info_list_.Clear();
}
const ::proto::OnlinePlayerInfo& GetOnlinePlayerListRsp::player_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetOnlinePlayerListRsp.player_info_list)
  return player_info_list_.Get(index);
}
::proto::OnlinePlayerInfo* GetOnlinePlayerListRsp::mutable_player_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetOnlinePlayerListRsp.player_info_list)
  return player_info_list_.Mutable(index);
}
::proto::OnlinePlayerInfo* GetOnlinePlayerListRsp::add_player_info_list() {
  // @@protoc_insertion_point(field_add:proto.GetOnlinePlayerListRsp.player_info_list)
  return player_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::OnlinePlayerInfo >*
GetOnlinePlayerListRsp::mutable_player_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetOnlinePlayerListRsp.player_info_list)
  return &player_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::OnlinePlayerInfo >&
GetOnlinePlayerListRsp::player_info_list() const {
  // @@protoc_insertion_point(field_list:proto.GetOnlinePlayerListRsp.player_info_list)
  return player_info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerTimeNotify::kServerTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerTimeNotify::ServerTimeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerTimeNotify)
}
ServerTimeNotify::ServerTimeNotify(const ServerTimeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_time_ = from.server_time_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerTimeNotify)
}

void ServerTimeNotify::SharedCtor() {
  server_time_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

ServerTimeNotify::~ServerTimeNotify() {
  // @@protoc_insertion_point(destructor:proto.ServerTimeNotify)
  SharedDtor();
}

void ServerTimeNotify::SharedDtor() {
}

void ServerTimeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerTimeNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerTimeNotify& ServerTimeNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerTimeNotify* ServerTimeNotify::New(::google::protobuf::Arena* arena) const {
  ServerTimeNotify* n = new ServerTimeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerTimeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerTimeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_time_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ServerTimeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerTimeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 server_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &server_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerTimeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerTimeNotify)
  return false;
#undef DO_
}

void ServerTimeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerTimeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 server_time = 5;
  if (this->server_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->server_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerTimeNotify)
}

::google::protobuf::uint8* ServerTimeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerTimeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 server_time = 5;
  if (this->server_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->server_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerTimeNotify)
  return target;
}

size_t ServerTimeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerTimeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 server_time = 5;
  if (this->server_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->server_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerTimeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerTimeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerTimeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerTimeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerTimeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerTimeNotify)
    MergeFrom(*source);
  }
}

void ServerTimeNotify::MergeFrom(const ServerTimeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerTimeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_time() != 0) {
    set_server_time(from.server_time());
  }
}

void ServerTimeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerTimeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerTimeNotify::CopyFrom(const ServerTimeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerTimeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerTimeNotify::IsInitialized() const {
  return true;
}

void ServerTimeNotify::Swap(ServerTimeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerTimeNotify::InternalSwap(ServerTimeNotify* other) {
  using std::swap;
  swap(server_time_, other->server_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerTimeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerTimeNotify

// uint64 server_time = 5;
void ServerTimeNotify::clear_server_time() {
  server_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ServerTimeNotify::server_time() const {
  // @@protoc_insertion_point(field_get:proto.ServerTimeNotify.server_time)
  return server_time_;
}
void ServerTimeNotify::set_server_time(::google::protobuf::uint64 value) {
  
  server_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerTimeNotify.server_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerLogNotify::kServerLogFieldNumber;
const int ServerLogNotify::kLogTypeFieldNumber;
const int ServerLogNotify::kLogLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerLogNotify::ServerLogNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerLogNotify)
}
ServerLogNotify::ServerLogNotify(const ServerLogNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_log_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_log().size() > 0) {
    server_log_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_log_);
  }
  ::memcpy(&log_type_, &from.log_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&log_level_) -
    reinterpret_cast<char*>(&log_type_)) + sizeof(log_level_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerLogNotify)
}

void ServerLogNotify::SharedCtor() {
  server_log_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&log_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&log_level_) -
      reinterpret_cast<char*>(&log_type_)) + sizeof(log_level_));
  _cached_size_ = 0;
}

ServerLogNotify::~ServerLogNotify() {
  // @@protoc_insertion_point(destructor:proto.ServerLogNotify)
  SharedDtor();
}

void ServerLogNotify::SharedDtor() {
  server_log_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerLogNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerLogNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerLogNotify& ServerLogNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerLogNotify* ServerLogNotify::New(::google::protobuf::Arena* arena) const {
  ServerLogNotify* n = new ServerLogNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerLogNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerLogNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_log_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&log_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&log_level_) -
      reinterpret_cast<char*>(&log_type_)) + sizeof(log_level_));
  _internal_metadata_.Clear();
}

bool ServerLogNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerLogNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string server_log = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_log()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_log().data(), static_cast<int>(this->server_log().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ServerLogNotify.server_log"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ServerLogType log_type = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_log_type(static_cast< ::proto::ServerLogType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ServerLogLevel log_level = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_log_level(static_cast< ::proto::ServerLogLevel >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerLogNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerLogNotify)
  return false;
#undef DO_
}

void ServerLogNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerLogNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_log = 7;
  if (this->server_log().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_log().data(), static_cast<int>(this->server_log().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ServerLogNotify.server_log");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->server_log(), output);
  }

  // .proto.ServerLogType log_type = 9;
  if (this->log_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->log_type(), output);
  }

  // .proto.ServerLogLevel log_level = 15;
  if (this->log_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->log_level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerLogNotify)
}

::google::protobuf::uint8* ServerLogNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerLogNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_log = 7;
  if (this->server_log().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_log().data(), static_cast<int>(this->server_log().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ServerLogNotify.server_log");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->server_log(), target);
  }

  // .proto.ServerLogType log_type = 9;
  if (this->log_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->log_type(), target);
  }

  // .proto.ServerLogLevel log_level = 15;
  if (this->log_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      15, this->log_level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerLogNotify)
  return target;
}

size_t ServerLogNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerLogNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string server_log = 7;
  if (this->server_log().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_log());
  }

  // .proto.ServerLogType log_type = 9;
  if (this->log_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->log_type());
  }

  // .proto.ServerLogLevel log_level = 15;
  if (this->log_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->log_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerLogNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerLogNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerLogNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerLogNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerLogNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerLogNotify)
    MergeFrom(*source);
  }
}

void ServerLogNotify::MergeFrom(const ServerLogNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerLogNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_log().size() > 0) {

    server_log_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_log_);
  }
  if (from.log_type() != 0) {
    set_log_type(from.log_type());
  }
  if (from.log_level() != 0) {
    set_log_level(from.log_level());
  }
}

void ServerLogNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerLogNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerLogNotify::CopyFrom(const ServerLogNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerLogNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerLogNotify::IsInitialized() const {
  return true;
}

void ServerLogNotify::Swap(ServerLogNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerLogNotify::InternalSwap(ServerLogNotify* other) {
  using std::swap;
  server_log_.Swap(&other->server_log_);
  swap(log_type_, other->log_type_);
  swap(log_level_, other->log_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerLogNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerLogNotify

// string server_log = 7;
void ServerLogNotify::clear_server_log() {
  server_log_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ServerLogNotify::server_log() const {
  // @@protoc_insertion_point(field_get:proto.ServerLogNotify.server_log)
  return server_log_.GetNoArena();
}
void ServerLogNotify::set_server_log(const ::std::string& value) {
  
  server_log_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ServerLogNotify.server_log)
}
#if LANG_CXX11
void ServerLogNotify::set_server_log(::std::string&& value) {
  
  server_log_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ServerLogNotify.server_log)
}
#endif
void ServerLogNotify::set_server_log(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  server_log_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ServerLogNotify.server_log)
}
void ServerLogNotify::set_server_log(const char* value, size_t size) {
  
  server_log_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ServerLogNotify.server_log)
}
::std::string* ServerLogNotify::mutable_server_log() {
  
  // @@protoc_insertion_point(field_mutable:proto.ServerLogNotify.server_log)
  return server_log_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServerLogNotify::release_server_log() {
  // @@protoc_insertion_point(field_release:proto.ServerLogNotify.server_log)
  
  return server_log_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerLogNotify::set_allocated_server_log(::std::string* server_log) {
  if (server_log != NULL) {
    
  } else {
    
  }
  server_log_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_log);
  // @@protoc_insertion_point(field_set_allocated:proto.ServerLogNotify.server_log)
}

// .proto.ServerLogType log_type = 9;
void ServerLogNotify::clear_log_type() {
  log_type_ = 0;
}
::proto::ServerLogType ServerLogNotify::log_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerLogNotify.log_type)
  return static_cast< ::proto::ServerLogType >(log_type_);
}
void ServerLogNotify::set_log_type(::proto::ServerLogType value) {
  
  log_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerLogNotify.log_type)
}

// .proto.ServerLogLevel log_level = 15;
void ServerLogNotify::clear_log_level() {
  log_level_ = 0;
}
::proto::ServerLogLevel ServerLogNotify::log_level() const {
  // @@protoc_insertion_point(field_get:proto.ServerLogNotify.log_level)
  return static_cast< ::proto::ServerLogLevel >(log_level_);
}
void ServerLogNotify::set_log_level(::proto::ServerLogLevel value) {
  
  log_level_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerLogNotify.log_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientReconnectNotify::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientReconnectNotify::ClientReconnectNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ClientReconnectNotify)
}
ClientReconnectNotify::ClientReconnectNotify(const ClientReconnectNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_ = from.reason_;
  // @@protoc_insertion_point(copy_constructor:proto.ClientReconnectNotify)
}

void ClientReconnectNotify::SharedCtor() {
  reason_ = 0;
  _cached_size_ = 0;
}

ClientReconnectNotify::~ClientReconnectNotify() {
  // @@protoc_insertion_point(destructor:proto.ClientReconnectNotify)
  SharedDtor();
}

void ClientReconnectNotify::SharedDtor() {
}

void ClientReconnectNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientReconnectNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientReconnectNotify& ClientReconnectNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientReconnectNotify* ClientReconnectNotify::New(::google::protobuf::Arena* arena) const {
  ClientReconnectNotify* n = new ClientReconnectNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientReconnectNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ClientReconnectNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_ = 0;
  _internal_metadata_.Clear();
}

bool ClientReconnectNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ClientReconnectNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ClientReconnectReason reason = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason(static_cast< ::proto::ClientReconnectReason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ClientReconnectNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ClientReconnectNotify)
  return false;
#undef DO_
}

void ClientReconnectNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ClientReconnectNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ClientReconnectReason reason = 6;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ClientReconnectNotify)
}

::google::protobuf::uint8* ClientReconnectNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ClientReconnectNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ClientReconnectReason reason = 6;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ClientReconnectNotify)
  return target;
}

size_t ClientReconnectNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ClientReconnectNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.ClientReconnectReason reason = 6;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientReconnectNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ClientReconnectNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientReconnectNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientReconnectNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ClientReconnectNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ClientReconnectNotify)
    MergeFrom(*source);
  }
}

void ClientReconnectNotify::MergeFrom(const ClientReconnectNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ClientReconnectNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void ClientReconnectNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ClientReconnectNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientReconnectNotify::CopyFrom(const ClientReconnectNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ClientReconnectNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientReconnectNotify::IsInitialized() const {
  return true;
}

void ClientReconnectNotify::Swap(ClientReconnectNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientReconnectNotify::InternalSwap(ClientReconnectNotify* other) {
  using std::swap;
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientReconnectNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientReconnectNotify

// .proto.ClientReconnectReason reason = 6;
void ClientReconnectNotify::clear_reason() {
  reason_ = 0;
}
::proto::ClientReconnectReason ClientReconnectNotify::reason() const {
  // @@protoc_insertion_point(field_get:proto.ClientReconnectNotify.reason)
  return static_cast< ::proto::ClientReconnectReason >(reason_);
}
void ClientReconnectNotify::set_reason(::proto::ClientReconnectReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientReconnectNotify.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotPushPlayerDataNotify::kBinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotPushPlayerDataNotify::RobotPushPlayerDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RobotPushPlayerDataNotify)
}
RobotPushPlayerDataNotify::RobotPushPlayerDataNotify(const RobotPushPlayerDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bin().size() > 0) {
    bin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bin_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.RobotPushPlayerDataNotify)
}

void RobotPushPlayerDataNotify::SharedCtor() {
  bin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RobotPushPlayerDataNotify::~RobotPushPlayerDataNotify() {
  // @@protoc_insertion_point(destructor:proto.RobotPushPlayerDataNotify)
  SharedDtor();
}

void RobotPushPlayerDataNotify::SharedDtor() {
  bin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RobotPushPlayerDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotPushPlayerDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotPushPlayerDataNotify& RobotPushPlayerDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

RobotPushPlayerDataNotify* RobotPushPlayerDataNotify::New(::google::protobuf::Arena* arena) const {
  RobotPushPlayerDataNotify* n = new RobotPushPlayerDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotPushPlayerDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RobotPushPlayerDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RobotPushPlayerDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RobotPushPlayerDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes bin = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RobotPushPlayerDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RobotPushPlayerDataNotify)
  return false;
#undef DO_
}

void RobotPushPlayerDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RobotPushPlayerDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes bin = 6;
  if (this->bin().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->bin(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RobotPushPlayerDataNotify)
}

::google::protobuf::uint8* RobotPushPlayerDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RobotPushPlayerDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes bin = 6;
  if (this->bin().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->bin(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RobotPushPlayerDataNotify)
  return target;
}

size_t RobotPushPlayerDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RobotPushPlayerDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes bin = 6;
  if (this->bin().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bin());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotPushPlayerDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RobotPushPlayerDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotPushPlayerDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotPushPlayerDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RobotPushPlayerDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RobotPushPlayerDataNotify)
    MergeFrom(*source);
  }
}

void RobotPushPlayerDataNotify::MergeFrom(const RobotPushPlayerDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RobotPushPlayerDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bin().size() > 0) {

    bin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bin_);
  }
}

void RobotPushPlayerDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RobotPushPlayerDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotPushPlayerDataNotify::CopyFrom(const RobotPushPlayerDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RobotPushPlayerDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotPushPlayerDataNotify::IsInitialized() const {
  return true;
}

void RobotPushPlayerDataNotify::Swap(RobotPushPlayerDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotPushPlayerDataNotify::InternalSwap(RobotPushPlayerDataNotify* other) {
  using std::swap;
  bin_.Swap(&other->bin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotPushPlayerDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RobotPushPlayerDataNotify

// bytes bin = 6;
void RobotPushPlayerDataNotify::clear_bin() {
  bin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RobotPushPlayerDataNotify::bin() const {
  // @@protoc_insertion_point(field_get:proto.RobotPushPlayerDataNotify.bin)
  return bin_.GetNoArena();
}
void RobotPushPlayerDataNotify::set_bin(const ::std::string& value) {
  
  bin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RobotPushPlayerDataNotify.bin)
}
#if LANG_CXX11
void RobotPushPlayerDataNotify::set_bin(::std::string&& value) {
  
  bin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RobotPushPlayerDataNotify.bin)
}
#endif
void RobotPushPlayerDataNotify::set_bin(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RobotPushPlayerDataNotify.bin)
}
void RobotPushPlayerDataNotify::set_bin(const void* value, size_t size) {
  
  bin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RobotPushPlayerDataNotify.bin)
}
::std::string* RobotPushPlayerDataNotify::mutable_bin() {
  
  // @@protoc_insertion_point(field_mutable:proto.RobotPushPlayerDataNotify.bin)
  return bin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RobotPushPlayerDataNotify::release_bin() {
  // @@protoc_insertion_point(field_release:proto.RobotPushPlayerDataNotify.bin)
  
  return bin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RobotPushPlayerDataNotify::set_allocated_bin(::std::string* bin) {
  if (bin != NULL) {
    
  } else {
    
  }
  bin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bin);
  // @@protoc_insertion_point(field_set_allocated:proto.RobotPushPlayerDataNotify.bin)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientReportNotify::kReportTypeFieldNumber;
const int ClientReportNotify::kReportValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientReportNotify::ClientReportNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ClientReportNotify)
}
ClientReportNotify::ClientReportNotify(const ClientReportNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  report_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.report_type().size() > 0) {
    report_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.report_type_);
  }
  report_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.report_value().size() > 0) {
    report_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.report_value_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.ClientReportNotify)
}

void ClientReportNotify::SharedCtor() {
  report_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  report_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ClientReportNotify::~ClientReportNotify() {
  // @@protoc_insertion_point(destructor:proto.ClientReportNotify)
  SharedDtor();
}

void ClientReportNotify::SharedDtor() {
  report_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  report_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientReportNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientReportNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientReportNotify& ClientReportNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientReportNotify* ClientReportNotify::New(::google::protobuf::Arena* arena) const {
  ClientReportNotify* n = new ClientReportNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientReportNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ClientReportNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  report_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  report_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ClientReportNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ClientReportNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string report_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_report_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->report_type().data(), static_cast<int>(this->report_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ClientReportNotify.report_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string report_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_report_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->report_value().data(), static_cast<int>(this->report_value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ClientReportNotify.report_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ClientReportNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ClientReportNotify)
  return false;
#undef DO_
}

void ClientReportNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ClientReportNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string report_type = 1;
  if (this->report_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->report_type().data(), static_cast<int>(this->report_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ClientReportNotify.report_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->report_type(), output);
  }

  // string report_value = 4;
  if (this->report_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->report_value().data(), static_cast<int>(this->report_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ClientReportNotify.report_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->report_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ClientReportNotify)
}

::google::protobuf::uint8* ClientReportNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ClientReportNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string report_type = 1;
  if (this->report_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->report_type().data(), static_cast<int>(this->report_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ClientReportNotify.report_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->report_type(), target);
  }

  // string report_value = 4;
  if (this->report_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->report_value().data(), static_cast<int>(this->report_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ClientReportNotify.report_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->report_value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ClientReportNotify)
  return target;
}

size_t ClientReportNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ClientReportNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string report_type = 1;
  if (this->report_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->report_type());
  }

  // string report_value = 4;
  if (this->report_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->report_value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientReportNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ClientReportNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientReportNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientReportNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ClientReportNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ClientReportNotify)
    MergeFrom(*source);
  }
}

void ClientReportNotify::MergeFrom(const ClientReportNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ClientReportNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.report_type().size() > 0) {

    report_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.report_type_);
  }
  if (from.report_value().size() > 0) {

    report_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.report_value_);
  }
}

void ClientReportNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ClientReportNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientReportNotify::CopyFrom(const ClientReportNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ClientReportNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientReportNotify::IsInitialized() const {
  return true;
}

void ClientReportNotify::Swap(ClientReportNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientReportNotify::InternalSwap(ClientReportNotify* other) {
  using std::swap;
  report_type_.Swap(&other->report_type_);
  report_value_.Swap(&other->report_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientReportNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientReportNotify

// string report_type = 1;
void ClientReportNotify::clear_report_type() {
  report_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientReportNotify::report_type() const {
  // @@protoc_insertion_point(field_get:proto.ClientReportNotify.report_type)
  return report_type_.GetNoArena();
}
void ClientReportNotify::set_report_type(const ::std::string& value) {
  
  report_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ClientReportNotify.report_type)
}
#if LANG_CXX11
void ClientReportNotify::set_report_type(::std::string&& value) {
  
  report_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ClientReportNotify.report_type)
}
#endif
void ClientReportNotify::set_report_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  report_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ClientReportNotify.report_type)
}
void ClientReportNotify::set_report_type(const char* value, size_t size) {
  
  report_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ClientReportNotify.report_type)
}
::std::string* ClientReportNotify::mutable_report_type() {
  
  // @@protoc_insertion_point(field_mutable:proto.ClientReportNotify.report_type)
  return report_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientReportNotify::release_report_type() {
  // @@protoc_insertion_point(field_release:proto.ClientReportNotify.report_type)
  
  return report_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientReportNotify::set_allocated_report_type(::std::string* report_type) {
  if (report_type != NULL) {
    
  } else {
    
  }
  report_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), report_type);
  // @@protoc_insertion_point(field_set_allocated:proto.ClientReportNotify.report_type)
}

// string report_value = 4;
void ClientReportNotify::clear_report_value() {
  report_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientReportNotify::report_value() const {
  // @@protoc_insertion_point(field_get:proto.ClientReportNotify.report_value)
  return report_value_.GetNoArena();
}
void ClientReportNotify::set_report_value(const ::std::string& value) {
  
  report_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ClientReportNotify.report_value)
}
#if LANG_CXX11
void ClientReportNotify::set_report_value(::std::string&& value) {
  
  report_value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ClientReportNotify.report_value)
}
#endif
void ClientReportNotify::set_report_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  report_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ClientReportNotify.report_value)
}
void ClientReportNotify::set_report_value(const char* value, size_t size) {
  
  report_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ClientReportNotify.report_value)
}
::std::string* ClientReportNotify::mutable_report_value() {
  
  // @@protoc_insertion_point(field_mutable:proto.ClientReportNotify.report_value)
  return report_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientReportNotify::release_report_value() {
  // @@protoc_insertion_point(field_release:proto.ClientReportNotify.report_value)
  
  return report_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientReportNotify::set_allocated_report_value(::std::string* report_value) {
  if (report_value != NULL) {
    
  } else {
    
  }
  report_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), report_value);
  // @@protoc_insertion_point(field_set_allocated:proto.ClientReportNotify.report_value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnionCmd::kBodyFieldNumber;
const int UnionCmd::kMessageIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnionCmd::UnionCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UnionCmd)
}
UnionCmd::UnionCmd(const UnionCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.body().size() > 0) {
    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  message_id_ = from.message_id_;
  // @@protoc_insertion_point(copy_constructor:proto.UnionCmd)
}

void UnionCmd::SharedCtor() {
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_id_ = 0u;
  _cached_size_ = 0;
}

UnionCmd::~UnionCmd() {
  // @@protoc_insertion_point(destructor:proto.UnionCmd)
  SharedDtor();
}

void UnionCmd::SharedDtor() {
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UnionCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnionCmd::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnionCmd& UnionCmd::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnionCmd* UnionCmd::New(::google::protobuf::Arena* arena) const {
  UnionCmd* n = new UnionCmd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnionCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UnionCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_id_ = 0u;
  _internal_metadata_.Clear();
}

bool UnionCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UnionCmd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 message_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &message_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes body = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UnionCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UnionCmd)
  return false;
#undef DO_
}

void UnionCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UnionCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 message_id = 8;
  if (this->message_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->message_id(), output);
  }

  // bytes body = 14;
  if (this->body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      14, this->body(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UnionCmd)
}

::google::protobuf::uint8* UnionCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UnionCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 message_id = 8;
  if (this->message_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->message_id(), target);
  }

  // bytes body = 14;
  if (this->body().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->body(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UnionCmd)
  return target;
}

size_t UnionCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UnionCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes body = 14;
  if (this->body().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->body());
  }

  // uint32 message_id = 8;
  if (this->message_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->message_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnionCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UnionCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const UnionCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnionCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UnionCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UnionCmd)
    MergeFrom(*source);
  }
}

void UnionCmd::MergeFrom(const UnionCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UnionCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.body().size() > 0) {

    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  if (from.message_id() != 0) {
    set_message_id(from.message_id());
  }
}

void UnionCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UnionCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnionCmd::CopyFrom(const UnionCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UnionCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnionCmd::IsInitialized() const {
  return true;
}

void UnionCmd::Swap(UnionCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnionCmd::InternalSwap(UnionCmd* other) {
  using std::swap;
  body_.Swap(&other->body_);
  swap(message_id_, other->message_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnionCmd::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnionCmd

// bytes body = 14;
void UnionCmd::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UnionCmd::body() const {
  // @@protoc_insertion_point(field_get:proto.UnionCmd.body)
  return body_.GetNoArena();
}
void UnionCmd::set_body(const ::std::string& value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.UnionCmd.body)
}
#if LANG_CXX11
void UnionCmd::set_body(::std::string&& value) {
  
  body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.UnionCmd.body)
}
#endif
void UnionCmd::set_body(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.UnionCmd.body)
}
void UnionCmd::set_body(const void* value, size_t size) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.UnionCmd.body)
}
::std::string* UnionCmd::mutable_body() {
  
  // @@protoc_insertion_point(field_mutable:proto.UnionCmd.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnionCmd::release_body() {
  // @@protoc_insertion_point(field_release:proto.UnionCmd.body)
  
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnionCmd::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    
  } else {
    
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:proto.UnionCmd.body)
}

// uint32 message_id = 8;
void UnionCmd::clear_message_id() {
  message_id_ = 0u;
}
::google::protobuf::uint32 UnionCmd::message_id() const {
  // @@protoc_insertion_point(field_get:proto.UnionCmd.message_id)
  return message_id_;
}
void UnionCmd::set_message_id(::google::protobuf::uint32 value) {
  
  message_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnionCmd.message_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnionCmdNotify::kCmdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnionCmdNotify::UnionCmdNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UnionCmdNotify)
}
UnionCmdNotify::UnionCmdNotify(const UnionCmdNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cmd_list_(from.cmd_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.UnionCmdNotify)
}

void UnionCmdNotify::SharedCtor() {
  _cached_size_ = 0;
}

UnionCmdNotify::~UnionCmdNotify() {
  // @@protoc_insertion_point(destructor:proto.UnionCmdNotify)
  SharedDtor();
}

void UnionCmdNotify::SharedDtor() {
}

void UnionCmdNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnionCmdNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnionCmdNotify& UnionCmdNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnionCmdNotify* UnionCmdNotify::New(::google::protobuf::Arena* arena) const {
  UnionCmdNotify* n = new UnionCmdNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnionCmdNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UnionCmdNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cmd_list_.Clear();
  _internal_metadata_.Clear();
}

bool UnionCmdNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UnionCmdNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.UnionCmd cmd_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cmd_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UnionCmdNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UnionCmdNotify)
  return false;
#undef DO_
}

void UnionCmdNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UnionCmdNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.UnionCmd cmd_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cmd_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cmd_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UnionCmdNotify)
}

::google::protobuf::uint8* UnionCmdNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UnionCmdNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.UnionCmd cmd_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cmd_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->cmd_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UnionCmdNotify)
  return target;
}

size_t UnionCmdNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UnionCmdNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.UnionCmd cmd_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->cmd_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cmd_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnionCmdNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UnionCmdNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const UnionCmdNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnionCmdNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UnionCmdNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UnionCmdNotify)
    MergeFrom(*source);
  }
}

void UnionCmdNotify::MergeFrom(const UnionCmdNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UnionCmdNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cmd_list_.MergeFrom(from.cmd_list_);
}

void UnionCmdNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UnionCmdNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnionCmdNotify::CopyFrom(const UnionCmdNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UnionCmdNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnionCmdNotify::IsInitialized() const {
  return true;
}

void UnionCmdNotify::Swap(UnionCmdNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnionCmdNotify::InternalSwap(UnionCmdNotify* other) {
  using std::swap;
  cmd_list_.InternalSwap(&other->cmd_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnionCmdNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnionCmdNotify

// repeated .proto.UnionCmd cmd_list = 1;
int UnionCmdNotify::cmd_list_size() const {
  return cmd_list_.size();
}
void UnionCmdNotify::clear_cmd_list() {
  cmd_list_.Clear();
}
const ::proto::UnionCmd& UnionCmdNotify::cmd_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UnionCmdNotify.cmd_list)
  return cmd_list_.Get(index);
}
::proto::UnionCmd* UnionCmdNotify::mutable_cmd_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.UnionCmdNotify.cmd_list)
  return cmd_list_.Mutable(index);
}
::proto::UnionCmd* UnionCmdNotify::add_cmd_list() {
  // @@protoc_insertion_point(field_add:proto.UnionCmdNotify.cmd_list)
  return cmd_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::UnionCmd >*
UnionCmdNotify::mutable_cmd_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UnionCmdNotify.cmd_list)
  return &cmd_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::UnionCmd >&
UnionCmdNotify::cmd_list() const {
  // @@protoc_insertion_point(field_list:proto.UnionCmdNotify.cmd_list)
  return cmd_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOnlinePlayerInfoReq::kIsOnlineIdFieldNumber;
const int GetOnlinePlayerInfoReq::kTargetUidFieldNumber;
const int GetOnlinePlayerInfoReq::kOnlineIdFieldNumber;
const int GetOnlinePlayerInfoReq::kPsnIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOnlinePlayerInfoReq::GetOnlinePlayerInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetOnlinePlayerInfoReq)
}
GetOnlinePlayerInfoReq::GetOnlinePlayerInfoReq(const GetOnlinePlayerInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_online_id_ = from.is_online_id_;
  clear_has_player_id();
  switch (from.player_id_case()) {
    case kTargetUid: {
      set_target_uid(from.target_uid());
      break;
    }
    case kOnlineId: {
      set_online_id(from.online_id());
      break;
    }
    case kPsnId: {
      set_psn_id(from.psn_id());
      break;
    }
    case PLAYER_ID_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetOnlinePlayerInfoReq)
}

void GetOnlinePlayerInfoReq::SharedCtor() {
  is_online_id_ = false;
  clear_has_player_id();
  _cached_size_ = 0;
}

GetOnlinePlayerInfoReq::~GetOnlinePlayerInfoReq() {
  // @@protoc_insertion_point(destructor:proto.GetOnlinePlayerInfoReq)
  SharedDtor();
}

void GetOnlinePlayerInfoReq::SharedDtor() {
  if (has_player_id()) {
    clear_player_id();
  }
}

void GetOnlinePlayerInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOnlinePlayerInfoReq::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetOnlinePlayerInfoReq& GetOnlinePlayerInfoReq::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetOnlinePlayerInfoReq* GetOnlinePlayerInfoReq::New(::google::protobuf::Arena* arena) const {
  GetOnlinePlayerInfoReq* n = new GetOnlinePlayerInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetOnlinePlayerInfoReq::clear_player_id() {
// @@protoc_insertion_point(one_of_clear_start:proto.GetOnlinePlayerInfoReq)
  switch (player_id_case()) {
    case kTargetUid: {
      // No need to clear
      break;
    }
    case kOnlineId: {
      player_id_.online_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kPsnId: {
      player_id_.psn_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case PLAYER_ID_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PLAYER_ID_NOT_SET;
}


void GetOnlinePlayerInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetOnlinePlayerInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_online_id_ = false;
  clear_player_id();
  _internal_metadata_.Clear();
}

bool GetOnlinePlayerInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetOnlinePlayerInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string psn_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_psn_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->psn_id().data(), static_cast<int>(this->psn_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetOnlinePlayerInfoReq.psn_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string online_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_online_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->online_id().data(), static_cast<int>(this->online_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetOnlinePlayerInfoReq.online_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          clear_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_.target_uid_)));
          set_has_target_uid();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_online_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_online_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetOnlinePlayerInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetOnlinePlayerInfoReq)
  return false;
#undef DO_
}

void GetOnlinePlayerInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetOnlinePlayerInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string psn_id = 2;
  if (has_psn_id()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->psn_id().data(), static_cast<int>(this->psn_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetOnlinePlayerInfoReq.psn_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->psn_id(), output);
  }

  // string online_id = 7;
  if (has_online_id()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->online_id().data(), static_cast<int>(this->online_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetOnlinePlayerInfoReq.online_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->online_id(), output);
  }

  // uint32 target_uid = 9;
  if (has_target_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->target_uid(), output);
  }

  // bool is_online_id = 15;
  if (this->is_online_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->is_online_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetOnlinePlayerInfoReq)
}

::google::protobuf::uint8* GetOnlinePlayerInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetOnlinePlayerInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string psn_id = 2;
  if (has_psn_id()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->psn_id().data(), static_cast<int>(this->psn_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetOnlinePlayerInfoReq.psn_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->psn_id(), target);
  }

  // string online_id = 7;
  if (has_online_id()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->online_id().data(), static_cast<int>(this->online_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetOnlinePlayerInfoReq.online_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->online_id(), target);
  }

  // uint32 target_uid = 9;
  if (has_target_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->target_uid(), target);
  }

  // bool is_online_id = 15;
  if (this->is_online_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->is_online_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetOnlinePlayerInfoReq)
  return target;
}

size_t GetOnlinePlayerInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetOnlinePlayerInfoReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_online_id = 15;
  if (this->is_online_id() != 0) {
    total_size += 1 + 1;
  }

  switch (player_id_case()) {
    // uint32 target_uid = 9;
    case kTargetUid: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->target_uid());
      break;
    }
    // string online_id = 7;
    case kOnlineId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->online_id());
      break;
    }
    // string psn_id = 2;
    case kPsnId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->psn_id());
      break;
    }
    case PLAYER_ID_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOnlinePlayerInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetOnlinePlayerInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOnlinePlayerInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOnlinePlayerInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetOnlinePlayerInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetOnlinePlayerInfoReq)
    MergeFrom(*source);
  }
}

void GetOnlinePlayerInfoReq::MergeFrom(const GetOnlinePlayerInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetOnlinePlayerInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_online_id() != 0) {
    set_is_online_id(from.is_online_id());
  }
  switch (from.player_id_case()) {
    case kTargetUid: {
      set_target_uid(from.target_uid());
      break;
    }
    case kOnlineId: {
      set_online_id(from.online_id());
      break;
    }
    case kPsnId: {
      set_psn_id(from.psn_id());
      break;
    }
    case PLAYER_ID_NOT_SET: {
      break;
    }
  }
}

void GetOnlinePlayerInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetOnlinePlayerInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOnlinePlayerInfoReq::CopyFrom(const GetOnlinePlayerInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetOnlinePlayerInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOnlinePlayerInfoReq::IsInitialized() const {
  return true;
}

void GetOnlinePlayerInfoReq::Swap(GetOnlinePlayerInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOnlinePlayerInfoReq::InternalSwap(GetOnlinePlayerInfoReq* other) {
  using std::swap;
  swap(is_online_id_, other->is_online_id_);
  swap(player_id_, other->player_id_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetOnlinePlayerInfoReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetOnlinePlayerInfoReq

// bool is_online_id = 15;
void GetOnlinePlayerInfoReq::clear_is_online_id() {
  is_online_id_ = false;
}
bool GetOnlinePlayerInfoReq::is_online_id() const {
  // @@protoc_insertion_point(field_get:proto.GetOnlinePlayerInfoReq.is_online_id)
  return is_online_id_;
}
void GetOnlinePlayerInfoReq::set_is_online_id(bool value) {
  
  is_online_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetOnlinePlayerInfoReq.is_online_id)
}

// uint32 target_uid = 9;
bool GetOnlinePlayerInfoReq::has_target_uid() const {
  return player_id_case() == kTargetUid;
}
void GetOnlinePlayerInfoReq::set_has_target_uid() {
  _oneof_case_[0] = kTargetUid;
}
void GetOnlinePlayerInfoReq::clear_target_uid() {
  if (has_target_uid()) {
    player_id_.target_uid_ = 0u;
    clear_has_player_id();
  }
}
::google::protobuf::uint32 GetOnlinePlayerInfoReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.GetOnlinePlayerInfoReq.target_uid)
  if (has_target_uid()) {
    return player_id_.target_uid_;
  }
  return 0u;
}
void GetOnlinePlayerInfoReq::set_target_uid(::google::protobuf::uint32 value) {
  if (!has_target_uid()) {
    clear_player_id();
    set_has_target_uid();
  }
  player_id_.target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetOnlinePlayerInfoReq.target_uid)
}

// string online_id = 7;
bool GetOnlinePlayerInfoReq::has_online_id() const {
  return player_id_case() == kOnlineId;
}
void GetOnlinePlayerInfoReq::set_has_online_id() {
  _oneof_case_[0] = kOnlineId;
}
void GetOnlinePlayerInfoReq::clear_online_id() {
  if (has_online_id()) {
    player_id_.online_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_player_id();
  }
}
const ::std::string& GetOnlinePlayerInfoReq::online_id() const {
  // @@protoc_insertion_point(field_get:proto.GetOnlinePlayerInfoReq.online_id)
  if (has_online_id()) {
    return player_id_.online_id_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void GetOnlinePlayerInfoReq::set_online_id(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.GetOnlinePlayerInfoReq.online_id)
  if (!has_online_id()) {
    clear_player_id();
    set_has_online_id();
    player_id_.online_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  player_id_.online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetOnlinePlayerInfoReq.online_id)
}
#if LANG_CXX11
void GetOnlinePlayerInfoReq::set_online_id(::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.GetOnlinePlayerInfoReq.online_id)
  if (!has_online_id()) {
    clear_player_id();
    set_has_online_id();
    player_id_.online_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  player_id_.online_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetOnlinePlayerInfoReq.online_id)
}
#endif
void GetOnlinePlayerInfoReq::set_online_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_online_id()) {
    clear_player_id();
    set_has_online_id();
    player_id_.online_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  player_id_.online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetOnlinePlayerInfoReq.online_id)
}
void GetOnlinePlayerInfoReq::set_online_id(const char* value, size_t size) {
  if (!has_online_id()) {
    clear_player_id();
    set_has_online_id();
    player_id_.online_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  player_id_.online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetOnlinePlayerInfoReq.online_id)
}
::std::string* GetOnlinePlayerInfoReq::mutable_online_id() {
  if (!has_online_id()) {
    clear_player_id();
    set_has_online_id();
    player_id_.online_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:proto.GetOnlinePlayerInfoReq.online_id)
  return player_id_.online_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetOnlinePlayerInfoReq::release_online_id() {
  // @@protoc_insertion_point(field_release:proto.GetOnlinePlayerInfoReq.online_id)
  if (has_online_id()) {
    clear_has_player_id();
    return player_id_.online_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void GetOnlinePlayerInfoReq::set_allocated_online_id(::std::string* online_id) {
  if (!has_online_id()) {
    player_id_.online_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_player_id();
  if (online_id != NULL) {
    set_has_online_id();
    player_id_.online_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        online_id);
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetOnlinePlayerInfoReq.online_id)
}

// string psn_id = 2;
bool GetOnlinePlayerInfoReq::has_psn_id() const {
  return player_id_case() == kPsnId;
}
void GetOnlinePlayerInfoReq::set_has_psn_id() {
  _oneof_case_[0] = kPsnId;
}
void GetOnlinePlayerInfoReq::clear_psn_id() {
  if (has_psn_id()) {
    player_id_.psn_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_player_id();
  }
}
const ::std::string& GetOnlinePlayerInfoReq::psn_id() const {
  // @@protoc_insertion_point(field_get:proto.GetOnlinePlayerInfoReq.psn_id)
  if (has_psn_id()) {
    return player_id_.psn_id_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void GetOnlinePlayerInfoReq::set_psn_id(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.GetOnlinePlayerInfoReq.psn_id)
  if (!has_psn_id()) {
    clear_player_id();
    set_has_psn_id();
    player_id_.psn_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  player_id_.psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetOnlinePlayerInfoReq.psn_id)
}
#if LANG_CXX11
void GetOnlinePlayerInfoReq::set_psn_id(::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.GetOnlinePlayerInfoReq.psn_id)
  if (!has_psn_id()) {
    clear_player_id();
    set_has_psn_id();
    player_id_.psn_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  player_id_.psn_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetOnlinePlayerInfoReq.psn_id)
}
#endif
void GetOnlinePlayerInfoReq::set_psn_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_psn_id()) {
    clear_player_id();
    set_has_psn_id();
    player_id_.psn_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  player_id_.psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetOnlinePlayerInfoReq.psn_id)
}
void GetOnlinePlayerInfoReq::set_psn_id(const char* value, size_t size) {
  if (!has_psn_id()) {
    clear_player_id();
    set_has_psn_id();
    player_id_.psn_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  player_id_.psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetOnlinePlayerInfoReq.psn_id)
}
::std::string* GetOnlinePlayerInfoReq::mutable_psn_id() {
  if (!has_psn_id()) {
    clear_player_id();
    set_has_psn_id();
    player_id_.psn_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:proto.GetOnlinePlayerInfoReq.psn_id)
  return player_id_.psn_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetOnlinePlayerInfoReq::release_psn_id() {
  // @@protoc_insertion_point(field_release:proto.GetOnlinePlayerInfoReq.psn_id)
  if (has_psn_id()) {
    clear_has_player_id();
    return player_id_.psn_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void GetOnlinePlayerInfoReq::set_allocated_psn_id(::std::string* psn_id) {
  if (!has_psn_id()) {
    player_id_.psn_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_player_id();
  if (psn_id != NULL) {
    set_has_psn_id();
    player_id_.psn_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        psn_id);
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetOnlinePlayerInfoReq.psn_id)
}

bool GetOnlinePlayerInfoReq::has_player_id() const {
  return player_id_case() != PLAYER_ID_NOT_SET;
}
void GetOnlinePlayerInfoReq::clear_has_player_id() {
  _oneof_case_[0] = PLAYER_ID_NOT_SET;
}
GetOnlinePlayerInfoReq::PlayerIdCase GetOnlinePlayerInfoReq::player_id_case() const {
  return GetOnlinePlayerInfoReq::PlayerIdCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOnlinePlayerInfoRsp::kRetcodeFieldNumber;
const int GetOnlinePlayerInfoRsp::kTargetUidFieldNumber;
const int GetOnlinePlayerInfoRsp::kParamFieldNumber;
const int GetOnlinePlayerInfoRsp::kTargetPlayerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOnlinePlayerInfoRsp::GetOnlinePlayerInfoRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetOnlinePlayerInfoRsp)
}
GetOnlinePlayerInfoRsp::GetOnlinePlayerInfoRsp(const GetOnlinePlayerInfoRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_target_player_info()) {
    target_player_info_ = new ::proto::OnlinePlayerInfo(*from.target_player_info_);
  } else {
    target_player_info_ = NULL;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_uid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.GetOnlinePlayerInfoRsp)
}

void GetOnlinePlayerInfoRsp::SharedCtor() {
  ::memset(&target_player_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&target_player_info_)) + sizeof(target_uid_));
  _cached_size_ = 0;
}

GetOnlinePlayerInfoRsp::~GetOnlinePlayerInfoRsp() {
  // @@protoc_insertion_point(destructor:proto.GetOnlinePlayerInfoRsp)
  SharedDtor();
}

void GetOnlinePlayerInfoRsp::SharedDtor() {
  if (this != internal_default_instance()) delete target_player_info_;
}

void GetOnlinePlayerInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOnlinePlayerInfoRsp::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetOnlinePlayerInfoRsp& GetOnlinePlayerInfoRsp::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetOnlinePlayerInfoRsp* GetOnlinePlayerInfoRsp::New(::google::protobuf::Arena* arena) const {
  GetOnlinePlayerInfoRsp* n = new GetOnlinePlayerInfoRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetOnlinePlayerInfoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetOnlinePlayerInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && target_player_info_ != NULL) {
    delete target_player_info_;
  }
  target_player_info_ = NULL;
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  _internal_metadata_.Clear();
}

bool GetOnlinePlayerInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetOnlinePlayerInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 param = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.OnlinePlayerInfo target_player_info = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_target_player_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetOnlinePlayerInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetOnlinePlayerInfoRsp)
  return false;
#undef DO_
}

void GetOnlinePlayerInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetOnlinePlayerInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 param = 4;
  if (this->param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->param(), output);
  }

  // uint32 target_uid = 7;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->target_uid(), output);
  }

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->retcode(), output);
  }

  // .proto.OnlinePlayerInfo target_player_info = 14;
  if (this->has_target_player_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->target_player_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetOnlinePlayerInfoRsp)
}

::google::protobuf::uint8* GetOnlinePlayerInfoRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetOnlinePlayerInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 param = 4;
  if (this->param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->param(), target);
  }

  // uint32 target_uid = 7;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->target_uid(), target);
  }

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->retcode(), target);
  }

  // .proto.OnlinePlayerInfo target_player_info = 14;
  if (this->has_target_player_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->target_player_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetOnlinePlayerInfoRsp)
  return target;
}

size_t GetOnlinePlayerInfoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetOnlinePlayerInfoRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.OnlinePlayerInfo target_player_info = 14;
  if (this->has_target_player_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->target_player_info_);
  }

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 param = 4;
  if (this->param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->param());
  }

  // uint32 target_uid = 7;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOnlinePlayerInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetOnlinePlayerInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOnlinePlayerInfoRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOnlinePlayerInfoRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetOnlinePlayerInfoRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetOnlinePlayerInfoRsp)
    MergeFrom(*source);
  }
}

void GetOnlinePlayerInfoRsp::MergeFrom(const GetOnlinePlayerInfoRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetOnlinePlayerInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_target_player_info()) {
    mutable_target_player_info()->::proto::OnlinePlayerInfo::MergeFrom(from.target_player_info());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.param() != 0) {
    set_param(from.param());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void GetOnlinePlayerInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetOnlinePlayerInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOnlinePlayerInfoRsp::CopyFrom(const GetOnlinePlayerInfoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetOnlinePlayerInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOnlinePlayerInfoRsp::IsInitialized() const {
  return true;
}

void GetOnlinePlayerInfoRsp::Swap(GetOnlinePlayerInfoRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOnlinePlayerInfoRsp::InternalSwap(GetOnlinePlayerInfoRsp* other) {
  using std::swap;
  swap(target_player_info_, other->target_player_info_);
  swap(retcode_, other->retcode_);
  swap(param_, other->param_);
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetOnlinePlayerInfoRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetOnlinePlayerInfoRsp

// int32 retcode = 11;
void GetOnlinePlayerInfoRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetOnlinePlayerInfoRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetOnlinePlayerInfoRsp.retcode)
  return retcode_;
}
void GetOnlinePlayerInfoRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetOnlinePlayerInfoRsp.retcode)
}

// uint32 target_uid = 7;
void GetOnlinePlayerInfoRsp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 GetOnlinePlayerInfoRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.GetOnlinePlayerInfoRsp.target_uid)
  return target_uid_;
}
void GetOnlinePlayerInfoRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetOnlinePlayerInfoRsp.target_uid)
}

// uint32 param = 4;
void GetOnlinePlayerInfoRsp::clear_param() {
  param_ = 0u;
}
::google::protobuf::uint32 GetOnlinePlayerInfoRsp::param() const {
  // @@protoc_insertion_point(field_get:proto.GetOnlinePlayerInfoRsp.param)
  return param_;
}
void GetOnlinePlayerInfoRsp::set_param(::google::protobuf::uint32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:proto.GetOnlinePlayerInfoRsp.param)
}

// .proto.OnlinePlayerInfo target_player_info = 14;
bool GetOnlinePlayerInfoRsp::has_target_player_info() const {
  return this != internal_default_instance() && target_player_info_ != NULL;
}
void GetOnlinePlayerInfoRsp::clear_target_player_info() {
  if (GetArenaNoVirtual() == NULL && target_player_info_ != NULL) delete target_player_info_;
  target_player_info_ = NULL;
}
const ::proto::OnlinePlayerInfo& GetOnlinePlayerInfoRsp::target_player_info() const {
  const ::proto::OnlinePlayerInfo* p = target_player_info_;
  // @@protoc_insertion_point(field_get:proto.GetOnlinePlayerInfoRsp.target_player_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::OnlinePlayerInfo*>(
      &::proto::_OnlinePlayerInfo_default_instance_);
}
::proto::OnlinePlayerInfo* GetOnlinePlayerInfoRsp::mutable_target_player_info() {
  
  if (target_player_info_ == NULL) {
    target_player_info_ = new ::proto::OnlinePlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetOnlinePlayerInfoRsp.target_player_info)
  return target_player_info_;
}
::proto::OnlinePlayerInfo* GetOnlinePlayerInfoRsp::release_target_player_info() {
  // @@protoc_insertion_point(field_release:proto.GetOnlinePlayerInfoRsp.target_player_info)
  
  ::proto::OnlinePlayerInfo* temp = target_player_info_;
  target_player_info_ = NULL;
  return temp;
}
void GetOnlinePlayerInfoRsp::set_allocated_target_player_info(::proto::OnlinePlayerInfo* target_player_info) {
  delete target_player_info_;
  target_player_info_ = target_player_info;
  if (target_player_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetOnlinePlayerInfoRsp.target_player_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SegmentInfo::kOffsetFieldNumber;
const int SegmentInfo::kModuleFieldNumber;
const int SegmentInfo::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SegmentInfo::SegmentInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SegmentInfo)
}
SegmentInfo::SegmentInfo(const SegmentInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&size_, &from.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&module_) -
    reinterpret_cast<char*>(&size_)) + sizeof(module_));
  // @@protoc_insertion_point(copy_constructor:proto.SegmentInfo)
}

void SegmentInfo::SharedCtor() {
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&module_) -
      reinterpret_cast<char*>(&size_)) + sizeof(module_));
  _cached_size_ = 0;
}

SegmentInfo::~SegmentInfo() {
  // @@protoc_insertion_point(destructor:proto.SegmentInfo)
  SharedDtor();
}

void SegmentInfo::SharedDtor() {
}

void SegmentInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SegmentInfo::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SegmentInfo& SegmentInfo::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

SegmentInfo* SegmentInfo::New(::google::protobuf::Arena* arena) const {
  SegmentInfo* n = new SegmentInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SegmentInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SegmentInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&module_) -
      reinterpret_cast<char*>(&size_)) + sizeof(module_));
  _internal_metadata_.Clear();
}

bool SegmentInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SegmentInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 module = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &module_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 size = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SegmentInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SegmentInfo)
  return false;
#undef DO_
}

void SegmentInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SegmentInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 offset = 3;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->offset(), output);
  }

  // uint32 module = 7;
  if (this->module() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->module(), output);
  }

  // uint32 size = 8;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SegmentInfo)
}

::google::protobuf::uint8* SegmentInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SegmentInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 offset = 3;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->offset(), target);
  }

  // uint32 module = 7;
  if (this->module() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->module(), target);
  }

  // uint32 size = 8;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SegmentInfo)
  return target;
}

size_t SegmentInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SegmentInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 size = 8;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->size());
  }

  // uint32 offset = 3;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->offset());
  }

  // uint32 module = 7;
  if (this->module() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->module());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SegmentInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SegmentInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SegmentInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SegmentInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SegmentInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SegmentInfo)
    MergeFrom(*source);
  }
}

void SegmentInfo::MergeFrom(const SegmentInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SegmentInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.module() != 0) {
    set_module(from.module());
  }
}

void SegmentInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SegmentInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SegmentInfo::CopyFrom(const SegmentInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SegmentInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SegmentInfo::IsInitialized() const {
  return true;
}

void SegmentInfo::Swap(SegmentInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SegmentInfo::InternalSwap(SegmentInfo* other) {
  using std::swap;
  swap(size_, other->size_);
  swap(offset_, other->offset_);
  swap(module_, other->module_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SegmentInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SegmentInfo

// uint32 offset = 3;
void SegmentInfo::clear_offset() {
  offset_ = 0u;
}
::google::protobuf::uint32 SegmentInfo::offset() const {
  // @@protoc_insertion_point(field_get:proto.SegmentInfo.offset)
  return offset_;
}
void SegmentInfo::set_offset(::google::protobuf::uint32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:proto.SegmentInfo.offset)
}

// uint32 module = 7;
void SegmentInfo::clear_module() {
  module_ = 0u;
}
::google::protobuf::uint32 SegmentInfo::module() const {
  // @@protoc_insertion_point(field_get:proto.SegmentInfo.module)
  return module_;
}
void SegmentInfo::set_module(::google::protobuf::uint32 value) {
  
  module_ = value;
  // @@protoc_insertion_point(field_set:proto.SegmentInfo.module)
}

// uint32 size = 8;
void SegmentInfo::clear_size() {
  size_ = 0u;
}
::google::protobuf::uint32 SegmentInfo::size() const {
  // @@protoc_insertion_point(field_get:proto.SegmentInfo.size)
  return size_;
}
void SegmentInfo::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:proto.SegmentInfo.size)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SegmentCRCInfo::kModuleFieldNumber;
const int SegmentCRCInfo::kRetcodeFieldNumber;
const int SegmentCRCInfo::kSizeFieldNumber;
const int SegmentCRCInfo::kCrcFieldNumber;
const int SegmentCRCInfo::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SegmentCRCInfo::SegmentCRCInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SegmentCRCInfo)
}
SegmentCRCInfo::SegmentCRCInfo(const SegmentCRCInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  crc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.crc().size() > 0) {
    crc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.crc_);
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&module_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(module_));
  // @@protoc_insertion_point(copy_constructor:proto.SegmentCRCInfo)
}

void SegmentCRCInfo::SharedCtor() {
  crc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&module_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(module_));
  _cached_size_ = 0;
}

SegmentCRCInfo::~SegmentCRCInfo() {
  // @@protoc_insertion_point(destructor:proto.SegmentCRCInfo)
  SharedDtor();
}

void SegmentCRCInfo::SharedDtor() {
  crc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SegmentCRCInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SegmentCRCInfo::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SegmentCRCInfo& SegmentCRCInfo::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

SegmentCRCInfo* SegmentCRCInfo::New(::google::protobuf::Arena* arena) const {
  SegmentCRCInfo* n = new SegmentCRCInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SegmentCRCInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SegmentCRCInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  crc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&module_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(module_));
  _internal_metadata_.Clear();
}

bool SegmentCRCInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SegmentCRCInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string crc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_crc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->crc().data(), static_cast<int>(this->crc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SegmentCRCInfo.crc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 size = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 offset = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 module = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &module_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SegmentCRCInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SegmentCRCInfo)
  return false;
#undef DO_
}

void SegmentCRCInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SegmentCRCInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string crc = 3;
  if (this->crc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->crc().data(), static_cast<int>(this->crc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SegmentCRCInfo.crc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->crc(), output);
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->retcode(), output);
  }

  // uint32 size = 10;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->size(), output);
  }

  // uint32 offset = 11;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->offset(), output);
  }

  // uint32 module = 13;
  if (this->module() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->module(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SegmentCRCInfo)
}

::google::protobuf::uint8* SegmentCRCInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SegmentCRCInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string crc = 3;
  if (this->crc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->crc().data(), static_cast<int>(this->crc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SegmentCRCInfo.crc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->crc(), target);
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->retcode(), target);
  }

  // uint32 size = 10;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->size(), target);
  }

  // uint32 offset = 11;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->offset(), target);
  }

  // uint32 module = 13;
  if (this->module() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->module(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SegmentCRCInfo)
  return target;
}

size_t SegmentCRCInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SegmentCRCInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string crc = 3;
  if (this->crc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->crc());
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 size = 10;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->size());
  }

  // uint32 offset = 11;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->offset());
  }

  // uint32 module = 13;
  if (this->module() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->module());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SegmentCRCInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SegmentCRCInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SegmentCRCInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SegmentCRCInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SegmentCRCInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SegmentCRCInfo)
    MergeFrom(*source);
  }
}

void SegmentCRCInfo::MergeFrom(const SegmentCRCInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SegmentCRCInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.crc().size() > 0) {

    crc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.crc_);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.module() != 0) {
    set_module(from.module());
  }
}

void SegmentCRCInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SegmentCRCInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SegmentCRCInfo::CopyFrom(const SegmentCRCInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SegmentCRCInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SegmentCRCInfo::IsInitialized() const {
  return true;
}

void SegmentCRCInfo::Swap(SegmentCRCInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SegmentCRCInfo::InternalSwap(SegmentCRCInfo* other) {
  using std::swap;
  crc_.Swap(&other->crc_);
  swap(retcode_, other->retcode_);
  swap(size_, other->size_);
  swap(offset_, other->offset_);
  swap(module_, other->module_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SegmentCRCInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SegmentCRCInfo

// uint32 module = 13;
void SegmentCRCInfo::clear_module() {
  module_ = 0u;
}
::google::protobuf::uint32 SegmentCRCInfo::module() const {
  // @@protoc_insertion_point(field_get:proto.SegmentCRCInfo.module)
  return module_;
}
void SegmentCRCInfo::set_module(::google::protobuf::uint32 value) {
  
  module_ = value;
  // @@protoc_insertion_point(field_set:proto.SegmentCRCInfo.module)
}

// int32 retcode = 5;
void SegmentCRCInfo::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SegmentCRCInfo::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SegmentCRCInfo.retcode)
  return retcode_;
}
void SegmentCRCInfo::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SegmentCRCInfo.retcode)
}

// uint32 size = 10;
void SegmentCRCInfo::clear_size() {
  size_ = 0u;
}
::google::protobuf::uint32 SegmentCRCInfo::size() const {
  // @@protoc_insertion_point(field_get:proto.SegmentCRCInfo.size)
  return size_;
}
void SegmentCRCInfo::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:proto.SegmentCRCInfo.size)
}

// string crc = 3;
void SegmentCRCInfo::clear_crc() {
  crc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SegmentCRCInfo::crc() const {
  // @@protoc_insertion_point(field_get:proto.SegmentCRCInfo.crc)
  return crc_.GetNoArena();
}
void SegmentCRCInfo::set_crc(const ::std::string& value) {
  
  crc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SegmentCRCInfo.crc)
}
#if LANG_CXX11
void SegmentCRCInfo::set_crc(::std::string&& value) {
  
  crc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SegmentCRCInfo.crc)
}
#endif
void SegmentCRCInfo::set_crc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  crc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SegmentCRCInfo.crc)
}
void SegmentCRCInfo::set_crc(const char* value, size_t size) {
  
  crc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SegmentCRCInfo.crc)
}
::std::string* SegmentCRCInfo::mutable_crc() {
  
  // @@protoc_insertion_point(field_mutable:proto.SegmentCRCInfo.crc)
  return crc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SegmentCRCInfo::release_crc() {
  // @@protoc_insertion_point(field_release:proto.SegmentCRCInfo.crc)
  
  return crc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SegmentCRCInfo::set_allocated_crc(::std::string* crc) {
  if (crc != NULL) {
    
  } else {
    
  }
  crc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), crc);
  // @@protoc_insertion_point(field_set_allocated:proto.SegmentCRCInfo.crc)
}

// uint32 offset = 11;
void SegmentCRCInfo::clear_offset() {
  offset_ = 0u;
}
::google::protobuf::uint32 SegmentCRCInfo::offset() const {
  // @@protoc_insertion_point(field_get:proto.SegmentCRCInfo.offset)
  return offset_;
}
void SegmentCRCInfo::set_offset(::google::protobuf::uint32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:proto.SegmentCRCInfo.offset)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckSegmentCRCNotify::kInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckSegmentCRCNotify::CheckSegmentCRCNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CheckSegmentCRCNotify)
}
CheckSegmentCRCNotify::CheckSegmentCRCNotify(const CheckSegmentCRCNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      info_list_(from.info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.CheckSegmentCRCNotify)
}

void CheckSegmentCRCNotify::SharedCtor() {
  _cached_size_ = 0;
}

CheckSegmentCRCNotify::~CheckSegmentCRCNotify() {
  // @@protoc_insertion_point(destructor:proto.CheckSegmentCRCNotify)
  SharedDtor();
}

void CheckSegmentCRCNotify::SharedDtor() {
}

void CheckSegmentCRCNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckSegmentCRCNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckSegmentCRCNotify& CheckSegmentCRCNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckSegmentCRCNotify* CheckSegmentCRCNotify::New(::google::protobuf::Arena* arena) const {
  CheckSegmentCRCNotify* n = new CheckSegmentCRCNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckSegmentCRCNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CheckSegmentCRCNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_list_.Clear();
  _internal_metadata_.Clear();
}

bool CheckSegmentCRCNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CheckSegmentCRCNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.SegmentInfo info_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CheckSegmentCRCNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CheckSegmentCRCNotify)
  return false;
#undef DO_
}

void CheckSegmentCRCNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CheckSegmentCRCNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.SegmentInfo info_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->info_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CheckSegmentCRCNotify)
}

::google::protobuf::uint8* CheckSegmentCRCNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CheckSegmentCRCNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.SegmentInfo info_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->info_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CheckSegmentCRCNotify)
  return target;
}

size_t CheckSegmentCRCNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CheckSegmentCRCNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.SegmentInfo info_list = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->info_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckSegmentCRCNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CheckSegmentCRCNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckSegmentCRCNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckSegmentCRCNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CheckSegmentCRCNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CheckSegmentCRCNotify)
    MergeFrom(*source);
  }
}

void CheckSegmentCRCNotify::MergeFrom(const CheckSegmentCRCNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CheckSegmentCRCNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  info_list_.MergeFrom(from.info_list_);
}

void CheckSegmentCRCNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CheckSegmentCRCNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckSegmentCRCNotify::CopyFrom(const CheckSegmentCRCNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CheckSegmentCRCNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckSegmentCRCNotify::IsInitialized() const {
  return true;
}

void CheckSegmentCRCNotify::Swap(CheckSegmentCRCNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckSegmentCRCNotify::InternalSwap(CheckSegmentCRCNotify* other) {
  using std::swap;
  info_list_.InternalSwap(&other->info_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckSegmentCRCNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckSegmentCRCNotify

// repeated .proto.SegmentInfo info_list = 6;
int CheckSegmentCRCNotify::info_list_size() const {
  return info_list_.size();
}
void CheckSegmentCRCNotify::clear_info_list() {
  info_list_.Clear();
}
const ::proto::SegmentInfo& CheckSegmentCRCNotify::info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CheckSegmentCRCNotify.info_list)
  return info_list_.Get(index);
}
::proto::SegmentInfo* CheckSegmentCRCNotify::mutable_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CheckSegmentCRCNotify.info_list)
  return info_list_.Mutable(index);
}
::proto::SegmentInfo* CheckSegmentCRCNotify::add_info_list() {
  // @@protoc_insertion_point(field_add:proto.CheckSegmentCRCNotify.info_list)
  return info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::SegmentInfo >*
CheckSegmentCRCNotify::mutable_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CheckSegmentCRCNotify.info_list)
  return &info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::SegmentInfo >&
CheckSegmentCRCNotify::info_list() const {
  // @@protoc_insertion_point(field_list:proto.CheckSegmentCRCNotify.info_list)
  return info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckSegmentCRCReq::kInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckSegmentCRCReq::CheckSegmentCRCReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CheckSegmentCRCReq)
}
CheckSegmentCRCReq::CheckSegmentCRCReq(const CheckSegmentCRCReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      info_list_(from.info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.CheckSegmentCRCReq)
}

void CheckSegmentCRCReq::SharedCtor() {
  _cached_size_ = 0;
}

CheckSegmentCRCReq::~CheckSegmentCRCReq() {
  // @@protoc_insertion_point(destructor:proto.CheckSegmentCRCReq)
  SharedDtor();
}

void CheckSegmentCRCReq::SharedDtor() {
}

void CheckSegmentCRCReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckSegmentCRCReq::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckSegmentCRCReq& CheckSegmentCRCReq::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckSegmentCRCReq* CheckSegmentCRCReq::New(::google::protobuf::Arena* arena) const {
  CheckSegmentCRCReq* n = new CheckSegmentCRCReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckSegmentCRCReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CheckSegmentCRCReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_list_.Clear();
  _internal_metadata_.Clear();
}

bool CheckSegmentCRCReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CheckSegmentCRCReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.SegmentCRCInfo info_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CheckSegmentCRCReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CheckSegmentCRCReq)
  return false;
#undef DO_
}

void CheckSegmentCRCReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CheckSegmentCRCReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.SegmentCRCInfo info_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->info_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CheckSegmentCRCReq)
}

::google::protobuf::uint8* CheckSegmentCRCReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CheckSegmentCRCReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.SegmentCRCInfo info_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->info_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CheckSegmentCRCReq)
  return target;
}

size_t CheckSegmentCRCReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CheckSegmentCRCReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.SegmentCRCInfo info_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->info_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckSegmentCRCReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CheckSegmentCRCReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckSegmentCRCReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckSegmentCRCReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CheckSegmentCRCReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CheckSegmentCRCReq)
    MergeFrom(*source);
  }
}

void CheckSegmentCRCReq::MergeFrom(const CheckSegmentCRCReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CheckSegmentCRCReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  info_list_.MergeFrom(from.info_list_);
}

void CheckSegmentCRCReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CheckSegmentCRCReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckSegmentCRCReq::CopyFrom(const CheckSegmentCRCReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CheckSegmentCRCReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckSegmentCRCReq::IsInitialized() const {
  return true;
}

void CheckSegmentCRCReq::Swap(CheckSegmentCRCReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckSegmentCRCReq::InternalSwap(CheckSegmentCRCReq* other) {
  using std::swap;
  info_list_.InternalSwap(&other->info_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckSegmentCRCReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckSegmentCRCReq

// repeated .proto.SegmentCRCInfo info_list = 1;
int CheckSegmentCRCReq::info_list_size() const {
  return info_list_.size();
}
void CheckSegmentCRCReq::clear_info_list() {
  info_list_.Clear();
}
const ::proto::SegmentCRCInfo& CheckSegmentCRCReq::info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CheckSegmentCRCReq.info_list)
  return info_list_.Get(index);
}
::proto::SegmentCRCInfo* CheckSegmentCRCReq::mutable_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CheckSegmentCRCReq.info_list)
  return info_list_.Mutable(index);
}
::proto::SegmentCRCInfo* CheckSegmentCRCReq::add_info_list() {
  // @@protoc_insertion_point(field_add:proto.CheckSegmentCRCReq.info_list)
  return info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::SegmentCRCInfo >*
CheckSegmentCRCReq::mutable_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CheckSegmentCRCReq.info_list)
  return &info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::SegmentCRCInfo >&
CheckSegmentCRCReq::info_list() const {
  // @@protoc_insertion_point(field_list:proto.CheckSegmentCRCReq.info_list)
  return info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerRTTInfo::kRttFieldNumber;
const int PlayerRTTInfo::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerRTTInfo::PlayerRTTInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerRTTInfo)
}
PlayerRTTInfo::PlayerRTTInfo(const PlayerRTTInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&rtt_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(rtt_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerRTTInfo)
}

void PlayerRTTInfo::SharedCtor() {
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rtt_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(rtt_));
  _cached_size_ = 0;
}

PlayerRTTInfo::~PlayerRTTInfo() {
  // @@protoc_insertion_point(destructor:proto.PlayerRTTInfo)
  SharedDtor();
}

void PlayerRTTInfo::SharedDtor() {
}

void PlayerRTTInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerRTTInfo::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerRTTInfo& PlayerRTTInfo::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerRTTInfo* PlayerRTTInfo::New(::google::protobuf::Arena* arena) const {
  PlayerRTTInfo* n = new PlayerRTTInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerRTTInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerRTTInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rtt_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(rtt_));
  _internal_metadata_.Clear();
}

bool PlayerRTTInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerRTTInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rtt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rtt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerRTTInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerRTTInfo)
  return false;
#undef DO_
}

void PlayerRTTInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerRTTInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // uint32 rtt = 2;
  if (this->rtt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rtt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerRTTInfo)
}

::google::protobuf::uint8* PlayerRTTInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerRTTInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // uint32 rtt = 2;
  if (this->rtt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rtt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerRTTInfo)
  return target;
}

size_t PlayerRTTInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerRTTInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 rtt = 2;
  if (this->rtt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rtt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerRTTInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerRTTInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerRTTInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerRTTInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerRTTInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerRTTInfo)
    MergeFrom(*source);
  }
}

void PlayerRTTInfo::MergeFrom(const PlayerRTTInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerRTTInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.rtt() != 0) {
    set_rtt(from.rtt());
  }
}

void PlayerRTTInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerRTTInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerRTTInfo::CopyFrom(const PlayerRTTInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerRTTInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerRTTInfo::IsInitialized() const {
  return true;
}

void PlayerRTTInfo::Swap(PlayerRTTInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerRTTInfo::InternalSwap(PlayerRTTInfo* other) {
  using std::swap;
  swap(uid_, other->uid_);
  swap(rtt_, other->rtt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerRTTInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerRTTInfo

// uint32 rtt = 2;
void PlayerRTTInfo::clear_rtt() {
  rtt_ = 0u;
}
::google::protobuf::uint32 PlayerRTTInfo::rtt() const {
  // @@protoc_insertion_point(field_get:proto.PlayerRTTInfo.rtt)
  return rtt_;
}
void PlayerRTTInfo::set_rtt(::google::protobuf::uint32 value) {
  
  rtt_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerRTTInfo.rtt)
}

// uint32 uid = 1;
void PlayerRTTInfo::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 PlayerRTTInfo::uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerRTTInfo.uid)
  return uid_;
}
void PlayerRTTInfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerRTTInfo.uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorldPlayerRTTNotify::kPlayerRttListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorldPlayerRTTNotify::WorldPlayerRTTNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WorldPlayerRTTNotify)
}
WorldPlayerRTTNotify::WorldPlayerRTTNotify(const WorldPlayerRTTNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_rtt_list_(from.player_rtt_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.WorldPlayerRTTNotify)
}

void WorldPlayerRTTNotify::SharedCtor() {
  _cached_size_ = 0;
}

WorldPlayerRTTNotify::~WorldPlayerRTTNotify() {
  // @@protoc_insertion_point(destructor:proto.WorldPlayerRTTNotify)
  SharedDtor();
}

void WorldPlayerRTTNotify::SharedDtor() {
}

void WorldPlayerRTTNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorldPlayerRTTNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorldPlayerRTTNotify& WorldPlayerRTTNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

WorldPlayerRTTNotify* WorldPlayerRTTNotify::New(::google::protobuf::Arena* arena) const {
  WorldPlayerRTTNotify* n = new WorldPlayerRTTNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorldPlayerRTTNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WorldPlayerRTTNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_rtt_list_.Clear();
  _internal_metadata_.Clear();
}

bool WorldPlayerRTTNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WorldPlayerRTTNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.PlayerRTTInfo player_rtt_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_player_rtt_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WorldPlayerRTTNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WorldPlayerRTTNotify)
  return false;
#undef DO_
}

void WorldPlayerRTTNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WorldPlayerRTTNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.PlayerRTTInfo player_rtt_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_rtt_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->player_rtt_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WorldPlayerRTTNotify)
}

::google::protobuf::uint8* WorldPlayerRTTNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WorldPlayerRTTNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.PlayerRTTInfo player_rtt_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_rtt_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->player_rtt_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WorldPlayerRTTNotify)
  return target;
}

size_t WorldPlayerRTTNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WorldPlayerRTTNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.PlayerRTTInfo player_rtt_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->player_rtt_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->player_rtt_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorldPlayerRTTNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WorldPlayerRTTNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const WorldPlayerRTTNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorldPlayerRTTNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WorldPlayerRTTNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WorldPlayerRTTNotify)
    MergeFrom(*source);
  }
}

void WorldPlayerRTTNotify::MergeFrom(const WorldPlayerRTTNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WorldPlayerRTTNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_rtt_list_.MergeFrom(from.player_rtt_list_);
}

void WorldPlayerRTTNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WorldPlayerRTTNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorldPlayerRTTNotify::CopyFrom(const WorldPlayerRTTNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WorldPlayerRTTNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorldPlayerRTTNotify::IsInitialized() const {
  return true;
}

void WorldPlayerRTTNotify::Swap(WorldPlayerRTTNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorldPlayerRTTNotify::InternalSwap(WorldPlayerRTTNotify* other) {
  using std::swap;
  player_rtt_list_.InternalSwap(&other->player_rtt_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorldPlayerRTTNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WorldPlayerRTTNotify

// repeated .proto.PlayerRTTInfo player_rtt_list = 1;
int WorldPlayerRTTNotify::player_rtt_list_size() const {
  return player_rtt_list_.size();
}
void WorldPlayerRTTNotify::clear_player_rtt_list() {
  player_rtt_list_.Clear();
}
const ::proto::PlayerRTTInfo& WorldPlayerRTTNotify::player_rtt_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerRTTNotify.player_rtt_list)
  return player_rtt_list_.Get(index);
}
::proto::PlayerRTTInfo* WorldPlayerRTTNotify::mutable_player_rtt_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.WorldPlayerRTTNotify.player_rtt_list)
  return player_rtt_list_.Mutable(index);
}
::proto::PlayerRTTInfo* WorldPlayerRTTNotify::add_player_rtt_list() {
  // @@protoc_insertion_point(field_add:proto.WorldPlayerRTTNotify.player_rtt_list)
  return player_rtt_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::PlayerRTTInfo >*
WorldPlayerRTTNotify::mutable_player_rtt_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WorldPlayerRTTNotify.player_rtt_list)
  return &player_rtt_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::PlayerRTTInfo >&
WorldPlayerRTTNotify::player_rtt_list() const {
  // @@protoc_insertion_point(field_list:proto.WorldPlayerRTTNotify.player_rtt_list)
  return player_rtt_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EchoNotify::kSeqIdFieldNumber;
const int EchoNotify::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EchoNotify::EchoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EchoNotify)
}
EchoNotify::EchoNotify(const EchoNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  seq_id_ = from.seq_id_;
  // @@protoc_insertion_point(copy_constructor:proto.EchoNotify)
}

void EchoNotify::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seq_id_ = 0u;
  _cached_size_ = 0;
}

EchoNotify::~EchoNotify() {
  // @@protoc_insertion_point(destructor:proto.EchoNotify)
  SharedDtor();
}

void EchoNotify::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EchoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EchoNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EchoNotify& EchoNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

EchoNotify* EchoNotify::New(::google::protobuf::Arena* arena) const {
  EchoNotify* n = new EchoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EchoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EchoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seq_id_ = 0u;
  _internal_metadata_.Clear();
}

bool EchoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EchoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 seq_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seq_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string content = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.EchoNotify.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EchoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EchoNotify)
  return false;
#undef DO_
}

void EchoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EchoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 seq_id = 4;
  if (this->seq_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->seq_id(), output);
  }

  // string content = 9;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.EchoNotify.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EchoNotify)
}

::google::protobuf::uint8* EchoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EchoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 seq_id = 4;
  if (this->seq_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->seq_id(), target);
  }

  // string content = 9;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.EchoNotify.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->content(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EchoNotify)
  return target;
}

size_t EchoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EchoNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string content = 9;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // uint32 seq_id = 4;
  if (this->seq_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seq_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EchoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EchoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EchoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EchoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EchoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EchoNotify)
    MergeFrom(*source);
  }
}

void EchoNotify::MergeFrom(const EchoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EchoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.seq_id() != 0) {
    set_seq_id(from.seq_id());
  }
}

void EchoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EchoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EchoNotify::CopyFrom(const EchoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EchoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EchoNotify::IsInitialized() const {
  return true;
}

void EchoNotify::Swap(EchoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EchoNotify::InternalSwap(EchoNotify* other) {
  using std::swap;
  content_.Swap(&other->content_);
  swap(seq_id_, other->seq_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EchoNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EchoNotify

// uint32 seq_id = 4;
void EchoNotify::clear_seq_id() {
  seq_id_ = 0u;
}
::google::protobuf::uint32 EchoNotify::seq_id() const {
  // @@protoc_insertion_point(field_get:proto.EchoNotify.seq_id)
  return seq_id_;
}
void EchoNotify::set_seq_id(::google::protobuf::uint32 value) {
  
  seq_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EchoNotify.seq_id)
}

// string content = 9;
void EchoNotify::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EchoNotify::content() const {
  // @@protoc_insertion_point(field_get:proto.EchoNotify.content)
  return content_.GetNoArena();
}
void EchoNotify::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.EchoNotify.content)
}
#if LANG_CXX11
void EchoNotify::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.EchoNotify.content)
}
#endif
void EchoNotify::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.EchoNotify.content)
}
void EchoNotify::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.EchoNotify.content)
}
::std::string* EchoNotify::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:proto.EchoNotify.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EchoNotify::release_content() {
  // @@protoc_insertion_point(field_release:proto.EchoNotify.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EchoNotify::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:proto.EchoNotify.content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateRedPointNotify::kRedPointListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateRedPointNotify::UpdateRedPointNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UpdateRedPointNotify)
}
UpdateRedPointNotify::UpdateRedPointNotify(const UpdateRedPointNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      red_point_list_(from.red_point_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.UpdateRedPointNotify)
}

void UpdateRedPointNotify::SharedCtor() {
  _cached_size_ = 0;
}

UpdateRedPointNotify::~UpdateRedPointNotify() {
  // @@protoc_insertion_point(destructor:proto.UpdateRedPointNotify)
  SharedDtor();
}

void UpdateRedPointNotify::SharedDtor() {
}

void UpdateRedPointNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateRedPointNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateRedPointNotify& UpdateRedPointNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateRedPointNotify* UpdateRedPointNotify::New(::google::protobuf::Arena* arena) const {
  UpdateRedPointNotify* n = new UpdateRedPointNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateRedPointNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdateRedPointNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  red_point_list_.Clear();
  _internal_metadata_.Clear();
}

bool UpdateRedPointNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UpdateRedPointNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.RedPointData red_point_list = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_red_point_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UpdateRedPointNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UpdateRedPointNotify)
  return false;
#undef DO_
}

void UpdateRedPointNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UpdateRedPointNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.RedPointData red_point_list = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->red_point_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->red_point_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UpdateRedPointNotify)
}

::google::protobuf::uint8* UpdateRedPointNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdateRedPointNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.RedPointData red_point_list = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->red_point_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, this->red_point_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdateRedPointNotify)
  return target;
}

size_t UpdateRedPointNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdateRedPointNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.RedPointData red_point_list = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->red_point_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->red_point_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateRedPointNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UpdateRedPointNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateRedPointNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateRedPointNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UpdateRedPointNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UpdateRedPointNotify)
    MergeFrom(*source);
  }
}

void UpdateRedPointNotify::MergeFrom(const UpdateRedPointNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdateRedPointNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  red_point_list_.MergeFrom(from.red_point_list_);
}

void UpdateRedPointNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UpdateRedPointNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateRedPointNotify::CopyFrom(const UpdateRedPointNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdateRedPointNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRedPointNotify::IsInitialized() const {
  return true;
}

void UpdateRedPointNotify::Swap(UpdateRedPointNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateRedPointNotify::InternalSwap(UpdateRedPointNotify* other) {
  using std::swap;
  red_point_list_.InternalSwap(&other->red_point_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateRedPointNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateRedPointNotify

// repeated .proto.RedPointData red_point_list = 12;
int UpdateRedPointNotify::red_point_list_size() const {
  return red_point_list_.size();
}
void UpdateRedPointNotify::clear_red_point_list() {
  red_point_list_.Clear();
}
const ::proto::RedPointData& UpdateRedPointNotify::red_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UpdateRedPointNotify.red_point_list)
  return red_point_list_.Get(index);
}
::proto::RedPointData* UpdateRedPointNotify::mutable_red_point_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.UpdateRedPointNotify.red_point_list)
  return red_point_list_.Mutable(index);
}
::proto::RedPointData* UpdateRedPointNotify::add_red_point_list() {
  // @@protoc_insertion_point(field_add:proto.UpdateRedPointNotify.red_point_list)
  return red_point_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::RedPointData >*
UpdateRedPointNotify::mutable_red_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UpdateRedPointNotify.red_point_list)
  return &red_point_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::RedPointData >&
UpdateRedPointNotify::red_point_list() const {
  // @@protoc_insertion_point(field_list:proto.UpdateRedPointNotify.red_point_list)
  return red_point_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientBulletCreateNotify::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientBulletCreateNotify::ClientBulletCreateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ClientBulletCreateNotify)
}
ClientBulletCreateNotify::ClientBulletCreateNotify(const ClientBulletCreateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  param_ = from.param_;
  // @@protoc_insertion_point(copy_constructor:proto.ClientBulletCreateNotify)
}

void ClientBulletCreateNotify::SharedCtor() {
  param_ = 0u;
  _cached_size_ = 0;
}

ClientBulletCreateNotify::~ClientBulletCreateNotify() {
  // @@protoc_insertion_point(destructor:proto.ClientBulletCreateNotify)
  SharedDtor();
}

void ClientBulletCreateNotify::SharedDtor() {
}

void ClientBulletCreateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientBulletCreateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientBulletCreateNotify& ClientBulletCreateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientBulletCreateNotify* ClientBulletCreateNotify::New(::google::protobuf::Arena* arena) const {
  ClientBulletCreateNotify* n = new ClientBulletCreateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientBulletCreateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ClientBulletCreateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_ = 0u;
  _internal_metadata_.Clear();
}

bool ClientBulletCreateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ClientBulletCreateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 param = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ClientBulletCreateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ClientBulletCreateNotify)
  return false;
#undef DO_
}

void ClientBulletCreateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ClientBulletCreateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 param = 6;
  if (this->param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->param(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ClientBulletCreateNotify)
}

::google::protobuf::uint8* ClientBulletCreateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ClientBulletCreateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 param = 6;
  if (this->param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->param(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ClientBulletCreateNotify)
  return target;
}

size_t ClientBulletCreateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ClientBulletCreateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 param = 6;
  if (this->param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->param());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientBulletCreateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ClientBulletCreateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientBulletCreateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientBulletCreateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ClientBulletCreateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ClientBulletCreateNotify)
    MergeFrom(*source);
  }
}

void ClientBulletCreateNotify::MergeFrom(const ClientBulletCreateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ClientBulletCreateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.param() != 0) {
    set_param(from.param());
  }
}

void ClientBulletCreateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ClientBulletCreateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientBulletCreateNotify::CopyFrom(const ClientBulletCreateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ClientBulletCreateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientBulletCreateNotify::IsInitialized() const {
  return true;
}

void ClientBulletCreateNotify::Swap(ClientBulletCreateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientBulletCreateNotify::InternalSwap(ClientBulletCreateNotify* other) {
  using std::swap;
  swap(param_, other->param_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientBulletCreateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientBulletCreateNotify

// uint32 param = 6;
void ClientBulletCreateNotify::clear_param() {
  param_ = 0u;
}
::google::protobuf::uint32 ClientBulletCreateNotify::param() const {
  // @@protoc_insertion_point(field_get:proto.ClientBulletCreateNotify.param)
  return param_;
}
void ClientBulletCreateNotify::set_param(::google::protobuf::uint32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientBulletCreateNotify.param)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeServerGlobalValueNotify::kEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeServerGlobalValueNotify::ChangeServerGlobalValueNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChangeServerGlobalValueNotify)
}
ChangeServerGlobalValueNotify::ChangeServerGlobalValueNotify(const ChangeServerGlobalValueNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entity_id_ = from.entity_id_;
  // @@protoc_insertion_point(copy_constructor:proto.ChangeServerGlobalValueNotify)
}

void ChangeServerGlobalValueNotify::SharedCtor() {
  entity_id_ = 0u;
  _cached_size_ = 0;
}

ChangeServerGlobalValueNotify::~ChangeServerGlobalValueNotify() {
  // @@protoc_insertion_point(destructor:proto.ChangeServerGlobalValueNotify)
  SharedDtor();
}

void ChangeServerGlobalValueNotify::SharedDtor() {
}

void ChangeServerGlobalValueNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeServerGlobalValueNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeServerGlobalValueNotify& ChangeServerGlobalValueNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChangeServerGlobalValueNotify* ChangeServerGlobalValueNotify::New(::google::protobuf::Arena* arena) const {
  ChangeServerGlobalValueNotify* n = new ChangeServerGlobalValueNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangeServerGlobalValueNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChangeServerGlobalValueNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool ChangeServerGlobalValueNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChangeServerGlobalValueNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChangeServerGlobalValueNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChangeServerGlobalValueNotify)
  return false;
#undef DO_
}

void ChangeServerGlobalValueNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChangeServerGlobalValueNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 4;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChangeServerGlobalValueNotify)
}

::google::protobuf::uint8* ChangeServerGlobalValueNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChangeServerGlobalValueNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 4;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChangeServerGlobalValueNotify)
  return target;
}

size_t ChangeServerGlobalValueNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChangeServerGlobalValueNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 entity_id = 4;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeServerGlobalValueNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChangeServerGlobalValueNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeServerGlobalValueNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeServerGlobalValueNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChangeServerGlobalValueNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChangeServerGlobalValueNotify)
    MergeFrom(*source);
  }
}

void ChangeServerGlobalValueNotify::MergeFrom(const ChangeServerGlobalValueNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChangeServerGlobalValueNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void ChangeServerGlobalValueNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChangeServerGlobalValueNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeServerGlobalValueNotify::CopyFrom(const ChangeServerGlobalValueNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChangeServerGlobalValueNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeServerGlobalValueNotify::IsInitialized() const {
  return true;
}

void ChangeServerGlobalValueNotify::Swap(ChangeServerGlobalValueNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeServerGlobalValueNotify::InternalSwap(ChangeServerGlobalValueNotify* other) {
  using std::swap;
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeServerGlobalValueNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChangeServerGlobalValueNotify

// uint32 entity_id = 4;
void ChangeServerGlobalValueNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 ChangeServerGlobalValueNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ChangeServerGlobalValueNotify.entity_id)
  return entity_id_;
}
void ChangeServerGlobalValueNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeServerGlobalValueNotify.entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GmTalkNotify::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GmTalkNotify::GmTalkNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GmTalkNotify)
}
GmTalkNotify::GmTalkNotify(const GmTalkNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GmTalkNotify)
}

void GmTalkNotify::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GmTalkNotify::~GmTalkNotify() {
  // @@protoc_insertion_point(destructor:proto.GmTalkNotify)
  SharedDtor();
}

void GmTalkNotify::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GmTalkNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GmTalkNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GmTalkNotify& GmTalkNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GmTalkNotify* GmTalkNotify::New(::google::protobuf::Arena* arena) const {
  GmTalkNotify* n = new GmTalkNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GmTalkNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GmTalkNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GmTalkNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GmTalkNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string msg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GmTalkNotify.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GmTalkNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GmTalkNotify)
  return false;
#undef DO_
}

void GmTalkNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GmTalkNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 5;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GmTalkNotify.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GmTalkNotify)
}

::google::protobuf::uint8* GmTalkNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GmTalkNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 5;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GmTalkNotify.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GmTalkNotify)
  return target;
}

size_t GmTalkNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GmTalkNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 5;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GmTalkNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GmTalkNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GmTalkNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GmTalkNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GmTalkNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GmTalkNotify)
    MergeFrom(*source);
  }
}

void GmTalkNotify::MergeFrom(const GmTalkNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GmTalkNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void GmTalkNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GmTalkNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GmTalkNotify::CopyFrom(const GmTalkNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GmTalkNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GmTalkNotify::IsInitialized() const {
  return true;
}

void GmTalkNotify::Swap(GmTalkNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GmTalkNotify::InternalSwap(GmTalkNotify* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GmTalkNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GmTalkNotify

// string msg = 5;
void GmTalkNotify::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GmTalkNotify::msg() const {
  // @@protoc_insertion_point(field_get:proto.GmTalkNotify.msg)
  return msg_.GetNoArena();
}
void GmTalkNotify::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GmTalkNotify.msg)
}
#if LANG_CXX11
void GmTalkNotify::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GmTalkNotify.msg)
}
#endif
void GmTalkNotify::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GmTalkNotify.msg)
}
void GmTalkNotify::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GmTalkNotify.msg)
}
::std::string* GmTalkNotify::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:proto.GmTalkNotify.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GmTalkNotify::release_msg() {
  // @@protoc_insertion_point(field_release:proto.GmTalkNotify.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GmTalkNotify::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:proto.GmTalkNotify.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LastPacketPrintNotify::LastPacketPrintNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.LastPacketPrintNotify)
}
LastPacketPrintNotify::LastPacketPrintNotify(const LastPacketPrintNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.LastPacketPrintNotify)
}

void LastPacketPrintNotify::SharedCtor() {
  _cached_size_ = 0;
}

LastPacketPrintNotify::~LastPacketPrintNotify() {
  // @@protoc_insertion_point(destructor:proto.LastPacketPrintNotify)
  SharedDtor();
}

void LastPacketPrintNotify::SharedDtor() {
}

void LastPacketPrintNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LastPacketPrintNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LastPacketPrintNotify& LastPacketPrintNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

LastPacketPrintNotify* LastPacketPrintNotify::New(::google::protobuf::Arena* arena) const {
  LastPacketPrintNotify* n = new LastPacketPrintNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LastPacketPrintNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.LastPacketPrintNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool LastPacketPrintNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.LastPacketPrintNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.LastPacketPrintNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.LastPacketPrintNotify)
  return false;
#undef DO_
}

void LastPacketPrintNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.LastPacketPrintNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.LastPacketPrintNotify)
}

::google::protobuf::uint8* LastPacketPrintNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.LastPacketPrintNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.LastPacketPrintNotify)
  return target;
}

size_t LastPacketPrintNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.LastPacketPrintNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LastPacketPrintNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.LastPacketPrintNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const LastPacketPrintNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LastPacketPrintNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.LastPacketPrintNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.LastPacketPrintNotify)
    MergeFrom(*source);
  }
}

void LastPacketPrintNotify::MergeFrom(const LastPacketPrintNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.LastPacketPrintNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LastPacketPrintNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.LastPacketPrintNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LastPacketPrintNotify::CopyFrom(const LastPacketPrintNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.LastPacketPrintNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LastPacketPrintNotify::IsInitialized() const {
  return true;
}

void LastPacketPrintNotify::Swap(LastPacketPrintNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LastPacketPrintNotify::InternalSwap(LastPacketPrintNotify* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LastPacketPrintNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LastPacketPrintNotify

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
