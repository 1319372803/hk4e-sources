// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_investigation.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_investigation.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class InvestigationDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Investigation>
     _instance;
} _Investigation_default_instance_;
class InvestigationTargetDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<InvestigationTarget>
     _instance;
} _InvestigationTarget_default_instance_;
class PlayerInvestigationAllInfoNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerInvestigationAllInfoNotify>
     _instance;
} _PlayerInvestigationAllInfoNotify_default_instance_;
class TakeInvestigationRewardReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TakeInvestigationRewardReq>
     _instance;
} _TakeInvestigationRewardReq_default_instance_;
class TakeInvestigationRewardRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TakeInvestigationRewardRsp>
     _instance;
} _TakeInvestigationRewardRsp_default_instance_;
class TakeInvestigationTargetRewardReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TakeInvestigationTargetRewardReq>
     _instance;
} _TakeInvestigationTargetRewardReq_default_instance_;
class TakeInvestigationTargetRewardRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TakeInvestigationTargetRewardRsp>
     _instance;
} _TakeInvestigationTargetRewardRsp_default_instance_;
class GetInvestigationMonsterReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetInvestigationMonsterReq>
     _instance;
} _GetInvestigationMonsterReq_default_instance_;
class InvestigationMonsterDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<InvestigationMonster>
     _instance;
} _InvestigationMonster_default_instance_;
class GetInvestigationMonsterRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetInvestigationMonsterRsp>
     _instance;
} _GetInvestigationMonsterRsp_default_instance_;
class PlayerInvestigationNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerInvestigationNotify>
     _instance;
} _PlayerInvestigationNotify_default_instance_;
class PlayerInvestigationTargetNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerInvestigationTargetNotify>
     _instance;
} _PlayerInvestigationTargetNotify_default_instance_;
class MarkTargetInvestigationMonsterNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MarkTargetInvestigationMonsterNotify>
     _instance;
} _MarkTargetInvestigationMonsterNotify_default_instance_;
class InvestigationMonsterUpdateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<InvestigationMonsterUpdateNotify>
     _instance;
} _InvestigationMonsterUpdateNotify_default_instance_;
class InvestigationQuestDailyNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<InvestigationQuestDailyNotify>
     _instance;
} _InvestigationQuestDailyNotify_default_instance_;
class InvestigationReadQuestDailyNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<InvestigationReadQuestDailyNotify>
     _instance;
} _InvestigationReadQuestDailyNotify_default_instance_;

namespace protobuf_cmd_2fcmd_5finvestigation_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[16];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Investigation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Investigation, total_progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Investigation, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Investigation, progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Investigation, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationTarget, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationTarget, quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationTarget, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationTarget, progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationTarget, total_progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationTarget, investigation_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInvestigationAllInfoNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInvestigationAllInfoNotify, investigation_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInvestigationAllInfoNotify, investigation_target_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeInvestigationRewardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeInvestigationRewardReq, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeInvestigationRewardRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeInvestigationRewardRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeInvestigationRewardRsp, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeInvestigationTargetRewardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeInvestigationTargetRewardReq, quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeInvestigationTargetRewardRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeInvestigationTargetRewardRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeInvestigationTargetRewardRsp, quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvestigationMonsterReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvestigationMonsterReq, city_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvestigationMonsterReq, is_for_mark_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationMonster, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationMonster, is_alive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationMonster, refresh_interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationMonster, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationMonster, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationMonster, boss_chest_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationMonster, weekly_boss_resin_discount_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationMonster, monster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationMonster, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationMonster, resin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationMonster, max_boss_chest_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationMonster, next_refresh_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationMonster, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationMonster, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationMonster, is_area_locked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationMonster, lock_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationMonster, next_boss_chest_refresh_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationMonster, city_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvestigationMonsterRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvestigationMonsterRsp, monster_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvestigationMonsterRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvestigationMonsterRsp, is_for_mark_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInvestigationNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInvestigationNotify, investigation_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInvestigationTargetNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInvestigationTargetNotify, investigation_target_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarkTargetInvestigationMonsterNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarkTargetInvestigationMonsterNotify, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarkTargetInvestigationMonsterNotify, monster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarkTargetInvestigationMonsterNotify, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarkTargetInvestigationMonsterNotify, investigation_monster_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationMonsterUpdateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationMonsterUpdateNotify, investigation_monster_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationQuestDailyNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvestigationReadQuestDailyNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(Investigation)},
  { 9, -1, sizeof(InvestigationTarget)},
  { 19, -1, sizeof(PlayerInvestigationAllInfoNotify)},
  { 26, -1, sizeof(TakeInvestigationRewardReq)},
  { 32, -1, sizeof(TakeInvestigationRewardRsp)},
  { 39, -1, sizeof(TakeInvestigationTargetRewardReq)},
  { 45, -1, sizeof(TakeInvestigationTargetRewardRsp)},
  { 52, -1, sizeof(GetInvestigationMonsterReq)},
  { 59, -1, sizeof(InvestigationMonster)},
  { 81, -1, sizeof(GetInvestigationMonsterRsp)},
  { 89, -1, sizeof(PlayerInvestigationNotify)},
  { 95, -1, sizeof(PlayerInvestigationTargetNotify)},
  { 101, -1, sizeof(MarkTargetInvestigationMonsterNotify)},
  { 110, -1, sizeof(InvestigationMonsterUpdateNotify)},
  { 116, -1, sizeof(InvestigationQuestDailyNotify)},
  { 121, -1, sizeof(InvestigationReadQuestDailyNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Investigation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InvestigationTarget_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerInvestigationAllInfoNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TakeInvestigationRewardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TakeInvestigationRewardRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TakeInvestigationTargetRewardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TakeInvestigationTargetRewardRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetInvestigationMonsterReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InvestigationMonster_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetInvestigationMonsterRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerInvestigationNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerInvestigationTargetNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MarkTargetInvestigationMonsterNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InvestigationMonsterUpdateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InvestigationQuestDailyNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InvestigationReadQuestDailyNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_investigation.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _Investigation_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Investigation_default_instance_);_InvestigationTarget_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_InvestigationTarget_default_instance_);_PlayerInvestigationAllInfoNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerInvestigationAllInfoNotify_default_instance_);_TakeInvestigationRewardReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TakeInvestigationRewardReq_default_instance_);_TakeInvestigationRewardRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TakeInvestigationRewardRsp_default_instance_);_TakeInvestigationTargetRewardReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TakeInvestigationTargetRewardReq_default_instance_);_TakeInvestigationTargetRewardRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TakeInvestigationTargetRewardRsp_default_instance_);_GetInvestigationMonsterReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetInvestigationMonsterReq_default_instance_);_InvestigationMonster_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_InvestigationMonster_default_instance_);_GetInvestigationMonsterRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetInvestigationMonsterRsp_default_instance_);_PlayerInvestigationNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerInvestigationNotify_default_instance_);_PlayerInvestigationTargetNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerInvestigationTargetNotify_default_instance_);_MarkTargetInvestigationMonsterNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MarkTargetInvestigationMonsterNotify_default_instance_);_InvestigationMonsterUpdateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_InvestigationMonsterUpdateNotify_default_instance_);_InvestigationQuestDailyNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_InvestigationQuestDailyNotify_default_instance_);_InvestigationReadQuestDailyNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_InvestigationReadQuestDailyNotify_default_instance_);_InvestigationMonster_default_instance_._instance.get_mutable()->weekly_boss_resin_discount_info_ = const_cast< ::proto::WeeklyBossResinDiscountInfo*>(
      ::proto::WeeklyBossResinDiscountInfo::internal_default_instance());
  _InvestigationMonster_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _InvestigationMonsterUpdateNotify_default_instance_._instance.get_mutable()->investigation_monster_ = const_cast< ::proto::InvestigationMonster*>(
      ::proto::InvestigationMonster::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033cmd/cmd_investigation.proto\022\005proto\032\014de"
      "fine.proto\"\267\001\n\rInvestigation\022\026\n\016total_pr"
      "ogress\030\005 \001(\r\022)\n\005state\030\002 \001(\0162\032.proto.Inve"
      "stigation.State\022\020\n\010progress\030\r \001(\r\022\n\n\002id\030"
      "\t \001(\r\"E\n\005State\022\013\n\007INVALID\020\000\022\017\n\013IN_PROGRE"
      "SS\020\001\022\014\n\010COMPLETE\020\002\022\020\n\014REWARD_TAKEN\020\003\"\343\001\n"
      "\023InvestigationTarget\022\020\n\010quest_id\030\017 \001(\r\022/"
      "\n\005state\030\002 \001(\0162 .proto.InvestigationTarge"
      "t.State\022\020\n\010progress\030\010 \001(\r\022\026\n\016total_progr"
      "ess\030\007 \001(\r\022\030\n\020investigation_id\030\003 \001(\r\"E\n\005S"
      "tate\022\013\n\007INVALID\020\000\022\017\n\013IN_PROGRESS\020\001\022\014\n\010CO"
      "MPLETE\020\002\022\020\n\014REWARD_TAKEN\020\003\"\223\001\n PlayerInv"
      "estigationAllInfoNotify\0220\n\022investigation"
      "_list\030\017 \003(\0132\024.proto.Investigation\022=\n\031inv"
      "estigation_target_list\030\014 \003(\0132\032.proto.Inv"
      "estigationTarget\"(\n\032TakeInvestigationRew"
      "ardReq\022\n\n\002id\030\005 \001(\r\"9\n\032TakeInvestigationR"
      "ewardRsp\022\017\n\007retcode\030\004 \001(\005\022\n\n\002id\030\014 \001(\r\"4\n"
      " TakeInvestigationTargetRewardReq\022\020\n\010que"
      "st_id\030\013 \001(\r\"E\n TakeInvestigationTargetRe"
      "wardRsp\022\017\n\007retcode\030\001 \001(\005\022\020\n\010quest_id\030\002 \001"
      "(\r\"G\n\032GetInvestigationMonsterReq\022\024\n\014city"
      "_id_list\030\003 \003(\r\022\023\n\013is_for_mark\030\004 \001(\010\"\224\004\n\024"
      "InvestigationMonster\022\020\n\010is_alive\030\t \001(\010\022\030"
      "\n\020refresh_interval\030\003 \001(\r\022\n\n\002id\030\r \001(\r\022\r\n\005"
      "level\030\005 \001(\r\022\026\n\016boss_chest_num\030\001 \001(\r\022K\n\037w"
      "eekly_boss_resin_discount_info\030\014 \001(\0132\".p"
      "roto.WeeklyBossResinDiscountInfo\022\023\n\nmons"
      "ter_id\030\255\002 \001(\r\022\032\n\003pos\030\016 \001(\0132\r.proto.Vecto"
      "r\022\r\n\005resin\030\010 \001(\r\022\032\n\022max_boss_chest_num\030\004"
      " \001(\r\022\031\n\021next_refresh_time\030\013 \001(\r\022\021\n\010group"
      "_id\030\235\002 \001(\r\022\020\n\010scene_id\030\n \001(\r\022\026\n\016is_area_"
      "locked\030\017 \001(\010\0229\n\nlock_state\030\002 \001(\0162%.proto"
      ".InvestigationMonster.LockState\022$\n\034next_"
      "boss_chest_refresh_time\030\007 \001(\r\022\017\n\007city_id"
      "\030\006 \001(\r\"*\n\tLockState\022\r\n\tLOCK_NONE\020\000\022\016\n\nLO"
      "CK_QUEST\020\001\"u\n\032GetInvestigationMonsterRsp"
      "\0221\n\014monster_list\030\n \003(\0132\033.proto.Investiga"
      "tionMonster\022\017\n\007retcode\030\001 \001(\005\022\023\n\013is_for_m"
      "ark\030\002 \001(\010\"M\n\031PlayerInvestigationNotify\0220"
      "\n\022investigation_list\030\001 \003(\0132\024.proto.Inves"
      "tigation\"`\n\037PlayerInvestigationTargetNot"
      "ify\022=\n\031investigation_target_list\030\001 \003(\0132\032"
      ".proto.InvestigationTarget\"\200\001\n$MarkTarge"
      "tInvestigationMonsterNotify\022\020\n\010scene_id\030"
      "\013 \001(\r\022\022\n\nmonster_id\030\004 \001(\r\022\020\n\010group_id\030\005 "
      "\001(\r\022 \n\030investigation_monster_id\030\014 \001(\r\"^\n"
      " InvestigationMonsterUpdateNotify\022:\n\025inv"
      "estigation_monster\030\005 \001(\0132\033.proto.Investi"
      "gationMonster\"\037\n\035InvestigationQuestDaily"
      "Notify\"#\n!InvestigationReadQuestDailyNot"
      "ifyB(Z&github.com/teyvat-helper/hk4e-pro"
      "to/pbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2093);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_investigation.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5finvestigation_2eproto

const ::google::protobuf::EnumDescriptor* Investigation_State_descriptor() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_enum_descriptors[0];
}
bool Investigation_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Investigation_State Investigation::INVALID;
const Investigation_State Investigation::IN_PROGRESS;
const Investigation_State Investigation::COMPLETE;
const Investigation_State Investigation::REWARD_TAKEN;
const Investigation_State Investigation::State_MIN;
const Investigation_State Investigation::State_MAX;
const int Investigation::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* InvestigationTarget_State_descriptor() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_enum_descriptors[1];
}
bool InvestigationTarget_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const InvestigationTarget_State InvestigationTarget::INVALID;
const InvestigationTarget_State InvestigationTarget::IN_PROGRESS;
const InvestigationTarget_State InvestigationTarget::COMPLETE;
const InvestigationTarget_State InvestigationTarget::REWARD_TAKEN;
const InvestigationTarget_State InvestigationTarget::State_MIN;
const InvestigationTarget_State InvestigationTarget::State_MAX;
const int InvestigationTarget::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* InvestigationMonster_LockState_descriptor() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_enum_descriptors[2];
}
bool InvestigationMonster_LockState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const InvestigationMonster_LockState InvestigationMonster::LOCK_NONE;
const InvestigationMonster_LockState InvestigationMonster::LOCK_QUEST;
const InvestigationMonster_LockState InvestigationMonster::LockState_MIN;
const InvestigationMonster_LockState InvestigationMonster::LockState_MAX;
const int InvestigationMonster::LockState_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Investigation::kTotalProgressFieldNumber;
const int Investigation::kStateFieldNumber;
const int Investigation::kProgressFieldNumber;
const int Investigation::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Investigation::Investigation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Investigation)
}
Investigation::Investigation(const Investigation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&progress_) -
    reinterpret_cast<char*>(&state_)) + sizeof(progress_));
  // @@protoc_insertion_point(copy_constructor:proto.Investigation)
}

void Investigation::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&state_)) + sizeof(progress_));
  _cached_size_ = 0;
}

Investigation::~Investigation() {
  // @@protoc_insertion_point(destructor:proto.Investigation)
  SharedDtor();
}

void Investigation::SharedDtor() {
}

void Investigation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Investigation::descriptor() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Investigation& Investigation::default_instance() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  return *internal_default_instance();
}

Investigation* Investigation::New(::google::protobuf::Arena* arena) const {
  Investigation* n = new Investigation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Investigation::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Investigation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&state_)) + sizeof(progress_));
  _internal_metadata_.Clear();
}

bool Investigation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Investigation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.Investigation.State state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::proto::Investigation_State >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 total_progress = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 progress = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Investigation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Investigation)
  return false;
#undef DO_
}

void Investigation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Investigation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Investigation.State state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  // uint32 total_progress = 5;
  if (this->total_progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->total_progress(), output);
  }

  // uint32 id = 9;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->id(), output);
  }

  // uint32 progress = 13;
  if (this->progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->progress(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Investigation)
}

::google::protobuf::uint8* Investigation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.Investigation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Investigation.State state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  // uint32 total_progress = 5;
  if (this->total_progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->total_progress(), target);
  }

  // uint32 id = 9;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->id(), target);
  }

  // uint32 progress = 13;
  if (this->progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->progress(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Investigation)
  return target;
}

size_t Investigation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Investigation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Investigation.State state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // uint32 total_progress = 5;
  if (this->total_progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->total_progress());
  }

  // uint32 id = 9;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 progress = 13;
  if (this->progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->progress());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Investigation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Investigation)
  GOOGLE_DCHECK_NE(&from, this);
  const Investigation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Investigation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Investigation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Investigation)
    MergeFrom(*source);
  }
}

void Investigation::MergeFrom(const Investigation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Investigation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.total_progress() != 0) {
    set_total_progress(from.total_progress());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.progress() != 0) {
    set_progress(from.progress());
  }
}

void Investigation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Investigation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Investigation::CopyFrom(const Investigation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Investigation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Investigation::IsInitialized() const {
  return true;
}

void Investigation::Swap(Investigation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Investigation::InternalSwap(Investigation* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(total_progress_, other->total_progress_);
  swap(id_, other->id_);
  swap(progress_, other->progress_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Investigation::GetMetadata() const {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Investigation

// uint32 total_progress = 5;
void Investigation::clear_total_progress() {
  total_progress_ = 0u;
}
::google::protobuf::uint32 Investigation::total_progress() const {
  // @@protoc_insertion_point(field_get:proto.Investigation.total_progress)
  return total_progress_;
}
void Investigation::set_total_progress(::google::protobuf::uint32 value) {
  
  total_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.Investigation.total_progress)
}

// .proto.Investigation.State state = 2;
void Investigation::clear_state() {
  state_ = 0;
}
::proto::Investigation_State Investigation::state() const {
  // @@protoc_insertion_point(field_get:proto.Investigation.state)
  return static_cast< ::proto::Investigation_State >(state_);
}
void Investigation::set_state(::proto::Investigation_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.Investigation.state)
}

// uint32 progress = 13;
void Investigation::clear_progress() {
  progress_ = 0u;
}
::google::protobuf::uint32 Investigation::progress() const {
  // @@protoc_insertion_point(field_get:proto.Investigation.progress)
  return progress_;
}
void Investigation::set_progress(::google::protobuf::uint32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.Investigation.progress)
}

// uint32 id = 9;
void Investigation::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 Investigation::id() const {
  // @@protoc_insertion_point(field_get:proto.Investigation.id)
  return id_;
}
void Investigation::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.Investigation.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InvestigationTarget::kQuestIdFieldNumber;
const int InvestigationTarget::kStateFieldNumber;
const int InvestigationTarget::kProgressFieldNumber;
const int InvestigationTarget::kTotalProgressFieldNumber;
const int InvestigationTarget::kInvestigationIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InvestigationTarget::InvestigationTarget()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.InvestigationTarget)
}
InvestigationTarget::InvestigationTarget(const InvestigationTarget& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&progress_) -
    reinterpret_cast<char*>(&state_)) + sizeof(progress_));
  // @@protoc_insertion_point(copy_constructor:proto.InvestigationTarget)
}

void InvestigationTarget::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&state_)) + sizeof(progress_));
  _cached_size_ = 0;
}

InvestigationTarget::~InvestigationTarget() {
  // @@protoc_insertion_point(destructor:proto.InvestigationTarget)
  SharedDtor();
}

void InvestigationTarget::SharedDtor() {
}

void InvestigationTarget::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InvestigationTarget::descriptor() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InvestigationTarget& InvestigationTarget::default_instance() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  return *internal_default_instance();
}

InvestigationTarget* InvestigationTarget::New(::google::protobuf::Arena* arena) const {
  InvestigationTarget* n = new InvestigationTarget;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InvestigationTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.InvestigationTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&state_)) + sizeof(progress_));
  _internal_metadata_.Clear();
}

bool InvestigationTarget::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.InvestigationTarget)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.InvestigationTarget.State state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::proto::InvestigationTarget_State >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 investigation_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &investigation_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 total_progress = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 progress = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 quest_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.InvestigationTarget)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.InvestigationTarget)
  return false;
#undef DO_
}

void InvestigationTarget::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.InvestigationTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.InvestigationTarget.State state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  // uint32 investigation_id = 3;
  if (this->investigation_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->investigation_id(), output);
  }

  // uint32 total_progress = 7;
  if (this->total_progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->total_progress(), output);
  }

  // uint32 progress = 8;
  if (this->progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->progress(), output);
  }

  // uint32 quest_id = 15;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->quest_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.InvestigationTarget)
}

::google::protobuf::uint8* InvestigationTarget::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.InvestigationTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.InvestigationTarget.State state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  // uint32 investigation_id = 3;
  if (this->investigation_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->investigation_id(), target);
  }

  // uint32 total_progress = 7;
  if (this->total_progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->total_progress(), target);
  }

  // uint32 progress = 8;
  if (this->progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->progress(), target);
  }

  // uint32 quest_id = 15;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->quest_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.InvestigationTarget)
  return target;
}

size_t InvestigationTarget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.InvestigationTarget)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.InvestigationTarget.State state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // uint32 investigation_id = 3;
  if (this->investigation_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->investigation_id());
  }

  // uint32 quest_id = 15;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  // uint32 total_progress = 7;
  if (this->total_progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->total_progress());
  }

  // uint32 progress = 8;
  if (this->progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->progress());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InvestigationTarget::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.InvestigationTarget)
  GOOGLE_DCHECK_NE(&from, this);
  const InvestigationTarget* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InvestigationTarget>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.InvestigationTarget)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.InvestigationTarget)
    MergeFrom(*source);
  }
}

void InvestigationTarget::MergeFrom(const InvestigationTarget& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.InvestigationTarget)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.investigation_id() != 0) {
    set_investigation_id(from.investigation_id());
  }
  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
  if (from.total_progress() != 0) {
    set_total_progress(from.total_progress());
  }
  if (from.progress() != 0) {
    set_progress(from.progress());
  }
}

void InvestigationTarget::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.InvestigationTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvestigationTarget::CopyFrom(const InvestigationTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.InvestigationTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvestigationTarget::IsInitialized() const {
  return true;
}

void InvestigationTarget::Swap(InvestigationTarget* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InvestigationTarget::InternalSwap(InvestigationTarget* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(investigation_id_, other->investigation_id_);
  swap(quest_id_, other->quest_id_);
  swap(total_progress_, other->total_progress_);
  swap(progress_, other->progress_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InvestigationTarget::GetMetadata() const {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InvestigationTarget

// uint32 quest_id = 15;
void InvestigationTarget::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 InvestigationTarget::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationTarget.quest_id)
  return quest_id_;
}
void InvestigationTarget::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationTarget.quest_id)
}

// .proto.InvestigationTarget.State state = 2;
void InvestigationTarget::clear_state() {
  state_ = 0;
}
::proto::InvestigationTarget_State InvestigationTarget::state() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationTarget.state)
  return static_cast< ::proto::InvestigationTarget_State >(state_);
}
void InvestigationTarget::set_state(::proto::InvestigationTarget_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationTarget.state)
}

// uint32 progress = 8;
void InvestigationTarget::clear_progress() {
  progress_ = 0u;
}
::google::protobuf::uint32 InvestigationTarget::progress() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationTarget.progress)
  return progress_;
}
void InvestigationTarget::set_progress(::google::protobuf::uint32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationTarget.progress)
}

// uint32 total_progress = 7;
void InvestigationTarget::clear_total_progress() {
  total_progress_ = 0u;
}
::google::protobuf::uint32 InvestigationTarget::total_progress() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationTarget.total_progress)
  return total_progress_;
}
void InvestigationTarget::set_total_progress(::google::protobuf::uint32 value) {
  
  total_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationTarget.total_progress)
}

// uint32 investigation_id = 3;
void InvestigationTarget::clear_investigation_id() {
  investigation_id_ = 0u;
}
::google::protobuf::uint32 InvestigationTarget::investigation_id() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationTarget.investigation_id)
  return investigation_id_;
}
void InvestigationTarget::set_investigation_id(::google::protobuf::uint32 value) {
  
  investigation_id_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationTarget.investigation_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerInvestigationAllInfoNotify::kInvestigationListFieldNumber;
const int PlayerInvestigationAllInfoNotify::kInvestigationTargetListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerInvestigationAllInfoNotify::PlayerInvestigationAllInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerInvestigationAllInfoNotify)
}
PlayerInvestigationAllInfoNotify::PlayerInvestigationAllInfoNotify(const PlayerInvestigationAllInfoNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      investigation_target_list_(from.investigation_target_list_),
      investigation_list_(from.investigation_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.PlayerInvestigationAllInfoNotify)
}

void PlayerInvestigationAllInfoNotify::SharedCtor() {
  _cached_size_ = 0;
}

PlayerInvestigationAllInfoNotify::~PlayerInvestigationAllInfoNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerInvestigationAllInfoNotify)
  SharedDtor();
}

void PlayerInvestigationAllInfoNotify::SharedDtor() {
}

void PlayerInvestigationAllInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerInvestigationAllInfoNotify::descriptor() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerInvestigationAllInfoNotify& PlayerInvestigationAllInfoNotify::default_instance() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerInvestigationAllInfoNotify* PlayerInvestigationAllInfoNotify::New(::google::protobuf::Arena* arena) const {
  PlayerInvestigationAllInfoNotify* n = new PlayerInvestigationAllInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerInvestigationAllInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerInvestigationAllInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  investigation_target_list_.Clear();
  investigation_list_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerInvestigationAllInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerInvestigationAllInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.InvestigationTarget investigation_target_list = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_investigation_target_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.Investigation investigation_list = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_investigation_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerInvestigationAllInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerInvestigationAllInfoNotify)
  return false;
#undef DO_
}

void PlayerInvestigationAllInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerInvestigationAllInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.InvestigationTarget investigation_target_list = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->investigation_target_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->investigation_target_list(static_cast<int>(i)), output);
  }

  // repeated .proto.Investigation investigation_list = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->investigation_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->investigation_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerInvestigationAllInfoNotify)
}

::google::protobuf::uint8* PlayerInvestigationAllInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerInvestigationAllInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.InvestigationTarget investigation_target_list = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->investigation_target_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, this->investigation_target_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.Investigation investigation_list = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->investigation_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, this->investigation_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerInvestigationAllInfoNotify)
  return target;
}

size_t PlayerInvestigationAllInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerInvestigationAllInfoNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.InvestigationTarget investigation_target_list = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->investigation_target_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->investigation_target_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.Investigation investigation_list = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->investigation_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->investigation_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerInvestigationAllInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerInvestigationAllInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerInvestigationAllInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerInvestigationAllInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerInvestigationAllInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerInvestigationAllInfoNotify)
    MergeFrom(*source);
  }
}

void PlayerInvestigationAllInfoNotify::MergeFrom(const PlayerInvestigationAllInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerInvestigationAllInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  investigation_target_list_.MergeFrom(from.investigation_target_list_);
  investigation_list_.MergeFrom(from.investigation_list_);
}

void PlayerInvestigationAllInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerInvestigationAllInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerInvestigationAllInfoNotify::CopyFrom(const PlayerInvestigationAllInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerInvestigationAllInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerInvestigationAllInfoNotify::IsInitialized() const {
  return true;
}

void PlayerInvestigationAllInfoNotify::Swap(PlayerInvestigationAllInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerInvestigationAllInfoNotify::InternalSwap(PlayerInvestigationAllInfoNotify* other) {
  using std::swap;
  investigation_target_list_.InternalSwap(&other->investigation_target_list_);
  investigation_list_.InternalSwap(&other->investigation_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerInvestigationAllInfoNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerInvestigationAllInfoNotify

// repeated .proto.Investigation investigation_list = 15;
int PlayerInvestigationAllInfoNotify::investigation_list_size() const {
  return investigation_list_.size();
}
void PlayerInvestigationAllInfoNotify::clear_investigation_list() {
  investigation_list_.Clear();
}
const ::proto::Investigation& PlayerInvestigationAllInfoNotify::investigation_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerInvestigationAllInfoNotify.investigation_list)
  return investigation_list_.Get(index);
}
::proto::Investigation* PlayerInvestigationAllInfoNotify::mutable_investigation_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerInvestigationAllInfoNotify.investigation_list)
  return investigation_list_.Mutable(index);
}
::proto::Investigation* PlayerInvestigationAllInfoNotify::add_investigation_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerInvestigationAllInfoNotify.investigation_list)
  return investigation_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::Investigation >*
PlayerInvestigationAllInfoNotify::mutable_investigation_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerInvestigationAllInfoNotify.investigation_list)
  return &investigation_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::Investigation >&
PlayerInvestigationAllInfoNotify::investigation_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerInvestigationAllInfoNotify.investigation_list)
  return investigation_list_;
}

// repeated .proto.InvestigationTarget investigation_target_list = 12;
int PlayerInvestigationAllInfoNotify::investigation_target_list_size() const {
  return investigation_target_list_.size();
}
void PlayerInvestigationAllInfoNotify::clear_investigation_target_list() {
  investigation_target_list_.Clear();
}
const ::proto::InvestigationTarget& PlayerInvestigationAllInfoNotify::investigation_target_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerInvestigationAllInfoNotify.investigation_target_list)
  return investigation_target_list_.Get(index);
}
::proto::InvestigationTarget* PlayerInvestigationAllInfoNotify::mutable_investigation_target_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerInvestigationAllInfoNotify.investigation_target_list)
  return investigation_target_list_.Mutable(index);
}
::proto::InvestigationTarget* PlayerInvestigationAllInfoNotify::add_investigation_target_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerInvestigationAllInfoNotify.investigation_target_list)
  return investigation_target_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::InvestigationTarget >*
PlayerInvestigationAllInfoNotify::mutable_investigation_target_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerInvestigationAllInfoNotify.investigation_target_list)
  return &investigation_target_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::InvestigationTarget >&
PlayerInvestigationAllInfoNotify::investigation_target_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerInvestigationAllInfoNotify.investigation_target_list)
  return investigation_target_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakeInvestigationRewardReq::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakeInvestigationRewardReq::TakeInvestigationRewardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TakeInvestigationRewardReq)
}
TakeInvestigationRewardReq::TakeInvestigationRewardReq(const TakeInvestigationRewardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:proto.TakeInvestigationRewardReq)
}

void TakeInvestigationRewardReq::SharedCtor() {
  id_ = 0u;
  _cached_size_ = 0;
}

TakeInvestigationRewardReq::~TakeInvestigationRewardReq() {
  // @@protoc_insertion_point(destructor:proto.TakeInvestigationRewardReq)
  SharedDtor();
}

void TakeInvestigationRewardReq::SharedDtor() {
}

void TakeInvestigationRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TakeInvestigationRewardReq::descriptor() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakeInvestigationRewardReq& TakeInvestigationRewardReq::default_instance() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  return *internal_default_instance();
}

TakeInvestigationRewardReq* TakeInvestigationRewardReq::New(::google::protobuf::Arena* arena) const {
  TakeInvestigationRewardReq* n = new TakeInvestigationRewardReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TakeInvestigationRewardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TakeInvestigationRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

bool TakeInvestigationRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TakeInvestigationRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TakeInvestigationRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TakeInvestigationRewardReq)
  return false;
#undef DO_
}

void TakeInvestigationRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TakeInvestigationRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 5;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TakeInvestigationRewardReq)
}

::google::protobuf::uint8* TakeInvestigationRewardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TakeInvestigationRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 5;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TakeInvestigationRewardReq)
  return target;
}

size_t TakeInvestigationRewardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TakeInvestigationRewardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 id = 5;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TakeInvestigationRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TakeInvestigationRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TakeInvestigationRewardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakeInvestigationRewardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TakeInvestigationRewardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TakeInvestigationRewardReq)
    MergeFrom(*source);
  }
}

void TakeInvestigationRewardReq::MergeFrom(const TakeInvestigationRewardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TakeInvestigationRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void TakeInvestigationRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TakeInvestigationRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakeInvestigationRewardReq::CopyFrom(const TakeInvestigationRewardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TakeInvestigationRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakeInvestigationRewardReq::IsInitialized() const {
  return true;
}

void TakeInvestigationRewardReq::Swap(TakeInvestigationRewardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakeInvestigationRewardReq::InternalSwap(TakeInvestigationRewardReq* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TakeInvestigationRewardReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TakeInvestigationRewardReq

// uint32 id = 5;
void TakeInvestigationRewardReq::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 TakeInvestigationRewardReq::id() const {
  // @@protoc_insertion_point(field_get:proto.TakeInvestigationRewardReq.id)
  return id_;
}
void TakeInvestigationRewardReq::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeInvestigationRewardReq.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakeInvestigationRewardRsp::kRetcodeFieldNumber;
const int TakeInvestigationRewardRsp::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakeInvestigationRewardRsp::TakeInvestigationRewardRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TakeInvestigationRewardRsp)
}
TakeInvestigationRewardRsp::TakeInvestigationRewardRsp(const TakeInvestigationRewardRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:proto.TakeInvestigationRewardRsp)
}

void TakeInvestigationRewardRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(id_));
  _cached_size_ = 0;
}

TakeInvestigationRewardRsp::~TakeInvestigationRewardRsp() {
  // @@protoc_insertion_point(destructor:proto.TakeInvestigationRewardRsp)
  SharedDtor();
}

void TakeInvestigationRewardRsp::SharedDtor() {
}

void TakeInvestigationRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TakeInvestigationRewardRsp::descriptor() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakeInvestigationRewardRsp& TakeInvestigationRewardRsp::default_instance() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  return *internal_default_instance();
}

TakeInvestigationRewardRsp* TakeInvestigationRewardRsp::New(::google::protobuf::Arena* arena) const {
  TakeInvestigationRewardRsp* n = new TakeInvestigationRewardRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TakeInvestigationRewardRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TakeInvestigationRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

bool TakeInvestigationRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TakeInvestigationRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TakeInvestigationRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TakeInvestigationRewardRsp)
  return false;
#undef DO_
}

void TakeInvestigationRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TakeInvestigationRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->retcode(), output);
  }

  // uint32 id = 12;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TakeInvestigationRewardRsp)
}

::google::protobuf::uint8* TakeInvestigationRewardRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TakeInvestigationRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->retcode(), target);
  }

  // uint32 id = 12;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TakeInvestigationRewardRsp)
  return target;
}

size_t TakeInvestigationRewardRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TakeInvestigationRewardRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 4;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 id = 12;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TakeInvestigationRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TakeInvestigationRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const TakeInvestigationRewardRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakeInvestigationRewardRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TakeInvestigationRewardRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TakeInvestigationRewardRsp)
    MergeFrom(*source);
  }
}

void TakeInvestigationRewardRsp::MergeFrom(const TakeInvestigationRewardRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TakeInvestigationRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void TakeInvestigationRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TakeInvestigationRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakeInvestigationRewardRsp::CopyFrom(const TakeInvestigationRewardRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TakeInvestigationRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakeInvestigationRewardRsp::IsInitialized() const {
  return true;
}

void TakeInvestigationRewardRsp::Swap(TakeInvestigationRewardRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakeInvestigationRewardRsp::InternalSwap(TakeInvestigationRewardRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TakeInvestigationRewardRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TakeInvestigationRewardRsp

// int32 retcode = 4;
void TakeInvestigationRewardRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 TakeInvestigationRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TakeInvestigationRewardRsp.retcode)
  return retcode_;
}
void TakeInvestigationRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeInvestigationRewardRsp.retcode)
}

// uint32 id = 12;
void TakeInvestigationRewardRsp::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 TakeInvestigationRewardRsp::id() const {
  // @@protoc_insertion_point(field_get:proto.TakeInvestigationRewardRsp.id)
  return id_;
}
void TakeInvestigationRewardRsp::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeInvestigationRewardRsp.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakeInvestigationTargetRewardReq::kQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakeInvestigationTargetRewardReq::TakeInvestigationTargetRewardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TakeInvestigationTargetRewardReq)
}
TakeInvestigationTargetRewardReq::TakeInvestigationTargetRewardReq(const TakeInvestigationTargetRewardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  quest_id_ = from.quest_id_;
  // @@protoc_insertion_point(copy_constructor:proto.TakeInvestigationTargetRewardReq)
}

void TakeInvestigationTargetRewardReq::SharedCtor() {
  quest_id_ = 0u;
  _cached_size_ = 0;
}

TakeInvestigationTargetRewardReq::~TakeInvestigationTargetRewardReq() {
  // @@protoc_insertion_point(destructor:proto.TakeInvestigationTargetRewardReq)
  SharedDtor();
}

void TakeInvestigationTargetRewardReq::SharedDtor() {
}

void TakeInvestigationTargetRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TakeInvestigationTargetRewardReq::descriptor() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakeInvestigationTargetRewardReq& TakeInvestigationTargetRewardReq::default_instance() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  return *internal_default_instance();
}

TakeInvestigationTargetRewardReq* TakeInvestigationTargetRewardReq::New(::google::protobuf::Arena* arena) const {
  TakeInvestigationTargetRewardReq* n = new TakeInvestigationTargetRewardReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TakeInvestigationTargetRewardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TakeInvestigationTargetRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quest_id_ = 0u;
  _internal_metadata_.Clear();
}

bool TakeInvestigationTargetRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TakeInvestigationTargetRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 quest_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TakeInvestigationTargetRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TakeInvestigationTargetRewardReq)
  return false;
#undef DO_
}

void TakeInvestigationTargetRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TakeInvestigationTargetRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 11;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->quest_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TakeInvestigationTargetRewardReq)
}

::google::protobuf::uint8* TakeInvestigationTargetRewardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TakeInvestigationTargetRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 11;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->quest_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TakeInvestigationTargetRewardReq)
  return target;
}

size_t TakeInvestigationTargetRewardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TakeInvestigationTargetRewardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 quest_id = 11;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TakeInvestigationTargetRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TakeInvestigationTargetRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TakeInvestigationTargetRewardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakeInvestigationTargetRewardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TakeInvestigationTargetRewardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TakeInvestigationTargetRewardReq)
    MergeFrom(*source);
  }
}

void TakeInvestigationTargetRewardReq::MergeFrom(const TakeInvestigationTargetRewardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TakeInvestigationTargetRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
}

void TakeInvestigationTargetRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TakeInvestigationTargetRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakeInvestigationTargetRewardReq::CopyFrom(const TakeInvestigationTargetRewardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TakeInvestigationTargetRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakeInvestigationTargetRewardReq::IsInitialized() const {
  return true;
}

void TakeInvestigationTargetRewardReq::Swap(TakeInvestigationTargetRewardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakeInvestigationTargetRewardReq::InternalSwap(TakeInvestigationTargetRewardReq* other) {
  using std::swap;
  swap(quest_id_, other->quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TakeInvestigationTargetRewardReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TakeInvestigationTargetRewardReq

// uint32 quest_id = 11;
void TakeInvestigationTargetRewardReq::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 TakeInvestigationTargetRewardReq::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.TakeInvestigationTargetRewardReq.quest_id)
  return quest_id_;
}
void TakeInvestigationTargetRewardReq::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeInvestigationTargetRewardReq.quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakeInvestigationTargetRewardRsp::kRetcodeFieldNumber;
const int TakeInvestigationTargetRewardRsp::kQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakeInvestigationTargetRewardRsp::TakeInvestigationTargetRewardRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TakeInvestigationTargetRewardRsp)
}
TakeInvestigationTargetRewardRsp::TakeInvestigationTargetRewardRsp(const TakeInvestigationTargetRewardRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&quest_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(quest_id_));
  // @@protoc_insertion_point(copy_constructor:proto.TakeInvestigationTargetRewardRsp)
}

void TakeInvestigationTargetRewardRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quest_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(quest_id_));
  _cached_size_ = 0;
}

TakeInvestigationTargetRewardRsp::~TakeInvestigationTargetRewardRsp() {
  // @@protoc_insertion_point(destructor:proto.TakeInvestigationTargetRewardRsp)
  SharedDtor();
}

void TakeInvestigationTargetRewardRsp::SharedDtor() {
}

void TakeInvestigationTargetRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TakeInvestigationTargetRewardRsp::descriptor() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakeInvestigationTargetRewardRsp& TakeInvestigationTargetRewardRsp::default_instance() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  return *internal_default_instance();
}

TakeInvestigationTargetRewardRsp* TakeInvestigationTargetRewardRsp::New(::google::protobuf::Arena* arena) const {
  TakeInvestigationTargetRewardRsp* n = new TakeInvestigationTargetRewardRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TakeInvestigationTargetRewardRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TakeInvestigationTargetRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quest_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(quest_id_));
  _internal_metadata_.Clear();
}

bool TakeInvestigationTargetRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TakeInvestigationTargetRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 quest_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TakeInvestigationTargetRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TakeInvestigationTargetRewardRsp)
  return false;
#undef DO_
}

void TakeInvestigationTargetRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TakeInvestigationTargetRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 quest_id = 2;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->quest_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TakeInvestigationTargetRewardRsp)
}

::google::protobuf::uint8* TakeInvestigationTargetRewardRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TakeInvestigationTargetRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 quest_id = 2;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->quest_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TakeInvestigationTargetRewardRsp)
  return target;
}

size_t TakeInvestigationTargetRewardRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TakeInvestigationTargetRewardRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 quest_id = 2;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TakeInvestigationTargetRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TakeInvestigationTargetRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const TakeInvestigationTargetRewardRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakeInvestigationTargetRewardRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TakeInvestigationTargetRewardRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TakeInvestigationTargetRewardRsp)
    MergeFrom(*source);
  }
}

void TakeInvestigationTargetRewardRsp::MergeFrom(const TakeInvestigationTargetRewardRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TakeInvestigationTargetRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
}

void TakeInvestigationTargetRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TakeInvestigationTargetRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakeInvestigationTargetRewardRsp::CopyFrom(const TakeInvestigationTargetRewardRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TakeInvestigationTargetRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakeInvestigationTargetRewardRsp::IsInitialized() const {
  return true;
}

void TakeInvestigationTargetRewardRsp::Swap(TakeInvestigationTargetRewardRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakeInvestigationTargetRewardRsp::InternalSwap(TakeInvestigationTargetRewardRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(quest_id_, other->quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TakeInvestigationTargetRewardRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TakeInvestigationTargetRewardRsp

// int32 retcode = 1;
void TakeInvestigationTargetRewardRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 TakeInvestigationTargetRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TakeInvestigationTargetRewardRsp.retcode)
  return retcode_;
}
void TakeInvestigationTargetRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeInvestigationTargetRewardRsp.retcode)
}

// uint32 quest_id = 2;
void TakeInvestigationTargetRewardRsp::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 TakeInvestigationTargetRewardRsp::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.TakeInvestigationTargetRewardRsp.quest_id)
  return quest_id_;
}
void TakeInvestigationTargetRewardRsp::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeInvestigationTargetRewardRsp.quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetInvestigationMonsterReq::kCityIdListFieldNumber;
const int GetInvestigationMonsterReq::kIsForMarkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetInvestigationMonsterReq::GetInvestigationMonsterReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetInvestigationMonsterReq)
}
GetInvestigationMonsterReq::GetInvestigationMonsterReq(const GetInvestigationMonsterReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      city_id_list_(from.city_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_for_mark_ = from.is_for_mark_;
  // @@protoc_insertion_point(copy_constructor:proto.GetInvestigationMonsterReq)
}

void GetInvestigationMonsterReq::SharedCtor() {
  is_for_mark_ = false;
  _cached_size_ = 0;
}

GetInvestigationMonsterReq::~GetInvestigationMonsterReq() {
  // @@protoc_insertion_point(destructor:proto.GetInvestigationMonsterReq)
  SharedDtor();
}

void GetInvestigationMonsterReq::SharedDtor() {
}

void GetInvestigationMonsterReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetInvestigationMonsterReq::descriptor() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetInvestigationMonsterReq& GetInvestigationMonsterReq::default_instance() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetInvestigationMonsterReq* GetInvestigationMonsterReq::New(::google::protobuf::Arena* arena) const {
  GetInvestigationMonsterReq* n = new GetInvestigationMonsterReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetInvestigationMonsterReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetInvestigationMonsterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  city_id_list_.Clear();
  is_for_mark_ = false;
  _internal_metadata_.Clear();
}

bool GetInvestigationMonsterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetInvestigationMonsterReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 city_id_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_city_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_city_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_for_mark = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_for_mark_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetInvestigationMonsterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetInvestigationMonsterReq)
  return false;
#undef DO_
}

void GetInvestigationMonsterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetInvestigationMonsterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 city_id_list = 3;
  if (this->city_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _city_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->city_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->city_id_list(i), output);
  }

  // bool is_for_mark = 4;
  if (this->is_for_mark() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_for_mark(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetInvestigationMonsterReq)
}

::google::protobuf::uint8* GetInvestigationMonsterReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetInvestigationMonsterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 city_id_list = 3;
  if (this->city_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _city_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->city_id_list_, target);
  }

  // bool is_for_mark = 4;
  if (this->is_for_mark() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_for_mark(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetInvestigationMonsterReq)
  return target;
}

size_t GetInvestigationMonsterReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetInvestigationMonsterReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 city_id_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->city_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _city_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bool is_for_mark = 4;
  if (this->is_for_mark() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetInvestigationMonsterReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetInvestigationMonsterReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetInvestigationMonsterReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetInvestigationMonsterReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetInvestigationMonsterReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetInvestigationMonsterReq)
    MergeFrom(*source);
  }
}

void GetInvestigationMonsterReq::MergeFrom(const GetInvestigationMonsterReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetInvestigationMonsterReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  city_id_list_.MergeFrom(from.city_id_list_);
  if (from.is_for_mark() != 0) {
    set_is_for_mark(from.is_for_mark());
  }
}

void GetInvestigationMonsterReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetInvestigationMonsterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetInvestigationMonsterReq::CopyFrom(const GetInvestigationMonsterReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetInvestigationMonsterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInvestigationMonsterReq::IsInitialized() const {
  return true;
}

void GetInvestigationMonsterReq::Swap(GetInvestigationMonsterReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetInvestigationMonsterReq::InternalSwap(GetInvestigationMonsterReq* other) {
  using std::swap;
  city_id_list_.InternalSwap(&other->city_id_list_);
  swap(is_for_mark_, other->is_for_mark_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetInvestigationMonsterReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetInvestigationMonsterReq

// repeated uint32 city_id_list = 3;
int GetInvestigationMonsterReq::city_id_list_size() const {
  return city_id_list_.size();
}
void GetInvestigationMonsterReq::clear_city_id_list() {
  city_id_list_.Clear();
}
::google::protobuf::uint32 GetInvestigationMonsterReq::city_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetInvestigationMonsterReq.city_id_list)
  return city_id_list_.Get(index);
}
void GetInvestigationMonsterReq::set_city_id_list(int index, ::google::protobuf::uint32 value) {
  city_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetInvestigationMonsterReq.city_id_list)
}
void GetInvestigationMonsterReq::add_city_id_list(::google::protobuf::uint32 value) {
  city_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetInvestigationMonsterReq.city_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetInvestigationMonsterReq::city_id_list() const {
  // @@protoc_insertion_point(field_list:proto.GetInvestigationMonsterReq.city_id_list)
  return city_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetInvestigationMonsterReq::mutable_city_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetInvestigationMonsterReq.city_id_list)
  return &city_id_list_;
}

// bool is_for_mark = 4;
void GetInvestigationMonsterReq::clear_is_for_mark() {
  is_for_mark_ = false;
}
bool GetInvestigationMonsterReq::is_for_mark() const {
  // @@protoc_insertion_point(field_get:proto.GetInvestigationMonsterReq.is_for_mark)
  return is_for_mark_;
}
void GetInvestigationMonsterReq::set_is_for_mark(bool value) {
  
  is_for_mark_ = value;
  // @@protoc_insertion_point(field_set:proto.GetInvestigationMonsterReq.is_for_mark)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InvestigationMonster::kIsAliveFieldNumber;
const int InvestigationMonster::kRefreshIntervalFieldNumber;
const int InvestigationMonster::kIdFieldNumber;
const int InvestigationMonster::kLevelFieldNumber;
const int InvestigationMonster::kBossChestNumFieldNumber;
const int InvestigationMonster::kWeeklyBossResinDiscountInfoFieldNumber;
const int InvestigationMonster::kMonsterIdFieldNumber;
const int InvestigationMonster::kPosFieldNumber;
const int InvestigationMonster::kResinFieldNumber;
const int InvestigationMonster::kMaxBossChestNumFieldNumber;
const int InvestigationMonster::kNextRefreshTimeFieldNumber;
const int InvestigationMonster::kGroupIdFieldNumber;
const int InvestigationMonster::kSceneIdFieldNumber;
const int InvestigationMonster::kIsAreaLockedFieldNumber;
const int InvestigationMonster::kLockStateFieldNumber;
const int InvestigationMonster::kNextBossChestRefreshTimeFieldNumber;
const int InvestigationMonster::kCityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InvestigationMonster::InvestigationMonster()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.InvestigationMonster)
}
InvestigationMonster::InvestigationMonster(const InvestigationMonster& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_weekly_boss_resin_discount_info()) {
    weekly_boss_resin_discount_info_ = new ::proto::WeeklyBossResinDiscountInfo(*from.weekly_boss_resin_discount_info_);
  } else {
    weekly_boss_resin_discount_info_ = NULL;
  }
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  ::memcpy(&boss_chest_num_, &from.boss_chest_num_,
    static_cast<size_t>(reinterpret_cast<char*>(&monster_id_) -
    reinterpret_cast<char*>(&boss_chest_num_)) + sizeof(monster_id_));
  // @@protoc_insertion_point(copy_constructor:proto.InvestigationMonster)
}

void InvestigationMonster::SharedCtor() {
  ::memset(&weekly_boss_resin_discount_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&monster_id_) -
      reinterpret_cast<char*>(&weekly_boss_resin_discount_info_)) + sizeof(monster_id_));
  _cached_size_ = 0;
}

InvestigationMonster::~InvestigationMonster() {
  // @@protoc_insertion_point(destructor:proto.InvestigationMonster)
  SharedDtor();
}

void InvestigationMonster::SharedDtor() {
  if (this != internal_default_instance()) delete weekly_boss_resin_discount_info_;
  if (this != internal_default_instance()) delete pos_;
}

void InvestigationMonster::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InvestigationMonster::descriptor() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InvestigationMonster& InvestigationMonster::default_instance() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  return *internal_default_instance();
}

InvestigationMonster* InvestigationMonster::New(::google::protobuf::Arena* arena) const {
  InvestigationMonster* n = new InvestigationMonster;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InvestigationMonster::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.InvestigationMonster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && weekly_boss_resin_discount_info_ != NULL) {
    delete weekly_boss_resin_discount_info_;
  }
  weekly_boss_resin_discount_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  ::memset(&boss_chest_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&monster_id_) -
      reinterpret_cast<char*>(&boss_chest_num_)) + sizeof(monster_id_));
  _internal_metadata_.Clear();
}

bool InvestigationMonster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.InvestigationMonster)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 boss_chest_num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &boss_chest_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.InvestigationMonster.LockState lock_state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_lock_state(static_cast< ::proto::InvestigationMonster_LockState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 refresh_interval = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &refresh_interval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_boss_chest_num = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_boss_chest_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 city_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &city_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 next_boss_chest_refresh_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &next_boss_chest_refresh_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 resin = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &resin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_alive = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_alive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 next_refresh_time = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &next_refresh_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.WeeklyBossResinDiscountInfo weekly_boss_resin_discount_info = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_weekly_boss_resin_discount_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector pos = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_area_locked = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_area_locked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 285;
      case 285: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 2280 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 monster_id = 301;
      case 301: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 2408 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &monster_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.InvestigationMonster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.InvestigationMonster)
  return false;
#undef DO_
}

void InvestigationMonster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.InvestigationMonster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 boss_chest_num = 1;
  if (this->boss_chest_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->boss_chest_num(), output);
  }

  // .proto.InvestigationMonster.LockState lock_state = 2;
  if (this->lock_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->lock_state(), output);
  }

  // uint32 refresh_interval = 3;
  if (this->refresh_interval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->refresh_interval(), output);
  }

  // uint32 max_boss_chest_num = 4;
  if (this->max_boss_chest_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->max_boss_chest_num(), output);
  }

  // uint32 level = 5;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->level(), output);
  }

  // uint32 city_id = 6;
  if (this->city_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->city_id(), output);
  }

  // uint32 next_boss_chest_refresh_time = 7;
  if (this->next_boss_chest_refresh_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->next_boss_chest_refresh_time(), output);
  }

  // uint32 resin = 8;
  if (this->resin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->resin(), output);
  }

  // bool is_alive = 9;
  if (this->is_alive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->is_alive(), output);
  }

  // uint32 scene_id = 10;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->scene_id(), output);
  }

  // uint32 next_refresh_time = 11;
  if (this->next_refresh_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->next_refresh_time(), output);
  }

  // .proto.WeeklyBossResinDiscountInfo weekly_boss_resin_discount_info = 12;
  if (this->has_weekly_boss_resin_discount_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->weekly_boss_resin_discount_info_, output);
  }

  // uint32 id = 13;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->id(), output);
  }

  // .proto.Vector pos = 14;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->pos_, output);
  }

  // bool is_area_locked = 15;
  if (this->is_area_locked() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->is_area_locked(), output);
  }

  // uint32 group_id = 285;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(285, this->group_id(), output);
  }

  // uint32 monster_id = 301;
  if (this->monster_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(301, this->monster_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.InvestigationMonster)
}

::google::protobuf::uint8* InvestigationMonster::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.InvestigationMonster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 boss_chest_num = 1;
  if (this->boss_chest_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->boss_chest_num(), target);
  }

  // .proto.InvestigationMonster.LockState lock_state = 2;
  if (this->lock_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->lock_state(), target);
  }

  // uint32 refresh_interval = 3;
  if (this->refresh_interval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->refresh_interval(), target);
  }

  // uint32 max_boss_chest_num = 4;
  if (this->max_boss_chest_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->max_boss_chest_num(), target);
  }

  // uint32 level = 5;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->level(), target);
  }

  // uint32 city_id = 6;
  if (this->city_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->city_id(), target);
  }

  // uint32 next_boss_chest_refresh_time = 7;
  if (this->next_boss_chest_refresh_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->next_boss_chest_refresh_time(), target);
  }

  // uint32 resin = 8;
  if (this->resin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->resin(), target);
  }

  // bool is_alive = 9;
  if (this->is_alive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->is_alive(), target);
  }

  // uint32 scene_id = 10;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->scene_id(), target);
  }

  // uint32 next_refresh_time = 11;
  if (this->next_refresh_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->next_refresh_time(), target);
  }

  // .proto.WeeklyBossResinDiscountInfo weekly_boss_resin_discount_info = 12;
  if (this->has_weekly_boss_resin_discount_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->weekly_boss_resin_discount_info_, deterministic, target);
  }

  // uint32 id = 13;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->id(), target);
  }

  // .proto.Vector pos = 14;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->pos_, deterministic, target);
  }

  // bool is_area_locked = 15;
  if (this->is_area_locked() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->is_area_locked(), target);
  }

  // uint32 group_id = 285;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(285, this->group_id(), target);
  }

  // uint32 monster_id = 301;
  if (this->monster_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(301, this->monster_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.InvestigationMonster)
  return target;
}

size_t InvestigationMonster::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.InvestigationMonster)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.WeeklyBossResinDiscountInfo weekly_boss_resin_discount_info = 12;
  if (this->has_weekly_boss_resin_discount_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->weekly_boss_resin_discount_info_);
  }

  // .proto.Vector pos = 14;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // uint32 boss_chest_num = 1;
  if (this->boss_chest_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->boss_chest_num());
  }

  // .proto.InvestigationMonster.LockState lock_state = 2;
  if (this->lock_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->lock_state());
  }

  // uint32 refresh_interval = 3;
  if (this->refresh_interval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->refresh_interval());
  }

  // uint32 max_boss_chest_num = 4;
  if (this->max_boss_chest_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_boss_chest_num());
  }

  // uint32 level = 5;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 city_id = 6;
  if (this->city_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->city_id());
  }

  // uint32 next_boss_chest_refresh_time = 7;
  if (this->next_boss_chest_refresh_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->next_boss_chest_refresh_time());
  }

  // uint32 resin = 8;
  if (this->resin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->resin());
  }

  // uint32 scene_id = 10;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 next_refresh_time = 11;
  if (this->next_refresh_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->next_refresh_time());
  }

  // bool is_alive = 9;
  if (this->is_alive() != 0) {
    total_size += 1 + 1;
  }

  // bool is_area_locked = 15;
  if (this->is_area_locked() != 0) {
    total_size += 1 + 1;
  }

  // uint32 id = 13;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 group_id = 285;
  if (this->group_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  // uint32 monster_id = 301;
  if (this->monster_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->monster_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InvestigationMonster::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.InvestigationMonster)
  GOOGLE_DCHECK_NE(&from, this);
  const InvestigationMonster* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InvestigationMonster>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.InvestigationMonster)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.InvestigationMonster)
    MergeFrom(*source);
  }
}

void InvestigationMonster::MergeFrom(const InvestigationMonster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.InvestigationMonster)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_weekly_boss_resin_discount_info()) {
    mutable_weekly_boss_resin_discount_info()->::proto::WeeklyBossResinDiscountInfo::MergeFrom(from.weekly_boss_resin_discount_info());
  }
  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
  if (from.boss_chest_num() != 0) {
    set_boss_chest_num(from.boss_chest_num());
  }
  if (from.lock_state() != 0) {
    set_lock_state(from.lock_state());
  }
  if (from.refresh_interval() != 0) {
    set_refresh_interval(from.refresh_interval());
  }
  if (from.max_boss_chest_num() != 0) {
    set_max_boss_chest_num(from.max_boss_chest_num());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.city_id() != 0) {
    set_city_id(from.city_id());
  }
  if (from.next_boss_chest_refresh_time() != 0) {
    set_next_boss_chest_refresh_time(from.next_boss_chest_refresh_time());
  }
  if (from.resin() != 0) {
    set_resin(from.resin());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.next_refresh_time() != 0) {
    set_next_refresh_time(from.next_refresh_time());
  }
  if (from.is_alive() != 0) {
    set_is_alive(from.is_alive());
  }
  if (from.is_area_locked() != 0) {
    set_is_area_locked(from.is_area_locked());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.monster_id() != 0) {
    set_monster_id(from.monster_id());
  }
}

void InvestigationMonster::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.InvestigationMonster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvestigationMonster::CopyFrom(const InvestigationMonster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.InvestigationMonster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvestigationMonster::IsInitialized() const {
  return true;
}

void InvestigationMonster::Swap(InvestigationMonster* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InvestigationMonster::InternalSwap(InvestigationMonster* other) {
  using std::swap;
  swap(weekly_boss_resin_discount_info_, other->weekly_boss_resin_discount_info_);
  swap(pos_, other->pos_);
  swap(boss_chest_num_, other->boss_chest_num_);
  swap(lock_state_, other->lock_state_);
  swap(refresh_interval_, other->refresh_interval_);
  swap(max_boss_chest_num_, other->max_boss_chest_num_);
  swap(level_, other->level_);
  swap(city_id_, other->city_id_);
  swap(next_boss_chest_refresh_time_, other->next_boss_chest_refresh_time_);
  swap(resin_, other->resin_);
  swap(scene_id_, other->scene_id_);
  swap(next_refresh_time_, other->next_refresh_time_);
  swap(is_alive_, other->is_alive_);
  swap(is_area_locked_, other->is_area_locked_);
  swap(id_, other->id_);
  swap(group_id_, other->group_id_);
  swap(monster_id_, other->monster_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InvestigationMonster::GetMetadata() const {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InvestigationMonster

// bool is_alive = 9;
void InvestigationMonster::clear_is_alive() {
  is_alive_ = false;
}
bool InvestigationMonster::is_alive() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.is_alive)
  return is_alive_;
}
void InvestigationMonster::set_is_alive(bool value) {
  
  is_alive_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.is_alive)
}

// uint32 refresh_interval = 3;
void InvestigationMonster::clear_refresh_interval() {
  refresh_interval_ = 0u;
}
::google::protobuf::uint32 InvestigationMonster::refresh_interval() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.refresh_interval)
  return refresh_interval_;
}
void InvestigationMonster::set_refresh_interval(::google::protobuf::uint32 value) {
  
  refresh_interval_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.refresh_interval)
}

// uint32 id = 13;
void InvestigationMonster::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 InvestigationMonster::id() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.id)
  return id_;
}
void InvestigationMonster::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.id)
}

// uint32 level = 5;
void InvestigationMonster::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 InvestigationMonster::level() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.level)
  return level_;
}
void InvestigationMonster::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.level)
}

// uint32 boss_chest_num = 1;
void InvestigationMonster::clear_boss_chest_num() {
  boss_chest_num_ = 0u;
}
::google::protobuf::uint32 InvestigationMonster::boss_chest_num() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.boss_chest_num)
  return boss_chest_num_;
}
void InvestigationMonster::set_boss_chest_num(::google::protobuf::uint32 value) {
  
  boss_chest_num_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.boss_chest_num)
}

// .proto.WeeklyBossResinDiscountInfo weekly_boss_resin_discount_info = 12;
bool InvestigationMonster::has_weekly_boss_resin_discount_info() const {
  return this != internal_default_instance() && weekly_boss_resin_discount_info_ != NULL;
}
void InvestigationMonster::clear_weekly_boss_resin_discount_info() {
  if (GetArenaNoVirtual() == NULL && weekly_boss_resin_discount_info_ != NULL) delete weekly_boss_resin_discount_info_;
  weekly_boss_resin_discount_info_ = NULL;
}
const ::proto::WeeklyBossResinDiscountInfo& InvestigationMonster::weekly_boss_resin_discount_info() const {
  const ::proto::WeeklyBossResinDiscountInfo* p = weekly_boss_resin_discount_info_;
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.weekly_boss_resin_discount_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::WeeklyBossResinDiscountInfo*>(
      &::proto::_WeeklyBossResinDiscountInfo_default_instance_);
}
::proto::WeeklyBossResinDiscountInfo* InvestigationMonster::mutable_weekly_boss_resin_discount_info() {
  
  if (weekly_boss_resin_discount_info_ == NULL) {
    weekly_boss_resin_discount_info_ = new ::proto::WeeklyBossResinDiscountInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.InvestigationMonster.weekly_boss_resin_discount_info)
  return weekly_boss_resin_discount_info_;
}
::proto::WeeklyBossResinDiscountInfo* InvestigationMonster::release_weekly_boss_resin_discount_info() {
  // @@protoc_insertion_point(field_release:proto.InvestigationMonster.weekly_boss_resin_discount_info)
  
  ::proto::WeeklyBossResinDiscountInfo* temp = weekly_boss_resin_discount_info_;
  weekly_boss_resin_discount_info_ = NULL;
  return temp;
}
void InvestigationMonster::set_allocated_weekly_boss_resin_discount_info(::proto::WeeklyBossResinDiscountInfo* weekly_boss_resin_discount_info) {
  delete weekly_boss_resin_discount_info_;
  weekly_boss_resin_discount_info_ = weekly_boss_resin_discount_info;
  if (weekly_boss_resin_discount_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.InvestigationMonster.weekly_boss_resin_discount_info)
}

// uint32 monster_id = 301;
void InvestigationMonster::clear_monster_id() {
  monster_id_ = 0u;
}
::google::protobuf::uint32 InvestigationMonster::monster_id() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.monster_id)
  return monster_id_;
}
void InvestigationMonster::set_monster_id(::google::protobuf::uint32 value) {
  
  monster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.monster_id)
}

// .proto.Vector pos = 14;
bool InvestigationMonster::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void InvestigationMonster::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& InvestigationMonster::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* InvestigationMonster::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.InvestigationMonster.pos)
  return pos_;
}
::proto::Vector* InvestigationMonster::release_pos() {
  // @@protoc_insertion_point(field_release:proto.InvestigationMonster.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void InvestigationMonster::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.InvestigationMonster.pos)
}

// uint32 resin = 8;
void InvestigationMonster::clear_resin() {
  resin_ = 0u;
}
::google::protobuf::uint32 InvestigationMonster::resin() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.resin)
  return resin_;
}
void InvestigationMonster::set_resin(::google::protobuf::uint32 value) {
  
  resin_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.resin)
}

// uint32 max_boss_chest_num = 4;
void InvestigationMonster::clear_max_boss_chest_num() {
  max_boss_chest_num_ = 0u;
}
::google::protobuf::uint32 InvestigationMonster::max_boss_chest_num() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.max_boss_chest_num)
  return max_boss_chest_num_;
}
void InvestigationMonster::set_max_boss_chest_num(::google::protobuf::uint32 value) {
  
  max_boss_chest_num_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.max_boss_chest_num)
}

// uint32 next_refresh_time = 11;
void InvestigationMonster::clear_next_refresh_time() {
  next_refresh_time_ = 0u;
}
::google::protobuf::uint32 InvestigationMonster::next_refresh_time() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.next_refresh_time)
  return next_refresh_time_;
}
void InvestigationMonster::set_next_refresh_time(::google::protobuf::uint32 value) {
  
  next_refresh_time_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.next_refresh_time)
}

// uint32 group_id = 285;
void InvestigationMonster::clear_group_id() {
  group_id_ = 0u;
}
::google::protobuf::uint32 InvestigationMonster::group_id() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.group_id)
  return group_id_;
}
void InvestigationMonster::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.group_id)
}

// uint32 scene_id = 10;
void InvestigationMonster::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 InvestigationMonster::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.scene_id)
  return scene_id_;
}
void InvestigationMonster::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.scene_id)
}

// bool is_area_locked = 15;
void InvestigationMonster::clear_is_area_locked() {
  is_area_locked_ = false;
}
bool InvestigationMonster::is_area_locked() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.is_area_locked)
  return is_area_locked_;
}
void InvestigationMonster::set_is_area_locked(bool value) {
  
  is_area_locked_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.is_area_locked)
}

// .proto.InvestigationMonster.LockState lock_state = 2;
void InvestigationMonster::clear_lock_state() {
  lock_state_ = 0;
}
::proto::InvestigationMonster_LockState InvestigationMonster::lock_state() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.lock_state)
  return static_cast< ::proto::InvestigationMonster_LockState >(lock_state_);
}
void InvestigationMonster::set_lock_state(::proto::InvestigationMonster_LockState value) {
  
  lock_state_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.lock_state)
}

// uint32 next_boss_chest_refresh_time = 7;
void InvestigationMonster::clear_next_boss_chest_refresh_time() {
  next_boss_chest_refresh_time_ = 0u;
}
::google::protobuf::uint32 InvestigationMonster::next_boss_chest_refresh_time() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.next_boss_chest_refresh_time)
  return next_boss_chest_refresh_time_;
}
void InvestigationMonster::set_next_boss_chest_refresh_time(::google::protobuf::uint32 value) {
  
  next_boss_chest_refresh_time_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.next_boss_chest_refresh_time)
}

// uint32 city_id = 6;
void InvestigationMonster::clear_city_id() {
  city_id_ = 0u;
}
::google::protobuf::uint32 InvestigationMonster::city_id() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.city_id)
  return city_id_;
}
void InvestigationMonster::set_city_id(::google::protobuf::uint32 value) {
  
  city_id_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.city_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetInvestigationMonsterRsp::kMonsterListFieldNumber;
const int GetInvestigationMonsterRsp::kRetcodeFieldNumber;
const int GetInvestigationMonsterRsp::kIsForMarkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetInvestigationMonsterRsp::GetInvestigationMonsterRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetInvestigationMonsterRsp)
}
GetInvestigationMonsterRsp::GetInvestigationMonsterRsp(const GetInvestigationMonsterRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      monster_list_(from.monster_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_for_mark_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(is_for_mark_));
  // @@protoc_insertion_point(copy_constructor:proto.GetInvestigationMonsterRsp)
}

void GetInvestigationMonsterRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_for_mark_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(is_for_mark_));
  _cached_size_ = 0;
}

GetInvestigationMonsterRsp::~GetInvestigationMonsterRsp() {
  // @@protoc_insertion_point(destructor:proto.GetInvestigationMonsterRsp)
  SharedDtor();
}

void GetInvestigationMonsterRsp::SharedDtor() {
}

void GetInvestigationMonsterRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetInvestigationMonsterRsp::descriptor() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetInvestigationMonsterRsp& GetInvestigationMonsterRsp::default_instance() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetInvestigationMonsterRsp* GetInvestigationMonsterRsp::New(::google::protobuf::Arena* arena) const {
  GetInvestigationMonsterRsp* n = new GetInvestigationMonsterRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetInvestigationMonsterRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetInvestigationMonsterRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  monster_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_for_mark_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(is_for_mark_));
  _internal_metadata_.Clear();
}

bool GetInvestigationMonsterRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetInvestigationMonsterRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_for_mark = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_for_mark_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.InvestigationMonster monster_list = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_monster_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetInvestigationMonsterRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetInvestigationMonsterRsp)
  return false;
#undef DO_
}

void GetInvestigationMonsterRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetInvestigationMonsterRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // bool is_for_mark = 2;
  if (this->is_for_mark() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_for_mark(), output);
  }

  // repeated .proto.InvestigationMonster monster_list = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->monster_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->monster_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetInvestigationMonsterRsp)
}

::google::protobuf::uint8* GetInvestigationMonsterRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetInvestigationMonsterRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // bool is_for_mark = 2;
  if (this->is_for_mark() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_for_mark(), target);
  }

  // repeated .proto.InvestigationMonster monster_list = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->monster_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->monster_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetInvestigationMonsterRsp)
  return target;
}

size_t GetInvestigationMonsterRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetInvestigationMonsterRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.InvestigationMonster monster_list = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->monster_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->monster_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // bool is_for_mark = 2;
  if (this->is_for_mark() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetInvestigationMonsterRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetInvestigationMonsterRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetInvestigationMonsterRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetInvestigationMonsterRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetInvestigationMonsterRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetInvestigationMonsterRsp)
    MergeFrom(*source);
  }
}

void GetInvestigationMonsterRsp::MergeFrom(const GetInvestigationMonsterRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetInvestigationMonsterRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  monster_list_.MergeFrom(from.monster_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.is_for_mark() != 0) {
    set_is_for_mark(from.is_for_mark());
  }
}

void GetInvestigationMonsterRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetInvestigationMonsterRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetInvestigationMonsterRsp::CopyFrom(const GetInvestigationMonsterRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetInvestigationMonsterRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInvestigationMonsterRsp::IsInitialized() const {
  return true;
}

void GetInvestigationMonsterRsp::Swap(GetInvestigationMonsterRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetInvestigationMonsterRsp::InternalSwap(GetInvestigationMonsterRsp* other) {
  using std::swap;
  monster_list_.InternalSwap(&other->monster_list_);
  swap(retcode_, other->retcode_);
  swap(is_for_mark_, other->is_for_mark_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetInvestigationMonsterRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetInvestigationMonsterRsp

// repeated .proto.InvestigationMonster monster_list = 10;
int GetInvestigationMonsterRsp::monster_list_size() const {
  return monster_list_.size();
}
void GetInvestigationMonsterRsp::clear_monster_list() {
  monster_list_.Clear();
}
const ::proto::InvestigationMonster& GetInvestigationMonsterRsp::monster_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetInvestigationMonsterRsp.monster_list)
  return monster_list_.Get(index);
}
::proto::InvestigationMonster* GetInvestigationMonsterRsp::mutable_monster_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetInvestigationMonsterRsp.monster_list)
  return monster_list_.Mutable(index);
}
::proto::InvestigationMonster* GetInvestigationMonsterRsp::add_monster_list() {
  // @@protoc_insertion_point(field_add:proto.GetInvestigationMonsterRsp.monster_list)
  return monster_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::InvestigationMonster >*
GetInvestigationMonsterRsp::mutable_monster_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetInvestigationMonsterRsp.monster_list)
  return &monster_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::InvestigationMonster >&
GetInvestigationMonsterRsp::monster_list() const {
  // @@protoc_insertion_point(field_list:proto.GetInvestigationMonsterRsp.monster_list)
  return monster_list_;
}

// int32 retcode = 1;
void GetInvestigationMonsterRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetInvestigationMonsterRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetInvestigationMonsterRsp.retcode)
  return retcode_;
}
void GetInvestigationMonsterRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetInvestigationMonsterRsp.retcode)
}

// bool is_for_mark = 2;
void GetInvestigationMonsterRsp::clear_is_for_mark() {
  is_for_mark_ = false;
}
bool GetInvestigationMonsterRsp::is_for_mark() const {
  // @@protoc_insertion_point(field_get:proto.GetInvestigationMonsterRsp.is_for_mark)
  return is_for_mark_;
}
void GetInvestigationMonsterRsp::set_is_for_mark(bool value) {
  
  is_for_mark_ = value;
  // @@protoc_insertion_point(field_set:proto.GetInvestigationMonsterRsp.is_for_mark)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerInvestigationNotify::kInvestigationListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerInvestigationNotify::PlayerInvestigationNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerInvestigationNotify)
}
PlayerInvestigationNotify::PlayerInvestigationNotify(const PlayerInvestigationNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      investigation_list_(from.investigation_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.PlayerInvestigationNotify)
}

void PlayerInvestigationNotify::SharedCtor() {
  _cached_size_ = 0;
}

PlayerInvestigationNotify::~PlayerInvestigationNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerInvestigationNotify)
  SharedDtor();
}

void PlayerInvestigationNotify::SharedDtor() {
}

void PlayerInvestigationNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerInvestigationNotify::descriptor() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerInvestigationNotify& PlayerInvestigationNotify::default_instance() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerInvestigationNotify* PlayerInvestigationNotify::New(::google::protobuf::Arena* arena) const {
  PlayerInvestigationNotify* n = new PlayerInvestigationNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerInvestigationNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerInvestigationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  investigation_list_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerInvestigationNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerInvestigationNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.Investigation investigation_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_investigation_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerInvestigationNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerInvestigationNotify)
  return false;
#undef DO_
}

void PlayerInvestigationNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerInvestigationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.Investigation investigation_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->investigation_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->investigation_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerInvestigationNotify)
}

::google::protobuf::uint8* PlayerInvestigationNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerInvestigationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.Investigation investigation_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->investigation_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->investigation_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerInvestigationNotify)
  return target;
}

size_t PlayerInvestigationNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerInvestigationNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.Investigation investigation_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->investigation_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->investigation_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerInvestigationNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerInvestigationNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerInvestigationNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerInvestigationNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerInvestigationNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerInvestigationNotify)
    MergeFrom(*source);
  }
}

void PlayerInvestigationNotify::MergeFrom(const PlayerInvestigationNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerInvestigationNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  investigation_list_.MergeFrom(from.investigation_list_);
}

void PlayerInvestigationNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerInvestigationNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerInvestigationNotify::CopyFrom(const PlayerInvestigationNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerInvestigationNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerInvestigationNotify::IsInitialized() const {
  return true;
}

void PlayerInvestigationNotify::Swap(PlayerInvestigationNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerInvestigationNotify::InternalSwap(PlayerInvestigationNotify* other) {
  using std::swap;
  investigation_list_.InternalSwap(&other->investigation_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerInvestigationNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerInvestigationNotify

// repeated .proto.Investigation investigation_list = 1;
int PlayerInvestigationNotify::investigation_list_size() const {
  return investigation_list_.size();
}
void PlayerInvestigationNotify::clear_investigation_list() {
  investigation_list_.Clear();
}
const ::proto::Investigation& PlayerInvestigationNotify::investigation_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerInvestigationNotify.investigation_list)
  return investigation_list_.Get(index);
}
::proto::Investigation* PlayerInvestigationNotify::mutable_investigation_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerInvestigationNotify.investigation_list)
  return investigation_list_.Mutable(index);
}
::proto::Investigation* PlayerInvestigationNotify::add_investigation_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerInvestigationNotify.investigation_list)
  return investigation_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::Investigation >*
PlayerInvestigationNotify::mutable_investigation_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerInvestigationNotify.investigation_list)
  return &investigation_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::Investigation >&
PlayerInvestigationNotify::investigation_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerInvestigationNotify.investigation_list)
  return investigation_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerInvestigationTargetNotify::kInvestigationTargetListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerInvestigationTargetNotify::PlayerInvestigationTargetNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerInvestigationTargetNotify)
}
PlayerInvestigationTargetNotify::PlayerInvestigationTargetNotify(const PlayerInvestigationTargetNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      investigation_target_list_(from.investigation_target_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.PlayerInvestigationTargetNotify)
}

void PlayerInvestigationTargetNotify::SharedCtor() {
  _cached_size_ = 0;
}

PlayerInvestigationTargetNotify::~PlayerInvestigationTargetNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerInvestigationTargetNotify)
  SharedDtor();
}

void PlayerInvestigationTargetNotify::SharedDtor() {
}

void PlayerInvestigationTargetNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerInvestigationTargetNotify::descriptor() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerInvestigationTargetNotify& PlayerInvestigationTargetNotify::default_instance() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerInvestigationTargetNotify* PlayerInvestigationTargetNotify::New(::google::protobuf::Arena* arena) const {
  PlayerInvestigationTargetNotify* n = new PlayerInvestigationTargetNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerInvestigationTargetNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerInvestigationTargetNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  investigation_target_list_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerInvestigationTargetNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerInvestigationTargetNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.InvestigationTarget investigation_target_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_investigation_target_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerInvestigationTargetNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerInvestigationTargetNotify)
  return false;
#undef DO_
}

void PlayerInvestigationTargetNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerInvestigationTargetNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.InvestigationTarget investigation_target_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->investigation_target_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->investigation_target_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerInvestigationTargetNotify)
}

::google::protobuf::uint8* PlayerInvestigationTargetNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerInvestigationTargetNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.InvestigationTarget investigation_target_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->investigation_target_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->investigation_target_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerInvestigationTargetNotify)
  return target;
}

size_t PlayerInvestigationTargetNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerInvestigationTargetNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.InvestigationTarget investigation_target_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->investigation_target_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->investigation_target_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerInvestigationTargetNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerInvestigationTargetNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerInvestigationTargetNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerInvestigationTargetNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerInvestigationTargetNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerInvestigationTargetNotify)
    MergeFrom(*source);
  }
}

void PlayerInvestigationTargetNotify::MergeFrom(const PlayerInvestigationTargetNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerInvestigationTargetNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  investigation_target_list_.MergeFrom(from.investigation_target_list_);
}

void PlayerInvestigationTargetNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerInvestigationTargetNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerInvestigationTargetNotify::CopyFrom(const PlayerInvestigationTargetNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerInvestigationTargetNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerInvestigationTargetNotify::IsInitialized() const {
  return true;
}

void PlayerInvestigationTargetNotify::Swap(PlayerInvestigationTargetNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerInvestigationTargetNotify::InternalSwap(PlayerInvestigationTargetNotify* other) {
  using std::swap;
  investigation_target_list_.InternalSwap(&other->investigation_target_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerInvestigationTargetNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerInvestigationTargetNotify

// repeated .proto.InvestigationTarget investigation_target_list = 1;
int PlayerInvestigationTargetNotify::investigation_target_list_size() const {
  return investigation_target_list_.size();
}
void PlayerInvestigationTargetNotify::clear_investigation_target_list() {
  investigation_target_list_.Clear();
}
const ::proto::InvestigationTarget& PlayerInvestigationTargetNotify::investigation_target_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerInvestigationTargetNotify.investigation_target_list)
  return investigation_target_list_.Get(index);
}
::proto::InvestigationTarget* PlayerInvestigationTargetNotify::mutable_investigation_target_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerInvestigationTargetNotify.investigation_target_list)
  return investigation_target_list_.Mutable(index);
}
::proto::InvestigationTarget* PlayerInvestigationTargetNotify::add_investigation_target_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerInvestigationTargetNotify.investigation_target_list)
  return investigation_target_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::InvestigationTarget >*
PlayerInvestigationTargetNotify::mutable_investigation_target_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerInvestigationTargetNotify.investigation_target_list)
  return &investigation_target_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::InvestigationTarget >&
PlayerInvestigationTargetNotify::investigation_target_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerInvestigationTargetNotify.investigation_target_list)
  return investigation_target_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MarkTargetInvestigationMonsterNotify::kSceneIdFieldNumber;
const int MarkTargetInvestigationMonsterNotify::kMonsterIdFieldNumber;
const int MarkTargetInvestigationMonsterNotify::kGroupIdFieldNumber;
const int MarkTargetInvestigationMonsterNotify::kInvestigationMonsterIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MarkTargetInvestigationMonsterNotify::MarkTargetInvestigationMonsterNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MarkTargetInvestigationMonsterNotify)
}
MarkTargetInvestigationMonsterNotify::MarkTargetInvestigationMonsterNotify(const MarkTargetInvestigationMonsterNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&monster_id_, &from.monster_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&investigation_monster_id_) -
    reinterpret_cast<char*>(&monster_id_)) + sizeof(investigation_monster_id_));
  // @@protoc_insertion_point(copy_constructor:proto.MarkTargetInvestigationMonsterNotify)
}

void MarkTargetInvestigationMonsterNotify::SharedCtor() {
  ::memset(&monster_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&investigation_monster_id_) -
      reinterpret_cast<char*>(&monster_id_)) + sizeof(investigation_monster_id_));
  _cached_size_ = 0;
}

MarkTargetInvestigationMonsterNotify::~MarkTargetInvestigationMonsterNotify() {
  // @@protoc_insertion_point(destructor:proto.MarkTargetInvestigationMonsterNotify)
  SharedDtor();
}

void MarkTargetInvestigationMonsterNotify::SharedDtor() {
}

void MarkTargetInvestigationMonsterNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MarkTargetInvestigationMonsterNotify::descriptor() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MarkTargetInvestigationMonsterNotify& MarkTargetInvestigationMonsterNotify::default_instance() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  return *internal_default_instance();
}

MarkTargetInvestigationMonsterNotify* MarkTargetInvestigationMonsterNotify::New(::google::protobuf::Arena* arena) const {
  MarkTargetInvestigationMonsterNotify* n = new MarkTargetInvestigationMonsterNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MarkTargetInvestigationMonsterNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MarkTargetInvestigationMonsterNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&monster_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&investigation_monster_id_) -
      reinterpret_cast<char*>(&monster_id_)) + sizeof(investigation_monster_id_));
  _internal_metadata_.Clear();
}

bool MarkTargetInvestigationMonsterNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MarkTargetInvestigationMonsterNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 monster_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &monster_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 investigation_monster_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &investigation_monster_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MarkTargetInvestigationMonsterNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MarkTargetInvestigationMonsterNotify)
  return false;
#undef DO_
}

void MarkTargetInvestigationMonsterNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MarkTargetInvestigationMonsterNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 monster_id = 4;
  if (this->monster_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->monster_id(), output);
  }

  // uint32 group_id = 5;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->group_id(), output);
  }

  // uint32 scene_id = 11;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->scene_id(), output);
  }

  // uint32 investigation_monster_id = 12;
  if (this->investigation_monster_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->investigation_monster_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MarkTargetInvestigationMonsterNotify)
}

::google::protobuf::uint8* MarkTargetInvestigationMonsterNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MarkTargetInvestigationMonsterNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 monster_id = 4;
  if (this->monster_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->monster_id(), target);
  }

  // uint32 group_id = 5;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->group_id(), target);
  }

  // uint32 scene_id = 11;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->scene_id(), target);
  }

  // uint32 investigation_monster_id = 12;
  if (this->investigation_monster_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->investigation_monster_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MarkTargetInvestigationMonsterNotify)
  return target;
}

size_t MarkTargetInvestigationMonsterNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MarkTargetInvestigationMonsterNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 monster_id = 4;
  if (this->monster_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->monster_id());
  }

  // uint32 group_id = 5;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  // uint32 scene_id = 11;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 investigation_monster_id = 12;
  if (this->investigation_monster_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->investigation_monster_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MarkTargetInvestigationMonsterNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MarkTargetInvestigationMonsterNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MarkTargetInvestigationMonsterNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MarkTargetInvestigationMonsterNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MarkTargetInvestigationMonsterNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MarkTargetInvestigationMonsterNotify)
    MergeFrom(*source);
  }
}

void MarkTargetInvestigationMonsterNotify::MergeFrom(const MarkTargetInvestigationMonsterNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MarkTargetInvestigationMonsterNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.monster_id() != 0) {
    set_monster_id(from.monster_id());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.investigation_monster_id() != 0) {
    set_investigation_monster_id(from.investigation_monster_id());
  }
}

void MarkTargetInvestigationMonsterNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MarkTargetInvestigationMonsterNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MarkTargetInvestigationMonsterNotify::CopyFrom(const MarkTargetInvestigationMonsterNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MarkTargetInvestigationMonsterNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarkTargetInvestigationMonsterNotify::IsInitialized() const {
  return true;
}

void MarkTargetInvestigationMonsterNotify::Swap(MarkTargetInvestigationMonsterNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MarkTargetInvestigationMonsterNotify::InternalSwap(MarkTargetInvestigationMonsterNotify* other) {
  using std::swap;
  swap(monster_id_, other->monster_id_);
  swap(group_id_, other->group_id_);
  swap(scene_id_, other->scene_id_);
  swap(investigation_monster_id_, other->investigation_monster_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MarkTargetInvestigationMonsterNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MarkTargetInvestigationMonsterNotify

// uint32 scene_id = 11;
void MarkTargetInvestigationMonsterNotify::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 MarkTargetInvestigationMonsterNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.MarkTargetInvestigationMonsterNotify.scene_id)
  return scene_id_;
}
void MarkTargetInvestigationMonsterNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkTargetInvestigationMonsterNotify.scene_id)
}

// uint32 monster_id = 4;
void MarkTargetInvestigationMonsterNotify::clear_monster_id() {
  monster_id_ = 0u;
}
::google::protobuf::uint32 MarkTargetInvestigationMonsterNotify::monster_id() const {
  // @@protoc_insertion_point(field_get:proto.MarkTargetInvestigationMonsterNotify.monster_id)
  return monster_id_;
}
void MarkTargetInvestigationMonsterNotify::set_monster_id(::google::protobuf::uint32 value) {
  
  monster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkTargetInvestigationMonsterNotify.monster_id)
}

// uint32 group_id = 5;
void MarkTargetInvestigationMonsterNotify::clear_group_id() {
  group_id_ = 0u;
}
::google::protobuf::uint32 MarkTargetInvestigationMonsterNotify::group_id() const {
  // @@protoc_insertion_point(field_get:proto.MarkTargetInvestigationMonsterNotify.group_id)
  return group_id_;
}
void MarkTargetInvestigationMonsterNotify::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkTargetInvestigationMonsterNotify.group_id)
}

// uint32 investigation_monster_id = 12;
void MarkTargetInvestigationMonsterNotify::clear_investigation_monster_id() {
  investigation_monster_id_ = 0u;
}
::google::protobuf::uint32 MarkTargetInvestigationMonsterNotify::investigation_monster_id() const {
  // @@protoc_insertion_point(field_get:proto.MarkTargetInvestigationMonsterNotify.investigation_monster_id)
  return investigation_monster_id_;
}
void MarkTargetInvestigationMonsterNotify::set_investigation_monster_id(::google::protobuf::uint32 value) {
  
  investigation_monster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkTargetInvestigationMonsterNotify.investigation_monster_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InvestigationMonsterUpdateNotify::kInvestigationMonsterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InvestigationMonsterUpdateNotify::InvestigationMonsterUpdateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.InvestigationMonsterUpdateNotify)
}
InvestigationMonsterUpdateNotify::InvestigationMonsterUpdateNotify(const InvestigationMonsterUpdateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_investigation_monster()) {
    investigation_monster_ = new ::proto::InvestigationMonster(*from.investigation_monster_);
  } else {
    investigation_monster_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.InvestigationMonsterUpdateNotify)
}

void InvestigationMonsterUpdateNotify::SharedCtor() {
  investigation_monster_ = NULL;
  _cached_size_ = 0;
}

InvestigationMonsterUpdateNotify::~InvestigationMonsterUpdateNotify() {
  // @@protoc_insertion_point(destructor:proto.InvestigationMonsterUpdateNotify)
  SharedDtor();
}

void InvestigationMonsterUpdateNotify::SharedDtor() {
  if (this != internal_default_instance()) delete investigation_monster_;
}

void InvestigationMonsterUpdateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InvestigationMonsterUpdateNotify::descriptor() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InvestigationMonsterUpdateNotify& InvestigationMonsterUpdateNotify::default_instance() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  return *internal_default_instance();
}

InvestigationMonsterUpdateNotify* InvestigationMonsterUpdateNotify::New(::google::protobuf::Arena* arena) const {
  InvestigationMonsterUpdateNotify* n = new InvestigationMonsterUpdateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InvestigationMonsterUpdateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.InvestigationMonsterUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && investigation_monster_ != NULL) {
    delete investigation_monster_;
  }
  investigation_monster_ = NULL;
  _internal_metadata_.Clear();
}

bool InvestigationMonsterUpdateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.InvestigationMonsterUpdateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.InvestigationMonster investigation_monster = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_investigation_monster()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.InvestigationMonsterUpdateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.InvestigationMonsterUpdateNotify)
  return false;
#undef DO_
}

void InvestigationMonsterUpdateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.InvestigationMonsterUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.InvestigationMonster investigation_monster = 5;
  if (this->has_investigation_monster()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->investigation_monster_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.InvestigationMonsterUpdateNotify)
}

::google::protobuf::uint8* InvestigationMonsterUpdateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.InvestigationMonsterUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.InvestigationMonster investigation_monster = 5;
  if (this->has_investigation_monster()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->investigation_monster_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.InvestigationMonsterUpdateNotify)
  return target;
}

size_t InvestigationMonsterUpdateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.InvestigationMonsterUpdateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.InvestigationMonster investigation_monster = 5;
  if (this->has_investigation_monster()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->investigation_monster_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InvestigationMonsterUpdateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.InvestigationMonsterUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const InvestigationMonsterUpdateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InvestigationMonsterUpdateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.InvestigationMonsterUpdateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.InvestigationMonsterUpdateNotify)
    MergeFrom(*source);
  }
}

void InvestigationMonsterUpdateNotify::MergeFrom(const InvestigationMonsterUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.InvestigationMonsterUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_investigation_monster()) {
    mutable_investigation_monster()->::proto::InvestigationMonster::MergeFrom(from.investigation_monster());
  }
}

void InvestigationMonsterUpdateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.InvestigationMonsterUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvestigationMonsterUpdateNotify::CopyFrom(const InvestigationMonsterUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.InvestigationMonsterUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvestigationMonsterUpdateNotify::IsInitialized() const {
  return true;
}

void InvestigationMonsterUpdateNotify::Swap(InvestigationMonsterUpdateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InvestigationMonsterUpdateNotify::InternalSwap(InvestigationMonsterUpdateNotify* other) {
  using std::swap;
  swap(investigation_monster_, other->investigation_monster_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InvestigationMonsterUpdateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InvestigationMonsterUpdateNotify

// .proto.InvestigationMonster investigation_monster = 5;
bool InvestigationMonsterUpdateNotify::has_investigation_monster() const {
  return this != internal_default_instance() && investigation_monster_ != NULL;
}
void InvestigationMonsterUpdateNotify::clear_investigation_monster() {
  if (GetArenaNoVirtual() == NULL && investigation_monster_ != NULL) delete investigation_monster_;
  investigation_monster_ = NULL;
}
const ::proto::InvestigationMonster& InvestigationMonsterUpdateNotify::investigation_monster() const {
  const ::proto::InvestigationMonster* p = investigation_monster_;
  // @@protoc_insertion_point(field_get:proto.InvestigationMonsterUpdateNotify.investigation_monster)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::InvestigationMonster*>(
      &::proto::_InvestigationMonster_default_instance_);
}
::proto::InvestigationMonster* InvestigationMonsterUpdateNotify::mutable_investigation_monster() {
  
  if (investigation_monster_ == NULL) {
    investigation_monster_ = new ::proto::InvestigationMonster;
  }
  // @@protoc_insertion_point(field_mutable:proto.InvestigationMonsterUpdateNotify.investigation_monster)
  return investigation_monster_;
}
::proto::InvestigationMonster* InvestigationMonsterUpdateNotify::release_investigation_monster() {
  // @@protoc_insertion_point(field_release:proto.InvestigationMonsterUpdateNotify.investigation_monster)
  
  ::proto::InvestigationMonster* temp = investigation_monster_;
  investigation_monster_ = NULL;
  return temp;
}
void InvestigationMonsterUpdateNotify::set_allocated_investigation_monster(::proto::InvestigationMonster* investigation_monster) {
  delete investigation_monster_;
  investigation_monster_ = investigation_monster;
  if (investigation_monster) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.InvestigationMonsterUpdateNotify.investigation_monster)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InvestigationQuestDailyNotify::InvestigationQuestDailyNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.InvestigationQuestDailyNotify)
}
InvestigationQuestDailyNotify::InvestigationQuestDailyNotify(const InvestigationQuestDailyNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.InvestigationQuestDailyNotify)
}

void InvestigationQuestDailyNotify::SharedCtor() {
  _cached_size_ = 0;
}

InvestigationQuestDailyNotify::~InvestigationQuestDailyNotify() {
  // @@protoc_insertion_point(destructor:proto.InvestigationQuestDailyNotify)
  SharedDtor();
}

void InvestigationQuestDailyNotify::SharedDtor() {
}

void InvestigationQuestDailyNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InvestigationQuestDailyNotify::descriptor() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InvestigationQuestDailyNotify& InvestigationQuestDailyNotify::default_instance() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  return *internal_default_instance();
}

InvestigationQuestDailyNotify* InvestigationQuestDailyNotify::New(::google::protobuf::Arena* arena) const {
  InvestigationQuestDailyNotify* n = new InvestigationQuestDailyNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InvestigationQuestDailyNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.InvestigationQuestDailyNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool InvestigationQuestDailyNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.InvestigationQuestDailyNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.InvestigationQuestDailyNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.InvestigationQuestDailyNotify)
  return false;
#undef DO_
}

void InvestigationQuestDailyNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.InvestigationQuestDailyNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.InvestigationQuestDailyNotify)
}

::google::protobuf::uint8* InvestigationQuestDailyNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.InvestigationQuestDailyNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.InvestigationQuestDailyNotify)
  return target;
}

size_t InvestigationQuestDailyNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.InvestigationQuestDailyNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InvestigationQuestDailyNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.InvestigationQuestDailyNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const InvestigationQuestDailyNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InvestigationQuestDailyNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.InvestigationQuestDailyNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.InvestigationQuestDailyNotify)
    MergeFrom(*source);
  }
}

void InvestigationQuestDailyNotify::MergeFrom(const InvestigationQuestDailyNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.InvestigationQuestDailyNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void InvestigationQuestDailyNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.InvestigationQuestDailyNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvestigationQuestDailyNotify::CopyFrom(const InvestigationQuestDailyNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.InvestigationQuestDailyNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvestigationQuestDailyNotify::IsInitialized() const {
  return true;
}

void InvestigationQuestDailyNotify::Swap(InvestigationQuestDailyNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InvestigationQuestDailyNotify::InternalSwap(InvestigationQuestDailyNotify* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InvestigationQuestDailyNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InvestigationQuestDailyNotify

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InvestigationReadQuestDailyNotify::InvestigationReadQuestDailyNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.InvestigationReadQuestDailyNotify)
}
InvestigationReadQuestDailyNotify::InvestigationReadQuestDailyNotify(const InvestigationReadQuestDailyNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.InvestigationReadQuestDailyNotify)
}

void InvestigationReadQuestDailyNotify::SharedCtor() {
  _cached_size_ = 0;
}

InvestigationReadQuestDailyNotify::~InvestigationReadQuestDailyNotify() {
  // @@protoc_insertion_point(destructor:proto.InvestigationReadQuestDailyNotify)
  SharedDtor();
}

void InvestigationReadQuestDailyNotify::SharedDtor() {
}

void InvestigationReadQuestDailyNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InvestigationReadQuestDailyNotify::descriptor() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InvestigationReadQuestDailyNotify& InvestigationReadQuestDailyNotify::default_instance() {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::InitDefaults();
  return *internal_default_instance();
}

InvestigationReadQuestDailyNotify* InvestigationReadQuestDailyNotify::New(::google::protobuf::Arena* arena) const {
  InvestigationReadQuestDailyNotify* n = new InvestigationReadQuestDailyNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InvestigationReadQuestDailyNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.InvestigationReadQuestDailyNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool InvestigationReadQuestDailyNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.InvestigationReadQuestDailyNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.InvestigationReadQuestDailyNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.InvestigationReadQuestDailyNotify)
  return false;
#undef DO_
}

void InvestigationReadQuestDailyNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.InvestigationReadQuestDailyNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.InvestigationReadQuestDailyNotify)
}

::google::protobuf::uint8* InvestigationReadQuestDailyNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.InvestigationReadQuestDailyNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.InvestigationReadQuestDailyNotify)
  return target;
}

size_t InvestigationReadQuestDailyNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.InvestigationReadQuestDailyNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InvestigationReadQuestDailyNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.InvestigationReadQuestDailyNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const InvestigationReadQuestDailyNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InvestigationReadQuestDailyNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.InvestigationReadQuestDailyNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.InvestigationReadQuestDailyNotify)
    MergeFrom(*source);
  }
}

void InvestigationReadQuestDailyNotify::MergeFrom(const InvestigationReadQuestDailyNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.InvestigationReadQuestDailyNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void InvestigationReadQuestDailyNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.InvestigationReadQuestDailyNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvestigationReadQuestDailyNotify::CopyFrom(const InvestigationReadQuestDailyNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.InvestigationReadQuestDailyNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvestigationReadQuestDailyNotify::IsInitialized() const {
  return true;
}

void InvestigationReadQuestDailyNotify::Swap(InvestigationReadQuestDailyNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InvestigationReadQuestDailyNotify::InternalSwap(InvestigationReadQuestDailyNotify* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InvestigationReadQuestDailyNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5finvestigation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5finvestigation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InvestigationReadQuestDailyNotify

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
