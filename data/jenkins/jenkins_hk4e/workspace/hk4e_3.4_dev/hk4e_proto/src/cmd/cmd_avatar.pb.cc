// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_avatar.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_avatar.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class AvatarAddNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarAddNotify>
     _instance;
} _AvatarAddNotify_default_instance_;
class AvatarDelNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarDelNotify>
     _instance;
} _AvatarDelNotify_default_instance_;
class AvatarTeamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarTeam>
     _instance;
} _AvatarTeam_default_instance_;
class SetUpAvatarTeamReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetUpAvatarTeamReq>
     _instance;
} _SetUpAvatarTeamReq_default_instance_;
class SetUpAvatarTeamRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetUpAvatarTeamRsp>
     _instance;
} _SetUpAvatarTeamRsp_default_instance_;
class ChooseCurAvatarTeamReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChooseCurAvatarTeamReq>
     _instance;
} _ChooseCurAvatarTeamReq_default_instance_;
class ChooseCurAvatarTeamRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChooseCurAvatarTeamRsp>
     _instance;
} _ChooseCurAvatarTeamRsp_default_instance_;
class ChangeAvatarReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChangeAvatarReq>
     _instance;
} _ChangeAvatarReq_default_instance_;
class ChangeAvatarRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChangeAvatarRsp>
     _instance;
} _ChangeAvatarRsp_default_instance_;
class AvatarPromoteReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarPromoteReq>
     _instance;
} _AvatarPromoteReq_default_instance_;
class AvatarPromoteRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarPromoteRsp>
     _instance;
} _AvatarPromoteRsp_default_instance_;
class SpringUseReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SpringUseReq>
     _instance;
} _SpringUseReq_default_instance_;
class SpringUseRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SpringUseRsp>
     _instance;
} _SpringUseRsp_default_instance_;
class RefreshBackgroundAvatarReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RefreshBackgroundAvatarReq>
     _instance;
} _RefreshBackgroundAvatarReq_default_instance_;
class RefreshBackgroundAvatarRsp_HpFullTimeMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RefreshBackgroundAvatarRsp::RefreshBackgroundAvatarRsp_HpFullTimeMapEntry>
     _instance;
} _RefreshBackgroundAvatarRsp_HpFullTimeMapEntry_default_instance_;
class RefreshBackgroundAvatarRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RefreshBackgroundAvatarRsp>
     _instance;
} _RefreshBackgroundAvatarRsp_default_instance_;
class AvatarTeamUpdateNotify_AvatarTeamMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarTeamUpdateNotify::AvatarTeamUpdateNotify_AvatarTeamMapEntry>
     _instance;
} _AvatarTeamUpdateNotify_AvatarTeamMapEntry_default_instance_;
class AvatarTeamUpdateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarTeamUpdateNotify>
     _instance;
} _AvatarTeamUpdateNotify_default_instance_;
class AvatarDataNotify_AvatarTeamMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarDataNotify::AvatarDataNotify_AvatarTeamMapEntry>
     _instance;
} _AvatarDataNotify_AvatarTeamMapEntry_default_instance_;
class AvatarDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarDataNotify>
     _instance;
} _AvatarDataNotify_default_instance_;
class AvatarUpgradeReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarUpgradeReq>
     _instance;
} _AvatarUpgradeReq_default_instance_;
class AvatarUpgradeRsp_OldFightPropMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarUpgradeRsp::AvatarUpgradeRsp_OldFightPropMapEntry>
     _instance;
} _AvatarUpgradeRsp_OldFightPropMapEntry_default_instance_;
class AvatarUpgradeRsp_CurFightPropMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarUpgradeRsp::AvatarUpgradeRsp_CurFightPropMapEntry>
     _instance;
} _AvatarUpgradeRsp_CurFightPropMapEntry_default_instance_;
class AvatarUpgradeRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarUpgradeRsp>
     _instance;
} _AvatarUpgradeRsp_default_instance_;
class AvatarDieAnimationEndReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarDieAnimationEndReq>
     _instance;
} _AvatarDieAnimationEndReq_default_instance_;
class AvatarDieAnimationEndRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarDieAnimationEndRsp>
     _instance;
} _AvatarDieAnimationEndRsp_default_instance_;
class AvatarChangeElementTypeReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarChangeElementTypeReq>
     _instance;
} _AvatarChangeElementTypeReq_default_instance_;
class AvatarChangeElementTypeRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarChangeElementTypeRsp>
     _instance;
} _AvatarChangeElementTypeRsp_default_instance_;
class AvatarFetterDataNotify_FetterInfoMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarFetterDataNotify::AvatarFetterDataNotify_FetterInfoMapEntry>
     _instance;
} _AvatarFetterDataNotify_FetterInfoMapEntry_default_instance_;
class AvatarFetterDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarFetterDataNotify>
     _instance;
} _AvatarFetterDataNotify_default_instance_;
class AvatarExpeditionDataNotify_ExpeditionInfoMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarExpeditionDataNotify::AvatarExpeditionDataNotify_ExpeditionInfoMapEntry>
     _instance;
} _AvatarExpeditionDataNotify_ExpeditionInfoMapEntry_default_instance_;
class AvatarExpeditionDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarExpeditionDataNotify>
     _instance;
} _AvatarExpeditionDataNotify_default_instance_;
class AvatarExpeditionAllDataReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarExpeditionAllDataReq>
     _instance;
} _AvatarExpeditionAllDataReq_default_instance_;
class AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarExpeditionAllDataRsp::AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry>
     _instance;
} _AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry_default_instance_;
class AvatarExpeditionAllDataRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarExpeditionAllDataRsp>
     _instance;
} _AvatarExpeditionAllDataRsp_default_instance_;
class AvatarExpeditionStartReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarExpeditionStartReq>
     _instance;
} _AvatarExpeditionStartReq_default_instance_;
class AvatarExpeditionStartRsp_ExpeditionInfoMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarExpeditionStartRsp::AvatarExpeditionStartRsp_ExpeditionInfoMapEntry>
     _instance;
} _AvatarExpeditionStartRsp_ExpeditionInfoMapEntry_default_instance_;
class AvatarExpeditionStartRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarExpeditionStartRsp>
     _instance;
} _AvatarExpeditionStartRsp_default_instance_;
class AvatarExpeditionCallBackReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarExpeditionCallBackReq>
     _instance;
} _AvatarExpeditionCallBackReq_default_instance_;
class AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarExpeditionCallBackRsp::AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry>
     _instance;
} _AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry_default_instance_;
class AvatarExpeditionCallBackRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarExpeditionCallBackRsp>
     _instance;
} _AvatarExpeditionCallBackRsp_default_instance_;
class AvatarExpeditionGetRewardReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarExpeditionGetRewardReq>
     _instance;
} _AvatarExpeditionGetRewardReq_default_instance_;
class AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarExpeditionGetRewardRsp::AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry>
     _instance;
} _AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry_default_instance_;
class AvatarExpeditionGetRewardRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarExpeditionGetRewardRsp>
     _instance;
} _AvatarExpeditionGetRewardRsp_default_instance_;
class ChangeMpTeamAvatarReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChangeMpTeamAvatarReq>
     _instance;
} _ChangeMpTeamAvatarReq_default_instance_;
class ChangeMpTeamAvatarRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChangeMpTeamAvatarRsp>
     _instance;
} _ChangeMpTeamAvatarRsp_default_instance_;
class ChangeTeamNameReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChangeTeamNameReq>
     _instance;
} _ChangeTeamNameReq_default_instance_;
class ChangeTeamNameRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChangeTeamNameRsp>
     _instance;
} _ChangeTeamNameRsp_default_instance_;
class SceneTeamAvatarDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneTeamAvatar>
     _instance;
} _SceneTeamAvatar_default_instance_;
class SceneTeamUpdateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneTeamUpdateNotify>
     _instance;
} _SceneTeamUpdateNotify_default_instance_;
class FocusAvatarReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FocusAvatarReq>
     _instance;
} _FocusAvatarReq_default_instance_;
class FocusAvatarRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FocusAvatarRsp>
     _instance;
} _FocusAvatarRsp_default_instance_;
class AvatarSatiationDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarSatiationData>
     _instance;
} _AvatarSatiationData_default_instance_;
class AvatarSatiationDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarSatiationDataNotify>
     _instance;
} _AvatarSatiationDataNotify_default_instance_;
class AvatarWearFlycloakReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarWearFlycloakReq>
     _instance;
} _AvatarWearFlycloakReq_default_instance_;
class AvatarWearFlycloakRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarWearFlycloakRsp>
     _instance;
} _AvatarWearFlycloakRsp_default_instance_;
class AvatarFlycloakChangeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarFlycloakChangeNotify>
     _instance;
} _AvatarFlycloakChangeNotify_default_instance_;
class AvatarGainFlycloakNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarGainFlycloakNotify>
     _instance;
} _AvatarGainFlycloakNotify_default_instance_;
class AvatarEquipAffixStartNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarEquipAffixStartNotify>
     _instance;
} _AvatarEquipAffixStartNotify_default_instance_;
class AvatarFetterLevelRewardReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarFetterLevelRewardReq>
     _instance;
} _AvatarFetterLevelRewardReq_default_instance_;
class AvatarFetterLevelRewardRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarFetterLevelRewardRsp>
     _instance;
} _AvatarFetterLevelRewardRsp_default_instance_;
class AddNoGachaAvatarCardTransferItemDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddNoGachaAvatarCardTransferItem>
     _instance;
} _AddNoGachaAvatarCardTransferItem_default_instance_;
class AddNoGachaAvatarCardNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddNoGachaAvatarCardNotify>
     _instance;
} _AddNoGachaAvatarCardNotify_default_instance_;
class AvatarPromoteGetRewardReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarPromoteGetRewardReq>
     _instance;
} _AvatarPromoteGetRewardReq_default_instance_;
class AvatarPromoteGetRewardRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarPromoteGetRewardRsp>
     _instance;
} _AvatarPromoteGetRewardRsp_default_instance_;
class AvatarChangeCostumeReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarChangeCostumeReq>
     _instance;
} _AvatarChangeCostumeReq_default_instance_;
class AvatarChangeCostumeRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarChangeCostumeRsp>
     _instance;
} _AvatarChangeCostumeRsp_default_instance_;
class AvatarChangeCostumeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarChangeCostumeNotify>
     _instance;
} _AvatarChangeCostumeNotify_default_instance_;
class AvatarGainCostumeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarGainCostumeNotify>
     _instance;
} _AvatarGainCostumeNotify_default_instance_;
class AvatarChangeAnimHashReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarChangeAnimHashReq>
     _instance;
} _AvatarChangeAnimHashReq_default_instance_;
class AvatarChangeAnimHashRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarChangeAnimHashRsp>
     _instance;
} _AvatarChangeAnimHashRsp_default_instance_;
class PersistentDungeonSwitchAvatarReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PersistentDungeonSwitchAvatarReq>
     _instance;
} _PersistentDungeonSwitchAvatarReq_default_instance_;
class PersistentDungeonSwitchAvatarRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PersistentDungeonSwitchAvatarRsp>
     _instance;
} _PersistentDungeonSwitchAvatarRsp_default_instance_;
class AddBackupAvatarTeamReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddBackupAvatarTeamReq>
     _instance;
} _AddBackupAvatarTeamReq_default_instance_;
class AddBackupAvatarTeamRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddBackupAvatarTeamRsp>
     _instance;
} _AddBackupAvatarTeamRsp_default_instance_;
class DelBackupAvatarTeamReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DelBackupAvatarTeamReq>
     _instance;
} _DelBackupAvatarTeamReq_default_instance_;
class DelBackupAvatarTeamRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DelBackupAvatarTeamRsp>
     _instance;
} _DelBackupAvatarTeamRsp_default_instance_;
class AvatarTeamAllDataNotify_AvatarTeamMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarTeamAllDataNotify::AvatarTeamAllDataNotify_AvatarTeamMapEntry>
     _instance;
} _AvatarTeamAllDataNotify_AvatarTeamMapEntry_default_instance_;
class AvatarTeamAllDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarTeamAllDataNotify>
     _instance;
} _AvatarTeamAllDataNotify_default_instance_;
class AvatarRenameInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarRenameInfo>
     _instance;
} _AvatarRenameInfo_default_instance_;
class AvatarRenameInfoNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarRenameInfoNotify>
     _instance;
} _AvatarRenameInfoNotify_default_instance_;
class ItemRenameAvatarReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ItemRenameAvatarReq>
     _instance;
} _ItemRenameAvatarReq_default_instance_;
class ItemRenameAvatarRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ItemRenameAvatarRsp>
     _instance;
} _ItemRenameAvatarRsp_default_instance_;

namespace protobuf_cmd_2fcmd_5favatar_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[83];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarAddNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarAddNotify, avatar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarAddNotify, is_in_team_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarDelNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarDelNotify, avatar_guid_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarTeam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarTeam, avatar_guid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarTeam, team_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetUpAvatarTeamReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetUpAvatarTeamReq, team_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetUpAvatarTeamReq, avatar_team_guid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetUpAvatarTeamReq, cur_avatar_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetUpAvatarTeamRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetUpAvatarTeamRsp, avatar_team_guid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetUpAvatarTeamRsp, team_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetUpAvatarTeamRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetUpAvatarTeamRsp, cur_avatar_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChooseCurAvatarTeamReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChooseCurAvatarTeamReq, team_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChooseCurAvatarTeamRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChooseCurAvatarTeamRsp, cur_team_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChooseCurAvatarTeamRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeAvatarReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeAvatarReq, move_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeAvatarReq, skill_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeAvatarReq, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeAvatarReq, is_move_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeAvatarRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeAvatarRsp, skill_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeAvatarRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeAvatarRsp, cur_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarPromoteReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarPromoteReq, guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarPromoteRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarPromoteRsp, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarPromoteRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpringUseReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpringUseReq, guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpringUseRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpringUseRsp, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpringUseRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshBackgroundAvatarReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshBackgroundAvatarRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshBackgroundAvatarRsp, hp_full_time_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshBackgroundAvatarRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarTeamUpdateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarTeamUpdateNotify, avatar_team_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarTeamUpdateNotify, temp_avatar_guid_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarDataNotify, backup_avatar_team_order_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarDataNotify, temp_avatar_guid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarDataNotify, avatar_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarDataNotify, cur_avatar_team_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarDataNotify, avatar_rename_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarDataNotify, owned_flycloak_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarDataNotify, owned_costume_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarDataNotify, avatar_team_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarDataNotify, choose_avatar_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarUpgradeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarUpgradeReq, avatar_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarUpgradeReq, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarUpgradeReq, item_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarUpgradeRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarUpgradeRsp, cur_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarUpgradeRsp, old_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarUpgradeRsp, old_fight_prop_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarUpgradeRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarUpgradeRsp, cur_fight_prop_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarUpgradeRsp, avatar_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarDieAnimationEndReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarDieAnimationEndReq, reborn_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarDieAnimationEndReq, die_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarDieAnimationEndReq, skill_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarDieAnimationEndRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarDieAnimationEndRsp, skill_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarDieAnimationEndRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarDieAnimationEndRsp, die_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarChangeElementTypeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarChangeElementTypeReq, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarChangeElementTypeReq, area_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarChangeElementTypeRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarChangeElementTypeRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarFetterDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarFetterDataNotify, fetter_info_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionDataNotify, expedition_info_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionAllDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionAllDataRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionAllDataRsp, open_expedition_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionAllDataRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionAllDataRsp, expedition_count_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionAllDataRsp, expedition_info_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionStartReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionStartReq, exp_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionStartReq, avatar_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionStartReq, hour_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionStartRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionStartRsp, expedition_info_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionStartRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionCallBackReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionCallBackReq, avatar_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionCallBackRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionCallBackRsp, expedition_info_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionCallBackRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionGetRewardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionGetRewardReq, avatar_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionGetRewardRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionGetRewardRsp, extra_item_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionGetRewardRsp, item_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionGetRewardRsp, expedition_info_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionGetRewardRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeMpTeamAvatarReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeMpTeamAvatarReq, cur_avatar_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeMpTeamAvatarReq, avatar_guid_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeMpTeamAvatarRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeMpTeamAvatarRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeMpTeamAvatarRsp, avatar_guid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeMpTeamAvatarRsp, cur_avatar_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeTeamNameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeTeamNameReq, team_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeTeamNameReq, team_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeTeamNameRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeTeamNameRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeTeamNameRsp, team_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeTeamNameRsp, team_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTeamAvatar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTeamAvatar, avatar_ability_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTeamAvatar, avatar_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTeamAvatar, is_on_scene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTeamAvatar, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTeamAvatar, avatar_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTeamAvatar, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTeamAvatar, weapon_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTeamAvatar, scene_avatar_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTeamAvatar, weapon_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTeamAvatar, weapon_ability_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTeamAvatar, scene_entity_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTeamAvatar, player_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTeamAvatar, is_reconnect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTeamAvatar, ability_control_block_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTeamAvatar, is_player_cur_avatar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTeamAvatar, server_buff_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTeamUpdateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTeamUpdateNotify, scene_team_avatar_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTeamUpdateNotify, is_in_mp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FocusAvatarReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FocusAvatarReq, avatar_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FocusAvatarReq, is_focus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FocusAvatarRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FocusAvatarRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FocusAvatarRsp, is_focus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FocusAvatarRsp, avatar_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarSatiationData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarSatiationData, finish_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarSatiationData, avatar_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarSatiationData, penalty_finish_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarSatiationDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarSatiationDataNotify, satiation_data_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarWearFlycloakReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarWearFlycloakReq, avatar_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarWearFlycloakReq, flycloak_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarWearFlycloakRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarWearFlycloakRsp, flycloak_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarWearFlycloakRsp, avatar_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarWearFlycloakRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarFlycloakChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarFlycloakChangeNotify, flycloak_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarFlycloakChangeNotify, avatar_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarGainFlycloakNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarGainFlycloakNotify, flycloak_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarEquipAffixStartNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarEquipAffixStartNotify, avatar_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarEquipAffixStartNotify, equip_affix_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarFetterLevelRewardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarFetterLevelRewardReq, avatar_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarFetterLevelRewardReq, fetter_level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarFetterLevelRewardRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarFetterLevelRewardRsp, avatar_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarFetterLevelRewardRsp, reward_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarFetterLevelRewardRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarFetterLevelRewardRsp, fetter_level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddNoGachaAvatarCardTransferItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddNoGachaAvatarCardTransferItem, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddNoGachaAvatarCardTransferItem, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddNoGachaAvatarCardTransferItem, is_new_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddNoGachaAvatarCardNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddNoGachaAvatarCardNotify, transfer_item_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddNoGachaAvatarCardNotify, initial_promote_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddNoGachaAvatarCardNotify, avatar_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddNoGachaAvatarCardNotify, is_transfer_to_item_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddNoGachaAvatarCardNotify, reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddNoGachaAvatarCardNotify, initial_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddNoGachaAvatarCardNotify, item_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarPromoteGetRewardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarPromoteGetRewardReq, avatar_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarPromoteGetRewardReq, promote_level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarPromoteGetRewardRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarPromoteGetRewardRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarPromoteGetRewardRsp, reward_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarPromoteGetRewardRsp, avatar_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarPromoteGetRewardRsp, promote_level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarChangeCostumeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarChangeCostumeReq, costume_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarChangeCostumeReq, avatar_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarChangeCostumeRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarChangeCostumeRsp, avatar_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarChangeCostumeRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarChangeCostumeRsp, costume_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarChangeCostumeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarChangeCostumeNotify, entity_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarGainCostumeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarGainCostumeNotify, costume_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarChangeAnimHashReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarChangeAnimHashReq, anim_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarChangeAnimHashReq, avatar_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarChangeAnimHashRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarChangeAnimHashRsp, anim_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarChangeAnimHashRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarChangeAnimHashRsp, avatar_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistentDungeonSwitchAvatarReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistentDungeonSwitchAvatarReq, cur_avatar_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistentDungeonSwitchAvatarReq, avatar_team_guid_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistentDungeonSwitchAvatarRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistentDungeonSwitchAvatarRsp, avatar_team_guid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistentDungeonSwitchAvatarRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistentDungeonSwitchAvatarRsp, cur_avatar_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBackupAvatarTeamReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBackupAvatarTeamRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBackupAvatarTeamRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelBackupAvatarTeamReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelBackupAvatarTeamReq, backup_avatar_team_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelBackupAvatarTeamRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelBackupAvatarTeamRsp, backup_avatar_team_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelBackupAvatarTeamRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarTeamAllDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarTeamAllDataNotify, temp_avatar_guid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarTeamAllDataNotify, avatar_team_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarTeamAllDataNotify, backup_avatar_team_order_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarRenameInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarRenameInfo, avatar_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarRenameInfo, avatar_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarRenameInfoNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarRenameInfoNotify, avatar_rename_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemRenameAvatarReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemRenameAvatarReq, rename_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemRenameAvatarReq, avatar_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemRenameAvatarRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemRenameAvatarRsp, rename_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemRenameAvatarRsp, cd_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemRenameAvatarRsp, retcode_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(AvatarAddNotify)},
  { 7, -1, sizeof(AvatarDelNotify)},
  { 13, -1, sizeof(AvatarTeam)},
  { 20, -1, sizeof(SetUpAvatarTeamReq)},
  { 28, -1, sizeof(SetUpAvatarTeamRsp)},
  { 37, -1, sizeof(ChooseCurAvatarTeamReq)},
  { 43, -1, sizeof(ChooseCurAvatarTeamRsp)},
  { 50, -1, sizeof(ChangeAvatarReq)},
  { 59, -1, sizeof(ChangeAvatarRsp)},
  { 67, -1, sizeof(AvatarPromoteReq)},
  { 73, -1, sizeof(AvatarPromoteRsp)},
  { 80, -1, sizeof(SpringUseReq)},
  { 86, -1, sizeof(SpringUseRsp)},
  { 93, -1, sizeof(RefreshBackgroundAvatarReq)},
  { 98, -1, sizeof(RefreshBackgroundAvatarRsp)},
  { 105, -1, sizeof(AvatarTeamUpdateNotify)},
  { 112, -1, sizeof(AvatarDataNotify)},
  { 126, -1, sizeof(AvatarUpgradeReq)},
  { 134, -1, sizeof(AvatarUpgradeRsp)},
  { 145, -1, sizeof(AvatarDieAnimationEndReq)},
  { 153, -1, sizeof(AvatarDieAnimationEndRsp)},
  { 161, -1, sizeof(AvatarChangeElementTypeReq)},
  { 168, -1, sizeof(AvatarChangeElementTypeRsp)},
  { 174, -1, sizeof(AvatarFetterDataNotify)},
  { 180, -1, sizeof(AvatarExpeditionDataNotify)},
  { 186, -1, sizeof(AvatarExpeditionAllDataReq)},
  { 191, -1, sizeof(AvatarExpeditionAllDataRsp)},
  { 200, -1, sizeof(AvatarExpeditionStartReq)},
  { 208, -1, sizeof(AvatarExpeditionStartRsp)},
  { 215, -1, sizeof(AvatarExpeditionCallBackReq)},
  { 221, -1, sizeof(AvatarExpeditionCallBackRsp)},
  { 228, -1, sizeof(AvatarExpeditionGetRewardReq)},
  { 234, -1, sizeof(AvatarExpeditionGetRewardRsp)},
  { 243, -1, sizeof(ChangeMpTeamAvatarReq)},
  { 250, -1, sizeof(ChangeMpTeamAvatarRsp)},
  { 258, -1, sizeof(ChangeTeamNameReq)},
  { 265, -1, sizeof(ChangeTeamNameRsp)},
  { 273, -1, sizeof(SceneTeamAvatar)},
  { 294, -1, sizeof(SceneTeamUpdateNotify)},
  { 301, -1, sizeof(FocusAvatarReq)},
  { 308, -1, sizeof(FocusAvatarRsp)},
  { 316, -1, sizeof(AvatarSatiationData)},
  { 324, -1, sizeof(AvatarSatiationDataNotify)},
  { 330, -1, sizeof(AvatarWearFlycloakReq)},
  { 337, -1, sizeof(AvatarWearFlycloakRsp)},
  { 345, -1, sizeof(AvatarFlycloakChangeNotify)},
  { 352, -1, sizeof(AvatarGainFlycloakNotify)},
  { 358, -1, sizeof(AvatarEquipAffixStartNotify)},
  { 365, -1, sizeof(AvatarFetterLevelRewardReq)},
  { 372, -1, sizeof(AvatarFetterLevelRewardRsp)},
  { 381, -1, sizeof(AddNoGachaAvatarCardTransferItem)},
  { 389, -1, sizeof(AddNoGachaAvatarCardNotify)},
  { 401, -1, sizeof(AvatarPromoteGetRewardReq)},
  { 408, -1, sizeof(AvatarPromoteGetRewardRsp)},
  { 417, -1, sizeof(AvatarChangeCostumeReq)},
  { 424, -1, sizeof(AvatarChangeCostumeRsp)},
  { 432, -1, sizeof(AvatarChangeCostumeNotify)},
  { 438, -1, sizeof(AvatarGainCostumeNotify)},
  { 444, -1, sizeof(AvatarChangeAnimHashReq)},
  { 451, -1, sizeof(AvatarChangeAnimHashRsp)},
  { 459, -1, sizeof(PersistentDungeonSwitchAvatarReq)},
  { 466, -1, sizeof(PersistentDungeonSwitchAvatarRsp)},
  { 474, -1, sizeof(AddBackupAvatarTeamReq)},
  { 479, -1, sizeof(AddBackupAvatarTeamRsp)},
  { 485, -1, sizeof(DelBackupAvatarTeamReq)},
  { 491, -1, sizeof(DelBackupAvatarTeamRsp)},
  { 498, -1, sizeof(AvatarTeamAllDataNotify)},
  { 506, -1, sizeof(AvatarRenameInfo)},
  { 513, -1, sizeof(AvatarRenameInfoNotify)},
  { 519, -1, sizeof(ItemRenameAvatarReq)},
  { 526, -1, sizeof(ItemRenameAvatarRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarAddNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarDelNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarTeam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetUpAvatarTeamReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetUpAvatarTeamRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChooseCurAvatarTeamReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChooseCurAvatarTeamRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChangeAvatarReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChangeAvatarRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarPromoteReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarPromoteRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SpringUseReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SpringUseRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RefreshBackgroundAvatarReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RefreshBackgroundAvatarRsp_HpFullTimeMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RefreshBackgroundAvatarRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarTeamUpdateNotify_AvatarTeamMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarTeamUpdateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarDataNotify_AvatarTeamMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarUpgradeReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarUpgradeRsp_OldFightPropMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarUpgradeRsp_CurFightPropMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarUpgradeRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarDieAnimationEndReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarDieAnimationEndRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarChangeElementTypeReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarChangeElementTypeRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarFetterDataNotify_FetterInfoMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarFetterDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarExpeditionDataNotify_ExpeditionInfoMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarExpeditionDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarExpeditionAllDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarExpeditionAllDataRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarExpeditionStartReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarExpeditionStartRsp_ExpeditionInfoMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarExpeditionStartRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarExpeditionCallBackReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarExpeditionCallBackRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarExpeditionGetRewardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarExpeditionGetRewardRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChangeMpTeamAvatarReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChangeMpTeamAvatarRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChangeTeamNameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChangeTeamNameRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneTeamAvatar_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneTeamUpdateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FocusAvatarReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FocusAvatarRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarSatiationData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarSatiationDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarWearFlycloakReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarWearFlycloakRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarFlycloakChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarGainFlycloakNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarEquipAffixStartNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarFetterLevelRewardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarFetterLevelRewardRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddNoGachaAvatarCardTransferItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddNoGachaAvatarCardNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarPromoteGetRewardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarPromoteGetRewardRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarChangeCostumeReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarChangeCostumeRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarChangeCostumeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarGainCostumeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarChangeAnimHashReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarChangeAnimHashRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PersistentDungeonSwitchAvatarReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PersistentDungeonSwitchAvatarRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddBackupAvatarTeamReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddBackupAvatarTeamRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelBackupAvatarTeamReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelBackupAvatarTeamRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarTeamAllDataNotify_AvatarTeamMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarTeamAllDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarRenameInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarRenameInfoNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ItemRenameAvatarReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ItemRenameAvatarRsp_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_avatar.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
file_level_metadata[14].reflection = RefreshBackgroundAvatarRsp::RefreshBackgroundAvatarRsp_HpFullTimeMapEntry::CreateReflection(file_level_metadata[14].descriptor, _RefreshBackgroundAvatarRsp_HpFullTimeMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[16].reflection = AvatarTeamUpdateNotify::AvatarTeamUpdateNotify_AvatarTeamMapEntry::CreateReflection(file_level_metadata[16].descriptor, _AvatarTeamUpdateNotify_AvatarTeamMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[18].reflection = AvatarDataNotify::AvatarDataNotify_AvatarTeamMapEntry::CreateReflection(file_level_metadata[18].descriptor, _AvatarDataNotify_AvatarTeamMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[21].reflection = AvatarUpgradeRsp::AvatarUpgradeRsp_OldFightPropMapEntry::CreateReflection(file_level_metadata[21].descriptor, _AvatarUpgradeRsp_OldFightPropMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[22].reflection = AvatarUpgradeRsp::AvatarUpgradeRsp_CurFightPropMapEntry::CreateReflection(file_level_metadata[22].descriptor, _AvatarUpgradeRsp_CurFightPropMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[28].reflection = AvatarFetterDataNotify::AvatarFetterDataNotify_FetterInfoMapEntry::CreateReflection(file_level_metadata[28].descriptor, _AvatarFetterDataNotify_FetterInfoMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[30].reflection = AvatarExpeditionDataNotify::AvatarExpeditionDataNotify_ExpeditionInfoMapEntry::CreateReflection(file_level_metadata[30].descriptor, _AvatarExpeditionDataNotify_ExpeditionInfoMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[33].reflection = AvatarExpeditionAllDataRsp::AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry::CreateReflection(file_level_metadata[33].descriptor, _AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[36].reflection = AvatarExpeditionStartRsp::AvatarExpeditionStartRsp_ExpeditionInfoMapEntry::CreateReflection(file_level_metadata[36].descriptor, _AvatarExpeditionStartRsp_ExpeditionInfoMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[39].reflection = AvatarExpeditionCallBackRsp::AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry::CreateReflection(file_level_metadata[39].descriptor, _AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[42].reflection = AvatarExpeditionGetRewardRsp::AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry::CreateReflection(file_level_metadata[42].descriptor, _AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[77].reflection = AvatarTeamAllDataNotify::AvatarTeamAllDataNotify_AvatarTeamMapEntry::CreateReflection(file_level_metadata[77].descriptor, _AvatarTeamAllDataNotify_AvatarTeamMapEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 83);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _AvatarAddNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarAddNotify_default_instance_);_AvatarDelNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarDelNotify_default_instance_);_AvatarTeam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarTeam_default_instance_);_SetUpAvatarTeamReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetUpAvatarTeamReq_default_instance_);_SetUpAvatarTeamRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetUpAvatarTeamRsp_default_instance_);_ChooseCurAvatarTeamReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChooseCurAvatarTeamReq_default_instance_);_ChooseCurAvatarTeamRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChooseCurAvatarTeamRsp_default_instance_);_ChangeAvatarReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChangeAvatarReq_default_instance_);_ChangeAvatarRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChangeAvatarRsp_default_instance_);_AvatarPromoteReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarPromoteReq_default_instance_);_AvatarPromoteRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarPromoteRsp_default_instance_);_SpringUseReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SpringUseReq_default_instance_);_SpringUseRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SpringUseRsp_default_instance_);_RefreshBackgroundAvatarReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RefreshBackgroundAvatarReq_default_instance_);_RefreshBackgroundAvatarRsp_HpFullTimeMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RefreshBackgroundAvatarRsp_HpFullTimeMapEntry_default_instance_);_RefreshBackgroundAvatarRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RefreshBackgroundAvatarRsp_default_instance_);_AvatarTeamUpdateNotify_AvatarTeamMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarTeamUpdateNotify_AvatarTeamMapEntry_default_instance_);_AvatarTeamUpdateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarTeamUpdateNotify_default_instance_);_AvatarDataNotify_AvatarTeamMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarDataNotify_AvatarTeamMapEntry_default_instance_);_AvatarDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarDataNotify_default_instance_);_AvatarUpgradeReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarUpgradeReq_default_instance_);_AvatarUpgradeRsp_OldFightPropMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarUpgradeRsp_OldFightPropMapEntry_default_instance_);_AvatarUpgradeRsp_CurFightPropMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarUpgradeRsp_CurFightPropMapEntry_default_instance_);_AvatarUpgradeRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarUpgradeRsp_default_instance_);_AvatarDieAnimationEndReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarDieAnimationEndReq_default_instance_);_AvatarDieAnimationEndRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarDieAnimationEndRsp_default_instance_);_AvatarChangeElementTypeReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarChangeElementTypeReq_default_instance_);_AvatarChangeElementTypeRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarChangeElementTypeRsp_default_instance_);_AvatarFetterDataNotify_FetterInfoMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarFetterDataNotify_FetterInfoMapEntry_default_instance_);_AvatarFetterDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarFetterDataNotify_default_instance_);_AvatarExpeditionDataNotify_ExpeditionInfoMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarExpeditionDataNotify_ExpeditionInfoMapEntry_default_instance_);_AvatarExpeditionDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarExpeditionDataNotify_default_instance_);_AvatarExpeditionAllDataReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarExpeditionAllDataReq_default_instance_);_AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry_default_instance_);_AvatarExpeditionAllDataRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarExpeditionAllDataRsp_default_instance_);_AvatarExpeditionStartReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarExpeditionStartReq_default_instance_);_AvatarExpeditionStartRsp_ExpeditionInfoMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarExpeditionStartRsp_ExpeditionInfoMapEntry_default_instance_);_AvatarExpeditionStartRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarExpeditionStartRsp_default_instance_);_AvatarExpeditionCallBackReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarExpeditionCallBackReq_default_instance_);_AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry_default_instance_);_AvatarExpeditionCallBackRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarExpeditionCallBackRsp_default_instance_);_AvatarExpeditionGetRewardReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarExpeditionGetRewardReq_default_instance_);_AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry_default_instance_);_AvatarExpeditionGetRewardRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarExpeditionGetRewardRsp_default_instance_);_ChangeMpTeamAvatarReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChangeMpTeamAvatarReq_default_instance_);_ChangeMpTeamAvatarRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChangeMpTeamAvatarRsp_default_instance_);_ChangeTeamNameReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChangeTeamNameReq_default_instance_);_ChangeTeamNameRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChangeTeamNameRsp_default_instance_);_SceneTeamAvatar_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneTeamAvatar_default_instance_);_SceneTeamUpdateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneTeamUpdateNotify_default_instance_);_FocusAvatarReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FocusAvatarReq_default_instance_);_FocusAvatarRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FocusAvatarRsp_default_instance_);_AvatarSatiationData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarSatiationData_default_instance_);_AvatarSatiationDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarSatiationDataNotify_default_instance_);_AvatarWearFlycloakReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarWearFlycloakReq_default_instance_);_AvatarWearFlycloakRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarWearFlycloakRsp_default_instance_);_AvatarFlycloakChangeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarFlycloakChangeNotify_default_instance_);_AvatarGainFlycloakNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarGainFlycloakNotify_default_instance_);_AvatarEquipAffixStartNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarEquipAffixStartNotify_default_instance_);_AvatarFetterLevelRewardReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarFetterLevelRewardReq_default_instance_);_AvatarFetterLevelRewardRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarFetterLevelRewardRsp_default_instance_);_AddNoGachaAvatarCardTransferItem_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddNoGachaAvatarCardTransferItem_default_instance_);_AddNoGachaAvatarCardNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddNoGachaAvatarCardNotify_default_instance_);_AvatarPromoteGetRewardReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarPromoteGetRewardReq_default_instance_);_AvatarPromoteGetRewardRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarPromoteGetRewardRsp_default_instance_);_AvatarChangeCostumeReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarChangeCostumeReq_default_instance_);_AvatarChangeCostumeRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarChangeCostumeRsp_default_instance_);_AvatarChangeCostumeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarChangeCostumeNotify_default_instance_);_AvatarGainCostumeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarGainCostumeNotify_default_instance_);_AvatarChangeAnimHashReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarChangeAnimHashReq_default_instance_);_AvatarChangeAnimHashRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarChangeAnimHashRsp_default_instance_);_PersistentDungeonSwitchAvatarReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PersistentDungeonSwitchAvatarReq_default_instance_);_PersistentDungeonSwitchAvatarRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PersistentDungeonSwitchAvatarRsp_default_instance_);_AddBackupAvatarTeamReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddBackupAvatarTeamReq_default_instance_);_AddBackupAvatarTeamRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddBackupAvatarTeamRsp_default_instance_);_DelBackupAvatarTeamReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DelBackupAvatarTeamReq_default_instance_);_DelBackupAvatarTeamRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DelBackupAvatarTeamRsp_default_instance_);_AvatarTeamAllDataNotify_AvatarTeamMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarTeamAllDataNotify_AvatarTeamMapEntry_default_instance_);_AvatarTeamAllDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarTeamAllDataNotify_default_instance_);_AvatarRenameInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarRenameInfo_default_instance_);_AvatarRenameInfoNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarRenameInfoNotify_default_instance_);_ItemRenameAvatarReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ItemRenameAvatarReq_default_instance_);_ItemRenameAvatarRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ItemRenameAvatarRsp_default_instance_);_AvatarAddNotify_default_instance_._instance.get_mutable()->avatar_ = const_cast< ::proto::AvatarInfo*>(
      ::proto::AvatarInfo::internal_default_instance());
  _ChangeAvatarReq_default_instance_._instance.get_mutable()->move_pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _RefreshBackgroundAvatarRsp_HpFullTimeMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_RefreshBackgroundAvatarRsp_HpFullTimeMapEntry_default_instance_._instance.get_mutable());
  _RefreshBackgroundAvatarRsp_HpFullTimeMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _AvatarTeamUpdateNotify_AvatarTeamMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_AvatarTeamUpdateNotify_AvatarTeamMapEntry_default_instance_._instance.get_mutable());
  _AvatarTeamUpdateNotify_AvatarTeamMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _AvatarDataNotify_AvatarTeamMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_AvatarDataNotify_AvatarTeamMapEntry_default_instance_._instance.get_mutable());
  _AvatarDataNotify_AvatarTeamMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _AvatarUpgradeRsp_OldFightPropMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_AvatarUpgradeRsp_OldFightPropMapEntry_default_instance_._instance.get_mutable());
  _AvatarUpgradeRsp_OldFightPropMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _AvatarUpgradeRsp_CurFightPropMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_AvatarUpgradeRsp_CurFightPropMapEntry_default_instance_._instance.get_mutable());
  _AvatarUpgradeRsp_CurFightPropMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _AvatarDieAnimationEndReq_default_instance_._instance.get_mutable()->reborn_pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _AvatarFetterDataNotify_FetterInfoMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_AvatarFetterDataNotify_FetterInfoMapEntry_default_instance_._instance.get_mutable());
  _AvatarFetterDataNotify_FetterInfoMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _AvatarExpeditionDataNotify_ExpeditionInfoMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_AvatarExpeditionDataNotify_ExpeditionInfoMapEntry_default_instance_._instance.get_mutable());
  _AvatarExpeditionDataNotify_ExpeditionInfoMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry_default_instance_._instance.get_mutable());
  _AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _AvatarExpeditionStartRsp_ExpeditionInfoMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_AvatarExpeditionStartRsp_ExpeditionInfoMapEntry_default_instance_._instance.get_mutable());
  _AvatarExpeditionStartRsp_ExpeditionInfoMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry_default_instance_._instance.get_mutable());
  _AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry_default_instance_._instance.get_mutable());
  _AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _SceneTeamAvatar_default_instance_._instance.get_mutable()->avatar_ability_info_ = const_cast< ::proto::AbilitySyncStateInfo*>(
      ::proto::AbilitySyncStateInfo::internal_default_instance());
  _SceneTeamAvatar_default_instance_._instance.get_mutable()->avatar_info_ = const_cast< ::proto::AvatarInfo*>(
      ::proto::AvatarInfo::internal_default_instance());
  _SceneTeamAvatar_default_instance_._instance.get_mutable()->scene_avatar_info_ = const_cast< ::proto::SceneAvatarInfo*>(
      ::proto::SceneAvatarInfo::internal_default_instance());
  _SceneTeamAvatar_default_instance_._instance.get_mutable()->weapon_ability_info_ = const_cast< ::proto::AbilitySyncStateInfo*>(
      ::proto::AbilitySyncStateInfo::internal_default_instance());
  _SceneTeamAvatar_default_instance_._instance.get_mutable()->scene_entity_info_ = const_cast< ::proto::SceneEntityInfo*>(
      ::proto::SceneEntityInfo::internal_default_instance());
  _SceneTeamAvatar_default_instance_._instance.get_mutable()->ability_control_block_ = const_cast< ::proto::AbilityControlBlock*>(
      ::proto::AbilityControlBlock::internal_default_instance());
  _AvatarEquipAffixStartNotify_default_instance_._instance.get_mutable()->equip_affix_info_ = const_cast< ::proto::AvatarEquipAffixInfo*>(
      ::proto::AvatarEquipAffixInfo::internal_default_instance());
  _AvatarChangeCostumeNotify_default_instance_._instance.get_mutable()->entity_info_ = const_cast< ::proto::SceneEntityInfo*>(
      ::proto::SceneEntityInfo::internal_default_instance());
  _AvatarTeamAllDataNotify_AvatarTeamMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_AvatarTeamAllDataNotify_AvatarTeamMapEntry_default_instance_._instance.get_mutable());
  _AvatarTeamAllDataNotify_AvatarTeamMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024cmd/cmd_avatar.proto\022\005proto\032\014define.pr"
      "oto\"H\n\017AvatarAddNotify\022!\n\006avatar\030\r \001(\0132\021"
      ".proto.AvatarInfo\022\022\n\nis_in_team\030\014 \001(\010\"+\n"
      "\017AvatarDelNotify\022\030\n\020avatar_guid_list\030\r \003"
      "(\004\"9\n\nAvatarTeam\022\030\n\020avatar_guid_list\030\007 \003"
      "(\004\022\021\n\tteam_name\030\016 \001(\t\"]\n\022SetUpAvatarTeam"
      "Req\022\017\n\007team_id\030\003 \001(\r\022\035\n\025avatar_team_guid"
      "_list\030\007 \003(\004\022\027\n\017cur_avatar_guid\030\005 \001(\004\"n\n\022"
      "SetUpAvatarTeamRsp\022\035\n\025avatar_team_guid_l"
      "ist\030\001 \003(\004\022\017\n\007team_id\030\006 \001(\r\022\017\n\007retcode\030\010 "
      "\001(\005\022\027\n\017cur_avatar_guid\030\r \001(\004\")\n\026ChooseCu"
      "rAvatarTeamReq\022\017\n\007team_id\030\t \001(\r\">\n\026Choos"
      "eCurAvatarTeamRsp\022\023\n\013cur_team_id\030\001 \001(\r\022\017"
      "\n\007retcode\030\016 \001(\005\"c\n\017ChangeAvatarReq\022\037\n\010mo"
      "ve_pos\030\017 \001(\0132\r.proto.Vector\022\020\n\010skill_id\030"
      "\002 \001(\r\022\014\n\004guid\030\007 \001(\004\022\017\n\007is_move\030\n \001(\010\"F\n\017"
      "ChangeAvatarRsp\022\020\n\010skill_id\030\003 \001(\r\022\017\n\007ret"
      "code\030\n \001(\005\022\020\n\010cur_guid\030\004 \001(\004\" \n\020AvatarPr"
      "omoteReq\022\014\n\004guid\030\005 \001(\004\"1\n\020AvatarPromoteR"
      "sp\022\014\n\004guid\030\013 \001(\004\022\017\n\007retcode\030\010 \001(\005\"\034\n\014Spr"
      "ingUseReq\022\014\n\004guid\030\013 \001(\004\"-\n\014SpringUseRsp\022"
      "\014\n\004guid\030\003 \001(\004\022\017\n\007retcode\030\007 \001(\005\"\034\n\032Refres"
      "hBackgroundAvatarReq\"\263\001\n\032RefreshBackgrou"
      "ndAvatarRsp\022N\n\020hp_full_time_map\030\017 \003(\01324."
      "proto.RefreshBackgroundAvatarRsp.HpFullT"
      "imeMapEntry\022\017\n\007retcode\030\003 \001(\005\0324\n\022HpFullTi"
      "meMapEntry\022\013\n\003key\030\001 \001(\004\022\r\n\005value\030\002 \001(\r:\002"
      "8\001\"\313\001\n\026AvatarTeamUpdateNotify\022I\n\017avatar_"
      "team_map\030\002 \003(\01320.proto.AvatarTeamUpdateN"
      "otify.AvatarTeamMapEntry\022\035\n\025temp_avatar_"
      "guid_list\030\r \003(\004\032G\n\022AvatarTeamMapEntry\022\013\n"
      "\003key\030\001 \001(\r\022 \n\005value\030\002 \001(\0132\021.proto.Avatar"
      "Team:\0028\001\"\264\003\n\020AvatarDataNotify\022%\n\035backup_"
      "avatar_team_order_list\030\t \003(\r\022\035\n\025temp_ava"
      "tar_guid_list\030\014 \003(\004\022&\n\013avatar_list\030\006 \003(\013"
      "2\021.proto.AvatarInfo\022\032\n\022cur_avatar_team_i"
      "d\030\002 \001(\r\0223\n\022avatar_rename_list\030\004 \003(\0132\027.pr"
      "oto.AvatarRenameInfo\022\033\n\023owned_flycloak_l"
      "ist\030\001 \003(\r\022\032\n\022owned_costume_list\030\013 \003(\r\022C\n"
      "\017avatar_team_map\030\007 \003(\0132*.proto.AvatarDat"
      "aNotify.AvatarTeamMapEntry\022\032\n\022choose_ava"
      "tar_guid\030\010 \001(\004\032G\n\022AvatarTeamMapEntry\022\013\n\003"
      "key\030\001 \001(\r\022 \n\005value\030\002 \001(\0132\021.proto.AvatarT"
      "eam:\0028\001\"G\n\020AvatarUpgradeReq\022\023\n\013avatar_gu"
      "id\030\006 \001(\004\022\r\n\005count\030\002 \001(\r\022\017\n\007item_id\030\005 \001(\r"
      "\"\342\002\n\020AvatarUpgradeRsp\022\021\n\tcur_level\030\006 \001(\r"
      "\022\021\n\told_level\030\r \001(\r\022H\n\022old_fight_prop_ma"
      "p\030\n \003(\0132,.proto.AvatarUpgradeRsp.OldFigh"
      "tPropMapEntry\022\017\n\007retcode\030\001 \001(\005\022H\n\022cur_fi"
      "ght_prop_map\030\004 \003(\0132,.proto.AvatarUpgrade"
      "Rsp.CurFightPropMapEntry\022\023\n\013avatar_guid\030"
      "\017 \001(\004\0326\n\024OldFightPropMapEntry\022\013\n\003key\030\001 \001"
      "(\r\022\r\n\005value\030\002 \001(\002:\0028\001\0326\n\024CurFightPropMap"
      "Entry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\002:\0028\001\"a\n"
      "\030AvatarDieAnimationEndReq\022!\n\nreborn_pos\030"
      "\003 \001(\0132\r.proto.Vector\022\020\n\010die_guid\030\007 \001(\004\022\020"
      "\n\010skill_id\030\010 \001(\r\"O\n\030AvatarDieAnimationEn"
      "dRsp\022\020\n\010skill_id\030\r \001(\r\022\017\n\007retcode\030\016 \001(\005\022"
      "\020\n\010die_guid\030\017 \001(\004\"\?\n\032AvatarChangeElement"
      "TypeReq\022\020\n\010scene_id\030\007 \001(\r\022\017\n\007area_id\030\003 \001"
      "(\r\"-\n\032AvatarChangeElementTypeRsp\022\017\n\007retc"
      "ode\030\r \001(\005\"\262\001\n\026AvatarFetterDataNotify\022I\n\017"
      "fetter_info_map\030\017 \003(\01320.proto.AvatarFett"
      "erDataNotify.FetterInfoMapEntry\032M\n\022Fette"
      "rInfoMapEntry\022\013\n\003key\030\001 \001(\004\022&\n\005value\030\002 \001("
      "\0132\027.proto.AvatarFetterInfo:\0028\001\"\312\001\n\032Avata"
      "rExpeditionDataNotify\022U\n\023expedition_info"
      "_map\030\006 \003(\01328.proto.AvatarExpeditionDataN"
      "otify.ExpeditionInfoMapEntry\032U\n\026Expediti"
      "onInfoMapEntry\022\013\n\003key\030\001 \001(\004\022*\n\005value\030\002 \001"
      "(\0132\033.proto.AvatarExpeditionInfo:\0028\001\"\034\n\032A"
      "vatarExpeditionAllDataReq\"\231\002\n\032AvatarExpe"
      "ditionAllDataRsp\022\034\n\024open_expedition_list"
      "\030\003 \003(\r\022\017\n\007retcode\030\017 \001(\005\022\036\n\026expedition_co"
      "unt_limit\030\014 \001(\r\022U\n\023expedition_info_map\030\004"
      " \003(\01328.proto.AvatarExpeditionAllDataRsp."
      "ExpeditionInfoMapEntry\032U\n\026ExpeditionInfo"
      "MapEntry\022\013\n\003key\030\001 \001(\004\022*\n\005value\030\002 \001(\0132\033.p"
      "roto.AvatarExpeditionInfo:\0028\001\"R\n\030AvatarE"
      "xpeditionStartReq\022\016\n\006exp_id\030\t \001(\r\022\023\n\013ava"
      "tar_guid\030\n \001(\004\022\021\n\thour_time\030\002 \001(\r\"\327\001\n\030Av"
      "atarExpeditionStartRsp\022S\n\023expedition_inf"
      "o_map\030\002 \003(\01326.proto.AvatarExpeditionStar"
      "tRsp.ExpeditionInfoMapEntry\022\017\n\007retcode\030\005"
      " \001(\005\032U\n\026ExpeditionInfoMapEntry\022\013\n\003key\030\001 "
      "\001(\004\022*\n\005value\030\002 \001(\0132\033.proto.AvatarExpedit"
      "ionInfo:\0028\001\"2\n\033AvatarExpeditionCallBackR"
      "eq\022\023\n\013avatar_guid\030\r \003(\004\"\335\001\n\033AvatarExpedi"
      "tionCallBackRsp\022V\n\023expedition_info_map\030\t"
      " \003(\01329.proto.AvatarExpeditionCallBackRsp"
      ".ExpeditionInfoMapEntry\022\017\n\007retcode\030\005 \001(\005"
      "\032U\n\026ExpeditionInfoMapEntry\022\013\n\003key\030\001 \001(\004\022"
      "*\n\005value\030\002 \001(\0132\033.proto.AvatarExpeditionI"
      "nfo:\0028\001\"3\n\034AvatarExpeditionGetRewardReq\022"
      "\023\n\013avatar_guid\030\016 \001(\004\"\257\002\n\034AvatarExpeditio"
      "nGetRewardRsp\022)\n\017extra_item_list\030\t \003(\0132\020"
      ".proto.ItemParam\022#\n\titem_list\030\010 \003(\0132\020.pr"
      "oto.ItemParam\022W\n\023expedition_info_map\030\014 \003"
      "(\0132:.proto.AvatarExpeditionGetRewardRsp."
      "ExpeditionInfoMapEntry\022\017\n\007retcode\030\002 \001(\005\032"
      "U\n\026ExpeditionInfoMapEntry\022\013\n\003key\030\001 \001(\004\022*"
      "\n\005value\030\002 \001(\0132\033.proto.AvatarExpeditionIn"
      "fo:\0028\001\"J\n\025ChangeMpTeamAvatarReq\022\027\n\017cur_a"
      "vatar_guid\030\004 \001(\004\022\030\n\020avatar_guid_list\030\010 \003"
      "(\004\"[\n\025ChangeMpTeamAvatarRsp\022\017\n\007retcode\030\004"
      " \001(\005\022\030\n\020avatar_guid_list\030\003 \003(\004\022\027\n\017cur_av"
      "atar_guid\030\r \001(\004\"7\n\021ChangeTeamNameReq\022\017\n\007"
      "team_id\030\010 \001(\005\022\021\n\tteam_name\030\t \001(\t\"H\n\021Chan"
      "geTeamNameRsp\022\017\n\007retcode\030\013 \001(\005\022\021\n\tteam_n"
      "ame\030\002 \001(\t\022\017\n\007team_id\030\004 \001(\005\"\302\004\n\017SceneTeam"
      "Avatar\0228\n\023avatar_ability_info\030\005 \001(\0132\033.pr"
      "oto.AbilitySyncStateInfo\022&\n\013avatar_info\030"
      "\010 \001(\0132\021.proto.AvatarInfo\022\024\n\013is_on_scene\030"
      "\230\001 \001(\010\022\021\n\tentity_id\030\t \001(\r\022\023\n\013avatar_guid"
      "\030\017 \001(\004\022\020\n\010scene_id\030\001 \001(\r\022\030\n\020weapon_entit"
      "y_id\030\007 \001(\r\0221\n\021scene_avatar_info\030\003 \001(\0132\026."
      "proto.SceneAvatarInfo\022\023\n\013weapon_guid\030\004 \001"
      "(\004\0228\n\023weapon_ability_info\030\013 \001(\0132\033.proto."
      "AbilitySyncStateInfo\0221\n\021scene_entity_inf"
      "o\030\014 \001(\0132\026.proto.SceneEntityInfo\022\022\n\nplaye"
      "r_uid\030\016 \001(\r\022\024\n\014is_reconnect\030\006 \001(\010\0229\n\025abi"
      "lity_control_block\030\002 \001(\0132\032.proto.Ability"
      "ControlBlock\022\034\n\024is_player_cur_avatar\030\r \001"
      "(\010\022+\n\020server_buff_list\030\n \003(\0132\021.proto.Ser"
      "verBuff\"a\n\025SceneTeamUpdateNotify\0226\n\026scen"
      "e_team_avatar_list\030\013 \003(\0132\026.proto.SceneTe"
      "amAvatar\022\020\n\010is_in_mp\030\017 \001(\010\"7\n\016FocusAvata"
      "rReq\022\023\n\013avatar_guid\030\001 \001(\004\022\020\n\010is_focus\030\010 "
      "\001(\010\"H\n\016FocusAvatarRsp\022\017\n\007retcode\030\005 \001(\005\022\020"
      "\n\010is_focus\030\013 \001(\010\022\023\n\013avatar_guid\030\004 \001(\004\"\\\n"
      "\023AvatarSatiationData\022\023\n\013finish_time\030\016 \001("
      "\002\022\023\n\013avatar_guid\030\r \001(\004\022\033\n\023penalty_finish"
      "_time\030\014 \001(\002\"T\n\031AvatarSatiationDataNotify"
      "\0227\n\023satiation_data_list\030\006 \003(\0132\032.proto.Av"
      "atarSatiationData\"A\n\025AvatarWearFlycloakR"
      "eq\022\023\n\013avatar_guid\030\013 \001(\004\022\023\n\013flycloak_id\030\r"
      " \001(\r\"R\n\025AvatarWearFlycloakRsp\022\023\n\013flycloa"
      "k_id\030\r \001(\r\022\023\n\013avatar_guid\030\007 \001(\004\022\017\n\007retco"
      "de\030\006 \001(\005\"F\n\032AvatarFlycloakChangeNotify\022\023"
      "\n\013flycloak_id\030\010 \001(\r\022\023\n\013avatar_guid\030\002 \001(\004"
      "\"/\n\030AvatarGainFlycloakNotify\022\023\n\013flycloak"
      "_id\030\003 \001(\r\"i\n\033AvatarEquipAffixStartNotify"
      "\022\023\n\013avatar_guid\030\004 \001(\004\0225\n\020equip_affix_inf"
      "o\030\014 \001(\0132\033.proto.AvatarEquipAffixInfo\"G\n\032"
      "AvatarFetterLevelRewardReq\022\023\n\013avatar_gui"
      "d\030\001 \001(\004\022\024\n\014fetter_level\030\006 \001(\r\"k\n\032AvatarF"
      "etterLevelRewardRsp\022\023\n\013avatar_guid\030\004 \001(\004"
      "\022\021\n\treward_id\030\001 \001(\r\022\017\n\007retcode\030\r \001(\005\022\024\n\014"
      "fetter_level\030\016 \001(\r\"R\n AddNoGachaAvatarCa"
      "rdTransferItem\022\r\n\005count\030\t \001(\r\022\017\n\007item_id"
      "\030\006 \001(\r\022\016\n\006is_new\030\017 \001(\010\"\350\001\n\032AddNoGachaAva"
      "tarCardNotify\022C\n\022transfer_item_list\030\004 \003("
      "\0132\'.proto.AddNoGachaAvatarCardTransferIt"
      "em\022\035\n\025initial_promote_level\030\002 \001(\r\022\021\n\tava"
      "tar_id\030\010 \001(\r\022\033\n\023is_transfer_to_item\030\006 \001("
      "\010\022\016\n\006reason\030\t \001(\r\022\025\n\rinitial_level\030\n \001(\r"
      "\022\017\n\007item_id\030\016 \001(\r\"G\n\031AvatarPromoteGetRew"
      "ardReq\022\023\n\013avatar_guid\030\007 \001(\004\022\025\n\rpromote_l"
      "evel\030\014 \001(\r\"k\n\031AvatarPromoteGetRewardRsp\022"
      "\017\n\007retcode\030\n \001(\005\022\021\n\treward_id\030\017 \001(\r\022\023\n\013a"
      "vatar_guid\030\013 \001(\004\022\025\n\rpromote_level\030\014 \001(\r\""
      "A\n\026AvatarChangeCostumeReq\022\022\n\ncostume_id\030"
      "\004 \001(\r\022\023\n\013avatar_guid\030\002 \001(\004\"R\n\026AvatarChan"
      "geCostumeRsp\022\023\n\013avatar_guid\030\014 \001(\004\022\017\n\007ret"
      "code\030\007 \001(\005\022\022\n\ncostume_id\030\r \001(\r\"H\n\031Avatar"
      "ChangeCostumeNotify\022+\n\013entity_info\030\007 \001(\013"
      "2\026.proto.SceneEntityInfo\"-\n\027AvatarGainCo"
      "stumeNotify\022\022\n\ncostume_id\030\017 \001(\r\"A\n\027Avata"
      "rChangeAnimHashReq\022\021\n\tanim_hash\030\006 \001(\r\022\023\n"
      "\013avatar_guid\030\003 \001(\004\"R\n\027AvatarChangeAnimHa"
      "shRsp\022\021\n\tanim_hash\030\r \001(\r\022\017\n\007retcode\030\005 \001("
      "\005\022\023\n\013avatar_guid\030\n \001(\004\"Z\n PersistentDung"
      "eonSwitchAvatarReq\022\027\n\017cur_avatar_guid\030\010 "
      "\001(\004\022\035\n\025avatar_team_guid_list\030\003 \003(\004\"k\n Pe"
      "rsistentDungeonSwitchAvatarRsp\022\035\n\025avatar"
      "_team_guid_list\030\016 \003(\004\022\017\n\007retcode\030\007 \001(\005\022\027"
      "\n\017cur_avatar_guid\030\017 \001(\004\"\030\n\026AddBackupAvat"
      "arTeamReq\")\n\026AddBackupAvatarTeamRsp\022\017\n\007r"
      "etcode\030\004 \001(\005\"7\n\026DelBackupAvatarTeamReq\022\035"
      "\n\025backup_avatar_team_id\030\004 \001(\r\"H\n\026DelBack"
      "upAvatarTeamRsp\022\035\n\025backup_avatar_team_id"
      "\030\017 \001(\r\022\017\n\007retcode\030\004 \001(\005\"\364\001\n\027AvatarTeamAl"
      "lDataNotify\022\035\n\025temp_avatar_guid_list\030\006 \003"
      "(\004\022J\n\017avatar_team_map\030\003 \003(\01321.proto.Avat"
      "arTeamAllDataNotify.AvatarTeamMapEntry\022%"
      "\n\035backup_avatar_team_order_list\030\001 \003(\r\032G\n"
      "\022AvatarTeamMapEntry\022\013\n\003key\030\001 \001(\r\022 \n\005valu"
      "e\030\002 \001(\0132\021.proto.AvatarTeam:\0028\001\":\n\020Avatar"
      "RenameInfo\022\023\n\013avatar_name\030\003 \001(\t\022\021\n\tavata"
      "r_id\030\014 \001(\r\"M\n\026AvatarRenameInfoNotify\0223\n\022"
      "avatar_rename_list\030\010 \003(\0132\027.proto.AvatarR"
      "enameInfo\"=\n\023ItemRenameAvatarReq\022\021\n\trena"
      "me_id\030\002 \001(\r\022\023\n\013avatar_name\030\003 \001(\t\"J\n\023Item"
      "RenameAvatarRsp\022\021\n\trename_id\030\017 \001(\r\022\017\n\007cd"
      "_time\030\002 \001(\r\022\017\n\007retcode\030\t \001(\005B(Z&github.c"
      "om/teyvat-helper/hk4e-proto/pbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 7838);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_avatar.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5favatar_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarAddNotify::kAvatarFieldNumber;
const int AvatarAddNotify::kIsInTeamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarAddNotify::AvatarAddNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarAddNotify)
}
AvatarAddNotify::AvatarAddNotify(const AvatarAddNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_avatar()) {
    avatar_ = new ::proto::AvatarInfo(*from.avatar_);
  } else {
    avatar_ = NULL;
  }
  is_in_team_ = from.is_in_team_;
  // @@protoc_insertion_point(copy_constructor:proto.AvatarAddNotify)
}

void AvatarAddNotify::SharedCtor() {
  ::memset(&avatar_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_in_team_) -
      reinterpret_cast<char*>(&avatar_)) + sizeof(is_in_team_));
  _cached_size_ = 0;
}

AvatarAddNotify::~AvatarAddNotify() {
  // @@protoc_insertion_point(destructor:proto.AvatarAddNotify)
  SharedDtor();
}

void AvatarAddNotify::SharedDtor() {
  if (this != internal_default_instance()) delete avatar_;
}

void AvatarAddNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarAddNotify::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarAddNotify& AvatarAddNotify::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarAddNotify* AvatarAddNotify::New(::google::protobuf::Arena* arena) const {
  AvatarAddNotify* n = new AvatarAddNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarAddNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarAddNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && avatar_ != NULL) {
    delete avatar_;
  }
  avatar_ = NULL;
  is_in_team_ = false;
  _internal_metadata_.Clear();
}

bool AvatarAddNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarAddNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_in_team = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_in_team_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AvatarInfo avatar = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_avatar()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarAddNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarAddNotify)
  return false;
#undef DO_
}

void AvatarAddNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarAddNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_in_team = 12;
  if (this->is_in_team() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->is_in_team(), output);
  }

  // .proto.AvatarInfo avatar = 13;
  if (this->has_avatar()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->avatar_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarAddNotify)
}

::google::protobuf::uint8* AvatarAddNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarAddNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_in_team = 12;
  if (this->is_in_team() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->is_in_team(), target);
  }

  // .proto.AvatarInfo avatar = 13;
  if (this->has_avatar()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->avatar_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarAddNotify)
  return target;
}

size_t AvatarAddNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarAddNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.AvatarInfo avatar = 13;
  if (this->has_avatar()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->avatar_);
  }

  // bool is_in_team = 12;
  if (this->is_in_team() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarAddNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarAddNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarAddNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarAddNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarAddNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarAddNotify)
    MergeFrom(*source);
  }
}

void AvatarAddNotify::MergeFrom(const AvatarAddNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarAddNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_avatar()) {
    mutable_avatar()->::proto::AvatarInfo::MergeFrom(from.avatar());
  }
  if (from.is_in_team() != 0) {
    set_is_in_team(from.is_in_team());
  }
}

void AvatarAddNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarAddNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarAddNotify::CopyFrom(const AvatarAddNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarAddNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarAddNotify::IsInitialized() const {
  return true;
}

void AvatarAddNotify::Swap(AvatarAddNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarAddNotify::InternalSwap(AvatarAddNotify* other) {
  using std::swap;
  swap(avatar_, other->avatar_);
  swap(is_in_team_, other->is_in_team_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarAddNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarAddNotify

// .proto.AvatarInfo avatar = 13;
bool AvatarAddNotify::has_avatar() const {
  return this != internal_default_instance() && avatar_ != NULL;
}
void AvatarAddNotify::clear_avatar() {
  if (GetArenaNoVirtual() == NULL && avatar_ != NULL) delete avatar_;
  avatar_ = NULL;
}
const ::proto::AvatarInfo& AvatarAddNotify::avatar() const {
  const ::proto::AvatarInfo* p = avatar_;
  // @@protoc_insertion_point(field_get:proto.AvatarAddNotify.avatar)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AvatarInfo*>(
      &::proto::_AvatarInfo_default_instance_);
}
::proto::AvatarInfo* AvatarAddNotify::mutable_avatar() {
  
  if (avatar_ == NULL) {
    avatar_ = new ::proto::AvatarInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.AvatarAddNotify.avatar)
  return avatar_;
}
::proto::AvatarInfo* AvatarAddNotify::release_avatar() {
  // @@protoc_insertion_point(field_release:proto.AvatarAddNotify.avatar)
  
  ::proto::AvatarInfo* temp = avatar_;
  avatar_ = NULL;
  return temp;
}
void AvatarAddNotify::set_allocated_avatar(::proto::AvatarInfo* avatar) {
  delete avatar_;
  avatar_ = avatar;
  if (avatar) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarAddNotify.avatar)
}

// bool is_in_team = 12;
void AvatarAddNotify::clear_is_in_team() {
  is_in_team_ = false;
}
bool AvatarAddNotify::is_in_team() const {
  // @@protoc_insertion_point(field_get:proto.AvatarAddNotify.is_in_team)
  return is_in_team_;
}
void AvatarAddNotify::set_is_in_team(bool value) {
  
  is_in_team_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarAddNotify.is_in_team)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarDelNotify::kAvatarGuidListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarDelNotify::AvatarDelNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarDelNotify)
}
AvatarDelNotify::AvatarDelNotify(const AvatarDelNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      avatar_guid_list_(from.avatar_guid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.AvatarDelNotify)
}

void AvatarDelNotify::SharedCtor() {
  _cached_size_ = 0;
}

AvatarDelNotify::~AvatarDelNotify() {
  // @@protoc_insertion_point(destructor:proto.AvatarDelNotify)
  SharedDtor();
}

void AvatarDelNotify::SharedDtor() {
}

void AvatarDelNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarDelNotify::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarDelNotify& AvatarDelNotify::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarDelNotify* AvatarDelNotify::New(::google::protobuf::Arena* arena) const {
  AvatarDelNotify* n = new AvatarDelNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarDelNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarDelNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  avatar_guid_list_.Clear();
  _internal_metadata_.Clear();
}

bool AvatarDelNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarDelNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 avatar_guid_list = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_avatar_guid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 106u, input, this->mutable_avatar_guid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarDelNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarDelNotify)
  return false;
#undef DO_
}

void AvatarDelNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarDelNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 avatar_guid_list = 13;
  if (this->avatar_guid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _avatar_guid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->avatar_guid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->avatar_guid_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarDelNotify)
}

::google::protobuf::uint8* AvatarDelNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarDelNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 avatar_guid_list = 13;
  if (this->avatar_guid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _avatar_guid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->avatar_guid_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarDelNotify)
  return target;
}

size_t AvatarDelNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarDelNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 avatar_guid_list = 13;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->avatar_guid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _avatar_guid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarDelNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarDelNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarDelNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarDelNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarDelNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarDelNotify)
    MergeFrom(*source);
  }
}

void AvatarDelNotify::MergeFrom(const AvatarDelNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarDelNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  avatar_guid_list_.MergeFrom(from.avatar_guid_list_);
}

void AvatarDelNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarDelNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarDelNotify::CopyFrom(const AvatarDelNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarDelNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarDelNotify::IsInitialized() const {
  return true;
}

void AvatarDelNotify::Swap(AvatarDelNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarDelNotify::InternalSwap(AvatarDelNotify* other) {
  using std::swap;
  avatar_guid_list_.InternalSwap(&other->avatar_guid_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarDelNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarDelNotify

// repeated uint64 avatar_guid_list = 13;
int AvatarDelNotify::avatar_guid_list_size() const {
  return avatar_guid_list_.size();
}
void AvatarDelNotify::clear_avatar_guid_list() {
  avatar_guid_list_.Clear();
}
::google::protobuf::uint64 AvatarDelNotify::avatar_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarDelNotify.avatar_guid_list)
  return avatar_guid_list_.Get(index);
}
void AvatarDelNotify::set_avatar_guid_list(int index, ::google::protobuf::uint64 value) {
  avatar_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarDelNotify.avatar_guid_list)
}
void AvatarDelNotify::add_avatar_guid_list(::google::protobuf::uint64 value) {
  avatar_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarDelNotify.avatar_guid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
AvatarDelNotify::avatar_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarDelNotify.avatar_guid_list)
  return avatar_guid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
AvatarDelNotify::mutable_avatar_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarDelNotify.avatar_guid_list)
  return &avatar_guid_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarTeam::kAvatarGuidListFieldNumber;
const int AvatarTeam::kTeamNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarTeam::AvatarTeam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarTeam)
}
AvatarTeam::AvatarTeam(const AvatarTeam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      avatar_guid_list_(from.avatar_guid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  team_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.team_name().size() > 0) {
    team_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.team_name_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.AvatarTeam)
}

void AvatarTeam::SharedCtor() {
  team_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AvatarTeam::~AvatarTeam() {
  // @@protoc_insertion_point(destructor:proto.AvatarTeam)
  SharedDtor();
}

void AvatarTeam::SharedDtor() {
  team_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AvatarTeam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarTeam::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarTeam& AvatarTeam::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarTeam* AvatarTeam::New(::google::protobuf::Arena* arena) const {
  AvatarTeam* n = new AvatarTeam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarTeam::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarTeam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  avatar_guid_list_.Clear();
  team_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AvatarTeam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarTeam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 avatar_guid_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_avatar_guid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 58u, input, this->mutable_avatar_guid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string team_name = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_team_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->team_name().data(), static_cast<int>(this->team_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AvatarTeam.team_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarTeam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarTeam)
  return false;
#undef DO_
}

void AvatarTeam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarTeam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 avatar_guid_list = 7;
  if (this->avatar_guid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _avatar_guid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->avatar_guid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->avatar_guid_list(i), output);
  }

  // string team_name = 14;
  if (this->team_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->team_name().data(), static_cast<int>(this->team_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AvatarTeam.team_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->team_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarTeam)
}

::google::protobuf::uint8* AvatarTeam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarTeam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 avatar_guid_list = 7;
  if (this->avatar_guid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _avatar_guid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->avatar_guid_list_, target);
  }

  // string team_name = 14;
  if (this->team_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->team_name().data(), static_cast<int>(this->team_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AvatarTeam.team_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->team_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarTeam)
  return target;
}

size_t AvatarTeam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarTeam)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 avatar_guid_list = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->avatar_guid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _avatar_guid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string team_name = 14;
  if (this->team_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->team_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarTeam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarTeam)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarTeam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarTeam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarTeam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarTeam)
    MergeFrom(*source);
  }
}

void AvatarTeam::MergeFrom(const AvatarTeam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarTeam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  avatar_guid_list_.MergeFrom(from.avatar_guid_list_);
  if (from.team_name().size() > 0) {

    team_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.team_name_);
  }
}

void AvatarTeam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarTeam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarTeam::CopyFrom(const AvatarTeam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarTeam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarTeam::IsInitialized() const {
  return true;
}

void AvatarTeam::Swap(AvatarTeam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarTeam::InternalSwap(AvatarTeam* other) {
  using std::swap;
  avatar_guid_list_.InternalSwap(&other->avatar_guid_list_);
  team_name_.Swap(&other->team_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarTeam::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarTeam

// repeated uint64 avatar_guid_list = 7;
int AvatarTeam::avatar_guid_list_size() const {
  return avatar_guid_list_.size();
}
void AvatarTeam::clear_avatar_guid_list() {
  avatar_guid_list_.Clear();
}
::google::protobuf::uint64 AvatarTeam::avatar_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarTeam.avatar_guid_list)
  return avatar_guid_list_.Get(index);
}
void AvatarTeam::set_avatar_guid_list(int index, ::google::protobuf::uint64 value) {
  avatar_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarTeam.avatar_guid_list)
}
void AvatarTeam::add_avatar_guid_list(::google::protobuf::uint64 value) {
  avatar_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarTeam.avatar_guid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
AvatarTeam::avatar_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarTeam.avatar_guid_list)
  return avatar_guid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
AvatarTeam::mutable_avatar_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarTeam.avatar_guid_list)
  return &avatar_guid_list_;
}

// string team_name = 14;
void AvatarTeam::clear_team_name() {
  team_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AvatarTeam::team_name() const {
  // @@protoc_insertion_point(field_get:proto.AvatarTeam.team_name)
  return team_name_.GetNoArena();
}
void AvatarTeam::set_team_name(const ::std::string& value) {
  
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AvatarTeam.team_name)
}
#if LANG_CXX11
void AvatarTeam::set_team_name(::std::string&& value) {
  
  team_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AvatarTeam.team_name)
}
#endif
void AvatarTeam::set_team_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AvatarTeam.team_name)
}
void AvatarTeam::set_team_name(const char* value, size_t size) {
  
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AvatarTeam.team_name)
}
::std::string* AvatarTeam::mutable_team_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.AvatarTeam.team_name)
  return team_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AvatarTeam::release_team_name() {
  // @@protoc_insertion_point(field_release:proto.AvatarTeam.team_name)
  
  return team_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvatarTeam::set_allocated_team_name(::std::string* team_name) {
  if (team_name != NULL) {
    
  } else {
    
  }
  team_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), team_name);
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarTeam.team_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetUpAvatarTeamReq::kTeamIdFieldNumber;
const int SetUpAvatarTeamReq::kAvatarTeamGuidListFieldNumber;
const int SetUpAvatarTeamReq::kCurAvatarGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetUpAvatarTeamReq::SetUpAvatarTeamReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetUpAvatarTeamReq)
}
SetUpAvatarTeamReq::SetUpAvatarTeamReq(const SetUpAvatarTeamReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      avatar_team_guid_list_(from.avatar_team_guid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&team_id_, &from.team_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cur_avatar_guid_) -
    reinterpret_cast<char*>(&team_id_)) + sizeof(cur_avatar_guid_));
  // @@protoc_insertion_point(copy_constructor:proto.SetUpAvatarTeamReq)
}

void SetUpAvatarTeamReq::SharedCtor() {
  ::memset(&team_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_avatar_guid_) -
      reinterpret_cast<char*>(&team_id_)) + sizeof(cur_avatar_guid_));
  _cached_size_ = 0;
}

SetUpAvatarTeamReq::~SetUpAvatarTeamReq() {
  // @@protoc_insertion_point(destructor:proto.SetUpAvatarTeamReq)
  SharedDtor();
}

void SetUpAvatarTeamReq::SharedDtor() {
}

void SetUpAvatarTeamReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetUpAvatarTeamReq::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetUpAvatarTeamReq& SetUpAvatarTeamReq::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetUpAvatarTeamReq* SetUpAvatarTeamReq::New(::google::protobuf::Arena* arena) const {
  SetUpAvatarTeamReq* n = new SetUpAvatarTeamReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetUpAvatarTeamReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetUpAvatarTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  avatar_team_guid_list_.Clear();
  ::memset(&team_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_avatar_guid_) -
      reinterpret_cast<char*>(&team_id_)) + sizeof(cur_avatar_guid_));
  _internal_metadata_.Clear();
}

bool SetUpAvatarTeamReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetUpAvatarTeamReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 team_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &team_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 cur_avatar_guid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cur_avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 avatar_team_guid_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_avatar_team_guid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 58u, input, this->mutable_avatar_team_guid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetUpAvatarTeamReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetUpAvatarTeamReq)
  return false;
#undef DO_
}

void SetUpAvatarTeamReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetUpAvatarTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 team_id = 3;
  if (this->team_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->team_id(), output);
  }

  // uint64 cur_avatar_guid = 5;
  if (this->cur_avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->cur_avatar_guid(), output);
  }

  // repeated uint64 avatar_team_guid_list = 7;
  if (this->avatar_team_guid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _avatar_team_guid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->avatar_team_guid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->avatar_team_guid_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetUpAvatarTeamReq)
}

::google::protobuf::uint8* SetUpAvatarTeamReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetUpAvatarTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 team_id = 3;
  if (this->team_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->team_id(), target);
  }

  // uint64 cur_avatar_guid = 5;
  if (this->cur_avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->cur_avatar_guid(), target);
  }

  // repeated uint64 avatar_team_guid_list = 7;
  if (this->avatar_team_guid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _avatar_team_guid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->avatar_team_guid_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetUpAvatarTeamReq)
  return target;
}

size_t SetUpAvatarTeamReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetUpAvatarTeamReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 avatar_team_guid_list = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->avatar_team_guid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _avatar_team_guid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 team_id = 3;
  if (this->team_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->team_id());
  }

  // uint64 cur_avatar_guid = 5;
  if (this->cur_avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cur_avatar_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetUpAvatarTeamReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetUpAvatarTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetUpAvatarTeamReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetUpAvatarTeamReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetUpAvatarTeamReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetUpAvatarTeamReq)
    MergeFrom(*source);
  }
}

void SetUpAvatarTeamReq::MergeFrom(const SetUpAvatarTeamReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetUpAvatarTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  avatar_team_guid_list_.MergeFrom(from.avatar_team_guid_list_);
  if (from.team_id() != 0) {
    set_team_id(from.team_id());
  }
  if (from.cur_avatar_guid() != 0) {
    set_cur_avatar_guid(from.cur_avatar_guid());
  }
}

void SetUpAvatarTeamReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetUpAvatarTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetUpAvatarTeamReq::CopyFrom(const SetUpAvatarTeamReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetUpAvatarTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetUpAvatarTeamReq::IsInitialized() const {
  return true;
}

void SetUpAvatarTeamReq::Swap(SetUpAvatarTeamReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetUpAvatarTeamReq::InternalSwap(SetUpAvatarTeamReq* other) {
  using std::swap;
  avatar_team_guid_list_.InternalSwap(&other->avatar_team_guid_list_);
  swap(team_id_, other->team_id_);
  swap(cur_avatar_guid_, other->cur_avatar_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetUpAvatarTeamReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetUpAvatarTeamReq

// uint32 team_id = 3;
void SetUpAvatarTeamReq::clear_team_id() {
  team_id_ = 0u;
}
::google::protobuf::uint32 SetUpAvatarTeamReq::team_id() const {
  // @@protoc_insertion_point(field_get:proto.SetUpAvatarTeamReq.team_id)
  return team_id_;
}
void SetUpAvatarTeamReq::set_team_id(::google::protobuf::uint32 value) {
  
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetUpAvatarTeamReq.team_id)
}

// repeated uint64 avatar_team_guid_list = 7;
int SetUpAvatarTeamReq::avatar_team_guid_list_size() const {
  return avatar_team_guid_list_.size();
}
void SetUpAvatarTeamReq::clear_avatar_team_guid_list() {
  avatar_team_guid_list_.Clear();
}
::google::protobuf::uint64 SetUpAvatarTeamReq::avatar_team_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SetUpAvatarTeamReq.avatar_team_guid_list)
  return avatar_team_guid_list_.Get(index);
}
void SetUpAvatarTeamReq::set_avatar_team_guid_list(int index, ::google::protobuf::uint64 value) {
  avatar_team_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SetUpAvatarTeamReq.avatar_team_guid_list)
}
void SetUpAvatarTeamReq::add_avatar_team_guid_list(::google::protobuf::uint64 value) {
  avatar_team_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SetUpAvatarTeamReq.avatar_team_guid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SetUpAvatarTeamReq::avatar_team_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.SetUpAvatarTeamReq.avatar_team_guid_list)
  return avatar_team_guid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SetUpAvatarTeamReq::mutable_avatar_team_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SetUpAvatarTeamReq.avatar_team_guid_list)
  return &avatar_team_guid_list_;
}

// uint64 cur_avatar_guid = 5;
void SetUpAvatarTeamReq::clear_cur_avatar_guid() {
  cur_avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SetUpAvatarTeamReq::cur_avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.SetUpAvatarTeamReq.cur_avatar_guid)
  return cur_avatar_guid_;
}
void SetUpAvatarTeamReq::set_cur_avatar_guid(::google::protobuf::uint64 value) {
  
  cur_avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.SetUpAvatarTeamReq.cur_avatar_guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetUpAvatarTeamRsp::kAvatarTeamGuidListFieldNumber;
const int SetUpAvatarTeamRsp::kTeamIdFieldNumber;
const int SetUpAvatarTeamRsp::kRetcodeFieldNumber;
const int SetUpAvatarTeamRsp::kCurAvatarGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetUpAvatarTeamRsp::SetUpAvatarTeamRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetUpAvatarTeamRsp)
}
SetUpAvatarTeamRsp::SetUpAvatarTeamRsp(const SetUpAvatarTeamRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      avatar_team_guid_list_(from.avatar_team_guid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&team_id_, &from.team_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cur_avatar_guid_) -
    reinterpret_cast<char*>(&team_id_)) + sizeof(cur_avatar_guid_));
  // @@protoc_insertion_point(copy_constructor:proto.SetUpAvatarTeamRsp)
}

void SetUpAvatarTeamRsp::SharedCtor() {
  ::memset(&team_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_avatar_guid_) -
      reinterpret_cast<char*>(&team_id_)) + sizeof(cur_avatar_guid_));
  _cached_size_ = 0;
}

SetUpAvatarTeamRsp::~SetUpAvatarTeamRsp() {
  // @@protoc_insertion_point(destructor:proto.SetUpAvatarTeamRsp)
  SharedDtor();
}

void SetUpAvatarTeamRsp::SharedDtor() {
}

void SetUpAvatarTeamRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetUpAvatarTeamRsp::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetUpAvatarTeamRsp& SetUpAvatarTeamRsp::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetUpAvatarTeamRsp* SetUpAvatarTeamRsp::New(::google::protobuf::Arena* arena) const {
  SetUpAvatarTeamRsp* n = new SetUpAvatarTeamRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetUpAvatarTeamRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetUpAvatarTeamRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  avatar_team_guid_list_.Clear();
  ::memset(&team_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_avatar_guid_) -
      reinterpret_cast<char*>(&team_id_)) + sizeof(cur_avatar_guid_));
  _internal_metadata_.Clear();
}

bool SetUpAvatarTeamRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetUpAvatarTeamRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 avatar_team_guid_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_avatar_team_guid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_avatar_team_guid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 team_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &team_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 cur_avatar_guid = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cur_avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetUpAvatarTeamRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetUpAvatarTeamRsp)
  return false;
#undef DO_
}

void SetUpAvatarTeamRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetUpAvatarTeamRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 avatar_team_guid_list = 1;
  if (this->avatar_team_guid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _avatar_team_guid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->avatar_team_guid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->avatar_team_guid_list(i), output);
  }

  // uint32 team_id = 6;
  if (this->team_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->team_id(), output);
  }

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->retcode(), output);
  }

  // uint64 cur_avatar_guid = 13;
  if (this->cur_avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->cur_avatar_guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetUpAvatarTeamRsp)
}

::google::protobuf::uint8* SetUpAvatarTeamRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetUpAvatarTeamRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 avatar_team_guid_list = 1;
  if (this->avatar_team_guid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _avatar_team_guid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->avatar_team_guid_list_, target);
  }

  // uint32 team_id = 6;
  if (this->team_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->team_id(), target);
  }

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->retcode(), target);
  }

  // uint64 cur_avatar_guid = 13;
  if (this->cur_avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->cur_avatar_guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetUpAvatarTeamRsp)
  return target;
}

size_t SetUpAvatarTeamRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetUpAvatarTeamRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 avatar_team_guid_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->avatar_team_guid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _avatar_team_guid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 team_id = 6;
  if (this->team_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->team_id());
  }

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint64 cur_avatar_guid = 13;
  if (this->cur_avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cur_avatar_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetUpAvatarTeamRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetUpAvatarTeamRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetUpAvatarTeamRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetUpAvatarTeamRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetUpAvatarTeamRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetUpAvatarTeamRsp)
    MergeFrom(*source);
  }
}

void SetUpAvatarTeamRsp::MergeFrom(const SetUpAvatarTeamRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetUpAvatarTeamRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  avatar_team_guid_list_.MergeFrom(from.avatar_team_guid_list_);
  if (from.team_id() != 0) {
    set_team_id(from.team_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.cur_avatar_guid() != 0) {
    set_cur_avatar_guid(from.cur_avatar_guid());
  }
}

void SetUpAvatarTeamRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetUpAvatarTeamRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetUpAvatarTeamRsp::CopyFrom(const SetUpAvatarTeamRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetUpAvatarTeamRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetUpAvatarTeamRsp::IsInitialized() const {
  return true;
}

void SetUpAvatarTeamRsp::Swap(SetUpAvatarTeamRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetUpAvatarTeamRsp::InternalSwap(SetUpAvatarTeamRsp* other) {
  using std::swap;
  avatar_team_guid_list_.InternalSwap(&other->avatar_team_guid_list_);
  swap(team_id_, other->team_id_);
  swap(retcode_, other->retcode_);
  swap(cur_avatar_guid_, other->cur_avatar_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetUpAvatarTeamRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetUpAvatarTeamRsp

// repeated uint64 avatar_team_guid_list = 1;
int SetUpAvatarTeamRsp::avatar_team_guid_list_size() const {
  return avatar_team_guid_list_.size();
}
void SetUpAvatarTeamRsp::clear_avatar_team_guid_list() {
  avatar_team_guid_list_.Clear();
}
::google::protobuf::uint64 SetUpAvatarTeamRsp::avatar_team_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SetUpAvatarTeamRsp.avatar_team_guid_list)
  return avatar_team_guid_list_.Get(index);
}
void SetUpAvatarTeamRsp::set_avatar_team_guid_list(int index, ::google::protobuf::uint64 value) {
  avatar_team_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SetUpAvatarTeamRsp.avatar_team_guid_list)
}
void SetUpAvatarTeamRsp::add_avatar_team_guid_list(::google::protobuf::uint64 value) {
  avatar_team_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SetUpAvatarTeamRsp.avatar_team_guid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SetUpAvatarTeamRsp::avatar_team_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.SetUpAvatarTeamRsp.avatar_team_guid_list)
  return avatar_team_guid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SetUpAvatarTeamRsp::mutable_avatar_team_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SetUpAvatarTeamRsp.avatar_team_guid_list)
  return &avatar_team_guid_list_;
}

// uint32 team_id = 6;
void SetUpAvatarTeamRsp::clear_team_id() {
  team_id_ = 0u;
}
::google::protobuf::uint32 SetUpAvatarTeamRsp::team_id() const {
  // @@protoc_insertion_point(field_get:proto.SetUpAvatarTeamRsp.team_id)
  return team_id_;
}
void SetUpAvatarTeamRsp::set_team_id(::google::protobuf::uint32 value) {
  
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetUpAvatarTeamRsp.team_id)
}

// int32 retcode = 8;
void SetUpAvatarTeamRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SetUpAvatarTeamRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetUpAvatarTeamRsp.retcode)
  return retcode_;
}
void SetUpAvatarTeamRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetUpAvatarTeamRsp.retcode)
}

// uint64 cur_avatar_guid = 13;
void SetUpAvatarTeamRsp::clear_cur_avatar_guid() {
  cur_avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SetUpAvatarTeamRsp::cur_avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.SetUpAvatarTeamRsp.cur_avatar_guid)
  return cur_avatar_guid_;
}
void SetUpAvatarTeamRsp::set_cur_avatar_guid(::google::protobuf::uint64 value) {
  
  cur_avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.SetUpAvatarTeamRsp.cur_avatar_guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChooseCurAvatarTeamReq::kTeamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChooseCurAvatarTeamReq::ChooseCurAvatarTeamReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChooseCurAvatarTeamReq)
}
ChooseCurAvatarTeamReq::ChooseCurAvatarTeamReq(const ChooseCurAvatarTeamReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  team_id_ = from.team_id_;
  // @@protoc_insertion_point(copy_constructor:proto.ChooseCurAvatarTeamReq)
}

void ChooseCurAvatarTeamReq::SharedCtor() {
  team_id_ = 0u;
  _cached_size_ = 0;
}

ChooseCurAvatarTeamReq::~ChooseCurAvatarTeamReq() {
  // @@protoc_insertion_point(destructor:proto.ChooseCurAvatarTeamReq)
  SharedDtor();
}

void ChooseCurAvatarTeamReq::SharedDtor() {
}

void ChooseCurAvatarTeamReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChooseCurAvatarTeamReq::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChooseCurAvatarTeamReq& ChooseCurAvatarTeamReq::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChooseCurAvatarTeamReq* ChooseCurAvatarTeamReq::New(::google::protobuf::Arena* arena) const {
  ChooseCurAvatarTeamReq* n = new ChooseCurAvatarTeamReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChooseCurAvatarTeamReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChooseCurAvatarTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  team_id_ = 0u;
  _internal_metadata_.Clear();
}

bool ChooseCurAvatarTeamReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChooseCurAvatarTeamReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 team_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &team_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChooseCurAvatarTeamReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChooseCurAvatarTeamReq)
  return false;
#undef DO_
}

void ChooseCurAvatarTeamReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChooseCurAvatarTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 team_id = 9;
  if (this->team_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->team_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChooseCurAvatarTeamReq)
}

::google::protobuf::uint8* ChooseCurAvatarTeamReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChooseCurAvatarTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 team_id = 9;
  if (this->team_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->team_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChooseCurAvatarTeamReq)
  return target;
}

size_t ChooseCurAvatarTeamReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChooseCurAvatarTeamReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 team_id = 9;
  if (this->team_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->team_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChooseCurAvatarTeamReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChooseCurAvatarTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ChooseCurAvatarTeamReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChooseCurAvatarTeamReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChooseCurAvatarTeamReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChooseCurAvatarTeamReq)
    MergeFrom(*source);
  }
}

void ChooseCurAvatarTeamReq::MergeFrom(const ChooseCurAvatarTeamReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChooseCurAvatarTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.team_id() != 0) {
    set_team_id(from.team_id());
  }
}

void ChooseCurAvatarTeamReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChooseCurAvatarTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChooseCurAvatarTeamReq::CopyFrom(const ChooseCurAvatarTeamReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChooseCurAvatarTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChooseCurAvatarTeamReq::IsInitialized() const {
  return true;
}

void ChooseCurAvatarTeamReq::Swap(ChooseCurAvatarTeamReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChooseCurAvatarTeamReq::InternalSwap(ChooseCurAvatarTeamReq* other) {
  using std::swap;
  swap(team_id_, other->team_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChooseCurAvatarTeamReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChooseCurAvatarTeamReq

// uint32 team_id = 9;
void ChooseCurAvatarTeamReq::clear_team_id() {
  team_id_ = 0u;
}
::google::protobuf::uint32 ChooseCurAvatarTeamReq::team_id() const {
  // @@protoc_insertion_point(field_get:proto.ChooseCurAvatarTeamReq.team_id)
  return team_id_;
}
void ChooseCurAvatarTeamReq::set_team_id(::google::protobuf::uint32 value) {
  
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChooseCurAvatarTeamReq.team_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChooseCurAvatarTeamRsp::kCurTeamIdFieldNumber;
const int ChooseCurAvatarTeamRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChooseCurAvatarTeamRsp::ChooseCurAvatarTeamRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChooseCurAvatarTeamRsp)
}
ChooseCurAvatarTeamRsp::ChooseCurAvatarTeamRsp(const ChooseCurAvatarTeamRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cur_team_id_, &from.cur_team_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&cur_team_id_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.ChooseCurAvatarTeamRsp)
}

void ChooseCurAvatarTeamRsp::SharedCtor() {
  ::memset(&cur_team_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&cur_team_id_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

ChooseCurAvatarTeamRsp::~ChooseCurAvatarTeamRsp() {
  // @@protoc_insertion_point(destructor:proto.ChooseCurAvatarTeamRsp)
  SharedDtor();
}

void ChooseCurAvatarTeamRsp::SharedDtor() {
}

void ChooseCurAvatarTeamRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChooseCurAvatarTeamRsp::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChooseCurAvatarTeamRsp& ChooseCurAvatarTeamRsp::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChooseCurAvatarTeamRsp* ChooseCurAvatarTeamRsp::New(::google::protobuf::Arena* arena) const {
  ChooseCurAvatarTeamRsp* n = new ChooseCurAvatarTeamRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChooseCurAvatarTeamRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChooseCurAvatarTeamRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cur_team_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&cur_team_id_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool ChooseCurAvatarTeamRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChooseCurAvatarTeamRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cur_team_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_team_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChooseCurAvatarTeamRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChooseCurAvatarTeamRsp)
  return false;
#undef DO_
}

void ChooseCurAvatarTeamRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChooseCurAvatarTeamRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cur_team_id = 1;
  if (this->cur_team_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cur_team_id(), output);
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChooseCurAvatarTeamRsp)
}

::google::protobuf::uint8* ChooseCurAvatarTeamRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChooseCurAvatarTeamRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cur_team_id = 1;
  if (this->cur_team_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cur_team_id(), target);
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChooseCurAvatarTeamRsp)
  return target;
}

size_t ChooseCurAvatarTeamRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChooseCurAvatarTeamRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 cur_team_id = 1;
  if (this->cur_team_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cur_team_id());
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChooseCurAvatarTeamRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChooseCurAvatarTeamRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ChooseCurAvatarTeamRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChooseCurAvatarTeamRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChooseCurAvatarTeamRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChooseCurAvatarTeamRsp)
    MergeFrom(*source);
  }
}

void ChooseCurAvatarTeamRsp::MergeFrom(const ChooseCurAvatarTeamRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChooseCurAvatarTeamRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cur_team_id() != 0) {
    set_cur_team_id(from.cur_team_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ChooseCurAvatarTeamRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChooseCurAvatarTeamRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChooseCurAvatarTeamRsp::CopyFrom(const ChooseCurAvatarTeamRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChooseCurAvatarTeamRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChooseCurAvatarTeamRsp::IsInitialized() const {
  return true;
}

void ChooseCurAvatarTeamRsp::Swap(ChooseCurAvatarTeamRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChooseCurAvatarTeamRsp::InternalSwap(ChooseCurAvatarTeamRsp* other) {
  using std::swap;
  swap(cur_team_id_, other->cur_team_id_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChooseCurAvatarTeamRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChooseCurAvatarTeamRsp

// uint32 cur_team_id = 1;
void ChooseCurAvatarTeamRsp::clear_cur_team_id() {
  cur_team_id_ = 0u;
}
::google::protobuf::uint32 ChooseCurAvatarTeamRsp::cur_team_id() const {
  // @@protoc_insertion_point(field_get:proto.ChooseCurAvatarTeamRsp.cur_team_id)
  return cur_team_id_;
}
void ChooseCurAvatarTeamRsp::set_cur_team_id(::google::protobuf::uint32 value) {
  
  cur_team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChooseCurAvatarTeamRsp.cur_team_id)
}

// int32 retcode = 14;
void ChooseCurAvatarTeamRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ChooseCurAvatarTeamRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ChooseCurAvatarTeamRsp.retcode)
  return retcode_;
}
void ChooseCurAvatarTeamRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ChooseCurAvatarTeamRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeAvatarReq::kMovePosFieldNumber;
const int ChangeAvatarReq::kSkillIdFieldNumber;
const int ChangeAvatarReq::kGuidFieldNumber;
const int ChangeAvatarReq::kIsMoveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeAvatarReq::ChangeAvatarReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChangeAvatarReq)
}
ChangeAvatarReq::ChangeAvatarReq(const ChangeAvatarReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_move_pos()) {
    move_pos_ = new ::proto::Vector(*from.move_pos_);
  } else {
    move_pos_ = NULL;
  }
  ::memcpy(&skill_id_, &from.skill_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&guid_) -
    reinterpret_cast<char*>(&skill_id_)) + sizeof(guid_));
  // @@protoc_insertion_point(copy_constructor:proto.ChangeAvatarReq)
}

void ChangeAvatarReq::SharedCtor() {
  ::memset(&move_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guid_) -
      reinterpret_cast<char*>(&move_pos_)) + sizeof(guid_));
  _cached_size_ = 0;
}

ChangeAvatarReq::~ChangeAvatarReq() {
  // @@protoc_insertion_point(destructor:proto.ChangeAvatarReq)
  SharedDtor();
}

void ChangeAvatarReq::SharedDtor() {
  if (this != internal_default_instance()) delete move_pos_;
}

void ChangeAvatarReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeAvatarReq::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeAvatarReq& ChangeAvatarReq::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChangeAvatarReq* ChangeAvatarReq::New(::google::protobuf::Arena* arena) const {
  ChangeAvatarReq* n = new ChangeAvatarReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangeAvatarReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChangeAvatarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && move_pos_ != NULL) {
    delete move_pos_;
  }
  move_pos_ = NULL;
  ::memset(&skill_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guid_) -
      reinterpret_cast<char*>(&skill_id_)) + sizeof(guid_));
  _internal_metadata_.Clear();
}

bool ChangeAvatarReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChangeAvatarReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 skill_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skill_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_move = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_move_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector move_pos = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_move_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChangeAvatarReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChangeAvatarReq)
  return false;
#undef DO_
}

void ChangeAvatarReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChangeAvatarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 skill_id = 2;
  if (this->skill_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->skill_id(), output);
  }

  // uint64 guid = 7;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->guid(), output);
  }

  // bool is_move = 10;
  if (this->is_move() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_move(), output);
  }

  // .proto.Vector move_pos = 15;
  if (this->has_move_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->move_pos_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChangeAvatarReq)
}

::google::protobuf::uint8* ChangeAvatarReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChangeAvatarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 skill_id = 2;
  if (this->skill_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->skill_id(), target);
  }

  // uint64 guid = 7;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->guid(), target);
  }

  // bool is_move = 10;
  if (this->is_move() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_move(), target);
  }

  // .proto.Vector move_pos = 15;
  if (this->has_move_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->move_pos_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChangeAvatarReq)
  return target;
}

size_t ChangeAvatarReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChangeAvatarReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector move_pos = 15;
  if (this->has_move_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->move_pos_);
  }

  // uint32 skill_id = 2;
  if (this->skill_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->skill_id());
  }

  // bool is_move = 10;
  if (this->is_move() != 0) {
    total_size += 1 + 1;
  }

  // uint64 guid = 7;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeAvatarReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChangeAvatarReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeAvatarReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeAvatarReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChangeAvatarReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChangeAvatarReq)
    MergeFrom(*source);
  }
}

void ChangeAvatarReq::MergeFrom(const ChangeAvatarReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChangeAvatarReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_move_pos()) {
    mutable_move_pos()->::proto::Vector::MergeFrom(from.move_pos());
  }
  if (from.skill_id() != 0) {
    set_skill_id(from.skill_id());
  }
  if (from.is_move() != 0) {
    set_is_move(from.is_move());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
}

void ChangeAvatarReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChangeAvatarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeAvatarReq::CopyFrom(const ChangeAvatarReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChangeAvatarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeAvatarReq::IsInitialized() const {
  return true;
}

void ChangeAvatarReq::Swap(ChangeAvatarReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeAvatarReq::InternalSwap(ChangeAvatarReq* other) {
  using std::swap;
  swap(move_pos_, other->move_pos_);
  swap(skill_id_, other->skill_id_);
  swap(is_move_, other->is_move_);
  swap(guid_, other->guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeAvatarReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChangeAvatarReq

// .proto.Vector move_pos = 15;
bool ChangeAvatarReq::has_move_pos() const {
  return this != internal_default_instance() && move_pos_ != NULL;
}
void ChangeAvatarReq::clear_move_pos() {
  if (GetArenaNoVirtual() == NULL && move_pos_ != NULL) delete move_pos_;
  move_pos_ = NULL;
}
const ::proto::Vector& ChangeAvatarReq::move_pos() const {
  const ::proto::Vector* p = move_pos_;
  // @@protoc_insertion_point(field_get:proto.ChangeAvatarReq.move_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* ChangeAvatarReq::mutable_move_pos() {
  
  if (move_pos_ == NULL) {
    move_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.ChangeAvatarReq.move_pos)
  return move_pos_;
}
::proto::Vector* ChangeAvatarReq::release_move_pos() {
  // @@protoc_insertion_point(field_release:proto.ChangeAvatarReq.move_pos)
  
  ::proto::Vector* temp = move_pos_;
  move_pos_ = NULL;
  return temp;
}
void ChangeAvatarReq::set_allocated_move_pos(::proto::Vector* move_pos) {
  delete move_pos_;
  move_pos_ = move_pos;
  if (move_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ChangeAvatarReq.move_pos)
}

// uint32 skill_id = 2;
void ChangeAvatarReq::clear_skill_id() {
  skill_id_ = 0u;
}
::google::protobuf::uint32 ChangeAvatarReq::skill_id() const {
  // @@protoc_insertion_point(field_get:proto.ChangeAvatarReq.skill_id)
  return skill_id_;
}
void ChangeAvatarReq::set_skill_id(::google::protobuf::uint32 value) {
  
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeAvatarReq.skill_id)
}

// uint64 guid = 7;
void ChangeAvatarReq::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ChangeAvatarReq::guid() const {
  // @@protoc_insertion_point(field_get:proto.ChangeAvatarReq.guid)
  return guid_;
}
void ChangeAvatarReq::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeAvatarReq.guid)
}

// bool is_move = 10;
void ChangeAvatarReq::clear_is_move() {
  is_move_ = false;
}
bool ChangeAvatarReq::is_move() const {
  // @@protoc_insertion_point(field_get:proto.ChangeAvatarReq.is_move)
  return is_move_;
}
void ChangeAvatarReq::set_is_move(bool value) {
  
  is_move_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeAvatarReq.is_move)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeAvatarRsp::kSkillIdFieldNumber;
const int ChangeAvatarRsp::kRetcodeFieldNumber;
const int ChangeAvatarRsp::kCurGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeAvatarRsp::ChangeAvatarRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChangeAvatarRsp)
}
ChangeAvatarRsp::ChangeAvatarRsp(const ChangeAvatarRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cur_guid_, &from.cur_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&cur_guid_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.ChangeAvatarRsp)
}

void ChangeAvatarRsp::SharedCtor() {
  ::memset(&cur_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&cur_guid_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

ChangeAvatarRsp::~ChangeAvatarRsp() {
  // @@protoc_insertion_point(destructor:proto.ChangeAvatarRsp)
  SharedDtor();
}

void ChangeAvatarRsp::SharedDtor() {
}

void ChangeAvatarRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeAvatarRsp::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeAvatarRsp& ChangeAvatarRsp::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChangeAvatarRsp* ChangeAvatarRsp::New(::google::protobuf::Arena* arena) const {
  ChangeAvatarRsp* n = new ChangeAvatarRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangeAvatarRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChangeAvatarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cur_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&cur_guid_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool ChangeAvatarRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChangeAvatarRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 skill_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skill_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 cur_guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cur_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChangeAvatarRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChangeAvatarRsp)
  return false;
#undef DO_
}

void ChangeAvatarRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChangeAvatarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 skill_id = 3;
  if (this->skill_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->skill_id(), output);
  }

  // uint64 cur_guid = 4;
  if (this->cur_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->cur_guid(), output);
  }

  // int32 retcode = 10;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChangeAvatarRsp)
}

::google::protobuf::uint8* ChangeAvatarRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChangeAvatarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 skill_id = 3;
  if (this->skill_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->skill_id(), target);
  }

  // uint64 cur_guid = 4;
  if (this->cur_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->cur_guid(), target);
  }

  // int32 retcode = 10;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChangeAvatarRsp)
  return target;
}

size_t ChangeAvatarRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChangeAvatarRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 cur_guid = 4;
  if (this->cur_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cur_guid());
  }

  // uint32 skill_id = 3;
  if (this->skill_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->skill_id());
  }

  // int32 retcode = 10;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeAvatarRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChangeAvatarRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeAvatarRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeAvatarRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChangeAvatarRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChangeAvatarRsp)
    MergeFrom(*source);
  }
}

void ChangeAvatarRsp::MergeFrom(const ChangeAvatarRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChangeAvatarRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cur_guid() != 0) {
    set_cur_guid(from.cur_guid());
  }
  if (from.skill_id() != 0) {
    set_skill_id(from.skill_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ChangeAvatarRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChangeAvatarRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeAvatarRsp::CopyFrom(const ChangeAvatarRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChangeAvatarRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeAvatarRsp::IsInitialized() const {
  return true;
}

void ChangeAvatarRsp::Swap(ChangeAvatarRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeAvatarRsp::InternalSwap(ChangeAvatarRsp* other) {
  using std::swap;
  swap(cur_guid_, other->cur_guid_);
  swap(skill_id_, other->skill_id_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeAvatarRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChangeAvatarRsp

// uint32 skill_id = 3;
void ChangeAvatarRsp::clear_skill_id() {
  skill_id_ = 0u;
}
::google::protobuf::uint32 ChangeAvatarRsp::skill_id() const {
  // @@protoc_insertion_point(field_get:proto.ChangeAvatarRsp.skill_id)
  return skill_id_;
}
void ChangeAvatarRsp::set_skill_id(::google::protobuf::uint32 value) {
  
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeAvatarRsp.skill_id)
}

// int32 retcode = 10;
void ChangeAvatarRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ChangeAvatarRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ChangeAvatarRsp.retcode)
  return retcode_;
}
void ChangeAvatarRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeAvatarRsp.retcode)
}

// uint64 cur_guid = 4;
void ChangeAvatarRsp::clear_cur_guid() {
  cur_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ChangeAvatarRsp::cur_guid() const {
  // @@protoc_insertion_point(field_get:proto.ChangeAvatarRsp.cur_guid)
  return cur_guid_;
}
void ChangeAvatarRsp::set_cur_guid(::google::protobuf::uint64 value) {
  
  cur_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeAvatarRsp.cur_guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarPromoteReq::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarPromoteReq::AvatarPromoteReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarPromoteReq)
}
AvatarPromoteReq::AvatarPromoteReq(const AvatarPromoteReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:proto.AvatarPromoteReq)
}

void AvatarPromoteReq::SharedCtor() {
  guid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

AvatarPromoteReq::~AvatarPromoteReq() {
  // @@protoc_insertion_point(destructor:proto.AvatarPromoteReq)
  SharedDtor();
}

void AvatarPromoteReq::SharedDtor() {
}

void AvatarPromoteReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarPromoteReq::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarPromoteReq& AvatarPromoteReq::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarPromoteReq* AvatarPromoteReq::New(::google::protobuf::Arena* arena) const {
  AvatarPromoteReq* n = new AvatarPromoteReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarPromoteReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarPromoteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool AvatarPromoteReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarPromoteReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarPromoteReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarPromoteReq)
  return false;
#undef DO_
}

void AvatarPromoteReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarPromoteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 5;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarPromoteReq)
}

::google::protobuf::uint8* AvatarPromoteReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarPromoteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 5;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarPromoteReq)
  return target;
}

size_t AvatarPromoteReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarPromoteReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 guid = 5;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarPromoteReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarPromoteReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarPromoteReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarPromoteReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarPromoteReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarPromoteReq)
    MergeFrom(*source);
  }
}

void AvatarPromoteReq::MergeFrom(const AvatarPromoteReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarPromoteReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guid() != 0) {
    set_guid(from.guid());
  }
}

void AvatarPromoteReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarPromoteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarPromoteReq::CopyFrom(const AvatarPromoteReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarPromoteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarPromoteReq::IsInitialized() const {
  return true;
}

void AvatarPromoteReq::Swap(AvatarPromoteReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarPromoteReq::InternalSwap(AvatarPromoteReq* other) {
  using std::swap;
  swap(guid_, other->guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarPromoteReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarPromoteReq

// uint64 guid = 5;
void AvatarPromoteReq::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarPromoteReq::guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarPromoteReq.guid)
  return guid_;
}
void AvatarPromoteReq::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarPromoteReq.guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarPromoteRsp::kGuidFieldNumber;
const int AvatarPromoteRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarPromoteRsp::AvatarPromoteRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarPromoteRsp)
}
AvatarPromoteRsp::AvatarPromoteRsp(const AvatarPromoteRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&guid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(guid_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarPromoteRsp)
}

void AvatarPromoteRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(guid_));
  _cached_size_ = 0;
}

AvatarPromoteRsp::~AvatarPromoteRsp() {
  // @@protoc_insertion_point(destructor:proto.AvatarPromoteRsp)
  SharedDtor();
}

void AvatarPromoteRsp::SharedDtor() {
}

void AvatarPromoteRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarPromoteRsp::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarPromoteRsp& AvatarPromoteRsp::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarPromoteRsp* AvatarPromoteRsp::New(::google::protobuf::Arena* arena) const {
  AvatarPromoteRsp* n = new AvatarPromoteRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarPromoteRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarPromoteRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(guid_));
  _internal_metadata_.Clear();
}

bool AvatarPromoteRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarPromoteRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarPromoteRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarPromoteRsp)
  return false;
#undef DO_
}

void AvatarPromoteRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarPromoteRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->retcode(), output);
  }

  // uint64 guid = 11;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarPromoteRsp)
}

::google::protobuf::uint8* AvatarPromoteRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarPromoteRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->retcode(), target);
  }

  // uint64 guid = 11;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarPromoteRsp)
  return target;
}

size_t AvatarPromoteRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarPromoteRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 8;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint64 guid = 11;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarPromoteRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarPromoteRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarPromoteRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarPromoteRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarPromoteRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarPromoteRsp)
    MergeFrom(*source);
  }
}

void AvatarPromoteRsp::MergeFrom(const AvatarPromoteRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarPromoteRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
}

void AvatarPromoteRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarPromoteRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarPromoteRsp::CopyFrom(const AvatarPromoteRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarPromoteRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarPromoteRsp::IsInitialized() const {
  return true;
}

void AvatarPromoteRsp::Swap(AvatarPromoteRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarPromoteRsp::InternalSwap(AvatarPromoteRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(guid_, other->guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarPromoteRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarPromoteRsp

// uint64 guid = 11;
void AvatarPromoteRsp::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarPromoteRsp::guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarPromoteRsp.guid)
  return guid_;
}
void AvatarPromoteRsp::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarPromoteRsp.guid)
}

// int32 retcode = 8;
void AvatarPromoteRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 AvatarPromoteRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AvatarPromoteRsp.retcode)
  return retcode_;
}
void AvatarPromoteRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarPromoteRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpringUseReq::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpringUseReq::SpringUseReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SpringUseReq)
}
SpringUseReq::SpringUseReq(const SpringUseReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:proto.SpringUseReq)
}

void SpringUseReq::SharedCtor() {
  guid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

SpringUseReq::~SpringUseReq() {
  // @@protoc_insertion_point(destructor:proto.SpringUseReq)
  SharedDtor();
}

void SpringUseReq::SharedDtor() {
}

void SpringUseReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpringUseReq::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SpringUseReq& SpringUseReq::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

SpringUseReq* SpringUseReq::New(::google::protobuf::Arena* arena) const {
  SpringUseReq* n = new SpringUseReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SpringUseReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SpringUseReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool SpringUseReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SpringUseReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SpringUseReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SpringUseReq)
  return false;
#undef DO_
}

void SpringUseReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SpringUseReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 11;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SpringUseReq)
}

::google::protobuf::uint8* SpringUseReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SpringUseReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 11;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SpringUseReq)
  return target;
}

size_t SpringUseReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SpringUseReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 guid = 11;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpringUseReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SpringUseReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SpringUseReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SpringUseReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SpringUseReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SpringUseReq)
    MergeFrom(*source);
  }
}

void SpringUseReq::MergeFrom(const SpringUseReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SpringUseReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guid() != 0) {
    set_guid(from.guid());
  }
}

void SpringUseReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SpringUseReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpringUseReq::CopyFrom(const SpringUseReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SpringUseReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpringUseReq::IsInitialized() const {
  return true;
}

void SpringUseReq::Swap(SpringUseReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpringUseReq::InternalSwap(SpringUseReq* other) {
  using std::swap;
  swap(guid_, other->guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SpringUseReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SpringUseReq

// uint64 guid = 11;
void SpringUseReq::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SpringUseReq::guid() const {
  // @@protoc_insertion_point(field_get:proto.SpringUseReq.guid)
  return guid_;
}
void SpringUseReq::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.SpringUseReq.guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpringUseRsp::kGuidFieldNumber;
const int SpringUseRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpringUseRsp::SpringUseRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SpringUseRsp)
}
SpringUseRsp::SpringUseRsp(const SpringUseRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.SpringUseRsp)
}

void SpringUseRsp::SharedCtor() {
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

SpringUseRsp::~SpringUseRsp() {
  // @@protoc_insertion_point(destructor:proto.SpringUseRsp)
  SharedDtor();
}

void SpringUseRsp::SharedDtor() {
}

void SpringUseRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpringUseRsp::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SpringUseRsp& SpringUseRsp::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

SpringUseRsp* SpringUseRsp::New(::google::protobuf::Arena* arena) const {
  SpringUseRsp* n = new SpringUseRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SpringUseRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SpringUseRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool SpringUseRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SpringUseRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SpringUseRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SpringUseRsp)
  return false;
#undef DO_
}

void SpringUseRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SpringUseRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 3;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->guid(), output);
  }

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SpringUseRsp)
}

::google::protobuf::uint8* SpringUseRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SpringUseRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 3;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->guid(), target);
  }

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SpringUseRsp)
  return target;
}

size_t SpringUseRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SpringUseRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 guid = 3;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpringUseRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SpringUseRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SpringUseRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SpringUseRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SpringUseRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SpringUseRsp)
    MergeFrom(*source);
  }
}

void SpringUseRsp::MergeFrom(const SpringUseRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SpringUseRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SpringUseRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SpringUseRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpringUseRsp::CopyFrom(const SpringUseRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SpringUseRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpringUseRsp::IsInitialized() const {
  return true;
}

void SpringUseRsp::Swap(SpringUseRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpringUseRsp::InternalSwap(SpringUseRsp* other) {
  using std::swap;
  swap(guid_, other->guid_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SpringUseRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SpringUseRsp

// uint64 guid = 3;
void SpringUseRsp::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SpringUseRsp::guid() const {
  // @@protoc_insertion_point(field_get:proto.SpringUseRsp.guid)
  return guid_;
}
void SpringUseRsp::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.SpringUseRsp.guid)
}

// int32 retcode = 7;
void SpringUseRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SpringUseRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SpringUseRsp.retcode)
  return retcode_;
}
void SpringUseRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SpringUseRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RefreshBackgroundAvatarReq::RefreshBackgroundAvatarReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RefreshBackgroundAvatarReq)
}
RefreshBackgroundAvatarReq::RefreshBackgroundAvatarReq(const RefreshBackgroundAvatarReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.RefreshBackgroundAvatarReq)
}

void RefreshBackgroundAvatarReq::SharedCtor() {
  _cached_size_ = 0;
}

RefreshBackgroundAvatarReq::~RefreshBackgroundAvatarReq() {
  // @@protoc_insertion_point(destructor:proto.RefreshBackgroundAvatarReq)
  SharedDtor();
}

void RefreshBackgroundAvatarReq::SharedDtor() {
}

void RefreshBackgroundAvatarReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RefreshBackgroundAvatarReq::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RefreshBackgroundAvatarReq& RefreshBackgroundAvatarReq::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

RefreshBackgroundAvatarReq* RefreshBackgroundAvatarReq::New(::google::protobuf::Arena* arena) const {
  RefreshBackgroundAvatarReq* n = new RefreshBackgroundAvatarReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RefreshBackgroundAvatarReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RefreshBackgroundAvatarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool RefreshBackgroundAvatarReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RefreshBackgroundAvatarReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RefreshBackgroundAvatarReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RefreshBackgroundAvatarReq)
  return false;
#undef DO_
}

void RefreshBackgroundAvatarReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RefreshBackgroundAvatarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RefreshBackgroundAvatarReq)
}

::google::protobuf::uint8* RefreshBackgroundAvatarReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RefreshBackgroundAvatarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RefreshBackgroundAvatarReq)
  return target;
}

size_t RefreshBackgroundAvatarReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RefreshBackgroundAvatarReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RefreshBackgroundAvatarReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RefreshBackgroundAvatarReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RefreshBackgroundAvatarReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RefreshBackgroundAvatarReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RefreshBackgroundAvatarReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RefreshBackgroundAvatarReq)
    MergeFrom(*source);
  }
}

void RefreshBackgroundAvatarReq::MergeFrom(const RefreshBackgroundAvatarReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RefreshBackgroundAvatarReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RefreshBackgroundAvatarReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RefreshBackgroundAvatarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshBackgroundAvatarReq::CopyFrom(const RefreshBackgroundAvatarReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RefreshBackgroundAvatarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshBackgroundAvatarReq::IsInitialized() const {
  return true;
}

void RefreshBackgroundAvatarReq::Swap(RefreshBackgroundAvatarReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RefreshBackgroundAvatarReq::InternalSwap(RefreshBackgroundAvatarReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RefreshBackgroundAvatarReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RefreshBackgroundAvatarReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

RefreshBackgroundAvatarRsp::RefreshBackgroundAvatarRsp_HpFullTimeMapEntry::RefreshBackgroundAvatarRsp_HpFullTimeMapEntry() {}
RefreshBackgroundAvatarRsp::RefreshBackgroundAvatarRsp_HpFullTimeMapEntry::RefreshBackgroundAvatarRsp_HpFullTimeMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata RefreshBackgroundAvatarRsp::RefreshBackgroundAvatarRsp_HpFullTimeMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[14];
}
void RefreshBackgroundAvatarRsp::RefreshBackgroundAvatarRsp_HpFullTimeMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void RefreshBackgroundAvatarRsp::RefreshBackgroundAvatarRsp_HpFullTimeMapEntry::MergeFrom(const RefreshBackgroundAvatarRsp_HpFullTimeMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RefreshBackgroundAvatarRsp::kHpFullTimeMapFieldNumber;
const int RefreshBackgroundAvatarRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RefreshBackgroundAvatarRsp::RefreshBackgroundAvatarRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RefreshBackgroundAvatarRsp)
}
RefreshBackgroundAvatarRsp::RefreshBackgroundAvatarRsp(const RefreshBackgroundAvatarRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hp_full_time_map_.MergeFrom(from.hp_full_time_map_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.RefreshBackgroundAvatarRsp)
}

void RefreshBackgroundAvatarRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

RefreshBackgroundAvatarRsp::~RefreshBackgroundAvatarRsp() {
  // @@protoc_insertion_point(destructor:proto.RefreshBackgroundAvatarRsp)
  SharedDtor();
}

void RefreshBackgroundAvatarRsp::SharedDtor() {
}

void RefreshBackgroundAvatarRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RefreshBackgroundAvatarRsp::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RefreshBackgroundAvatarRsp& RefreshBackgroundAvatarRsp::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

RefreshBackgroundAvatarRsp* RefreshBackgroundAvatarRsp::New(::google::protobuf::Arena* arena) const {
  RefreshBackgroundAvatarRsp* n = new RefreshBackgroundAvatarRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RefreshBackgroundAvatarRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RefreshBackgroundAvatarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hp_full_time_map_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool RefreshBackgroundAvatarRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RefreshBackgroundAvatarRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint64, uint32> hp_full_time_map = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          RefreshBackgroundAvatarRsp_HpFullTimeMapEntry::Parser< ::google::protobuf::internal::MapField<
              RefreshBackgroundAvatarRsp_HpFullTimeMapEntry,
              ::google::protobuf::uint64, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 > > parser(&hp_full_time_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RefreshBackgroundAvatarRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RefreshBackgroundAvatarRsp)
  return false;
#undef DO_
}

void RefreshBackgroundAvatarRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RefreshBackgroundAvatarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 3;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->retcode(), output);
  }

  // map<uint64, uint32> hp_full_time_map = 15;
  if (!this->hp_full_time_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->hp_full_time_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->hp_full_time_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_iterator
          it = this->hp_full_time_map().begin();
          it != this->hp_full_time_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<RefreshBackgroundAvatarRsp_HpFullTimeMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(hp_full_time_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            15, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<RefreshBackgroundAvatarRsp_HpFullTimeMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_iterator
          it = this->hp_full_time_map().begin();
          it != this->hp_full_time_map().end(); ++it) {
        entry.reset(hp_full_time_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            15, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RefreshBackgroundAvatarRsp)
}

::google::protobuf::uint8* RefreshBackgroundAvatarRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RefreshBackgroundAvatarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 3;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->retcode(), target);
  }

  // map<uint64, uint32> hp_full_time_map = 15;
  if (!this->hp_full_time_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->hp_full_time_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->hp_full_time_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_iterator
          it = this->hp_full_time_map().begin();
          it != this->hp_full_time_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<RefreshBackgroundAvatarRsp_HpFullTimeMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(hp_full_time_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       15, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<RefreshBackgroundAvatarRsp_HpFullTimeMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_iterator
          it = this->hp_full_time_map().begin();
          it != this->hp_full_time_map().end(); ++it) {
        entry.reset(hp_full_time_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       15, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RefreshBackgroundAvatarRsp)
  return target;
}

size_t RefreshBackgroundAvatarRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RefreshBackgroundAvatarRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint64, uint32> hp_full_time_map = 15;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->hp_full_time_map_size());
  {
    ::google::protobuf::scoped_ptr<RefreshBackgroundAvatarRsp_HpFullTimeMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_iterator
        it = this->hp_full_time_map().begin();
        it != this->hp_full_time_map().end(); ++it) {
      entry.reset(hp_full_time_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // int32 retcode = 3;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RefreshBackgroundAvatarRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RefreshBackgroundAvatarRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RefreshBackgroundAvatarRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RefreshBackgroundAvatarRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RefreshBackgroundAvatarRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RefreshBackgroundAvatarRsp)
    MergeFrom(*source);
  }
}

void RefreshBackgroundAvatarRsp::MergeFrom(const RefreshBackgroundAvatarRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RefreshBackgroundAvatarRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hp_full_time_map_.MergeFrom(from.hp_full_time_map_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RefreshBackgroundAvatarRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RefreshBackgroundAvatarRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshBackgroundAvatarRsp::CopyFrom(const RefreshBackgroundAvatarRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RefreshBackgroundAvatarRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshBackgroundAvatarRsp::IsInitialized() const {
  return true;
}

void RefreshBackgroundAvatarRsp::Swap(RefreshBackgroundAvatarRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RefreshBackgroundAvatarRsp::InternalSwap(RefreshBackgroundAvatarRsp* other) {
  using std::swap;
  hp_full_time_map_.Swap(&other->hp_full_time_map_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RefreshBackgroundAvatarRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RefreshBackgroundAvatarRsp

// map<uint64, uint32> hp_full_time_map = 15;
int RefreshBackgroundAvatarRsp::hp_full_time_map_size() const {
  return hp_full_time_map_.size();
}
void RefreshBackgroundAvatarRsp::clear_hp_full_time_map() {
  hp_full_time_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >&
RefreshBackgroundAvatarRsp::hp_full_time_map() const {
  // @@protoc_insertion_point(field_map:proto.RefreshBackgroundAvatarRsp.hp_full_time_map)
  return hp_full_time_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >*
RefreshBackgroundAvatarRsp::mutable_hp_full_time_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.RefreshBackgroundAvatarRsp.hp_full_time_map)
  return hp_full_time_map_.MutableMap();
}

// int32 retcode = 3;
void RefreshBackgroundAvatarRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 RefreshBackgroundAvatarRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.RefreshBackgroundAvatarRsp.retcode)
  return retcode_;
}
void RefreshBackgroundAvatarRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.RefreshBackgroundAvatarRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

AvatarTeamUpdateNotify::AvatarTeamUpdateNotify_AvatarTeamMapEntry::AvatarTeamUpdateNotify_AvatarTeamMapEntry() {}
AvatarTeamUpdateNotify::AvatarTeamUpdateNotify_AvatarTeamMapEntry::AvatarTeamUpdateNotify_AvatarTeamMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata AvatarTeamUpdateNotify::AvatarTeamUpdateNotify_AvatarTeamMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[16];
}
void AvatarTeamUpdateNotify::AvatarTeamUpdateNotify_AvatarTeamMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void AvatarTeamUpdateNotify::AvatarTeamUpdateNotify_AvatarTeamMapEntry::MergeFrom(const AvatarTeamUpdateNotify_AvatarTeamMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarTeamUpdateNotify::kAvatarTeamMapFieldNumber;
const int AvatarTeamUpdateNotify::kTempAvatarGuidListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarTeamUpdateNotify::AvatarTeamUpdateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarTeamUpdateNotify)
}
AvatarTeamUpdateNotify::AvatarTeamUpdateNotify(const AvatarTeamUpdateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      temp_avatar_guid_list_(from.temp_avatar_guid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  avatar_team_map_.MergeFrom(from.avatar_team_map_);
  // @@protoc_insertion_point(copy_constructor:proto.AvatarTeamUpdateNotify)
}

void AvatarTeamUpdateNotify::SharedCtor() {
  _cached_size_ = 0;
}

AvatarTeamUpdateNotify::~AvatarTeamUpdateNotify() {
  // @@protoc_insertion_point(destructor:proto.AvatarTeamUpdateNotify)
  SharedDtor();
}

void AvatarTeamUpdateNotify::SharedDtor() {
}

void AvatarTeamUpdateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarTeamUpdateNotify::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarTeamUpdateNotify& AvatarTeamUpdateNotify::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarTeamUpdateNotify* AvatarTeamUpdateNotify::New(::google::protobuf::Arena* arena) const {
  AvatarTeamUpdateNotify* n = new AvatarTeamUpdateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarTeamUpdateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarTeamUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  avatar_team_map_.Clear();
  temp_avatar_guid_list_.Clear();
  _internal_metadata_.Clear();
}

bool AvatarTeamUpdateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarTeamUpdateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, .proto.AvatarTeam> avatar_team_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          AvatarTeamUpdateNotify_AvatarTeamMapEntry::Parser< ::google::protobuf::internal::MapField<
              AvatarTeamUpdateNotify_AvatarTeamMapEntry,
              ::google::protobuf::uint32, ::proto::AvatarTeam,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam > > parser(&avatar_team_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 temp_avatar_guid_list = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_temp_avatar_guid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 106u, input, this->mutable_temp_avatar_guid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarTeamUpdateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarTeamUpdateNotify)
  return false;
#undef DO_
}

void AvatarTeamUpdateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarTeamUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .proto.AvatarTeam> avatar_team_map = 2;
  if (!this->avatar_team_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->avatar_team_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->avatar_team_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::const_iterator
          it = this->avatar_team_map().begin();
          it != this->avatar_team_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarTeamUpdateNotify_AvatarTeamMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(avatar_team_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarTeamUpdateNotify_AvatarTeamMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::const_iterator
          it = this->avatar_team_map().begin();
          it != this->avatar_team_map().end(); ++it) {
        entry.reset(avatar_team_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    }
  }

  // repeated uint64 temp_avatar_guid_list = 13;
  if (this->temp_avatar_guid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _temp_avatar_guid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->temp_avatar_guid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->temp_avatar_guid_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarTeamUpdateNotify)
}

::google::protobuf::uint8* AvatarTeamUpdateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarTeamUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .proto.AvatarTeam> avatar_team_map = 2;
  if (!this->avatar_team_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->avatar_team_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->avatar_team_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::const_iterator
          it = this->avatar_team_map().begin();
          it != this->avatar_team_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarTeamUpdateNotify_AvatarTeamMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(avatar_team_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarTeamUpdateNotify_AvatarTeamMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::const_iterator
          it = this->avatar_team_map().begin();
          it != this->avatar_team_map().end(); ++it) {
        entry.reset(avatar_team_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    }
  }

  // repeated uint64 temp_avatar_guid_list = 13;
  if (this->temp_avatar_guid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _temp_avatar_guid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->temp_avatar_guid_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarTeamUpdateNotify)
  return target;
}

size_t AvatarTeamUpdateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarTeamUpdateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, .proto.AvatarTeam> avatar_team_map = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->avatar_team_map_size());
  {
    ::google::protobuf::scoped_ptr<AvatarTeamUpdateNotify_AvatarTeamMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::const_iterator
        it = this->avatar_team_map().begin();
        it != this->avatar_team_map().end(); ++it) {
      entry.reset(avatar_team_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated uint64 temp_avatar_guid_list = 13;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->temp_avatar_guid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _temp_avatar_guid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarTeamUpdateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarTeamUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarTeamUpdateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarTeamUpdateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarTeamUpdateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarTeamUpdateNotify)
    MergeFrom(*source);
  }
}

void AvatarTeamUpdateNotify::MergeFrom(const AvatarTeamUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarTeamUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  avatar_team_map_.MergeFrom(from.avatar_team_map_);
  temp_avatar_guid_list_.MergeFrom(from.temp_avatar_guid_list_);
}

void AvatarTeamUpdateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarTeamUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarTeamUpdateNotify::CopyFrom(const AvatarTeamUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarTeamUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarTeamUpdateNotify::IsInitialized() const {
  return true;
}

void AvatarTeamUpdateNotify::Swap(AvatarTeamUpdateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarTeamUpdateNotify::InternalSwap(AvatarTeamUpdateNotify* other) {
  using std::swap;
  avatar_team_map_.Swap(&other->avatar_team_map_);
  temp_avatar_guid_list_.InternalSwap(&other->temp_avatar_guid_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarTeamUpdateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarTeamUpdateNotify

// map<uint32, .proto.AvatarTeam> avatar_team_map = 2;
int AvatarTeamUpdateNotify::avatar_team_map_size() const {
  return avatar_team_map_.size();
}
void AvatarTeamUpdateNotify::clear_avatar_team_map() {
  avatar_team_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >&
AvatarTeamUpdateNotify::avatar_team_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarTeamUpdateNotify.avatar_team_map)
  return avatar_team_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >*
AvatarTeamUpdateNotify::mutable_avatar_team_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarTeamUpdateNotify.avatar_team_map)
  return avatar_team_map_.MutableMap();
}

// repeated uint64 temp_avatar_guid_list = 13;
int AvatarTeamUpdateNotify::temp_avatar_guid_list_size() const {
  return temp_avatar_guid_list_.size();
}
void AvatarTeamUpdateNotify::clear_temp_avatar_guid_list() {
  temp_avatar_guid_list_.Clear();
}
::google::protobuf::uint64 AvatarTeamUpdateNotify::temp_avatar_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarTeamUpdateNotify.temp_avatar_guid_list)
  return temp_avatar_guid_list_.Get(index);
}
void AvatarTeamUpdateNotify::set_temp_avatar_guid_list(int index, ::google::protobuf::uint64 value) {
  temp_avatar_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarTeamUpdateNotify.temp_avatar_guid_list)
}
void AvatarTeamUpdateNotify::add_temp_avatar_guid_list(::google::protobuf::uint64 value) {
  temp_avatar_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarTeamUpdateNotify.temp_avatar_guid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
AvatarTeamUpdateNotify::temp_avatar_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarTeamUpdateNotify.temp_avatar_guid_list)
  return temp_avatar_guid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
AvatarTeamUpdateNotify::mutable_temp_avatar_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarTeamUpdateNotify.temp_avatar_guid_list)
  return &temp_avatar_guid_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

AvatarDataNotify::AvatarDataNotify_AvatarTeamMapEntry::AvatarDataNotify_AvatarTeamMapEntry() {}
AvatarDataNotify::AvatarDataNotify_AvatarTeamMapEntry::AvatarDataNotify_AvatarTeamMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata AvatarDataNotify::AvatarDataNotify_AvatarTeamMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[18];
}
void AvatarDataNotify::AvatarDataNotify_AvatarTeamMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void AvatarDataNotify::AvatarDataNotify_AvatarTeamMapEntry::MergeFrom(const AvatarDataNotify_AvatarTeamMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarDataNotify::kBackupAvatarTeamOrderListFieldNumber;
const int AvatarDataNotify::kTempAvatarGuidListFieldNumber;
const int AvatarDataNotify::kAvatarListFieldNumber;
const int AvatarDataNotify::kCurAvatarTeamIdFieldNumber;
const int AvatarDataNotify::kAvatarRenameListFieldNumber;
const int AvatarDataNotify::kOwnedFlycloakListFieldNumber;
const int AvatarDataNotify::kOwnedCostumeListFieldNumber;
const int AvatarDataNotify::kAvatarTeamMapFieldNumber;
const int AvatarDataNotify::kChooseAvatarGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarDataNotify::AvatarDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarDataNotify)
}
AvatarDataNotify::AvatarDataNotify(const AvatarDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      owned_flycloak_list_(from.owned_flycloak_list_),
      avatar_rename_list_(from.avatar_rename_list_),
      avatar_list_(from.avatar_list_),
      backup_avatar_team_order_list_(from.backup_avatar_team_order_list_),
      owned_costume_list_(from.owned_costume_list_),
      temp_avatar_guid_list_(from.temp_avatar_guid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  avatar_team_map_.MergeFrom(from.avatar_team_map_);
  ::memcpy(&choose_avatar_guid_, &from.choose_avatar_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&cur_avatar_team_id_) -
    reinterpret_cast<char*>(&choose_avatar_guid_)) + sizeof(cur_avatar_team_id_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarDataNotify)
}

void AvatarDataNotify::SharedCtor() {
  ::memset(&choose_avatar_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_avatar_team_id_) -
      reinterpret_cast<char*>(&choose_avatar_guid_)) + sizeof(cur_avatar_team_id_));
  _cached_size_ = 0;
}

AvatarDataNotify::~AvatarDataNotify() {
  // @@protoc_insertion_point(destructor:proto.AvatarDataNotify)
  SharedDtor();
}

void AvatarDataNotify::SharedDtor() {
}

void AvatarDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarDataNotify& AvatarDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarDataNotify* AvatarDataNotify::New(::google::protobuf::Arena* arena) const {
  AvatarDataNotify* n = new AvatarDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owned_flycloak_list_.Clear();
  avatar_rename_list_.Clear();
  avatar_list_.Clear();
  avatar_team_map_.Clear();
  backup_avatar_team_order_list_.Clear();
  owned_costume_list_.Clear();
  temp_avatar_guid_list_.Clear();
  ::memset(&choose_avatar_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_avatar_team_id_) -
      reinterpret_cast<char*>(&choose_avatar_guid_)) + sizeof(cur_avatar_team_id_));
  _internal_metadata_.Clear();
}

bool AvatarDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 owned_flycloak_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_owned_flycloak_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_owned_flycloak_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cur_avatar_team_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_avatar_team_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.AvatarRenameInfo avatar_rename_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_avatar_rename_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.AvatarInfo avatar_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_avatar_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .proto.AvatarTeam> avatar_team_map = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          AvatarDataNotify_AvatarTeamMapEntry::Parser< ::google::protobuf::internal::MapField<
              AvatarDataNotify_AvatarTeamMapEntry,
              ::google::protobuf::uint32, ::proto::AvatarTeam,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam > > parser(&avatar_team_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 choose_avatar_guid = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &choose_avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 backup_avatar_team_order_list = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_backup_avatar_team_order_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 74u, input, this->mutable_backup_avatar_team_order_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 owned_costume_list = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_owned_costume_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 90u, input, this->mutable_owned_costume_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 temp_avatar_guid_list = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_temp_avatar_guid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 98u, input, this->mutable_temp_avatar_guid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarDataNotify)
  return false;
#undef DO_
}

void AvatarDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 owned_flycloak_list = 1;
  if (this->owned_flycloak_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _owned_flycloak_list_cached_byte_size_));
  }
  for (int i = 0, n = this->owned_flycloak_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->owned_flycloak_list(i), output);
  }

  // uint32 cur_avatar_team_id = 2;
  if (this->cur_avatar_team_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cur_avatar_team_id(), output);
  }

  // repeated .proto.AvatarRenameInfo avatar_rename_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->avatar_rename_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->avatar_rename_list(static_cast<int>(i)), output);
  }

  // repeated .proto.AvatarInfo avatar_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->avatar_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->avatar_list(static_cast<int>(i)), output);
  }

  // map<uint32, .proto.AvatarTeam> avatar_team_map = 7;
  if (!this->avatar_team_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->avatar_team_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->avatar_team_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::const_iterator
          it = this->avatar_team_map().begin();
          it != this->avatar_team_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarDataNotify_AvatarTeamMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(avatar_team_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarDataNotify_AvatarTeamMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::const_iterator
          it = this->avatar_team_map().begin();
          it != this->avatar_team_map().end(); ++it) {
        entry.reset(avatar_team_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
      }
    }
  }

  // uint64 choose_avatar_guid = 8;
  if (this->choose_avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->choose_avatar_guid(), output);
  }

  // repeated uint32 backup_avatar_team_order_list = 9;
  if (this->backup_avatar_team_order_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _backup_avatar_team_order_list_cached_byte_size_));
  }
  for (int i = 0, n = this->backup_avatar_team_order_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->backup_avatar_team_order_list(i), output);
  }

  // repeated uint32 owned_costume_list = 11;
  if (this->owned_costume_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _owned_costume_list_cached_byte_size_));
  }
  for (int i = 0, n = this->owned_costume_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->owned_costume_list(i), output);
  }

  // repeated uint64 temp_avatar_guid_list = 12;
  if (this->temp_avatar_guid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _temp_avatar_guid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->temp_avatar_guid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->temp_avatar_guid_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarDataNotify)
}

::google::protobuf::uint8* AvatarDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 owned_flycloak_list = 1;
  if (this->owned_flycloak_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _owned_flycloak_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->owned_flycloak_list_, target);
  }

  // uint32 cur_avatar_team_id = 2;
  if (this->cur_avatar_team_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cur_avatar_team_id(), target);
  }

  // repeated .proto.AvatarRenameInfo avatar_rename_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->avatar_rename_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->avatar_rename_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.AvatarInfo avatar_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->avatar_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->avatar_list(static_cast<int>(i)), deterministic, target);
  }

  // map<uint32, .proto.AvatarTeam> avatar_team_map = 7;
  if (!this->avatar_team_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->avatar_team_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->avatar_team_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::const_iterator
          it = this->avatar_team_map().begin();
          it != this->avatar_team_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarDataNotify_AvatarTeamMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(avatar_team_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarDataNotify_AvatarTeamMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::const_iterator
          it = this->avatar_team_map().begin();
          it != this->avatar_team_map().end(); ++it) {
        entry.reset(avatar_team_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
      }
    }
  }

  // uint64 choose_avatar_guid = 8;
  if (this->choose_avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->choose_avatar_guid(), target);
  }

  // repeated uint32 backup_avatar_team_order_list = 9;
  if (this->backup_avatar_team_order_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _backup_avatar_team_order_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->backup_avatar_team_order_list_, target);
  }

  // repeated uint32 owned_costume_list = 11;
  if (this->owned_costume_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _owned_costume_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->owned_costume_list_, target);
  }

  // repeated uint64 temp_avatar_guid_list = 12;
  if (this->temp_avatar_guid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _temp_avatar_guid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->temp_avatar_guid_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarDataNotify)
  return target;
}

size_t AvatarDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 owned_flycloak_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->owned_flycloak_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _owned_flycloak_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.AvatarRenameInfo avatar_rename_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->avatar_rename_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->avatar_rename_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.AvatarInfo avatar_list = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->avatar_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->avatar_list(static_cast<int>(i)));
    }
  }

  // map<uint32, .proto.AvatarTeam> avatar_team_map = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->avatar_team_map_size());
  {
    ::google::protobuf::scoped_ptr<AvatarDataNotify_AvatarTeamMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::const_iterator
        it = this->avatar_team_map().begin();
        it != this->avatar_team_map().end(); ++it) {
      entry.reset(avatar_team_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated uint32 backup_avatar_team_order_list = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->backup_avatar_team_order_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _backup_avatar_team_order_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 owned_costume_list = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->owned_costume_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _owned_costume_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 temp_avatar_guid_list = 12;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->temp_avatar_guid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _temp_avatar_guid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint64 choose_avatar_guid = 8;
  if (this->choose_avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->choose_avatar_guid());
  }

  // uint32 cur_avatar_team_id = 2;
  if (this->cur_avatar_team_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cur_avatar_team_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarDataNotify)
    MergeFrom(*source);
  }
}

void AvatarDataNotify::MergeFrom(const AvatarDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  owned_flycloak_list_.MergeFrom(from.owned_flycloak_list_);
  avatar_rename_list_.MergeFrom(from.avatar_rename_list_);
  avatar_list_.MergeFrom(from.avatar_list_);
  avatar_team_map_.MergeFrom(from.avatar_team_map_);
  backup_avatar_team_order_list_.MergeFrom(from.backup_avatar_team_order_list_);
  owned_costume_list_.MergeFrom(from.owned_costume_list_);
  temp_avatar_guid_list_.MergeFrom(from.temp_avatar_guid_list_);
  if (from.choose_avatar_guid() != 0) {
    set_choose_avatar_guid(from.choose_avatar_guid());
  }
  if (from.cur_avatar_team_id() != 0) {
    set_cur_avatar_team_id(from.cur_avatar_team_id());
  }
}

void AvatarDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarDataNotify::CopyFrom(const AvatarDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarDataNotify::IsInitialized() const {
  return true;
}

void AvatarDataNotify::Swap(AvatarDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarDataNotify::InternalSwap(AvatarDataNotify* other) {
  using std::swap;
  owned_flycloak_list_.InternalSwap(&other->owned_flycloak_list_);
  avatar_rename_list_.InternalSwap(&other->avatar_rename_list_);
  avatar_list_.InternalSwap(&other->avatar_list_);
  avatar_team_map_.Swap(&other->avatar_team_map_);
  backup_avatar_team_order_list_.InternalSwap(&other->backup_avatar_team_order_list_);
  owned_costume_list_.InternalSwap(&other->owned_costume_list_);
  temp_avatar_guid_list_.InternalSwap(&other->temp_avatar_guid_list_);
  swap(choose_avatar_guid_, other->choose_avatar_guid_);
  swap(cur_avatar_team_id_, other->cur_avatar_team_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarDataNotify

// repeated uint32 backup_avatar_team_order_list = 9;
int AvatarDataNotify::backup_avatar_team_order_list_size() const {
  return backup_avatar_team_order_list_.size();
}
void AvatarDataNotify::clear_backup_avatar_team_order_list() {
  backup_avatar_team_order_list_.Clear();
}
::google::protobuf::uint32 AvatarDataNotify::backup_avatar_team_order_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarDataNotify.backup_avatar_team_order_list)
  return backup_avatar_team_order_list_.Get(index);
}
void AvatarDataNotify::set_backup_avatar_team_order_list(int index, ::google::protobuf::uint32 value) {
  backup_avatar_team_order_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarDataNotify.backup_avatar_team_order_list)
}
void AvatarDataNotify::add_backup_avatar_team_order_list(::google::protobuf::uint32 value) {
  backup_avatar_team_order_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarDataNotify.backup_avatar_team_order_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AvatarDataNotify::backup_avatar_team_order_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarDataNotify.backup_avatar_team_order_list)
  return backup_avatar_team_order_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AvatarDataNotify::mutable_backup_avatar_team_order_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarDataNotify.backup_avatar_team_order_list)
  return &backup_avatar_team_order_list_;
}

// repeated uint64 temp_avatar_guid_list = 12;
int AvatarDataNotify::temp_avatar_guid_list_size() const {
  return temp_avatar_guid_list_.size();
}
void AvatarDataNotify::clear_temp_avatar_guid_list() {
  temp_avatar_guid_list_.Clear();
}
::google::protobuf::uint64 AvatarDataNotify::temp_avatar_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarDataNotify.temp_avatar_guid_list)
  return temp_avatar_guid_list_.Get(index);
}
void AvatarDataNotify::set_temp_avatar_guid_list(int index, ::google::protobuf::uint64 value) {
  temp_avatar_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarDataNotify.temp_avatar_guid_list)
}
void AvatarDataNotify::add_temp_avatar_guid_list(::google::protobuf::uint64 value) {
  temp_avatar_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarDataNotify.temp_avatar_guid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
AvatarDataNotify::temp_avatar_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarDataNotify.temp_avatar_guid_list)
  return temp_avatar_guid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
AvatarDataNotify::mutable_temp_avatar_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarDataNotify.temp_avatar_guid_list)
  return &temp_avatar_guid_list_;
}

// repeated .proto.AvatarInfo avatar_list = 6;
int AvatarDataNotify::avatar_list_size() const {
  return avatar_list_.size();
}
void AvatarDataNotify::clear_avatar_list() {
  avatar_list_.Clear();
}
const ::proto::AvatarInfo& AvatarDataNotify::avatar_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarDataNotify.avatar_list)
  return avatar_list_.Get(index);
}
::proto::AvatarInfo* AvatarDataNotify::mutable_avatar_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AvatarDataNotify.avatar_list)
  return avatar_list_.Mutable(index);
}
::proto::AvatarInfo* AvatarDataNotify::add_avatar_list() {
  // @@protoc_insertion_point(field_add:proto.AvatarDataNotify.avatar_list)
  return avatar_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::AvatarInfo >*
AvatarDataNotify::mutable_avatar_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarDataNotify.avatar_list)
  return &avatar_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::AvatarInfo >&
AvatarDataNotify::avatar_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarDataNotify.avatar_list)
  return avatar_list_;
}

// uint32 cur_avatar_team_id = 2;
void AvatarDataNotify::clear_cur_avatar_team_id() {
  cur_avatar_team_id_ = 0u;
}
::google::protobuf::uint32 AvatarDataNotify::cur_avatar_team_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarDataNotify.cur_avatar_team_id)
  return cur_avatar_team_id_;
}
void AvatarDataNotify::set_cur_avatar_team_id(::google::protobuf::uint32 value) {
  
  cur_avatar_team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarDataNotify.cur_avatar_team_id)
}

// repeated .proto.AvatarRenameInfo avatar_rename_list = 4;
int AvatarDataNotify::avatar_rename_list_size() const {
  return avatar_rename_list_.size();
}
void AvatarDataNotify::clear_avatar_rename_list() {
  avatar_rename_list_.Clear();
}
const ::proto::AvatarRenameInfo& AvatarDataNotify::avatar_rename_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarDataNotify.avatar_rename_list)
  return avatar_rename_list_.Get(index);
}
::proto::AvatarRenameInfo* AvatarDataNotify::mutable_avatar_rename_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AvatarDataNotify.avatar_rename_list)
  return avatar_rename_list_.Mutable(index);
}
::proto::AvatarRenameInfo* AvatarDataNotify::add_avatar_rename_list() {
  // @@protoc_insertion_point(field_add:proto.AvatarDataNotify.avatar_rename_list)
  return avatar_rename_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::AvatarRenameInfo >*
AvatarDataNotify::mutable_avatar_rename_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarDataNotify.avatar_rename_list)
  return &avatar_rename_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::AvatarRenameInfo >&
AvatarDataNotify::avatar_rename_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarDataNotify.avatar_rename_list)
  return avatar_rename_list_;
}

// repeated uint32 owned_flycloak_list = 1;
int AvatarDataNotify::owned_flycloak_list_size() const {
  return owned_flycloak_list_.size();
}
void AvatarDataNotify::clear_owned_flycloak_list() {
  owned_flycloak_list_.Clear();
}
::google::protobuf::uint32 AvatarDataNotify::owned_flycloak_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarDataNotify.owned_flycloak_list)
  return owned_flycloak_list_.Get(index);
}
void AvatarDataNotify::set_owned_flycloak_list(int index, ::google::protobuf::uint32 value) {
  owned_flycloak_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarDataNotify.owned_flycloak_list)
}
void AvatarDataNotify::add_owned_flycloak_list(::google::protobuf::uint32 value) {
  owned_flycloak_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarDataNotify.owned_flycloak_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AvatarDataNotify::owned_flycloak_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarDataNotify.owned_flycloak_list)
  return owned_flycloak_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AvatarDataNotify::mutable_owned_flycloak_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarDataNotify.owned_flycloak_list)
  return &owned_flycloak_list_;
}

// repeated uint32 owned_costume_list = 11;
int AvatarDataNotify::owned_costume_list_size() const {
  return owned_costume_list_.size();
}
void AvatarDataNotify::clear_owned_costume_list() {
  owned_costume_list_.Clear();
}
::google::protobuf::uint32 AvatarDataNotify::owned_costume_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarDataNotify.owned_costume_list)
  return owned_costume_list_.Get(index);
}
void AvatarDataNotify::set_owned_costume_list(int index, ::google::protobuf::uint32 value) {
  owned_costume_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarDataNotify.owned_costume_list)
}
void AvatarDataNotify::add_owned_costume_list(::google::protobuf::uint32 value) {
  owned_costume_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarDataNotify.owned_costume_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AvatarDataNotify::owned_costume_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarDataNotify.owned_costume_list)
  return owned_costume_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AvatarDataNotify::mutable_owned_costume_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarDataNotify.owned_costume_list)
  return &owned_costume_list_;
}

// map<uint32, .proto.AvatarTeam> avatar_team_map = 7;
int AvatarDataNotify::avatar_team_map_size() const {
  return avatar_team_map_.size();
}
void AvatarDataNotify::clear_avatar_team_map() {
  avatar_team_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >&
AvatarDataNotify::avatar_team_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarDataNotify.avatar_team_map)
  return avatar_team_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >*
AvatarDataNotify::mutable_avatar_team_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarDataNotify.avatar_team_map)
  return avatar_team_map_.MutableMap();
}

// uint64 choose_avatar_guid = 8;
void AvatarDataNotify::clear_choose_avatar_guid() {
  choose_avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarDataNotify::choose_avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarDataNotify.choose_avatar_guid)
  return choose_avatar_guid_;
}
void AvatarDataNotify::set_choose_avatar_guid(::google::protobuf::uint64 value) {
  
  choose_avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarDataNotify.choose_avatar_guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarUpgradeReq::kAvatarGuidFieldNumber;
const int AvatarUpgradeReq::kCountFieldNumber;
const int AvatarUpgradeReq::kItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarUpgradeReq::AvatarUpgradeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarUpgradeReq)
}
AvatarUpgradeReq::AvatarUpgradeReq(const AvatarUpgradeReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&avatar_guid_) -
    reinterpret_cast<char*>(&count_)) + sizeof(avatar_guid_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarUpgradeReq)
}

void AvatarUpgradeReq::SharedCtor() {
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avatar_guid_) -
      reinterpret_cast<char*>(&count_)) + sizeof(avatar_guid_));
  _cached_size_ = 0;
}

AvatarUpgradeReq::~AvatarUpgradeReq() {
  // @@protoc_insertion_point(destructor:proto.AvatarUpgradeReq)
  SharedDtor();
}

void AvatarUpgradeReq::SharedDtor() {
}

void AvatarUpgradeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarUpgradeReq::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarUpgradeReq& AvatarUpgradeReq::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarUpgradeReq* AvatarUpgradeReq::New(::google::protobuf::Arena* arena) const {
  AvatarUpgradeReq* n = new AvatarUpgradeReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarUpgradeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarUpgradeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avatar_guid_) -
      reinterpret_cast<char*>(&count_)) + sizeof(avatar_guid_));
  _internal_metadata_.Clear();
}

bool AvatarUpgradeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarUpgradeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 item_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 avatar_guid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarUpgradeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarUpgradeReq)
  return false;
#undef DO_
}

void AvatarUpgradeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarUpgradeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  // uint32 item_id = 5;
  if (this->item_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->item_id(), output);
  }

  // uint64 avatar_guid = 6;
  if (this->avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->avatar_guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarUpgradeReq)
}

::google::protobuf::uint8* AvatarUpgradeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarUpgradeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  // uint32 item_id = 5;
  if (this->item_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->item_id(), target);
  }

  // uint64 avatar_guid = 6;
  if (this->avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->avatar_guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarUpgradeReq)
  return target;
}

size_t AvatarUpgradeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarUpgradeReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  // uint32 item_id = 5;
  if (this->item_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_id());
  }

  // uint64 avatar_guid = 6;
  if (this->avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->avatar_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarUpgradeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarUpgradeReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarUpgradeReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarUpgradeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarUpgradeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarUpgradeReq)
    MergeFrom(*source);
  }
}

void AvatarUpgradeReq::MergeFrom(const AvatarUpgradeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarUpgradeReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.item_id() != 0) {
    set_item_id(from.item_id());
  }
  if (from.avatar_guid() != 0) {
    set_avatar_guid(from.avatar_guid());
  }
}

void AvatarUpgradeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarUpgradeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarUpgradeReq::CopyFrom(const AvatarUpgradeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarUpgradeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarUpgradeReq::IsInitialized() const {
  return true;
}

void AvatarUpgradeReq::Swap(AvatarUpgradeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarUpgradeReq::InternalSwap(AvatarUpgradeReq* other) {
  using std::swap;
  swap(count_, other->count_);
  swap(item_id_, other->item_id_);
  swap(avatar_guid_, other->avatar_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarUpgradeReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarUpgradeReq

// uint64 avatar_guid = 6;
void AvatarUpgradeReq::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarUpgradeReq::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarUpgradeReq.avatar_guid)
  return avatar_guid_;
}
void AvatarUpgradeReq::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarUpgradeReq.avatar_guid)
}

// uint32 count = 2;
void AvatarUpgradeReq::clear_count() {
  count_ = 0u;
}
::google::protobuf::uint32 AvatarUpgradeReq::count() const {
  // @@protoc_insertion_point(field_get:proto.AvatarUpgradeReq.count)
  return count_;
}
void AvatarUpgradeReq::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarUpgradeReq.count)
}

// uint32 item_id = 5;
void AvatarUpgradeReq::clear_item_id() {
  item_id_ = 0u;
}
::google::protobuf::uint32 AvatarUpgradeReq::item_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarUpgradeReq.item_id)
  return item_id_;
}
void AvatarUpgradeReq::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarUpgradeReq.item_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

AvatarUpgradeRsp::AvatarUpgradeRsp_OldFightPropMapEntry::AvatarUpgradeRsp_OldFightPropMapEntry() {}
AvatarUpgradeRsp::AvatarUpgradeRsp_OldFightPropMapEntry::AvatarUpgradeRsp_OldFightPropMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata AvatarUpgradeRsp::AvatarUpgradeRsp_OldFightPropMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[21];
}
void AvatarUpgradeRsp::AvatarUpgradeRsp_OldFightPropMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void AvatarUpgradeRsp::AvatarUpgradeRsp_OldFightPropMapEntry::MergeFrom(const AvatarUpgradeRsp_OldFightPropMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

AvatarUpgradeRsp::AvatarUpgradeRsp_CurFightPropMapEntry::AvatarUpgradeRsp_CurFightPropMapEntry() {}
AvatarUpgradeRsp::AvatarUpgradeRsp_CurFightPropMapEntry::AvatarUpgradeRsp_CurFightPropMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata AvatarUpgradeRsp::AvatarUpgradeRsp_CurFightPropMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[22];
}
void AvatarUpgradeRsp::AvatarUpgradeRsp_CurFightPropMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void AvatarUpgradeRsp::AvatarUpgradeRsp_CurFightPropMapEntry::MergeFrom(const AvatarUpgradeRsp_CurFightPropMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarUpgradeRsp::kCurLevelFieldNumber;
const int AvatarUpgradeRsp::kOldLevelFieldNumber;
const int AvatarUpgradeRsp::kOldFightPropMapFieldNumber;
const int AvatarUpgradeRsp::kRetcodeFieldNumber;
const int AvatarUpgradeRsp::kCurFightPropMapFieldNumber;
const int AvatarUpgradeRsp::kAvatarGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarUpgradeRsp::AvatarUpgradeRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarUpgradeRsp)
}
AvatarUpgradeRsp::AvatarUpgradeRsp(const AvatarUpgradeRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cur_fight_prop_map_.MergeFrom(from.cur_fight_prop_map_);
  old_fight_prop_map_.MergeFrom(from.old_fight_prop_map_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&avatar_guid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(avatar_guid_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarUpgradeRsp)
}

void AvatarUpgradeRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avatar_guid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(avatar_guid_));
  _cached_size_ = 0;
}

AvatarUpgradeRsp::~AvatarUpgradeRsp() {
  // @@protoc_insertion_point(destructor:proto.AvatarUpgradeRsp)
  SharedDtor();
}

void AvatarUpgradeRsp::SharedDtor() {
}

void AvatarUpgradeRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarUpgradeRsp::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarUpgradeRsp& AvatarUpgradeRsp::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarUpgradeRsp* AvatarUpgradeRsp::New(::google::protobuf::Arena* arena) const {
  AvatarUpgradeRsp* n = new AvatarUpgradeRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarUpgradeRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarUpgradeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cur_fight_prop_map_.Clear();
  old_fight_prop_map_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avatar_guid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(avatar_guid_));
  _internal_metadata_.Clear();
}

bool AvatarUpgradeRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarUpgradeRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, float> cur_fight_prop_map = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          AvatarUpgradeRsp_CurFightPropMapEntry::Parser< ::google::protobuf::internal::MapField<
              AvatarUpgradeRsp_CurFightPropMapEntry,
              ::google::protobuf::uint32, float,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, float > > parser(&cur_fight_prop_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cur_level = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, float> old_fight_prop_map = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          AvatarUpgradeRsp_OldFightPropMapEntry::Parser< ::google::protobuf::internal::MapField<
              AvatarUpgradeRsp_OldFightPropMapEntry,
              ::google::protobuf::uint32, float,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, float > > parser(&old_fight_prop_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 old_level = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &old_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 avatar_guid = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarUpgradeRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarUpgradeRsp)
  return false;
#undef DO_
}

void AvatarUpgradeRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarUpgradeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // map<uint32, float> cur_fight_prop_map = 4;
  if (!this->cur_fight_prop_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, float >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->cur_fight_prop_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->cur_fight_prop_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, float >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, float >::const_iterator
          it = this->cur_fight_prop_map().begin();
          it != this->cur_fight_prop_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarUpgradeRsp_CurFightPropMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(cur_fight_prop_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarUpgradeRsp_CurFightPropMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, float >::const_iterator
          it = this->cur_fight_prop_map().begin();
          it != this->cur_fight_prop_map().end(); ++it) {
        entry.reset(cur_fight_prop_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    }
  }

  // uint32 cur_level = 6;
  if (this->cur_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->cur_level(), output);
  }

  // map<uint32, float> old_fight_prop_map = 10;
  if (!this->old_fight_prop_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, float >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->old_fight_prop_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->old_fight_prop_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, float >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, float >::const_iterator
          it = this->old_fight_prop_map().begin();
          it != this->old_fight_prop_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarUpgradeRsp_OldFightPropMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(old_fight_prop_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            10, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarUpgradeRsp_OldFightPropMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, float >::const_iterator
          it = this->old_fight_prop_map().begin();
          it != this->old_fight_prop_map().end(); ++it) {
        entry.reset(old_fight_prop_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            10, *entry, output);
      }
    }
  }

  // uint32 old_level = 13;
  if (this->old_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->old_level(), output);
  }

  // uint64 avatar_guid = 15;
  if (this->avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(15, this->avatar_guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarUpgradeRsp)
}

::google::protobuf::uint8* AvatarUpgradeRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarUpgradeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // map<uint32, float> cur_fight_prop_map = 4;
  if (!this->cur_fight_prop_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, float >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->cur_fight_prop_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->cur_fight_prop_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, float >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, float >::const_iterator
          it = this->cur_fight_prop_map().begin();
          it != this->cur_fight_prop_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarUpgradeRsp_CurFightPropMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(cur_fight_prop_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarUpgradeRsp_CurFightPropMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, float >::const_iterator
          it = this->cur_fight_prop_map().begin();
          it != this->cur_fight_prop_map().end(); ++it) {
        entry.reset(cur_fight_prop_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    }
  }

  // uint32 cur_level = 6;
  if (this->cur_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->cur_level(), target);
  }

  // map<uint32, float> old_fight_prop_map = 10;
  if (!this->old_fight_prop_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, float >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->old_fight_prop_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->old_fight_prop_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, float >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, float >::const_iterator
          it = this->old_fight_prop_map().begin();
          it != this->old_fight_prop_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarUpgradeRsp_OldFightPropMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(old_fight_prop_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       10, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarUpgradeRsp_OldFightPropMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, float >::const_iterator
          it = this->old_fight_prop_map().begin();
          it != this->old_fight_prop_map().end(); ++it) {
        entry.reset(old_fight_prop_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       10, *entry, deterministic, target);
;
      }
    }
  }

  // uint32 old_level = 13;
  if (this->old_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->old_level(), target);
  }

  // uint64 avatar_guid = 15;
  if (this->avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(15, this->avatar_guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarUpgradeRsp)
  return target;
}

size_t AvatarUpgradeRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarUpgradeRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, float> cur_fight_prop_map = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->cur_fight_prop_map_size());
  {
    ::google::protobuf::scoped_ptr<AvatarUpgradeRsp_CurFightPropMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, float >::const_iterator
        it = this->cur_fight_prop_map().begin();
        it != this->cur_fight_prop_map().end(); ++it) {
      entry.reset(cur_fight_prop_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<uint32, float> old_fight_prop_map = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->old_fight_prop_map_size());
  {
    ::google::protobuf::scoped_ptr<AvatarUpgradeRsp_OldFightPropMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, float >::const_iterator
        it = this->old_fight_prop_map().begin();
        it != this->old_fight_prop_map().end(); ++it) {
      entry.reset(old_fight_prop_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 cur_level = 6;
  if (this->cur_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cur_level());
  }

  // uint32 old_level = 13;
  if (this->old_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->old_level());
  }

  // uint64 avatar_guid = 15;
  if (this->avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->avatar_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarUpgradeRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarUpgradeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarUpgradeRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarUpgradeRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarUpgradeRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarUpgradeRsp)
    MergeFrom(*source);
  }
}

void AvatarUpgradeRsp::MergeFrom(const AvatarUpgradeRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarUpgradeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cur_fight_prop_map_.MergeFrom(from.cur_fight_prop_map_);
  old_fight_prop_map_.MergeFrom(from.old_fight_prop_map_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.cur_level() != 0) {
    set_cur_level(from.cur_level());
  }
  if (from.old_level() != 0) {
    set_old_level(from.old_level());
  }
  if (from.avatar_guid() != 0) {
    set_avatar_guid(from.avatar_guid());
  }
}

void AvatarUpgradeRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarUpgradeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarUpgradeRsp::CopyFrom(const AvatarUpgradeRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarUpgradeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarUpgradeRsp::IsInitialized() const {
  return true;
}

void AvatarUpgradeRsp::Swap(AvatarUpgradeRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarUpgradeRsp::InternalSwap(AvatarUpgradeRsp* other) {
  using std::swap;
  cur_fight_prop_map_.Swap(&other->cur_fight_prop_map_);
  old_fight_prop_map_.Swap(&other->old_fight_prop_map_);
  swap(retcode_, other->retcode_);
  swap(cur_level_, other->cur_level_);
  swap(old_level_, other->old_level_);
  swap(avatar_guid_, other->avatar_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarUpgradeRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarUpgradeRsp

// uint32 cur_level = 6;
void AvatarUpgradeRsp::clear_cur_level() {
  cur_level_ = 0u;
}
::google::protobuf::uint32 AvatarUpgradeRsp::cur_level() const {
  // @@protoc_insertion_point(field_get:proto.AvatarUpgradeRsp.cur_level)
  return cur_level_;
}
void AvatarUpgradeRsp::set_cur_level(::google::protobuf::uint32 value) {
  
  cur_level_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarUpgradeRsp.cur_level)
}

// uint32 old_level = 13;
void AvatarUpgradeRsp::clear_old_level() {
  old_level_ = 0u;
}
::google::protobuf::uint32 AvatarUpgradeRsp::old_level() const {
  // @@protoc_insertion_point(field_get:proto.AvatarUpgradeRsp.old_level)
  return old_level_;
}
void AvatarUpgradeRsp::set_old_level(::google::protobuf::uint32 value) {
  
  old_level_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarUpgradeRsp.old_level)
}

// map<uint32, float> old_fight_prop_map = 10;
int AvatarUpgradeRsp::old_fight_prop_map_size() const {
  return old_fight_prop_map_.size();
}
void AvatarUpgradeRsp::clear_old_fight_prop_map() {
  old_fight_prop_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
AvatarUpgradeRsp::old_fight_prop_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarUpgradeRsp.old_fight_prop_map)
  return old_fight_prop_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, float >*
AvatarUpgradeRsp::mutable_old_fight_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarUpgradeRsp.old_fight_prop_map)
  return old_fight_prop_map_.MutableMap();
}

// int32 retcode = 1;
void AvatarUpgradeRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 AvatarUpgradeRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AvatarUpgradeRsp.retcode)
  return retcode_;
}
void AvatarUpgradeRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarUpgradeRsp.retcode)
}

// map<uint32, float> cur_fight_prop_map = 4;
int AvatarUpgradeRsp::cur_fight_prop_map_size() const {
  return cur_fight_prop_map_.size();
}
void AvatarUpgradeRsp::clear_cur_fight_prop_map() {
  cur_fight_prop_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
AvatarUpgradeRsp::cur_fight_prop_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarUpgradeRsp.cur_fight_prop_map)
  return cur_fight_prop_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, float >*
AvatarUpgradeRsp::mutable_cur_fight_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarUpgradeRsp.cur_fight_prop_map)
  return cur_fight_prop_map_.MutableMap();
}

// uint64 avatar_guid = 15;
void AvatarUpgradeRsp::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarUpgradeRsp::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarUpgradeRsp.avatar_guid)
  return avatar_guid_;
}
void AvatarUpgradeRsp::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarUpgradeRsp.avatar_guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarDieAnimationEndReq::kRebornPosFieldNumber;
const int AvatarDieAnimationEndReq::kDieGuidFieldNumber;
const int AvatarDieAnimationEndReq::kSkillIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarDieAnimationEndReq::AvatarDieAnimationEndReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarDieAnimationEndReq)
}
AvatarDieAnimationEndReq::AvatarDieAnimationEndReq(const AvatarDieAnimationEndReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_reborn_pos()) {
    reborn_pos_ = new ::proto::Vector(*from.reborn_pos_);
  } else {
    reborn_pos_ = NULL;
  }
  ::memcpy(&skill_id_, &from.skill_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&die_guid_) -
    reinterpret_cast<char*>(&skill_id_)) + sizeof(die_guid_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarDieAnimationEndReq)
}

void AvatarDieAnimationEndReq::SharedCtor() {
  ::memset(&reborn_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&die_guid_) -
      reinterpret_cast<char*>(&reborn_pos_)) + sizeof(die_guid_));
  _cached_size_ = 0;
}

AvatarDieAnimationEndReq::~AvatarDieAnimationEndReq() {
  // @@protoc_insertion_point(destructor:proto.AvatarDieAnimationEndReq)
  SharedDtor();
}

void AvatarDieAnimationEndReq::SharedDtor() {
  if (this != internal_default_instance()) delete reborn_pos_;
}

void AvatarDieAnimationEndReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarDieAnimationEndReq::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarDieAnimationEndReq& AvatarDieAnimationEndReq::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarDieAnimationEndReq* AvatarDieAnimationEndReq::New(::google::protobuf::Arena* arena) const {
  AvatarDieAnimationEndReq* n = new AvatarDieAnimationEndReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarDieAnimationEndReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarDieAnimationEndReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && reborn_pos_ != NULL) {
    delete reborn_pos_;
  }
  reborn_pos_ = NULL;
  ::memset(&skill_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&die_guid_) -
      reinterpret_cast<char*>(&skill_id_)) + sizeof(die_guid_));
  _internal_metadata_.Clear();
}

bool AvatarDieAnimationEndReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarDieAnimationEndReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.Vector reborn_pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reborn_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 die_guid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &die_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 skill_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skill_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarDieAnimationEndReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarDieAnimationEndReq)
  return false;
#undef DO_
}

void AvatarDieAnimationEndReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarDieAnimationEndReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Vector reborn_pos = 3;
  if (this->has_reborn_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->reborn_pos_, output);
  }

  // uint64 die_guid = 7;
  if (this->die_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->die_guid(), output);
  }

  // uint32 skill_id = 8;
  if (this->skill_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->skill_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarDieAnimationEndReq)
}

::google::protobuf::uint8* AvatarDieAnimationEndReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarDieAnimationEndReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Vector reborn_pos = 3;
  if (this->has_reborn_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->reborn_pos_, deterministic, target);
  }

  // uint64 die_guid = 7;
  if (this->die_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->die_guid(), target);
  }

  // uint32 skill_id = 8;
  if (this->skill_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->skill_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarDieAnimationEndReq)
  return target;
}

size_t AvatarDieAnimationEndReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarDieAnimationEndReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector reborn_pos = 3;
  if (this->has_reborn_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->reborn_pos_);
  }

  // uint32 skill_id = 8;
  if (this->skill_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->skill_id());
  }

  // uint64 die_guid = 7;
  if (this->die_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->die_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarDieAnimationEndReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarDieAnimationEndReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarDieAnimationEndReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarDieAnimationEndReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarDieAnimationEndReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarDieAnimationEndReq)
    MergeFrom(*source);
  }
}

void AvatarDieAnimationEndReq::MergeFrom(const AvatarDieAnimationEndReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarDieAnimationEndReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_reborn_pos()) {
    mutable_reborn_pos()->::proto::Vector::MergeFrom(from.reborn_pos());
  }
  if (from.skill_id() != 0) {
    set_skill_id(from.skill_id());
  }
  if (from.die_guid() != 0) {
    set_die_guid(from.die_guid());
  }
}

void AvatarDieAnimationEndReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarDieAnimationEndReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarDieAnimationEndReq::CopyFrom(const AvatarDieAnimationEndReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarDieAnimationEndReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarDieAnimationEndReq::IsInitialized() const {
  return true;
}

void AvatarDieAnimationEndReq::Swap(AvatarDieAnimationEndReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarDieAnimationEndReq::InternalSwap(AvatarDieAnimationEndReq* other) {
  using std::swap;
  swap(reborn_pos_, other->reborn_pos_);
  swap(skill_id_, other->skill_id_);
  swap(die_guid_, other->die_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarDieAnimationEndReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarDieAnimationEndReq

// .proto.Vector reborn_pos = 3;
bool AvatarDieAnimationEndReq::has_reborn_pos() const {
  return this != internal_default_instance() && reborn_pos_ != NULL;
}
void AvatarDieAnimationEndReq::clear_reborn_pos() {
  if (GetArenaNoVirtual() == NULL && reborn_pos_ != NULL) delete reborn_pos_;
  reborn_pos_ = NULL;
}
const ::proto::Vector& AvatarDieAnimationEndReq::reborn_pos() const {
  const ::proto::Vector* p = reborn_pos_;
  // @@protoc_insertion_point(field_get:proto.AvatarDieAnimationEndReq.reborn_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* AvatarDieAnimationEndReq::mutable_reborn_pos() {
  
  if (reborn_pos_ == NULL) {
    reborn_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.AvatarDieAnimationEndReq.reborn_pos)
  return reborn_pos_;
}
::proto::Vector* AvatarDieAnimationEndReq::release_reborn_pos() {
  // @@protoc_insertion_point(field_release:proto.AvatarDieAnimationEndReq.reborn_pos)
  
  ::proto::Vector* temp = reborn_pos_;
  reborn_pos_ = NULL;
  return temp;
}
void AvatarDieAnimationEndReq::set_allocated_reborn_pos(::proto::Vector* reborn_pos) {
  delete reborn_pos_;
  reborn_pos_ = reborn_pos;
  if (reborn_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarDieAnimationEndReq.reborn_pos)
}

// uint64 die_guid = 7;
void AvatarDieAnimationEndReq::clear_die_guid() {
  die_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarDieAnimationEndReq::die_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarDieAnimationEndReq.die_guid)
  return die_guid_;
}
void AvatarDieAnimationEndReq::set_die_guid(::google::protobuf::uint64 value) {
  
  die_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarDieAnimationEndReq.die_guid)
}

// uint32 skill_id = 8;
void AvatarDieAnimationEndReq::clear_skill_id() {
  skill_id_ = 0u;
}
::google::protobuf::uint32 AvatarDieAnimationEndReq::skill_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarDieAnimationEndReq.skill_id)
  return skill_id_;
}
void AvatarDieAnimationEndReq::set_skill_id(::google::protobuf::uint32 value) {
  
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarDieAnimationEndReq.skill_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarDieAnimationEndRsp::kSkillIdFieldNumber;
const int AvatarDieAnimationEndRsp::kRetcodeFieldNumber;
const int AvatarDieAnimationEndRsp::kDieGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarDieAnimationEndRsp::AvatarDieAnimationEndRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarDieAnimationEndRsp)
}
AvatarDieAnimationEndRsp::AvatarDieAnimationEndRsp(const AvatarDieAnimationEndRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&skill_id_, &from.skill_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&die_guid_) -
    reinterpret_cast<char*>(&skill_id_)) + sizeof(die_guid_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarDieAnimationEndRsp)
}

void AvatarDieAnimationEndRsp::SharedCtor() {
  ::memset(&skill_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&die_guid_) -
      reinterpret_cast<char*>(&skill_id_)) + sizeof(die_guid_));
  _cached_size_ = 0;
}

AvatarDieAnimationEndRsp::~AvatarDieAnimationEndRsp() {
  // @@protoc_insertion_point(destructor:proto.AvatarDieAnimationEndRsp)
  SharedDtor();
}

void AvatarDieAnimationEndRsp::SharedDtor() {
}

void AvatarDieAnimationEndRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarDieAnimationEndRsp::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarDieAnimationEndRsp& AvatarDieAnimationEndRsp::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarDieAnimationEndRsp* AvatarDieAnimationEndRsp::New(::google::protobuf::Arena* arena) const {
  AvatarDieAnimationEndRsp* n = new AvatarDieAnimationEndRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarDieAnimationEndRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarDieAnimationEndRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&skill_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&die_guid_) -
      reinterpret_cast<char*>(&skill_id_)) + sizeof(die_guid_));
  _internal_metadata_.Clear();
}

bool AvatarDieAnimationEndRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarDieAnimationEndRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 skill_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skill_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 die_guid = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &die_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarDieAnimationEndRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarDieAnimationEndRsp)
  return false;
#undef DO_
}

void AvatarDieAnimationEndRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarDieAnimationEndRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 skill_id = 13;
  if (this->skill_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->skill_id(), output);
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->retcode(), output);
  }

  // uint64 die_guid = 15;
  if (this->die_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(15, this->die_guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarDieAnimationEndRsp)
}

::google::protobuf::uint8* AvatarDieAnimationEndRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarDieAnimationEndRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 skill_id = 13;
  if (this->skill_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->skill_id(), target);
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->retcode(), target);
  }

  // uint64 die_guid = 15;
  if (this->die_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(15, this->die_guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarDieAnimationEndRsp)
  return target;
}

size_t AvatarDieAnimationEndRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarDieAnimationEndRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 skill_id = 13;
  if (this->skill_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->skill_id());
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint64 die_guid = 15;
  if (this->die_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->die_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarDieAnimationEndRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarDieAnimationEndRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarDieAnimationEndRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarDieAnimationEndRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarDieAnimationEndRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarDieAnimationEndRsp)
    MergeFrom(*source);
  }
}

void AvatarDieAnimationEndRsp::MergeFrom(const AvatarDieAnimationEndRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarDieAnimationEndRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.skill_id() != 0) {
    set_skill_id(from.skill_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.die_guid() != 0) {
    set_die_guid(from.die_guid());
  }
}

void AvatarDieAnimationEndRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarDieAnimationEndRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarDieAnimationEndRsp::CopyFrom(const AvatarDieAnimationEndRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarDieAnimationEndRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarDieAnimationEndRsp::IsInitialized() const {
  return true;
}

void AvatarDieAnimationEndRsp::Swap(AvatarDieAnimationEndRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarDieAnimationEndRsp::InternalSwap(AvatarDieAnimationEndRsp* other) {
  using std::swap;
  swap(skill_id_, other->skill_id_);
  swap(retcode_, other->retcode_);
  swap(die_guid_, other->die_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarDieAnimationEndRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarDieAnimationEndRsp

// uint32 skill_id = 13;
void AvatarDieAnimationEndRsp::clear_skill_id() {
  skill_id_ = 0u;
}
::google::protobuf::uint32 AvatarDieAnimationEndRsp::skill_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarDieAnimationEndRsp.skill_id)
  return skill_id_;
}
void AvatarDieAnimationEndRsp::set_skill_id(::google::protobuf::uint32 value) {
  
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarDieAnimationEndRsp.skill_id)
}

// int32 retcode = 14;
void AvatarDieAnimationEndRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 AvatarDieAnimationEndRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AvatarDieAnimationEndRsp.retcode)
  return retcode_;
}
void AvatarDieAnimationEndRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarDieAnimationEndRsp.retcode)
}

// uint64 die_guid = 15;
void AvatarDieAnimationEndRsp::clear_die_guid() {
  die_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarDieAnimationEndRsp::die_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarDieAnimationEndRsp.die_guid)
  return die_guid_;
}
void AvatarDieAnimationEndRsp::set_die_guid(::google::protobuf::uint64 value) {
  
  die_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarDieAnimationEndRsp.die_guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarChangeElementTypeReq::kSceneIdFieldNumber;
const int AvatarChangeElementTypeReq::kAreaIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarChangeElementTypeReq::AvatarChangeElementTypeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarChangeElementTypeReq)
}
AvatarChangeElementTypeReq::AvatarChangeElementTypeReq(const AvatarChangeElementTypeReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&area_id_, &from.area_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&scene_id_) -
    reinterpret_cast<char*>(&area_id_)) + sizeof(scene_id_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarChangeElementTypeReq)
}

void AvatarChangeElementTypeReq::SharedCtor() {
  ::memset(&area_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&area_id_)) + sizeof(scene_id_));
  _cached_size_ = 0;
}

AvatarChangeElementTypeReq::~AvatarChangeElementTypeReq() {
  // @@protoc_insertion_point(destructor:proto.AvatarChangeElementTypeReq)
  SharedDtor();
}

void AvatarChangeElementTypeReq::SharedDtor() {
}

void AvatarChangeElementTypeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarChangeElementTypeReq::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarChangeElementTypeReq& AvatarChangeElementTypeReq::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarChangeElementTypeReq* AvatarChangeElementTypeReq::New(::google::protobuf::Arena* arena) const {
  AvatarChangeElementTypeReq* n = new AvatarChangeElementTypeReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarChangeElementTypeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarChangeElementTypeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&area_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&area_id_)) + sizeof(scene_id_));
  _internal_metadata_.Clear();
}

bool AvatarChangeElementTypeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarChangeElementTypeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 area_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &area_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarChangeElementTypeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarChangeElementTypeReq)
  return false;
#undef DO_
}

void AvatarChangeElementTypeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarChangeElementTypeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 area_id = 3;
  if (this->area_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->area_id(), output);
  }

  // uint32 scene_id = 7;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->scene_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarChangeElementTypeReq)
}

::google::protobuf::uint8* AvatarChangeElementTypeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarChangeElementTypeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 area_id = 3;
  if (this->area_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->area_id(), target);
  }

  // uint32 scene_id = 7;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->scene_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarChangeElementTypeReq)
  return target;
}

size_t AvatarChangeElementTypeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarChangeElementTypeReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 area_id = 3;
  if (this->area_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->area_id());
  }

  // uint32 scene_id = 7;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarChangeElementTypeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarChangeElementTypeReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarChangeElementTypeReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarChangeElementTypeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarChangeElementTypeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarChangeElementTypeReq)
    MergeFrom(*source);
  }
}

void AvatarChangeElementTypeReq::MergeFrom(const AvatarChangeElementTypeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarChangeElementTypeReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.area_id() != 0) {
    set_area_id(from.area_id());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void AvatarChangeElementTypeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarChangeElementTypeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarChangeElementTypeReq::CopyFrom(const AvatarChangeElementTypeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarChangeElementTypeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarChangeElementTypeReq::IsInitialized() const {
  return true;
}

void AvatarChangeElementTypeReq::Swap(AvatarChangeElementTypeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarChangeElementTypeReq::InternalSwap(AvatarChangeElementTypeReq* other) {
  using std::swap;
  swap(area_id_, other->area_id_);
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarChangeElementTypeReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarChangeElementTypeReq

// uint32 scene_id = 7;
void AvatarChangeElementTypeReq::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 AvatarChangeElementTypeReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarChangeElementTypeReq.scene_id)
  return scene_id_;
}
void AvatarChangeElementTypeReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarChangeElementTypeReq.scene_id)
}

// uint32 area_id = 3;
void AvatarChangeElementTypeReq::clear_area_id() {
  area_id_ = 0u;
}
::google::protobuf::uint32 AvatarChangeElementTypeReq::area_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarChangeElementTypeReq.area_id)
  return area_id_;
}
void AvatarChangeElementTypeReq::set_area_id(::google::protobuf::uint32 value) {
  
  area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarChangeElementTypeReq.area_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarChangeElementTypeRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarChangeElementTypeRsp::AvatarChangeElementTypeRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarChangeElementTypeRsp)
}
AvatarChangeElementTypeRsp::AvatarChangeElementTypeRsp(const AvatarChangeElementTypeRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.AvatarChangeElementTypeRsp)
}

void AvatarChangeElementTypeRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

AvatarChangeElementTypeRsp::~AvatarChangeElementTypeRsp() {
  // @@protoc_insertion_point(destructor:proto.AvatarChangeElementTypeRsp)
  SharedDtor();
}

void AvatarChangeElementTypeRsp::SharedDtor() {
}

void AvatarChangeElementTypeRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarChangeElementTypeRsp::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarChangeElementTypeRsp& AvatarChangeElementTypeRsp::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarChangeElementTypeRsp* AvatarChangeElementTypeRsp::New(::google::protobuf::Arena* arena) const {
  AvatarChangeElementTypeRsp* n = new AvatarChangeElementTypeRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarChangeElementTypeRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarChangeElementTypeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool AvatarChangeElementTypeRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarChangeElementTypeRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarChangeElementTypeRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarChangeElementTypeRsp)
  return false;
#undef DO_
}

void AvatarChangeElementTypeRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarChangeElementTypeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarChangeElementTypeRsp)
}

::google::protobuf::uint8* AvatarChangeElementTypeRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarChangeElementTypeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarChangeElementTypeRsp)
  return target;
}

size_t AvatarChangeElementTypeRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarChangeElementTypeRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 13;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarChangeElementTypeRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarChangeElementTypeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarChangeElementTypeRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarChangeElementTypeRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarChangeElementTypeRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarChangeElementTypeRsp)
    MergeFrom(*source);
  }
}

void AvatarChangeElementTypeRsp::MergeFrom(const AvatarChangeElementTypeRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarChangeElementTypeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void AvatarChangeElementTypeRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarChangeElementTypeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarChangeElementTypeRsp::CopyFrom(const AvatarChangeElementTypeRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarChangeElementTypeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarChangeElementTypeRsp::IsInitialized() const {
  return true;
}

void AvatarChangeElementTypeRsp::Swap(AvatarChangeElementTypeRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarChangeElementTypeRsp::InternalSwap(AvatarChangeElementTypeRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarChangeElementTypeRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarChangeElementTypeRsp

// int32 retcode = 13;
void AvatarChangeElementTypeRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 AvatarChangeElementTypeRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AvatarChangeElementTypeRsp.retcode)
  return retcode_;
}
void AvatarChangeElementTypeRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarChangeElementTypeRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

AvatarFetterDataNotify::AvatarFetterDataNotify_FetterInfoMapEntry::AvatarFetterDataNotify_FetterInfoMapEntry() {}
AvatarFetterDataNotify::AvatarFetterDataNotify_FetterInfoMapEntry::AvatarFetterDataNotify_FetterInfoMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata AvatarFetterDataNotify::AvatarFetterDataNotify_FetterInfoMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[28];
}
void AvatarFetterDataNotify::AvatarFetterDataNotify_FetterInfoMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void AvatarFetterDataNotify::AvatarFetterDataNotify_FetterInfoMapEntry::MergeFrom(const AvatarFetterDataNotify_FetterInfoMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarFetterDataNotify::kFetterInfoMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarFetterDataNotify::AvatarFetterDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarFetterDataNotify)
}
AvatarFetterDataNotify::AvatarFetterDataNotify(const AvatarFetterDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fetter_info_map_.MergeFrom(from.fetter_info_map_);
  // @@protoc_insertion_point(copy_constructor:proto.AvatarFetterDataNotify)
}

void AvatarFetterDataNotify::SharedCtor() {
  _cached_size_ = 0;
}

AvatarFetterDataNotify::~AvatarFetterDataNotify() {
  // @@protoc_insertion_point(destructor:proto.AvatarFetterDataNotify)
  SharedDtor();
}

void AvatarFetterDataNotify::SharedDtor() {
}

void AvatarFetterDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarFetterDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarFetterDataNotify& AvatarFetterDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarFetterDataNotify* AvatarFetterDataNotify::New(::google::protobuf::Arena* arena) const {
  AvatarFetterDataNotify* n = new AvatarFetterDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarFetterDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarFetterDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fetter_info_map_.Clear();
  _internal_metadata_.Clear();
}

bool AvatarFetterDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarFetterDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint64, .proto.AvatarFetterInfo> fetter_info_map = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          AvatarFetterDataNotify_FetterInfoMapEntry::Parser< ::google::protobuf::internal::MapField<
              AvatarFetterDataNotify_FetterInfoMapEntry,
              ::google::protobuf::uint64, ::proto::AvatarFetterInfo,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarFetterInfo > > parser(&fetter_info_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarFetterDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarFetterDataNotify)
  return false;
#undef DO_
}

void AvatarFetterDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarFetterDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint64, .proto.AvatarFetterInfo> fetter_info_map = 15;
  if (!this->fetter_info_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarFetterInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->fetter_info_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->fetter_info_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarFetterInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarFetterInfo >::const_iterator
          it = this->fetter_info_map().begin();
          it != this->fetter_info_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarFetterDataNotify_FetterInfoMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(fetter_info_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            15, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarFetterDataNotify_FetterInfoMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarFetterInfo >::const_iterator
          it = this->fetter_info_map().begin();
          it != this->fetter_info_map().end(); ++it) {
        entry.reset(fetter_info_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            15, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarFetterDataNotify)
}

::google::protobuf::uint8* AvatarFetterDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarFetterDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint64, .proto.AvatarFetterInfo> fetter_info_map = 15;
  if (!this->fetter_info_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarFetterInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->fetter_info_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->fetter_info_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarFetterInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarFetterInfo >::const_iterator
          it = this->fetter_info_map().begin();
          it != this->fetter_info_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarFetterDataNotify_FetterInfoMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(fetter_info_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       15, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarFetterDataNotify_FetterInfoMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarFetterInfo >::const_iterator
          it = this->fetter_info_map().begin();
          it != this->fetter_info_map().end(); ++it) {
        entry.reset(fetter_info_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       15, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarFetterDataNotify)
  return target;
}

size_t AvatarFetterDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarFetterDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint64, .proto.AvatarFetterInfo> fetter_info_map = 15;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->fetter_info_map_size());
  {
    ::google::protobuf::scoped_ptr<AvatarFetterDataNotify_FetterInfoMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarFetterInfo >::const_iterator
        it = this->fetter_info_map().begin();
        it != this->fetter_info_map().end(); ++it) {
      entry.reset(fetter_info_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarFetterDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarFetterDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarFetterDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarFetterDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarFetterDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarFetterDataNotify)
    MergeFrom(*source);
  }
}

void AvatarFetterDataNotify::MergeFrom(const AvatarFetterDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarFetterDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fetter_info_map_.MergeFrom(from.fetter_info_map_);
}

void AvatarFetterDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarFetterDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarFetterDataNotify::CopyFrom(const AvatarFetterDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarFetterDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarFetterDataNotify::IsInitialized() const {
  return true;
}

void AvatarFetterDataNotify::Swap(AvatarFetterDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarFetterDataNotify::InternalSwap(AvatarFetterDataNotify* other) {
  using std::swap;
  fetter_info_map_.Swap(&other->fetter_info_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarFetterDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarFetterDataNotify

// map<uint64, .proto.AvatarFetterInfo> fetter_info_map = 15;
int AvatarFetterDataNotify::fetter_info_map_size() const {
  return fetter_info_map_.size();
}
void AvatarFetterDataNotify::clear_fetter_info_map() {
  fetter_info_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarFetterInfo >&
AvatarFetterDataNotify::fetter_info_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarFetterDataNotify.fetter_info_map)
  return fetter_info_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarFetterInfo >*
AvatarFetterDataNotify::mutable_fetter_info_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarFetterDataNotify.fetter_info_map)
  return fetter_info_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

AvatarExpeditionDataNotify::AvatarExpeditionDataNotify_ExpeditionInfoMapEntry::AvatarExpeditionDataNotify_ExpeditionInfoMapEntry() {}
AvatarExpeditionDataNotify::AvatarExpeditionDataNotify_ExpeditionInfoMapEntry::AvatarExpeditionDataNotify_ExpeditionInfoMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata AvatarExpeditionDataNotify::AvatarExpeditionDataNotify_ExpeditionInfoMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[30];
}
void AvatarExpeditionDataNotify::AvatarExpeditionDataNotify_ExpeditionInfoMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void AvatarExpeditionDataNotify::AvatarExpeditionDataNotify_ExpeditionInfoMapEntry::MergeFrom(const AvatarExpeditionDataNotify_ExpeditionInfoMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarExpeditionDataNotify::kExpeditionInfoMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarExpeditionDataNotify::AvatarExpeditionDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarExpeditionDataNotify)
}
AvatarExpeditionDataNotify::AvatarExpeditionDataNotify(const AvatarExpeditionDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  expedition_info_map_.MergeFrom(from.expedition_info_map_);
  // @@protoc_insertion_point(copy_constructor:proto.AvatarExpeditionDataNotify)
}

void AvatarExpeditionDataNotify::SharedCtor() {
  _cached_size_ = 0;
}

AvatarExpeditionDataNotify::~AvatarExpeditionDataNotify() {
  // @@protoc_insertion_point(destructor:proto.AvatarExpeditionDataNotify)
  SharedDtor();
}

void AvatarExpeditionDataNotify::SharedDtor() {
}

void AvatarExpeditionDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarExpeditionDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarExpeditionDataNotify& AvatarExpeditionDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarExpeditionDataNotify* AvatarExpeditionDataNotify::New(::google::protobuf::Arena* arena) const {
  AvatarExpeditionDataNotify* n = new AvatarExpeditionDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarExpeditionDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarExpeditionDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  expedition_info_map_.Clear();
  _internal_metadata_.Clear();
}

bool AvatarExpeditionDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarExpeditionDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          AvatarExpeditionDataNotify_ExpeditionInfoMapEntry::Parser< ::google::protobuf::internal::MapField<
              AvatarExpeditionDataNotify_ExpeditionInfoMapEntry,
              ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo > > parser(&expedition_info_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarExpeditionDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarExpeditionDataNotify)
  return false;
#undef DO_
}

void AvatarExpeditionDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarExpeditionDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 6;
  if (!this->expedition_info_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->expedition_info_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->expedition_info_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_iterator
          it = this->expedition_info_map().begin();
          it != this->expedition_info_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarExpeditionDataNotify_ExpeditionInfoMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(expedition_info_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarExpeditionDataNotify_ExpeditionInfoMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_iterator
          it = this->expedition_info_map().begin();
          it != this->expedition_info_map().end(); ++it) {
        entry.reset(expedition_info_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarExpeditionDataNotify)
}

::google::protobuf::uint8* AvatarExpeditionDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarExpeditionDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 6;
  if (!this->expedition_info_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->expedition_info_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->expedition_info_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_iterator
          it = this->expedition_info_map().begin();
          it != this->expedition_info_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarExpeditionDataNotify_ExpeditionInfoMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(expedition_info_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarExpeditionDataNotify_ExpeditionInfoMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_iterator
          it = this->expedition_info_map().begin();
          it != this->expedition_info_map().end(); ++it) {
        entry.reset(expedition_info_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarExpeditionDataNotify)
  return target;
}

size_t AvatarExpeditionDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarExpeditionDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->expedition_info_map_size());
  {
    ::google::protobuf::scoped_ptr<AvatarExpeditionDataNotify_ExpeditionInfoMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_iterator
        it = this->expedition_info_map().begin();
        it != this->expedition_info_map().end(); ++it) {
      entry.reset(expedition_info_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarExpeditionDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarExpeditionDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarExpeditionDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarExpeditionDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarExpeditionDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarExpeditionDataNotify)
    MergeFrom(*source);
  }
}

void AvatarExpeditionDataNotify::MergeFrom(const AvatarExpeditionDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarExpeditionDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  expedition_info_map_.MergeFrom(from.expedition_info_map_);
}

void AvatarExpeditionDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarExpeditionDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarExpeditionDataNotify::CopyFrom(const AvatarExpeditionDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarExpeditionDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarExpeditionDataNotify::IsInitialized() const {
  return true;
}

void AvatarExpeditionDataNotify::Swap(AvatarExpeditionDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarExpeditionDataNotify::InternalSwap(AvatarExpeditionDataNotify* other) {
  using std::swap;
  expedition_info_map_.Swap(&other->expedition_info_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarExpeditionDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarExpeditionDataNotify

// map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 6;
int AvatarExpeditionDataNotify::expedition_info_map_size() const {
  return expedition_info_map_.size();
}
void AvatarExpeditionDataNotify::clear_expedition_info_map() {
  expedition_info_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >&
AvatarExpeditionDataNotify::expedition_info_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarExpeditionDataNotify.expedition_info_map)
  return expedition_info_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >*
AvatarExpeditionDataNotify::mutable_expedition_info_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarExpeditionDataNotify.expedition_info_map)
  return expedition_info_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarExpeditionAllDataReq::AvatarExpeditionAllDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarExpeditionAllDataReq)
}
AvatarExpeditionAllDataReq::AvatarExpeditionAllDataReq(const AvatarExpeditionAllDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.AvatarExpeditionAllDataReq)
}

void AvatarExpeditionAllDataReq::SharedCtor() {
  _cached_size_ = 0;
}

AvatarExpeditionAllDataReq::~AvatarExpeditionAllDataReq() {
  // @@protoc_insertion_point(destructor:proto.AvatarExpeditionAllDataReq)
  SharedDtor();
}

void AvatarExpeditionAllDataReq::SharedDtor() {
}

void AvatarExpeditionAllDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarExpeditionAllDataReq::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarExpeditionAllDataReq& AvatarExpeditionAllDataReq::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarExpeditionAllDataReq* AvatarExpeditionAllDataReq::New(::google::protobuf::Arena* arena) const {
  AvatarExpeditionAllDataReq* n = new AvatarExpeditionAllDataReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarExpeditionAllDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarExpeditionAllDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool AvatarExpeditionAllDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarExpeditionAllDataReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarExpeditionAllDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarExpeditionAllDataReq)
  return false;
#undef DO_
}

void AvatarExpeditionAllDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarExpeditionAllDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarExpeditionAllDataReq)
}

::google::protobuf::uint8* AvatarExpeditionAllDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarExpeditionAllDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarExpeditionAllDataReq)
  return target;
}

size_t AvatarExpeditionAllDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarExpeditionAllDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarExpeditionAllDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarExpeditionAllDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarExpeditionAllDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarExpeditionAllDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarExpeditionAllDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarExpeditionAllDataReq)
    MergeFrom(*source);
  }
}

void AvatarExpeditionAllDataReq::MergeFrom(const AvatarExpeditionAllDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarExpeditionAllDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AvatarExpeditionAllDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarExpeditionAllDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarExpeditionAllDataReq::CopyFrom(const AvatarExpeditionAllDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarExpeditionAllDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarExpeditionAllDataReq::IsInitialized() const {
  return true;
}

void AvatarExpeditionAllDataReq::Swap(AvatarExpeditionAllDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarExpeditionAllDataReq::InternalSwap(AvatarExpeditionAllDataReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarExpeditionAllDataReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarExpeditionAllDataReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

AvatarExpeditionAllDataRsp::AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry::AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry() {}
AvatarExpeditionAllDataRsp::AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry::AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata AvatarExpeditionAllDataRsp::AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[33];
}
void AvatarExpeditionAllDataRsp::AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void AvatarExpeditionAllDataRsp::AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry::MergeFrom(const AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarExpeditionAllDataRsp::kOpenExpeditionListFieldNumber;
const int AvatarExpeditionAllDataRsp::kRetcodeFieldNumber;
const int AvatarExpeditionAllDataRsp::kExpeditionCountLimitFieldNumber;
const int AvatarExpeditionAllDataRsp::kExpeditionInfoMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarExpeditionAllDataRsp::AvatarExpeditionAllDataRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarExpeditionAllDataRsp)
}
AvatarExpeditionAllDataRsp::AvatarExpeditionAllDataRsp(const AvatarExpeditionAllDataRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      open_expedition_list_(from.open_expedition_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  expedition_info_map_.MergeFrom(from.expedition_info_map_);
  ::memcpy(&expedition_count_limit_, &from.expedition_count_limit_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&expedition_count_limit_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarExpeditionAllDataRsp)
}

void AvatarExpeditionAllDataRsp::SharedCtor() {
  ::memset(&expedition_count_limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&expedition_count_limit_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

AvatarExpeditionAllDataRsp::~AvatarExpeditionAllDataRsp() {
  // @@protoc_insertion_point(destructor:proto.AvatarExpeditionAllDataRsp)
  SharedDtor();
}

void AvatarExpeditionAllDataRsp::SharedDtor() {
}

void AvatarExpeditionAllDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarExpeditionAllDataRsp::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarExpeditionAllDataRsp& AvatarExpeditionAllDataRsp::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarExpeditionAllDataRsp* AvatarExpeditionAllDataRsp::New(::google::protobuf::Arena* arena) const {
  AvatarExpeditionAllDataRsp* n = new AvatarExpeditionAllDataRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarExpeditionAllDataRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarExpeditionAllDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  open_expedition_list_.Clear();
  expedition_info_map_.Clear();
  ::memset(&expedition_count_limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&expedition_count_limit_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool AvatarExpeditionAllDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarExpeditionAllDataRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 open_expedition_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_open_expedition_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_open_expedition_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry::Parser< ::google::protobuf::internal::MapField<
              AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry,
              ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo > > parser(&expedition_info_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 expedition_count_limit = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expedition_count_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarExpeditionAllDataRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarExpeditionAllDataRsp)
  return false;
#undef DO_
}

void AvatarExpeditionAllDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarExpeditionAllDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 open_expedition_list = 3;
  if (this->open_expedition_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _open_expedition_list_cached_byte_size_));
  }
  for (int i = 0, n = this->open_expedition_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->open_expedition_list(i), output);
  }

  // map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 4;
  if (!this->expedition_info_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->expedition_info_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->expedition_info_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_iterator
          it = this->expedition_info_map().begin();
          it != this->expedition_info_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(expedition_info_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_iterator
          it = this->expedition_info_map().begin();
          it != this->expedition_info_map().end(); ++it) {
        entry.reset(expedition_info_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    }
  }

  // uint32 expedition_count_limit = 12;
  if (this->expedition_count_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->expedition_count_limit(), output);
  }

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarExpeditionAllDataRsp)
}

::google::protobuf::uint8* AvatarExpeditionAllDataRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarExpeditionAllDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 open_expedition_list = 3;
  if (this->open_expedition_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _open_expedition_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->open_expedition_list_, target);
  }

  // map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 4;
  if (!this->expedition_info_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->expedition_info_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->expedition_info_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_iterator
          it = this->expedition_info_map().begin();
          it != this->expedition_info_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(expedition_info_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_iterator
          it = this->expedition_info_map().begin();
          it != this->expedition_info_map().end(); ++it) {
        entry.reset(expedition_info_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    }
  }

  // uint32 expedition_count_limit = 12;
  if (this->expedition_count_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->expedition_count_limit(), target);
  }

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarExpeditionAllDataRsp)
  return target;
}

size_t AvatarExpeditionAllDataRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarExpeditionAllDataRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 open_expedition_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->open_expedition_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _open_expedition_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->expedition_info_map_size());
  {
    ::google::protobuf::scoped_ptr<AvatarExpeditionAllDataRsp_ExpeditionInfoMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_iterator
        it = this->expedition_info_map().begin();
        it != this->expedition_info_map().end(); ++it) {
      entry.reset(expedition_info_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint32 expedition_count_limit = 12;
  if (this->expedition_count_limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->expedition_count_limit());
  }

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarExpeditionAllDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarExpeditionAllDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarExpeditionAllDataRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarExpeditionAllDataRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarExpeditionAllDataRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarExpeditionAllDataRsp)
    MergeFrom(*source);
  }
}

void AvatarExpeditionAllDataRsp::MergeFrom(const AvatarExpeditionAllDataRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarExpeditionAllDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  open_expedition_list_.MergeFrom(from.open_expedition_list_);
  expedition_info_map_.MergeFrom(from.expedition_info_map_);
  if (from.expedition_count_limit() != 0) {
    set_expedition_count_limit(from.expedition_count_limit());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void AvatarExpeditionAllDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarExpeditionAllDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarExpeditionAllDataRsp::CopyFrom(const AvatarExpeditionAllDataRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarExpeditionAllDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarExpeditionAllDataRsp::IsInitialized() const {
  return true;
}

void AvatarExpeditionAllDataRsp::Swap(AvatarExpeditionAllDataRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarExpeditionAllDataRsp::InternalSwap(AvatarExpeditionAllDataRsp* other) {
  using std::swap;
  open_expedition_list_.InternalSwap(&other->open_expedition_list_);
  expedition_info_map_.Swap(&other->expedition_info_map_);
  swap(expedition_count_limit_, other->expedition_count_limit_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarExpeditionAllDataRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarExpeditionAllDataRsp

// repeated uint32 open_expedition_list = 3;
int AvatarExpeditionAllDataRsp::open_expedition_list_size() const {
  return open_expedition_list_.size();
}
void AvatarExpeditionAllDataRsp::clear_open_expedition_list() {
  open_expedition_list_.Clear();
}
::google::protobuf::uint32 AvatarExpeditionAllDataRsp::open_expedition_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionAllDataRsp.open_expedition_list)
  return open_expedition_list_.Get(index);
}
void AvatarExpeditionAllDataRsp::set_open_expedition_list(int index, ::google::protobuf::uint32 value) {
  open_expedition_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionAllDataRsp.open_expedition_list)
}
void AvatarExpeditionAllDataRsp::add_open_expedition_list(::google::protobuf::uint32 value) {
  open_expedition_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarExpeditionAllDataRsp.open_expedition_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AvatarExpeditionAllDataRsp::open_expedition_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarExpeditionAllDataRsp.open_expedition_list)
  return open_expedition_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AvatarExpeditionAllDataRsp::mutable_open_expedition_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarExpeditionAllDataRsp.open_expedition_list)
  return &open_expedition_list_;
}

// int32 retcode = 15;
void AvatarExpeditionAllDataRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 AvatarExpeditionAllDataRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionAllDataRsp.retcode)
  return retcode_;
}
void AvatarExpeditionAllDataRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionAllDataRsp.retcode)
}

// uint32 expedition_count_limit = 12;
void AvatarExpeditionAllDataRsp::clear_expedition_count_limit() {
  expedition_count_limit_ = 0u;
}
::google::protobuf::uint32 AvatarExpeditionAllDataRsp::expedition_count_limit() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionAllDataRsp.expedition_count_limit)
  return expedition_count_limit_;
}
void AvatarExpeditionAllDataRsp::set_expedition_count_limit(::google::protobuf::uint32 value) {
  
  expedition_count_limit_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionAllDataRsp.expedition_count_limit)
}

// map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 4;
int AvatarExpeditionAllDataRsp::expedition_info_map_size() const {
  return expedition_info_map_.size();
}
void AvatarExpeditionAllDataRsp::clear_expedition_info_map() {
  expedition_info_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >&
AvatarExpeditionAllDataRsp::expedition_info_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarExpeditionAllDataRsp.expedition_info_map)
  return expedition_info_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >*
AvatarExpeditionAllDataRsp::mutable_expedition_info_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarExpeditionAllDataRsp.expedition_info_map)
  return expedition_info_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarExpeditionStartReq::kExpIdFieldNumber;
const int AvatarExpeditionStartReq::kAvatarGuidFieldNumber;
const int AvatarExpeditionStartReq::kHourTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarExpeditionStartReq::AvatarExpeditionStartReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarExpeditionStartReq)
}
AvatarExpeditionStartReq::AvatarExpeditionStartReq(const AvatarExpeditionStartReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hour_time_, &from.hour_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&avatar_guid_) -
    reinterpret_cast<char*>(&hour_time_)) + sizeof(avatar_guid_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarExpeditionStartReq)
}

void AvatarExpeditionStartReq::SharedCtor() {
  ::memset(&hour_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avatar_guid_) -
      reinterpret_cast<char*>(&hour_time_)) + sizeof(avatar_guid_));
  _cached_size_ = 0;
}

AvatarExpeditionStartReq::~AvatarExpeditionStartReq() {
  // @@protoc_insertion_point(destructor:proto.AvatarExpeditionStartReq)
  SharedDtor();
}

void AvatarExpeditionStartReq::SharedDtor() {
}

void AvatarExpeditionStartReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarExpeditionStartReq::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarExpeditionStartReq& AvatarExpeditionStartReq::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarExpeditionStartReq* AvatarExpeditionStartReq::New(::google::protobuf::Arena* arena) const {
  AvatarExpeditionStartReq* n = new AvatarExpeditionStartReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarExpeditionStartReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarExpeditionStartReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&hour_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avatar_guid_) -
      reinterpret_cast<char*>(&hour_time_)) + sizeof(avatar_guid_));
  _internal_metadata_.Clear();
}

bool AvatarExpeditionStartReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarExpeditionStartReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 hour_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hour_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 exp_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exp_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 avatar_guid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarExpeditionStartReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarExpeditionStartReq)
  return false;
#undef DO_
}

void AvatarExpeditionStartReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarExpeditionStartReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 hour_time = 2;
  if (this->hour_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hour_time(), output);
  }

  // uint32 exp_id = 9;
  if (this->exp_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->exp_id(), output);
  }

  // uint64 avatar_guid = 10;
  if (this->avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->avatar_guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarExpeditionStartReq)
}

::google::protobuf::uint8* AvatarExpeditionStartReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarExpeditionStartReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 hour_time = 2;
  if (this->hour_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hour_time(), target);
  }

  // uint32 exp_id = 9;
  if (this->exp_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->exp_id(), target);
  }

  // uint64 avatar_guid = 10;
  if (this->avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->avatar_guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarExpeditionStartReq)
  return target;
}

size_t AvatarExpeditionStartReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarExpeditionStartReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 hour_time = 2;
  if (this->hour_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hour_time());
  }

  // uint32 exp_id = 9;
  if (this->exp_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exp_id());
  }

  // uint64 avatar_guid = 10;
  if (this->avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->avatar_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarExpeditionStartReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarExpeditionStartReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarExpeditionStartReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarExpeditionStartReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarExpeditionStartReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarExpeditionStartReq)
    MergeFrom(*source);
  }
}

void AvatarExpeditionStartReq::MergeFrom(const AvatarExpeditionStartReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarExpeditionStartReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hour_time() != 0) {
    set_hour_time(from.hour_time());
  }
  if (from.exp_id() != 0) {
    set_exp_id(from.exp_id());
  }
  if (from.avatar_guid() != 0) {
    set_avatar_guid(from.avatar_guid());
  }
}

void AvatarExpeditionStartReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarExpeditionStartReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarExpeditionStartReq::CopyFrom(const AvatarExpeditionStartReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarExpeditionStartReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarExpeditionStartReq::IsInitialized() const {
  return true;
}

void AvatarExpeditionStartReq::Swap(AvatarExpeditionStartReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarExpeditionStartReq::InternalSwap(AvatarExpeditionStartReq* other) {
  using std::swap;
  swap(hour_time_, other->hour_time_);
  swap(exp_id_, other->exp_id_);
  swap(avatar_guid_, other->avatar_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarExpeditionStartReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarExpeditionStartReq

// uint32 exp_id = 9;
void AvatarExpeditionStartReq::clear_exp_id() {
  exp_id_ = 0u;
}
::google::protobuf::uint32 AvatarExpeditionStartReq::exp_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionStartReq.exp_id)
  return exp_id_;
}
void AvatarExpeditionStartReq::set_exp_id(::google::protobuf::uint32 value) {
  
  exp_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionStartReq.exp_id)
}

// uint64 avatar_guid = 10;
void AvatarExpeditionStartReq::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarExpeditionStartReq::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionStartReq.avatar_guid)
  return avatar_guid_;
}
void AvatarExpeditionStartReq::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionStartReq.avatar_guid)
}

// uint32 hour_time = 2;
void AvatarExpeditionStartReq::clear_hour_time() {
  hour_time_ = 0u;
}
::google::protobuf::uint32 AvatarExpeditionStartReq::hour_time() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionStartReq.hour_time)
  return hour_time_;
}
void AvatarExpeditionStartReq::set_hour_time(::google::protobuf::uint32 value) {
  
  hour_time_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionStartReq.hour_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

AvatarExpeditionStartRsp::AvatarExpeditionStartRsp_ExpeditionInfoMapEntry::AvatarExpeditionStartRsp_ExpeditionInfoMapEntry() {}
AvatarExpeditionStartRsp::AvatarExpeditionStartRsp_ExpeditionInfoMapEntry::AvatarExpeditionStartRsp_ExpeditionInfoMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata AvatarExpeditionStartRsp::AvatarExpeditionStartRsp_ExpeditionInfoMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[36];
}
void AvatarExpeditionStartRsp::AvatarExpeditionStartRsp_ExpeditionInfoMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void AvatarExpeditionStartRsp::AvatarExpeditionStartRsp_ExpeditionInfoMapEntry::MergeFrom(const AvatarExpeditionStartRsp_ExpeditionInfoMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarExpeditionStartRsp::kExpeditionInfoMapFieldNumber;
const int AvatarExpeditionStartRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarExpeditionStartRsp::AvatarExpeditionStartRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarExpeditionStartRsp)
}
AvatarExpeditionStartRsp::AvatarExpeditionStartRsp(const AvatarExpeditionStartRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  expedition_info_map_.MergeFrom(from.expedition_info_map_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.AvatarExpeditionStartRsp)
}

void AvatarExpeditionStartRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

AvatarExpeditionStartRsp::~AvatarExpeditionStartRsp() {
  // @@protoc_insertion_point(destructor:proto.AvatarExpeditionStartRsp)
  SharedDtor();
}

void AvatarExpeditionStartRsp::SharedDtor() {
}

void AvatarExpeditionStartRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarExpeditionStartRsp::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarExpeditionStartRsp& AvatarExpeditionStartRsp::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarExpeditionStartRsp* AvatarExpeditionStartRsp::New(::google::protobuf::Arena* arena) const {
  AvatarExpeditionStartRsp* n = new AvatarExpeditionStartRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarExpeditionStartRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarExpeditionStartRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  expedition_info_map_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool AvatarExpeditionStartRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarExpeditionStartRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          AvatarExpeditionStartRsp_ExpeditionInfoMapEntry::Parser< ::google::protobuf::internal::MapField<
              AvatarExpeditionStartRsp_ExpeditionInfoMapEntry,
              ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo > > parser(&expedition_info_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarExpeditionStartRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarExpeditionStartRsp)
  return false;
#undef DO_
}

void AvatarExpeditionStartRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarExpeditionStartRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 2;
  if (!this->expedition_info_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->expedition_info_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->expedition_info_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_iterator
          it = this->expedition_info_map().begin();
          it != this->expedition_info_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarExpeditionStartRsp_ExpeditionInfoMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(expedition_info_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarExpeditionStartRsp_ExpeditionInfoMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_iterator
          it = this->expedition_info_map().begin();
          it != this->expedition_info_map().end(); ++it) {
        entry.reset(expedition_info_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    }
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarExpeditionStartRsp)
}

::google::protobuf::uint8* AvatarExpeditionStartRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarExpeditionStartRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 2;
  if (!this->expedition_info_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->expedition_info_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->expedition_info_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_iterator
          it = this->expedition_info_map().begin();
          it != this->expedition_info_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarExpeditionStartRsp_ExpeditionInfoMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(expedition_info_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarExpeditionStartRsp_ExpeditionInfoMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_iterator
          it = this->expedition_info_map().begin();
          it != this->expedition_info_map().end(); ++it) {
        entry.reset(expedition_info_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    }
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarExpeditionStartRsp)
  return target;
}

size_t AvatarExpeditionStartRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarExpeditionStartRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->expedition_info_map_size());
  {
    ::google::protobuf::scoped_ptr<AvatarExpeditionStartRsp_ExpeditionInfoMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_iterator
        it = this->expedition_info_map().begin();
        it != this->expedition_info_map().end(); ++it) {
      entry.reset(expedition_info_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarExpeditionStartRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarExpeditionStartRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarExpeditionStartRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarExpeditionStartRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarExpeditionStartRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarExpeditionStartRsp)
    MergeFrom(*source);
  }
}

void AvatarExpeditionStartRsp::MergeFrom(const AvatarExpeditionStartRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarExpeditionStartRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  expedition_info_map_.MergeFrom(from.expedition_info_map_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void AvatarExpeditionStartRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarExpeditionStartRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarExpeditionStartRsp::CopyFrom(const AvatarExpeditionStartRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarExpeditionStartRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarExpeditionStartRsp::IsInitialized() const {
  return true;
}

void AvatarExpeditionStartRsp::Swap(AvatarExpeditionStartRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarExpeditionStartRsp::InternalSwap(AvatarExpeditionStartRsp* other) {
  using std::swap;
  expedition_info_map_.Swap(&other->expedition_info_map_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarExpeditionStartRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarExpeditionStartRsp

// map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 2;
int AvatarExpeditionStartRsp::expedition_info_map_size() const {
  return expedition_info_map_.size();
}
void AvatarExpeditionStartRsp::clear_expedition_info_map() {
  expedition_info_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >&
AvatarExpeditionStartRsp::expedition_info_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarExpeditionStartRsp.expedition_info_map)
  return expedition_info_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >*
AvatarExpeditionStartRsp::mutable_expedition_info_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarExpeditionStartRsp.expedition_info_map)
  return expedition_info_map_.MutableMap();
}

// int32 retcode = 5;
void AvatarExpeditionStartRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 AvatarExpeditionStartRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionStartRsp.retcode)
  return retcode_;
}
void AvatarExpeditionStartRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionStartRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarExpeditionCallBackReq::kAvatarGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarExpeditionCallBackReq::AvatarExpeditionCallBackReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarExpeditionCallBackReq)
}
AvatarExpeditionCallBackReq::AvatarExpeditionCallBackReq(const AvatarExpeditionCallBackReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      avatar_guid_(from.avatar_guid_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.AvatarExpeditionCallBackReq)
}

void AvatarExpeditionCallBackReq::SharedCtor() {
  _cached_size_ = 0;
}

AvatarExpeditionCallBackReq::~AvatarExpeditionCallBackReq() {
  // @@protoc_insertion_point(destructor:proto.AvatarExpeditionCallBackReq)
  SharedDtor();
}

void AvatarExpeditionCallBackReq::SharedDtor() {
}

void AvatarExpeditionCallBackReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarExpeditionCallBackReq::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarExpeditionCallBackReq& AvatarExpeditionCallBackReq::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarExpeditionCallBackReq* AvatarExpeditionCallBackReq::New(::google::protobuf::Arena* arena) const {
  AvatarExpeditionCallBackReq* n = new AvatarExpeditionCallBackReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarExpeditionCallBackReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarExpeditionCallBackReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  avatar_guid_.Clear();
  _internal_metadata_.Clear();
}

bool AvatarExpeditionCallBackReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarExpeditionCallBackReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 avatar_guid = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_avatar_guid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 106u, input, this->mutable_avatar_guid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarExpeditionCallBackReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarExpeditionCallBackReq)
  return false;
#undef DO_
}

void AvatarExpeditionCallBackReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarExpeditionCallBackReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 avatar_guid = 13;
  if (this->avatar_guid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _avatar_guid_cached_byte_size_));
  }
  for (int i = 0, n = this->avatar_guid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->avatar_guid(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarExpeditionCallBackReq)
}

::google::protobuf::uint8* AvatarExpeditionCallBackReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarExpeditionCallBackReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 avatar_guid = 13;
  if (this->avatar_guid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _avatar_guid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->avatar_guid_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarExpeditionCallBackReq)
  return target;
}

size_t AvatarExpeditionCallBackReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarExpeditionCallBackReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 avatar_guid = 13;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->avatar_guid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _avatar_guid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarExpeditionCallBackReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarExpeditionCallBackReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarExpeditionCallBackReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarExpeditionCallBackReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarExpeditionCallBackReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarExpeditionCallBackReq)
    MergeFrom(*source);
  }
}

void AvatarExpeditionCallBackReq::MergeFrom(const AvatarExpeditionCallBackReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarExpeditionCallBackReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  avatar_guid_.MergeFrom(from.avatar_guid_);
}

void AvatarExpeditionCallBackReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarExpeditionCallBackReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarExpeditionCallBackReq::CopyFrom(const AvatarExpeditionCallBackReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarExpeditionCallBackReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarExpeditionCallBackReq::IsInitialized() const {
  return true;
}

void AvatarExpeditionCallBackReq::Swap(AvatarExpeditionCallBackReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarExpeditionCallBackReq::InternalSwap(AvatarExpeditionCallBackReq* other) {
  using std::swap;
  avatar_guid_.InternalSwap(&other->avatar_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarExpeditionCallBackReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarExpeditionCallBackReq

// repeated uint64 avatar_guid = 13;
int AvatarExpeditionCallBackReq::avatar_guid_size() const {
  return avatar_guid_.size();
}
void AvatarExpeditionCallBackReq::clear_avatar_guid() {
  avatar_guid_.Clear();
}
::google::protobuf::uint64 AvatarExpeditionCallBackReq::avatar_guid(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionCallBackReq.avatar_guid)
  return avatar_guid_.Get(index);
}
void AvatarExpeditionCallBackReq::set_avatar_guid(int index, ::google::protobuf::uint64 value) {
  avatar_guid_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionCallBackReq.avatar_guid)
}
void AvatarExpeditionCallBackReq::add_avatar_guid(::google::protobuf::uint64 value) {
  avatar_guid_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarExpeditionCallBackReq.avatar_guid)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
AvatarExpeditionCallBackReq::avatar_guid() const {
  // @@protoc_insertion_point(field_list:proto.AvatarExpeditionCallBackReq.avatar_guid)
  return avatar_guid_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
AvatarExpeditionCallBackReq::mutable_avatar_guid() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarExpeditionCallBackReq.avatar_guid)
  return &avatar_guid_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

AvatarExpeditionCallBackRsp::AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry::AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry() {}
AvatarExpeditionCallBackRsp::AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry::AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata AvatarExpeditionCallBackRsp::AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[39];
}
void AvatarExpeditionCallBackRsp::AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void AvatarExpeditionCallBackRsp::AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry::MergeFrom(const AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarExpeditionCallBackRsp::kExpeditionInfoMapFieldNumber;
const int AvatarExpeditionCallBackRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarExpeditionCallBackRsp::AvatarExpeditionCallBackRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarExpeditionCallBackRsp)
}
AvatarExpeditionCallBackRsp::AvatarExpeditionCallBackRsp(const AvatarExpeditionCallBackRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  expedition_info_map_.MergeFrom(from.expedition_info_map_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.AvatarExpeditionCallBackRsp)
}

void AvatarExpeditionCallBackRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

AvatarExpeditionCallBackRsp::~AvatarExpeditionCallBackRsp() {
  // @@protoc_insertion_point(destructor:proto.AvatarExpeditionCallBackRsp)
  SharedDtor();
}

void AvatarExpeditionCallBackRsp::SharedDtor() {
}

void AvatarExpeditionCallBackRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarExpeditionCallBackRsp::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarExpeditionCallBackRsp& AvatarExpeditionCallBackRsp::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarExpeditionCallBackRsp* AvatarExpeditionCallBackRsp::New(::google::protobuf::Arena* arena) const {
  AvatarExpeditionCallBackRsp* n = new AvatarExpeditionCallBackRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarExpeditionCallBackRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarExpeditionCallBackRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  expedition_info_map_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool AvatarExpeditionCallBackRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarExpeditionCallBackRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry::Parser< ::google::protobuf::internal::MapField<
              AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry,
              ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo > > parser(&expedition_info_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarExpeditionCallBackRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarExpeditionCallBackRsp)
  return false;
#undef DO_
}

void AvatarExpeditionCallBackRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarExpeditionCallBackRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->retcode(), output);
  }

  // map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 9;
  if (!this->expedition_info_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->expedition_info_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->expedition_info_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_iterator
          it = this->expedition_info_map().begin();
          it != this->expedition_info_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(expedition_info_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            9, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_iterator
          it = this->expedition_info_map().begin();
          it != this->expedition_info_map().end(); ++it) {
        entry.reset(expedition_info_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            9, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarExpeditionCallBackRsp)
}

::google::protobuf::uint8* AvatarExpeditionCallBackRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarExpeditionCallBackRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->retcode(), target);
  }

  // map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 9;
  if (!this->expedition_info_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->expedition_info_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->expedition_info_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_iterator
          it = this->expedition_info_map().begin();
          it != this->expedition_info_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(expedition_info_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       9, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_iterator
          it = this->expedition_info_map().begin();
          it != this->expedition_info_map().end(); ++it) {
        entry.reset(expedition_info_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       9, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarExpeditionCallBackRsp)
  return target;
}

size_t AvatarExpeditionCallBackRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarExpeditionCallBackRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 9;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->expedition_info_map_size());
  {
    ::google::protobuf::scoped_ptr<AvatarExpeditionCallBackRsp_ExpeditionInfoMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_iterator
        it = this->expedition_info_map().begin();
        it != this->expedition_info_map().end(); ++it) {
      entry.reset(expedition_info_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarExpeditionCallBackRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarExpeditionCallBackRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarExpeditionCallBackRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarExpeditionCallBackRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarExpeditionCallBackRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarExpeditionCallBackRsp)
    MergeFrom(*source);
  }
}

void AvatarExpeditionCallBackRsp::MergeFrom(const AvatarExpeditionCallBackRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarExpeditionCallBackRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  expedition_info_map_.MergeFrom(from.expedition_info_map_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void AvatarExpeditionCallBackRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarExpeditionCallBackRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarExpeditionCallBackRsp::CopyFrom(const AvatarExpeditionCallBackRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarExpeditionCallBackRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarExpeditionCallBackRsp::IsInitialized() const {
  return true;
}

void AvatarExpeditionCallBackRsp::Swap(AvatarExpeditionCallBackRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarExpeditionCallBackRsp::InternalSwap(AvatarExpeditionCallBackRsp* other) {
  using std::swap;
  expedition_info_map_.Swap(&other->expedition_info_map_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarExpeditionCallBackRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarExpeditionCallBackRsp

// map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 9;
int AvatarExpeditionCallBackRsp::expedition_info_map_size() const {
  return expedition_info_map_.size();
}
void AvatarExpeditionCallBackRsp::clear_expedition_info_map() {
  expedition_info_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >&
AvatarExpeditionCallBackRsp::expedition_info_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarExpeditionCallBackRsp.expedition_info_map)
  return expedition_info_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >*
AvatarExpeditionCallBackRsp::mutable_expedition_info_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarExpeditionCallBackRsp.expedition_info_map)
  return expedition_info_map_.MutableMap();
}

// int32 retcode = 5;
void AvatarExpeditionCallBackRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 AvatarExpeditionCallBackRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionCallBackRsp.retcode)
  return retcode_;
}
void AvatarExpeditionCallBackRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionCallBackRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarExpeditionGetRewardReq::kAvatarGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarExpeditionGetRewardReq::AvatarExpeditionGetRewardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarExpeditionGetRewardReq)
}
AvatarExpeditionGetRewardReq::AvatarExpeditionGetRewardReq(const AvatarExpeditionGetRewardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  avatar_guid_ = from.avatar_guid_;
  // @@protoc_insertion_point(copy_constructor:proto.AvatarExpeditionGetRewardReq)
}

void AvatarExpeditionGetRewardReq::SharedCtor() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

AvatarExpeditionGetRewardReq::~AvatarExpeditionGetRewardReq() {
  // @@protoc_insertion_point(destructor:proto.AvatarExpeditionGetRewardReq)
  SharedDtor();
}

void AvatarExpeditionGetRewardReq::SharedDtor() {
}

void AvatarExpeditionGetRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarExpeditionGetRewardReq::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarExpeditionGetRewardReq& AvatarExpeditionGetRewardReq::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarExpeditionGetRewardReq* AvatarExpeditionGetRewardReq::New(::google::protobuf::Arena* arena) const {
  AvatarExpeditionGetRewardReq* n = new AvatarExpeditionGetRewardReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarExpeditionGetRewardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarExpeditionGetRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  avatar_guid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool AvatarExpeditionGetRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarExpeditionGetRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 avatar_guid = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarExpeditionGetRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarExpeditionGetRewardReq)
  return false;
#undef DO_
}

void AvatarExpeditionGetRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarExpeditionGetRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 avatar_guid = 14;
  if (this->avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(14, this->avatar_guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarExpeditionGetRewardReq)
}

::google::protobuf::uint8* AvatarExpeditionGetRewardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarExpeditionGetRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 avatar_guid = 14;
  if (this->avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(14, this->avatar_guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarExpeditionGetRewardReq)
  return target;
}

size_t AvatarExpeditionGetRewardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarExpeditionGetRewardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 avatar_guid = 14;
  if (this->avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->avatar_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarExpeditionGetRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarExpeditionGetRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarExpeditionGetRewardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarExpeditionGetRewardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarExpeditionGetRewardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarExpeditionGetRewardReq)
    MergeFrom(*source);
  }
}

void AvatarExpeditionGetRewardReq::MergeFrom(const AvatarExpeditionGetRewardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarExpeditionGetRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_guid() != 0) {
    set_avatar_guid(from.avatar_guid());
  }
}

void AvatarExpeditionGetRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarExpeditionGetRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarExpeditionGetRewardReq::CopyFrom(const AvatarExpeditionGetRewardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarExpeditionGetRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarExpeditionGetRewardReq::IsInitialized() const {
  return true;
}

void AvatarExpeditionGetRewardReq::Swap(AvatarExpeditionGetRewardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarExpeditionGetRewardReq::InternalSwap(AvatarExpeditionGetRewardReq* other) {
  using std::swap;
  swap(avatar_guid_, other->avatar_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarExpeditionGetRewardReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarExpeditionGetRewardReq

// uint64 avatar_guid = 14;
void AvatarExpeditionGetRewardReq::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarExpeditionGetRewardReq::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionGetRewardReq.avatar_guid)
  return avatar_guid_;
}
void AvatarExpeditionGetRewardReq::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionGetRewardReq.avatar_guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

AvatarExpeditionGetRewardRsp::AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry::AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry() {}
AvatarExpeditionGetRewardRsp::AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry::AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata AvatarExpeditionGetRewardRsp::AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[42];
}
void AvatarExpeditionGetRewardRsp::AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void AvatarExpeditionGetRewardRsp::AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry::MergeFrom(const AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarExpeditionGetRewardRsp::kExtraItemListFieldNumber;
const int AvatarExpeditionGetRewardRsp::kItemListFieldNumber;
const int AvatarExpeditionGetRewardRsp::kExpeditionInfoMapFieldNumber;
const int AvatarExpeditionGetRewardRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarExpeditionGetRewardRsp::AvatarExpeditionGetRewardRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarExpeditionGetRewardRsp)
}
AvatarExpeditionGetRewardRsp::AvatarExpeditionGetRewardRsp(const AvatarExpeditionGetRewardRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_list_(from.item_list_),
      extra_item_list_(from.extra_item_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  expedition_info_map_.MergeFrom(from.expedition_info_map_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.AvatarExpeditionGetRewardRsp)
}

void AvatarExpeditionGetRewardRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

AvatarExpeditionGetRewardRsp::~AvatarExpeditionGetRewardRsp() {
  // @@protoc_insertion_point(destructor:proto.AvatarExpeditionGetRewardRsp)
  SharedDtor();
}

void AvatarExpeditionGetRewardRsp::SharedDtor() {
}

void AvatarExpeditionGetRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarExpeditionGetRewardRsp::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarExpeditionGetRewardRsp& AvatarExpeditionGetRewardRsp::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarExpeditionGetRewardRsp* AvatarExpeditionGetRewardRsp::New(::google::protobuf::Arena* arena) const {
  AvatarExpeditionGetRewardRsp* n = new AvatarExpeditionGetRewardRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarExpeditionGetRewardRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarExpeditionGetRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_list_.Clear();
  extra_item_list_.Clear();
  expedition_info_map_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool AvatarExpeditionGetRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarExpeditionGetRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ItemParam item_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ItemParam extra_item_list = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_extra_item_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry::Parser< ::google::protobuf::internal::MapField<
              AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry,
              ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo > > parser(&expedition_info_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarExpeditionGetRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarExpeditionGetRewardRsp)
  return false;
#undef DO_
}

void AvatarExpeditionGetRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarExpeditionGetRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 2;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->retcode(), output);
  }

  // repeated .proto.ItemParam item_list = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->item_list(static_cast<int>(i)), output);
  }

  // repeated .proto.ItemParam extra_item_list = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extra_item_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->extra_item_list(static_cast<int>(i)), output);
  }

  // map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 12;
  if (!this->expedition_info_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->expedition_info_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->expedition_info_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_iterator
          it = this->expedition_info_map().begin();
          it != this->expedition_info_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(expedition_info_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            12, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_iterator
          it = this->expedition_info_map().begin();
          it != this->expedition_info_map().end(); ++it) {
        entry.reset(expedition_info_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            12, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarExpeditionGetRewardRsp)
}

::google::protobuf::uint8* AvatarExpeditionGetRewardRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarExpeditionGetRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 2;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->retcode(), target);
  }

  // repeated .proto.ItemParam item_list = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->item_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.ItemParam extra_item_list = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extra_item_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->extra_item_list(static_cast<int>(i)), deterministic, target);
  }

  // map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 12;
  if (!this->expedition_info_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->expedition_info_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->expedition_info_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_iterator
          it = this->expedition_info_map().begin();
          it != this->expedition_info_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(expedition_info_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       12, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_iterator
          it = this->expedition_info_map().begin();
          it != this->expedition_info_map().end(); ++it) {
        entry.reset(expedition_info_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       12, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarExpeditionGetRewardRsp)
  return target;
}

size_t AvatarExpeditionGetRewardRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarExpeditionGetRewardRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ItemParam item_list = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->item_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.ItemParam extra_item_list = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->extra_item_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->extra_item_list(static_cast<int>(i)));
    }
  }

  // map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 12;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->expedition_info_map_size());
  {
    ::google::protobuf::scoped_ptr<AvatarExpeditionGetRewardRsp_ExpeditionInfoMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >::const_iterator
        it = this->expedition_info_map().begin();
        it != this->expedition_info_map().end(); ++it) {
      entry.reset(expedition_info_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // int32 retcode = 2;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarExpeditionGetRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarExpeditionGetRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarExpeditionGetRewardRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarExpeditionGetRewardRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarExpeditionGetRewardRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarExpeditionGetRewardRsp)
    MergeFrom(*source);
  }
}

void AvatarExpeditionGetRewardRsp::MergeFrom(const AvatarExpeditionGetRewardRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarExpeditionGetRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_list_.MergeFrom(from.item_list_);
  extra_item_list_.MergeFrom(from.extra_item_list_);
  expedition_info_map_.MergeFrom(from.expedition_info_map_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void AvatarExpeditionGetRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarExpeditionGetRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarExpeditionGetRewardRsp::CopyFrom(const AvatarExpeditionGetRewardRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarExpeditionGetRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarExpeditionGetRewardRsp::IsInitialized() const {
  return true;
}

void AvatarExpeditionGetRewardRsp::Swap(AvatarExpeditionGetRewardRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarExpeditionGetRewardRsp::InternalSwap(AvatarExpeditionGetRewardRsp* other) {
  using std::swap;
  item_list_.InternalSwap(&other->item_list_);
  extra_item_list_.InternalSwap(&other->extra_item_list_);
  expedition_info_map_.Swap(&other->expedition_info_map_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarExpeditionGetRewardRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarExpeditionGetRewardRsp

// repeated .proto.ItemParam extra_item_list = 9;
int AvatarExpeditionGetRewardRsp::extra_item_list_size() const {
  return extra_item_list_.size();
}
void AvatarExpeditionGetRewardRsp::clear_extra_item_list() {
  extra_item_list_.Clear();
}
const ::proto::ItemParam& AvatarExpeditionGetRewardRsp::extra_item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionGetRewardRsp.extra_item_list)
  return extra_item_list_.Get(index);
}
::proto::ItemParam* AvatarExpeditionGetRewardRsp::mutable_extra_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AvatarExpeditionGetRewardRsp.extra_item_list)
  return extra_item_list_.Mutable(index);
}
::proto::ItemParam* AvatarExpeditionGetRewardRsp::add_extra_item_list() {
  // @@protoc_insertion_point(field_add:proto.AvatarExpeditionGetRewardRsp.extra_item_list)
  return extra_item_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
AvatarExpeditionGetRewardRsp::mutable_extra_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarExpeditionGetRewardRsp.extra_item_list)
  return &extra_item_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
AvatarExpeditionGetRewardRsp::extra_item_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarExpeditionGetRewardRsp.extra_item_list)
  return extra_item_list_;
}

// repeated .proto.ItemParam item_list = 8;
int AvatarExpeditionGetRewardRsp::item_list_size() const {
  return item_list_.size();
}
void AvatarExpeditionGetRewardRsp::clear_item_list() {
  item_list_.Clear();
}
const ::proto::ItemParam& AvatarExpeditionGetRewardRsp::item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionGetRewardRsp.item_list)
  return item_list_.Get(index);
}
::proto::ItemParam* AvatarExpeditionGetRewardRsp::mutable_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AvatarExpeditionGetRewardRsp.item_list)
  return item_list_.Mutable(index);
}
::proto::ItemParam* AvatarExpeditionGetRewardRsp::add_item_list() {
  // @@protoc_insertion_point(field_add:proto.AvatarExpeditionGetRewardRsp.item_list)
  return item_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
AvatarExpeditionGetRewardRsp::mutable_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarExpeditionGetRewardRsp.item_list)
  return &item_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
AvatarExpeditionGetRewardRsp::item_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarExpeditionGetRewardRsp.item_list)
  return item_list_;
}

// map<uint64, .proto.AvatarExpeditionInfo> expedition_info_map = 12;
int AvatarExpeditionGetRewardRsp::expedition_info_map_size() const {
  return expedition_info_map_.size();
}
void AvatarExpeditionGetRewardRsp::clear_expedition_info_map() {
  expedition_info_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >&
AvatarExpeditionGetRewardRsp::expedition_info_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarExpeditionGetRewardRsp.expedition_info_map)
  return expedition_info_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint64, ::proto::AvatarExpeditionInfo >*
AvatarExpeditionGetRewardRsp::mutable_expedition_info_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarExpeditionGetRewardRsp.expedition_info_map)
  return expedition_info_map_.MutableMap();
}

// int32 retcode = 2;
void AvatarExpeditionGetRewardRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 AvatarExpeditionGetRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionGetRewardRsp.retcode)
  return retcode_;
}
void AvatarExpeditionGetRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionGetRewardRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeMpTeamAvatarReq::kCurAvatarGuidFieldNumber;
const int ChangeMpTeamAvatarReq::kAvatarGuidListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeMpTeamAvatarReq::ChangeMpTeamAvatarReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChangeMpTeamAvatarReq)
}
ChangeMpTeamAvatarReq::ChangeMpTeamAvatarReq(const ChangeMpTeamAvatarReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      avatar_guid_list_(from.avatar_guid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cur_avatar_guid_ = from.cur_avatar_guid_;
  // @@protoc_insertion_point(copy_constructor:proto.ChangeMpTeamAvatarReq)
}

void ChangeMpTeamAvatarReq::SharedCtor() {
  cur_avatar_guid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

ChangeMpTeamAvatarReq::~ChangeMpTeamAvatarReq() {
  // @@protoc_insertion_point(destructor:proto.ChangeMpTeamAvatarReq)
  SharedDtor();
}

void ChangeMpTeamAvatarReq::SharedDtor() {
}

void ChangeMpTeamAvatarReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeMpTeamAvatarReq::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeMpTeamAvatarReq& ChangeMpTeamAvatarReq::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChangeMpTeamAvatarReq* ChangeMpTeamAvatarReq::New(::google::protobuf::Arena* arena) const {
  ChangeMpTeamAvatarReq* n = new ChangeMpTeamAvatarReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangeMpTeamAvatarReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChangeMpTeamAvatarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  avatar_guid_list_.Clear();
  cur_avatar_guid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ChangeMpTeamAvatarReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChangeMpTeamAvatarReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 cur_avatar_guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cur_avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 avatar_guid_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_avatar_guid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 66u, input, this->mutable_avatar_guid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChangeMpTeamAvatarReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChangeMpTeamAvatarReq)
  return false;
#undef DO_
}

void ChangeMpTeamAvatarReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChangeMpTeamAvatarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 cur_avatar_guid = 4;
  if (this->cur_avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->cur_avatar_guid(), output);
  }

  // repeated uint64 avatar_guid_list = 8;
  if (this->avatar_guid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _avatar_guid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->avatar_guid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->avatar_guid_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChangeMpTeamAvatarReq)
}

::google::protobuf::uint8* ChangeMpTeamAvatarReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChangeMpTeamAvatarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 cur_avatar_guid = 4;
  if (this->cur_avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->cur_avatar_guid(), target);
  }

  // repeated uint64 avatar_guid_list = 8;
  if (this->avatar_guid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _avatar_guid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->avatar_guid_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChangeMpTeamAvatarReq)
  return target;
}

size_t ChangeMpTeamAvatarReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChangeMpTeamAvatarReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 avatar_guid_list = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->avatar_guid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _avatar_guid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint64 cur_avatar_guid = 4;
  if (this->cur_avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cur_avatar_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeMpTeamAvatarReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChangeMpTeamAvatarReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeMpTeamAvatarReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeMpTeamAvatarReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChangeMpTeamAvatarReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChangeMpTeamAvatarReq)
    MergeFrom(*source);
  }
}

void ChangeMpTeamAvatarReq::MergeFrom(const ChangeMpTeamAvatarReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChangeMpTeamAvatarReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  avatar_guid_list_.MergeFrom(from.avatar_guid_list_);
  if (from.cur_avatar_guid() != 0) {
    set_cur_avatar_guid(from.cur_avatar_guid());
  }
}

void ChangeMpTeamAvatarReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChangeMpTeamAvatarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeMpTeamAvatarReq::CopyFrom(const ChangeMpTeamAvatarReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChangeMpTeamAvatarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeMpTeamAvatarReq::IsInitialized() const {
  return true;
}

void ChangeMpTeamAvatarReq::Swap(ChangeMpTeamAvatarReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeMpTeamAvatarReq::InternalSwap(ChangeMpTeamAvatarReq* other) {
  using std::swap;
  avatar_guid_list_.InternalSwap(&other->avatar_guid_list_);
  swap(cur_avatar_guid_, other->cur_avatar_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeMpTeamAvatarReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChangeMpTeamAvatarReq

// uint64 cur_avatar_guid = 4;
void ChangeMpTeamAvatarReq::clear_cur_avatar_guid() {
  cur_avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ChangeMpTeamAvatarReq::cur_avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.ChangeMpTeamAvatarReq.cur_avatar_guid)
  return cur_avatar_guid_;
}
void ChangeMpTeamAvatarReq::set_cur_avatar_guid(::google::protobuf::uint64 value) {
  
  cur_avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeMpTeamAvatarReq.cur_avatar_guid)
}

// repeated uint64 avatar_guid_list = 8;
int ChangeMpTeamAvatarReq::avatar_guid_list_size() const {
  return avatar_guid_list_.size();
}
void ChangeMpTeamAvatarReq::clear_avatar_guid_list() {
  avatar_guid_list_.Clear();
}
::google::protobuf::uint64 ChangeMpTeamAvatarReq::avatar_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ChangeMpTeamAvatarReq.avatar_guid_list)
  return avatar_guid_list_.Get(index);
}
void ChangeMpTeamAvatarReq::set_avatar_guid_list(int index, ::google::protobuf::uint64 value) {
  avatar_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ChangeMpTeamAvatarReq.avatar_guid_list)
}
void ChangeMpTeamAvatarReq::add_avatar_guid_list(::google::protobuf::uint64 value) {
  avatar_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ChangeMpTeamAvatarReq.avatar_guid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ChangeMpTeamAvatarReq::avatar_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.ChangeMpTeamAvatarReq.avatar_guid_list)
  return avatar_guid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ChangeMpTeamAvatarReq::mutable_avatar_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ChangeMpTeamAvatarReq.avatar_guid_list)
  return &avatar_guid_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeMpTeamAvatarRsp::kRetcodeFieldNumber;
const int ChangeMpTeamAvatarRsp::kAvatarGuidListFieldNumber;
const int ChangeMpTeamAvatarRsp::kCurAvatarGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeMpTeamAvatarRsp::ChangeMpTeamAvatarRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChangeMpTeamAvatarRsp)
}
ChangeMpTeamAvatarRsp::ChangeMpTeamAvatarRsp(const ChangeMpTeamAvatarRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      avatar_guid_list_(from.avatar_guid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&cur_avatar_guid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(cur_avatar_guid_));
  // @@protoc_insertion_point(copy_constructor:proto.ChangeMpTeamAvatarRsp)
}

void ChangeMpTeamAvatarRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_avatar_guid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(cur_avatar_guid_));
  _cached_size_ = 0;
}

ChangeMpTeamAvatarRsp::~ChangeMpTeamAvatarRsp() {
  // @@protoc_insertion_point(destructor:proto.ChangeMpTeamAvatarRsp)
  SharedDtor();
}

void ChangeMpTeamAvatarRsp::SharedDtor() {
}

void ChangeMpTeamAvatarRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeMpTeamAvatarRsp::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeMpTeamAvatarRsp& ChangeMpTeamAvatarRsp::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChangeMpTeamAvatarRsp* ChangeMpTeamAvatarRsp::New(::google::protobuf::Arena* arena) const {
  ChangeMpTeamAvatarRsp* n = new ChangeMpTeamAvatarRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangeMpTeamAvatarRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChangeMpTeamAvatarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  avatar_guid_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_avatar_guid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(cur_avatar_guid_));
  _internal_metadata_.Clear();
}

bool ChangeMpTeamAvatarRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChangeMpTeamAvatarRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 avatar_guid_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_avatar_guid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 26u, input, this->mutable_avatar_guid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 cur_avatar_guid = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cur_avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChangeMpTeamAvatarRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChangeMpTeamAvatarRsp)
  return false;
#undef DO_
}

void ChangeMpTeamAvatarRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChangeMpTeamAvatarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 avatar_guid_list = 3;
  if (this->avatar_guid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _avatar_guid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->avatar_guid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->avatar_guid_list(i), output);
  }

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->retcode(), output);
  }

  // uint64 cur_avatar_guid = 13;
  if (this->cur_avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->cur_avatar_guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChangeMpTeamAvatarRsp)
}

::google::protobuf::uint8* ChangeMpTeamAvatarRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChangeMpTeamAvatarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 avatar_guid_list = 3;
  if (this->avatar_guid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _avatar_guid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->avatar_guid_list_, target);
  }

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->retcode(), target);
  }

  // uint64 cur_avatar_guid = 13;
  if (this->cur_avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->cur_avatar_guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChangeMpTeamAvatarRsp)
  return target;
}

size_t ChangeMpTeamAvatarRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChangeMpTeamAvatarRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 avatar_guid_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->avatar_guid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _avatar_guid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint64 cur_avatar_guid = 13;
  if (this->cur_avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cur_avatar_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeMpTeamAvatarRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChangeMpTeamAvatarRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeMpTeamAvatarRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeMpTeamAvatarRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChangeMpTeamAvatarRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChangeMpTeamAvatarRsp)
    MergeFrom(*source);
  }
}

void ChangeMpTeamAvatarRsp::MergeFrom(const ChangeMpTeamAvatarRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChangeMpTeamAvatarRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  avatar_guid_list_.MergeFrom(from.avatar_guid_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.cur_avatar_guid() != 0) {
    set_cur_avatar_guid(from.cur_avatar_guid());
  }
}

void ChangeMpTeamAvatarRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChangeMpTeamAvatarRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeMpTeamAvatarRsp::CopyFrom(const ChangeMpTeamAvatarRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChangeMpTeamAvatarRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeMpTeamAvatarRsp::IsInitialized() const {
  return true;
}

void ChangeMpTeamAvatarRsp::Swap(ChangeMpTeamAvatarRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeMpTeamAvatarRsp::InternalSwap(ChangeMpTeamAvatarRsp* other) {
  using std::swap;
  avatar_guid_list_.InternalSwap(&other->avatar_guid_list_);
  swap(retcode_, other->retcode_);
  swap(cur_avatar_guid_, other->cur_avatar_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeMpTeamAvatarRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChangeMpTeamAvatarRsp

// int32 retcode = 4;
void ChangeMpTeamAvatarRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ChangeMpTeamAvatarRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ChangeMpTeamAvatarRsp.retcode)
  return retcode_;
}
void ChangeMpTeamAvatarRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeMpTeamAvatarRsp.retcode)
}

// repeated uint64 avatar_guid_list = 3;
int ChangeMpTeamAvatarRsp::avatar_guid_list_size() const {
  return avatar_guid_list_.size();
}
void ChangeMpTeamAvatarRsp::clear_avatar_guid_list() {
  avatar_guid_list_.Clear();
}
::google::protobuf::uint64 ChangeMpTeamAvatarRsp::avatar_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ChangeMpTeamAvatarRsp.avatar_guid_list)
  return avatar_guid_list_.Get(index);
}
void ChangeMpTeamAvatarRsp::set_avatar_guid_list(int index, ::google::protobuf::uint64 value) {
  avatar_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ChangeMpTeamAvatarRsp.avatar_guid_list)
}
void ChangeMpTeamAvatarRsp::add_avatar_guid_list(::google::protobuf::uint64 value) {
  avatar_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ChangeMpTeamAvatarRsp.avatar_guid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ChangeMpTeamAvatarRsp::avatar_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.ChangeMpTeamAvatarRsp.avatar_guid_list)
  return avatar_guid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ChangeMpTeamAvatarRsp::mutable_avatar_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ChangeMpTeamAvatarRsp.avatar_guid_list)
  return &avatar_guid_list_;
}

// uint64 cur_avatar_guid = 13;
void ChangeMpTeamAvatarRsp::clear_cur_avatar_guid() {
  cur_avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ChangeMpTeamAvatarRsp::cur_avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.ChangeMpTeamAvatarRsp.cur_avatar_guid)
  return cur_avatar_guid_;
}
void ChangeMpTeamAvatarRsp::set_cur_avatar_guid(::google::protobuf::uint64 value) {
  
  cur_avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeMpTeamAvatarRsp.cur_avatar_guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeTeamNameReq::kTeamIdFieldNumber;
const int ChangeTeamNameReq::kTeamNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeTeamNameReq::ChangeTeamNameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChangeTeamNameReq)
}
ChangeTeamNameReq::ChangeTeamNameReq(const ChangeTeamNameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  team_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.team_name().size() > 0) {
    team_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.team_name_);
  }
  team_id_ = from.team_id_;
  // @@protoc_insertion_point(copy_constructor:proto.ChangeTeamNameReq)
}

void ChangeTeamNameReq::SharedCtor() {
  team_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  team_id_ = 0;
  _cached_size_ = 0;
}

ChangeTeamNameReq::~ChangeTeamNameReq() {
  // @@protoc_insertion_point(destructor:proto.ChangeTeamNameReq)
  SharedDtor();
}

void ChangeTeamNameReq::SharedDtor() {
  team_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChangeTeamNameReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeTeamNameReq::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeTeamNameReq& ChangeTeamNameReq::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChangeTeamNameReq* ChangeTeamNameReq::New(::google::protobuf::Arena* arena) const {
  ChangeTeamNameReq* n = new ChangeTeamNameReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangeTeamNameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChangeTeamNameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  team_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  team_id_ = 0;
  _internal_metadata_.Clear();
}

bool ChangeTeamNameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChangeTeamNameReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 team_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &team_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string team_name = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_team_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->team_name().data(), static_cast<int>(this->team_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ChangeTeamNameReq.team_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChangeTeamNameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChangeTeamNameReq)
  return false;
#undef DO_
}

void ChangeTeamNameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChangeTeamNameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 team_id = 8;
  if (this->team_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->team_id(), output);
  }

  // string team_name = 9;
  if (this->team_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->team_name().data(), static_cast<int>(this->team_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ChangeTeamNameReq.team_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->team_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChangeTeamNameReq)
}

::google::protobuf::uint8* ChangeTeamNameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChangeTeamNameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 team_id = 8;
  if (this->team_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->team_id(), target);
  }

  // string team_name = 9;
  if (this->team_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->team_name().data(), static_cast<int>(this->team_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ChangeTeamNameReq.team_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->team_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChangeTeamNameReq)
  return target;
}

size_t ChangeTeamNameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChangeTeamNameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string team_name = 9;
  if (this->team_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->team_name());
  }

  // int32 team_id = 8;
  if (this->team_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->team_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeTeamNameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChangeTeamNameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeTeamNameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeTeamNameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChangeTeamNameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChangeTeamNameReq)
    MergeFrom(*source);
  }
}

void ChangeTeamNameReq::MergeFrom(const ChangeTeamNameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChangeTeamNameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.team_name().size() > 0) {

    team_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.team_name_);
  }
  if (from.team_id() != 0) {
    set_team_id(from.team_id());
  }
}

void ChangeTeamNameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChangeTeamNameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeTeamNameReq::CopyFrom(const ChangeTeamNameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChangeTeamNameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeTeamNameReq::IsInitialized() const {
  return true;
}

void ChangeTeamNameReq::Swap(ChangeTeamNameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeTeamNameReq::InternalSwap(ChangeTeamNameReq* other) {
  using std::swap;
  team_name_.Swap(&other->team_name_);
  swap(team_id_, other->team_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeTeamNameReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChangeTeamNameReq

// int32 team_id = 8;
void ChangeTeamNameReq::clear_team_id() {
  team_id_ = 0;
}
::google::protobuf::int32 ChangeTeamNameReq::team_id() const {
  // @@protoc_insertion_point(field_get:proto.ChangeTeamNameReq.team_id)
  return team_id_;
}
void ChangeTeamNameReq::set_team_id(::google::protobuf::int32 value) {
  
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeTeamNameReq.team_id)
}

// string team_name = 9;
void ChangeTeamNameReq::clear_team_name() {
  team_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChangeTeamNameReq::team_name() const {
  // @@protoc_insertion_point(field_get:proto.ChangeTeamNameReq.team_name)
  return team_name_.GetNoArena();
}
void ChangeTeamNameReq::set_team_name(const ::std::string& value) {
  
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ChangeTeamNameReq.team_name)
}
#if LANG_CXX11
void ChangeTeamNameReq::set_team_name(::std::string&& value) {
  
  team_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ChangeTeamNameReq.team_name)
}
#endif
void ChangeTeamNameReq::set_team_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ChangeTeamNameReq.team_name)
}
void ChangeTeamNameReq::set_team_name(const char* value, size_t size) {
  
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ChangeTeamNameReq.team_name)
}
::std::string* ChangeTeamNameReq::mutable_team_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.ChangeTeamNameReq.team_name)
  return team_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChangeTeamNameReq::release_team_name() {
  // @@protoc_insertion_point(field_release:proto.ChangeTeamNameReq.team_name)
  
  return team_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChangeTeamNameReq::set_allocated_team_name(::std::string* team_name) {
  if (team_name != NULL) {
    
  } else {
    
  }
  team_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), team_name);
  // @@protoc_insertion_point(field_set_allocated:proto.ChangeTeamNameReq.team_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeTeamNameRsp::kRetcodeFieldNumber;
const int ChangeTeamNameRsp::kTeamNameFieldNumber;
const int ChangeTeamNameRsp::kTeamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeTeamNameRsp::ChangeTeamNameRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChangeTeamNameRsp)
}
ChangeTeamNameRsp::ChangeTeamNameRsp(const ChangeTeamNameRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  team_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.team_name().size() > 0) {
    team_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.team_name_);
  }
  ::memcpy(&team_id_, &from.team_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&team_id_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.ChangeTeamNameRsp)
}

void ChangeTeamNameRsp::SharedCtor() {
  team_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&team_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&team_id_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

ChangeTeamNameRsp::~ChangeTeamNameRsp() {
  // @@protoc_insertion_point(destructor:proto.ChangeTeamNameRsp)
  SharedDtor();
}

void ChangeTeamNameRsp::SharedDtor() {
  team_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChangeTeamNameRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeTeamNameRsp::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeTeamNameRsp& ChangeTeamNameRsp::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChangeTeamNameRsp* ChangeTeamNameRsp::New(::google::protobuf::Arena* arena) const {
  ChangeTeamNameRsp* n = new ChangeTeamNameRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangeTeamNameRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChangeTeamNameRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  team_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&team_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&team_id_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool ChangeTeamNameRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChangeTeamNameRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string team_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_team_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->team_name().data(), static_cast<int>(this->team_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ChangeTeamNameRsp.team_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 team_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &team_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChangeTeamNameRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChangeTeamNameRsp)
  return false;
#undef DO_
}

void ChangeTeamNameRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChangeTeamNameRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string team_name = 2;
  if (this->team_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->team_name().data(), static_cast<int>(this->team_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ChangeTeamNameRsp.team_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->team_name(), output);
  }

  // int32 team_id = 4;
  if (this->team_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->team_id(), output);
  }

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChangeTeamNameRsp)
}

::google::protobuf::uint8* ChangeTeamNameRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChangeTeamNameRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string team_name = 2;
  if (this->team_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->team_name().data(), static_cast<int>(this->team_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ChangeTeamNameRsp.team_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->team_name(), target);
  }

  // int32 team_id = 4;
  if (this->team_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->team_id(), target);
  }

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChangeTeamNameRsp)
  return target;
}

size_t ChangeTeamNameRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChangeTeamNameRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string team_name = 2;
  if (this->team_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->team_name());
  }

  // int32 team_id = 4;
  if (this->team_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->team_id());
  }

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeTeamNameRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChangeTeamNameRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeTeamNameRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeTeamNameRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChangeTeamNameRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChangeTeamNameRsp)
    MergeFrom(*source);
  }
}

void ChangeTeamNameRsp::MergeFrom(const ChangeTeamNameRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChangeTeamNameRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.team_name().size() > 0) {

    team_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.team_name_);
  }
  if (from.team_id() != 0) {
    set_team_id(from.team_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ChangeTeamNameRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChangeTeamNameRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeTeamNameRsp::CopyFrom(const ChangeTeamNameRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChangeTeamNameRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeTeamNameRsp::IsInitialized() const {
  return true;
}

void ChangeTeamNameRsp::Swap(ChangeTeamNameRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeTeamNameRsp::InternalSwap(ChangeTeamNameRsp* other) {
  using std::swap;
  team_name_.Swap(&other->team_name_);
  swap(team_id_, other->team_id_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeTeamNameRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChangeTeamNameRsp

// int32 retcode = 11;
void ChangeTeamNameRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ChangeTeamNameRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ChangeTeamNameRsp.retcode)
  return retcode_;
}
void ChangeTeamNameRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeTeamNameRsp.retcode)
}

// string team_name = 2;
void ChangeTeamNameRsp::clear_team_name() {
  team_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChangeTeamNameRsp::team_name() const {
  // @@protoc_insertion_point(field_get:proto.ChangeTeamNameRsp.team_name)
  return team_name_.GetNoArena();
}
void ChangeTeamNameRsp::set_team_name(const ::std::string& value) {
  
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ChangeTeamNameRsp.team_name)
}
#if LANG_CXX11
void ChangeTeamNameRsp::set_team_name(::std::string&& value) {
  
  team_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ChangeTeamNameRsp.team_name)
}
#endif
void ChangeTeamNameRsp::set_team_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ChangeTeamNameRsp.team_name)
}
void ChangeTeamNameRsp::set_team_name(const char* value, size_t size) {
  
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ChangeTeamNameRsp.team_name)
}
::std::string* ChangeTeamNameRsp::mutable_team_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.ChangeTeamNameRsp.team_name)
  return team_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChangeTeamNameRsp::release_team_name() {
  // @@protoc_insertion_point(field_release:proto.ChangeTeamNameRsp.team_name)
  
  return team_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChangeTeamNameRsp::set_allocated_team_name(::std::string* team_name) {
  if (team_name != NULL) {
    
  } else {
    
  }
  team_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), team_name);
  // @@protoc_insertion_point(field_set_allocated:proto.ChangeTeamNameRsp.team_name)
}

// int32 team_id = 4;
void ChangeTeamNameRsp::clear_team_id() {
  team_id_ = 0;
}
::google::protobuf::int32 ChangeTeamNameRsp::team_id() const {
  // @@protoc_insertion_point(field_get:proto.ChangeTeamNameRsp.team_id)
  return team_id_;
}
void ChangeTeamNameRsp::set_team_id(::google::protobuf::int32 value) {
  
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeTeamNameRsp.team_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneTeamAvatar::kAvatarAbilityInfoFieldNumber;
const int SceneTeamAvatar::kAvatarInfoFieldNumber;
const int SceneTeamAvatar::kIsOnSceneFieldNumber;
const int SceneTeamAvatar::kEntityIdFieldNumber;
const int SceneTeamAvatar::kAvatarGuidFieldNumber;
const int SceneTeamAvatar::kSceneIdFieldNumber;
const int SceneTeamAvatar::kWeaponEntityIdFieldNumber;
const int SceneTeamAvatar::kSceneAvatarInfoFieldNumber;
const int SceneTeamAvatar::kWeaponGuidFieldNumber;
const int SceneTeamAvatar::kWeaponAbilityInfoFieldNumber;
const int SceneTeamAvatar::kSceneEntityInfoFieldNumber;
const int SceneTeamAvatar::kPlayerUidFieldNumber;
const int SceneTeamAvatar::kIsReconnectFieldNumber;
const int SceneTeamAvatar::kAbilityControlBlockFieldNumber;
const int SceneTeamAvatar::kIsPlayerCurAvatarFieldNumber;
const int SceneTeamAvatar::kServerBuffListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneTeamAvatar::SceneTeamAvatar()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneTeamAvatar)
}
SceneTeamAvatar::SceneTeamAvatar(const SceneTeamAvatar& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      server_buff_list_(from.server_buff_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ability_control_block()) {
    ability_control_block_ = new ::proto::AbilityControlBlock(*from.ability_control_block_);
  } else {
    ability_control_block_ = NULL;
  }
  if (from.has_scene_avatar_info()) {
    scene_avatar_info_ = new ::proto::SceneAvatarInfo(*from.scene_avatar_info_);
  } else {
    scene_avatar_info_ = NULL;
  }
  if (from.has_avatar_ability_info()) {
    avatar_ability_info_ = new ::proto::AbilitySyncStateInfo(*from.avatar_ability_info_);
  } else {
    avatar_ability_info_ = NULL;
  }
  if (from.has_avatar_info()) {
    avatar_info_ = new ::proto::AvatarInfo(*from.avatar_info_);
  } else {
    avatar_info_ = NULL;
  }
  if (from.has_weapon_ability_info()) {
    weapon_ability_info_ = new ::proto::AbilitySyncStateInfo(*from.weapon_ability_info_);
  } else {
    weapon_ability_info_ = NULL;
  }
  if (from.has_scene_entity_info()) {
    scene_entity_info_ = new ::proto::SceneEntityInfo(*from.scene_entity_info_);
  } else {
    scene_entity_info_ = NULL;
  }
  ::memcpy(&weapon_guid_, &from.weapon_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_player_cur_avatar_) -
    reinterpret_cast<char*>(&weapon_guid_)) + sizeof(is_player_cur_avatar_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneTeamAvatar)
}

void SceneTeamAvatar::SharedCtor() {
  ::memset(&ability_control_block_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_player_cur_avatar_) -
      reinterpret_cast<char*>(&ability_control_block_)) + sizeof(is_player_cur_avatar_));
  _cached_size_ = 0;
}

SceneTeamAvatar::~SceneTeamAvatar() {
  // @@protoc_insertion_point(destructor:proto.SceneTeamAvatar)
  SharedDtor();
}

void SceneTeamAvatar::SharedDtor() {
  if (this != internal_default_instance()) delete ability_control_block_;
  if (this != internal_default_instance()) delete scene_avatar_info_;
  if (this != internal_default_instance()) delete avatar_ability_info_;
  if (this != internal_default_instance()) delete avatar_info_;
  if (this != internal_default_instance()) delete weapon_ability_info_;
  if (this != internal_default_instance()) delete scene_entity_info_;
}

void SceneTeamAvatar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneTeamAvatar::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneTeamAvatar& SceneTeamAvatar::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneTeamAvatar* SceneTeamAvatar::New(::google::protobuf::Arena* arena) const {
  SceneTeamAvatar* n = new SceneTeamAvatar;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneTeamAvatar::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneTeamAvatar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_buff_list_.Clear();
  if (GetArenaNoVirtual() == NULL && ability_control_block_ != NULL) {
    delete ability_control_block_;
  }
  ability_control_block_ = NULL;
  if (GetArenaNoVirtual() == NULL && scene_avatar_info_ != NULL) {
    delete scene_avatar_info_;
  }
  scene_avatar_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && avatar_ability_info_ != NULL) {
    delete avatar_ability_info_;
  }
  avatar_ability_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && avatar_info_ != NULL) {
    delete avatar_info_;
  }
  avatar_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && weapon_ability_info_ != NULL) {
    delete weapon_ability_info_;
  }
  weapon_ability_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && scene_entity_info_ != NULL) {
    delete scene_entity_info_;
  }
  scene_entity_info_ = NULL;
  ::memset(&weapon_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_player_cur_avatar_) -
      reinterpret_cast<char*>(&weapon_guid_)) + sizeof(is_player_cur_avatar_));
  _internal_metadata_.Clear();
}

bool SceneTeamAvatar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneTeamAvatar)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AbilityControlBlock ability_control_block = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ability_control_block()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SceneAvatarInfo scene_avatar_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_scene_avatar_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 weapon_guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &weapon_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AbilitySyncStateInfo avatar_ability_info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_avatar_ability_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_reconnect = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_reconnect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 weapon_entity_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weapon_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AvatarInfo avatar_info = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_avatar_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ServerBuff server_buff_list = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_server_buff_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AbilitySyncStateInfo weapon_ability_info = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_weapon_ability_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SceneEntityInfo scene_entity_info = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_scene_entity_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_player_cur_avatar = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_player_cur_avatar_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 player_uid = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 avatar_guid = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_on_scene = 152;
      case 152: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 1216 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_on_scene_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneTeamAvatar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneTeamAvatar)
  return false;
#undef DO_
}

void SceneTeamAvatar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneTeamAvatar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // .proto.AbilityControlBlock ability_control_block = 2;
  if (this->has_ability_control_block()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->ability_control_block_, output);
  }

  // .proto.SceneAvatarInfo scene_avatar_info = 3;
  if (this->has_scene_avatar_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->scene_avatar_info_, output);
  }

  // uint64 weapon_guid = 4;
  if (this->weapon_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->weapon_guid(), output);
  }

  // .proto.AbilitySyncStateInfo avatar_ability_info = 5;
  if (this->has_avatar_ability_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->avatar_ability_info_, output);
  }

  // bool is_reconnect = 6;
  if (this->is_reconnect() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_reconnect(), output);
  }

  // uint32 weapon_entity_id = 7;
  if (this->weapon_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->weapon_entity_id(), output);
  }

  // .proto.AvatarInfo avatar_info = 8;
  if (this->has_avatar_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->avatar_info_, output);
  }

  // uint32 entity_id = 9;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->entity_id(), output);
  }

  // repeated .proto.ServerBuff server_buff_list = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->server_buff_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->server_buff_list(static_cast<int>(i)), output);
  }

  // .proto.AbilitySyncStateInfo weapon_ability_info = 11;
  if (this->has_weapon_ability_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->weapon_ability_info_, output);
  }

  // .proto.SceneEntityInfo scene_entity_info = 12;
  if (this->has_scene_entity_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->scene_entity_info_, output);
  }

  // bool is_player_cur_avatar = 13;
  if (this->is_player_cur_avatar() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->is_player_cur_avatar(), output);
  }

  // uint32 player_uid = 14;
  if (this->player_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->player_uid(), output);
  }

  // uint64 avatar_guid = 15;
  if (this->avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(15, this->avatar_guid(), output);
  }

  // bool is_on_scene = 152;
  if (this->is_on_scene() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(152, this->is_on_scene(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneTeamAvatar)
}

::google::protobuf::uint8* SceneTeamAvatar::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneTeamAvatar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // .proto.AbilityControlBlock ability_control_block = 2;
  if (this->has_ability_control_block()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->ability_control_block_, deterministic, target);
  }

  // .proto.SceneAvatarInfo scene_avatar_info = 3;
  if (this->has_scene_avatar_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->scene_avatar_info_, deterministic, target);
  }

  // uint64 weapon_guid = 4;
  if (this->weapon_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->weapon_guid(), target);
  }

  // .proto.AbilitySyncStateInfo avatar_ability_info = 5;
  if (this->has_avatar_ability_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->avatar_ability_info_, deterministic, target);
  }

  // bool is_reconnect = 6;
  if (this->is_reconnect() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_reconnect(), target);
  }

  // uint32 weapon_entity_id = 7;
  if (this->weapon_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->weapon_entity_id(), target);
  }

  // .proto.AvatarInfo avatar_info = 8;
  if (this->has_avatar_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->avatar_info_, deterministic, target);
  }

  // uint32 entity_id = 9;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->entity_id(), target);
  }

  // repeated .proto.ServerBuff server_buff_list = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->server_buff_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->server_buff_list(static_cast<int>(i)), deterministic, target);
  }

  // .proto.AbilitySyncStateInfo weapon_ability_info = 11;
  if (this->has_weapon_ability_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->weapon_ability_info_, deterministic, target);
  }

  // .proto.SceneEntityInfo scene_entity_info = 12;
  if (this->has_scene_entity_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->scene_entity_info_, deterministic, target);
  }

  // bool is_player_cur_avatar = 13;
  if (this->is_player_cur_avatar() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->is_player_cur_avatar(), target);
  }

  // uint32 player_uid = 14;
  if (this->player_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->player_uid(), target);
  }

  // uint64 avatar_guid = 15;
  if (this->avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(15, this->avatar_guid(), target);
  }

  // bool is_on_scene = 152;
  if (this->is_on_scene() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(152, this->is_on_scene(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneTeamAvatar)
  return target;
}

size_t SceneTeamAvatar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneTeamAvatar)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ServerBuff server_buff_list = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->server_buff_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->server_buff_list(static_cast<int>(i)));
    }
  }

  // .proto.AbilityControlBlock ability_control_block = 2;
  if (this->has_ability_control_block()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ability_control_block_);
  }

  // .proto.SceneAvatarInfo scene_avatar_info = 3;
  if (this->has_scene_avatar_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->scene_avatar_info_);
  }

  // .proto.AbilitySyncStateInfo avatar_ability_info = 5;
  if (this->has_avatar_ability_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->avatar_ability_info_);
  }

  // .proto.AvatarInfo avatar_info = 8;
  if (this->has_avatar_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->avatar_info_);
  }

  // .proto.AbilitySyncStateInfo weapon_ability_info = 11;
  if (this->has_weapon_ability_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->weapon_ability_info_);
  }

  // .proto.SceneEntityInfo scene_entity_info = 12;
  if (this->has_scene_entity_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->scene_entity_info_);
  }

  // uint64 weapon_guid = 4;
  if (this->weapon_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->weapon_guid());
  }

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 weapon_entity_id = 7;
  if (this->weapon_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weapon_entity_id());
  }

  // uint32 entity_id = 9;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 player_uid = 14;
  if (this->player_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_uid());
  }

  // uint64 avatar_guid = 15;
  if (this->avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->avatar_guid());
  }

  // bool is_on_scene = 152;
  if (this->is_on_scene() != 0) {
    total_size += 2 + 1;
  }

  // bool is_reconnect = 6;
  if (this->is_reconnect() != 0) {
    total_size += 1 + 1;
  }

  // bool is_player_cur_avatar = 13;
  if (this->is_player_cur_avatar() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneTeamAvatar::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneTeamAvatar)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneTeamAvatar* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneTeamAvatar>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneTeamAvatar)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneTeamAvatar)
    MergeFrom(*source);
  }
}

void SceneTeamAvatar::MergeFrom(const SceneTeamAvatar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneTeamAvatar)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  server_buff_list_.MergeFrom(from.server_buff_list_);
  if (from.has_ability_control_block()) {
    mutable_ability_control_block()->::proto::AbilityControlBlock::MergeFrom(from.ability_control_block());
  }
  if (from.has_scene_avatar_info()) {
    mutable_scene_avatar_info()->::proto::SceneAvatarInfo::MergeFrom(from.scene_avatar_info());
  }
  if (from.has_avatar_ability_info()) {
    mutable_avatar_ability_info()->::proto::AbilitySyncStateInfo::MergeFrom(from.avatar_ability_info());
  }
  if (from.has_avatar_info()) {
    mutable_avatar_info()->::proto::AvatarInfo::MergeFrom(from.avatar_info());
  }
  if (from.has_weapon_ability_info()) {
    mutable_weapon_ability_info()->::proto::AbilitySyncStateInfo::MergeFrom(from.weapon_ability_info());
  }
  if (from.has_scene_entity_info()) {
    mutable_scene_entity_info()->::proto::SceneEntityInfo::MergeFrom(from.scene_entity_info());
  }
  if (from.weapon_guid() != 0) {
    set_weapon_guid(from.weapon_guid());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.weapon_entity_id() != 0) {
    set_weapon_entity_id(from.weapon_entity_id());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.player_uid() != 0) {
    set_player_uid(from.player_uid());
  }
  if (from.avatar_guid() != 0) {
    set_avatar_guid(from.avatar_guid());
  }
  if (from.is_on_scene() != 0) {
    set_is_on_scene(from.is_on_scene());
  }
  if (from.is_reconnect() != 0) {
    set_is_reconnect(from.is_reconnect());
  }
  if (from.is_player_cur_avatar() != 0) {
    set_is_player_cur_avatar(from.is_player_cur_avatar());
  }
}

void SceneTeamAvatar::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneTeamAvatar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneTeamAvatar::CopyFrom(const SceneTeamAvatar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneTeamAvatar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneTeamAvatar::IsInitialized() const {
  return true;
}

void SceneTeamAvatar::Swap(SceneTeamAvatar* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneTeamAvatar::InternalSwap(SceneTeamAvatar* other) {
  using std::swap;
  server_buff_list_.InternalSwap(&other->server_buff_list_);
  swap(ability_control_block_, other->ability_control_block_);
  swap(scene_avatar_info_, other->scene_avatar_info_);
  swap(avatar_ability_info_, other->avatar_ability_info_);
  swap(avatar_info_, other->avatar_info_);
  swap(weapon_ability_info_, other->weapon_ability_info_);
  swap(scene_entity_info_, other->scene_entity_info_);
  swap(weapon_guid_, other->weapon_guid_);
  swap(scene_id_, other->scene_id_);
  swap(weapon_entity_id_, other->weapon_entity_id_);
  swap(entity_id_, other->entity_id_);
  swap(player_uid_, other->player_uid_);
  swap(avatar_guid_, other->avatar_guid_);
  swap(is_on_scene_, other->is_on_scene_);
  swap(is_reconnect_, other->is_reconnect_);
  swap(is_player_cur_avatar_, other->is_player_cur_avatar_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneTeamAvatar::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneTeamAvatar

// .proto.AbilitySyncStateInfo avatar_ability_info = 5;
bool SceneTeamAvatar::has_avatar_ability_info() const {
  return this != internal_default_instance() && avatar_ability_info_ != NULL;
}
void SceneTeamAvatar::clear_avatar_ability_info() {
  if (GetArenaNoVirtual() == NULL && avatar_ability_info_ != NULL) delete avatar_ability_info_;
  avatar_ability_info_ = NULL;
}
const ::proto::AbilitySyncStateInfo& SceneTeamAvatar::avatar_ability_info() const {
  const ::proto::AbilitySyncStateInfo* p = avatar_ability_info_;
  // @@protoc_insertion_point(field_get:proto.SceneTeamAvatar.avatar_ability_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilitySyncStateInfo*>(
      &::proto::_AbilitySyncStateInfo_default_instance_);
}
::proto::AbilitySyncStateInfo* SceneTeamAvatar::mutable_avatar_ability_info() {
  
  if (avatar_ability_info_ == NULL) {
    avatar_ability_info_ = new ::proto::AbilitySyncStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneTeamAvatar.avatar_ability_info)
  return avatar_ability_info_;
}
::proto::AbilitySyncStateInfo* SceneTeamAvatar::release_avatar_ability_info() {
  // @@protoc_insertion_point(field_release:proto.SceneTeamAvatar.avatar_ability_info)
  
  ::proto::AbilitySyncStateInfo* temp = avatar_ability_info_;
  avatar_ability_info_ = NULL;
  return temp;
}
void SceneTeamAvatar::set_allocated_avatar_ability_info(::proto::AbilitySyncStateInfo* avatar_ability_info) {
  delete avatar_ability_info_;
  avatar_ability_info_ = avatar_ability_info;
  if (avatar_ability_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneTeamAvatar.avatar_ability_info)
}

// .proto.AvatarInfo avatar_info = 8;
bool SceneTeamAvatar::has_avatar_info() const {
  return this != internal_default_instance() && avatar_info_ != NULL;
}
void SceneTeamAvatar::clear_avatar_info() {
  if (GetArenaNoVirtual() == NULL && avatar_info_ != NULL) delete avatar_info_;
  avatar_info_ = NULL;
}
const ::proto::AvatarInfo& SceneTeamAvatar::avatar_info() const {
  const ::proto::AvatarInfo* p = avatar_info_;
  // @@protoc_insertion_point(field_get:proto.SceneTeamAvatar.avatar_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AvatarInfo*>(
      &::proto::_AvatarInfo_default_instance_);
}
::proto::AvatarInfo* SceneTeamAvatar::mutable_avatar_info() {
  
  if (avatar_info_ == NULL) {
    avatar_info_ = new ::proto::AvatarInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneTeamAvatar.avatar_info)
  return avatar_info_;
}
::proto::AvatarInfo* SceneTeamAvatar::release_avatar_info() {
  // @@protoc_insertion_point(field_release:proto.SceneTeamAvatar.avatar_info)
  
  ::proto::AvatarInfo* temp = avatar_info_;
  avatar_info_ = NULL;
  return temp;
}
void SceneTeamAvatar::set_allocated_avatar_info(::proto::AvatarInfo* avatar_info) {
  delete avatar_info_;
  avatar_info_ = avatar_info;
  if (avatar_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneTeamAvatar.avatar_info)
}

// bool is_on_scene = 152;
void SceneTeamAvatar::clear_is_on_scene() {
  is_on_scene_ = false;
}
bool SceneTeamAvatar::is_on_scene() const {
  // @@protoc_insertion_point(field_get:proto.SceneTeamAvatar.is_on_scene)
  return is_on_scene_;
}
void SceneTeamAvatar::set_is_on_scene(bool value) {
  
  is_on_scene_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTeamAvatar.is_on_scene)
}

// uint32 entity_id = 9;
void SceneTeamAvatar::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 SceneTeamAvatar::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneTeamAvatar.entity_id)
  return entity_id_;
}
void SceneTeamAvatar::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTeamAvatar.entity_id)
}

// uint64 avatar_guid = 15;
void SceneTeamAvatar::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SceneTeamAvatar::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.SceneTeamAvatar.avatar_guid)
  return avatar_guid_;
}
void SceneTeamAvatar::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTeamAvatar.avatar_guid)
}

// uint32 scene_id = 1;
void SceneTeamAvatar::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 SceneTeamAvatar::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneTeamAvatar.scene_id)
  return scene_id_;
}
void SceneTeamAvatar::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTeamAvatar.scene_id)
}

// uint32 weapon_entity_id = 7;
void SceneTeamAvatar::clear_weapon_entity_id() {
  weapon_entity_id_ = 0u;
}
::google::protobuf::uint32 SceneTeamAvatar::weapon_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneTeamAvatar.weapon_entity_id)
  return weapon_entity_id_;
}
void SceneTeamAvatar::set_weapon_entity_id(::google::protobuf::uint32 value) {
  
  weapon_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTeamAvatar.weapon_entity_id)
}

// .proto.SceneAvatarInfo scene_avatar_info = 3;
bool SceneTeamAvatar::has_scene_avatar_info() const {
  return this != internal_default_instance() && scene_avatar_info_ != NULL;
}
void SceneTeamAvatar::clear_scene_avatar_info() {
  if (GetArenaNoVirtual() == NULL && scene_avatar_info_ != NULL) delete scene_avatar_info_;
  scene_avatar_info_ = NULL;
}
const ::proto::SceneAvatarInfo& SceneTeamAvatar::scene_avatar_info() const {
  const ::proto::SceneAvatarInfo* p = scene_avatar_info_;
  // @@protoc_insertion_point(field_get:proto.SceneTeamAvatar.scene_avatar_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SceneAvatarInfo*>(
      &::proto::_SceneAvatarInfo_default_instance_);
}
::proto::SceneAvatarInfo* SceneTeamAvatar::mutable_scene_avatar_info() {
  
  if (scene_avatar_info_ == NULL) {
    scene_avatar_info_ = new ::proto::SceneAvatarInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneTeamAvatar.scene_avatar_info)
  return scene_avatar_info_;
}
::proto::SceneAvatarInfo* SceneTeamAvatar::release_scene_avatar_info() {
  // @@protoc_insertion_point(field_release:proto.SceneTeamAvatar.scene_avatar_info)
  
  ::proto::SceneAvatarInfo* temp = scene_avatar_info_;
  scene_avatar_info_ = NULL;
  return temp;
}
void SceneTeamAvatar::set_allocated_scene_avatar_info(::proto::SceneAvatarInfo* scene_avatar_info) {
  delete scene_avatar_info_;
  scene_avatar_info_ = scene_avatar_info;
  if (scene_avatar_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneTeamAvatar.scene_avatar_info)
}

// uint64 weapon_guid = 4;
void SceneTeamAvatar::clear_weapon_guid() {
  weapon_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SceneTeamAvatar::weapon_guid() const {
  // @@protoc_insertion_point(field_get:proto.SceneTeamAvatar.weapon_guid)
  return weapon_guid_;
}
void SceneTeamAvatar::set_weapon_guid(::google::protobuf::uint64 value) {
  
  weapon_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTeamAvatar.weapon_guid)
}

// .proto.AbilitySyncStateInfo weapon_ability_info = 11;
bool SceneTeamAvatar::has_weapon_ability_info() const {
  return this != internal_default_instance() && weapon_ability_info_ != NULL;
}
void SceneTeamAvatar::clear_weapon_ability_info() {
  if (GetArenaNoVirtual() == NULL && weapon_ability_info_ != NULL) delete weapon_ability_info_;
  weapon_ability_info_ = NULL;
}
const ::proto::AbilitySyncStateInfo& SceneTeamAvatar::weapon_ability_info() const {
  const ::proto::AbilitySyncStateInfo* p = weapon_ability_info_;
  // @@protoc_insertion_point(field_get:proto.SceneTeamAvatar.weapon_ability_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilitySyncStateInfo*>(
      &::proto::_AbilitySyncStateInfo_default_instance_);
}
::proto::AbilitySyncStateInfo* SceneTeamAvatar::mutable_weapon_ability_info() {
  
  if (weapon_ability_info_ == NULL) {
    weapon_ability_info_ = new ::proto::AbilitySyncStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneTeamAvatar.weapon_ability_info)
  return weapon_ability_info_;
}
::proto::AbilitySyncStateInfo* SceneTeamAvatar::release_weapon_ability_info() {
  // @@protoc_insertion_point(field_release:proto.SceneTeamAvatar.weapon_ability_info)
  
  ::proto::AbilitySyncStateInfo* temp = weapon_ability_info_;
  weapon_ability_info_ = NULL;
  return temp;
}
void SceneTeamAvatar::set_allocated_weapon_ability_info(::proto::AbilitySyncStateInfo* weapon_ability_info) {
  delete weapon_ability_info_;
  weapon_ability_info_ = weapon_ability_info;
  if (weapon_ability_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneTeamAvatar.weapon_ability_info)
}

// .proto.SceneEntityInfo scene_entity_info = 12;
bool SceneTeamAvatar::has_scene_entity_info() const {
  return this != internal_default_instance() && scene_entity_info_ != NULL;
}
void SceneTeamAvatar::clear_scene_entity_info() {
  if (GetArenaNoVirtual() == NULL && scene_entity_info_ != NULL) delete scene_entity_info_;
  scene_entity_info_ = NULL;
}
const ::proto::SceneEntityInfo& SceneTeamAvatar::scene_entity_info() const {
  const ::proto::SceneEntityInfo* p = scene_entity_info_;
  // @@protoc_insertion_point(field_get:proto.SceneTeamAvatar.scene_entity_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SceneEntityInfo*>(
      &::proto::_SceneEntityInfo_default_instance_);
}
::proto::SceneEntityInfo* SceneTeamAvatar::mutable_scene_entity_info() {
  
  if (scene_entity_info_ == NULL) {
    scene_entity_info_ = new ::proto::SceneEntityInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneTeamAvatar.scene_entity_info)
  return scene_entity_info_;
}
::proto::SceneEntityInfo* SceneTeamAvatar::release_scene_entity_info() {
  // @@protoc_insertion_point(field_release:proto.SceneTeamAvatar.scene_entity_info)
  
  ::proto::SceneEntityInfo* temp = scene_entity_info_;
  scene_entity_info_ = NULL;
  return temp;
}
void SceneTeamAvatar::set_allocated_scene_entity_info(::proto::SceneEntityInfo* scene_entity_info) {
  delete scene_entity_info_;
  scene_entity_info_ = scene_entity_info;
  if (scene_entity_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneTeamAvatar.scene_entity_info)
}

// uint32 player_uid = 14;
void SceneTeamAvatar::clear_player_uid() {
  player_uid_ = 0u;
}
::google::protobuf::uint32 SceneTeamAvatar::player_uid() const {
  // @@protoc_insertion_point(field_get:proto.SceneTeamAvatar.player_uid)
  return player_uid_;
}
void SceneTeamAvatar::set_player_uid(::google::protobuf::uint32 value) {
  
  player_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTeamAvatar.player_uid)
}

// bool is_reconnect = 6;
void SceneTeamAvatar::clear_is_reconnect() {
  is_reconnect_ = false;
}
bool SceneTeamAvatar::is_reconnect() const {
  // @@protoc_insertion_point(field_get:proto.SceneTeamAvatar.is_reconnect)
  return is_reconnect_;
}
void SceneTeamAvatar::set_is_reconnect(bool value) {
  
  is_reconnect_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTeamAvatar.is_reconnect)
}

// .proto.AbilityControlBlock ability_control_block = 2;
bool SceneTeamAvatar::has_ability_control_block() const {
  return this != internal_default_instance() && ability_control_block_ != NULL;
}
void SceneTeamAvatar::clear_ability_control_block() {
  if (GetArenaNoVirtual() == NULL && ability_control_block_ != NULL) delete ability_control_block_;
  ability_control_block_ = NULL;
}
const ::proto::AbilityControlBlock& SceneTeamAvatar::ability_control_block() const {
  const ::proto::AbilityControlBlock* p = ability_control_block_;
  // @@protoc_insertion_point(field_get:proto.SceneTeamAvatar.ability_control_block)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityControlBlock*>(
      &::proto::_AbilityControlBlock_default_instance_);
}
::proto::AbilityControlBlock* SceneTeamAvatar::mutable_ability_control_block() {
  
  if (ability_control_block_ == NULL) {
    ability_control_block_ = new ::proto::AbilityControlBlock;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneTeamAvatar.ability_control_block)
  return ability_control_block_;
}
::proto::AbilityControlBlock* SceneTeamAvatar::release_ability_control_block() {
  // @@protoc_insertion_point(field_release:proto.SceneTeamAvatar.ability_control_block)
  
  ::proto::AbilityControlBlock* temp = ability_control_block_;
  ability_control_block_ = NULL;
  return temp;
}
void SceneTeamAvatar::set_allocated_ability_control_block(::proto::AbilityControlBlock* ability_control_block) {
  delete ability_control_block_;
  ability_control_block_ = ability_control_block;
  if (ability_control_block) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneTeamAvatar.ability_control_block)
}

// bool is_player_cur_avatar = 13;
void SceneTeamAvatar::clear_is_player_cur_avatar() {
  is_player_cur_avatar_ = false;
}
bool SceneTeamAvatar::is_player_cur_avatar() const {
  // @@protoc_insertion_point(field_get:proto.SceneTeamAvatar.is_player_cur_avatar)
  return is_player_cur_avatar_;
}
void SceneTeamAvatar::set_is_player_cur_avatar(bool value) {
  
  is_player_cur_avatar_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTeamAvatar.is_player_cur_avatar)
}

// repeated .proto.ServerBuff server_buff_list = 10;
int SceneTeamAvatar::server_buff_list_size() const {
  return server_buff_list_.size();
}
void SceneTeamAvatar::clear_server_buff_list() {
  server_buff_list_.Clear();
}
const ::proto::ServerBuff& SceneTeamAvatar::server_buff_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneTeamAvatar.server_buff_list)
  return server_buff_list_.Get(index);
}
::proto::ServerBuff* SceneTeamAvatar::mutable_server_buff_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneTeamAvatar.server_buff_list)
  return server_buff_list_.Mutable(index);
}
::proto::ServerBuff* SceneTeamAvatar::add_server_buff_list() {
  // @@protoc_insertion_point(field_add:proto.SceneTeamAvatar.server_buff_list)
  return server_buff_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >*
SceneTeamAvatar::mutable_server_buff_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneTeamAvatar.server_buff_list)
  return &server_buff_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >&
SceneTeamAvatar::server_buff_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneTeamAvatar.server_buff_list)
  return server_buff_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneTeamUpdateNotify::kSceneTeamAvatarListFieldNumber;
const int SceneTeamUpdateNotify::kIsInMpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneTeamUpdateNotify::SceneTeamUpdateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneTeamUpdateNotify)
}
SceneTeamUpdateNotify::SceneTeamUpdateNotify(const SceneTeamUpdateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      scene_team_avatar_list_(from.scene_team_avatar_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_in_mp_ = from.is_in_mp_;
  // @@protoc_insertion_point(copy_constructor:proto.SceneTeamUpdateNotify)
}

void SceneTeamUpdateNotify::SharedCtor() {
  is_in_mp_ = false;
  _cached_size_ = 0;
}

SceneTeamUpdateNotify::~SceneTeamUpdateNotify() {
  // @@protoc_insertion_point(destructor:proto.SceneTeamUpdateNotify)
  SharedDtor();
}

void SceneTeamUpdateNotify::SharedDtor() {
}

void SceneTeamUpdateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneTeamUpdateNotify::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneTeamUpdateNotify& SceneTeamUpdateNotify::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneTeamUpdateNotify* SceneTeamUpdateNotify::New(::google::protobuf::Arena* arena) const {
  SceneTeamUpdateNotify* n = new SceneTeamUpdateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneTeamUpdateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneTeamUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scene_team_avatar_list_.Clear();
  is_in_mp_ = false;
  _internal_metadata_.Clear();
}

bool SceneTeamUpdateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneTeamUpdateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.SceneTeamAvatar scene_team_avatar_list = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_scene_team_avatar_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_in_mp = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_in_mp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneTeamUpdateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneTeamUpdateNotify)
  return false;
#undef DO_
}

void SceneTeamUpdateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneTeamUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.SceneTeamAvatar scene_team_avatar_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->scene_team_avatar_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->scene_team_avatar_list(static_cast<int>(i)), output);
  }

  // bool is_in_mp = 15;
  if (this->is_in_mp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->is_in_mp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneTeamUpdateNotify)
}

::google::protobuf::uint8* SceneTeamUpdateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneTeamUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.SceneTeamAvatar scene_team_avatar_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->scene_team_avatar_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->scene_team_avatar_list(static_cast<int>(i)), deterministic, target);
  }

  // bool is_in_mp = 15;
  if (this->is_in_mp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->is_in_mp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneTeamUpdateNotify)
  return target;
}

size_t SceneTeamUpdateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneTeamUpdateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.SceneTeamAvatar scene_team_avatar_list = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->scene_team_avatar_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->scene_team_avatar_list(static_cast<int>(i)));
    }
  }

  // bool is_in_mp = 15;
  if (this->is_in_mp() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneTeamUpdateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneTeamUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneTeamUpdateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneTeamUpdateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneTeamUpdateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneTeamUpdateNotify)
    MergeFrom(*source);
  }
}

void SceneTeamUpdateNotify::MergeFrom(const SceneTeamUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneTeamUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  scene_team_avatar_list_.MergeFrom(from.scene_team_avatar_list_);
  if (from.is_in_mp() != 0) {
    set_is_in_mp(from.is_in_mp());
  }
}

void SceneTeamUpdateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneTeamUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneTeamUpdateNotify::CopyFrom(const SceneTeamUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneTeamUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneTeamUpdateNotify::IsInitialized() const {
  return true;
}

void SceneTeamUpdateNotify::Swap(SceneTeamUpdateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneTeamUpdateNotify::InternalSwap(SceneTeamUpdateNotify* other) {
  using std::swap;
  scene_team_avatar_list_.InternalSwap(&other->scene_team_avatar_list_);
  swap(is_in_mp_, other->is_in_mp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneTeamUpdateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneTeamUpdateNotify

// repeated .proto.SceneTeamAvatar scene_team_avatar_list = 11;
int SceneTeamUpdateNotify::scene_team_avatar_list_size() const {
  return scene_team_avatar_list_.size();
}
void SceneTeamUpdateNotify::clear_scene_team_avatar_list() {
  scene_team_avatar_list_.Clear();
}
const ::proto::SceneTeamAvatar& SceneTeamUpdateNotify::scene_team_avatar_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneTeamUpdateNotify.scene_team_avatar_list)
  return scene_team_avatar_list_.Get(index);
}
::proto::SceneTeamAvatar* SceneTeamUpdateNotify::mutable_scene_team_avatar_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneTeamUpdateNotify.scene_team_avatar_list)
  return scene_team_avatar_list_.Mutable(index);
}
::proto::SceneTeamAvatar* SceneTeamUpdateNotify::add_scene_team_avatar_list() {
  // @@protoc_insertion_point(field_add:proto.SceneTeamUpdateNotify.scene_team_avatar_list)
  return scene_team_avatar_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::SceneTeamAvatar >*
SceneTeamUpdateNotify::mutable_scene_team_avatar_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneTeamUpdateNotify.scene_team_avatar_list)
  return &scene_team_avatar_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::SceneTeamAvatar >&
SceneTeamUpdateNotify::scene_team_avatar_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneTeamUpdateNotify.scene_team_avatar_list)
  return scene_team_avatar_list_;
}

// bool is_in_mp = 15;
void SceneTeamUpdateNotify::clear_is_in_mp() {
  is_in_mp_ = false;
}
bool SceneTeamUpdateNotify::is_in_mp() const {
  // @@protoc_insertion_point(field_get:proto.SceneTeamUpdateNotify.is_in_mp)
  return is_in_mp_;
}
void SceneTeamUpdateNotify::set_is_in_mp(bool value) {
  
  is_in_mp_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTeamUpdateNotify.is_in_mp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FocusAvatarReq::kAvatarGuidFieldNumber;
const int FocusAvatarReq::kIsFocusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FocusAvatarReq::FocusAvatarReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FocusAvatarReq)
}
FocusAvatarReq::FocusAvatarReq(const FocusAvatarReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&avatar_guid_, &from.avatar_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_focus_) -
    reinterpret_cast<char*>(&avatar_guid_)) + sizeof(is_focus_));
  // @@protoc_insertion_point(copy_constructor:proto.FocusAvatarReq)
}

void FocusAvatarReq::SharedCtor() {
  ::memset(&avatar_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_focus_) -
      reinterpret_cast<char*>(&avatar_guid_)) + sizeof(is_focus_));
  _cached_size_ = 0;
}

FocusAvatarReq::~FocusAvatarReq() {
  // @@protoc_insertion_point(destructor:proto.FocusAvatarReq)
  SharedDtor();
}

void FocusAvatarReq::SharedDtor() {
}

void FocusAvatarReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FocusAvatarReq::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FocusAvatarReq& FocusAvatarReq::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

FocusAvatarReq* FocusAvatarReq::New(::google::protobuf::Arena* arena) const {
  FocusAvatarReq* n = new FocusAvatarReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FocusAvatarReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FocusAvatarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&avatar_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_focus_) -
      reinterpret_cast<char*>(&avatar_guid_)) + sizeof(is_focus_));
  _internal_metadata_.Clear();
}

bool FocusAvatarReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FocusAvatarReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 avatar_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_focus = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_focus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FocusAvatarReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FocusAvatarReq)
  return false;
#undef DO_
}

void FocusAvatarReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FocusAvatarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 avatar_guid = 1;
  if (this->avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->avatar_guid(), output);
  }

  // bool is_focus = 8;
  if (this->is_focus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_focus(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FocusAvatarReq)
}

::google::protobuf::uint8* FocusAvatarReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FocusAvatarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 avatar_guid = 1;
  if (this->avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->avatar_guid(), target);
  }

  // bool is_focus = 8;
  if (this->is_focus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_focus(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FocusAvatarReq)
  return target;
}

size_t FocusAvatarReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FocusAvatarReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 avatar_guid = 1;
  if (this->avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->avatar_guid());
  }

  // bool is_focus = 8;
  if (this->is_focus() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FocusAvatarReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FocusAvatarReq)
  GOOGLE_DCHECK_NE(&from, this);
  const FocusAvatarReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FocusAvatarReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FocusAvatarReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FocusAvatarReq)
    MergeFrom(*source);
  }
}

void FocusAvatarReq::MergeFrom(const FocusAvatarReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FocusAvatarReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_guid() != 0) {
    set_avatar_guid(from.avatar_guid());
  }
  if (from.is_focus() != 0) {
    set_is_focus(from.is_focus());
  }
}

void FocusAvatarReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FocusAvatarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FocusAvatarReq::CopyFrom(const FocusAvatarReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FocusAvatarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FocusAvatarReq::IsInitialized() const {
  return true;
}

void FocusAvatarReq::Swap(FocusAvatarReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FocusAvatarReq::InternalSwap(FocusAvatarReq* other) {
  using std::swap;
  swap(avatar_guid_, other->avatar_guid_);
  swap(is_focus_, other->is_focus_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FocusAvatarReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FocusAvatarReq

// uint64 avatar_guid = 1;
void FocusAvatarReq::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 FocusAvatarReq::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.FocusAvatarReq.avatar_guid)
  return avatar_guid_;
}
void FocusAvatarReq::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.FocusAvatarReq.avatar_guid)
}

// bool is_focus = 8;
void FocusAvatarReq::clear_is_focus() {
  is_focus_ = false;
}
bool FocusAvatarReq::is_focus() const {
  // @@protoc_insertion_point(field_get:proto.FocusAvatarReq.is_focus)
  return is_focus_;
}
void FocusAvatarReq::set_is_focus(bool value) {
  
  is_focus_ = value;
  // @@protoc_insertion_point(field_set:proto.FocusAvatarReq.is_focus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FocusAvatarRsp::kRetcodeFieldNumber;
const int FocusAvatarRsp::kIsFocusFieldNumber;
const int FocusAvatarRsp::kAvatarGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FocusAvatarRsp::FocusAvatarRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FocusAvatarRsp)
}
FocusAvatarRsp::FocusAvatarRsp(const FocusAvatarRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&avatar_guid_, &from.avatar_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_focus_) -
    reinterpret_cast<char*>(&avatar_guid_)) + sizeof(is_focus_));
  // @@protoc_insertion_point(copy_constructor:proto.FocusAvatarRsp)
}

void FocusAvatarRsp::SharedCtor() {
  ::memset(&avatar_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_focus_) -
      reinterpret_cast<char*>(&avatar_guid_)) + sizeof(is_focus_));
  _cached_size_ = 0;
}

FocusAvatarRsp::~FocusAvatarRsp() {
  // @@protoc_insertion_point(destructor:proto.FocusAvatarRsp)
  SharedDtor();
}

void FocusAvatarRsp::SharedDtor() {
}

void FocusAvatarRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FocusAvatarRsp::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FocusAvatarRsp& FocusAvatarRsp::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

FocusAvatarRsp* FocusAvatarRsp::New(::google::protobuf::Arena* arena) const {
  FocusAvatarRsp* n = new FocusAvatarRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FocusAvatarRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FocusAvatarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&avatar_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_focus_) -
      reinterpret_cast<char*>(&avatar_guid_)) + sizeof(is_focus_));
  _internal_metadata_.Clear();
}

bool FocusAvatarRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FocusAvatarRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 avatar_guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_focus = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_focus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FocusAvatarRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FocusAvatarRsp)
  return false;
#undef DO_
}

void FocusAvatarRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FocusAvatarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 avatar_guid = 4;
  if (this->avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->avatar_guid(), output);
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->retcode(), output);
  }

  // bool is_focus = 11;
  if (this->is_focus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_focus(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FocusAvatarRsp)
}

::google::protobuf::uint8* FocusAvatarRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FocusAvatarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 avatar_guid = 4;
  if (this->avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->avatar_guid(), target);
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->retcode(), target);
  }

  // bool is_focus = 11;
  if (this->is_focus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_focus(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FocusAvatarRsp)
  return target;
}

size_t FocusAvatarRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FocusAvatarRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 avatar_guid = 4;
  if (this->avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->avatar_guid());
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // bool is_focus = 11;
  if (this->is_focus() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FocusAvatarRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FocusAvatarRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const FocusAvatarRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FocusAvatarRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FocusAvatarRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FocusAvatarRsp)
    MergeFrom(*source);
  }
}

void FocusAvatarRsp::MergeFrom(const FocusAvatarRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FocusAvatarRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_guid() != 0) {
    set_avatar_guid(from.avatar_guid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.is_focus() != 0) {
    set_is_focus(from.is_focus());
  }
}

void FocusAvatarRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FocusAvatarRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FocusAvatarRsp::CopyFrom(const FocusAvatarRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FocusAvatarRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FocusAvatarRsp::IsInitialized() const {
  return true;
}

void FocusAvatarRsp::Swap(FocusAvatarRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FocusAvatarRsp::InternalSwap(FocusAvatarRsp* other) {
  using std::swap;
  swap(avatar_guid_, other->avatar_guid_);
  swap(retcode_, other->retcode_);
  swap(is_focus_, other->is_focus_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FocusAvatarRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FocusAvatarRsp

// int32 retcode = 5;
void FocusAvatarRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 FocusAvatarRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.FocusAvatarRsp.retcode)
  return retcode_;
}
void FocusAvatarRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.FocusAvatarRsp.retcode)
}

// bool is_focus = 11;
void FocusAvatarRsp::clear_is_focus() {
  is_focus_ = false;
}
bool FocusAvatarRsp::is_focus() const {
  // @@protoc_insertion_point(field_get:proto.FocusAvatarRsp.is_focus)
  return is_focus_;
}
void FocusAvatarRsp::set_is_focus(bool value) {
  
  is_focus_ = value;
  // @@protoc_insertion_point(field_set:proto.FocusAvatarRsp.is_focus)
}

// uint64 avatar_guid = 4;
void FocusAvatarRsp::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 FocusAvatarRsp::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.FocusAvatarRsp.avatar_guid)
  return avatar_guid_;
}
void FocusAvatarRsp::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.FocusAvatarRsp.avatar_guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarSatiationData::kFinishTimeFieldNumber;
const int AvatarSatiationData::kAvatarGuidFieldNumber;
const int AvatarSatiationData::kPenaltyFinishTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarSatiationData::AvatarSatiationData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarSatiationData)
}
AvatarSatiationData::AvatarSatiationData(const AvatarSatiationData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&avatar_guid_, &from.avatar_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&finish_time_) -
    reinterpret_cast<char*>(&avatar_guid_)) + sizeof(finish_time_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarSatiationData)
}

void AvatarSatiationData::SharedCtor() {
  ::memset(&avatar_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&finish_time_) -
      reinterpret_cast<char*>(&avatar_guid_)) + sizeof(finish_time_));
  _cached_size_ = 0;
}

AvatarSatiationData::~AvatarSatiationData() {
  // @@protoc_insertion_point(destructor:proto.AvatarSatiationData)
  SharedDtor();
}

void AvatarSatiationData::SharedDtor() {
}

void AvatarSatiationData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarSatiationData::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarSatiationData& AvatarSatiationData::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarSatiationData* AvatarSatiationData::New(::google::protobuf::Arena* arena) const {
  AvatarSatiationData* n = new AvatarSatiationData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarSatiationData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarSatiationData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&avatar_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&finish_time_) -
      reinterpret_cast<char*>(&avatar_guid_)) + sizeof(finish_time_));
  _internal_metadata_.Clear();
}

bool AvatarSatiationData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarSatiationData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float penalty_finish_time = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &penalty_finish_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 avatar_guid = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float finish_time = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(117u /* 117 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &finish_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarSatiationData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarSatiationData)
  return false;
#undef DO_
}

void AvatarSatiationData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarSatiationData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float penalty_finish_time = 12;
  if (this->penalty_finish_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->penalty_finish_time(), output);
  }

  // uint64 avatar_guid = 13;
  if (this->avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->avatar_guid(), output);
  }

  // float finish_time = 14;
  if (this->finish_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->finish_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarSatiationData)
}

::google::protobuf::uint8* AvatarSatiationData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarSatiationData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float penalty_finish_time = 12;
  if (this->penalty_finish_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->penalty_finish_time(), target);
  }

  // uint64 avatar_guid = 13;
  if (this->avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->avatar_guid(), target);
  }

  // float finish_time = 14;
  if (this->finish_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->finish_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarSatiationData)
  return target;
}

size_t AvatarSatiationData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarSatiationData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 avatar_guid = 13;
  if (this->avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->avatar_guid());
  }

  // float penalty_finish_time = 12;
  if (this->penalty_finish_time() != 0) {
    total_size += 1 + 4;
  }

  // float finish_time = 14;
  if (this->finish_time() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarSatiationData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarSatiationData)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarSatiationData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarSatiationData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarSatiationData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarSatiationData)
    MergeFrom(*source);
  }
}

void AvatarSatiationData::MergeFrom(const AvatarSatiationData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarSatiationData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_guid() != 0) {
    set_avatar_guid(from.avatar_guid());
  }
  if (from.penalty_finish_time() != 0) {
    set_penalty_finish_time(from.penalty_finish_time());
  }
  if (from.finish_time() != 0) {
    set_finish_time(from.finish_time());
  }
}

void AvatarSatiationData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarSatiationData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarSatiationData::CopyFrom(const AvatarSatiationData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarSatiationData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarSatiationData::IsInitialized() const {
  return true;
}

void AvatarSatiationData::Swap(AvatarSatiationData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarSatiationData::InternalSwap(AvatarSatiationData* other) {
  using std::swap;
  swap(avatar_guid_, other->avatar_guid_);
  swap(penalty_finish_time_, other->penalty_finish_time_);
  swap(finish_time_, other->finish_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarSatiationData::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarSatiationData

// float finish_time = 14;
void AvatarSatiationData::clear_finish_time() {
  finish_time_ = 0;
}
float AvatarSatiationData::finish_time() const {
  // @@protoc_insertion_point(field_get:proto.AvatarSatiationData.finish_time)
  return finish_time_;
}
void AvatarSatiationData::set_finish_time(float value) {
  
  finish_time_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarSatiationData.finish_time)
}

// uint64 avatar_guid = 13;
void AvatarSatiationData::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarSatiationData::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarSatiationData.avatar_guid)
  return avatar_guid_;
}
void AvatarSatiationData::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarSatiationData.avatar_guid)
}

// float penalty_finish_time = 12;
void AvatarSatiationData::clear_penalty_finish_time() {
  penalty_finish_time_ = 0;
}
float AvatarSatiationData::penalty_finish_time() const {
  // @@protoc_insertion_point(field_get:proto.AvatarSatiationData.penalty_finish_time)
  return penalty_finish_time_;
}
void AvatarSatiationData::set_penalty_finish_time(float value) {
  
  penalty_finish_time_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarSatiationData.penalty_finish_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarSatiationDataNotify::kSatiationDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarSatiationDataNotify::AvatarSatiationDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarSatiationDataNotify)
}
AvatarSatiationDataNotify::AvatarSatiationDataNotify(const AvatarSatiationDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      satiation_data_list_(from.satiation_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.AvatarSatiationDataNotify)
}

void AvatarSatiationDataNotify::SharedCtor() {
  _cached_size_ = 0;
}

AvatarSatiationDataNotify::~AvatarSatiationDataNotify() {
  // @@protoc_insertion_point(destructor:proto.AvatarSatiationDataNotify)
  SharedDtor();
}

void AvatarSatiationDataNotify::SharedDtor() {
}

void AvatarSatiationDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarSatiationDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarSatiationDataNotify& AvatarSatiationDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarSatiationDataNotify* AvatarSatiationDataNotify::New(::google::protobuf::Arena* arena) const {
  AvatarSatiationDataNotify* n = new AvatarSatiationDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarSatiationDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarSatiationDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  satiation_data_list_.Clear();
  _internal_metadata_.Clear();
}

bool AvatarSatiationDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarSatiationDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.AvatarSatiationData satiation_data_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_satiation_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarSatiationDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarSatiationDataNotify)
  return false;
#undef DO_
}

void AvatarSatiationDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarSatiationDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.AvatarSatiationData satiation_data_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->satiation_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->satiation_data_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarSatiationDataNotify)
}

::google::protobuf::uint8* AvatarSatiationDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarSatiationDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.AvatarSatiationData satiation_data_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->satiation_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->satiation_data_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarSatiationDataNotify)
  return target;
}

size_t AvatarSatiationDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarSatiationDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.AvatarSatiationData satiation_data_list = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->satiation_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->satiation_data_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarSatiationDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarSatiationDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarSatiationDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarSatiationDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarSatiationDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarSatiationDataNotify)
    MergeFrom(*source);
  }
}

void AvatarSatiationDataNotify::MergeFrom(const AvatarSatiationDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarSatiationDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  satiation_data_list_.MergeFrom(from.satiation_data_list_);
}

void AvatarSatiationDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarSatiationDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarSatiationDataNotify::CopyFrom(const AvatarSatiationDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarSatiationDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarSatiationDataNotify::IsInitialized() const {
  return true;
}

void AvatarSatiationDataNotify::Swap(AvatarSatiationDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarSatiationDataNotify::InternalSwap(AvatarSatiationDataNotify* other) {
  using std::swap;
  satiation_data_list_.InternalSwap(&other->satiation_data_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarSatiationDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarSatiationDataNotify

// repeated .proto.AvatarSatiationData satiation_data_list = 6;
int AvatarSatiationDataNotify::satiation_data_list_size() const {
  return satiation_data_list_.size();
}
void AvatarSatiationDataNotify::clear_satiation_data_list() {
  satiation_data_list_.Clear();
}
const ::proto::AvatarSatiationData& AvatarSatiationDataNotify::satiation_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarSatiationDataNotify.satiation_data_list)
  return satiation_data_list_.Get(index);
}
::proto::AvatarSatiationData* AvatarSatiationDataNotify::mutable_satiation_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AvatarSatiationDataNotify.satiation_data_list)
  return satiation_data_list_.Mutable(index);
}
::proto::AvatarSatiationData* AvatarSatiationDataNotify::add_satiation_data_list() {
  // @@protoc_insertion_point(field_add:proto.AvatarSatiationDataNotify.satiation_data_list)
  return satiation_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::AvatarSatiationData >*
AvatarSatiationDataNotify::mutable_satiation_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarSatiationDataNotify.satiation_data_list)
  return &satiation_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::AvatarSatiationData >&
AvatarSatiationDataNotify::satiation_data_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarSatiationDataNotify.satiation_data_list)
  return satiation_data_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarWearFlycloakReq::kAvatarGuidFieldNumber;
const int AvatarWearFlycloakReq::kFlycloakIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarWearFlycloakReq::AvatarWearFlycloakReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarWearFlycloakReq)
}
AvatarWearFlycloakReq::AvatarWearFlycloakReq(const AvatarWearFlycloakReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&flycloak_id_, &from.flycloak_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&avatar_guid_) -
    reinterpret_cast<char*>(&flycloak_id_)) + sizeof(avatar_guid_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarWearFlycloakReq)
}

void AvatarWearFlycloakReq::SharedCtor() {
  ::memset(&flycloak_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avatar_guid_) -
      reinterpret_cast<char*>(&flycloak_id_)) + sizeof(avatar_guid_));
  _cached_size_ = 0;
}

AvatarWearFlycloakReq::~AvatarWearFlycloakReq() {
  // @@protoc_insertion_point(destructor:proto.AvatarWearFlycloakReq)
  SharedDtor();
}

void AvatarWearFlycloakReq::SharedDtor() {
}

void AvatarWearFlycloakReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarWearFlycloakReq::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarWearFlycloakReq& AvatarWearFlycloakReq::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarWearFlycloakReq* AvatarWearFlycloakReq::New(::google::protobuf::Arena* arena) const {
  AvatarWearFlycloakReq* n = new AvatarWearFlycloakReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarWearFlycloakReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarWearFlycloakReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&flycloak_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avatar_guid_) -
      reinterpret_cast<char*>(&flycloak_id_)) + sizeof(avatar_guid_));
  _internal_metadata_.Clear();
}

bool AvatarWearFlycloakReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarWearFlycloakReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 avatar_guid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 flycloak_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flycloak_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarWearFlycloakReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarWearFlycloakReq)
  return false;
#undef DO_
}

void AvatarWearFlycloakReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarWearFlycloakReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 avatar_guid = 11;
  if (this->avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->avatar_guid(), output);
  }

  // uint32 flycloak_id = 13;
  if (this->flycloak_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->flycloak_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarWearFlycloakReq)
}

::google::protobuf::uint8* AvatarWearFlycloakReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarWearFlycloakReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 avatar_guid = 11;
  if (this->avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->avatar_guid(), target);
  }

  // uint32 flycloak_id = 13;
  if (this->flycloak_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->flycloak_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarWearFlycloakReq)
  return target;
}

size_t AvatarWearFlycloakReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarWearFlycloakReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 flycloak_id = 13;
  if (this->flycloak_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flycloak_id());
  }

  // uint64 avatar_guid = 11;
  if (this->avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->avatar_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarWearFlycloakReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarWearFlycloakReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarWearFlycloakReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarWearFlycloakReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarWearFlycloakReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarWearFlycloakReq)
    MergeFrom(*source);
  }
}

void AvatarWearFlycloakReq::MergeFrom(const AvatarWearFlycloakReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarWearFlycloakReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.flycloak_id() != 0) {
    set_flycloak_id(from.flycloak_id());
  }
  if (from.avatar_guid() != 0) {
    set_avatar_guid(from.avatar_guid());
  }
}

void AvatarWearFlycloakReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarWearFlycloakReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarWearFlycloakReq::CopyFrom(const AvatarWearFlycloakReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarWearFlycloakReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarWearFlycloakReq::IsInitialized() const {
  return true;
}

void AvatarWearFlycloakReq::Swap(AvatarWearFlycloakReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarWearFlycloakReq::InternalSwap(AvatarWearFlycloakReq* other) {
  using std::swap;
  swap(flycloak_id_, other->flycloak_id_);
  swap(avatar_guid_, other->avatar_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarWearFlycloakReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarWearFlycloakReq

// uint64 avatar_guid = 11;
void AvatarWearFlycloakReq::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarWearFlycloakReq::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarWearFlycloakReq.avatar_guid)
  return avatar_guid_;
}
void AvatarWearFlycloakReq::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarWearFlycloakReq.avatar_guid)
}

// uint32 flycloak_id = 13;
void AvatarWearFlycloakReq::clear_flycloak_id() {
  flycloak_id_ = 0u;
}
::google::protobuf::uint32 AvatarWearFlycloakReq::flycloak_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarWearFlycloakReq.flycloak_id)
  return flycloak_id_;
}
void AvatarWearFlycloakReq::set_flycloak_id(::google::protobuf::uint32 value) {
  
  flycloak_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarWearFlycloakReq.flycloak_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarWearFlycloakRsp::kFlycloakIdFieldNumber;
const int AvatarWearFlycloakRsp::kAvatarGuidFieldNumber;
const int AvatarWearFlycloakRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarWearFlycloakRsp::AvatarWearFlycloakRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarWearFlycloakRsp)
}
AvatarWearFlycloakRsp::AvatarWearFlycloakRsp(const AvatarWearFlycloakRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&avatar_guid_, &from.avatar_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&flycloak_id_) -
    reinterpret_cast<char*>(&avatar_guid_)) + sizeof(flycloak_id_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarWearFlycloakRsp)
}

void AvatarWearFlycloakRsp::SharedCtor() {
  ::memset(&avatar_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flycloak_id_) -
      reinterpret_cast<char*>(&avatar_guid_)) + sizeof(flycloak_id_));
  _cached_size_ = 0;
}

AvatarWearFlycloakRsp::~AvatarWearFlycloakRsp() {
  // @@protoc_insertion_point(destructor:proto.AvatarWearFlycloakRsp)
  SharedDtor();
}

void AvatarWearFlycloakRsp::SharedDtor() {
}

void AvatarWearFlycloakRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarWearFlycloakRsp::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarWearFlycloakRsp& AvatarWearFlycloakRsp::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarWearFlycloakRsp* AvatarWearFlycloakRsp::New(::google::protobuf::Arena* arena) const {
  AvatarWearFlycloakRsp* n = new AvatarWearFlycloakRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarWearFlycloakRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarWearFlycloakRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&avatar_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flycloak_id_) -
      reinterpret_cast<char*>(&avatar_guid_)) + sizeof(flycloak_id_));
  _internal_metadata_.Clear();
}

bool AvatarWearFlycloakRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarWearFlycloakRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 avatar_guid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 flycloak_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flycloak_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarWearFlycloakRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarWearFlycloakRsp)
  return false;
#undef DO_
}

void AvatarWearFlycloakRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarWearFlycloakRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->retcode(), output);
  }

  // uint64 avatar_guid = 7;
  if (this->avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->avatar_guid(), output);
  }

  // uint32 flycloak_id = 13;
  if (this->flycloak_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->flycloak_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarWearFlycloakRsp)
}

::google::protobuf::uint8* AvatarWearFlycloakRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarWearFlycloakRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->retcode(), target);
  }

  // uint64 avatar_guid = 7;
  if (this->avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->avatar_guid(), target);
  }

  // uint32 flycloak_id = 13;
  if (this->flycloak_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->flycloak_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarWearFlycloakRsp)
  return target;
}

size_t AvatarWearFlycloakRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarWearFlycloakRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 avatar_guid = 7;
  if (this->avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->avatar_guid());
  }

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 flycloak_id = 13;
  if (this->flycloak_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flycloak_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarWearFlycloakRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarWearFlycloakRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarWearFlycloakRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarWearFlycloakRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarWearFlycloakRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarWearFlycloakRsp)
    MergeFrom(*source);
  }
}

void AvatarWearFlycloakRsp::MergeFrom(const AvatarWearFlycloakRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarWearFlycloakRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_guid() != 0) {
    set_avatar_guid(from.avatar_guid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.flycloak_id() != 0) {
    set_flycloak_id(from.flycloak_id());
  }
}

void AvatarWearFlycloakRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarWearFlycloakRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarWearFlycloakRsp::CopyFrom(const AvatarWearFlycloakRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarWearFlycloakRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarWearFlycloakRsp::IsInitialized() const {
  return true;
}

void AvatarWearFlycloakRsp::Swap(AvatarWearFlycloakRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarWearFlycloakRsp::InternalSwap(AvatarWearFlycloakRsp* other) {
  using std::swap;
  swap(avatar_guid_, other->avatar_guid_);
  swap(retcode_, other->retcode_);
  swap(flycloak_id_, other->flycloak_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarWearFlycloakRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarWearFlycloakRsp

// uint32 flycloak_id = 13;
void AvatarWearFlycloakRsp::clear_flycloak_id() {
  flycloak_id_ = 0u;
}
::google::protobuf::uint32 AvatarWearFlycloakRsp::flycloak_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarWearFlycloakRsp.flycloak_id)
  return flycloak_id_;
}
void AvatarWearFlycloakRsp::set_flycloak_id(::google::protobuf::uint32 value) {
  
  flycloak_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarWearFlycloakRsp.flycloak_id)
}

// uint64 avatar_guid = 7;
void AvatarWearFlycloakRsp::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarWearFlycloakRsp::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarWearFlycloakRsp.avatar_guid)
  return avatar_guid_;
}
void AvatarWearFlycloakRsp::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarWearFlycloakRsp.avatar_guid)
}

// int32 retcode = 6;
void AvatarWearFlycloakRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 AvatarWearFlycloakRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AvatarWearFlycloakRsp.retcode)
  return retcode_;
}
void AvatarWearFlycloakRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarWearFlycloakRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarFlycloakChangeNotify::kFlycloakIdFieldNumber;
const int AvatarFlycloakChangeNotify::kAvatarGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarFlycloakChangeNotify::AvatarFlycloakChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarFlycloakChangeNotify)
}
AvatarFlycloakChangeNotify::AvatarFlycloakChangeNotify(const AvatarFlycloakChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&avatar_guid_, &from.avatar_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&flycloak_id_) -
    reinterpret_cast<char*>(&avatar_guid_)) + sizeof(flycloak_id_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarFlycloakChangeNotify)
}

void AvatarFlycloakChangeNotify::SharedCtor() {
  ::memset(&avatar_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flycloak_id_) -
      reinterpret_cast<char*>(&avatar_guid_)) + sizeof(flycloak_id_));
  _cached_size_ = 0;
}

AvatarFlycloakChangeNotify::~AvatarFlycloakChangeNotify() {
  // @@protoc_insertion_point(destructor:proto.AvatarFlycloakChangeNotify)
  SharedDtor();
}

void AvatarFlycloakChangeNotify::SharedDtor() {
}

void AvatarFlycloakChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarFlycloakChangeNotify::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarFlycloakChangeNotify& AvatarFlycloakChangeNotify::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarFlycloakChangeNotify* AvatarFlycloakChangeNotify::New(::google::protobuf::Arena* arena) const {
  AvatarFlycloakChangeNotify* n = new AvatarFlycloakChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarFlycloakChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarFlycloakChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&avatar_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flycloak_id_) -
      reinterpret_cast<char*>(&avatar_guid_)) + sizeof(flycloak_id_));
  _internal_metadata_.Clear();
}

bool AvatarFlycloakChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarFlycloakChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 avatar_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 flycloak_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flycloak_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarFlycloakChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarFlycloakChangeNotify)
  return false;
#undef DO_
}

void AvatarFlycloakChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarFlycloakChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 avatar_guid = 2;
  if (this->avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->avatar_guid(), output);
  }

  // uint32 flycloak_id = 8;
  if (this->flycloak_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->flycloak_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarFlycloakChangeNotify)
}

::google::protobuf::uint8* AvatarFlycloakChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarFlycloakChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 avatar_guid = 2;
  if (this->avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->avatar_guid(), target);
  }

  // uint32 flycloak_id = 8;
  if (this->flycloak_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->flycloak_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarFlycloakChangeNotify)
  return target;
}

size_t AvatarFlycloakChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarFlycloakChangeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 avatar_guid = 2;
  if (this->avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->avatar_guid());
  }

  // uint32 flycloak_id = 8;
  if (this->flycloak_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flycloak_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarFlycloakChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarFlycloakChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarFlycloakChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarFlycloakChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarFlycloakChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarFlycloakChangeNotify)
    MergeFrom(*source);
  }
}

void AvatarFlycloakChangeNotify::MergeFrom(const AvatarFlycloakChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarFlycloakChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_guid() != 0) {
    set_avatar_guid(from.avatar_guid());
  }
  if (from.flycloak_id() != 0) {
    set_flycloak_id(from.flycloak_id());
  }
}

void AvatarFlycloakChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarFlycloakChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarFlycloakChangeNotify::CopyFrom(const AvatarFlycloakChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarFlycloakChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarFlycloakChangeNotify::IsInitialized() const {
  return true;
}

void AvatarFlycloakChangeNotify::Swap(AvatarFlycloakChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarFlycloakChangeNotify::InternalSwap(AvatarFlycloakChangeNotify* other) {
  using std::swap;
  swap(avatar_guid_, other->avatar_guid_);
  swap(flycloak_id_, other->flycloak_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarFlycloakChangeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarFlycloakChangeNotify

// uint32 flycloak_id = 8;
void AvatarFlycloakChangeNotify::clear_flycloak_id() {
  flycloak_id_ = 0u;
}
::google::protobuf::uint32 AvatarFlycloakChangeNotify::flycloak_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarFlycloakChangeNotify.flycloak_id)
  return flycloak_id_;
}
void AvatarFlycloakChangeNotify::set_flycloak_id(::google::protobuf::uint32 value) {
  
  flycloak_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarFlycloakChangeNotify.flycloak_id)
}

// uint64 avatar_guid = 2;
void AvatarFlycloakChangeNotify::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarFlycloakChangeNotify::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarFlycloakChangeNotify.avatar_guid)
  return avatar_guid_;
}
void AvatarFlycloakChangeNotify::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarFlycloakChangeNotify.avatar_guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarGainFlycloakNotify::kFlycloakIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarGainFlycloakNotify::AvatarGainFlycloakNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarGainFlycloakNotify)
}
AvatarGainFlycloakNotify::AvatarGainFlycloakNotify(const AvatarGainFlycloakNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  flycloak_id_ = from.flycloak_id_;
  // @@protoc_insertion_point(copy_constructor:proto.AvatarGainFlycloakNotify)
}

void AvatarGainFlycloakNotify::SharedCtor() {
  flycloak_id_ = 0u;
  _cached_size_ = 0;
}

AvatarGainFlycloakNotify::~AvatarGainFlycloakNotify() {
  // @@protoc_insertion_point(destructor:proto.AvatarGainFlycloakNotify)
  SharedDtor();
}

void AvatarGainFlycloakNotify::SharedDtor() {
}

void AvatarGainFlycloakNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarGainFlycloakNotify::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarGainFlycloakNotify& AvatarGainFlycloakNotify::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarGainFlycloakNotify* AvatarGainFlycloakNotify::New(::google::protobuf::Arena* arena) const {
  AvatarGainFlycloakNotify* n = new AvatarGainFlycloakNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarGainFlycloakNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarGainFlycloakNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  flycloak_id_ = 0u;
  _internal_metadata_.Clear();
}

bool AvatarGainFlycloakNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarGainFlycloakNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 flycloak_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flycloak_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarGainFlycloakNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarGainFlycloakNotify)
  return false;
#undef DO_
}

void AvatarGainFlycloakNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarGainFlycloakNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 flycloak_id = 3;
  if (this->flycloak_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->flycloak_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarGainFlycloakNotify)
}

::google::protobuf::uint8* AvatarGainFlycloakNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarGainFlycloakNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 flycloak_id = 3;
  if (this->flycloak_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->flycloak_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarGainFlycloakNotify)
  return target;
}

size_t AvatarGainFlycloakNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarGainFlycloakNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 flycloak_id = 3;
  if (this->flycloak_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flycloak_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarGainFlycloakNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarGainFlycloakNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarGainFlycloakNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarGainFlycloakNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarGainFlycloakNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarGainFlycloakNotify)
    MergeFrom(*source);
  }
}

void AvatarGainFlycloakNotify::MergeFrom(const AvatarGainFlycloakNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarGainFlycloakNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.flycloak_id() != 0) {
    set_flycloak_id(from.flycloak_id());
  }
}

void AvatarGainFlycloakNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarGainFlycloakNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarGainFlycloakNotify::CopyFrom(const AvatarGainFlycloakNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarGainFlycloakNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarGainFlycloakNotify::IsInitialized() const {
  return true;
}

void AvatarGainFlycloakNotify::Swap(AvatarGainFlycloakNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarGainFlycloakNotify::InternalSwap(AvatarGainFlycloakNotify* other) {
  using std::swap;
  swap(flycloak_id_, other->flycloak_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarGainFlycloakNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarGainFlycloakNotify

// uint32 flycloak_id = 3;
void AvatarGainFlycloakNotify::clear_flycloak_id() {
  flycloak_id_ = 0u;
}
::google::protobuf::uint32 AvatarGainFlycloakNotify::flycloak_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarGainFlycloakNotify.flycloak_id)
  return flycloak_id_;
}
void AvatarGainFlycloakNotify::set_flycloak_id(::google::protobuf::uint32 value) {
  
  flycloak_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarGainFlycloakNotify.flycloak_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarEquipAffixStartNotify::kAvatarGuidFieldNumber;
const int AvatarEquipAffixStartNotify::kEquipAffixInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarEquipAffixStartNotify::AvatarEquipAffixStartNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarEquipAffixStartNotify)
}
AvatarEquipAffixStartNotify::AvatarEquipAffixStartNotify(const AvatarEquipAffixStartNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_equip_affix_info()) {
    equip_affix_info_ = new ::proto::AvatarEquipAffixInfo(*from.equip_affix_info_);
  } else {
    equip_affix_info_ = NULL;
  }
  avatar_guid_ = from.avatar_guid_;
  // @@protoc_insertion_point(copy_constructor:proto.AvatarEquipAffixStartNotify)
}

void AvatarEquipAffixStartNotify::SharedCtor() {
  ::memset(&equip_affix_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avatar_guid_) -
      reinterpret_cast<char*>(&equip_affix_info_)) + sizeof(avatar_guid_));
  _cached_size_ = 0;
}

AvatarEquipAffixStartNotify::~AvatarEquipAffixStartNotify() {
  // @@protoc_insertion_point(destructor:proto.AvatarEquipAffixStartNotify)
  SharedDtor();
}

void AvatarEquipAffixStartNotify::SharedDtor() {
  if (this != internal_default_instance()) delete equip_affix_info_;
}

void AvatarEquipAffixStartNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarEquipAffixStartNotify::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarEquipAffixStartNotify& AvatarEquipAffixStartNotify::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarEquipAffixStartNotify* AvatarEquipAffixStartNotify::New(::google::protobuf::Arena* arena) const {
  AvatarEquipAffixStartNotify* n = new AvatarEquipAffixStartNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarEquipAffixStartNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarEquipAffixStartNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && equip_affix_info_ != NULL) {
    delete equip_affix_info_;
  }
  equip_affix_info_ = NULL;
  avatar_guid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool AvatarEquipAffixStartNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarEquipAffixStartNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 avatar_guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AvatarEquipAffixInfo equip_affix_info = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equip_affix_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarEquipAffixStartNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarEquipAffixStartNotify)
  return false;
#undef DO_
}

void AvatarEquipAffixStartNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarEquipAffixStartNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 avatar_guid = 4;
  if (this->avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->avatar_guid(), output);
  }

  // .proto.AvatarEquipAffixInfo equip_affix_info = 12;
  if (this->has_equip_affix_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->equip_affix_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarEquipAffixStartNotify)
}

::google::protobuf::uint8* AvatarEquipAffixStartNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarEquipAffixStartNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 avatar_guid = 4;
  if (this->avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->avatar_guid(), target);
  }

  // .proto.AvatarEquipAffixInfo equip_affix_info = 12;
  if (this->has_equip_affix_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->equip_affix_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarEquipAffixStartNotify)
  return target;
}

size_t AvatarEquipAffixStartNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarEquipAffixStartNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.AvatarEquipAffixInfo equip_affix_info = 12;
  if (this->has_equip_affix_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->equip_affix_info_);
  }

  // uint64 avatar_guid = 4;
  if (this->avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->avatar_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarEquipAffixStartNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarEquipAffixStartNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarEquipAffixStartNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarEquipAffixStartNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarEquipAffixStartNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarEquipAffixStartNotify)
    MergeFrom(*source);
  }
}

void AvatarEquipAffixStartNotify::MergeFrom(const AvatarEquipAffixStartNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarEquipAffixStartNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_equip_affix_info()) {
    mutable_equip_affix_info()->::proto::AvatarEquipAffixInfo::MergeFrom(from.equip_affix_info());
  }
  if (from.avatar_guid() != 0) {
    set_avatar_guid(from.avatar_guid());
  }
}

void AvatarEquipAffixStartNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarEquipAffixStartNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarEquipAffixStartNotify::CopyFrom(const AvatarEquipAffixStartNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarEquipAffixStartNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarEquipAffixStartNotify::IsInitialized() const {
  return true;
}

void AvatarEquipAffixStartNotify::Swap(AvatarEquipAffixStartNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarEquipAffixStartNotify::InternalSwap(AvatarEquipAffixStartNotify* other) {
  using std::swap;
  swap(equip_affix_info_, other->equip_affix_info_);
  swap(avatar_guid_, other->avatar_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarEquipAffixStartNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarEquipAffixStartNotify

// uint64 avatar_guid = 4;
void AvatarEquipAffixStartNotify::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarEquipAffixStartNotify::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarEquipAffixStartNotify.avatar_guid)
  return avatar_guid_;
}
void AvatarEquipAffixStartNotify::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarEquipAffixStartNotify.avatar_guid)
}

// .proto.AvatarEquipAffixInfo equip_affix_info = 12;
bool AvatarEquipAffixStartNotify::has_equip_affix_info() const {
  return this != internal_default_instance() && equip_affix_info_ != NULL;
}
void AvatarEquipAffixStartNotify::clear_equip_affix_info() {
  if (GetArenaNoVirtual() == NULL && equip_affix_info_ != NULL) delete equip_affix_info_;
  equip_affix_info_ = NULL;
}
const ::proto::AvatarEquipAffixInfo& AvatarEquipAffixStartNotify::equip_affix_info() const {
  const ::proto::AvatarEquipAffixInfo* p = equip_affix_info_;
  // @@protoc_insertion_point(field_get:proto.AvatarEquipAffixStartNotify.equip_affix_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AvatarEquipAffixInfo*>(
      &::proto::_AvatarEquipAffixInfo_default_instance_);
}
::proto::AvatarEquipAffixInfo* AvatarEquipAffixStartNotify::mutable_equip_affix_info() {
  
  if (equip_affix_info_ == NULL) {
    equip_affix_info_ = new ::proto::AvatarEquipAffixInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.AvatarEquipAffixStartNotify.equip_affix_info)
  return equip_affix_info_;
}
::proto::AvatarEquipAffixInfo* AvatarEquipAffixStartNotify::release_equip_affix_info() {
  // @@protoc_insertion_point(field_release:proto.AvatarEquipAffixStartNotify.equip_affix_info)
  
  ::proto::AvatarEquipAffixInfo* temp = equip_affix_info_;
  equip_affix_info_ = NULL;
  return temp;
}
void AvatarEquipAffixStartNotify::set_allocated_equip_affix_info(::proto::AvatarEquipAffixInfo* equip_affix_info) {
  delete equip_affix_info_;
  equip_affix_info_ = equip_affix_info;
  if (equip_affix_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarEquipAffixStartNotify.equip_affix_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarFetterLevelRewardReq::kAvatarGuidFieldNumber;
const int AvatarFetterLevelRewardReq::kFetterLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarFetterLevelRewardReq::AvatarFetterLevelRewardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarFetterLevelRewardReq)
}
AvatarFetterLevelRewardReq::AvatarFetterLevelRewardReq(const AvatarFetterLevelRewardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&avatar_guid_, &from.avatar_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&fetter_level_) -
    reinterpret_cast<char*>(&avatar_guid_)) + sizeof(fetter_level_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarFetterLevelRewardReq)
}

void AvatarFetterLevelRewardReq::SharedCtor() {
  ::memset(&avatar_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fetter_level_) -
      reinterpret_cast<char*>(&avatar_guid_)) + sizeof(fetter_level_));
  _cached_size_ = 0;
}

AvatarFetterLevelRewardReq::~AvatarFetterLevelRewardReq() {
  // @@protoc_insertion_point(destructor:proto.AvatarFetterLevelRewardReq)
  SharedDtor();
}

void AvatarFetterLevelRewardReq::SharedDtor() {
}

void AvatarFetterLevelRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarFetterLevelRewardReq::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarFetterLevelRewardReq& AvatarFetterLevelRewardReq::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarFetterLevelRewardReq* AvatarFetterLevelRewardReq::New(::google::protobuf::Arena* arena) const {
  AvatarFetterLevelRewardReq* n = new AvatarFetterLevelRewardReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarFetterLevelRewardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarFetterLevelRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&avatar_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fetter_level_) -
      reinterpret_cast<char*>(&avatar_guid_)) + sizeof(fetter_level_));
  _internal_metadata_.Clear();
}

bool AvatarFetterLevelRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarFetterLevelRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 avatar_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 fetter_level = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fetter_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarFetterLevelRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarFetterLevelRewardReq)
  return false;
#undef DO_
}

void AvatarFetterLevelRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarFetterLevelRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 avatar_guid = 1;
  if (this->avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->avatar_guid(), output);
  }

  // uint32 fetter_level = 6;
  if (this->fetter_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->fetter_level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarFetterLevelRewardReq)
}

::google::protobuf::uint8* AvatarFetterLevelRewardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarFetterLevelRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 avatar_guid = 1;
  if (this->avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->avatar_guid(), target);
  }

  // uint32 fetter_level = 6;
  if (this->fetter_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->fetter_level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarFetterLevelRewardReq)
  return target;
}

size_t AvatarFetterLevelRewardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarFetterLevelRewardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 avatar_guid = 1;
  if (this->avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->avatar_guid());
  }

  // uint32 fetter_level = 6;
  if (this->fetter_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fetter_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarFetterLevelRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarFetterLevelRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarFetterLevelRewardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarFetterLevelRewardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarFetterLevelRewardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarFetterLevelRewardReq)
    MergeFrom(*source);
  }
}

void AvatarFetterLevelRewardReq::MergeFrom(const AvatarFetterLevelRewardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarFetterLevelRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_guid() != 0) {
    set_avatar_guid(from.avatar_guid());
  }
  if (from.fetter_level() != 0) {
    set_fetter_level(from.fetter_level());
  }
}

void AvatarFetterLevelRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarFetterLevelRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarFetterLevelRewardReq::CopyFrom(const AvatarFetterLevelRewardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarFetterLevelRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarFetterLevelRewardReq::IsInitialized() const {
  return true;
}

void AvatarFetterLevelRewardReq::Swap(AvatarFetterLevelRewardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarFetterLevelRewardReq::InternalSwap(AvatarFetterLevelRewardReq* other) {
  using std::swap;
  swap(avatar_guid_, other->avatar_guid_);
  swap(fetter_level_, other->fetter_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarFetterLevelRewardReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarFetterLevelRewardReq

// uint64 avatar_guid = 1;
void AvatarFetterLevelRewardReq::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarFetterLevelRewardReq::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarFetterLevelRewardReq.avatar_guid)
  return avatar_guid_;
}
void AvatarFetterLevelRewardReq::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarFetterLevelRewardReq.avatar_guid)
}

// uint32 fetter_level = 6;
void AvatarFetterLevelRewardReq::clear_fetter_level() {
  fetter_level_ = 0u;
}
::google::protobuf::uint32 AvatarFetterLevelRewardReq::fetter_level() const {
  // @@protoc_insertion_point(field_get:proto.AvatarFetterLevelRewardReq.fetter_level)
  return fetter_level_;
}
void AvatarFetterLevelRewardReq::set_fetter_level(::google::protobuf::uint32 value) {
  
  fetter_level_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarFetterLevelRewardReq.fetter_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarFetterLevelRewardRsp::kAvatarGuidFieldNumber;
const int AvatarFetterLevelRewardRsp::kRewardIdFieldNumber;
const int AvatarFetterLevelRewardRsp::kRetcodeFieldNumber;
const int AvatarFetterLevelRewardRsp::kFetterLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarFetterLevelRewardRsp::AvatarFetterLevelRewardRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarFetterLevelRewardRsp)
}
AvatarFetterLevelRewardRsp::AvatarFetterLevelRewardRsp(const AvatarFetterLevelRewardRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&avatar_guid_, &from.avatar_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&avatar_guid_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarFetterLevelRewardRsp)
}

void AvatarFetterLevelRewardRsp::SharedCtor() {
  ::memset(&avatar_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&avatar_guid_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

AvatarFetterLevelRewardRsp::~AvatarFetterLevelRewardRsp() {
  // @@protoc_insertion_point(destructor:proto.AvatarFetterLevelRewardRsp)
  SharedDtor();
}

void AvatarFetterLevelRewardRsp::SharedDtor() {
}

void AvatarFetterLevelRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarFetterLevelRewardRsp::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarFetterLevelRewardRsp& AvatarFetterLevelRewardRsp::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarFetterLevelRewardRsp* AvatarFetterLevelRewardRsp::New(::google::protobuf::Arena* arena) const {
  AvatarFetterLevelRewardRsp* n = new AvatarFetterLevelRewardRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarFetterLevelRewardRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarFetterLevelRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&avatar_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&avatar_guid_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool AvatarFetterLevelRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarFetterLevelRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 reward_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reward_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 avatar_guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 fetter_level = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fetter_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarFetterLevelRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarFetterLevelRewardRsp)
  return false;
#undef DO_
}

void AvatarFetterLevelRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarFetterLevelRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 reward_id = 1;
  if (this->reward_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->reward_id(), output);
  }

  // uint64 avatar_guid = 4;
  if (this->avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->avatar_guid(), output);
  }

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->retcode(), output);
  }

  // uint32 fetter_level = 14;
  if (this->fetter_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->fetter_level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarFetterLevelRewardRsp)
}

::google::protobuf::uint8* AvatarFetterLevelRewardRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarFetterLevelRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 reward_id = 1;
  if (this->reward_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->reward_id(), target);
  }

  // uint64 avatar_guid = 4;
  if (this->avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->avatar_guid(), target);
  }

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->retcode(), target);
  }

  // uint32 fetter_level = 14;
  if (this->fetter_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->fetter_level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarFetterLevelRewardRsp)
  return target;
}

size_t AvatarFetterLevelRewardRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarFetterLevelRewardRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 avatar_guid = 4;
  if (this->avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->avatar_guid());
  }

  // uint32 fetter_level = 14;
  if (this->fetter_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fetter_level());
  }

  // uint32 reward_id = 1;
  if (this->reward_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reward_id());
  }

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarFetterLevelRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarFetterLevelRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarFetterLevelRewardRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarFetterLevelRewardRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarFetterLevelRewardRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarFetterLevelRewardRsp)
    MergeFrom(*source);
  }
}

void AvatarFetterLevelRewardRsp::MergeFrom(const AvatarFetterLevelRewardRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarFetterLevelRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_guid() != 0) {
    set_avatar_guid(from.avatar_guid());
  }
  if (from.fetter_level() != 0) {
    set_fetter_level(from.fetter_level());
  }
  if (from.reward_id() != 0) {
    set_reward_id(from.reward_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void AvatarFetterLevelRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarFetterLevelRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarFetterLevelRewardRsp::CopyFrom(const AvatarFetterLevelRewardRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarFetterLevelRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarFetterLevelRewardRsp::IsInitialized() const {
  return true;
}

void AvatarFetterLevelRewardRsp::Swap(AvatarFetterLevelRewardRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarFetterLevelRewardRsp::InternalSwap(AvatarFetterLevelRewardRsp* other) {
  using std::swap;
  swap(avatar_guid_, other->avatar_guid_);
  swap(fetter_level_, other->fetter_level_);
  swap(reward_id_, other->reward_id_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarFetterLevelRewardRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarFetterLevelRewardRsp

// uint64 avatar_guid = 4;
void AvatarFetterLevelRewardRsp::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarFetterLevelRewardRsp::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarFetterLevelRewardRsp.avatar_guid)
  return avatar_guid_;
}
void AvatarFetterLevelRewardRsp::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarFetterLevelRewardRsp.avatar_guid)
}

// uint32 reward_id = 1;
void AvatarFetterLevelRewardRsp::clear_reward_id() {
  reward_id_ = 0u;
}
::google::protobuf::uint32 AvatarFetterLevelRewardRsp::reward_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarFetterLevelRewardRsp.reward_id)
  return reward_id_;
}
void AvatarFetterLevelRewardRsp::set_reward_id(::google::protobuf::uint32 value) {
  
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarFetterLevelRewardRsp.reward_id)
}

// int32 retcode = 13;
void AvatarFetterLevelRewardRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 AvatarFetterLevelRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AvatarFetterLevelRewardRsp.retcode)
  return retcode_;
}
void AvatarFetterLevelRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarFetterLevelRewardRsp.retcode)
}

// uint32 fetter_level = 14;
void AvatarFetterLevelRewardRsp::clear_fetter_level() {
  fetter_level_ = 0u;
}
::google::protobuf::uint32 AvatarFetterLevelRewardRsp::fetter_level() const {
  // @@protoc_insertion_point(field_get:proto.AvatarFetterLevelRewardRsp.fetter_level)
  return fetter_level_;
}
void AvatarFetterLevelRewardRsp::set_fetter_level(::google::protobuf::uint32 value) {
  
  fetter_level_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarFetterLevelRewardRsp.fetter_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddNoGachaAvatarCardTransferItem::kCountFieldNumber;
const int AddNoGachaAvatarCardTransferItem::kItemIdFieldNumber;
const int AddNoGachaAvatarCardTransferItem::kIsNewFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddNoGachaAvatarCardTransferItem::AddNoGachaAvatarCardTransferItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddNoGachaAvatarCardTransferItem)
}
AddNoGachaAvatarCardTransferItem::AddNoGachaAvatarCardTransferItem(const AddNoGachaAvatarCardTransferItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_new_, &from.is_new_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&is_new_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:proto.AddNoGachaAvatarCardTransferItem)
}

void AddNoGachaAvatarCardTransferItem::SharedCtor() {
  ::memset(&is_new_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&is_new_)) + sizeof(count_));
  _cached_size_ = 0;
}

AddNoGachaAvatarCardTransferItem::~AddNoGachaAvatarCardTransferItem() {
  // @@protoc_insertion_point(destructor:proto.AddNoGachaAvatarCardTransferItem)
  SharedDtor();
}

void AddNoGachaAvatarCardTransferItem::SharedDtor() {
}

void AddNoGachaAvatarCardTransferItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddNoGachaAvatarCardTransferItem::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddNoGachaAvatarCardTransferItem& AddNoGachaAvatarCardTransferItem::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddNoGachaAvatarCardTransferItem* AddNoGachaAvatarCardTransferItem::New(::google::protobuf::Arena* arena) const {
  AddNoGachaAvatarCardTransferItem* n = new AddNoGachaAvatarCardTransferItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddNoGachaAvatarCardTransferItem::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddNoGachaAvatarCardTransferItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&is_new_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&is_new_)) + sizeof(count_));
  _internal_metadata_.Clear();
}

bool AddNoGachaAvatarCardTransferItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddNoGachaAvatarCardTransferItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 item_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_new = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_new_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddNoGachaAvatarCardTransferItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddNoGachaAvatarCardTransferItem)
  return false;
#undef DO_
}

void AddNoGachaAvatarCardTransferItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddNoGachaAvatarCardTransferItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 item_id = 6;
  if (this->item_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->item_id(), output);
  }

  // uint32 count = 9;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->count(), output);
  }

  // bool is_new = 15;
  if (this->is_new() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->is_new(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddNoGachaAvatarCardTransferItem)
}

::google::protobuf::uint8* AddNoGachaAvatarCardTransferItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddNoGachaAvatarCardTransferItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 item_id = 6;
  if (this->item_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->item_id(), target);
  }

  // uint32 count = 9;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->count(), target);
  }

  // bool is_new = 15;
  if (this->is_new() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->is_new(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddNoGachaAvatarCardTransferItem)
  return target;
}

size_t AddNoGachaAvatarCardTransferItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddNoGachaAvatarCardTransferItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_new = 15;
  if (this->is_new() != 0) {
    total_size += 1 + 1;
  }

  // uint32 item_id = 6;
  if (this->item_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_id());
  }

  // uint32 count = 9;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddNoGachaAvatarCardTransferItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddNoGachaAvatarCardTransferItem)
  GOOGLE_DCHECK_NE(&from, this);
  const AddNoGachaAvatarCardTransferItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddNoGachaAvatarCardTransferItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddNoGachaAvatarCardTransferItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddNoGachaAvatarCardTransferItem)
    MergeFrom(*source);
  }
}

void AddNoGachaAvatarCardTransferItem::MergeFrom(const AddNoGachaAvatarCardTransferItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddNoGachaAvatarCardTransferItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_new() != 0) {
    set_is_new(from.is_new());
  }
  if (from.item_id() != 0) {
    set_item_id(from.item_id());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void AddNoGachaAvatarCardTransferItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddNoGachaAvatarCardTransferItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddNoGachaAvatarCardTransferItem::CopyFrom(const AddNoGachaAvatarCardTransferItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddNoGachaAvatarCardTransferItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddNoGachaAvatarCardTransferItem::IsInitialized() const {
  return true;
}

void AddNoGachaAvatarCardTransferItem::Swap(AddNoGachaAvatarCardTransferItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddNoGachaAvatarCardTransferItem::InternalSwap(AddNoGachaAvatarCardTransferItem* other) {
  using std::swap;
  swap(is_new_, other->is_new_);
  swap(item_id_, other->item_id_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddNoGachaAvatarCardTransferItem::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddNoGachaAvatarCardTransferItem

// uint32 count = 9;
void AddNoGachaAvatarCardTransferItem::clear_count() {
  count_ = 0u;
}
::google::protobuf::uint32 AddNoGachaAvatarCardTransferItem::count() const {
  // @@protoc_insertion_point(field_get:proto.AddNoGachaAvatarCardTransferItem.count)
  return count_;
}
void AddNoGachaAvatarCardTransferItem::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.AddNoGachaAvatarCardTransferItem.count)
}

// uint32 item_id = 6;
void AddNoGachaAvatarCardTransferItem::clear_item_id() {
  item_id_ = 0u;
}
::google::protobuf::uint32 AddNoGachaAvatarCardTransferItem::item_id() const {
  // @@protoc_insertion_point(field_get:proto.AddNoGachaAvatarCardTransferItem.item_id)
  return item_id_;
}
void AddNoGachaAvatarCardTransferItem::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddNoGachaAvatarCardTransferItem.item_id)
}

// bool is_new = 15;
void AddNoGachaAvatarCardTransferItem::clear_is_new() {
  is_new_ = false;
}
bool AddNoGachaAvatarCardTransferItem::is_new() const {
  // @@protoc_insertion_point(field_get:proto.AddNoGachaAvatarCardTransferItem.is_new)
  return is_new_;
}
void AddNoGachaAvatarCardTransferItem::set_is_new(bool value) {
  
  is_new_ = value;
  // @@protoc_insertion_point(field_set:proto.AddNoGachaAvatarCardTransferItem.is_new)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddNoGachaAvatarCardNotify::kTransferItemListFieldNumber;
const int AddNoGachaAvatarCardNotify::kInitialPromoteLevelFieldNumber;
const int AddNoGachaAvatarCardNotify::kAvatarIdFieldNumber;
const int AddNoGachaAvatarCardNotify::kIsTransferToItemFieldNumber;
const int AddNoGachaAvatarCardNotify::kReasonFieldNumber;
const int AddNoGachaAvatarCardNotify::kInitialLevelFieldNumber;
const int AddNoGachaAvatarCardNotify::kItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddNoGachaAvatarCardNotify::AddNoGachaAvatarCardNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddNoGachaAvatarCardNotify)
}
AddNoGachaAvatarCardNotify::AddNoGachaAvatarCardNotify(const AddNoGachaAvatarCardNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      transfer_item_list_(from.transfer_item_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&initial_promote_level_, &from.initial_promote_level_,
    static_cast<size_t>(reinterpret_cast<char*>(&item_id_) -
    reinterpret_cast<char*>(&initial_promote_level_)) + sizeof(item_id_));
  // @@protoc_insertion_point(copy_constructor:proto.AddNoGachaAvatarCardNotify)
}

void AddNoGachaAvatarCardNotify::SharedCtor() {
  ::memset(&initial_promote_level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_id_) -
      reinterpret_cast<char*>(&initial_promote_level_)) + sizeof(item_id_));
  _cached_size_ = 0;
}

AddNoGachaAvatarCardNotify::~AddNoGachaAvatarCardNotify() {
  // @@protoc_insertion_point(destructor:proto.AddNoGachaAvatarCardNotify)
  SharedDtor();
}

void AddNoGachaAvatarCardNotify::SharedDtor() {
}

void AddNoGachaAvatarCardNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddNoGachaAvatarCardNotify::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddNoGachaAvatarCardNotify& AddNoGachaAvatarCardNotify::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddNoGachaAvatarCardNotify* AddNoGachaAvatarCardNotify::New(::google::protobuf::Arena* arena) const {
  AddNoGachaAvatarCardNotify* n = new AddNoGachaAvatarCardNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddNoGachaAvatarCardNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddNoGachaAvatarCardNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transfer_item_list_.Clear();
  ::memset(&initial_promote_level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_id_) -
      reinterpret_cast<char*>(&initial_promote_level_)) + sizeof(item_id_));
  _internal_metadata_.Clear();
}

bool AddNoGachaAvatarCardNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddNoGachaAvatarCardNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 initial_promote_level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &initial_promote_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.AddNoGachaAvatarCardTransferItem transfer_item_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_transfer_item_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_transfer_to_item = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_transfer_to_item_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 avatar_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reason = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 initial_level = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &initial_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 item_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddNoGachaAvatarCardNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddNoGachaAvatarCardNotify)
  return false;
#undef DO_
}

void AddNoGachaAvatarCardNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddNoGachaAvatarCardNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 initial_promote_level = 2;
  if (this->initial_promote_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->initial_promote_level(), output);
  }

  // repeated .proto.AddNoGachaAvatarCardTransferItem transfer_item_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transfer_item_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->transfer_item_list(static_cast<int>(i)), output);
  }

  // bool is_transfer_to_item = 6;
  if (this->is_transfer_to_item() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_transfer_to_item(), output);
  }

  // uint32 avatar_id = 8;
  if (this->avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->avatar_id(), output);
  }

  // uint32 reason = 9;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->reason(), output);
  }

  // uint32 initial_level = 10;
  if (this->initial_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->initial_level(), output);
  }

  // uint32 item_id = 14;
  if (this->item_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->item_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddNoGachaAvatarCardNotify)
}

::google::protobuf::uint8* AddNoGachaAvatarCardNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddNoGachaAvatarCardNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 initial_promote_level = 2;
  if (this->initial_promote_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->initial_promote_level(), target);
  }

  // repeated .proto.AddNoGachaAvatarCardTransferItem transfer_item_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transfer_item_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->transfer_item_list(static_cast<int>(i)), deterministic, target);
  }

  // bool is_transfer_to_item = 6;
  if (this->is_transfer_to_item() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_transfer_to_item(), target);
  }

  // uint32 avatar_id = 8;
  if (this->avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->avatar_id(), target);
  }

  // uint32 reason = 9;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->reason(), target);
  }

  // uint32 initial_level = 10;
  if (this->initial_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->initial_level(), target);
  }

  // uint32 item_id = 14;
  if (this->item_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->item_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddNoGachaAvatarCardNotify)
  return target;
}

size_t AddNoGachaAvatarCardNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddNoGachaAvatarCardNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.AddNoGachaAvatarCardTransferItem transfer_item_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->transfer_item_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->transfer_item_list(static_cast<int>(i)));
    }
  }

  // uint32 initial_promote_level = 2;
  if (this->initial_promote_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->initial_promote_level());
  }

  // bool is_transfer_to_item = 6;
  if (this->is_transfer_to_item() != 0) {
    total_size += 1 + 1;
  }

  // uint32 avatar_id = 8;
  if (this->avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_id());
  }

  // uint32 reason = 9;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reason());
  }

  // uint32 initial_level = 10;
  if (this->initial_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->initial_level());
  }

  // uint32 item_id = 14;
  if (this->item_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddNoGachaAvatarCardNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddNoGachaAvatarCardNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AddNoGachaAvatarCardNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddNoGachaAvatarCardNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddNoGachaAvatarCardNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddNoGachaAvatarCardNotify)
    MergeFrom(*source);
  }
}

void AddNoGachaAvatarCardNotify::MergeFrom(const AddNoGachaAvatarCardNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddNoGachaAvatarCardNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transfer_item_list_.MergeFrom(from.transfer_item_list_);
  if (from.initial_promote_level() != 0) {
    set_initial_promote_level(from.initial_promote_level());
  }
  if (from.is_transfer_to_item() != 0) {
    set_is_transfer_to_item(from.is_transfer_to_item());
  }
  if (from.avatar_id() != 0) {
    set_avatar_id(from.avatar_id());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
  if (from.initial_level() != 0) {
    set_initial_level(from.initial_level());
  }
  if (from.item_id() != 0) {
    set_item_id(from.item_id());
  }
}

void AddNoGachaAvatarCardNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddNoGachaAvatarCardNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddNoGachaAvatarCardNotify::CopyFrom(const AddNoGachaAvatarCardNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddNoGachaAvatarCardNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddNoGachaAvatarCardNotify::IsInitialized() const {
  return true;
}

void AddNoGachaAvatarCardNotify::Swap(AddNoGachaAvatarCardNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddNoGachaAvatarCardNotify::InternalSwap(AddNoGachaAvatarCardNotify* other) {
  using std::swap;
  transfer_item_list_.InternalSwap(&other->transfer_item_list_);
  swap(initial_promote_level_, other->initial_promote_level_);
  swap(is_transfer_to_item_, other->is_transfer_to_item_);
  swap(avatar_id_, other->avatar_id_);
  swap(reason_, other->reason_);
  swap(initial_level_, other->initial_level_);
  swap(item_id_, other->item_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddNoGachaAvatarCardNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddNoGachaAvatarCardNotify

// repeated .proto.AddNoGachaAvatarCardTransferItem transfer_item_list = 4;
int AddNoGachaAvatarCardNotify::transfer_item_list_size() const {
  return transfer_item_list_.size();
}
void AddNoGachaAvatarCardNotify::clear_transfer_item_list() {
  transfer_item_list_.Clear();
}
const ::proto::AddNoGachaAvatarCardTransferItem& AddNoGachaAvatarCardNotify::transfer_item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AddNoGachaAvatarCardNotify.transfer_item_list)
  return transfer_item_list_.Get(index);
}
::proto::AddNoGachaAvatarCardTransferItem* AddNoGachaAvatarCardNotify::mutable_transfer_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AddNoGachaAvatarCardNotify.transfer_item_list)
  return transfer_item_list_.Mutable(index);
}
::proto::AddNoGachaAvatarCardTransferItem* AddNoGachaAvatarCardNotify::add_transfer_item_list() {
  // @@protoc_insertion_point(field_add:proto.AddNoGachaAvatarCardNotify.transfer_item_list)
  return transfer_item_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::AddNoGachaAvatarCardTransferItem >*
AddNoGachaAvatarCardNotify::mutable_transfer_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AddNoGachaAvatarCardNotify.transfer_item_list)
  return &transfer_item_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::AddNoGachaAvatarCardTransferItem >&
AddNoGachaAvatarCardNotify::transfer_item_list() const {
  // @@protoc_insertion_point(field_list:proto.AddNoGachaAvatarCardNotify.transfer_item_list)
  return transfer_item_list_;
}

// uint32 initial_promote_level = 2;
void AddNoGachaAvatarCardNotify::clear_initial_promote_level() {
  initial_promote_level_ = 0u;
}
::google::protobuf::uint32 AddNoGachaAvatarCardNotify::initial_promote_level() const {
  // @@protoc_insertion_point(field_get:proto.AddNoGachaAvatarCardNotify.initial_promote_level)
  return initial_promote_level_;
}
void AddNoGachaAvatarCardNotify::set_initial_promote_level(::google::protobuf::uint32 value) {
  
  initial_promote_level_ = value;
  // @@protoc_insertion_point(field_set:proto.AddNoGachaAvatarCardNotify.initial_promote_level)
}

// uint32 avatar_id = 8;
void AddNoGachaAvatarCardNotify::clear_avatar_id() {
  avatar_id_ = 0u;
}
::google::protobuf::uint32 AddNoGachaAvatarCardNotify::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.AddNoGachaAvatarCardNotify.avatar_id)
  return avatar_id_;
}
void AddNoGachaAvatarCardNotify::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddNoGachaAvatarCardNotify.avatar_id)
}

// bool is_transfer_to_item = 6;
void AddNoGachaAvatarCardNotify::clear_is_transfer_to_item() {
  is_transfer_to_item_ = false;
}
bool AddNoGachaAvatarCardNotify::is_transfer_to_item() const {
  // @@protoc_insertion_point(field_get:proto.AddNoGachaAvatarCardNotify.is_transfer_to_item)
  return is_transfer_to_item_;
}
void AddNoGachaAvatarCardNotify::set_is_transfer_to_item(bool value) {
  
  is_transfer_to_item_ = value;
  // @@protoc_insertion_point(field_set:proto.AddNoGachaAvatarCardNotify.is_transfer_to_item)
}

// uint32 reason = 9;
void AddNoGachaAvatarCardNotify::clear_reason() {
  reason_ = 0u;
}
::google::protobuf::uint32 AddNoGachaAvatarCardNotify::reason() const {
  // @@protoc_insertion_point(field_get:proto.AddNoGachaAvatarCardNotify.reason)
  return reason_;
}
void AddNoGachaAvatarCardNotify::set_reason(::google::protobuf::uint32 value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.AddNoGachaAvatarCardNotify.reason)
}

// uint32 initial_level = 10;
void AddNoGachaAvatarCardNotify::clear_initial_level() {
  initial_level_ = 0u;
}
::google::protobuf::uint32 AddNoGachaAvatarCardNotify::initial_level() const {
  // @@protoc_insertion_point(field_get:proto.AddNoGachaAvatarCardNotify.initial_level)
  return initial_level_;
}
void AddNoGachaAvatarCardNotify::set_initial_level(::google::protobuf::uint32 value) {
  
  initial_level_ = value;
  // @@protoc_insertion_point(field_set:proto.AddNoGachaAvatarCardNotify.initial_level)
}

// uint32 item_id = 14;
void AddNoGachaAvatarCardNotify::clear_item_id() {
  item_id_ = 0u;
}
::google::protobuf::uint32 AddNoGachaAvatarCardNotify::item_id() const {
  // @@protoc_insertion_point(field_get:proto.AddNoGachaAvatarCardNotify.item_id)
  return item_id_;
}
void AddNoGachaAvatarCardNotify::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddNoGachaAvatarCardNotify.item_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarPromoteGetRewardReq::kAvatarGuidFieldNumber;
const int AvatarPromoteGetRewardReq::kPromoteLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarPromoteGetRewardReq::AvatarPromoteGetRewardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarPromoteGetRewardReq)
}
AvatarPromoteGetRewardReq::AvatarPromoteGetRewardReq(const AvatarPromoteGetRewardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&promote_level_, &from.promote_level_,
    static_cast<size_t>(reinterpret_cast<char*>(&avatar_guid_) -
    reinterpret_cast<char*>(&promote_level_)) + sizeof(avatar_guid_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarPromoteGetRewardReq)
}

void AvatarPromoteGetRewardReq::SharedCtor() {
  ::memset(&promote_level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avatar_guid_) -
      reinterpret_cast<char*>(&promote_level_)) + sizeof(avatar_guid_));
  _cached_size_ = 0;
}

AvatarPromoteGetRewardReq::~AvatarPromoteGetRewardReq() {
  // @@protoc_insertion_point(destructor:proto.AvatarPromoteGetRewardReq)
  SharedDtor();
}

void AvatarPromoteGetRewardReq::SharedDtor() {
}

void AvatarPromoteGetRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarPromoteGetRewardReq::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarPromoteGetRewardReq& AvatarPromoteGetRewardReq::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarPromoteGetRewardReq* AvatarPromoteGetRewardReq::New(::google::protobuf::Arena* arena) const {
  AvatarPromoteGetRewardReq* n = new AvatarPromoteGetRewardReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarPromoteGetRewardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarPromoteGetRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&promote_level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avatar_guid_) -
      reinterpret_cast<char*>(&promote_level_)) + sizeof(avatar_guid_));
  _internal_metadata_.Clear();
}

bool AvatarPromoteGetRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarPromoteGetRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 avatar_guid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 promote_level = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &promote_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarPromoteGetRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarPromoteGetRewardReq)
  return false;
#undef DO_
}

void AvatarPromoteGetRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarPromoteGetRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 avatar_guid = 7;
  if (this->avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->avatar_guid(), output);
  }

  // uint32 promote_level = 12;
  if (this->promote_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->promote_level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarPromoteGetRewardReq)
}

::google::protobuf::uint8* AvatarPromoteGetRewardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarPromoteGetRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 avatar_guid = 7;
  if (this->avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->avatar_guid(), target);
  }

  // uint32 promote_level = 12;
  if (this->promote_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->promote_level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarPromoteGetRewardReq)
  return target;
}

size_t AvatarPromoteGetRewardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarPromoteGetRewardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 promote_level = 12;
  if (this->promote_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->promote_level());
  }

  // uint64 avatar_guid = 7;
  if (this->avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->avatar_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarPromoteGetRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarPromoteGetRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarPromoteGetRewardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarPromoteGetRewardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarPromoteGetRewardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarPromoteGetRewardReq)
    MergeFrom(*source);
  }
}

void AvatarPromoteGetRewardReq::MergeFrom(const AvatarPromoteGetRewardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarPromoteGetRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.promote_level() != 0) {
    set_promote_level(from.promote_level());
  }
  if (from.avatar_guid() != 0) {
    set_avatar_guid(from.avatar_guid());
  }
}

void AvatarPromoteGetRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarPromoteGetRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarPromoteGetRewardReq::CopyFrom(const AvatarPromoteGetRewardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarPromoteGetRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarPromoteGetRewardReq::IsInitialized() const {
  return true;
}

void AvatarPromoteGetRewardReq::Swap(AvatarPromoteGetRewardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarPromoteGetRewardReq::InternalSwap(AvatarPromoteGetRewardReq* other) {
  using std::swap;
  swap(promote_level_, other->promote_level_);
  swap(avatar_guid_, other->avatar_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarPromoteGetRewardReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarPromoteGetRewardReq

// uint64 avatar_guid = 7;
void AvatarPromoteGetRewardReq::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarPromoteGetRewardReq::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarPromoteGetRewardReq.avatar_guid)
  return avatar_guid_;
}
void AvatarPromoteGetRewardReq::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarPromoteGetRewardReq.avatar_guid)
}

// uint32 promote_level = 12;
void AvatarPromoteGetRewardReq::clear_promote_level() {
  promote_level_ = 0u;
}
::google::protobuf::uint32 AvatarPromoteGetRewardReq::promote_level() const {
  // @@protoc_insertion_point(field_get:proto.AvatarPromoteGetRewardReq.promote_level)
  return promote_level_;
}
void AvatarPromoteGetRewardReq::set_promote_level(::google::protobuf::uint32 value) {
  
  promote_level_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarPromoteGetRewardReq.promote_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarPromoteGetRewardRsp::kRetcodeFieldNumber;
const int AvatarPromoteGetRewardRsp::kRewardIdFieldNumber;
const int AvatarPromoteGetRewardRsp::kAvatarGuidFieldNumber;
const int AvatarPromoteGetRewardRsp::kPromoteLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarPromoteGetRewardRsp::AvatarPromoteGetRewardRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarPromoteGetRewardRsp)
}
AvatarPromoteGetRewardRsp::AvatarPromoteGetRewardRsp(const AvatarPromoteGetRewardRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&reward_id_, &from.reward_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&promote_level_) -
    reinterpret_cast<char*>(&reward_id_)) + sizeof(promote_level_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarPromoteGetRewardRsp)
}

void AvatarPromoteGetRewardRsp::SharedCtor() {
  ::memset(&reward_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&promote_level_) -
      reinterpret_cast<char*>(&reward_id_)) + sizeof(promote_level_));
  _cached_size_ = 0;
}

AvatarPromoteGetRewardRsp::~AvatarPromoteGetRewardRsp() {
  // @@protoc_insertion_point(destructor:proto.AvatarPromoteGetRewardRsp)
  SharedDtor();
}

void AvatarPromoteGetRewardRsp::SharedDtor() {
}

void AvatarPromoteGetRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarPromoteGetRewardRsp::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarPromoteGetRewardRsp& AvatarPromoteGetRewardRsp::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarPromoteGetRewardRsp* AvatarPromoteGetRewardRsp::New(::google::protobuf::Arena* arena) const {
  AvatarPromoteGetRewardRsp* n = new AvatarPromoteGetRewardRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarPromoteGetRewardRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarPromoteGetRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&reward_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&promote_level_) -
      reinterpret_cast<char*>(&reward_id_)) + sizeof(promote_level_));
  _internal_metadata_.Clear();
}

bool AvatarPromoteGetRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarPromoteGetRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 avatar_guid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 promote_level = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &promote_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reward_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reward_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarPromoteGetRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarPromoteGetRewardRsp)
  return false;
#undef DO_
}

void AvatarPromoteGetRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarPromoteGetRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 10;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->retcode(), output);
  }

  // uint64 avatar_guid = 11;
  if (this->avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->avatar_guid(), output);
  }

  // uint32 promote_level = 12;
  if (this->promote_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->promote_level(), output);
  }

  // uint32 reward_id = 15;
  if (this->reward_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->reward_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarPromoteGetRewardRsp)
}

::google::protobuf::uint8* AvatarPromoteGetRewardRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarPromoteGetRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 10;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->retcode(), target);
  }

  // uint64 avatar_guid = 11;
  if (this->avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->avatar_guid(), target);
  }

  // uint32 promote_level = 12;
  if (this->promote_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->promote_level(), target);
  }

  // uint32 reward_id = 15;
  if (this->reward_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->reward_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarPromoteGetRewardRsp)
  return target;
}

size_t AvatarPromoteGetRewardRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarPromoteGetRewardRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 reward_id = 15;
  if (this->reward_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reward_id());
  }

  // uint64 avatar_guid = 11;
  if (this->avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->avatar_guid());
  }

  // int32 retcode = 10;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 promote_level = 12;
  if (this->promote_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->promote_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarPromoteGetRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarPromoteGetRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarPromoteGetRewardRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarPromoteGetRewardRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarPromoteGetRewardRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarPromoteGetRewardRsp)
    MergeFrom(*source);
  }
}

void AvatarPromoteGetRewardRsp::MergeFrom(const AvatarPromoteGetRewardRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarPromoteGetRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reward_id() != 0) {
    set_reward_id(from.reward_id());
  }
  if (from.avatar_guid() != 0) {
    set_avatar_guid(from.avatar_guid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.promote_level() != 0) {
    set_promote_level(from.promote_level());
  }
}

void AvatarPromoteGetRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarPromoteGetRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarPromoteGetRewardRsp::CopyFrom(const AvatarPromoteGetRewardRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarPromoteGetRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarPromoteGetRewardRsp::IsInitialized() const {
  return true;
}

void AvatarPromoteGetRewardRsp::Swap(AvatarPromoteGetRewardRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarPromoteGetRewardRsp::InternalSwap(AvatarPromoteGetRewardRsp* other) {
  using std::swap;
  swap(reward_id_, other->reward_id_);
  swap(avatar_guid_, other->avatar_guid_);
  swap(retcode_, other->retcode_);
  swap(promote_level_, other->promote_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarPromoteGetRewardRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarPromoteGetRewardRsp

// int32 retcode = 10;
void AvatarPromoteGetRewardRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 AvatarPromoteGetRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AvatarPromoteGetRewardRsp.retcode)
  return retcode_;
}
void AvatarPromoteGetRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarPromoteGetRewardRsp.retcode)
}

// uint32 reward_id = 15;
void AvatarPromoteGetRewardRsp::clear_reward_id() {
  reward_id_ = 0u;
}
::google::protobuf::uint32 AvatarPromoteGetRewardRsp::reward_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarPromoteGetRewardRsp.reward_id)
  return reward_id_;
}
void AvatarPromoteGetRewardRsp::set_reward_id(::google::protobuf::uint32 value) {
  
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarPromoteGetRewardRsp.reward_id)
}

// uint64 avatar_guid = 11;
void AvatarPromoteGetRewardRsp::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarPromoteGetRewardRsp::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarPromoteGetRewardRsp.avatar_guid)
  return avatar_guid_;
}
void AvatarPromoteGetRewardRsp::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarPromoteGetRewardRsp.avatar_guid)
}

// uint32 promote_level = 12;
void AvatarPromoteGetRewardRsp::clear_promote_level() {
  promote_level_ = 0u;
}
::google::protobuf::uint32 AvatarPromoteGetRewardRsp::promote_level() const {
  // @@protoc_insertion_point(field_get:proto.AvatarPromoteGetRewardRsp.promote_level)
  return promote_level_;
}
void AvatarPromoteGetRewardRsp::set_promote_level(::google::protobuf::uint32 value) {
  
  promote_level_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarPromoteGetRewardRsp.promote_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarChangeCostumeReq::kCostumeIdFieldNumber;
const int AvatarChangeCostumeReq::kAvatarGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarChangeCostumeReq::AvatarChangeCostumeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarChangeCostumeReq)
}
AvatarChangeCostumeReq::AvatarChangeCostumeReq(const AvatarChangeCostumeReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&avatar_guid_, &from.avatar_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&costume_id_) -
    reinterpret_cast<char*>(&avatar_guid_)) + sizeof(costume_id_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarChangeCostumeReq)
}

void AvatarChangeCostumeReq::SharedCtor() {
  ::memset(&avatar_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&costume_id_) -
      reinterpret_cast<char*>(&avatar_guid_)) + sizeof(costume_id_));
  _cached_size_ = 0;
}

AvatarChangeCostumeReq::~AvatarChangeCostumeReq() {
  // @@protoc_insertion_point(destructor:proto.AvatarChangeCostumeReq)
  SharedDtor();
}

void AvatarChangeCostumeReq::SharedDtor() {
}

void AvatarChangeCostumeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarChangeCostumeReq::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarChangeCostumeReq& AvatarChangeCostumeReq::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarChangeCostumeReq* AvatarChangeCostumeReq::New(::google::protobuf::Arena* arena) const {
  AvatarChangeCostumeReq* n = new AvatarChangeCostumeReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarChangeCostumeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarChangeCostumeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&avatar_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&costume_id_) -
      reinterpret_cast<char*>(&avatar_guid_)) + sizeof(costume_id_));
  _internal_metadata_.Clear();
}

bool AvatarChangeCostumeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarChangeCostumeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 avatar_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 costume_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &costume_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarChangeCostumeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarChangeCostumeReq)
  return false;
#undef DO_
}

void AvatarChangeCostumeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarChangeCostumeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 avatar_guid = 2;
  if (this->avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->avatar_guid(), output);
  }

  // uint32 costume_id = 4;
  if (this->costume_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->costume_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarChangeCostumeReq)
}

::google::protobuf::uint8* AvatarChangeCostumeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarChangeCostumeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 avatar_guid = 2;
  if (this->avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->avatar_guid(), target);
  }

  // uint32 costume_id = 4;
  if (this->costume_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->costume_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarChangeCostumeReq)
  return target;
}

size_t AvatarChangeCostumeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarChangeCostumeReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 avatar_guid = 2;
  if (this->avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->avatar_guid());
  }

  // uint32 costume_id = 4;
  if (this->costume_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->costume_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarChangeCostumeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarChangeCostumeReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarChangeCostumeReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarChangeCostumeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarChangeCostumeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarChangeCostumeReq)
    MergeFrom(*source);
  }
}

void AvatarChangeCostumeReq::MergeFrom(const AvatarChangeCostumeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarChangeCostumeReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_guid() != 0) {
    set_avatar_guid(from.avatar_guid());
  }
  if (from.costume_id() != 0) {
    set_costume_id(from.costume_id());
  }
}

void AvatarChangeCostumeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarChangeCostumeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarChangeCostumeReq::CopyFrom(const AvatarChangeCostumeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarChangeCostumeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarChangeCostumeReq::IsInitialized() const {
  return true;
}

void AvatarChangeCostumeReq::Swap(AvatarChangeCostumeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarChangeCostumeReq::InternalSwap(AvatarChangeCostumeReq* other) {
  using std::swap;
  swap(avatar_guid_, other->avatar_guid_);
  swap(costume_id_, other->costume_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarChangeCostumeReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarChangeCostumeReq

// uint32 costume_id = 4;
void AvatarChangeCostumeReq::clear_costume_id() {
  costume_id_ = 0u;
}
::google::protobuf::uint32 AvatarChangeCostumeReq::costume_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarChangeCostumeReq.costume_id)
  return costume_id_;
}
void AvatarChangeCostumeReq::set_costume_id(::google::protobuf::uint32 value) {
  
  costume_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarChangeCostumeReq.costume_id)
}

// uint64 avatar_guid = 2;
void AvatarChangeCostumeReq::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarChangeCostumeReq::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarChangeCostumeReq.avatar_guid)
  return avatar_guid_;
}
void AvatarChangeCostumeReq::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarChangeCostumeReq.avatar_guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarChangeCostumeRsp::kAvatarGuidFieldNumber;
const int AvatarChangeCostumeRsp::kRetcodeFieldNumber;
const int AvatarChangeCostumeRsp::kCostumeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarChangeCostumeRsp::AvatarChangeCostumeRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarChangeCostumeRsp)
}
AvatarChangeCostumeRsp::AvatarChangeCostumeRsp(const AvatarChangeCostumeRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&avatar_guid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(avatar_guid_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarChangeCostumeRsp)
}

void AvatarChangeCostumeRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avatar_guid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(avatar_guid_));
  _cached_size_ = 0;
}

AvatarChangeCostumeRsp::~AvatarChangeCostumeRsp() {
  // @@protoc_insertion_point(destructor:proto.AvatarChangeCostumeRsp)
  SharedDtor();
}

void AvatarChangeCostumeRsp::SharedDtor() {
}

void AvatarChangeCostumeRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarChangeCostumeRsp::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarChangeCostumeRsp& AvatarChangeCostumeRsp::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarChangeCostumeRsp* AvatarChangeCostumeRsp::New(::google::protobuf::Arena* arena) const {
  AvatarChangeCostumeRsp* n = new AvatarChangeCostumeRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarChangeCostumeRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarChangeCostumeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avatar_guid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(avatar_guid_));
  _internal_metadata_.Clear();
}

bool AvatarChangeCostumeRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarChangeCostumeRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 avatar_guid = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 costume_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &costume_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarChangeCostumeRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarChangeCostumeRsp)
  return false;
#undef DO_
}

void AvatarChangeCostumeRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarChangeCostumeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->retcode(), output);
  }

  // uint64 avatar_guid = 12;
  if (this->avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(12, this->avatar_guid(), output);
  }

  // uint32 costume_id = 13;
  if (this->costume_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->costume_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarChangeCostumeRsp)
}

::google::protobuf::uint8* AvatarChangeCostumeRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarChangeCostumeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->retcode(), target);
  }

  // uint64 avatar_guid = 12;
  if (this->avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(12, this->avatar_guid(), target);
  }

  // uint32 costume_id = 13;
  if (this->costume_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->costume_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarChangeCostumeRsp)
  return target;
}

size_t AvatarChangeCostumeRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarChangeCostumeRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 7;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 costume_id = 13;
  if (this->costume_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->costume_id());
  }

  // uint64 avatar_guid = 12;
  if (this->avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->avatar_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarChangeCostumeRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarChangeCostumeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarChangeCostumeRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarChangeCostumeRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarChangeCostumeRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarChangeCostumeRsp)
    MergeFrom(*source);
  }
}

void AvatarChangeCostumeRsp::MergeFrom(const AvatarChangeCostumeRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarChangeCostumeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.costume_id() != 0) {
    set_costume_id(from.costume_id());
  }
  if (from.avatar_guid() != 0) {
    set_avatar_guid(from.avatar_guid());
  }
}

void AvatarChangeCostumeRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarChangeCostumeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarChangeCostumeRsp::CopyFrom(const AvatarChangeCostumeRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarChangeCostumeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarChangeCostumeRsp::IsInitialized() const {
  return true;
}

void AvatarChangeCostumeRsp::Swap(AvatarChangeCostumeRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarChangeCostumeRsp::InternalSwap(AvatarChangeCostumeRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(costume_id_, other->costume_id_);
  swap(avatar_guid_, other->avatar_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarChangeCostumeRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarChangeCostumeRsp

// uint64 avatar_guid = 12;
void AvatarChangeCostumeRsp::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarChangeCostumeRsp::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarChangeCostumeRsp.avatar_guid)
  return avatar_guid_;
}
void AvatarChangeCostumeRsp::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarChangeCostumeRsp.avatar_guid)
}

// int32 retcode = 7;
void AvatarChangeCostumeRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 AvatarChangeCostumeRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AvatarChangeCostumeRsp.retcode)
  return retcode_;
}
void AvatarChangeCostumeRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarChangeCostumeRsp.retcode)
}

// uint32 costume_id = 13;
void AvatarChangeCostumeRsp::clear_costume_id() {
  costume_id_ = 0u;
}
::google::protobuf::uint32 AvatarChangeCostumeRsp::costume_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarChangeCostumeRsp.costume_id)
  return costume_id_;
}
void AvatarChangeCostumeRsp::set_costume_id(::google::protobuf::uint32 value) {
  
  costume_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarChangeCostumeRsp.costume_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarChangeCostumeNotify::kEntityInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarChangeCostumeNotify::AvatarChangeCostumeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarChangeCostumeNotify)
}
AvatarChangeCostumeNotify::AvatarChangeCostumeNotify(const AvatarChangeCostumeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_entity_info()) {
    entity_info_ = new ::proto::SceneEntityInfo(*from.entity_info_);
  } else {
    entity_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.AvatarChangeCostumeNotify)
}

void AvatarChangeCostumeNotify::SharedCtor() {
  entity_info_ = NULL;
  _cached_size_ = 0;
}

AvatarChangeCostumeNotify::~AvatarChangeCostumeNotify() {
  // @@protoc_insertion_point(destructor:proto.AvatarChangeCostumeNotify)
  SharedDtor();
}

void AvatarChangeCostumeNotify::SharedDtor() {
  if (this != internal_default_instance()) delete entity_info_;
}

void AvatarChangeCostumeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarChangeCostumeNotify::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarChangeCostumeNotify& AvatarChangeCostumeNotify::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarChangeCostumeNotify* AvatarChangeCostumeNotify::New(::google::protobuf::Arena* arena) const {
  AvatarChangeCostumeNotify* n = new AvatarChangeCostumeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarChangeCostumeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarChangeCostumeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && entity_info_ != NULL) {
    delete entity_info_;
  }
  entity_info_ = NULL;
  _internal_metadata_.Clear();
}

bool AvatarChangeCostumeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarChangeCostumeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.SceneEntityInfo entity_info = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_entity_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarChangeCostumeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarChangeCostumeNotify)
  return false;
#undef DO_
}

void AvatarChangeCostumeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarChangeCostumeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.SceneEntityInfo entity_info = 7;
  if (this->has_entity_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->entity_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarChangeCostumeNotify)
}

::google::protobuf::uint8* AvatarChangeCostumeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarChangeCostumeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.SceneEntityInfo entity_info = 7;
  if (this->has_entity_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->entity_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarChangeCostumeNotify)
  return target;
}

size_t AvatarChangeCostumeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarChangeCostumeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.SceneEntityInfo entity_info = 7;
  if (this->has_entity_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->entity_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarChangeCostumeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarChangeCostumeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarChangeCostumeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarChangeCostumeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarChangeCostumeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarChangeCostumeNotify)
    MergeFrom(*source);
  }
}

void AvatarChangeCostumeNotify::MergeFrom(const AvatarChangeCostumeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarChangeCostumeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_entity_info()) {
    mutable_entity_info()->::proto::SceneEntityInfo::MergeFrom(from.entity_info());
  }
}

void AvatarChangeCostumeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarChangeCostumeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarChangeCostumeNotify::CopyFrom(const AvatarChangeCostumeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarChangeCostumeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarChangeCostumeNotify::IsInitialized() const {
  return true;
}

void AvatarChangeCostumeNotify::Swap(AvatarChangeCostumeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarChangeCostumeNotify::InternalSwap(AvatarChangeCostumeNotify* other) {
  using std::swap;
  swap(entity_info_, other->entity_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarChangeCostumeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarChangeCostumeNotify

// .proto.SceneEntityInfo entity_info = 7;
bool AvatarChangeCostumeNotify::has_entity_info() const {
  return this != internal_default_instance() && entity_info_ != NULL;
}
void AvatarChangeCostumeNotify::clear_entity_info() {
  if (GetArenaNoVirtual() == NULL && entity_info_ != NULL) delete entity_info_;
  entity_info_ = NULL;
}
const ::proto::SceneEntityInfo& AvatarChangeCostumeNotify::entity_info() const {
  const ::proto::SceneEntityInfo* p = entity_info_;
  // @@protoc_insertion_point(field_get:proto.AvatarChangeCostumeNotify.entity_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SceneEntityInfo*>(
      &::proto::_SceneEntityInfo_default_instance_);
}
::proto::SceneEntityInfo* AvatarChangeCostumeNotify::mutable_entity_info() {
  
  if (entity_info_ == NULL) {
    entity_info_ = new ::proto::SceneEntityInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.AvatarChangeCostumeNotify.entity_info)
  return entity_info_;
}
::proto::SceneEntityInfo* AvatarChangeCostumeNotify::release_entity_info() {
  // @@protoc_insertion_point(field_release:proto.AvatarChangeCostumeNotify.entity_info)
  
  ::proto::SceneEntityInfo* temp = entity_info_;
  entity_info_ = NULL;
  return temp;
}
void AvatarChangeCostumeNotify::set_allocated_entity_info(::proto::SceneEntityInfo* entity_info) {
  delete entity_info_;
  entity_info_ = entity_info;
  if (entity_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarChangeCostumeNotify.entity_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarGainCostumeNotify::kCostumeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarGainCostumeNotify::AvatarGainCostumeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarGainCostumeNotify)
}
AvatarGainCostumeNotify::AvatarGainCostumeNotify(const AvatarGainCostumeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  costume_id_ = from.costume_id_;
  // @@protoc_insertion_point(copy_constructor:proto.AvatarGainCostumeNotify)
}

void AvatarGainCostumeNotify::SharedCtor() {
  costume_id_ = 0u;
  _cached_size_ = 0;
}

AvatarGainCostumeNotify::~AvatarGainCostumeNotify() {
  // @@protoc_insertion_point(destructor:proto.AvatarGainCostumeNotify)
  SharedDtor();
}

void AvatarGainCostumeNotify::SharedDtor() {
}

void AvatarGainCostumeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarGainCostumeNotify::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarGainCostumeNotify& AvatarGainCostumeNotify::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarGainCostumeNotify* AvatarGainCostumeNotify::New(::google::protobuf::Arena* arena) const {
  AvatarGainCostumeNotify* n = new AvatarGainCostumeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarGainCostumeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarGainCostumeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  costume_id_ = 0u;
  _internal_metadata_.Clear();
}

bool AvatarGainCostumeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarGainCostumeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 costume_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &costume_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarGainCostumeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarGainCostumeNotify)
  return false;
#undef DO_
}

void AvatarGainCostumeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarGainCostumeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 costume_id = 15;
  if (this->costume_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->costume_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarGainCostumeNotify)
}

::google::protobuf::uint8* AvatarGainCostumeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarGainCostumeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 costume_id = 15;
  if (this->costume_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->costume_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarGainCostumeNotify)
  return target;
}

size_t AvatarGainCostumeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarGainCostumeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 costume_id = 15;
  if (this->costume_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->costume_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarGainCostumeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarGainCostumeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarGainCostumeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarGainCostumeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarGainCostumeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarGainCostumeNotify)
    MergeFrom(*source);
  }
}

void AvatarGainCostumeNotify::MergeFrom(const AvatarGainCostumeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarGainCostumeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.costume_id() != 0) {
    set_costume_id(from.costume_id());
  }
}

void AvatarGainCostumeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarGainCostumeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarGainCostumeNotify::CopyFrom(const AvatarGainCostumeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarGainCostumeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarGainCostumeNotify::IsInitialized() const {
  return true;
}

void AvatarGainCostumeNotify::Swap(AvatarGainCostumeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarGainCostumeNotify::InternalSwap(AvatarGainCostumeNotify* other) {
  using std::swap;
  swap(costume_id_, other->costume_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarGainCostumeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarGainCostumeNotify

// uint32 costume_id = 15;
void AvatarGainCostumeNotify::clear_costume_id() {
  costume_id_ = 0u;
}
::google::protobuf::uint32 AvatarGainCostumeNotify::costume_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarGainCostumeNotify.costume_id)
  return costume_id_;
}
void AvatarGainCostumeNotify::set_costume_id(::google::protobuf::uint32 value) {
  
  costume_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarGainCostumeNotify.costume_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarChangeAnimHashReq::kAnimHashFieldNumber;
const int AvatarChangeAnimHashReq::kAvatarGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarChangeAnimHashReq::AvatarChangeAnimHashReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarChangeAnimHashReq)
}
AvatarChangeAnimHashReq::AvatarChangeAnimHashReq(const AvatarChangeAnimHashReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&avatar_guid_, &from.avatar_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&anim_hash_) -
    reinterpret_cast<char*>(&avatar_guid_)) + sizeof(anim_hash_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarChangeAnimHashReq)
}

void AvatarChangeAnimHashReq::SharedCtor() {
  ::memset(&avatar_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&anim_hash_) -
      reinterpret_cast<char*>(&avatar_guid_)) + sizeof(anim_hash_));
  _cached_size_ = 0;
}

AvatarChangeAnimHashReq::~AvatarChangeAnimHashReq() {
  // @@protoc_insertion_point(destructor:proto.AvatarChangeAnimHashReq)
  SharedDtor();
}

void AvatarChangeAnimHashReq::SharedDtor() {
}

void AvatarChangeAnimHashReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarChangeAnimHashReq::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarChangeAnimHashReq& AvatarChangeAnimHashReq::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarChangeAnimHashReq* AvatarChangeAnimHashReq::New(::google::protobuf::Arena* arena) const {
  AvatarChangeAnimHashReq* n = new AvatarChangeAnimHashReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarChangeAnimHashReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarChangeAnimHashReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&avatar_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&anim_hash_) -
      reinterpret_cast<char*>(&avatar_guid_)) + sizeof(anim_hash_));
  _internal_metadata_.Clear();
}

bool AvatarChangeAnimHashReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarChangeAnimHashReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 avatar_guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 anim_hash = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &anim_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarChangeAnimHashReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarChangeAnimHashReq)
  return false;
#undef DO_
}

void AvatarChangeAnimHashReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarChangeAnimHashReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 avatar_guid = 3;
  if (this->avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->avatar_guid(), output);
  }

  // uint32 anim_hash = 6;
  if (this->anim_hash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->anim_hash(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarChangeAnimHashReq)
}

::google::protobuf::uint8* AvatarChangeAnimHashReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarChangeAnimHashReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 avatar_guid = 3;
  if (this->avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->avatar_guid(), target);
  }

  // uint32 anim_hash = 6;
  if (this->anim_hash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->anim_hash(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarChangeAnimHashReq)
  return target;
}

size_t AvatarChangeAnimHashReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarChangeAnimHashReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 avatar_guid = 3;
  if (this->avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->avatar_guid());
  }

  // uint32 anim_hash = 6;
  if (this->anim_hash() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->anim_hash());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarChangeAnimHashReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarChangeAnimHashReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarChangeAnimHashReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarChangeAnimHashReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarChangeAnimHashReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarChangeAnimHashReq)
    MergeFrom(*source);
  }
}

void AvatarChangeAnimHashReq::MergeFrom(const AvatarChangeAnimHashReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarChangeAnimHashReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_guid() != 0) {
    set_avatar_guid(from.avatar_guid());
  }
  if (from.anim_hash() != 0) {
    set_anim_hash(from.anim_hash());
  }
}

void AvatarChangeAnimHashReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarChangeAnimHashReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarChangeAnimHashReq::CopyFrom(const AvatarChangeAnimHashReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarChangeAnimHashReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarChangeAnimHashReq::IsInitialized() const {
  return true;
}

void AvatarChangeAnimHashReq::Swap(AvatarChangeAnimHashReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarChangeAnimHashReq::InternalSwap(AvatarChangeAnimHashReq* other) {
  using std::swap;
  swap(avatar_guid_, other->avatar_guid_);
  swap(anim_hash_, other->anim_hash_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarChangeAnimHashReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarChangeAnimHashReq

// uint32 anim_hash = 6;
void AvatarChangeAnimHashReq::clear_anim_hash() {
  anim_hash_ = 0u;
}
::google::protobuf::uint32 AvatarChangeAnimHashReq::anim_hash() const {
  // @@protoc_insertion_point(field_get:proto.AvatarChangeAnimHashReq.anim_hash)
  return anim_hash_;
}
void AvatarChangeAnimHashReq::set_anim_hash(::google::protobuf::uint32 value) {
  
  anim_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarChangeAnimHashReq.anim_hash)
}

// uint64 avatar_guid = 3;
void AvatarChangeAnimHashReq::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarChangeAnimHashReq::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarChangeAnimHashReq.avatar_guid)
  return avatar_guid_;
}
void AvatarChangeAnimHashReq::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarChangeAnimHashReq.avatar_guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarChangeAnimHashRsp::kAnimHashFieldNumber;
const int AvatarChangeAnimHashRsp::kRetcodeFieldNumber;
const int AvatarChangeAnimHashRsp::kAvatarGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarChangeAnimHashRsp::AvatarChangeAnimHashRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarChangeAnimHashRsp)
}
AvatarChangeAnimHashRsp::AvatarChangeAnimHashRsp(const AvatarChangeAnimHashRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&avatar_guid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(avatar_guid_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarChangeAnimHashRsp)
}

void AvatarChangeAnimHashRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avatar_guid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(avatar_guid_));
  _cached_size_ = 0;
}

AvatarChangeAnimHashRsp::~AvatarChangeAnimHashRsp() {
  // @@protoc_insertion_point(destructor:proto.AvatarChangeAnimHashRsp)
  SharedDtor();
}

void AvatarChangeAnimHashRsp::SharedDtor() {
}

void AvatarChangeAnimHashRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarChangeAnimHashRsp::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarChangeAnimHashRsp& AvatarChangeAnimHashRsp::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarChangeAnimHashRsp* AvatarChangeAnimHashRsp::New(::google::protobuf::Arena* arena) const {
  AvatarChangeAnimHashRsp* n = new AvatarChangeAnimHashRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarChangeAnimHashRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarChangeAnimHashRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avatar_guid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(avatar_guid_));
  _internal_metadata_.Clear();
}

bool AvatarChangeAnimHashRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarChangeAnimHashRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 avatar_guid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 anim_hash = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &anim_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarChangeAnimHashRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarChangeAnimHashRsp)
  return false;
#undef DO_
}

void AvatarChangeAnimHashRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarChangeAnimHashRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->retcode(), output);
  }

  // uint64 avatar_guid = 10;
  if (this->avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->avatar_guid(), output);
  }

  // uint32 anim_hash = 13;
  if (this->anim_hash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->anim_hash(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarChangeAnimHashRsp)
}

::google::protobuf::uint8* AvatarChangeAnimHashRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarChangeAnimHashRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->retcode(), target);
  }

  // uint64 avatar_guid = 10;
  if (this->avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->avatar_guid(), target);
  }

  // uint32 anim_hash = 13;
  if (this->anim_hash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->anim_hash(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarChangeAnimHashRsp)
  return target;
}

size_t AvatarChangeAnimHashRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarChangeAnimHashRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 5;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 anim_hash = 13;
  if (this->anim_hash() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->anim_hash());
  }

  // uint64 avatar_guid = 10;
  if (this->avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->avatar_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarChangeAnimHashRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarChangeAnimHashRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarChangeAnimHashRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarChangeAnimHashRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarChangeAnimHashRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarChangeAnimHashRsp)
    MergeFrom(*source);
  }
}

void AvatarChangeAnimHashRsp::MergeFrom(const AvatarChangeAnimHashRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarChangeAnimHashRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.anim_hash() != 0) {
    set_anim_hash(from.anim_hash());
  }
  if (from.avatar_guid() != 0) {
    set_avatar_guid(from.avatar_guid());
  }
}

void AvatarChangeAnimHashRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarChangeAnimHashRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarChangeAnimHashRsp::CopyFrom(const AvatarChangeAnimHashRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarChangeAnimHashRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarChangeAnimHashRsp::IsInitialized() const {
  return true;
}

void AvatarChangeAnimHashRsp::Swap(AvatarChangeAnimHashRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarChangeAnimHashRsp::InternalSwap(AvatarChangeAnimHashRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(anim_hash_, other->anim_hash_);
  swap(avatar_guid_, other->avatar_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarChangeAnimHashRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarChangeAnimHashRsp

// uint32 anim_hash = 13;
void AvatarChangeAnimHashRsp::clear_anim_hash() {
  anim_hash_ = 0u;
}
::google::protobuf::uint32 AvatarChangeAnimHashRsp::anim_hash() const {
  // @@protoc_insertion_point(field_get:proto.AvatarChangeAnimHashRsp.anim_hash)
  return anim_hash_;
}
void AvatarChangeAnimHashRsp::set_anim_hash(::google::protobuf::uint32 value) {
  
  anim_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarChangeAnimHashRsp.anim_hash)
}

// int32 retcode = 5;
void AvatarChangeAnimHashRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 AvatarChangeAnimHashRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AvatarChangeAnimHashRsp.retcode)
  return retcode_;
}
void AvatarChangeAnimHashRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarChangeAnimHashRsp.retcode)
}

// uint64 avatar_guid = 10;
void AvatarChangeAnimHashRsp::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarChangeAnimHashRsp::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarChangeAnimHashRsp.avatar_guid)
  return avatar_guid_;
}
void AvatarChangeAnimHashRsp::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarChangeAnimHashRsp.avatar_guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PersistentDungeonSwitchAvatarReq::kCurAvatarGuidFieldNumber;
const int PersistentDungeonSwitchAvatarReq::kAvatarTeamGuidListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PersistentDungeonSwitchAvatarReq::PersistentDungeonSwitchAvatarReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PersistentDungeonSwitchAvatarReq)
}
PersistentDungeonSwitchAvatarReq::PersistentDungeonSwitchAvatarReq(const PersistentDungeonSwitchAvatarReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      avatar_team_guid_list_(from.avatar_team_guid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cur_avatar_guid_ = from.cur_avatar_guid_;
  // @@protoc_insertion_point(copy_constructor:proto.PersistentDungeonSwitchAvatarReq)
}

void PersistentDungeonSwitchAvatarReq::SharedCtor() {
  cur_avatar_guid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

PersistentDungeonSwitchAvatarReq::~PersistentDungeonSwitchAvatarReq() {
  // @@protoc_insertion_point(destructor:proto.PersistentDungeonSwitchAvatarReq)
  SharedDtor();
}

void PersistentDungeonSwitchAvatarReq::SharedDtor() {
}

void PersistentDungeonSwitchAvatarReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PersistentDungeonSwitchAvatarReq::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PersistentDungeonSwitchAvatarReq& PersistentDungeonSwitchAvatarReq::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

PersistentDungeonSwitchAvatarReq* PersistentDungeonSwitchAvatarReq::New(::google::protobuf::Arena* arena) const {
  PersistentDungeonSwitchAvatarReq* n = new PersistentDungeonSwitchAvatarReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PersistentDungeonSwitchAvatarReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PersistentDungeonSwitchAvatarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  avatar_team_guid_list_.Clear();
  cur_avatar_guid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool PersistentDungeonSwitchAvatarReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PersistentDungeonSwitchAvatarReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 avatar_team_guid_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_avatar_team_guid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 26u, input, this->mutable_avatar_team_guid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 cur_avatar_guid = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cur_avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PersistentDungeonSwitchAvatarReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PersistentDungeonSwitchAvatarReq)
  return false;
#undef DO_
}

void PersistentDungeonSwitchAvatarReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PersistentDungeonSwitchAvatarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 avatar_team_guid_list = 3;
  if (this->avatar_team_guid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _avatar_team_guid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->avatar_team_guid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->avatar_team_guid_list(i), output);
  }

  // uint64 cur_avatar_guid = 8;
  if (this->cur_avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->cur_avatar_guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PersistentDungeonSwitchAvatarReq)
}

::google::protobuf::uint8* PersistentDungeonSwitchAvatarReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PersistentDungeonSwitchAvatarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 avatar_team_guid_list = 3;
  if (this->avatar_team_guid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _avatar_team_guid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->avatar_team_guid_list_, target);
  }

  // uint64 cur_avatar_guid = 8;
  if (this->cur_avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->cur_avatar_guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PersistentDungeonSwitchAvatarReq)
  return target;
}

size_t PersistentDungeonSwitchAvatarReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PersistentDungeonSwitchAvatarReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 avatar_team_guid_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->avatar_team_guid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _avatar_team_guid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint64 cur_avatar_guid = 8;
  if (this->cur_avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cur_avatar_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PersistentDungeonSwitchAvatarReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PersistentDungeonSwitchAvatarReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PersistentDungeonSwitchAvatarReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PersistentDungeonSwitchAvatarReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PersistentDungeonSwitchAvatarReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PersistentDungeonSwitchAvatarReq)
    MergeFrom(*source);
  }
}

void PersistentDungeonSwitchAvatarReq::MergeFrom(const PersistentDungeonSwitchAvatarReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PersistentDungeonSwitchAvatarReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  avatar_team_guid_list_.MergeFrom(from.avatar_team_guid_list_);
  if (from.cur_avatar_guid() != 0) {
    set_cur_avatar_guid(from.cur_avatar_guid());
  }
}

void PersistentDungeonSwitchAvatarReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PersistentDungeonSwitchAvatarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PersistentDungeonSwitchAvatarReq::CopyFrom(const PersistentDungeonSwitchAvatarReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PersistentDungeonSwitchAvatarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PersistentDungeonSwitchAvatarReq::IsInitialized() const {
  return true;
}

void PersistentDungeonSwitchAvatarReq::Swap(PersistentDungeonSwitchAvatarReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PersistentDungeonSwitchAvatarReq::InternalSwap(PersistentDungeonSwitchAvatarReq* other) {
  using std::swap;
  avatar_team_guid_list_.InternalSwap(&other->avatar_team_guid_list_);
  swap(cur_avatar_guid_, other->cur_avatar_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PersistentDungeonSwitchAvatarReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PersistentDungeonSwitchAvatarReq

// uint64 cur_avatar_guid = 8;
void PersistentDungeonSwitchAvatarReq::clear_cur_avatar_guid() {
  cur_avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PersistentDungeonSwitchAvatarReq::cur_avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.PersistentDungeonSwitchAvatarReq.cur_avatar_guid)
  return cur_avatar_guid_;
}
void PersistentDungeonSwitchAvatarReq::set_cur_avatar_guid(::google::protobuf::uint64 value) {
  
  cur_avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.PersistentDungeonSwitchAvatarReq.cur_avatar_guid)
}

// repeated uint64 avatar_team_guid_list = 3;
int PersistentDungeonSwitchAvatarReq::avatar_team_guid_list_size() const {
  return avatar_team_guid_list_.size();
}
void PersistentDungeonSwitchAvatarReq::clear_avatar_team_guid_list() {
  avatar_team_guid_list_.Clear();
}
::google::protobuf::uint64 PersistentDungeonSwitchAvatarReq::avatar_team_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PersistentDungeonSwitchAvatarReq.avatar_team_guid_list)
  return avatar_team_guid_list_.Get(index);
}
void PersistentDungeonSwitchAvatarReq::set_avatar_team_guid_list(int index, ::google::protobuf::uint64 value) {
  avatar_team_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.PersistentDungeonSwitchAvatarReq.avatar_team_guid_list)
}
void PersistentDungeonSwitchAvatarReq::add_avatar_team_guid_list(::google::protobuf::uint64 value) {
  avatar_team_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.PersistentDungeonSwitchAvatarReq.avatar_team_guid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PersistentDungeonSwitchAvatarReq::avatar_team_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.PersistentDungeonSwitchAvatarReq.avatar_team_guid_list)
  return avatar_team_guid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PersistentDungeonSwitchAvatarReq::mutable_avatar_team_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PersistentDungeonSwitchAvatarReq.avatar_team_guid_list)
  return &avatar_team_guid_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PersistentDungeonSwitchAvatarRsp::kAvatarTeamGuidListFieldNumber;
const int PersistentDungeonSwitchAvatarRsp::kRetcodeFieldNumber;
const int PersistentDungeonSwitchAvatarRsp::kCurAvatarGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PersistentDungeonSwitchAvatarRsp::PersistentDungeonSwitchAvatarRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PersistentDungeonSwitchAvatarRsp)
}
PersistentDungeonSwitchAvatarRsp::PersistentDungeonSwitchAvatarRsp(const PersistentDungeonSwitchAvatarRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      avatar_team_guid_list_(from.avatar_team_guid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&cur_avatar_guid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(cur_avatar_guid_));
  // @@protoc_insertion_point(copy_constructor:proto.PersistentDungeonSwitchAvatarRsp)
}

void PersistentDungeonSwitchAvatarRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_avatar_guid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(cur_avatar_guid_));
  _cached_size_ = 0;
}

PersistentDungeonSwitchAvatarRsp::~PersistentDungeonSwitchAvatarRsp() {
  // @@protoc_insertion_point(destructor:proto.PersistentDungeonSwitchAvatarRsp)
  SharedDtor();
}

void PersistentDungeonSwitchAvatarRsp::SharedDtor() {
}

void PersistentDungeonSwitchAvatarRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PersistentDungeonSwitchAvatarRsp::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PersistentDungeonSwitchAvatarRsp& PersistentDungeonSwitchAvatarRsp::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

PersistentDungeonSwitchAvatarRsp* PersistentDungeonSwitchAvatarRsp::New(::google::protobuf::Arena* arena) const {
  PersistentDungeonSwitchAvatarRsp* n = new PersistentDungeonSwitchAvatarRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PersistentDungeonSwitchAvatarRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PersistentDungeonSwitchAvatarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  avatar_team_guid_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_avatar_guid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(cur_avatar_guid_));
  _internal_metadata_.Clear();
}

bool PersistentDungeonSwitchAvatarRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PersistentDungeonSwitchAvatarRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 avatar_team_guid_list = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_avatar_team_guid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 114u, input, this->mutable_avatar_team_guid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 cur_avatar_guid = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cur_avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PersistentDungeonSwitchAvatarRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PersistentDungeonSwitchAvatarRsp)
  return false;
#undef DO_
}

void PersistentDungeonSwitchAvatarRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PersistentDungeonSwitchAvatarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->retcode(), output);
  }

  // repeated uint64 avatar_team_guid_list = 14;
  if (this->avatar_team_guid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(14, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _avatar_team_guid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->avatar_team_guid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->avatar_team_guid_list(i), output);
  }

  // uint64 cur_avatar_guid = 15;
  if (this->cur_avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(15, this->cur_avatar_guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PersistentDungeonSwitchAvatarRsp)
}

::google::protobuf::uint8* PersistentDungeonSwitchAvatarRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PersistentDungeonSwitchAvatarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->retcode(), target);
  }

  // repeated uint64 avatar_team_guid_list = 14;
  if (this->avatar_team_guid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _avatar_team_guid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->avatar_team_guid_list_, target);
  }

  // uint64 cur_avatar_guid = 15;
  if (this->cur_avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(15, this->cur_avatar_guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PersistentDungeonSwitchAvatarRsp)
  return target;
}

size_t PersistentDungeonSwitchAvatarRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PersistentDungeonSwitchAvatarRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 avatar_team_guid_list = 14;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->avatar_team_guid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _avatar_team_guid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint64 cur_avatar_guid = 15;
  if (this->cur_avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cur_avatar_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PersistentDungeonSwitchAvatarRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PersistentDungeonSwitchAvatarRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PersistentDungeonSwitchAvatarRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PersistentDungeonSwitchAvatarRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PersistentDungeonSwitchAvatarRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PersistentDungeonSwitchAvatarRsp)
    MergeFrom(*source);
  }
}

void PersistentDungeonSwitchAvatarRsp::MergeFrom(const PersistentDungeonSwitchAvatarRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PersistentDungeonSwitchAvatarRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  avatar_team_guid_list_.MergeFrom(from.avatar_team_guid_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.cur_avatar_guid() != 0) {
    set_cur_avatar_guid(from.cur_avatar_guid());
  }
}

void PersistentDungeonSwitchAvatarRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PersistentDungeonSwitchAvatarRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PersistentDungeonSwitchAvatarRsp::CopyFrom(const PersistentDungeonSwitchAvatarRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PersistentDungeonSwitchAvatarRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PersistentDungeonSwitchAvatarRsp::IsInitialized() const {
  return true;
}

void PersistentDungeonSwitchAvatarRsp::Swap(PersistentDungeonSwitchAvatarRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PersistentDungeonSwitchAvatarRsp::InternalSwap(PersistentDungeonSwitchAvatarRsp* other) {
  using std::swap;
  avatar_team_guid_list_.InternalSwap(&other->avatar_team_guid_list_);
  swap(retcode_, other->retcode_);
  swap(cur_avatar_guid_, other->cur_avatar_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PersistentDungeonSwitchAvatarRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PersistentDungeonSwitchAvatarRsp

// repeated uint64 avatar_team_guid_list = 14;
int PersistentDungeonSwitchAvatarRsp::avatar_team_guid_list_size() const {
  return avatar_team_guid_list_.size();
}
void PersistentDungeonSwitchAvatarRsp::clear_avatar_team_guid_list() {
  avatar_team_guid_list_.Clear();
}
::google::protobuf::uint64 PersistentDungeonSwitchAvatarRsp::avatar_team_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PersistentDungeonSwitchAvatarRsp.avatar_team_guid_list)
  return avatar_team_guid_list_.Get(index);
}
void PersistentDungeonSwitchAvatarRsp::set_avatar_team_guid_list(int index, ::google::protobuf::uint64 value) {
  avatar_team_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.PersistentDungeonSwitchAvatarRsp.avatar_team_guid_list)
}
void PersistentDungeonSwitchAvatarRsp::add_avatar_team_guid_list(::google::protobuf::uint64 value) {
  avatar_team_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.PersistentDungeonSwitchAvatarRsp.avatar_team_guid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PersistentDungeonSwitchAvatarRsp::avatar_team_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.PersistentDungeonSwitchAvatarRsp.avatar_team_guid_list)
  return avatar_team_guid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PersistentDungeonSwitchAvatarRsp::mutable_avatar_team_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PersistentDungeonSwitchAvatarRsp.avatar_team_guid_list)
  return &avatar_team_guid_list_;
}

// int32 retcode = 7;
void PersistentDungeonSwitchAvatarRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PersistentDungeonSwitchAvatarRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PersistentDungeonSwitchAvatarRsp.retcode)
  return retcode_;
}
void PersistentDungeonSwitchAvatarRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PersistentDungeonSwitchAvatarRsp.retcode)
}

// uint64 cur_avatar_guid = 15;
void PersistentDungeonSwitchAvatarRsp::clear_cur_avatar_guid() {
  cur_avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PersistentDungeonSwitchAvatarRsp::cur_avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.PersistentDungeonSwitchAvatarRsp.cur_avatar_guid)
  return cur_avatar_guid_;
}
void PersistentDungeonSwitchAvatarRsp::set_cur_avatar_guid(::google::protobuf::uint64 value) {
  
  cur_avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.PersistentDungeonSwitchAvatarRsp.cur_avatar_guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddBackupAvatarTeamReq::AddBackupAvatarTeamReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddBackupAvatarTeamReq)
}
AddBackupAvatarTeamReq::AddBackupAvatarTeamReq(const AddBackupAvatarTeamReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.AddBackupAvatarTeamReq)
}

void AddBackupAvatarTeamReq::SharedCtor() {
  _cached_size_ = 0;
}

AddBackupAvatarTeamReq::~AddBackupAvatarTeamReq() {
  // @@protoc_insertion_point(destructor:proto.AddBackupAvatarTeamReq)
  SharedDtor();
}

void AddBackupAvatarTeamReq::SharedDtor() {
}

void AddBackupAvatarTeamReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddBackupAvatarTeamReq::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddBackupAvatarTeamReq& AddBackupAvatarTeamReq::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddBackupAvatarTeamReq* AddBackupAvatarTeamReq::New(::google::protobuf::Arena* arena) const {
  AddBackupAvatarTeamReq* n = new AddBackupAvatarTeamReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddBackupAvatarTeamReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddBackupAvatarTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool AddBackupAvatarTeamReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddBackupAvatarTeamReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddBackupAvatarTeamReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddBackupAvatarTeamReq)
  return false;
#undef DO_
}

void AddBackupAvatarTeamReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddBackupAvatarTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddBackupAvatarTeamReq)
}

::google::protobuf::uint8* AddBackupAvatarTeamReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddBackupAvatarTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddBackupAvatarTeamReq)
  return target;
}

size_t AddBackupAvatarTeamReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddBackupAvatarTeamReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddBackupAvatarTeamReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddBackupAvatarTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AddBackupAvatarTeamReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddBackupAvatarTeamReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddBackupAvatarTeamReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddBackupAvatarTeamReq)
    MergeFrom(*source);
  }
}

void AddBackupAvatarTeamReq::MergeFrom(const AddBackupAvatarTeamReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddBackupAvatarTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AddBackupAvatarTeamReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddBackupAvatarTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddBackupAvatarTeamReq::CopyFrom(const AddBackupAvatarTeamReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddBackupAvatarTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddBackupAvatarTeamReq::IsInitialized() const {
  return true;
}

void AddBackupAvatarTeamReq::Swap(AddBackupAvatarTeamReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddBackupAvatarTeamReq::InternalSwap(AddBackupAvatarTeamReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddBackupAvatarTeamReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddBackupAvatarTeamReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddBackupAvatarTeamRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddBackupAvatarTeamRsp::AddBackupAvatarTeamRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddBackupAvatarTeamRsp)
}
AddBackupAvatarTeamRsp::AddBackupAvatarTeamRsp(const AddBackupAvatarTeamRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.AddBackupAvatarTeamRsp)
}

void AddBackupAvatarTeamRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

AddBackupAvatarTeamRsp::~AddBackupAvatarTeamRsp() {
  // @@protoc_insertion_point(destructor:proto.AddBackupAvatarTeamRsp)
  SharedDtor();
}

void AddBackupAvatarTeamRsp::SharedDtor() {
}

void AddBackupAvatarTeamRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddBackupAvatarTeamRsp::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddBackupAvatarTeamRsp& AddBackupAvatarTeamRsp::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddBackupAvatarTeamRsp* AddBackupAvatarTeamRsp::New(::google::protobuf::Arena* arena) const {
  AddBackupAvatarTeamRsp* n = new AddBackupAvatarTeamRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddBackupAvatarTeamRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddBackupAvatarTeamRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool AddBackupAvatarTeamRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddBackupAvatarTeamRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddBackupAvatarTeamRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddBackupAvatarTeamRsp)
  return false;
#undef DO_
}

void AddBackupAvatarTeamRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddBackupAvatarTeamRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddBackupAvatarTeamRsp)
}

::google::protobuf::uint8* AddBackupAvatarTeamRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddBackupAvatarTeamRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddBackupAvatarTeamRsp)
  return target;
}

size_t AddBackupAvatarTeamRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddBackupAvatarTeamRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 4;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddBackupAvatarTeamRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddBackupAvatarTeamRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddBackupAvatarTeamRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddBackupAvatarTeamRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddBackupAvatarTeamRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddBackupAvatarTeamRsp)
    MergeFrom(*source);
  }
}

void AddBackupAvatarTeamRsp::MergeFrom(const AddBackupAvatarTeamRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddBackupAvatarTeamRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void AddBackupAvatarTeamRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddBackupAvatarTeamRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddBackupAvatarTeamRsp::CopyFrom(const AddBackupAvatarTeamRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddBackupAvatarTeamRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddBackupAvatarTeamRsp::IsInitialized() const {
  return true;
}

void AddBackupAvatarTeamRsp::Swap(AddBackupAvatarTeamRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddBackupAvatarTeamRsp::InternalSwap(AddBackupAvatarTeamRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddBackupAvatarTeamRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddBackupAvatarTeamRsp

// int32 retcode = 4;
void AddBackupAvatarTeamRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 AddBackupAvatarTeamRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AddBackupAvatarTeamRsp.retcode)
  return retcode_;
}
void AddBackupAvatarTeamRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AddBackupAvatarTeamRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelBackupAvatarTeamReq::kBackupAvatarTeamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelBackupAvatarTeamReq::DelBackupAvatarTeamReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DelBackupAvatarTeamReq)
}
DelBackupAvatarTeamReq::DelBackupAvatarTeamReq(const DelBackupAvatarTeamReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  backup_avatar_team_id_ = from.backup_avatar_team_id_;
  // @@protoc_insertion_point(copy_constructor:proto.DelBackupAvatarTeamReq)
}

void DelBackupAvatarTeamReq::SharedCtor() {
  backup_avatar_team_id_ = 0u;
  _cached_size_ = 0;
}

DelBackupAvatarTeamReq::~DelBackupAvatarTeamReq() {
  // @@protoc_insertion_point(destructor:proto.DelBackupAvatarTeamReq)
  SharedDtor();
}

void DelBackupAvatarTeamReq::SharedDtor() {
}

void DelBackupAvatarTeamReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelBackupAvatarTeamReq::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelBackupAvatarTeamReq& DelBackupAvatarTeamReq::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelBackupAvatarTeamReq* DelBackupAvatarTeamReq::New(::google::protobuf::Arena* arena) const {
  DelBackupAvatarTeamReq* n = new DelBackupAvatarTeamReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelBackupAvatarTeamReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DelBackupAvatarTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  backup_avatar_team_id_ = 0u;
  _internal_metadata_.Clear();
}

bool DelBackupAvatarTeamReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DelBackupAvatarTeamReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 backup_avatar_team_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &backup_avatar_team_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DelBackupAvatarTeamReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DelBackupAvatarTeamReq)
  return false;
#undef DO_
}

void DelBackupAvatarTeamReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DelBackupAvatarTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 backup_avatar_team_id = 4;
  if (this->backup_avatar_team_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->backup_avatar_team_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DelBackupAvatarTeamReq)
}

::google::protobuf::uint8* DelBackupAvatarTeamReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DelBackupAvatarTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 backup_avatar_team_id = 4;
  if (this->backup_avatar_team_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->backup_avatar_team_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DelBackupAvatarTeamReq)
  return target;
}

size_t DelBackupAvatarTeamReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DelBackupAvatarTeamReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 backup_avatar_team_id = 4;
  if (this->backup_avatar_team_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->backup_avatar_team_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelBackupAvatarTeamReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DelBackupAvatarTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DelBackupAvatarTeamReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelBackupAvatarTeamReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DelBackupAvatarTeamReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DelBackupAvatarTeamReq)
    MergeFrom(*source);
  }
}

void DelBackupAvatarTeamReq::MergeFrom(const DelBackupAvatarTeamReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DelBackupAvatarTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.backup_avatar_team_id() != 0) {
    set_backup_avatar_team_id(from.backup_avatar_team_id());
  }
}

void DelBackupAvatarTeamReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DelBackupAvatarTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelBackupAvatarTeamReq::CopyFrom(const DelBackupAvatarTeamReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DelBackupAvatarTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelBackupAvatarTeamReq::IsInitialized() const {
  return true;
}

void DelBackupAvatarTeamReq::Swap(DelBackupAvatarTeamReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelBackupAvatarTeamReq::InternalSwap(DelBackupAvatarTeamReq* other) {
  using std::swap;
  swap(backup_avatar_team_id_, other->backup_avatar_team_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelBackupAvatarTeamReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelBackupAvatarTeamReq

// uint32 backup_avatar_team_id = 4;
void DelBackupAvatarTeamReq::clear_backup_avatar_team_id() {
  backup_avatar_team_id_ = 0u;
}
::google::protobuf::uint32 DelBackupAvatarTeamReq::backup_avatar_team_id() const {
  // @@protoc_insertion_point(field_get:proto.DelBackupAvatarTeamReq.backup_avatar_team_id)
  return backup_avatar_team_id_;
}
void DelBackupAvatarTeamReq::set_backup_avatar_team_id(::google::protobuf::uint32 value) {
  
  backup_avatar_team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DelBackupAvatarTeamReq.backup_avatar_team_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelBackupAvatarTeamRsp::kBackupAvatarTeamIdFieldNumber;
const int DelBackupAvatarTeamRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelBackupAvatarTeamRsp::DelBackupAvatarTeamRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DelBackupAvatarTeamRsp)
}
DelBackupAvatarTeamRsp::DelBackupAvatarTeamRsp(const DelBackupAvatarTeamRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&backup_avatar_team_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(backup_avatar_team_id_));
  // @@protoc_insertion_point(copy_constructor:proto.DelBackupAvatarTeamRsp)
}

void DelBackupAvatarTeamRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&backup_avatar_team_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(backup_avatar_team_id_));
  _cached_size_ = 0;
}

DelBackupAvatarTeamRsp::~DelBackupAvatarTeamRsp() {
  // @@protoc_insertion_point(destructor:proto.DelBackupAvatarTeamRsp)
  SharedDtor();
}

void DelBackupAvatarTeamRsp::SharedDtor() {
}

void DelBackupAvatarTeamRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelBackupAvatarTeamRsp::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelBackupAvatarTeamRsp& DelBackupAvatarTeamRsp::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelBackupAvatarTeamRsp* DelBackupAvatarTeamRsp::New(::google::protobuf::Arena* arena) const {
  DelBackupAvatarTeamRsp* n = new DelBackupAvatarTeamRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelBackupAvatarTeamRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DelBackupAvatarTeamRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&backup_avatar_team_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(backup_avatar_team_id_));
  _internal_metadata_.Clear();
}

bool DelBackupAvatarTeamRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DelBackupAvatarTeamRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 backup_avatar_team_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &backup_avatar_team_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DelBackupAvatarTeamRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DelBackupAvatarTeamRsp)
  return false;
#undef DO_
}

void DelBackupAvatarTeamRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DelBackupAvatarTeamRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->retcode(), output);
  }

  // uint32 backup_avatar_team_id = 15;
  if (this->backup_avatar_team_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->backup_avatar_team_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DelBackupAvatarTeamRsp)
}

::google::protobuf::uint8* DelBackupAvatarTeamRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DelBackupAvatarTeamRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->retcode(), target);
  }

  // uint32 backup_avatar_team_id = 15;
  if (this->backup_avatar_team_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->backup_avatar_team_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DelBackupAvatarTeamRsp)
  return target;
}

size_t DelBackupAvatarTeamRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DelBackupAvatarTeamRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 4;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 backup_avatar_team_id = 15;
  if (this->backup_avatar_team_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->backup_avatar_team_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelBackupAvatarTeamRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DelBackupAvatarTeamRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DelBackupAvatarTeamRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelBackupAvatarTeamRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DelBackupAvatarTeamRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DelBackupAvatarTeamRsp)
    MergeFrom(*source);
  }
}

void DelBackupAvatarTeamRsp::MergeFrom(const DelBackupAvatarTeamRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DelBackupAvatarTeamRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.backup_avatar_team_id() != 0) {
    set_backup_avatar_team_id(from.backup_avatar_team_id());
  }
}

void DelBackupAvatarTeamRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DelBackupAvatarTeamRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelBackupAvatarTeamRsp::CopyFrom(const DelBackupAvatarTeamRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DelBackupAvatarTeamRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelBackupAvatarTeamRsp::IsInitialized() const {
  return true;
}

void DelBackupAvatarTeamRsp::Swap(DelBackupAvatarTeamRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelBackupAvatarTeamRsp::InternalSwap(DelBackupAvatarTeamRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(backup_avatar_team_id_, other->backup_avatar_team_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelBackupAvatarTeamRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelBackupAvatarTeamRsp

// uint32 backup_avatar_team_id = 15;
void DelBackupAvatarTeamRsp::clear_backup_avatar_team_id() {
  backup_avatar_team_id_ = 0u;
}
::google::protobuf::uint32 DelBackupAvatarTeamRsp::backup_avatar_team_id() const {
  // @@protoc_insertion_point(field_get:proto.DelBackupAvatarTeamRsp.backup_avatar_team_id)
  return backup_avatar_team_id_;
}
void DelBackupAvatarTeamRsp::set_backup_avatar_team_id(::google::protobuf::uint32 value) {
  
  backup_avatar_team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DelBackupAvatarTeamRsp.backup_avatar_team_id)
}

// int32 retcode = 4;
void DelBackupAvatarTeamRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 DelBackupAvatarTeamRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.DelBackupAvatarTeamRsp.retcode)
  return retcode_;
}
void DelBackupAvatarTeamRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.DelBackupAvatarTeamRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

AvatarTeamAllDataNotify::AvatarTeamAllDataNotify_AvatarTeamMapEntry::AvatarTeamAllDataNotify_AvatarTeamMapEntry() {}
AvatarTeamAllDataNotify::AvatarTeamAllDataNotify_AvatarTeamMapEntry::AvatarTeamAllDataNotify_AvatarTeamMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata AvatarTeamAllDataNotify::AvatarTeamAllDataNotify_AvatarTeamMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[77];
}
void AvatarTeamAllDataNotify::AvatarTeamAllDataNotify_AvatarTeamMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void AvatarTeamAllDataNotify::AvatarTeamAllDataNotify_AvatarTeamMapEntry::MergeFrom(const AvatarTeamAllDataNotify_AvatarTeamMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarTeamAllDataNotify::kTempAvatarGuidListFieldNumber;
const int AvatarTeamAllDataNotify::kAvatarTeamMapFieldNumber;
const int AvatarTeamAllDataNotify::kBackupAvatarTeamOrderListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarTeamAllDataNotify::AvatarTeamAllDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarTeamAllDataNotify)
}
AvatarTeamAllDataNotify::AvatarTeamAllDataNotify(const AvatarTeamAllDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      backup_avatar_team_order_list_(from.backup_avatar_team_order_list_),
      temp_avatar_guid_list_(from.temp_avatar_guid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  avatar_team_map_.MergeFrom(from.avatar_team_map_);
  // @@protoc_insertion_point(copy_constructor:proto.AvatarTeamAllDataNotify)
}

void AvatarTeamAllDataNotify::SharedCtor() {
  _cached_size_ = 0;
}

AvatarTeamAllDataNotify::~AvatarTeamAllDataNotify() {
  // @@protoc_insertion_point(destructor:proto.AvatarTeamAllDataNotify)
  SharedDtor();
}

void AvatarTeamAllDataNotify::SharedDtor() {
}

void AvatarTeamAllDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarTeamAllDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarTeamAllDataNotify& AvatarTeamAllDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarTeamAllDataNotify* AvatarTeamAllDataNotify::New(::google::protobuf::Arena* arena) const {
  AvatarTeamAllDataNotify* n = new AvatarTeamAllDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarTeamAllDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarTeamAllDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  backup_avatar_team_order_list_.Clear();
  avatar_team_map_.Clear();
  temp_avatar_guid_list_.Clear();
  _internal_metadata_.Clear();
}

bool AvatarTeamAllDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarTeamAllDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 backup_avatar_team_order_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_backup_avatar_team_order_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_backup_avatar_team_order_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .proto.AvatarTeam> avatar_team_map = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          AvatarTeamAllDataNotify_AvatarTeamMapEntry::Parser< ::google::protobuf::internal::MapField<
              AvatarTeamAllDataNotify_AvatarTeamMapEntry,
              ::google::protobuf::uint32, ::proto::AvatarTeam,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam > > parser(&avatar_team_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 temp_avatar_guid_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_temp_avatar_guid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 50u, input, this->mutable_temp_avatar_guid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarTeamAllDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarTeamAllDataNotify)
  return false;
#undef DO_
}

void AvatarTeamAllDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarTeamAllDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 backup_avatar_team_order_list = 1;
  if (this->backup_avatar_team_order_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _backup_avatar_team_order_list_cached_byte_size_));
  }
  for (int i = 0, n = this->backup_avatar_team_order_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->backup_avatar_team_order_list(i), output);
  }

  // map<uint32, .proto.AvatarTeam> avatar_team_map = 3;
  if (!this->avatar_team_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->avatar_team_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->avatar_team_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::const_iterator
          it = this->avatar_team_map().begin();
          it != this->avatar_team_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarTeamAllDataNotify_AvatarTeamMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(avatar_team_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarTeamAllDataNotify_AvatarTeamMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::const_iterator
          it = this->avatar_team_map().begin();
          it != this->avatar_team_map().end(); ++it) {
        entry.reset(avatar_team_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    }
  }

  // repeated uint64 temp_avatar_guid_list = 6;
  if (this->temp_avatar_guid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _temp_avatar_guid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->temp_avatar_guid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->temp_avatar_guid_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarTeamAllDataNotify)
}

::google::protobuf::uint8* AvatarTeamAllDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarTeamAllDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 backup_avatar_team_order_list = 1;
  if (this->backup_avatar_team_order_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _backup_avatar_team_order_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->backup_avatar_team_order_list_, target);
  }

  // map<uint32, .proto.AvatarTeam> avatar_team_map = 3;
  if (!this->avatar_team_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->avatar_team_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->avatar_team_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::const_iterator
          it = this->avatar_team_map().begin();
          it != this->avatar_team_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarTeamAllDataNotify_AvatarTeamMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(avatar_team_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarTeamAllDataNotify_AvatarTeamMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::const_iterator
          it = this->avatar_team_map().begin();
          it != this->avatar_team_map().end(); ++it) {
        entry.reset(avatar_team_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    }
  }

  // repeated uint64 temp_avatar_guid_list = 6;
  if (this->temp_avatar_guid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _temp_avatar_guid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->temp_avatar_guid_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarTeamAllDataNotify)
  return target;
}

size_t AvatarTeamAllDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarTeamAllDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 backup_avatar_team_order_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->backup_avatar_team_order_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _backup_avatar_team_order_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // map<uint32, .proto.AvatarTeam> avatar_team_map = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->avatar_team_map_size());
  {
    ::google::protobuf::scoped_ptr<AvatarTeamAllDataNotify_AvatarTeamMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >::const_iterator
        it = this->avatar_team_map().begin();
        it != this->avatar_team_map().end(); ++it) {
      entry.reset(avatar_team_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated uint64 temp_avatar_guid_list = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->temp_avatar_guid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _temp_avatar_guid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarTeamAllDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarTeamAllDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarTeamAllDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarTeamAllDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarTeamAllDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarTeamAllDataNotify)
    MergeFrom(*source);
  }
}

void AvatarTeamAllDataNotify::MergeFrom(const AvatarTeamAllDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarTeamAllDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  backup_avatar_team_order_list_.MergeFrom(from.backup_avatar_team_order_list_);
  avatar_team_map_.MergeFrom(from.avatar_team_map_);
  temp_avatar_guid_list_.MergeFrom(from.temp_avatar_guid_list_);
}

void AvatarTeamAllDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarTeamAllDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarTeamAllDataNotify::CopyFrom(const AvatarTeamAllDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarTeamAllDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarTeamAllDataNotify::IsInitialized() const {
  return true;
}

void AvatarTeamAllDataNotify::Swap(AvatarTeamAllDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarTeamAllDataNotify::InternalSwap(AvatarTeamAllDataNotify* other) {
  using std::swap;
  backup_avatar_team_order_list_.InternalSwap(&other->backup_avatar_team_order_list_);
  avatar_team_map_.Swap(&other->avatar_team_map_);
  temp_avatar_guid_list_.InternalSwap(&other->temp_avatar_guid_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarTeamAllDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarTeamAllDataNotify

// repeated uint64 temp_avatar_guid_list = 6;
int AvatarTeamAllDataNotify::temp_avatar_guid_list_size() const {
  return temp_avatar_guid_list_.size();
}
void AvatarTeamAllDataNotify::clear_temp_avatar_guid_list() {
  temp_avatar_guid_list_.Clear();
}
::google::protobuf::uint64 AvatarTeamAllDataNotify::temp_avatar_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarTeamAllDataNotify.temp_avatar_guid_list)
  return temp_avatar_guid_list_.Get(index);
}
void AvatarTeamAllDataNotify::set_temp_avatar_guid_list(int index, ::google::protobuf::uint64 value) {
  temp_avatar_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarTeamAllDataNotify.temp_avatar_guid_list)
}
void AvatarTeamAllDataNotify::add_temp_avatar_guid_list(::google::protobuf::uint64 value) {
  temp_avatar_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarTeamAllDataNotify.temp_avatar_guid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
AvatarTeamAllDataNotify::temp_avatar_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarTeamAllDataNotify.temp_avatar_guid_list)
  return temp_avatar_guid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
AvatarTeamAllDataNotify::mutable_temp_avatar_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarTeamAllDataNotify.temp_avatar_guid_list)
  return &temp_avatar_guid_list_;
}

// map<uint32, .proto.AvatarTeam> avatar_team_map = 3;
int AvatarTeamAllDataNotify::avatar_team_map_size() const {
  return avatar_team_map_.size();
}
void AvatarTeamAllDataNotify::clear_avatar_team_map() {
  avatar_team_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >&
AvatarTeamAllDataNotify::avatar_team_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarTeamAllDataNotify.avatar_team_map)
  return avatar_team_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarTeam >*
AvatarTeamAllDataNotify::mutable_avatar_team_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarTeamAllDataNotify.avatar_team_map)
  return avatar_team_map_.MutableMap();
}

// repeated uint32 backup_avatar_team_order_list = 1;
int AvatarTeamAllDataNotify::backup_avatar_team_order_list_size() const {
  return backup_avatar_team_order_list_.size();
}
void AvatarTeamAllDataNotify::clear_backup_avatar_team_order_list() {
  backup_avatar_team_order_list_.Clear();
}
::google::protobuf::uint32 AvatarTeamAllDataNotify::backup_avatar_team_order_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarTeamAllDataNotify.backup_avatar_team_order_list)
  return backup_avatar_team_order_list_.Get(index);
}
void AvatarTeamAllDataNotify::set_backup_avatar_team_order_list(int index, ::google::protobuf::uint32 value) {
  backup_avatar_team_order_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarTeamAllDataNotify.backup_avatar_team_order_list)
}
void AvatarTeamAllDataNotify::add_backup_avatar_team_order_list(::google::protobuf::uint32 value) {
  backup_avatar_team_order_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarTeamAllDataNotify.backup_avatar_team_order_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AvatarTeamAllDataNotify::backup_avatar_team_order_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarTeamAllDataNotify.backup_avatar_team_order_list)
  return backup_avatar_team_order_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AvatarTeamAllDataNotify::mutable_backup_avatar_team_order_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarTeamAllDataNotify.backup_avatar_team_order_list)
  return &backup_avatar_team_order_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarRenameInfo::kAvatarNameFieldNumber;
const int AvatarRenameInfo::kAvatarIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarRenameInfo::AvatarRenameInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarRenameInfo)
}
AvatarRenameInfo::AvatarRenameInfo(const AvatarRenameInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  avatar_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.avatar_name().size() > 0) {
    avatar_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_name_);
  }
  avatar_id_ = from.avatar_id_;
  // @@protoc_insertion_point(copy_constructor:proto.AvatarRenameInfo)
}

void AvatarRenameInfo::SharedCtor() {
  avatar_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_id_ = 0u;
  _cached_size_ = 0;
}

AvatarRenameInfo::~AvatarRenameInfo() {
  // @@protoc_insertion_point(destructor:proto.AvatarRenameInfo)
  SharedDtor();
}

void AvatarRenameInfo::SharedDtor() {
  avatar_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AvatarRenameInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarRenameInfo::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarRenameInfo& AvatarRenameInfo::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarRenameInfo* AvatarRenameInfo::New(::google::protobuf::Arena* arena) const {
  AvatarRenameInfo* n = new AvatarRenameInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarRenameInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarRenameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  avatar_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_id_ = 0u;
  _internal_metadata_.Clear();
}

bool AvatarRenameInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarRenameInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string avatar_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_avatar_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->avatar_name().data(), static_cast<int>(this->avatar_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AvatarRenameInfo.avatar_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 avatar_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarRenameInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarRenameInfo)
  return false;
#undef DO_
}

void AvatarRenameInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarRenameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string avatar_name = 3;
  if (this->avatar_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->avatar_name().data(), static_cast<int>(this->avatar_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AvatarRenameInfo.avatar_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->avatar_name(), output);
  }

  // uint32 avatar_id = 12;
  if (this->avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->avatar_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarRenameInfo)
}

::google::protobuf::uint8* AvatarRenameInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarRenameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string avatar_name = 3;
  if (this->avatar_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->avatar_name().data(), static_cast<int>(this->avatar_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AvatarRenameInfo.avatar_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->avatar_name(), target);
  }

  // uint32 avatar_id = 12;
  if (this->avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->avatar_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarRenameInfo)
  return target;
}

size_t AvatarRenameInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarRenameInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string avatar_name = 3;
  if (this->avatar_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->avatar_name());
  }

  // uint32 avatar_id = 12;
  if (this->avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarRenameInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarRenameInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarRenameInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarRenameInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarRenameInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarRenameInfo)
    MergeFrom(*source);
  }
}

void AvatarRenameInfo::MergeFrom(const AvatarRenameInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarRenameInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_name().size() > 0) {

    avatar_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_name_);
  }
  if (from.avatar_id() != 0) {
    set_avatar_id(from.avatar_id());
  }
}

void AvatarRenameInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarRenameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarRenameInfo::CopyFrom(const AvatarRenameInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarRenameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarRenameInfo::IsInitialized() const {
  return true;
}

void AvatarRenameInfo::Swap(AvatarRenameInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarRenameInfo::InternalSwap(AvatarRenameInfo* other) {
  using std::swap;
  avatar_name_.Swap(&other->avatar_name_);
  swap(avatar_id_, other->avatar_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarRenameInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarRenameInfo

// string avatar_name = 3;
void AvatarRenameInfo::clear_avatar_name() {
  avatar_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AvatarRenameInfo::avatar_name() const {
  // @@protoc_insertion_point(field_get:proto.AvatarRenameInfo.avatar_name)
  return avatar_name_.GetNoArena();
}
void AvatarRenameInfo::set_avatar_name(const ::std::string& value) {
  
  avatar_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AvatarRenameInfo.avatar_name)
}
#if LANG_CXX11
void AvatarRenameInfo::set_avatar_name(::std::string&& value) {
  
  avatar_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AvatarRenameInfo.avatar_name)
}
#endif
void AvatarRenameInfo::set_avatar_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  avatar_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AvatarRenameInfo.avatar_name)
}
void AvatarRenameInfo::set_avatar_name(const char* value, size_t size) {
  
  avatar_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AvatarRenameInfo.avatar_name)
}
::std::string* AvatarRenameInfo::mutable_avatar_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.AvatarRenameInfo.avatar_name)
  return avatar_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AvatarRenameInfo::release_avatar_name() {
  // @@protoc_insertion_point(field_release:proto.AvatarRenameInfo.avatar_name)
  
  return avatar_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvatarRenameInfo::set_allocated_avatar_name(::std::string* avatar_name) {
  if (avatar_name != NULL) {
    
  } else {
    
  }
  avatar_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), avatar_name);
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarRenameInfo.avatar_name)
}

// uint32 avatar_id = 12;
void AvatarRenameInfo::clear_avatar_id() {
  avatar_id_ = 0u;
}
::google::protobuf::uint32 AvatarRenameInfo::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarRenameInfo.avatar_id)
  return avatar_id_;
}
void AvatarRenameInfo::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarRenameInfo.avatar_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarRenameInfoNotify::kAvatarRenameListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarRenameInfoNotify::AvatarRenameInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarRenameInfoNotify)
}
AvatarRenameInfoNotify::AvatarRenameInfoNotify(const AvatarRenameInfoNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      avatar_rename_list_(from.avatar_rename_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.AvatarRenameInfoNotify)
}

void AvatarRenameInfoNotify::SharedCtor() {
  _cached_size_ = 0;
}

AvatarRenameInfoNotify::~AvatarRenameInfoNotify() {
  // @@protoc_insertion_point(destructor:proto.AvatarRenameInfoNotify)
  SharedDtor();
}

void AvatarRenameInfoNotify::SharedDtor() {
}

void AvatarRenameInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarRenameInfoNotify::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarRenameInfoNotify& AvatarRenameInfoNotify::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarRenameInfoNotify* AvatarRenameInfoNotify::New(::google::protobuf::Arena* arena) const {
  AvatarRenameInfoNotify* n = new AvatarRenameInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarRenameInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarRenameInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  avatar_rename_list_.Clear();
  _internal_metadata_.Clear();
}

bool AvatarRenameInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarRenameInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.AvatarRenameInfo avatar_rename_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_avatar_rename_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarRenameInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarRenameInfoNotify)
  return false;
#undef DO_
}

void AvatarRenameInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarRenameInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.AvatarRenameInfo avatar_rename_list = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->avatar_rename_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->avatar_rename_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarRenameInfoNotify)
}

::google::protobuf::uint8* AvatarRenameInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarRenameInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.AvatarRenameInfo avatar_rename_list = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->avatar_rename_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->avatar_rename_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarRenameInfoNotify)
  return target;
}

size_t AvatarRenameInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarRenameInfoNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.AvatarRenameInfo avatar_rename_list = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->avatar_rename_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->avatar_rename_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarRenameInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarRenameInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarRenameInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarRenameInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarRenameInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarRenameInfoNotify)
    MergeFrom(*source);
  }
}

void AvatarRenameInfoNotify::MergeFrom(const AvatarRenameInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarRenameInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  avatar_rename_list_.MergeFrom(from.avatar_rename_list_);
}

void AvatarRenameInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarRenameInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarRenameInfoNotify::CopyFrom(const AvatarRenameInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarRenameInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarRenameInfoNotify::IsInitialized() const {
  return true;
}

void AvatarRenameInfoNotify::Swap(AvatarRenameInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarRenameInfoNotify::InternalSwap(AvatarRenameInfoNotify* other) {
  using std::swap;
  avatar_rename_list_.InternalSwap(&other->avatar_rename_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarRenameInfoNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarRenameInfoNotify

// repeated .proto.AvatarRenameInfo avatar_rename_list = 8;
int AvatarRenameInfoNotify::avatar_rename_list_size() const {
  return avatar_rename_list_.size();
}
void AvatarRenameInfoNotify::clear_avatar_rename_list() {
  avatar_rename_list_.Clear();
}
const ::proto::AvatarRenameInfo& AvatarRenameInfoNotify::avatar_rename_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarRenameInfoNotify.avatar_rename_list)
  return avatar_rename_list_.Get(index);
}
::proto::AvatarRenameInfo* AvatarRenameInfoNotify::mutable_avatar_rename_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AvatarRenameInfoNotify.avatar_rename_list)
  return avatar_rename_list_.Mutable(index);
}
::proto::AvatarRenameInfo* AvatarRenameInfoNotify::add_avatar_rename_list() {
  // @@protoc_insertion_point(field_add:proto.AvatarRenameInfoNotify.avatar_rename_list)
  return avatar_rename_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::AvatarRenameInfo >*
AvatarRenameInfoNotify::mutable_avatar_rename_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarRenameInfoNotify.avatar_rename_list)
  return &avatar_rename_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::AvatarRenameInfo >&
AvatarRenameInfoNotify::avatar_rename_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarRenameInfoNotify.avatar_rename_list)
  return avatar_rename_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemRenameAvatarReq::kRenameIdFieldNumber;
const int ItemRenameAvatarReq::kAvatarNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemRenameAvatarReq::ItemRenameAvatarReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ItemRenameAvatarReq)
}
ItemRenameAvatarReq::ItemRenameAvatarReq(const ItemRenameAvatarReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  avatar_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.avatar_name().size() > 0) {
    avatar_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_name_);
  }
  rename_id_ = from.rename_id_;
  // @@protoc_insertion_point(copy_constructor:proto.ItemRenameAvatarReq)
}

void ItemRenameAvatarReq::SharedCtor() {
  avatar_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rename_id_ = 0u;
  _cached_size_ = 0;
}

ItemRenameAvatarReq::~ItemRenameAvatarReq() {
  // @@protoc_insertion_point(destructor:proto.ItemRenameAvatarReq)
  SharedDtor();
}

void ItemRenameAvatarReq::SharedDtor() {
  avatar_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ItemRenameAvatarReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemRenameAvatarReq::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemRenameAvatarReq& ItemRenameAvatarReq::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

ItemRenameAvatarReq* ItemRenameAvatarReq::New(::google::protobuf::Arena* arena) const {
  ItemRenameAvatarReq* n = new ItemRenameAvatarReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemRenameAvatarReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ItemRenameAvatarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  avatar_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rename_id_ = 0u;
  _internal_metadata_.Clear();
}

bool ItemRenameAvatarReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ItemRenameAvatarReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 rename_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rename_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string avatar_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_avatar_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->avatar_name().data(), static_cast<int>(this->avatar_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ItemRenameAvatarReq.avatar_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ItemRenameAvatarReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ItemRenameAvatarReq)
  return false;
#undef DO_
}

void ItemRenameAvatarReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ItemRenameAvatarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rename_id = 2;
  if (this->rename_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rename_id(), output);
  }

  // string avatar_name = 3;
  if (this->avatar_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->avatar_name().data(), static_cast<int>(this->avatar_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ItemRenameAvatarReq.avatar_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->avatar_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ItemRenameAvatarReq)
}

::google::protobuf::uint8* ItemRenameAvatarReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ItemRenameAvatarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rename_id = 2;
  if (this->rename_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rename_id(), target);
  }

  // string avatar_name = 3;
  if (this->avatar_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->avatar_name().data(), static_cast<int>(this->avatar_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ItemRenameAvatarReq.avatar_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->avatar_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ItemRenameAvatarReq)
  return target;
}

size_t ItemRenameAvatarReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ItemRenameAvatarReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string avatar_name = 3;
  if (this->avatar_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->avatar_name());
  }

  // uint32 rename_id = 2;
  if (this->rename_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rename_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemRenameAvatarReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ItemRenameAvatarReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemRenameAvatarReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemRenameAvatarReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ItemRenameAvatarReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ItemRenameAvatarReq)
    MergeFrom(*source);
  }
}

void ItemRenameAvatarReq::MergeFrom(const ItemRenameAvatarReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ItemRenameAvatarReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_name().size() > 0) {

    avatar_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_name_);
  }
  if (from.rename_id() != 0) {
    set_rename_id(from.rename_id());
  }
}

void ItemRenameAvatarReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ItemRenameAvatarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemRenameAvatarReq::CopyFrom(const ItemRenameAvatarReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ItemRenameAvatarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemRenameAvatarReq::IsInitialized() const {
  return true;
}

void ItemRenameAvatarReq::Swap(ItemRenameAvatarReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemRenameAvatarReq::InternalSwap(ItemRenameAvatarReq* other) {
  using std::swap;
  avatar_name_.Swap(&other->avatar_name_);
  swap(rename_id_, other->rename_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemRenameAvatarReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemRenameAvatarReq

// uint32 rename_id = 2;
void ItemRenameAvatarReq::clear_rename_id() {
  rename_id_ = 0u;
}
::google::protobuf::uint32 ItemRenameAvatarReq::rename_id() const {
  // @@protoc_insertion_point(field_get:proto.ItemRenameAvatarReq.rename_id)
  return rename_id_;
}
void ItemRenameAvatarReq::set_rename_id(::google::protobuf::uint32 value) {
  
  rename_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemRenameAvatarReq.rename_id)
}

// string avatar_name = 3;
void ItemRenameAvatarReq::clear_avatar_name() {
  avatar_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ItemRenameAvatarReq::avatar_name() const {
  // @@protoc_insertion_point(field_get:proto.ItemRenameAvatarReq.avatar_name)
  return avatar_name_.GetNoArena();
}
void ItemRenameAvatarReq::set_avatar_name(const ::std::string& value) {
  
  avatar_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ItemRenameAvatarReq.avatar_name)
}
#if LANG_CXX11
void ItemRenameAvatarReq::set_avatar_name(::std::string&& value) {
  
  avatar_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ItemRenameAvatarReq.avatar_name)
}
#endif
void ItemRenameAvatarReq::set_avatar_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  avatar_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ItemRenameAvatarReq.avatar_name)
}
void ItemRenameAvatarReq::set_avatar_name(const char* value, size_t size) {
  
  avatar_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ItemRenameAvatarReq.avatar_name)
}
::std::string* ItemRenameAvatarReq::mutable_avatar_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.ItemRenameAvatarReq.avatar_name)
  return avatar_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ItemRenameAvatarReq::release_avatar_name() {
  // @@protoc_insertion_point(field_release:proto.ItemRenameAvatarReq.avatar_name)
  
  return avatar_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ItemRenameAvatarReq::set_allocated_avatar_name(::std::string* avatar_name) {
  if (avatar_name != NULL) {
    
  } else {
    
  }
  avatar_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), avatar_name);
  // @@protoc_insertion_point(field_set_allocated:proto.ItemRenameAvatarReq.avatar_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemRenameAvatarRsp::kRenameIdFieldNumber;
const int ItemRenameAvatarRsp::kCdTimeFieldNumber;
const int ItemRenameAvatarRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemRenameAvatarRsp::ItemRenameAvatarRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ItemRenameAvatarRsp)
}
ItemRenameAvatarRsp::ItemRenameAvatarRsp(const ItemRenameAvatarRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rename_id_, &from.rename_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&rename_id_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.ItemRenameAvatarRsp)
}

void ItemRenameAvatarRsp::SharedCtor() {
  ::memset(&rename_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&rename_id_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

ItemRenameAvatarRsp::~ItemRenameAvatarRsp() {
  // @@protoc_insertion_point(destructor:proto.ItemRenameAvatarRsp)
  SharedDtor();
}

void ItemRenameAvatarRsp::SharedDtor() {
}

void ItemRenameAvatarRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemRenameAvatarRsp::descriptor() {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemRenameAvatarRsp& ItemRenameAvatarRsp::default_instance() {
  protobuf_cmd_2fcmd_5favatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

ItemRenameAvatarRsp* ItemRenameAvatarRsp::New(::google::protobuf::Arena* arena) const {
  ItemRenameAvatarRsp* n = new ItemRenameAvatarRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemRenameAvatarRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ItemRenameAvatarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&rename_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&rename_id_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool ItemRenameAvatarRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ItemRenameAvatarRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cd_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cd_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rename_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rename_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ItemRenameAvatarRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ItemRenameAvatarRsp)
  return false;
#undef DO_
}

void ItemRenameAvatarRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ItemRenameAvatarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cd_time = 2;
  if (this->cd_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cd_time(), output);
  }

  // int32 retcode = 9;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->retcode(), output);
  }

  // uint32 rename_id = 15;
  if (this->rename_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->rename_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ItemRenameAvatarRsp)
}

::google::protobuf::uint8* ItemRenameAvatarRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ItemRenameAvatarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cd_time = 2;
  if (this->cd_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cd_time(), target);
  }

  // int32 retcode = 9;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->retcode(), target);
  }

  // uint32 rename_id = 15;
  if (this->rename_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->rename_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ItemRenameAvatarRsp)
  return target;
}

size_t ItemRenameAvatarRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ItemRenameAvatarRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 rename_id = 15;
  if (this->rename_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rename_id());
  }

  // uint32 cd_time = 2;
  if (this->cd_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cd_time());
  }

  // int32 retcode = 9;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemRenameAvatarRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ItemRenameAvatarRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemRenameAvatarRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemRenameAvatarRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ItemRenameAvatarRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ItemRenameAvatarRsp)
    MergeFrom(*source);
  }
}

void ItemRenameAvatarRsp::MergeFrom(const ItemRenameAvatarRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ItemRenameAvatarRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rename_id() != 0) {
    set_rename_id(from.rename_id());
  }
  if (from.cd_time() != 0) {
    set_cd_time(from.cd_time());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ItemRenameAvatarRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ItemRenameAvatarRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemRenameAvatarRsp::CopyFrom(const ItemRenameAvatarRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ItemRenameAvatarRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemRenameAvatarRsp::IsInitialized() const {
  return true;
}

void ItemRenameAvatarRsp::Swap(ItemRenameAvatarRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemRenameAvatarRsp::InternalSwap(ItemRenameAvatarRsp* other) {
  using std::swap;
  swap(rename_id_, other->rename_id_);
  swap(cd_time_, other->cd_time_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemRenameAvatarRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5favatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5favatar_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemRenameAvatarRsp

// uint32 rename_id = 15;
void ItemRenameAvatarRsp::clear_rename_id() {
  rename_id_ = 0u;
}
::google::protobuf::uint32 ItemRenameAvatarRsp::rename_id() const {
  // @@protoc_insertion_point(field_get:proto.ItemRenameAvatarRsp.rename_id)
  return rename_id_;
}
void ItemRenameAvatarRsp::set_rename_id(::google::protobuf::uint32 value) {
  
  rename_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemRenameAvatarRsp.rename_id)
}

// uint32 cd_time = 2;
void ItemRenameAvatarRsp::clear_cd_time() {
  cd_time_ = 0u;
}
::google::protobuf::uint32 ItemRenameAvatarRsp::cd_time() const {
  // @@protoc_insertion_point(field_get:proto.ItemRenameAvatarRsp.cd_time)
  return cd_time_;
}
void ItemRenameAvatarRsp::set_cd_time(::google::protobuf::uint32 value) {
  
  cd_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemRenameAvatarRsp.cd_time)
}

// int32 retcode = 9;
void ItemRenameAvatarRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ItemRenameAvatarRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ItemRenameAvatarRsp.retcode)
  return retcode_;
}
void ItemRenameAvatarRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemRenameAvatarRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
