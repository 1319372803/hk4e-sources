// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_miracle_ring.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_miracle_ring.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class UseMiracleRingReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UseMiracleRingReq>
     _instance;
} _UseMiracleRingReq_default_instance_;
class UseMiracleRingRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UseMiracleRingRsp>
     _instance;
} _UseMiracleRingRsp_default_instance_;
class MiracleRingDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MiracleRingDataNotify>
     _instance;
} _MiracleRingDataNotify_default_instance_;
class MiracleRingTakeRewardReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MiracleRingTakeRewardReq>
     _instance;
} _MiracleRingTakeRewardReq_default_instance_;
class MiracleRingTakeRewardRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MiracleRingTakeRewardRsp>
     _instance;
} _MiracleRingTakeRewardRsp_default_instance_;
class MiracleRingDropResultNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MiracleRingDropResultNotify>
     _instance;
} _MiracleRingDropResultNotify_default_instance_;
class MiracleRingDeliverItemReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MiracleRingDeliverItemReq>
     _instance;
} _MiracleRingDeliverItemReq_default_instance_;
class MiracleRingDeliverItemRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MiracleRingDeliverItemRsp>
     _instance;
} _MiracleRingDeliverItemRsp_default_instance_;
class MiracleRingDestroyNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MiracleRingDestroyNotify>
     _instance;
} _MiracleRingDestroyNotify_default_instance_;

namespace protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseMiracleRingReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseMiracleRingReq, miracle_ring_op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseMiracleRingReq, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseMiracleRingReq, rot_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseMiracleRingRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseMiracleRingRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseMiracleRingRsp, miracle_ring_op_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingDataNotify, is_gadget_created_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingDataNotify, last_take_reward_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingDataNotify, gadget_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingDataNotify, last_deliver_item_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingDataNotify, miracle_ring_cd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingTakeRewardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingTakeRewardReq, gadget_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingTakeRewardReq, gadget_entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingTakeRewardRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingTakeRewardRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingDropResultNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingDropResultNotify, last_take_reward_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingDropResultNotify, drop_result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingDeliverItemReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingDeliverItemReq, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingDeliverItemReq, item_param_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingDeliverItemReq, food_weapon_guid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingDeliverItemReq, gadget_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingDeliverItemReq, gadget_entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingDeliverItemRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingDeliverItemRsp, interact_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingDeliverItemRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingDeliverItemRsp, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingDeliverItemRsp, gadget_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingDeliverItemRsp, gadget_entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingDestroyNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MiracleRingDestroyNotify, entity_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(UseMiracleRingReq)},
  { 8, -1, sizeof(UseMiracleRingRsp)},
  { 15, -1, sizeof(MiracleRingDataNotify)},
  { 25, -1, sizeof(MiracleRingTakeRewardReq)},
  { 32, -1, sizeof(MiracleRingTakeRewardRsp)},
  { 38, -1, sizeof(MiracleRingDropResultNotify)},
  { 45, -1, sizeof(MiracleRingDeliverItemReq)},
  { 55, -1, sizeof(MiracleRingDeliverItemRsp)},
  { 65, -1, sizeof(MiracleRingDestroyNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_UseMiracleRingReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UseMiracleRingRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MiracleRingDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MiracleRingTakeRewardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MiracleRingTakeRewardRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MiracleRingDropResultNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MiracleRingDeliverItemReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MiracleRingDeliverItemRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MiracleRingDestroyNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_miracle_ring.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  ::proto::protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  _UseMiracleRingReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UseMiracleRingReq_default_instance_);_UseMiracleRingRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UseMiracleRingRsp_default_instance_);_MiracleRingDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MiracleRingDataNotify_default_instance_);_MiracleRingTakeRewardReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MiracleRingTakeRewardReq_default_instance_);_MiracleRingTakeRewardRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MiracleRingTakeRewardRsp_default_instance_);_MiracleRingDropResultNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MiracleRingDropResultNotify_default_instance_);_MiracleRingDeliverItemReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MiracleRingDeliverItemReq_default_instance_);_MiracleRingDeliverItemRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MiracleRingDeliverItemRsp_default_instance_);_MiracleRingDestroyNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MiracleRingDestroyNotify_default_instance_);_UseMiracleRingReq_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _UseMiracleRingReq_default_instance_._instance.get_mutable()->rot_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032cmd/cmd_miracle_ring.proto\022\005proto\032\014def"
      "ine.proto\032\024cmd/cmd_gadget.proto\"\320\001\n\021UseM"
      "iracleRingReq\022\034\n\024miracle_ring_op_type\030\r "
      "\001(\r\022\032\n\003pos\030\010 \001(\0132\r.proto.Vector\022\032\n\003rot\030\007"
      " \001(\0132\r.proto.Vector\"e\n\021MiracleRingOpType"
      "\022\030\n\024MIRACLE_RING_OP_NONE\020\000\022\031\n\025MIRACLE_RI"
      "NG_OP_PLACE\020\001\022\033\n\027MIRACLE_RING_OP_RETRACT"
      "\020\002\"B\n\021UseMiracleRingRsp\022\017\n\007retcode\030\013 \001(\005"
      "\022\034\n\024miracle_ring_op_type\030\007 \001(\r\"\244\001\n\025Mirac"
      "leRingDataNotify\022\031\n\021is_gadget_created\030\010 "
      "\001(\010\022\035\n\025last_take_reward_time\030\016 \001(\r\022\030\n\020ga"
      "dget_entity_id\030\014 \001(\r\022\036\n\026last_deliver_ite"
      "m_time\030\n \001(\r\022\027\n\017miracle_ring_cd\030\007 \001(\r\"G\n"
      "\030MiracleRingTakeRewardReq\022\021\n\tgadget_id\030\013"
      " \001(\r\022\030\n\020gadget_entity_id\030\007 \001(\r\"+\n\030Miracl"
      "eRingTakeRewardRsp\022\017\n\007retcode\030\016 \001(\005\"Q\n\033M"
      "iracleRingDropResultNotify\022\035\n\025last_take_"
      "reward_time\030\005 \001(\005\022\023\n\013drop_result\030\t \001(\005\"\267"
      "\001\n\031MiracleRingDeliverItemReq\022#\n\007op_type\030"
      "\t \001(\0162\022.proto.InterOpType\022)\n\017item_param_"
      "list\030\001 \003(\0132\020.proto.ItemParam\022\035\n\025food_wea"
      "pon_guid_list\030\004 \003(\004\022\021\n\tgadget_id\030\016 \001(\r\022\030"
      "\n\020gadget_entity_id\030\005 \001(\r\"\252\001\n\031MiracleRing"
      "DeliverItemRsp\022*\n\rinteract_type\030\017 \001(\0162\023."
      "proto.InteractType\022\017\n\007retcode\030\013 \001(\005\022#\n\007o"
      "p_type\030\016 \001(\0162\022.proto.InterOpType\022\021\n\tgadg"
      "et_id\030\004 \001(\r\022\030\n\020gadget_entity_id\030\t \001(\r\"-\n"
      "\030MiracleRingDestroyNotify\022\021\n\tentity_id\030\007"
      " \001(\rB(Z&github.com/teyvat-helper/hk4e-pr"
      "oto/pbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1174);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_miracle_ring.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
  ::proto::protobuf_cmd_2fcmd_5fgadget_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto

const ::google::protobuf::EnumDescriptor* UseMiracleRingReq_MiracleRingOpType_descriptor() {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::file_level_enum_descriptors[0];
}
bool UseMiracleRingReq_MiracleRingOpType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UseMiracleRingReq_MiracleRingOpType UseMiracleRingReq::MIRACLE_RING_OP_NONE;
const UseMiracleRingReq_MiracleRingOpType UseMiracleRingReq::MIRACLE_RING_OP_PLACE;
const UseMiracleRingReq_MiracleRingOpType UseMiracleRingReq::MIRACLE_RING_OP_RETRACT;
const UseMiracleRingReq_MiracleRingOpType UseMiracleRingReq::MiracleRingOpType_MIN;
const UseMiracleRingReq_MiracleRingOpType UseMiracleRingReq::MiracleRingOpType_MAX;
const int UseMiracleRingReq::MiracleRingOpType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UseMiracleRingReq::kMiracleRingOpTypeFieldNumber;
const int UseMiracleRingReq::kPosFieldNumber;
const int UseMiracleRingReq::kRotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UseMiracleRingReq::UseMiracleRingReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UseMiracleRingReq)
}
UseMiracleRingReq::UseMiracleRingReq(const UseMiracleRingReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rot()) {
    rot_ = new ::proto::Vector(*from.rot_);
  } else {
    rot_ = NULL;
  }
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  miracle_ring_op_type_ = from.miracle_ring_op_type_;
  // @@protoc_insertion_point(copy_constructor:proto.UseMiracleRingReq)
}

void UseMiracleRingReq::SharedCtor() {
  ::memset(&rot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&miracle_ring_op_type_) -
      reinterpret_cast<char*>(&rot_)) + sizeof(miracle_ring_op_type_));
  _cached_size_ = 0;
}

UseMiracleRingReq::~UseMiracleRingReq() {
  // @@protoc_insertion_point(destructor:proto.UseMiracleRingReq)
  SharedDtor();
}

void UseMiracleRingReq::SharedDtor() {
  if (this != internal_default_instance()) delete rot_;
  if (this != internal_default_instance()) delete pos_;
}

void UseMiracleRingReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseMiracleRingReq::descriptor() {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UseMiracleRingReq& UseMiracleRingReq::default_instance() {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::InitDefaults();
  return *internal_default_instance();
}

UseMiracleRingReq* UseMiracleRingReq::New(::google::protobuf::Arena* arena) const {
  UseMiracleRingReq* n = new UseMiracleRingReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UseMiracleRingReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UseMiracleRingReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && rot_ != NULL) {
    delete rot_;
  }
  rot_ = NULL;
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  miracle_ring_op_type_ = 0u;
  _internal_metadata_.Clear();
}

bool UseMiracleRingReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UseMiracleRingReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.Vector rot = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector pos = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 miracle_ring_op_type = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &miracle_ring_op_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UseMiracleRingReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UseMiracleRingReq)
  return false;
#undef DO_
}

void UseMiracleRingReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UseMiracleRingReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Vector rot = 7;
  if (this->has_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->rot_, output);
  }

  // .proto.Vector pos = 8;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->pos_, output);
  }

  // uint32 miracle_ring_op_type = 13;
  if (this->miracle_ring_op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->miracle_ring_op_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UseMiracleRingReq)
}

::google::protobuf::uint8* UseMiracleRingReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UseMiracleRingReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Vector rot = 7;
  if (this->has_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->rot_, deterministic, target);
  }

  // .proto.Vector pos = 8;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->pos_, deterministic, target);
  }

  // uint32 miracle_ring_op_type = 13;
  if (this->miracle_ring_op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->miracle_ring_op_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UseMiracleRingReq)
  return target;
}

size_t UseMiracleRingReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UseMiracleRingReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector rot = 7;
  if (this->has_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rot_);
  }

  // .proto.Vector pos = 8;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // uint32 miracle_ring_op_type = 13;
  if (this->miracle_ring_op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->miracle_ring_op_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseMiracleRingReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UseMiracleRingReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UseMiracleRingReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UseMiracleRingReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UseMiracleRingReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UseMiracleRingReq)
    MergeFrom(*source);
  }
}

void UseMiracleRingReq::MergeFrom(const UseMiracleRingReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UseMiracleRingReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rot()) {
    mutable_rot()->::proto::Vector::MergeFrom(from.rot());
  }
  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
  if (from.miracle_ring_op_type() != 0) {
    set_miracle_ring_op_type(from.miracle_ring_op_type());
  }
}

void UseMiracleRingReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UseMiracleRingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseMiracleRingReq::CopyFrom(const UseMiracleRingReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UseMiracleRingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseMiracleRingReq::IsInitialized() const {
  return true;
}

void UseMiracleRingReq::Swap(UseMiracleRingReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UseMiracleRingReq::InternalSwap(UseMiracleRingReq* other) {
  using std::swap;
  swap(rot_, other->rot_);
  swap(pos_, other->pos_);
  swap(miracle_ring_op_type_, other->miracle_ring_op_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UseMiracleRingReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UseMiracleRingReq

// uint32 miracle_ring_op_type = 13;
void UseMiracleRingReq::clear_miracle_ring_op_type() {
  miracle_ring_op_type_ = 0u;
}
::google::protobuf::uint32 UseMiracleRingReq::miracle_ring_op_type() const {
  // @@protoc_insertion_point(field_get:proto.UseMiracleRingReq.miracle_ring_op_type)
  return miracle_ring_op_type_;
}
void UseMiracleRingReq::set_miracle_ring_op_type(::google::protobuf::uint32 value) {
  
  miracle_ring_op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.UseMiracleRingReq.miracle_ring_op_type)
}

// .proto.Vector pos = 8;
bool UseMiracleRingReq::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void UseMiracleRingReq::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& UseMiracleRingReq::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.UseMiracleRingReq.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* UseMiracleRingReq::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.UseMiracleRingReq.pos)
  return pos_;
}
::proto::Vector* UseMiracleRingReq::release_pos() {
  // @@protoc_insertion_point(field_release:proto.UseMiracleRingReq.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void UseMiracleRingReq::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.UseMiracleRingReq.pos)
}

// .proto.Vector rot = 7;
bool UseMiracleRingReq::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
void UseMiracleRingReq::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
const ::proto::Vector& UseMiracleRingReq::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.UseMiracleRingReq.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* UseMiracleRingReq::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.UseMiracleRingReq.rot)
  return rot_;
}
::proto::Vector* UseMiracleRingReq::release_rot() {
  // @@protoc_insertion_point(field_release:proto.UseMiracleRingReq.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
void UseMiracleRingReq::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.UseMiracleRingReq.rot)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UseMiracleRingRsp::kRetcodeFieldNumber;
const int UseMiracleRingRsp::kMiracleRingOpTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UseMiracleRingRsp::UseMiracleRingRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UseMiracleRingRsp)
}
UseMiracleRingRsp::UseMiracleRingRsp(const UseMiracleRingRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&miracle_ring_op_type_, &from.miracle_ring_op_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&miracle_ring_op_type_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.UseMiracleRingRsp)
}

void UseMiracleRingRsp::SharedCtor() {
  ::memset(&miracle_ring_op_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&miracle_ring_op_type_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

UseMiracleRingRsp::~UseMiracleRingRsp() {
  // @@protoc_insertion_point(destructor:proto.UseMiracleRingRsp)
  SharedDtor();
}

void UseMiracleRingRsp::SharedDtor() {
}

void UseMiracleRingRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseMiracleRingRsp::descriptor() {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UseMiracleRingRsp& UseMiracleRingRsp::default_instance() {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::InitDefaults();
  return *internal_default_instance();
}

UseMiracleRingRsp* UseMiracleRingRsp::New(::google::protobuf::Arena* arena) const {
  UseMiracleRingRsp* n = new UseMiracleRingRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UseMiracleRingRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UseMiracleRingRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&miracle_ring_op_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&miracle_ring_op_type_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool UseMiracleRingRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UseMiracleRingRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 miracle_ring_op_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &miracle_ring_op_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UseMiracleRingRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UseMiracleRingRsp)
  return false;
#undef DO_
}

void UseMiracleRingRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UseMiracleRingRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 miracle_ring_op_type = 7;
  if (this->miracle_ring_op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->miracle_ring_op_type(), output);
  }

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UseMiracleRingRsp)
}

::google::protobuf::uint8* UseMiracleRingRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UseMiracleRingRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 miracle_ring_op_type = 7;
  if (this->miracle_ring_op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->miracle_ring_op_type(), target);
  }

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UseMiracleRingRsp)
  return target;
}

size_t UseMiracleRingRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UseMiracleRingRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 miracle_ring_op_type = 7;
  if (this->miracle_ring_op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->miracle_ring_op_type());
  }

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseMiracleRingRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UseMiracleRingRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const UseMiracleRingRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UseMiracleRingRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UseMiracleRingRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UseMiracleRingRsp)
    MergeFrom(*source);
  }
}

void UseMiracleRingRsp::MergeFrom(const UseMiracleRingRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UseMiracleRingRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.miracle_ring_op_type() != 0) {
    set_miracle_ring_op_type(from.miracle_ring_op_type());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void UseMiracleRingRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UseMiracleRingRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseMiracleRingRsp::CopyFrom(const UseMiracleRingRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UseMiracleRingRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseMiracleRingRsp::IsInitialized() const {
  return true;
}

void UseMiracleRingRsp::Swap(UseMiracleRingRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UseMiracleRingRsp::InternalSwap(UseMiracleRingRsp* other) {
  using std::swap;
  swap(miracle_ring_op_type_, other->miracle_ring_op_type_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UseMiracleRingRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UseMiracleRingRsp

// int32 retcode = 11;
void UseMiracleRingRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 UseMiracleRingRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.UseMiracleRingRsp.retcode)
  return retcode_;
}
void UseMiracleRingRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.UseMiracleRingRsp.retcode)
}

// uint32 miracle_ring_op_type = 7;
void UseMiracleRingRsp::clear_miracle_ring_op_type() {
  miracle_ring_op_type_ = 0u;
}
::google::protobuf::uint32 UseMiracleRingRsp::miracle_ring_op_type() const {
  // @@protoc_insertion_point(field_get:proto.UseMiracleRingRsp.miracle_ring_op_type)
  return miracle_ring_op_type_;
}
void UseMiracleRingRsp::set_miracle_ring_op_type(::google::protobuf::uint32 value) {
  
  miracle_ring_op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.UseMiracleRingRsp.miracle_ring_op_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MiracleRingDataNotify::kIsGadgetCreatedFieldNumber;
const int MiracleRingDataNotify::kLastTakeRewardTimeFieldNumber;
const int MiracleRingDataNotify::kGadgetEntityIdFieldNumber;
const int MiracleRingDataNotify::kLastDeliverItemTimeFieldNumber;
const int MiracleRingDataNotify::kMiracleRingCdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MiracleRingDataNotify::MiracleRingDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MiracleRingDataNotify)
}
MiracleRingDataNotify::MiracleRingDataNotify(const MiracleRingDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&last_take_reward_time_, &from.last_take_reward_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&gadget_entity_id_) -
    reinterpret_cast<char*>(&last_take_reward_time_)) + sizeof(gadget_entity_id_));
  // @@protoc_insertion_point(copy_constructor:proto.MiracleRingDataNotify)
}

void MiracleRingDataNotify::SharedCtor() {
  ::memset(&last_take_reward_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gadget_entity_id_) -
      reinterpret_cast<char*>(&last_take_reward_time_)) + sizeof(gadget_entity_id_));
  _cached_size_ = 0;
}

MiracleRingDataNotify::~MiracleRingDataNotify() {
  // @@protoc_insertion_point(destructor:proto.MiracleRingDataNotify)
  SharedDtor();
}

void MiracleRingDataNotify::SharedDtor() {
}

void MiracleRingDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MiracleRingDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MiracleRingDataNotify& MiracleRingDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::InitDefaults();
  return *internal_default_instance();
}

MiracleRingDataNotify* MiracleRingDataNotify::New(::google::protobuf::Arena* arena) const {
  MiracleRingDataNotify* n = new MiracleRingDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MiracleRingDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MiracleRingDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&last_take_reward_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gadget_entity_id_) -
      reinterpret_cast<char*>(&last_take_reward_time_)) + sizeof(gadget_entity_id_));
  _internal_metadata_.Clear();
}

bool MiracleRingDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MiracleRingDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 miracle_ring_cd = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &miracle_ring_cd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_gadget_created = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_gadget_created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 last_deliver_item_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_deliver_item_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_entity_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 last_take_reward_time = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_take_reward_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MiracleRingDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MiracleRingDataNotify)
  return false;
#undef DO_
}

void MiracleRingDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MiracleRingDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 miracle_ring_cd = 7;
  if (this->miracle_ring_cd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->miracle_ring_cd(), output);
  }

  // bool is_gadget_created = 8;
  if (this->is_gadget_created() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_gadget_created(), output);
  }

  // uint32 last_deliver_item_time = 10;
  if (this->last_deliver_item_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->last_deliver_item_time(), output);
  }

  // uint32 gadget_entity_id = 12;
  if (this->gadget_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->gadget_entity_id(), output);
  }

  // uint32 last_take_reward_time = 14;
  if (this->last_take_reward_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->last_take_reward_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MiracleRingDataNotify)
}

::google::protobuf::uint8* MiracleRingDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MiracleRingDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 miracle_ring_cd = 7;
  if (this->miracle_ring_cd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->miracle_ring_cd(), target);
  }

  // bool is_gadget_created = 8;
  if (this->is_gadget_created() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_gadget_created(), target);
  }

  // uint32 last_deliver_item_time = 10;
  if (this->last_deliver_item_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->last_deliver_item_time(), target);
  }

  // uint32 gadget_entity_id = 12;
  if (this->gadget_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->gadget_entity_id(), target);
  }

  // uint32 last_take_reward_time = 14;
  if (this->last_take_reward_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->last_take_reward_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MiracleRingDataNotify)
  return target;
}

size_t MiracleRingDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MiracleRingDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 last_take_reward_time = 14;
  if (this->last_take_reward_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_take_reward_time());
  }

  // uint32 miracle_ring_cd = 7;
  if (this->miracle_ring_cd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->miracle_ring_cd());
  }

  // bool is_gadget_created = 8;
  if (this->is_gadget_created() != 0) {
    total_size += 1 + 1;
  }

  // uint32 last_deliver_item_time = 10;
  if (this->last_deliver_item_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_deliver_item_time());
  }

  // uint32 gadget_entity_id = 12;
  if (this->gadget_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MiracleRingDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MiracleRingDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MiracleRingDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MiracleRingDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MiracleRingDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MiracleRingDataNotify)
    MergeFrom(*source);
  }
}

void MiracleRingDataNotify::MergeFrom(const MiracleRingDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MiracleRingDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.last_take_reward_time() != 0) {
    set_last_take_reward_time(from.last_take_reward_time());
  }
  if (from.miracle_ring_cd() != 0) {
    set_miracle_ring_cd(from.miracle_ring_cd());
  }
  if (from.is_gadget_created() != 0) {
    set_is_gadget_created(from.is_gadget_created());
  }
  if (from.last_deliver_item_time() != 0) {
    set_last_deliver_item_time(from.last_deliver_item_time());
  }
  if (from.gadget_entity_id() != 0) {
    set_gadget_entity_id(from.gadget_entity_id());
  }
}

void MiracleRingDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MiracleRingDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MiracleRingDataNotify::CopyFrom(const MiracleRingDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MiracleRingDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MiracleRingDataNotify::IsInitialized() const {
  return true;
}

void MiracleRingDataNotify::Swap(MiracleRingDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MiracleRingDataNotify::InternalSwap(MiracleRingDataNotify* other) {
  using std::swap;
  swap(last_take_reward_time_, other->last_take_reward_time_);
  swap(miracle_ring_cd_, other->miracle_ring_cd_);
  swap(is_gadget_created_, other->is_gadget_created_);
  swap(last_deliver_item_time_, other->last_deliver_item_time_);
  swap(gadget_entity_id_, other->gadget_entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MiracleRingDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MiracleRingDataNotify

// bool is_gadget_created = 8;
void MiracleRingDataNotify::clear_is_gadget_created() {
  is_gadget_created_ = false;
}
bool MiracleRingDataNotify::is_gadget_created() const {
  // @@protoc_insertion_point(field_get:proto.MiracleRingDataNotify.is_gadget_created)
  return is_gadget_created_;
}
void MiracleRingDataNotify::set_is_gadget_created(bool value) {
  
  is_gadget_created_ = value;
  // @@protoc_insertion_point(field_set:proto.MiracleRingDataNotify.is_gadget_created)
}

// uint32 last_take_reward_time = 14;
void MiracleRingDataNotify::clear_last_take_reward_time() {
  last_take_reward_time_ = 0u;
}
::google::protobuf::uint32 MiracleRingDataNotify::last_take_reward_time() const {
  // @@protoc_insertion_point(field_get:proto.MiracleRingDataNotify.last_take_reward_time)
  return last_take_reward_time_;
}
void MiracleRingDataNotify::set_last_take_reward_time(::google::protobuf::uint32 value) {
  
  last_take_reward_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MiracleRingDataNotify.last_take_reward_time)
}

// uint32 gadget_entity_id = 12;
void MiracleRingDataNotify::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
::google::protobuf::uint32 MiracleRingDataNotify::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.MiracleRingDataNotify.gadget_entity_id)
  return gadget_entity_id_;
}
void MiracleRingDataNotify::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MiracleRingDataNotify.gadget_entity_id)
}

// uint32 last_deliver_item_time = 10;
void MiracleRingDataNotify::clear_last_deliver_item_time() {
  last_deliver_item_time_ = 0u;
}
::google::protobuf::uint32 MiracleRingDataNotify::last_deliver_item_time() const {
  // @@protoc_insertion_point(field_get:proto.MiracleRingDataNotify.last_deliver_item_time)
  return last_deliver_item_time_;
}
void MiracleRingDataNotify::set_last_deliver_item_time(::google::protobuf::uint32 value) {
  
  last_deliver_item_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MiracleRingDataNotify.last_deliver_item_time)
}

// uint32 miracle_ring_cd = 7;
void MiracleRingDataNotify::clear_miracle_ring_cd() {
  miracle_ring_cd_ = 0u;
}
::google::protobuf::uint32 MiracleRingDataNotify::miracle_ring_cd() const {
  // @@protoc_insertion_point(field_get:proto.MiracleRingDataNotify.miracle_ring_cd)
  return miracle_ring_cd_;
}
void MiracleRingDataNotify::set_miracle_ring_cd(::google::protobuf::uint32 value) {
  
  miracle_ring_cd_ = value;
  // @@protoc_insertion_point(field_set:proto.MiracleRingDataNotify.miracle_ring_cd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MiracleRingTakeRewardReq::kGadgetIdFieldNumber;
const int MiracleRingTakeRewardReq::kGadgetEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MiracleRingTakeRewardReq::MiracleRingTakeRewardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MiracleRingTakeRewardReq)
}
MiracleRingTakeRewardReq::MiracleRingTakeRewardReq(const MiracleRingTakeRewardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gadget_entity_id_, &from.gadget_entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&gadget_id_) -
    reinterpret_cast<char*>(&gadget_entity_id_)) + sizeof(gadget_id_));
  // @@protoc_insertion_point(copy_constructor:proto.MiracleRingTakeRewardReq)
}

void MiracleRingTakeRewardReq::SharedCtor() {
  ::memset(&gadget_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gadget_id_) -
      reinterpret_cast<char*>(&gadget_entity_id_)) + sizeof(gadget_id_));
  _cached_size_ = 0;
}

MiracleRingTakeRewardReq::~MiracleRingTakeRewardReq() {
  // @@protoc_insertion_point(destructor:proto.MiracleRingTakeRewardReq)
  SharedDtor();
}

void MiracleRingTakeRewardReq::SharedDtor() {
}

void MiracleRingTakeRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MiracleRingTakeRewardReq::descriptor() {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MiracleRingTakeRewardReq& MiracleRingTakeRewardReq::default_instance() {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::InitDefaults();
  return *internal_default_instance();
}

MiracleRingTakeRewardReq* MiracleRingTakeRewardReq::New(::google::protobuf::Arena* arena) const {
  MiracleRingTakeRewardReq* n = new MiracleRingTakeRewardReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MiracleRingTakeRewardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MiracleRingTakeRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gadget_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gadget_id_) -
      reinterpret_cast<char*>(&gadget_entity_id_)) + sizeof(gadget_id_));
  _internal_metadata_.Clear();
}

bool MiracleRingTakeRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MiracleRingTakeRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 gadget_entity_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MiracleRingTakeRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MiracleRingTakeRewardReq)
  return false;
#undef DO_
}

void MiracleRingTakeRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MiracleRingTakeRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gadget_entity_id = 7;
  if (this->gadget_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->gadget_entity_id(), output);
  }

  // uint32 gadget_id = 11;
  if (this->gadget_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->gadget_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MiracleRingTakeRewardReq)
}

::google::protobuf::uint8* MiracleRingTakeRewardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MiracleRingTakeRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gadget_entity_id = 7;
  if (this->gadget_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->gadget_entity_id(), target);
  }

  // uint32 gadget_id = 11;
  if (this->gadget_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->gadget_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MiracleRingTakeRewardReq)
  return target;
}

size_t MiracleRingTakeRewardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MiracleRingTakeRewardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 gadget_entity_id = 7;
  if (this->gadget_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_entity_id());
  }

  // uint32 gadget_id = 11;
  if (this->gadget_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MiracleRingTakeRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MiracleRingTakeRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MiracleRingTakeRewardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MiracleRingTakeRewardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MiracleRingTakeRewardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MiracleRingTakeRewardReq)
    MergeFrom(*source);
  }
}

void MiracleRingTakeRewardReq::MergeFrom(const MiracleRingTakeRewardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MiracleRingTakeRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gadget_entity_id() != 0) {
    set_gadget_entity_id(from.gadget_entity_id());
  }
  if (from.gadget_id() != 0) {
    set_gadget_id(from.gadget_id());
  }
}

void MiracleRingTakeRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MiracleRingTakeRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MiracleRingTakeRewardReq::CopyFrom(const MiracleRingTakeRewardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MiracleRingTakeRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MiracleRingTakeRewardReq::IsInitialized() const {
  return true;
}

void MiracleRingTakeRewardReq::Swap(MiracleRingTakeRewardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MiracleRingTakeRewardReq::InternalSwap(MiracleRingTakeRewardReq* other) {
  using std::swap;
  swap(gadget_entity_id_, other->gadget_entity_id_);
  swap(gadget_id_, other->gadget_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MiracleRingTakeRewardReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MiracleRingTakeRewardReq

// uint32 gadget_id = 11;
void MiracleRingTakeRewardReq::clear_gadget_id() {
  gadget_id_ = 0u;
}
::google::protobuf::uint32 MiracleRingTakeRewardReq::gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.MiracleRingTakeRewardReq.gadget_id)
  return gadget_id_;
}
void MiracleRingTakeRewardReq::set_gadget_id(::google::protobuf::uint32 value) {
  
  gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MiracleRingTakeRewardReq.gadget_id)
}

// uint32 gadget_entity_id = 7;
void MiracleRingTakeRewardReq::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
::google::protobuf::uint32 MiracleRingTakeRewardReq::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.MiracleRingTakeRewardReq.gadget_entity_id)
  return gadget_entity_id_;
}
void MiracleRingTakeRewardReq::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MiracleRingTakeRewardReq.gadget_entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MiracleRingTakeRewardRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MiracleRingTakeRewardRsp::MiracleRingTakeRewardRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MiracleRingTakeRewardRsp)
}
MiracleRingTakeRewardRsp::MiracleRingTakeRewardRsp(const MiracleRingTakeRewardRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.MiracleRingTakeRewardRsp)
}

void MiracleRingTakeRewardRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

MiracleRingTakeRewardRsp::~MiracleRingTakeRewardRsp() {
  // @@protoc_insertion_point(destructor:proto.MiracleRingTakeRewardRsp)
  SharedDtor();
}

void MiracleRingTakeRewardRsp::SharedDtor() {
}

void MiracleRingTakeRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MiracleRingTakeRewardRsp::descriptor() {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MiracleRingTakeRewardRsp& MiracleRingTakeRewardRsp::default_instance() {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::InitDefaults();
  return *internal_default_instance();
}

MiracleRingTakeRewardRsp* MiracleRingTakeRewardRsp::New(::google::protobuf::Arena* arena) const {
  MiracleRingTakeRewardRsp* n = new MiracleRingTakeRewardRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MiracleRingTakeRewardRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MiracleRingTakeRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool MiracleRingTakeRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MiracleRingTakeRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MiracleRingTakeRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MiracleRingTakeRewardRsp)
  return false;
#undef DO_
}

void MiracleRingTakeRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MiracleRingTakeRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MiracleRingTakeRewardRsp)
}

::google::protobuf::uint8* MiracleRingTakeRewardRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MiracleRingTakeRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MiracleRingTakeRewardRsp)
  return target;
}

size_t MiracleRingTakeRewardRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MiracleRingTakeRewardRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 14;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MiracleRingTakeRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MiracleRingTakeRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MiracleRingTakeRewardRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MiracleRingTakeRewardRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MiracleRingTakeRewardRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MiracleRingTakeRewardRsp)
    MergeFrom(*source);
  }
}

void MiracleRingTakeRewardRsp::MergeFrom(const MiracleRingTakeRewardRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MiracleRingTakeRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void MiracleRingTakeRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MiracleRingTakeRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MiracleRingTakeRewardRsp::CopyFrom(const MiracleRingTakeRewardRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MiracleRingTakeRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MiracleRingTakeRewardRsp::IsInitialized() const {
  return true;
}

void MiracleRingTakeRewardRsp::Swap(MiracleRingTakeRewardRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MiracleRingTakeRewardRsp::InternalSwap(MiracleRingTakeRewardRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MiracleRingTakeRewardRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MiracleRingTakeRewardRsp

// int32 retcode = 14;
void MiracleRingTakeRewardRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 MiracleRingTakeRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.MiracleRingTakeRewardRsp.retcode)
  return retcode_;
}
void MiracleRingTakeRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.MiracleRingTakeRewardRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MiracleRingDropResultNotify::kLastTakeRewardTimeFieldNumber;
const int MiracleRingDropResultNotify::kDropResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MiracleRingDropResultNotify::MiracleRingDropResultNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MiracleRingDropResultNotify)
}
MiracleRingDropResultNotify::MiracleRingDropResultNotify(const MiracleRingDropResultNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&last_take_reward_time_, &from.last_take_reward_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&drop_result_) -
    reinterpret_cast<char*>(&last_take_reward_time_)) + sizeof(drop_result_));
  // @@protoc_insertion_point(copy_constructor:proto.MiracleRingDropResultNotify)
}

void MiracleRingDropResultNotify::SharedCtor() {
  ::memset(&last_take_reward_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&drop_result_) -
      reinterpret_cast<char*>(&last_take_reward_time_)) + sizeof(drop_result_));
  _cached_size_ = 0;
}

MiracleRingDropResultNotify::~MiracleRingDropResultNotify() {
  // @@protoc_insertion_point(destructor:proto.MiracleRingDropResultNotify)
  SharedDtor();
}

void MiracleRingDropResultNotify::SharedDtor() {
}

void MiracleRingDropResultNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MiracleRingDropResultNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MiracleRingDropResultNotify& MiracleRingDropResultNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::InitDefaults();
  return *internal_default_instance();
}

MiracleRingDropResultNotify* MiracleRingDropResultNotify::New(::google::protobuf::Arena* arena) const {
  MiracleRingDropResultNotify* n = new MiracleRingDropResultNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MiracleRingDropResultNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MiracleRingDropResultNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&last_take_reward_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&drop_result_) -
      reinterpret_cast<char*>(&last_take_reward_time_)) + sizeof(drop_result_));
  _internal_metadata_.Clear();
}

bool MiracleRingDropResultNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MiracleRingDropResultNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 last_take_reward_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_take_reward_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 drop_result = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &drop_result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MiracleRingDropResultNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MiracleRingDropResultNotify)
  return false;
#undef DO_
}

void MiracleRingDropResultNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MiracleRingDropResultNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 last_take_reward_time = 5;
  if (this->last_take_reward_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->last_take_reward_time(), output);
  }

  // int32 drop_result = 9;
  if (this->drop_result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->drop_result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MiracleRingDropResultNotify)
}

::google::protobuf::uint8* MiracleRingDropResultNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MiracleRingDropResultNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 last_take_reward_time = 5;
  if (this->last_take_reward_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->last_take_reward_time(), target);
  }

  // int32 drop_result = 9;
  if (this->drop_result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->drop_result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MiracleRingDropResultNotify)
  return target;
}

size_t MiracleRingDropResultNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MiracleRingDropResultNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 last_take_reward_time = 5;
  if (this->last_take_reward_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->last_take_reward_time());
  }

  // int32 drop_result = 9;
  if (this->drop_result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->drop_result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MiracleRingDropResultNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MiracleRingDropResultNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MiracleRingDropResultNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MiracleRingDropResultNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MiracleRingDropResultNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MiracleRingDropResultNotify)
    MergeFrom(*source);
  }
}

void MiracleRingDropResultNotify::MergeFrom(const MiracleRingDropResultNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MiracleRingDropResultNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.last_take_reward_time() != 0) {
    set_last_take_reward_time(from.last_take_reward_time());
  }
  if (from.drop_result() != 0) {
    set_drop_result(from.drop_result());
  }
}

void MiracleRingDropResultNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MiracleRingDropResultNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MiracleRingDropResultNotify::CopyFrom(const MiracleRingDropResultNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MiracleRingDropResultNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MiracleRingDropResultNotify::IsInitialized() const {
  return true;
}

void MiracleRingDropResultNotify::Swap(MiracleRingDropResultNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MiracleRingDropResultNotify::InternalSwap(MiracleRingDropResultNotify* other) {
  using std::swap;
  swap(last_take_reward_time_, other->last_take_reward_time_);
  swap(drop_result_, other->drop_result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MiracleRingDropResultNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MiracleRingDropResultNotify

// int32 last_take_reward_time = 5;
void MiracleRingDropResultNotify::clear_last_take_reward_time() {
  last_take_reward_time_ = 0;
}
::google::protobuf::int32 MiracleRingDropResultNotify::last_take_reward_time() const {
  // @@protoc_insertion_point(field_get:proto.MiracleRingDropResultNotify.last_take_reward_time)
  return last_take_reward_time_;
}
void MiracleRingDropResultNotify::set_last_take_reward_time(::google::protobuf::int32 value) {
  
  last_take_reward_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MiracleRingDropResultNotify.last_take_reward_time)
}

// int32 drop_result = 9;
void MiracleRingDropResultNotify::clear_drop_result() {
  drop_result_ = 0;
}
::google::protobuf::int32 MiracleRingDropResultNotify::drop_result() const {
  // @@protoc_insertion_point(field_get:proto.MiracleRingDropResultNotify.drop_result)
  return drop_result_;
}
void MiracleRingDropResultNotify::set_drop_result(::google::protobuf::int32 value) {
  
  drop_result_ = value;
  // @@protoc_insertion_point(field_set:proto.MiracleRingDropResultNotify.drop_result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MiracleRingDeliverItemReq::kOpTypeFieldNumber;
const int MiracleRingDeliverItemReq::kItemParamListFieldNumber;
const int MiracleRingDeliverItemReq::kFoodWeaponGuidListFieldNumber;
const int MiracleRingDeliverItemReq::kGadgetIdFieldNumber;
const int MiracleRingDeliverItemReq::kGadgetEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MiracleRingDeliverItemReq::MiracleRingDeliverItemReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MiracleRingDeliverItemReq)
}
MiracleRingDeliverItemReq::MiracleRingDeliverItemReq(const MiracleRingDeliverItemReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_param_list_(from.item_param_list_),
      food_weapon_guid_list_(from.food_weapon_guid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gadget_id_, &from.gadget_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&op_type_) -
    reinterpret_cast<char*>(&gadget_id_)) + sizeof(op_type_));
  // @@protoc_insertion_point(copy_constructor:proto.MiracleRingDeliverItemReq)
}

void MiracleRingDeliverItemReq::SharedCtor() {
  ::memset(&gadget_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_type_) -
      reinterpret_cast<char*>(&gadget_id_)) + sizeof(op_type_));
  _cached_size_ = 0;
}

MiracleRingDeliverItemReq::~MiracleRingDeliverItemReq() {
  // @@protoc_insertion_point(destructor:proto.MiracleRingDeliverItemReq)
  SharedDtor();
}

void MiracleRingDeliverItemReq::SharedDtor() {
}

void MiracleRingDeliverItemReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MiracleRingDeliverItemReq::descriptor() {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MiracleRingDeliverItemReq& MiracleRingDeliverItemReq::default_instance() {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::InitDefaults();
  return *internal_default_instance();
}

MiracleRingDeliverItemReq* MiracleRingDeliverItemReq::New(::google::protobuf::Arena* arena) const {
  MiracleRingDeliverItemReq* n = new MiracleRingDeliverItemReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MiracleRingDeliverItemReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MiracleRingDeliverItemReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_param_list_.Clear();
  food_weapon_guid_list_.Clear();
  ::memset(&gadget_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_type_) -
      reinterpret_cast<char*>(&gadget_id_)) + sizeof(op_type_));
  _internal_metadata_.Clear();
}

bool MiracleRingDeliverItemReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MiracleRingDeliverItemReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.ItemParam item_param_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_param_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 food_weapon_guid_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_food_weapon_guid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 34u, input, this->mutable_food_weapon_guid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_entity_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.InterOpType op_type = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::proto::InterOpType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MiracleRingDeliverItemReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MiracleRingDeliverItemReq)
  return false;
#undef DO_
}

void MiracleRingDeliverItemReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MiracleRingDeliverItemReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ItemParam item_param_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_param_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_param_list(static_cast<int>(i)), output);
  }

  // repeated uint64 food_weapon_guid_list = 4;
  if (this->food_weapon_guid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _food_weapon_guid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->food_weapon_guid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->food_weapon_guid_list(i), output);
  }

  // uint32 gadget_entity_id = 5;
  if (this->gadget_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->gadget_entity_id(), output);
  }

  // .proto.InterOpType op_type = 9;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->op_type(), output);
  }

  // uint32 gadget_id = 14;
  if (this->gadget_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->gadget_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MiracleRingDeliverItemReq)
}

::google::protobuf::uint8* MiracleRingDeliverItemReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MiracleRingDeliverItemReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ItemParam item_param_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_param_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->item_param_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint64 food_weapon_guid_list = 4;
  if (this->food_weapon_guid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _food_weapon_guid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->food_weapon_guid_list_, target);
  }

  // uint32 gadget_entity_id = 5;
  if (this->gadget_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->gadget_entity_id(), target);
  }

  // .proto.InterOpType op_type = 9;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->op_type(), target);
  }

  // uint32 gadget_id = 14;
  if (this->gadget_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->gadget_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MiracleRingDeliverItemReq)
  return target;
}

size_t MiracleRingDeliverItemReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MiracleRingDeliverItemReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ItemParam item_param_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->item_param_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item_param_list(static_cast<int>(i)));
    }
  }

  // repeated uint64 food_weapon_guid_list = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->food_weapon_guid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _food_weapon_guid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 gadget_id = 14;
  if (this->gadget_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_id());
  }

  // uint32 gadget_entity_id = 5;
  if (this->gadget_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_entity_id());
  }

  // .proto.InterOpType op_type = 9;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MiracleRingDeliverItemReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MiracleRingDeliverItemReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MiracleRingDeliverItemReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MiracleRingDeliverItemReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MiracleRingDeliverItemReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MiracleRingDeliverItemReq)
    MergeFrom(*source);
  }
}

void MiracleRingDeliverItemReq::MergeFrom(const MiracleRingDeliverItemReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MiracleRingDeliverItemReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_param_list_.MergeFrom(from.item_param_list_);
  food_weapon_guid_list_.MergeFrom(from.food_weapon_guid_list_);
  if (from.gadget_id() != 0) {
    set_gadget_id(from.gadget_id());
  }
  if (from.gadget_entity_id() != 0) {
    set_gadget_entity_id(from.gadget_entity_id());
  }
  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
}

void MiracleRingDeliverItemReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MiracleRingDeliverItemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MiracleRingDeliverItemReq::CopyFrom(const MiracleRingDeliverItemReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MiracleRingDeliverItemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MiracleRingDeliverItemReq::IsInitialized() const {
  return true;
}

void MiracleRingDeliverItemReq::Swap(MiracleRingDeliverItemReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MiracleRingDeliverItemReq::InternalSwap(MiracleRingDeliverItemReq* other) {
  using std::swap;
  item_param_list_.InternalSwap(&other->item_param_list_);
  food_weapon_guid_list_.InternalSwap(&other->food_weapon_guid_list_);
  swap(gadget_id_, other->gadget_id_);
  swap(gadget_entity_id_, other->gadget_entity_id_);
  swap(op_type_, other->op_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MiracleRingDeliverItemReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MiracleRingDeliverItemReq

// .proto.InterOpType op_type = 9;
void MiracleRingDeliverItemReq::clear_op_type() {
  op_type_ = 0;
}
::proto::InterOpType MiracleRingDeliverItemReq::op_type() const {
  // @@protoc_insertion_point(field_get:proto.MiracleRingDeliverItemReq.op_type)
  return static_cast< ::proto::InterOpType >(op_type_);
}
void MiracleRingDeliverItemReq::set_op_type(::proto::InterOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MiracleRingDeliverItemReq.op_type)
}

// repeated .proto.ItemParam item_param_list = 1;
int MiracleRingDeliverItemReq::item_param_list_size() const {
  return item_param_list_.size();
}
void MiracleRingDeliverItemReq::clear_item_param_list() {
  item_param_list_.Clear();
}
const ::proto::ItemParam& MiracleRingDeliverItemReq::item_param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MiracleRingDeliverItemReq.item_param_list)
  return item_param_list_.Get(index);
}
::proto::ItemParam* MiracleRingDeliverItemReq::mutable_item_param_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MiracleRingDeliverItemReq.item_param_list)
  return item_param_list_.Mutable(index);
}
::proto::ItemParam* MiracleRingDeliverItemReq::add_item_param_list() {
  // @@protoc_insertion_point(field_add:proto.MiracleRingDeliverItemReq.item_param_list)
  return item_param_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
MiracleRingDeliverItemReq::mutable_item_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MiracleRingDeliverItemReq.item_param_list)
  return &item_param_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
MiracleRingDeliverItemReq::item_param_list() const {
  // @@protoc_insertion_point(field_list:proto.MiracleRingDeliverItemReq.item_param_list)
  return item_param_list_;
}

// repeated uint64 food_weapon_guid_list = 4;
int MiracleRingDeliverItemReq::food_weapon_guid_list_size() const {
  return food_weapon_guid_list_.size();
}
void MiracleRingDeliverItemReq::clear_food_weapon_guid_list() {
  food_weapon_guid_list_.Clear();
}
::google::protobuf::uint64 MiracleRingDeliverItemReq::food_weapon_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MiracleRingDeliverItemReq.food_weapon_guid_list)
  return food_weapon_guid_list_.Get(index);
}
void MiracleRingDeliverItemReq::set_food_weapon_guid_list(int index, ::google::protobuf::uint64 value) {
  food_weapon_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.MiracleRingDeliverItemReq.food_weapon_guid_list)
}
void MiracleRingDeliverItemReq::add_food_weapon_guid_list(::google::protobuf::uint64 value) {
  food_weapon_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.MiracleRingDeliverItemReq.food_weapon_guid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
MiracleRingDeliverItemReq::food_weapon_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.MiracleRingDeliverItemReq.food_weapon_guid_list)
  return food_weapon_guid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
MiracleRingDeliverItemReq::mutable_food_weapon_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MiracleRingDeliverItemReq.food_weapon_guid_list)
  return &food_weapon_guid_list_;
}

// uint32 gadget_id = 14;
void MiracleRingDeliverItemReq::clear_gadget_id() {
  gadget_id_ = 0u;
}
::google::protobuf::uint32 MiracleRingDeliverItemReq::gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.MiracleRingDeliverItemReq.gadget_id)
  return gadget_id_;
}
void MiracleRingDeliverItemReq::set_gadget_id(::google::protobuf::uint32 value) {
  
  gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MiracleRingDeliverItemReq.gadget_id)
}

// uint32 gadget_entity_id = 5;
void MiracleRingDeliverItemReq::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
::google::protobuf::uint32 MiracleRingDeliverItemReq::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.MiracleRingDeliverItemReq.gadget_entity_id)
  return gadget_entity_id_;
}
void MiracleRingDeliverItemReq::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MiracleRingDeliverItemReq.gadget_entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MiracleRingDeliverItemRsp::kInteractTypeFieldNumber;
const int MiracleRingDeliverItemRsp::kRetcodeFieldNumber;
const int MiracleRingDeliverItemRsp::kOpTypeFieldNumber;
const int MiracleRingDeliverItemRsp::kGadgetIdFieldNumber;
const int MiracleRingDeliverItemRsp::kGadgetEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MiracleRingDeliverItemRsp::MiracleRingDeliverItemRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MiracleRingDeliverItemRsp)
}
MiracleRingDeliverItemRsp::MiracleRingDeliverItemRsp(const MiracleRingDeliverItemRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&interact_type_, &from.interact_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&op_type_) -
    reinterpret_cast<char*>(&interact_type_)) + sizeof(op_type_));
  // @@protoc_insertion_point(copy_constructor:proto.MiracleRingDeliverItemRsp)
}

void MiracleRingDeliverItemRsp::SharedCtor() {
  ::memset(&interact_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_type_) -
      reinterpret_cast<char*>(&interact_type_)) + sizeof(op_type_));
  _cached_size_ = 0;
}

MiracleRingDeliverItemRsp::~MiracleRingDeliverItemRsp() {
  // @@protoc_insertion_point(destructor:proto.MiracleRingDeliverItemRsp)
  SharedDtor();
}

void MiracleRingDeliverItemRsp::SharedDtor() {
}

void MiracleRingDeliverItemRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MiracleRingDeliverItemRsp::descriptor() {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MiracleRingDeliverItemRsp& MiracleRingDeliverItemRsp::default_instance() {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::InitDefaults();
  return *internal_default_instance();
}

MiracleRingDeliverItemRsp* MiracleRingDeliverItemRsp::New(::google::protobuf::Arena* arena) const {
  MiracleRingDeliverItemRsp* n = new MiracleRingDeliverItemRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MiracleRingDeliverItemRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MiracleRingDeliverItemRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&interact_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_type_) -
      reinterpret_cast<char*>(&interact_type_)) + sizeof(op_type_));
  _internal_metadata_.Clear();
}

bool MiracleRingDeliverItemRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MiracleRingDeliverItemRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 gadget_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_entity_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.InterOpType op_type = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::proto::InterOpType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.InteractType interact_type = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_interact_type(static_cast< ::proto::InteractType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MiracleRingDeliverItemRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MiracleRingDeliverItemRsp)
  return false;
#undef DO_
}

void MiracleRingDeliverItemRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MiracleRingDeliverItemRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gadget_id = 4;
  if (this->gadget_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->gadget_id(), output);
  }

  // uint32 gadget_entity_id = 9;
  if (this->gadget_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->gadget_entity_id(), output);
  }

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->retcode(), output);
  }

  // .proto.InterOpType op_type = 14;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->op_type(), output);
  }

  // .proto.InteractType interact_type = 15;
  if (this->interact_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->interact_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MiracleRingDeliverItemRsp)
}

::google::protobuf::uint8* MiracleRingDeliverItemRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MiracleRingDeliverItemRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gadget_id = 4;
  if (this->gadget_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->gadget_id(), target);
  }

  // uint32 gadget_entity_id = 9;
  if (this->gadget_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->gadget_entity_id(), target);
  }

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->retcode(), target);
  }

  // .proto.InterOpType op_type = 14;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->op_type(), target);
  }

  // .proto.InteractType interact_type = 15;
  if (this->interact_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      15, this->interact_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MiracleRingDeliverItemRsp)
  return target;
}

size_t MiracleRingDeliverItemRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MiracleRingDeliverItemRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.InteractType interact_type = 15;
  if (this->interact_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->interact_type());
  }

  // uint32 gadget_id = 4;
  if (this->gadget_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_id());
  }

  // uint32 gadget_entity_id = 9;
  if (this->gadget_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_entity_id());
  }

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // .proto.InterOpType op_type = 14;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MiracleRingDeliverItemRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MiracleRingDeliverItemRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MiracleRingDeliverItemRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MiracleRingDeliverItemRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MiracleRingDeliverItemRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MiracleRingDeliverItemRsp)
    MergeFrom(*source);
  }
}

void MiracleRingDeliverItemRsp::MergeFrom(const MiracleRingDeliverItemRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MiracleRingDeliverItemRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.interact_type() != 0) {
    set_interact_type(from.interact_type());
  }
  if (from.gadget_id() != 0) {
    set_gadget_id(from.gadget_id());
  }
  if (from.gadget_entity_id() != 0) {
    set_gadget_entity_id(from.gadget_entity_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
}

void MiracleRingDeliverItemRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MiracleRingDeliverItemRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MiracleRingDeliverItemRsp::CopyFrom(const MiracleRingDeliverItemRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MiracleRingDeliverItemRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MiracleRingDeliverItemRsp::IsInitialized() const {
  return true;
}

void MiracleRingDeliverItemRsp::Swap(MiracleRingDeliverItemRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MiracleRingDeliverItemRsp::InternalSwap(MiracleRingDeliverItemRsp* other) {
  using std::swap;
  swap(interact_type_, other->interact_type_);
  swap(gadget_id_, other->gadget_id_);
  swap(gadget_entity_id_, other->gadget_entity_id_);
  swap(retcode_, other->retcode_);
  swap(op_type_, other->op_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MiracleRingDeliverItemRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MiracleRingDeliverItemRsp

// .proto.InteractType interact_type = 15;
void MiracleRingDeliverItemRsp::clear_interact_type() {
  interact_type_ = 0;
}
::proto::InteractType MiracleRingDeliverItemRsp::interact_type() const {
  // @@protoc_insertion_point(field_get:proto.MiracleRingDeliverItemRsp.interact_type)
  return static_cast< ::proto::InteractType >(interact_type_);
}
void MiracleRingDeliverItemRsp::set_interact_type(::proto::InteractType value) {
  
  interact_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MiracleRingDeliverItemRsp.interact_type)
}

// int32 retcode = 11;
void MiracleRingDeliverItemRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 MiracleRingDeliverItemRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.MiracleRingDeliverItemRsp.retcode)
  return retcode_;
}
void MiracleRingDeliverItemRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.MiracleRingDeliverItemRsp.retcode)
}

// .proto.InterOpType op_type = 14;
void MiracleRingDeliverItemRsp::clear_op_type() {
  op_type_ = 0;
}
::proto::InterOpType MiracleRingDeliverItemRsp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.MiracleRingDeliverItemRsp.op_type)
  return static_cast< ::proto::InterOpType >(op_type_);
}
void MiracleRingDeliverItemRsp::set_op_type(::proto::InterOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MiracleRingDeliverItemRsp.op_type)
}

// uint32 gadget_id = 4;
void MiracleRingDeliverItemRsp::clear_gadget_id() {
  gadget_id_ = 0u;
}
::google::protobuf::uint32 MiracleRingDeliverItemRsp::gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.MiracleRingDeliverItemRsp.gadget_id)
  return gadget_id_;
}
void MiracleRingDeliverItemRsp::set_gadget_id(::google::protobuf::uint32 value) {
  
  gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MiracleRingDeliverItemRsp.gadget_id)
}

// uint32 gadget_entity_id = 9;
void MiracleRingDeliverItemRsp::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
::google::protobuf::uint32 MiracleRingDeliverItemRsp::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.MiracleRingDeliverItemRsp.gadget_entity_id)
  return gadget_entity_id_;
}
void MiracleRingDeliverItemRsp::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MiracleRingDeliverItemRsp.gadget_entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MiracleRingDestroyNotify::kEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MiracleRingDestroyNotify::MiracleRingDestroyNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MiracleRingDestroyNotify)
}
MiracleRingDestroyNotify::MiracleRingDestroyNotify(const MiracleRingDestroyNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entity_id_ = from.entity_id_;
  // @@protoc_insertion_point(copy_constructor:proto.MiracleRingDestroyNotify)
}

void MiracleRingDestroyNotify::SharedCtor() {
  entity_id_ = 0u;
  _cached_size_ = 0;
}

MiracleRingDestroyNotify::~MiracleRingDestroyNotify() {
  // @@protoc_insertion_point(destructor:proto.MiracleRingDestroyNotify)
  SharedDtor();
}

void MiracleRingDestroyNotify::SharedDtor() {
}

void MiracleRingDestroyNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MiracleRingDestroyNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MiracleRingDestroyNotify& MiracleRingDestroyNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::InitDefaults();
  return *internal_default_instance();
}

MiracleRingDestroyNotify* MiracleRingDestroyNotify::New(::google::protobuf::Arena* arena) const {
  MiracleRingDestroyNotify* n = new MiracleRingDestroyNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MiracleRingDestroyNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MiracleRingDestroyNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool MiracleRingDestroyNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MiracleRingDestroyNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MiracleRingDestroyNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MiracleRingDestroyNotify)
  return false;
#undef DO_
}

void MiracleRingDestroyNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MiracleRingDestroyNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 7;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MiracleRingDestroyNotify)
}

::google::protobuf::uint8* MiracleRingDestroyNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MiracleRingDestroyNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 7;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MiracleRingDestroyNotify)
  return target;
}

size_t MiracleRingDestroyNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MiracleRingDestroyNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 entity_id = 7;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MiracleRingDestroyNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MiracleRingDestroyNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MiracleRingDestroyNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MiracleRingDestroyNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MiracleRingDestroyNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MiracleRingDestroyNotify)
    MergeFrom(*source);
  }
}

void MiracleRingDestroyNotify::MergeFrom(const MiracleRingDestroyNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MiracleRingDestroyNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void MiracleRingDestroyNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MiracleRingDestroyNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MiracleRingDestroyNotify::CopyFrom(const MiracleRingDestroyNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MiracleRingDestroyNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MiracleRingDestroyNotify::IsInitialized() const {
  return true;
}

void MiracleRingDestroyNotify::Swap(MiracleRingDestroyNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MiracleRingDestroyNotify::InternalSwap(MiracleRingDestroyNotify* other) {
  using std::swap;
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MiracleRingDestroyNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmiracle_5fring_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MiracleRingDestroyNotify

// uint32 entity_id = 7;
void MiracleRingDestroyNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 MiracleRingDestroyNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.MiracleRingDestroyNotify.entity_id)
  return entity_id_;
}
void MiracleRingDestroyNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MiracleRingDestroyNotify.entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
