// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_achievement.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_achievement.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class AchievementDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Achievement>
     _instance;
} _Achievement_default_instance_;
class AchievementAllDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AchievementAllDataNotify>
     _instance;
} _AchievementAllDataNotify_default_instance_;
class AchievementUpdateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AchievementUpdateNotify>
     _instance;
} _AchievementUpdateNotify_default_instance_;
class TakeAchievementRewardReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TakeAchievementRewardReq>
     _instance;
} _TakeAchievementRewardReq_default_instance_;
class TakeAchievementRewardRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TakeAchievementRewardRsp>
     _instance;
} _TakeAchievementRewardRsp_default_instance_;
class TakeAchievementGoalRewardReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TakeAchievementGoalRewardReq>
     _instance;
} _TakeAchievementGoalRewardReq_default_instance_;
class TakeAchievementGoalRewardRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TakeAchievementGoalRewardRsp>
     _instance;
} _TakeAchievementGoalRewardRsp_default_instance_;

namespace protobuf_cmd_2fcmd_5fachievement_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Achievement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Achievement, finish_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Achievement, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Achievement, cur_progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Achievement, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Achievement, total_progress_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementAllDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementAllDataNotify, achievement_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementAllDataNotify, reward_taken_goal_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementUpdateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementUpdateNotify, achievement_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeAchievementRewardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeAchievementRewardReq, id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeAchievementRewardRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeAchievementRewardRsp, id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeAchievementRewardRsp, item_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeAchievementRewardRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeAchievementGoalRewardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeAchievementGoalRewardReq, id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeAchievementGoalRewardRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeAchievementGoalRewardRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeAchievementGoalRewardRsp, id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeAchievementGoalRewardRsp, item_list_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(Achievement)},
  { 10, -1, sizeof(AchievementAllDataNotify)},
  { 17, -1, sizeof(AchievementUpdateNotify)},
  { 23, -1, sizeof(TakeAchievementRewardReq)},
  { 29, -1, sizeof(TakeAchievementRewardRsp)},
  { 37, -1, sizeof(TakeAchievementGoalRewardReq)},
  { 43, -1, sizeof(TakeAchievementGoalRewardRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Achievement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AchievementAllDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AchievementUpdateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TakeAchievementRewardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TakeAchievementRewardRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TakeAchievementGoalRewardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TakeAchievementGoalRewardRsp_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_achievement.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _Achievement_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Achievement_default_instance_);_AchievementAllDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AchievementAllDataNotify_default_instance_);_AchievementUpdateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AchievementUpdateNotify_default_instance_);_TakeAchievementRewardReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TakeAchievementRewardReq_default_instance_);_TakeAchievementRewardRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TakeAchievementRewardRsp_default_instance_);_TakeAchievementGoalRewardReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TakeAchievementGoalRewardReq_default_instance_);_TakeAchievementGoalRewardRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TakeAchievementGoalRewardRsp_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\031cmd/cmd_achievement.proto\022\005proto\032\014defi"
      "ne.proto\"\323\001\n\013Achievement\022\030\n\020finish_times"
      "tamp\030\013 \001(\r\022)\n\006status\030\r \001(\0162\031.proto.Achie"
      "vement.Status\022\024\n\014cur_progress\030\014 \001(\r\022\n\n\002i"
      "d\030\016 \001(\r\022\026\n\016total_progress\030\010 \001(\r\"E\n\006Statu"
      "s\022\013\n\007INVALID\020\000\022\016\n\nUNFINISHED\020\001\022\014\n\010FINISH"
      "ED\020\002\022\020\n\014REWARD_TAKEN\020\003\"k\n\030AchievementAll"
      "DataNotify\022,\n\020achievement_list\030\004 \003(\0132\022.p"
      "roto.Achievement\022!\n\031reward_taken_goal_id"
      "_list\030\002 \003(\r\"G\n\027AchievementUpdateNotify\022,"
      "\n\020achievement_list\030\016 \003(\0132\022.proto.Achieve"
      "ment\"+\n\030TakeAchievementRewardReq\022\017\n\007id_l"
      "ist\030\r \003(\r\"a\n\030TakeAchievementRewardRsp\022\017\n"
      "\007id_list\030\007 \003(\r\022#\n\titem_list\030\n \003(\0132\020.prot"
      "o.ItemParam\022\017\n\007retcode\030\001 \001(\005\"/\n\034TakeAchi"
      "evementGoalRewardReq\022\017\n\007id_list\030\005 \003(\r\"e\n"
      "\034TakeAchievementGoalRewardRsp\022\017\n\007retcode"
      "\030\017 \001(\005\022\017\n\007id_list\030\014 \003(\r\022#\n\titem_list\030\005 \003"
      "(\0132\020.proto.ItemParamB(Z&github.com/teyva"
      "t-helper/hk4e-proto/pbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 790);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_achievement.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5fachievement_2eproto

const ::google::protobuf::EnumDescriptor* Achievement_Status_descriptor() {
  protobuf_cmd_2fcmd_5fachievement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fachievement_2eproto::file_level_enum_descriptors[0];
}
bool Achievement_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Achievement_Status Achievement::INVALID;
const Achievement_Status Achievement::UNFINISHED;
const Achievement_Status Achievement::FINISHED;
const Achievement_Status Achievement::REWARD_TAKEN;
const Achievement_Status Achievement::Status_MIN;
const Achievement_Status Achievement::Status_MAX;
const int Achievement::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Achievement::kFinishTimestampFieldNumber;
const int Achievement::kStatusFieldNumber;
const int Achievement::kCurProgressFieldNumber;
const int Achievement::kIdFieldNumber;
const int Achievement::kTotalProgressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Achievement::Achievement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fachievement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Achievement)
}
Achievement::Achievement(const Achievement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&id_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:proto.Achievement)
}

void Achievement::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&id_)) + sizeof(status_));
  _cached_size_ = 0;
}

Achievement::~Achievement() {
  // @@protoc_insertion_point(destructor:proto.Achievement)
  SharedDtor();
}

void Achievement::SharedDtor() {
}

void Achievement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Achievement::descriptor() {
  protobuf_cmd_2fcmd_5fachievement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fachievement_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Achievement& Achievement::default_instance() {
  protobuf_cmd_2fcmd_5fachievement_2eproto::InitDefaults();
  return *internal_default_instance();
}

Achievement* Achievement::New(::google::protobuf::Arena* arena) const {
  Achievement* n = new Achievement;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Achievement::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Achievement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&id_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool Achievement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Achievement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 total_progress = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 finish_timestamp = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &finish_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cur_progress = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Achievement.Status status = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::proto::Achievement_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Achievement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Achievement)
  return false;
#undef DO_
}

void Achievement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Achievement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 total_progress = 8;
  if (this->total_progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->total_progress(), output);
  }

  // uint32 finish_timestamp = 11;
  if (this->finish_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->finish_timestamp(), output);
  }

  // uint32 cur_progress = 12;
  if (this->cur_progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->cur_progress(), output);
  }

  // .proto.Achievement.Status status = 13;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->status(), output);
  }

  // uint32 id = 14;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Achievement)
}

::google::protobuf::uint8* Achievement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.Achievement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 total_progress = 8;
  if (this->total_progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->total_progress(), target);
  }

  // uint32 finish_timestamp = 11;
  if (this->finish_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->finish_timestamp(), target);
  }

  // uint32 cur_progress = 12;
  if (this->cur_progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->cur_progress(), target);
  }

  // .proto.Achievement.Status status = 13;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->status(), target);
  }

  // uint32 id = 14;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Achievement)
  return target;
}

size_t Achievement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Achievement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 id = 14;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 total_progress = 8;
  if (this->total_progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->total_progress());
  }

  // uint32 finish_timestamp = 11;
  if (this->finish_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->finish_timestamp());
  }

  // uint32 cur_progress = 12;
  if (this->cur_progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cur_progress());
  }

  // .proto.Achievement.Status status = 13;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Achievement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Achievement)
  GOOGLE_DCHECK_NE(&from, this);
  const Achievement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Achievement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Achievement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Achievement)
    MergeFrom(*source);
  }
}

void Achievement::MergeFrom(const Achievement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Achievement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.total_progress() != 0) {
    set_total_progress(from.total_progress());
  }
  if (from.finish_timestamp() != 0) {
    set_finish_timestamp(from.finish_timestamp());
  }
  if (from.cur_progress() != 0) {
    set_cur_progress(from.cur_progress());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void Achievement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Achievement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Achievement::CopyFrom(const Achievement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Achievement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Achievement::IsInitialized() const {
  return true;
}

void Achievement::Swap(Achievement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Achievement::InternalSwap(Achievement* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(total_progress_, other->total_progress_);
  swap(finish_timestamp_, other->finish_timestamp_);
  swap(cur_progress_, other->cur_progress_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Achievement::GetMetadata() const {
  protobuf_cmd_2fcmd_5fachievement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fachievement_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Achievement

// uint32 finish_timestamp = 11;
void Achievement::clear_finish_timestamp() {
  finish_timestamp_ = 0u;
}
::google::protobuf::uint32 Achievement::finish_timestamp() const {
  // @@protoc_insertion_point(field_get:proto.Achievement.finish_timestamp)
  return finish_timestamp_;
}
void Achievement::set_finish_timestamp(::google::protobuf::uint32 value) {
  
  finish_timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.Achievement.finish_timestamp)
}

// .proto.Achievement.Status status = 13;
void Achievement::clear_status() {
  status_ = 0;
}
::proto::Achievement_Status Achievement::status() const {
  // @@protoc_insertion_point(field_get:proto.Achievement.status)
  return static_cast< ::proto::Achievement_Status >(status_);
}
void Achievement::set_status(::proto::Achievement_Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:proto.Achievement.status)
}

// uint32 cur_progress = 12;
void Achievement::clear_cur_progress() {
  cur_progress_ = 0u;
}
::google::protobuf::uint32 Achievement::cur_progress() const {
  // @@protoc_insertion_point(field_get:proto.Achievement.cur_progress)
  return cur_progress_;
}
void Achievement::set_cur_progress(::google::protobuf::uint32 value) {
  
  cur_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.Achievement.cur_progress)
}

// uint32 id = 14;
void Achievement::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 Achievement::id() const {
  // @@protoc_insertion_point(field_get:proto.Achievement.id)
  return id_;
}
void Achievement::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.Achievement.id)
}

// uint32 total_progress = 8;
void Achievement::clear_total_progress() {
  total_progress_ = 0u;
}
::google::protobuf::uint32 Achievement::total_progress() const {
  // @@protoc_insertion_point(field_get:proto.Achievement.total_progress)
  return total_progress_;
}
void Achievement::set_total_progress(::google::protobuf::uint32 value) {
  
  total_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.Achievement.total_progress)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AchievementAllDataNotify::kAchievementListFieldNumber;
const int AchievementAllDataNotify::kRewardTakenGoalIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AchievementAllDataNotify::AchievementAllDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fachievement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AchievementAllDataNotify)
}
AchievementAllDataNotify::AchievementAllDataNotify(const AchievementAllDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      reward_taken_goal_id_list_(from.reward_taken_goal_id_list_),
      achievement_list_(from.achievement_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.AchievementAllDataNotify)
}

void AchievementAllDataNotify::SharedCtor() {
  _cached_size_ = 0;
}

AchievementAllDataNotify::~AchievementAllDataNotify() {
  // @@protoc_insertion_point(destructor:proto.AchievementAllDataNotify)
  SharedDtor();
}

void AchievementAllDataNotify::SharedDtor() {
}

void AchievementAllDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AchievementAllDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fachievement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fachievement_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AchievementAllDataNotify& AchievementAllDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fachievement_2eproto::InitDefaults();
  return *internal_default_instance();
}

AchievementAllDataNotify* AchievementAllDataNotify::New(::google::protobuf::Arena* arena) const {
  AchievementAllDataNotify* n = new AchievementAllDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AchievementAllDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AchievementAllDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reward_taken_goal_id_list_.Clear();
  achievement_list_.Clear();
  _internal_metadata_.Clear();
}

bool AchievementAllDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AchievementAllDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 reward_taken_goal_id_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_reward_taken_goal_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_reward_taken_goal_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.Achievement achievement_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_achievement_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AchievementAllDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AchievementAllDataNotify)
  return false;
#undef DO_
}

void AchievementAllDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AchievementAllDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 reward_taken_goal_id_list = 2;
  if (this->reward_taken_goal_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _reward_taken_goal_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->reward_taken_goal_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->reward_taken_goal_id_list(i), output);
  }

  // repeated .proto.Achievement achievement_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->achievement_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->achievement_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AchievementAllDataNotify)
}

::google::protobuf::uint8* AchievementAllDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AchievementAllDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 reward_taken_goal_id_list = 2;
  if (this->reward_taken_goal_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _reward_taken_goal_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->reward_taken_goal_id_list_, target);
  }

  // repeated .proto.Achievement achievement_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->achievement_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->achievement_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AchievementAllDataNotify)
  return target;
}

size_t AchievementAllDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AchievementAllDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 reward_taken_goal_id_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->reward_taken_goal_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _reward_taken_goal_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.Achievement achievement_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->achievement_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->achievement_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AchievementAllDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AchievementAllDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AchievementAllDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AchievementAllDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AchievementAllDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AchievementAllDataNotify)
    MergeFrom(*source);
  }
}

void AchievementAllDataNotify::MergeFrom(const AchievementAllDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AchievementAllDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reward_taken_goal_id_list_.MergeFrom(from.reward_taken_goal_id_list_);
  achievement_list_.MergeFrom(from.achievement_list_);
}

void AchievementAllDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AchievementAllDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AchievementAllDataNotify::CopyFrom(const AchievementAllDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AchievementAllDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AchievementAllDataNotify::IsInitialized() const {
  return true;
}

void AchievementAllDataNotify::Swap(AchievementAllDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AchievementAllDataNotify::InternalSwap(AchievementAllDataNotify* other) {
  using std::swap;
  reward_taken_goal_id_list_.InternalSwap(&other->reward_taken_goal_id_list_);
  achievement_list_.InternalSwap(&other->achievement_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AchievementAllDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fachievement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fachievement_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AchievementAllDataNotify

// repeated .proto.Achievement achievement_list = 4;
int AchievementAllDataNotify::achievement_list_size() const {
  return achievement_list_.size();
}
void AchievementAllDataNotify::clear_achievement_list() {
  achievement_list_.Clear();
}
const ::proto::Achievement& AchievementAllDataNotify::achievement_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AchievementAllDataNotify.achievement_list)
  return achievement_list_.Get(index);
}
::proto::Achievement* AchievementAllDataNotify::mutable_achievement_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AchievementAllDataNotify.achievement_list)
  return achievement_list_.Mutable(index);
}
::proto::Achievement* AchievementAllDataNotify::add_achievement_list() {
  // @@protoc_insertion_point(field_add:proto.AchievementAllDataNotify.achievement_list)
  return achievement_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::Achievement >*
AchievementAllDataNotify::mutable_achievement_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AchievementAllDataNotify.achievement_list)
  return &achievement_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::Achievement >&
AchievementAllDataNotify::achievement_list() const {
  // @@protoc_insertion_point(field_list:proto.AchievementAllDataNotify.achievement_list)
  return achievement_list_;
}

// repeated uint32 reward_taken_goal_id_list = 2;
int AchievementAllDataNotify::reward_taken_goal_id_list_size() const {
  return reward_taken_goal_id_list_.size();
}
void AchievementAllDataNotify::clear_reward_taken_goal_id_list() {
  reward_taken_goal_id_list_.Clear();
}
::google::protobuf::uint32 AchievementAllDataNotify::reward_taken_goal_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AchievementAllDataNotify.reward_taken_goal_id_list)
  return reward_taken_goal_id_list_.Get(index);
}
void AchievementAllDataNotify::set_reward_taken_goal_id_list(int index, ::google::protobuf::uint32 value) {
  reward_taken_goal_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AchievementAllDataNotify.reward_taken_goal_id_list)
}
void AchievementAllDataNotify::add_reward_taken_goal_id_list(::google::protobuf::uint32 value) {
  reward_taken_goal_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AchievementAllDataNotify.reward_taken_goal_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AchievementAllDataNotify::reward_taken_goal_id_list() const {
  // @@protoc_insertion_point(field_list:proto.AchievementAllDataNotify.reward_taken_goal_id_list)
  return reward_taken_goal_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AchievementAllDataNotify::mutable_reward_taken_goal_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AchievementAllDataNotify.reward_taken_goal_id_list)
  return &reward_taken_goal_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AchievementUpdateNotify::kAchievementListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AchievementUpdateNotify::AchievementUpdateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fachievement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AchievementUpdateNotify)
}
AchievementUpdateNotify::AchievementUpdateNotify(const AchievementUpdateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      achievement_list_(from.achievement_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.AchievementUpdateNotify)
}

void AchievementUpdateNotify::SharedCtor() {
  _cached_size_ = 0;
}

AchievementUpdateNotify::~AchievementUpdateNotify() {
  // @@protoc_insertion_point(destructor:proto.AchievementUpdateNotify)
  SharedDtor();
}

void AchievementUpdateNotify::SharedDtor() {
}

void AchievementUpdateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AchievementUpdateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fachievement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fachievement_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AchievementUpdateNotify& AchievementUpdateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fachievement_2eproto::InitDefaults();
  return *internal_default_instance();
}

AchievementUpdateNotify* AchievementUpdateNotify::New(::google::protobuf::Arena* arena) const {
  AchievementUpdateNotify* n = new AchievementUpdateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AchievementUpdateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AchievementUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  achievement_list_.Clear();
  _internal_metadata_.Clear();
}

bool AchievementUpdateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AchievementUpdateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.Achievement achievement_list = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_achievement_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AchievementUpdateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AchievementUpdateNotify)
  return false;
#undef DO_
}

void AchievementUpdateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AchievementUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.Achievement achievement_list = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->achievement_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->achievement_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AchievementUpdateNotify)
}

::google::protobuf::uint8* AchievementUpdateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AchievementUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.Achievement achievement_list = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->achievement_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, this->achievement_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AchievementUpdateNotify)
  return target;
}

size_t AchievementUpdateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AchievementUpdateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.Achievement achievement_list = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->achievement_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->achievement_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AchievementUpdateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AchievementUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AchievementUpdateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AchievementUpdateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AchievementUpdateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AchievementUpdateNotify)
    MergeFrom(*source);
  }
}

void AchievementUpdateNotify::MergeFrom(const AchievementUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AchievementUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  achievement_list_.MergeFrom(from.achievement_list_);
}

void AchievementUpdateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AchievementUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AchievementUpdateNotify::CopyFrom(const AchievementUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AchievementUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AchievementUpdateNotify::IsInitialized() const {
  return true;
}

void AchievementUpdateNotify::Swap(AchievementUpdateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AchievementUpdateNotify::InternalSwap(AchievementUpdateNotify* other) {
  using std::swap;
  achievement_list_.InternalSwap(&other->achievement_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AchievementUpdateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fachievement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fachievement_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AchievementUpdateNotify

// repeated .proto.Achievement achievement_list = 14;
int AchievementUpdateNotify::achievement_list_size() const {
  return achievement_list_.size();
}
void AchievementUpdateNotify::clear_achievement_list() {
  achievement_list_.Clear();
}
const ::proto::Achievement& AchievementUpdateNotify::achievement_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AchievementUpdateNotify.achievement_list)
  return achievement_list_.Get(index);
}
::proto::Achievement* AchievementUpdateNotify::mutable_achievement_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AchievementUpdateNotify.achievement_list)
  return achievement_list_.Mutable(index);
}
::proto::Achievement* AchievementUpdateNotify::add_achievement_list() {
  // @@protoc_insertion_point(field_add:proto.AchievementUpdateNotify.achievement_list)
  return achievement_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::Achievement >*
AchievementUpdateNotify::mutable_achievement_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AchievementUpdateNotify.achievement_list)
  return &achievement_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::Achievement >&
AchievementUpdateNotify::achievement_list() const {
  // @@protoc_insertion_point(field_list:proto.AchievementUpdateNotify.achievement_list)
  return achievement_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakeAchievementRewardReq::kIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakeAchievementRewardReq::TakeAchievementRewardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fachievement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TakeAchievementRewardReq)
}
TakeAchievementRewardReq::TakeAchievementRewardReq(const TakeAchievementRewardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      id_list_(from.id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.TakeAchievementRewardReq)
}

void TakeAchievementRewardReq::SharedCtor() {
  _cached_size_ = 0;
}

TakeAchievementRewardReq::~TakeAchievementRewardReq() {
  // @@protoc_insertion_point(destructor:proto.TakeAchievementRewardReq)
  SharedDtor();
}

void TakeAchievementRewardReq::SharedDtor() {
}

void TakeAchievementRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TakeAchievementRewardReq::descriptor() {
  protobuf_cmd_2fcmd_5fachievement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fachievement_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakeAchievementRewardReq& TakeAchievementRewardReq::default_instance() {
  protobuf_cmd_2fcmd_5fachievement_2eproto::InitDefaults();
  return *internal_default_instance();
}

TakeAchievementRewardReq* TakeAchievementRewardReq::New(::google::protobuf::Arena* arena) const {
  TakeAchievementRewardReq* n = new TakeAchievementRewardReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TakeAchievementRewardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TakeAchievementRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_list_.Clear();
  _internal_metadata_.Clear();
}

bool TakeAchievementRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TakeAchievementRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 id_list = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 106u, input, this->mutable_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TakeAchievementRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TakeAchievementRewardReq)
  return false;
#undef DO_
}

void TakeAchievementRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TakeAchievementRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 id_list = 13;
  if (this->id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TakeAchievementRewardReq)
}

::google::protobuf::uint8* TakeAchievementRewardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TakeAchievementRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 id_list = 13;
  if (this->id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TakeAchievementRewardReq)
  return target;
}

size_t TakeAchievementRewardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TakeAchievementRewardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 id_list = 13;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TakeAchievementRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TakeAchievementRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TakeAchievementRewardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakeAchievementRewardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TakeAchievementRewardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TakeAchievementRewardReq)
    MergeFrom(*source);
  }
}

void TakeAchievementRewardReq::MergeFrom(const TakeAchievementRewardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TakeAchievementRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  id_list_.MergeFrom(from.id_list_);
}

void TakeAchievementRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TakeAchievementRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakeAchievementRewardReq::CopyFrom(const TakeAchievementRewardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TakeAchievementRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakeAchievementRewardReq::IsInitialized() const {
  return true;
}

void TakeAchievementRewardReq::Swap(TakeAchievementRewardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakeAchievementRewardReq::InternalSwap(TakeAchievementRewardReq* other) {
  using std::swap;
  id_list_.InternalSwap(&other->id_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TakeAchievementRewardReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fachievement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fachievement_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TakeAchievementRewardReq

// repeated uint32 id_list = 13;
int TakeAchievementRewardReq::id_list_size() const {
  return id_list_.size();
}
void TakeAchievementRewardReq::clear_id_list() {
  id_list_.Clear();
}
::google::protobuf::uint32 TakeAchievementRewardReq::id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TakeAchievementRewardReq.id_list)
  return id_list_.Get(index);
}
void TakeAchievementRewardReq::set_id_list(int index, ::google::protobuf::uint32 value) {
  id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.TakeAchievementRewardReq.id_list)
}
void TakeAchievementRewardReq::add_id_list(::google::protobuf::uint32 value) {
  id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.TakeAchievementRewardReq.id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TakeAchievementRewardReq::id_list() const {
  // @@protoc_insertion_point(field_list:proto.TakeAchievementRewardReq.id_list)
  return id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TakeAchievementRewardReq::mutable_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TakeAchievementRewardReq.id_list)
  return &id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakeAchievementRewardRsp::kIdListFieldNumber;
const int TakeAchievementRewardRsp::kItemListFieldNumber;
const int TakeAchievementRewardRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakeAchievementRewardRsp::TakeAchievementRewardRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fachievement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TakeAchievementRewardRsp)
}
TakeAchievementRewardRsp::TakeAchievementRewardRsp(const TakeAchievementRewardRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      id_list_(from.id_list_),
      item_list_(from.item_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.TakeAchievementRewardRsp)
}

void TakeAchievementRewardRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

TakeAchievementRewardRsp::~TakeAchievementRewardRsp() {
  // @@protoc_insertion_point(destructor:proto.TakeAchievementRewardRsp)
  SharedDtor();
}

void TakeAchievementRewardRsp::SharedDtor() {
}

void TakeAchievementRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TakeAchievementRewardRsp::descriptor() {
  protobuf_cmd_2fcmd_5fachievement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fachievement_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakeAchievementRewardRsp& TakeAchievementRewardRsp::default_instance() {
  protobuf_cmd_2fcmd_5fachievement_2eproto::InitDefaults();
  return *internal_default_instance();
}

TakeAchievementRewardRsp* TakeAchievementRewardRsp::New(::google::protobuf::Arena* arena) const {
  TakeAchievementRewardRsp* n = new TakeAchievementRewardRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TakeAchievementRewardRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TakeAchievementRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_list_.Clear();
  item_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool TakeAchievementRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TakeAchievementRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 id_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 58u, input, this->mutable_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ItemParam item_list = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TakeAchievementRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TakeAchievementRewardRsp)
  return false;
#undef DO_
}

void TakeAchievementRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TakeAchievementRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // repeated uint32 id_list = 7;
  if (this->id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->id_list(i), output);
  }

  // repeated .proto.ItemParam item_list = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->item_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TakeAchievementRewardRsp)
}

::google::protobuf::uint8* TakeAchievementRewardRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TakeAchievementRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // repeated uint32 id_list = 7;
  if (this->id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->id_list_, target);
  }

  // repeated .proto.ItemParam item_list = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->item_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TakeAchievementRewardRsp)
  return target;
}

size_t TakeAchievementRewardRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TakeAchievementRewardRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 id_list = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.ItemParam item_list = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->item_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TakeAchievementRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TakeAchievementRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const TakeAchievementRewardRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakeAchievementRewardRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TakeAchievementRewardRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TakeAchievementRewardRsp)
    MergeFrom(*source);
  }
}

void TakeAchievementRewardRsp::MergeFrom(const TakeAchievementRewardRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TakeAchievementRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  id_list_.MergeFrom(from.id_list_);
  item_list_.MergeFrom(from.item_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void TakeAchievementRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TakeAchievementRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakeAchievementRewardRsp::CopyFrom(const TakeAchievementRewardRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TakeAchievementRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakeAchievementRewardRsp::IsInitialized() const {
  return true;
}

void TakeAchievementRewardRsp::Swap(TakeAchievementRewardRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakeAchievementRewardRsp::InternalSwap(TakeAchievementRewardRsp* other) {
  using std::swap;
  id_list_.InternalSwap(&other->id_list_);
  item_list_.InternalSwap(&other->item_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TakeAchievementRewardRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fachievement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fachievement_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TakeAchievementRewardRsp

// repeated uint32 id_list = 7;
int TakeAchievementRewardRsp::id_list_size() const {
  return id_list_.size();
}
void TakeAchievementRewardRsp::clear_id_list() {
  id_list_.Clear();
}
::google::protobuf::uint32 TakeAchievementRewardRsp::id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TakeAchievementRewardRsp.id_list)
  return id_list_.Get(index);
}
void TakeAchievementRewardRsp::set_id_list(int index, ::google::protobuf::uint32 value) {
  id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.TakeAchievementRewardRsp.id_list)
}
void TakeAchievementRewardRsp::add_id_list(::google::protobuf::uint32 value) {
  id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.TakeAchievementRewardRsp.id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TakeAchievementRewardRsp::id_list() const {
  // @@protoc_insertion_point(field_list:proto.TakeAchievementRewardRsp.id_list)
  return id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TakeAchievementRewardRsp::mutable_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TakeAchievementRewardRsp.id_list)
  return &id_list_;
}

// repeated .proto.ItemParam item_list = 10;
int TakeAchievementRewardRsp::item_list_size() const {
  return item_list_.size();
}
void TakeAchievementRewardRsp::clear_item_list() {
  item_list_.Clear();
}
const ::proto::ItemParam& TakeAchievementRewardRsp::item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TakeAchievementRewardRsp.item_list)
  return item_list_.Get(index);
}
::proto::ItemParam* TakeAchievementRewardRsp::mutable_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TakeAchievementRewardRsp.item_list)
  return item_list_.Mutable(index);
}
::proto::ItemParam* TakeAchievementRewardRsp::add_item_list() {
  // @@protoc_insertion_point(field_add:proto.TakeAchievementRewardRsp.item_list)
  return item_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
TakeAchievementRewardRsp::mutable_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TakeAchievementRewardRsp.item_list)
  return &item_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
TakeAchievementRewardRsp::item_list() const {
  // @@protoc_insertion_point(field_list:proto.TakeAchievementRewardRsp.item_list)
  return item_list_;
}

// int32 retcode = 1;
void TakeAchievementRewardRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 TakeAchievementRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TakeAchievementRewardRsp.retcode)
  return retcode_;
}
void TakeAchievementRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeAchievementRewardRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakeAchievementGoalRewardReq::kIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakeAchievementGoalRewardReq::TakeAchievementGoalRewardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fachievement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TakeAchievementGoalRewardReq)
}
TakeAchievementGoalRewardReq::TakeAchievementGoalRewardReq(const TakeAchievementGoalRewardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      id_list_(from.id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.TakeAchievementGoalRewardReq)
}

void TakeAchievementGoalRewardReq::SharedCtor() {
  _cached_size_ = 0;
}

TakeAchievementGoalRewardReq::~TakeAchievementGoalRewardReq() {
  // @@protoc_insertion_point(destructor:proto.TakeAchievementGoalRewardReq)
  SharedDtor();
}

void TakeAchievementGoalRewardReq::SharedDtor() {
}

void TakeAchievementGoalRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TakeAchievementGoalRewardReq::descriptor() {
  protobuf_cmd_2fcmd_5fachievement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fachievement_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakeAchievementGoalRewardReq& TakeAchievementGoalRewardReq::default_instance() {
  protobuf_cmd_2fcmd_5fachievement_2eproto::InitDefaults();
  return *internal_default_instance();
}

TakeAchievementGoalRewardReq* TakeAchievementGoalRewardReq::New(::google::protobuf::Arena* arena) const {
  TakeAchievementGoalRewardReq* n = new TakeAchievementGoalRewardReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TakeAchievementGoalRewardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TakeAchievementGoalRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_list_.Clear();
  _internal_metadata_.Clear();
}

bool TakeAchievementGoalRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TakeAchievementGoalRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 id_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TakeAchievementGoalRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TakeAchievementGoalRewardReq)
  return false;
#undef DO_
}

void TakeAchievementGoalRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TakeAchievementGoalRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 id_list = 5;
  if (this->id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TakeAchievementGoalRewardReq)
}

::google::protobuf::uint8* TakeAchievementGoalRewardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TakeAchievementGoalRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 id_list = 5;
  if (this->id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TakeAchievementGoalRewardReq)
  return target;
}

size_t TakeAchievementGoalRewardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TakeAchievementGoalRewardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 id_list = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TakeAchievementGoalRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TakeAchievementGoalRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TakeAchievementGoalRewardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakeAchievementGoalRewardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TakeAchievementGoalRewardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TakeAchievementGoalRewardReq)
    MergeFrom(*source);
  }
}

void TakeAchievementGoalRewardReq::MergeFrom(const TakeAchievementGoalRewardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TakeAchievementGoalRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  id_list_.MergeFrom(from.id_list_);
}

void TakeAchievementGoalRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TakeAchievementGoalRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakeAchievementGoalRewardReq::CopyFrom(const TakeAchievementGoalRewardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TakeAchievementGoalRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakeAchievementGoalRewardReq::IsInitialized() const {
  return true;
}

void TakeAchievementGoalRewardReq::Swap(TakeAchievementGoalRewardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakeAchievementGoalRewardReq::InternalSwap(TakeAchievementGoalRewardReq* other) {
  using std::swap;
  id_list_.InternalSwap(&other->id_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TakeAchievementGoalRewardReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fachievement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fachievement_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TakeAchievementGoalRewardReq

// repeated uint32 id_list = 5;
int TakeAchievementGoalRewardReq::id_list_size() const {
  return id_list_.size();
}
void TakeAchievementGoalRewardReq::clear_id_list() {
  id_list_.Clear();
}
::google::protobuf::uint32 TakeAchievementGoalRewardReq::id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TakeAchievementGoalRewardReq.id_list)
  return id_list_.Get(index);
}
void TakeAchievementGoalRewardReq::set_id_list(int index, ::google::protobuf::uint32 value) {
  id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.TakeAchievementGoalRewardReq.id_list)
}
void TakeAchievementGoalRewardReq::add_id_list(::google::protobuf::uint32 value) {
  id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.TakeAchievementGoalRewardReq.id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TakeAchievementGoalRewardReq::id_list() const {
  // @@protoc_insertion_point(field_list:proto.TakeAchievementGoalRewardReq.id_list)
  return id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TakeAchievementGoalRewardReq::mutable_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TakeAchievementGoalRewardReq.id_list)
  return &id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakeAchievementGoalRewardRsp::kRetcodeFieldNumber;
const int TakeAchievementGoalRewardRsp::kIdListFieldNumber;
const int TakeAchievementGoalRewardRsp::kItemListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakeAchievementGoalRewardRsp::TakeAchievementGoalRewardRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fachievement_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TakeAchievementGoalRewardRsp)
}
TakeAchievementGoalRewardRsp::TakeAchievementGoalRewardRsp(const TakeAchievementGoalRewardRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_list_(from.item_list_),
      id_list_(from.id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.TakeAchievementGoalRewardRsp)
}

void TakeAchievementGoalRewardRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

TakeAchievementGoalRewardRsp::~TakeAchievementGoalRewardRsp() {
  // @@protoc_insertion_point(destructor:proto.TakeAchievementGoalRewardRsp)
  SharedDtor();
}

void TakeAchievementGoalRewardRsp::SharedDtor() {
}

void TakeAchievementGoalRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TakeAchievementGoalRewardRsp::descriptor() {
  protobuf_cmd_2fcmd_5fachievement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fachievement_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakeAchievementGoalRewardRsp& TakeAchievementGoalRewardRsp::default_instance() {
  protobuf_cmd_2fcmd_5fachievement_2eproto::InitDefaults();
  return *internal_default_instance();
}

TakeAchievementGoalRewardRsp* TakeAchievementGoalRewardRsp::New(::google::protobuf::Arena* arena) const {
  TakeAchievementGoalRewardRsp* n = new TakeAchievementGoalRewardRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TakeAchievementGoalRewardRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TakeAchievementGoalRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_list_.Clear();
  id_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool TakeAchievementGoalRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TakeAchievementGoalRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.ItemParam item_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 id_list = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 98u, input, this->mutable_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TakeAchievementGoalRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TakeAchievementGoalRewardRsp)
  return false;
#undef DO_
}

void TakeAchievementGoalRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TakeAchievementGoalRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ItemParam item_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->item_list(static_cast<int>(i)), output);
  }

  // repeated uint32 id_list = 12;
  if (this->id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->id_list(i), output);
  }

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TakeAchievementGoalRewardRsp)
}

::google::protobuf::uint8* TakeAchievementGoalRewardRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TakeAchievementGoalRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ItemParam item_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->item_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 id_list = 12;
  if (this->id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->id_list_, target);
  }

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TakeAchievementGoalRewardRsp)
  return target;
}

size_t TakeAchievementGoalRewardRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TakeAchievementGoalRewardRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ItemParam item_list = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->item_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item_list(static_cast<int>(i)));
    }
  }

  // repeated uint32 id_list = 12;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TakeAchievementGoalRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TakeAchievementGoalRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const TakeAchievementGoalRewardRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakeAchievementGoalRewardRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TakeAchievementGoalRewardRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TakeAchievementGoalRewardRsp)
    MergeFrom(*source);
  }
}

void TakeAchievementGoalRewardRsp::MergeFrom(const TakeAchievementGoalRewardRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TakeAchievementGoalRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_list_.MergeFrom(from.item_list_);
  id_list_.MergeFrom(from.id_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void TakeAchievementGoalRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TakeAchievementGoalRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakeAchievementGoalRewardRsp::CopyFrom(const TakeAchievementGoalRewardRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TakeAchievementGoalRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakeAchievementGoalRewardRsp::IsInitialized() const {
  return true;
}

void TakeAchievementGoalRewardRsp::Swap(TakeAchievementGoalRewardRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakeAchievementGoalRewardRsp::InternalSwap(TakeAchievementGoalRewardRsp* other) {
  using std::swap;
  item_list_.InternalSwap(&other->item_list_);
  id_list_.InternalSwap(&other->id_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TakeAchievementGoalRewardRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fachievement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fachievement_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TakeAchievementGoalRewardRsp

// int32 retcode = 15;
void TakeAchievementGoalRewardRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 TakeAchievementGoalRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TakeAchievementGoalRewardRsp.retcode)
  return retcode_;
}
void TakeAchievementGoalRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeAchievementGoalRewardRsp.retcode)
}

// repeated uint32 id_list = 12;
int TakeAchievementGoalRewardRsp::id_list_size() const {
  return id_list_.size();
}
void TakeAchievementGoalRewardRsp::clear_id_list() {
  id_list_.Clear();
}
::google::protobuf::uint32 TakeAchievementGoalRewardRsp::id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TakeAchievementGoalRewardRsp.id_list)
  return id_list_.Get(index);
}
void TakeAchievementGoalRewardRsp::set_id_list(int index, ::google::protobuf::uint32 value) {
  id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.TakeAchievementGoalRewardRsp.id_list)
}
void TakeAchievementGoalRewardRsp::add_id_list(::google::protobuf::uint32 value) {
  id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.TakeAchievementGoalRewardRsp.id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TakeAchievementGoalRewardRsp::id_list() const {
  // @@protoc_insertion_point(field_list:proto.TakeAchievementGoalRewardRsp.id_list)
  return id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TakeAchievementGoalRewardRsp::mutable_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TakeAchievementGoalRewardRsp.id_list)
  return &id_list_;
}

// repeated .proto.ItemParam item_list = 5;
int TakeAchievementGoalRewardRsp::item_list_size() const {
  return item_list_.size();
}
void TakeAchievementGoalRewardRsp::clear_item_list() {
  item_list_.Clear();
}
const ::proto::ItemParam& TakeAchievementGoalRewardRsp::item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TakeAchievementGoalRewardRsp.item_list)
  return item_list_.Get(index);
}
::proto::ItemParam* TakeAchievementGoalRewardRsp::mutable_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TakeAchievementGoalRewardRsp.item_list)
  return item_list_.Mutable(index);
}
::proto::ItemParam* TakeAchievementGoalRewardRsp::add_item_list() {
  // @@protoc_insertion_point(field_add:proto.TakeAchievementGoalRewardRsp.item_list)
  return item_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
TakeAchievementGoalRewardRsp::mutable_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TakeAchievementGoalRewardRsp.item_list)
  return &item_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
TakeAchievementGoalRewardRsp::item_list() const {
  // @@protoc_insertion_point(field_list:proto.TakeAchievementGoalRewardRsp.item_list)
  return item_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
