// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_region_search.proto

#ifndef PROTOBUF_cmd_2fcmd_5fregion_5fsearch_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5fregion_5fsearch_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class GetRegionSearchReq;
class GetRegionSearchReqDefaultTypeInternal;
extern GetRegionSearchReqDefaultTypeInternal _GetRegionSearchReq_default_instance_;
class RegionSearch;
class RegionSearchDefaultTypeInternal;
extern RegionSearchDefaultTypeInternal _RegionSearch_default_instance_;
class RegionSearchChangeRegionNotify;
class RegionSearchChangeRegionNotifyDefaultTypeInternal;
extern RegionSearchChangeRegionNotifyDefaultTypeInternal _RegionSearchChangeRegionNotify_default_instance_;
class RegionSearchInfo;
class RegionSearchInfoDefaultTypeInternal;
extern RegionSearchInfoDefaultTypeInternal _RegionSearchInfo_default_instance_;
class RegionSearchNotify;
class RegionSearchNotifyDefaultTypeInternal;
extern RegionSearchNotifyDefaultTypeInternal _RegionSearchNotify_default_instance_;
class TakeRegionSearchRewardReq;
class TakeRegionSearchRewardReqDefaultTypeInternal;
extern TakeRegionSearchRewardReqDefaultTypeInternal _TakeRegionSearchRewardReq_default_instance_;
class TakeRegionSearchRewardRsp;
class TakeRegionSearchRewardRspDefaultTypeInternal;
extern TakeRegionSearchRewardRspDefaultTypeInternal _TakeRegionSearchRewardRsp_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto

enum RegionSearchChangeRegionNotify_RegionEvent {
  RegionSearchChangeRegionNotify_RegionEvent_REGION_EVENT_NONE = 0,
  RegionSearchChangeRegionNotify_RegionEvent_REGION_EVENT_ENTER = 1,
  RegionSearchChangeRegionNotify_RegionEvent_REGION_EVENT_LEAVE = 2,
  RegionSearchChangeRegionNotify_RegionEvent_RegionSearchChangeRegionNotify_RegionEvent_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RegionSearchChangeRegionNotify_RegionEvent_RegionSearchChangeRegionNotify_RegionEvent_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RegionSearchChangeRegionNotify_RegionEvent_IsValid(int value);
const RegionSearchChangeRegionNotify_RegionEvent RegionSearchChangeRegionNotify_RegionEvent_RegionEvent_MIN = RegionSearchChangeRegionNotify_RegionEvent_REGION_EVENT_NONE;
const RegionSearchChangeRegionNotify_RegionEvent RegionSearchChangeRegionNotify_RegionEvent_RegionEvent_MAX = RegionSearchChangeRegionNotify_RegionEvent_REGION_EVENT_LEAVE;
const int RegionSearchChangeRegionNotify_RegionEvent_RegionEvent_ARRAYSIZE = RegionSearchChangeRegionNotify_RegionEvent_RegionEvent_MAX + 1;

const ::google::protobuf::EnumDescriptor* RegionSearchChangeRegionNotify_RegionEvent_descriptor();
inline const ::std::string& RegionSearchChangeRegionNotify_RegionEvent_Name(RegionSearchChangeRegionNotify_RegionEvent value) {
  return ::google::protobuf::internal::NameOfEnum(
    RegionSearchChangeRegionNotify_RegionEvent_descriptor(), value);
}
inline bool RegionSearchChangeRegionNotify_RegionEvent_Parse(
    const ::std::string& name, RegionSearchChangeRegionNotify_RegionEvent* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RegionSearchChangeRegionNotify_RegionEvent>(
    RegionSearchChangeRegionNotify_RegionEvent_descriptor(), name, value);
}
// ===================================================================

class RegionSearch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RegionSearch) */ {
 public:
  RegionSearch();
  virtual ~RegionSearch();

  RegionSearch(const RegionSearch& from);

  inline RegionSearch& operator=(const RegionSearch& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegionSearch(RegionSearch&& from) noexcept
    : RegionSearch() {
    *this = ::std::move(from);
  }

  inline RegionSearch& operator=(RegionSearch&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegionSearch& default_instance();

  static inline const RegionSearch* internal_default_instance() {
    return reinterpret_cast<const RegionSearch*>(
               &_RegionSearch_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RegionSearch* other);
  friend void swap(RegionSearch& a, RegionSearch& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegionSearch* New() const PROTOBUF_FINAL { return New(NULL); }

  RegionSearch* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegionSearch& from);
  void MergeFrom(const RegionSearch& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegionSearch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.RegionSearchState state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::proto::RegionSearchState state() const;
  void set_state(::proto::RegionSearchState value);

  // uint32 progress = 5;
  void clear_progress();
  static const int kProgressFieldNumber = 5;
  ::google::protobuf::uint32 progress() const;
  void set_progress(::google::protobuf::uint32 value);

  // uint32 region_search_id = 8;
  void clear_region_search_id();
  static const int kRegionSearchIdFieldNumber = 8;
  ::google::protobuf::uint32 region_search_id() const;
  void set_region_search_id(::google::protobuf::uint32 value);

  // bool is_entered = 13;
  void clear_is_entered();
  static const int kIsEnteredFieldNumber = 13;
  bool is_entered() const;
  void set_is_entered(bool value);

  // @@protoc_insertion_point(class_scope:proto.RegionSearch)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int state_;
  ::google::protobuf::uint32 progress_;
  ::google::protobuf::uint32 region_search_id_;
  bool is_entered_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegionSearchInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RegionSearchInfo) */ {
 public:
  RegionSearchInfo();
  virtual ~RegionSearchInfo();

  RegionSearchInfo(const RegionSearchInfo& from);

  inline RegionSearchInfo& operator=(const RegionSearchInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegionSearchInfo(RegionSearchInfo&& from) noexcept
    : RegionSearchInfo() {
    *this = ::std::move(from);
  }

  inline RegionSearchInfo& operator=(RegionSearchInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegionSearchInfo& default_instance();

  static inline const RegionSearchInfo* internal_default_instance() {
    return reinterpret_cast<const RegionSearchInfo*>(
               &_RegionSearchInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RegionSearchInfo* other);
  friend void swap(RegionSearchInfo& a, RegionSearchInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegionSearchInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  RegionSearchInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegionSearchInfo& from);
  void MergeFrom(const RegionSearchInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegionSearchInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.RegionSearch region_search_list = 1;
  int region_search_list_size() const;
  void clear_region_search_list();
  static const int kRegionSearchListFieldNumber = 1;
  const ::proto::RegionSearch& region_search_list(int index) const;
  ::proto::RegionSearch* mutable_region_search_list(int index);
  ::proto::RegionSearch* add_region_search_list();
  ::google::protobuf::RepeatedPtrField< ::proto::RegionSearch >*
      mutable_region_search_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::RegionSearch >&
      region_search_list() const;

  // uint32 id = 5;
  void clear_id();
  static const int kIdFieldNumber = 5;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // bool is_entered = 7;
  void clear_is_entered();
  static const int kIsEnteredFieldNumber = 7;
  bool is_entered() const;
  void set_is_entered(bool value);

  // @@protoc_insertion_point(class_scope:proto.RegionSearchInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::RegionSearch > region_search_list_;
  ::google::protobuf::uint32 id_;
  bool is_entered_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegionSearchNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RegionSearchNotify) */ {
 public:
  RegionSearchNotify();
  virtual ~RegionSearchNotify();

  RegionSearchNotify(const RegionSearchNotify& from);

  inline RegionSearchNotify& operator=(const RegionSearchNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegionSearchNotify(RegionSearchNotify&& from) noexcept
    : RegionSearchNotify() {
    *this = ::std::move(from);
  }

  inline RegionSearchNotify& operator=(RegionSearchNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegionSearchNotify& default_instance();

  static inline const RegionSearchNotify* internal_default_instance() {
    return reinterpret_cast<const RegionSearchNotify*>(
               &_RegionSearchNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(RegionSearchNotify* other);
  friend void swap(RegionSearchNotify& a, RegionSearchNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegionSearchNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  RegionSearchNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegionSearchNotify& from);
  void MergeFrom(const RegionSearchNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegionSearchNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.RegionSearchInfo region_search_list = 1;
  int region_search_list_size() const;
  void clear_region_search_list();
  static const int kRegionSearchListFieldNumber = 1;
  const ::proto::RegionSearchInfo& region_search_list(int index) const;
  ::proto::RegionSearchInfo* mutable_region_search_list(int index);
  ::proto::RegionSearchInfo* add_region_search_list();
  ::google::protobuf::RepeatedPtrField< ::proto::RegionSearchInfo >*
      mutable_region_search_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::RegionSearchInfo >&
      region_search_list() const;

  // uint32 uid = 8;
  void clear_uid();
  static const int kUidFieldNumber = 8;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.RegionSearchNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::RegionSearchInfo > region_search_list_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegionSearchChangeRegionNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RegionSearchChangeRegionNotify) */ {
 public:
  RegionSearchChangeRegionNotify();
  virtual ~RegionSearchChangeRegionNotify();

  RegionSearchChangeRegionNotify(const RegionSearchChangeRegionNotify& from);

  inline RegionSearchChangeRegionNotify& operator=(const RegionSearchChangeRegionNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegionSearchChangeRegionNotify(RegionSearchChangeRegionNotify&& from) noexcept
    : RegionSearchChangeRegionNotify() {
    *this = ::std::move(from);
  }

  inline RegionSearchChangeRegionNotify& operator=(RegionSearchChangeRegionNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegionSearchChangeRegionNotify& default_instance();

  static inline const RegionSearchChangeRegionNotify* internal_default_instance() {
    return reinterpret_cast<const RegionSearchChangeRegionNotify*>(
               &_RegionSearchChangeRegionNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(RegionSearchChangeRegionNotify* other);
  friend void swap(RegionSearchChangeRegionNotify& a, RegionSearchChangeRegionNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegionSearchChangeRegionNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  RegionSearchChangeRegionNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegionSearchChangeRegionNotify& from);
  void MergeFrom(const RegionSearchChangeRegionNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegionSearchChangeRegionNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RegionSearchChangeRegionNotify_RegionEvent RegionEvent;
  static const RegionEvent REGION_EVENT_NONE =
    RegionSearchChangeRegionNotify_RegionEvent_REGION_EVENT_NONE;
  static const RegionEvent REGION_EVENT_ENTER =
    RegionSearchChangeRegionNotify_RegionEvent_REGION_EVENT_ENTER;
  static const RegionEvent REGION_EVENT_LEAVE =
    RegionSearchChangeRegionNotify_RegionEvent_REGION_EVENT_LEAVE;
  static inline bool RegionEvent_IsValid(int value) {
    return RegionSearchChangeRegionNotify_RegionEvent_IsValid(value);
  }
  static const RegionEvent RegionEvent_MIN =
    RegionSearchChangeRegionNotify_RegionEvent_RegionEvent_MIN;
  static const RegionEvent RegionEvent_MAX =
    RegionSearchChangeRegionNotify_RegionEvent_RegionEvent_MAX;
  static const int RegionEvent_ARRAYSIZE =
    RegionSearchChangeRegionNotify_RegionEvent_RegionEvent_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RegionEvent_descriptor() {
    return RegionSearchChangeRegionNotify_RegionEvent_descriptor();
  }
  static inline const ::std::string& RegionEvent_Name(RegionEvent value) {
    return RegionSearchChangeRegionNotify_RegionEvent_Name(value);
  }
  static inline bool RegionEvent_Parse(const ::std::string& name,
      RegionEvent* value) {
    return RegionSearchChangeRegionNotify_RegionEvent_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.RegionSearchChangeRegionNotify.RegionEvent event = 1;
  void clear_event();
  static const int kEventFieldNumber = 1;
  ::proto::RegionSearchChangeRegionNotify_RegionEvent event() const;
  void set_event(::proto::RegionSearchChangeRegionNotify_RegionEvent value);

  // uint32 region_id = 10;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 10;
  ::google::protobuf::uint32 region_id() const;
  void set_region_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.RegionSearchChangeRegionNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int event_;
  ::google::protobuf::uint32 region_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeRegionSearchRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeRegionSearchRewardReq) */ {
 public:
  TakeRegionSearchRewardReq();
  virtual ~TakeRegionSearchRewardReq();

  TakeRegionSearchRewardReq(const TakeRegionSearchRewardReq& from);

  inline TakeRegionSearchRewardReq& operator=(const TakeRegionSearchRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeRegionSearchRewardReq(TakeRegionSearchRewardReq&& from) noexcept
    : TakeRegionSearchRewardReq() {
    *this = ::std::move(from);
  }

  inline TakeRegionSearchRewardReq& operator=(TakeRegionSearchRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeRegionSearchRewardReq& default_instance();

  static inline const TakeRegionSearchRewardReq* internal_default_instance() {
    return reinterpret_cast<const TakeRegionSearchRewardReq*>(
               &_TakeRegionSearchRewardReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(TakeRegionSearchRewardReq* other);
  friend void swap(TakeRegionSearchRewardReq& a, TakeRegionSearchRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeRegionSearchRewardReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeRegionSearchRewardReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeRegionSearchRewardReq& from);
  void MergeFrom(const TakeRegionSearchRewardReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeRegionSearchRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 search_id = 3;
  void clear_search_id();
  static const int kSearchIdFieldNumber = 3;
  ::google::protobuf::uint32 search_id() const;
  void set_search_id(::google::protobuf::uint32 value);

  // uint32 id = 15;
  void clear_id();
  static const int kIdFieldNumber = 15;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeRegionSearchRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 search_id_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeRegionSearchRewardRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeRegionSearchRewardRsp) */ {
 public:
  TakeRegionSearchRewardRsp();
  virtual ~TakeRegionSearchRewardRsp();

  TakeRegionSearchRewardRsp(const TakeRegionSearchRewardRsp& from);

  inline TakeRegionSearchRewardRsp& operator=(const TakeRegionSearchRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeRegionSearchRewardRsp(TakeRegionSearchRewardRsp&& from) noexcept
    : TakeRegionSearchRewardRsp() {
    *this = ::std::move(from);
  }

  inline TakeRegionSearchRewardRsp& operator=(TakeRegionSearchRewardRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeRegionSearchRewardRsp& default_instance();

  static inline const TakeRegionSearchRewardRsp* internal_default_instance() {
    return reinterpret_cast<const TakeRegionSearchRewardRsp*>(
               &_TakeRegionSearchRewardRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(TakeRegionSearchRewardRsp* other);
  friend void swap(TakeRegionSearchRewardRsp& a, TakeRegionSearchRewardRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeRegionSearchRewardRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeRegionSearchRewardRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeRegionSearchRewardRsp& from);
  void MergeFrom(const TakeRegionSearchRewardRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeRegionSearchRewardRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // int32 retcode = 5;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 5;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 search_id = 14;
  void clear_search_id();
  static const int kSearchIdFieldNumber = 14;
  ::google::protobuf::uint32 search_id() const;
  void set_search_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeRegionSearchRewardRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 search_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetRegionSearchReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetRegionSearchReq) */ {
 public:
  GetRegionSearchReq();
  virtual ~GetRegionSearchReq();

  GetRegionSearchReq(const GetRegionSearchReq& from);

  inline GetRegionSearchReq& operator=(const GetRegionSearchReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetRegionSearchReq(GetRegionSearchReq&& from) noexcept
    : GetRegionSearchReq() {
    *this = ::std::move(from);
  }

  inline GetRegionSearchReq& operator=(GetRegionSearchReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRegionSearchReq& default_instance();

  static inline const GetRegionSearchReq* internal_default_instance() {
    return reinterpret_cast<const GetRegionSearchReq*>(
               &_GetRegionSearchReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(GetRegionSearchReq* other);
  friend void swap(GetRegionSearchReq& a, GetRegionSearchReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRegionSearchReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetRegionSearchReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetRegionSearchReq& from);
  void MergeFrom(const GetRegionSearchReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetRegionSearchReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.GetRegionSearchReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RegionSearch

// bool is_entered = 13;
inline void RegionSearch::clear_is_entered() {
  is_entered_ = false;
}
inline bool RegionSearch::is_entered() const {
  // @@protoc_insertion_point(field_get:proto.RegionSearch.is_entered)
  return is_entered_;
}
inline void RegionSearch::set_is_entered(bool value) {
  
  is_entered_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionSearch.is_entered)
}

// uint32 progress = 5;
inline void RegionSearch::clear_progress() {
  progress_ = 0u;
}
inline ::google::protobuf::uint32 RegionSearch::progress() const {
  // @@protoc_insertion_point(field_get:proto.RegionSearch.progress)
  return progress_;
}
inline void RegionSearch::set_progress(::google::protobuf::uint32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionSearch.progress)
}

// .proto.RegionSearchState state = 2;
inline void RegionSearch::clear_state() {
  state_ = 0;
}
inline ::proto::RegionSearchState RegionSearch::state() const {
  // @@protoc_insertion_point(field_get:proto.RegionSearch.state)
  return static_cast< ::proto::RegionSearchState >(state_);
}
inline void RegionSearch::set_state(::proto::RegionSearchState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionSearch.state)
}

// uint32 region_search_id = 8;
inline void RegionSearch::clear_region_search_id() {
  region_search_id_ = 0u;
}
inline ::google::protobuf::uint32 RegionSearch::region_search_id() const {
  // @@protoc_insertion_point(field_get:proto.RegionSearch.region_search_id)
  return region_search_id_;
}
inline void RegionSearch::set_region_search_id(::google::protobuf::uint32 value) {
  
  region_search_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionSearch.region_search_id)
}

// -------------------------------------------------------------------

// RegionSearchInfo

// uint32 id = 5;
inline void RegionSearchInfo::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 RegionSearchInfo::id() const {
  // @@protoc_insertion_point(field_get:proto.RegionSearchInfo.id)
  return id_;
}
inline void RegionSearchInfo::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionSearchInfo.id)
}

// repeated .proto.RegionSearch region_search_list = 1;
inline int RegionSearchInfo::region_search_list_size() const {
  return region_search_list_.size();
}
inline void RegionSearchInfo::clear_region_search_list() {
  region_search_list_.Clear();
}
inline const ::proto::RegionSearch& RegionSearchInfo::region_search_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.RegionSearchInfo.region_search_list)
  return region_search_list_.Get(index);
}
inline ::proto::RegionSearch* RegionSearchInfo::mutable_region_search_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.RegionSearchInfo.region_search_list)
  return region_search_list_.Mutable(index);
}
inline ::proto::RegionSearch* RegionSearchInfo::add_region_search_list() {
  // @@protoc_insertion_point(field_add:proto.RegionSearchInfo.region_search_list)
  return region_search_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::RegionSearch >*
RegionSearchInfo::mutable_region_search_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.RegionSearchInfo.region_search_list)
  return &region_search_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::RegionSearch >&
RegionSearchInfo::region_search_list() const {
  // @@protoc_insertion_point(field_list:proto.RegionSearchInfo.region_search_list)
  return region_search_list_;
}

// bool is_entered = 7;
inline void RegionSearchInfo::clear_is_entered() {
  is_entered_ = false;
}
inline bool RegionSearchInfo::is_entered() const {
  // @@protoc_insertion_point(field_get:proto.RegionSearchInfo.is_entered)
  return is_entered_;
}
inline void RegionSearchInfo::set_is_entered(bool value) {
  
  is_entered_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionSearchInfo.is_entered)
}

// -------------------------------------------------------------------

// RegionSearchNotify

// repeated .proto.RegionSearchInfo region_search_list = 1;
inline int RegionSearchNotify::region_search_list_size() const {
  return region_search_list_.size();
}
inline void RegionSearchNotify::clear_region_search_list() {
  region_search_list_.Clear();
}
inline const ::proto::RegionSearchInfo& RegionSearchNotify::region_search_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.RegionSearchNotify.region_search_list)
  return region_search_list_.Get(index);
}
inline ::proto::RegionSearchInfo* RegionSearchNotify::mutable_region_search_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.RegionSearchNotify.region_search_list)
  return region_search_list_.Mutable(index);
}
inline ::proto::RegionSearchInfo* RegionSearchNotify::add_region_search_list() {
  // @@protoc_insertion_point(field_add:proto.RegionSearchNotify.region_search_list)
  return region_search_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::RegionSearchInfo >*
RegionSearchNotify::mutable_region_search_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.RegionSearchNotify.region_search_list)
  return &region_search_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::RegionSearchInfo >&
RegionSearchNotify::region_search_list() const {
  // @@protoc_insertion_point(field_list:proto.RegionSearchNotify.region_search_list)
  return region_search_list_;
}

// uint32 uid = 8;
inline void RegionSearchNotify::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 RegionSearchNotify::uid() const {
  // @@protoc_insertion_point(field_get:proto.RegionSearchNotify.uid)
  return uid_;
}
inline void RegionSearchNotify::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionSearchNotify.uid)
}

// -------------------------------------------------------------------

// RegionSearchChangeRegionNotify

// .proto.RegionSearchChangeRegionNotify.RegionEvent event = 1;
inline void RegionSearchChangeRegionNotify::clear_event() {
  event_ = 0;
}
inline ::proto::RegionSearchChangeRegionNotify_RegionEvent RegionSearchChangeRegionNotify::event() const {
  // @@protoc_insertion_point(field_get:proto.RegionSearchChangeRegionNotify.event)
  return static_cast< ::proto::RegionSearchChangeRegionNotify_RegionEvent >(event_);
}
inline void RegionSearchChangeRegionNotify::set_event(::proto::RegionSearchChangeRegionNotify_RegionEvent value) {
  
  event_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionSearchChangeRegionNotify.event)
}

// uint32 region_id = 10;
inline void RegionSearchChangeRegionNotify::clear_region_id() {
  region_id_ = 0u;
}
inline ::google::protobuf::uint32 RegionSearchChangeRegionNotify::region_id() const {
  // @@protoc_insertion_point(field_get:proto.RegionSearchChangeRegionNotify.region_id)
  return region_id_;
}
inline void RegionSearchChangeRegionNotify::set_region_id(::google::protobuf::uint32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionSearchChangeRegionNotify.region_id)
}

// -------------------------------------------------------------------

// TakeRegionSearchRewardReq

// uint32 search_id = 3;
inline void TakeRegionSearchRewardReq::clear_search_id() {
  search_id_ = 0u;
}
inline ::google::protobuf::uint32 TakeRegionSearchRewardReq::search_id() const {
  // @@protoc_insertion_point(field_get:proto.TakeRegionSearchRewardReq.search_id)
  return search_id_;
}
inline void TakeRegionSearchRewardReq::set_search_id(::google::protobuf::uint32 value) {
  
  search_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeRegionSearchRewardReq.search_id)
}

// uint32 id = 15;
inline void TakeRegionSearchRewardReq::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 TakeRegionSearchRewardReq::id() const {
  // @@protoc_insertion_point(field_get:proto.TakeRegionSearchRewardReq.id)
  return id_;
}
inline void TakeRegionSearchRewardReq::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeRegionSearchRewardReq.id)
}

// -------------------------------------------------------------------

// TakeRegionSearchRewardRsp

// uint32 search_id = 14;
inline void TakeRegionSearchRewardRsp::clear_search_id() {
  search_id_ = 0u;
}
inline ::google::protobuf::uint32 TakeRegionSearchRewardRsp::search_id() const {
  // @@protoc_insertion_point(field_get:proto.TakeRegionSearchRewardRsp.search_id)
  return search_id_;
}
inline void TakeRegionSearchRewardRsp::set_search_id(::google::protobuf::uint32 value) {
  
  search_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeRegionSearchRewardRsp.search_id)
}

// uint32 id = 1;
inline void TakeRegionSearchRewardRsp::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 TakeRegionSearchRewardRsp::id() const {
  // @@protoc_insertion_point(field_get:proto.TakeRegionSearchRewardRsp.id)
  return id_;
}
inline void TakeRegionSearchRewardRsp::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeRegionSearchRewardRsp.id)
}

// int32 retcode = 5;
inline void TakeRegionSearchRewardRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 TakeRegionSearchRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TakeRegionSearchRewardRsp.retcode)
  return retcode_;
}
inline void TakeRegionSearchRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeRegionSearchRewardRsp.retcode)
}

// -------------------------------------------------------------------

// GetRegionSearchReq

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::RegionSearchChangeRegionNotify_RegionEvent> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::RegionSearchChangeRegionNotify_RegionEvent>() {
  return ::proto::RegionSearchChangeRegionNotify_RegionEvent_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5fregion_5fsearch_2eproto__INCLUDED
