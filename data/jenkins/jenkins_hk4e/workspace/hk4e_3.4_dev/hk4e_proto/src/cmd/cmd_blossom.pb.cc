// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_blossom.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_blossom.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class BlossomBriefInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BlossomBriefInfo>
     _instance;
} _BlossomBriefInfo_default_instance_;
class GetBlossomBriefInfoListReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetBlossomBriefInfoListReq>
     _instance;
} _GetBlossomBriefInfoListReq_default_instance_;
class GetBlossomBriefInfoListRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetBlossomBriefInfoListRsp>
     _instance;
} _GetBlossomBriefInfoListRsp_default_instance_;
class BlossomBriefInfoNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BlossomBriefInfoNotify>
     _instance;
} _BlossomBriefInfoNotify_default_instance_;
class WorldOwnerBlossomBriefInfoNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WorldOwnerBlossomBriefInfoNotify>
     _instance;
} _WorldOwnerBlossomBriefInfoNotify_default_instance_;
class BlossomScheduleInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BlossomScheduleInfo>
     _instance;
} _BlossomScheduleInfo_default_instance_;
class WorldOwnerBlossomScheduleInfoNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WorldOwnerBlossomScheduleInfoNotify>
     _instance;
} _WorldOwnerBlossomScheduleInfoNotify_default_instance_;
class BlossomChestCreateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BlossomChestCreateNotify>
     _instance;
} _BlossomChestCreateNotify_default_instance_;
class OpenBlossomCircleCampGuideNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OpenBlossomCircleCampGuideNotify>
     _instance;
} _OpenBlossomCircleCampGuideNotify_default_instance_;

namespace protobuf_cmd_2fcmd_5fblossom_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomBriefInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomBriefInfo, refresh_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomBriefInfo, reward_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomBriefInfo, city_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomBriefInfo, resin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomBriefInfo, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomBriefInfo, is_guide_opened_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomBriefInfo, monster_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomBriefInfo, circle_camp_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomBriefInfo, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomBriefInfo, scene_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBlossomBriefInfoListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBlossomBriefInfoListReq, city_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBlossomBriefInfoListRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBlossomBriefInfoListRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBlossomBriefInfoListRsp, brief_info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomBriefInfoNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomBriefInfoNotify, brief_info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldOwnerBlossomBriefInfoNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldOwnerBlossomBriefInfoNotify, brief_info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomScheduleInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomScheduleInfo, progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomScheduleInfo, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomScheduleInfo, round_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomScheduleInfo, circle_camp_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomScheduleInfo, refresh_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomScheduleInfo, finish_progress_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldOwnerBlossomScheduleInfoNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldOwnerBlossomScheduleInfoNotify, schedule_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomChestCreateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomChestCreateNotify, refresh_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomChestCreateNotify, circle_camp_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenBlossomCircleCampGuideNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenBlossomCircleCampGuideNotify, refresh_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenBlossomCircleCampGuideNotify, circle_camp_id_list_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(BlossomBriefInfo)},
  { 15, -1, sizeof(GetBlossomBriefInfoListReq)},
  { 21, -1, sizeof(GetBlossomBriefInfoListRsp)},
  { 28, -1, sizeof(BlossomBriefInfoNotify)},
  { 34, -1, sizeof(WorldOwnerBlossomBriefInfoNotify)},
  { 40, -1, sizeof(BlossomScheduleInfo)},
  { 51, -1, sizeof(WorldOwnerBlossomScheduleInfoNotify)},
  { 57, -1, sizeof(BlossomChestCreateNotify)},
  { 64, -1, sizeof(OpenBlossomCircleCampGuideNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlossomBriefInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetBlossomBriefInfoListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetBlossomBriefInfoListRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlossomBriefInfoNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WorldOwnerBlossomBriefInfoNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlossomScheduleInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WorldOwnerBlossomScheduleInfoNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlossomChestCreateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OpenBlossomCircleCampGuideNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_blossom.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _BlossomBriefInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BlossomBriefInfo_default_instance_);_GetBlossomBriefInfoListReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetBlossomBriefInfoListReq_default_instance_);_GetBlossomBriefInfoListRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetBlossomBriefInfoListRsp_default_instance_);_BlossomBriefInfoNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BlossomBriefInfoNotify_default_instance_);_WorldOwnerBlossomBriefInfoNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WorldOwnerBlossomBriefInfoNotify_default_instance_);_BlossomScheduleInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BlossomScheduleInfo_default_instance_);_WorldOwnerBlossomScheduleInfoNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WorldOwnerBlossomScheduleInfoNotify_default_instance_);_BlossomChestCreateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BlossomChestCreateNotify_default_instance_);_OpenBlossomCircleCampGuideNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OpenBlossomCircleCampGuideNotify_default_instance_);_BlossomBriefInfo_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _WorldOwnerBlossomScheduleInfoNotify_default_instance_._instance.get_mutable()->schedule_info_ = const_cast< ::proto::BlossomScheduleInfo*>(
      ::proto::BlossomScheduleInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025cmd/cmd_blossom.proto\022\005proto\032\014define.p"
      "roto\"\336\001\n\020BlossomBriefInfo\022\022\n\nrefresh_id\030"
      "\r \001(\r\022\021\n\treward_id\030\005 \001(\r\022\017\n\007city_id\030\n \001("
      "\r\022\r\n\005resin\030\013 \001(\r\022\r\n\005state\030\007 \001(\r\022\027\n\017is_gu"
      "ide_opened\030\001 \001(\010\022\025\n\rmonster_level\030\010 \001(\r\022"
      "\026\n\016circle_camp_id\030\017 \001(\r\022\032\n\003pos\030\014 \001(\0132\r.p"
      "roto.Vector\022\020\n\010scene_id\030\t \001(\r\"2\n\032GetBlos"
      "somBriefInfoListReq\022\024\n\014city_id_list\030\004 \003("
      "\r\"_\n\032GetBlossomBriefInfoListRsp\022\017\n\007retco"
      "de\030\014 \001(\005\0220\n\017brief_info_list\030\013 \003(\0132\027.prot"
      "o.BlossomBriefInfo\"J\n\026BlossomBriefInfoNo"
      "tify\0220\n\017brief_info_list\030\004 \003(\0132\027.proto.Bl"
      "ossomBriefInfo\"T\n WorldOwnerBlossomBrief"
      "InfoNotify\0220\n\017brief_info_list\030\r \003(\0132\027.pr"
      "oto.BlossomBriefInfo\"\212\001\n\023BlossomSchedule"
      "Info\022\020\n\010progress\030\r \001(\r\022\r\n\005state\030\n \001(\r\022\r\n"
      "\005round\030\004 \001(\r\022\026\n\016circle_camp_id\030\017 \001(\r\022\022\n\n"
      "refresh_id\030\006 \001(\r\022\027\n\017finish_progress\030\016 \001("
      "\r\"X\n#WorldOwnerBlossomScheduleInfoNotify"
      "\0221\n\rschedule_info\030\003 \001(\0132\032.proto.BlossomS"
      "cheduleInfo\"F\n\030BlossomChestCreateNotify\022"
      "\022\n\nrefresh_id\030\001 \001(\r\022\026\n\016circle_camp_id\030\n "
      "\001(\r\"S\n OpenBlossomCircleCampGuideNotify\022"
      "\022\n\nrefresh_id\030\007 \001(\r\022\033\n\023circle_camp_id_li"
      "st\030\013 \003(\r*\213\001\n\024BlossomScheduleState\022\031\n\025BLO"
      "SSOM_SCHEDULE_NONE\020\000\022\031\n\025BLOSSOM_SCHEDULE"
      "_INIT\020\001\022 \n\034BLOSSOM_SCHEDULE_IN_PROGRESS\020"
      "\002\022\033\n\027BLOSSOM_SCHEDULE_REWARD\020\003B(Z&github"
      ".com/teyvat-helper/hk4e-proto/pbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1160);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_blossom.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5fblossom_2eproto

const ::google::protobuf::EnumDescriptor* BlossomScheduleState_descriptor() {
  protobuf_cmd_2fcmd_5fblossom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fblossom_2eproto::file_level_enum_descriptors[0];
}
bool BlossomScheduleState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlossomBriefInfo::kRefreshIdFieldNumber;
const int BlossomBriefInfo::kRewardIdFieldNumber;
const int BlossomBriefInfo::kCityIdFieldNumber;
const int BlossomBriefInfo::kResinFieldNumber;
const int BlossomBriefInfo::kStateFieldNumber;
const int BlossomBriefInfo::kIsGuideOpenedFieldNumber;
const int BlossomBriefInfo::kMonsterLevelFieldNumber;
const int BlossomBriefInfo::kCircleCampIdFieldNumber;
const int BlossomBriefInfo::kPosFieldNumber;
const int BlossomBriefInfo::kSceneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlossomBriefInfo::BlossomBriefInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fblossom_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BlossomBriefInfo)
}
BlossomBriefInfo::BlossomBriefInfo(const BlossomBriefInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  ::memcpy(&is_guide_opened_, &from.is_guide_opened_,
    static_cast<size_t>(reinterpret_cast<char*>(&refresh_id_) -
    reinterpret_cast<char*>(&is_guide_opened_)) + sizeof(refresh_id_));
  // @@protoc_insertion_point(copy_constructor:proto.BlossomBriefInfo)
}

void BlossomBriefInfo::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&refresh_id_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(refresh_id_));
  _cached_size_ = 0;
}

BlossomBriefInfo::~BlossomBriefInfo() {
  // @@protoc_insertion_point(destructor:proto.BlossomBriefInfo)
  SharedDtor();
}

void BlossomBriefInfo::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
}

void BlossomBriefInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlossomBriefInfo::descriptor() {
  protobuf_cmd_2fcmd_5fblossom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fblossom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlossomBriefInfo& BlossomBriefInfo::default_instance() {
  protobuf_cmd_2fcmd_5fblossom_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlossomBriefInfo* BlossomBriefInfo::New(::google::protobuf::Arena* arena) const {
  BlossomBriefInfo* n = new BlossomBriefInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlossomBriefInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BlossomBriefInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  ::memset(&is_guide_opened_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&refresh_id_) -
      reinterpret_cast<char*>(&is_guide_opened_)) + sizeof(refresh_id_));
  _internal_metadata_.Clear();
}

bool BlossomBriefInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BlossomBriefInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_guide_opened = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_guide_opened_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reward_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reward_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 state = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 monster_level = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &monster_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 city_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &city_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 resin = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &resin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector pos = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 refresh_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &refresh_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 circle_camp_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &circle_camp_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BlossomBriefInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BlossomBriefInfo)
  return false;
#undef DO_
}

void BlossomBriefInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BlossomBriefInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_guide_opened = 1;
  if (this->is_guide_opened() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_guide_opened(), output);
  }

  // uint32 reward_id = 5;
  if (this->reward_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->reward_id(), output);
  }

  // uint32 state = 7;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->state(), output);
  }

  // uint32 monster_level = 8;
  if (this->monster_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->monster_level(), output);
  }

  // uint32 scene_id = 9;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->scene_id(), output);
  }

  // uint32 city_id = 10;
  if (this->city_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->city_id(), output);
  }

  // uint32 resin = 11;
  if (this->resin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->resin(), output);
  }

  // .proto.Vector pos = 12;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->pos_, output);
  }

  // uint32 refresh_id = 13;
  if (this->refresh_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->refresh_id(), output);
  }

  // uint32 circle_camp_id = 15;
  if (this->circle_camp_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->circle_camp_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BlossomBriefInfo)
}

::google::protobuf::uint8* BlossomBriefInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BlossomBriefInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_guide_opened = 1;
  if (this->is_guide_opened() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_guide_opened(), target);
  }

  // uint32 reward_id = 5;
  if (this->reward_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->reward_id(), target);
  }

  // uint32 state = 7;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->state(), target);
  }

  // uint32 monster_level = 8;
  if (this->monster_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->monster_level(), target);
  }

  // uint32 scene_id = 9;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->scene_id(), target);
  }

  // uint32 city_id = 10;
  if (this->city_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->city_id(), target);
  }

  // uint32 resin = 11;
  if (this->resin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->resin(), target);
  }

  // .proto.Vector pos = 12;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->pos_, deterministic, target);
  }

  // uint32 refresh_id = 13;
  if (this->refresh_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->refresh_id(), target);
  }

  // uint32 circle_camp_id = 15;
  if (this->circle_camp_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->circle_camp_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BlossomBriefInfo)
  return target;
}

size_t BlossomBriefInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BlossomBriefInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector pos = 12;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // bool is_guide_opened = 1;
  if (this->is_guide_opened() != 0) {
    total_size += 1 + 1;
  }

  // uint32 reward_id = 5;
  if (this->reward_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reward_id());
  }

  // uint32 state = 7;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  // uint32 monster_level = 8;
  if (this->monster_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->monster_level());
  }

  // uint32 scene_id = 9;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 city_id = 10;
  if (this->city_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->city_id());
  }

  // uint32 circle_camp_id = 15;
  if (this->circle_camp_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->circle_camp_id());
  }

  // uint32 resin = 11;
  if (this->resin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->resin());
  }

  // uint32 refresh_id = 13;
  if (this->refresh_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->refresh_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlossomBriefInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BlossomBriefInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BlossomBriefInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlossomBriefInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BlossomBriefInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BlossomBriefInfo)
    MergeFrom(*source);
  }
}

void BlossomBriefInfo::MergeFrom(const BlossomBriefInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BlossomBriefInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
  if (from.is_guide_opened() != 0) {
    set_is_guide_opened(from.is_guide_opened());
  }
  if (from.reward_id() != 0) {
    set_reward_id(from.reward_id());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.monster_level() != 0) {
    set_monster_level(from.monster_level());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.city_id() != 0) {
    set_city_id(from.city_id());
  }
  if (from.circle_camp_id() != 0) {
    set_circle_camp_id(from.circle_camp_id());
  }
  if (from.resin() != 0) {
    set_resin(from.resin());
  }
  if (from.refresh_id() != 0) {
    set_refresh_id(from.refresh_id());
  }
}

void BlossomBriefInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BlossomBriefInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlossomBriefInfo::CopyFrom(const BlossomBriefInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BlossomBriefInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlossomBriefInfo::IsInitialized() const {
  return true;
}

void BlossomBriefInfo::Swap(BlossomBriefInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlossomBriefInfo::InternalSwap(BlossomBriefInfo* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(is_guide_opened_, other->is_guide_opened_);
  swap(reward_id_, other->reward_id_);
  swap(state_, other->state_);
  swap(monster_level_, other->monster_level_);
  swap(scene_id_, other->scene_id_);
  swap(city_id_, other->city_id_);
  swap(circle_camp_id_, other->circle_camp_id_);
  swap(resin_, other->resin_);
  swap(refresh_id_, other->refresh_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlossomBriefInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fblossom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fblossom_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlossomBriefInfo

// uint32 refresh_id = 13;
void BlossomBriefInfo::clear_refresh_id() {
  refresh_id_ = 0u;
}
::google::protobuf::uint32 BlossomBriefInfo::refresh_id() const {
  // @@protoc_insertion_point(field_get:proto.BlossomBriefInfo.refresh_id)
  return refresh_id_;
}
void BlossomBriefInfo::set_refresh_id(::google::protobuf::uint32 value) {
  
  refresh_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomBriefInfo.refresh_id)
}

// uint32 reward_id = 5;
void BlossomBriefInfo::clear_reward_id() {
  reward_id_ = 0u;
}
::google::protobuf::uint32 BlossomBriefInfo::reward_id() const {
  // @@protoc_insertion_point(field_get:proto.BlossomBriefInfo.reward_id)
  return reward_id_;
}
void BlossomBriefInfo::set_reward_id(::google::protobuf::uint32 value) {
  
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomBriefInfo.reward_id)
}

// uint32 city_id = 10;
void BlossomBriefInfo::clear_city_id() {
  city_id_ = 0u;
}
::google::protobuf::uint32 BlossomBriefInfo::city_id() const {
  // @@protoc_insertion_point(field_get:proto.BlossomBriefInfo.city_id)
  return city_id_;
}
void BlossomBriefInfo::set_city_id(::google::protobuf::uint32 value) {
  
  city_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomBriefInfo.city_id)
}

// uint32 resin = 11;
void BlossomBriefInfo::clear_resin() {
  resin_ = 0u;
}
::google::protobuf::uint32 BlossomBriefInfo::resin() const {
  // @@protoc_insertion_point(field_get:proto.BlossomBriefInfo.resin)
  return resin_;
}
void BlossomBriefInfo::set_resin(::google::protobuf::uint32 value) {
  
  resin_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomBriefInfo.resin)
}

// uint32 state = 7;
void BlossomBriefInfo::clear_state() {
  state_ = 0u;
}
::google::protobuf::uint32 BlossomBriefInfo::state() const {
  // @@protoc_insertion_point(field_get:proto.BlossomBriefInfo.state)
  return state_;
}
void BlossomBriefInfo::set_state(::google::protobuf::uint32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomBriefInfo.state)
}

// bool is_guide_opened = 1;
void BlossomBriefInfo::clear_is_guide_opened() {
  is_guide_opened_ = false;
}
bool BlossomBriefInfo::is_guide_opened() const {
  // @@protoc_insertion_point(field_get:proto.BlossomBriefInfo.is_guide_opened)
  return is_guide_opened_;
}
void BlossomBriefInfo::set_is_guide_opened(bool value) {
  
  is_guide_opened_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomBriefInfo.is_guide_opened)
}

// uint32 monster_level = 8;
void BlossomBriefInfo::clear_monster_level() {
  monster_level_ = 0u;
}
::google::protobuf::uint32 BlossomBriefInfo::monster_level() const {
  // @@protoc_insertion_point(field_get:proto.BlossomBriefInfo.monster_level)
  return monster_level_;
}
void BlossomBriefInfo::set_monster_level(::google::protobuf::uint32 value) {
  
  monster_level_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomBriefInfo.monster_level)
}

// uint32 circle_camp_id = 15;
void BlossomBriefInfo::clear_circle_camp_id() {
  circle_camp_id_ = 0u;
}
::google::protobuf::uint32 BlossomBriefInfo::circle_camp_id() const {
  // @@protoc_insertion_point(field_get:proto.BlossomBriefInfo.circle_camp_id)
  return circle_camp_id_;
}
void BlossomBriefInfo::set_circle_camp_id(::google::protobuf::uint32 value) {
  
  circle_camp_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomBriefInfo.circle_camp_id)
}

// .proto.Vector pos = 12;
bool BlossomBriefInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void BlossomBriefInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& BlossomBriefInfo::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.BlossomBriefInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* BlossomBriefInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.BlossomBriefInfo.pos)
  return pos_;
}
::proto::Vector* BlossomBriefInfo::release_pos() {
  // @@protoc_insertion_point(field_release:proto.BlossomBriefInfo.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void BlossomBriefInfo::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.BlossomBriefInfo.pos)
}

// uint32 scene_id = 9;
void BlossomBriefInfo::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 BlossomBriefInfo::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.BlossomBriefInfo.scene_id)
  return scene_id_;
}
void BlossomBriefInfo::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomBriefInfo.scene_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBlossomBriefInfoListReq::kCityIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBlossomBriefInfoListReq::GetBlossomBriefInfoListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fblossom_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetBlossomBriefInfoListReq)
}
GetBlossomBriefInfoListReq::GetBlossomBriefInfoListReq(const GetBlossomBriefInfoListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      city_id_list_(from.city_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GetBlossomBriefInfoListReq)
}

void GetBlossomBriefInfoListReq::SharedCtor() {
  _cached_size_ = 0;
}

GetBlossomBriefInfoListReq::~GetBlossomBriefInfoListReq() {
  // @@protoc_insertion_point(destructor:proto.GetBlossomBriefInfoListReq)
  SharedDtor();
}

void GetBlossomBriefInfoListReq::SharedDtor() {
}

void GetBlossomBriefInfoListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBlossomBriefInfoListReq::descriptor() {
  protobuf_cmd_2fcmd_5fblossom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fblossom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBlossomBriefInfoListReq& GetBlossomBriefInfoListReq::default_instance() {
  protobuf_cmd_2fcmd_5fblossom_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetBlossomBriefInfoListReq* GetBlossomBriefInfoListReq::New(::google::protobuf::Arena* arena) const {
  GetBlossomBriefInfoListReq* n = new GetBlossomBriefInfoListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBlossomBriefInfoListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetBlossomBriefInfoListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  city_id_list_.Clear();
  _internal_metadata_.Clear();
}

bool GetBlossomBriefInfoListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetBlossomBriefInfoListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 city_id_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_city_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_city_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetBlossomBriefInfoListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetBlossomBriefInfoListReq)
  return false;
#undef DO_
}

void GetBlossomBriefInfoListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetBlossomBriefInfoListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 city_id_list = 4;
  if (this->city_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _city_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->city_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->city_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetBlossomBriefInfoListReq)
}

::google::protobuf::uint8* GetBlossomBriefInfoListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetBlossomBriefInfoListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 city_id_list = 4;
  if (this->city_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _city_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->city_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetBlossomBriefInfoListReq)
  return target;
}

size_t GetBlossomBriefInfoListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetBlossomBriefInfoListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 city_id_list = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->city_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _city_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBlossomBriefInfoListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetBlossomBriefInfoListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBlossomBriefInfoListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBlossomBriefInfoListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetBlossomBriefInfoListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetBlossomBriefInfoListReq)
    MergeFrom(*source);
  }
}

void GetBlossomBriefInfoListReq::MergeFrom(const GetBlossomBriefInfoListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetBlossomBriefInfoListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  city_id_list_.MergeFrom(from.city_id_list_);
}

void GetBlossomBriefInfoListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetBlossomBriefInfoListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBlossomBriefInfoListReq::CopyFrom(const GetBlossomBriefInfoListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetBlossomBriefInfoListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlossomBriefInfoListReq::IsInitialized() const {
  return true;
}

void GetBlossomBriefInfoListReq::Swap(GetBlossomBriefInfoListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBlossomBriefInfoListReq::InternalSwap(GetBlossomBriefInfoListReq* other) {
  using std::swap;
  city_id_list_.InternalSwap(&other->city_id_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBlossomBriefInfoListReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fblossom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fblossom_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBlossomBriefInfoListReq

// repeated uint32 city_id_list = 4;
int GetBlossomBriefInfoListReq::city_id_list_size() const {
  return city_id_list_.size();
}
void GetBlossomBriefInfoListReq::clear_city_id_list() {
  city_id_list_.Clear();
}
::google::protobuf::uint32 GetBlossomBriefInfoListReq::city_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetBlossomBriefInfoListReq.city_id_list)
  return city_id_list_.Get(index);
}
void GetBlossomBriefInfoListReq::set_city_id_list(int index, ::google::protobuf::uint32 value) {
  city_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetBlossomBriefInfoListReq.city_id_list)
}
void GetBlossomBriefInfoListReq::add_city_id_list(::google::protobuf::uint32 value) {
  city_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetBlossomBriefInfoListReq.city_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetBlossomBriefInfoListReq::city_id_list() const {
  // @@protoc_insertion_point(field_list:proto.GetBlossomBriefInfoListReq.city_id_list)
  return city_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetBlossomBriefInfoListReq::mutable_city_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetBlossomBriefInfoListReq.city_id_list)
  return &city_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBlossomBriefInfoListRsp::kRetcodeFieldNumber;
const int GetBlossomBriefInfoListRsp::kBriefInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBlossomBriefInfoListRsp::GetBlossomBriefInfoListRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fblossom_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetBlossomBriefInfoListRsp)
}
GetBlossomBriefInfoListRsp::GetBlossomBriefInfoListRsp(const GetBlossomBriefInfoListRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      brief_info_list_(from.brief_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GetBlossomBriefInfoListRsp)
}

void GetBlossomBriefInfoListRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

GetBlossomBriefInfoListRsp::~GetBlossomBriefInfoListRsp() {
  // @@protoc_insertion_point(destructor:proto.GetBlossomBriefInfoListRsp)
  SharedDtor();
}

void GetBlossomBriefInfoListRsp::SharedDtor() {
}

void GetBlossomBriefInfoListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBlossomBriefInfoListRsp::descriptor() {
  protobuf_cmd_2fcmd_5fblossom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fblossom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBlossomBriefInfoListRsp& GetBlossomBriefInfoListRsp::default_instance() {
  protobuf_cmd_2fcmd_5fblossom_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetBlossomBriefInfoListRsp* GetBlossomBriefInfoListRsp::New(::google::protobuf::Arena* arena) const {
  GetBlossomBriefInfoListRsp* n = new GetBlossomBriefInfoListRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBlossomBriefInfoListRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetBlossomBriefInfoListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  brief_info_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool GetBlossomBriefInfoListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetBlossomBriefInfoListRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.BlossomBriefInfo brief_info_list = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_brief_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetBlossomBriefInfoListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetBlossomBriefInfoListRsp)
  return false;
#undef DO_
}

void GetBlossomBriefInfoListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetBlossomBriefInfoListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.BlossomBriefInfo brief_info_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->brief_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->brief_info_list(static_cast<int>(i)), output);
  }

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetBlossomBriefInfoListRsp)
}

::google::protobuf::uint8* GetBlossomBriefInfoListRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetBlossomBriefInfoListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.BlossomBriefInfo brief_info_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->brief_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->brief_info_list(static_cast<int>(i)), deterministic, target);
  }

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetBlossomBriefInfoListRsp)
  return target;
}

size_t GetBlossomBriefInfoListRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetBlossomBriefInfoListRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.BlossomBriefInfo brief_info_list = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->brief_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->brief_info_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBlossomBriefInfoListRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetBlossomBriefInfoListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBlossomBriefInfoListRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBlossomBriefInfoListRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetBlossomBriefInfoListRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetBlossomBriefInfoListRsp)
    MergeFrom(*source);
  }
}

void GetBlossomBriefInfoListRsp::MergeFrom(const GetBlossomBriefInfoListRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetBlossomBriefInfoListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  brief_info_list_.MergeFrom(from.brief_info_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetBlossomBriefInfoListRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetBlossomBriefInfoListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBlossomBriefInfoListRsp::CopyFrom(const GetBlossomBriefInfoListRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetBlossomBriefInfoListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlossomBriefInfoListRsp::IsInitialized() const {
  return true;
}

void GetBlossomBriefInfoListRsp::Swap(GetBlossomBriefInfoListRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBlossomBriefInfoListRsp::InternalSwap(GetBlossomBriefInfoListRsp* other) {
  using std::swap;
  brief_info_list_.InternalSwap(&other->brief_info_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBlossomBriefInfoListRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fblossom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fblossom_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBlossomBriefInfoListRsp

// int32 retcode = 12;
void GetBlossomBriefInfoListRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetBlossomBriefInfoListRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetBlossomBriefInfoListRsp.retcode)
  return retcode_;
}
void GetBlossomBriefInfoListRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetBlossomBriefInfoListRsp.retcode)
}

// repeated .proto.BlossomBriefInfo brief_info_list = 11;
int GetBlossomBriefInfoListRsp::brief_info_list_size() const {
  return brief_info_list_.size();
}
void GetBlossomBriefInfoListRsp::clear_brief_info_list() {
  brief_info_list_.Clear();
}
const ::proto::BlossomBriefInfo& GetBlossomBriefInfoListRsp::brief_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetBlossomBriefInfoListRsp.brief_info_list)
  return brief_info_list_.Get(index);
}
::proto::BlossomBriefInfo* GetBlossomBriefInfoListRsp::mutable_brief_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetBlossomBriefInfoListRsp.brief_info_list)
  return brief_info_list_.Mutable(index);
}
::proto::BlossomBriefInfo* GetBlossomBriefInfoListRsp::add_brief_info_list() {
  // @@protoc_insertion_point(field_add:proto.GetBlossomBriefInfoListRsp.brief_info_list)
  return brief_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::BlossomBriefInfo >*
GetBlossomBriefInfoListRsp::mutable_brief_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetBlossomBriefInfoListRsp.brief_info_list)
  return &brief_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::BlossomBriefInfo >&
GetBlossomBriefInfoListRsp::brief_info_list() const {
  // @@protoc_insertion_point(field_list:proto.GetBlossomBriefInfoListRsp.brief_info_list)
  return brief_info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlossomBriefInfoNotify::kBriefInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlossomBriefInfoNotify::BlossomBriefInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fblossom_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BlossomBriefInfoNotify)
}
BlossomBriefInfoNotify::BlossomBriefInfoNotify(const BlossomBriefInfoNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      brief_info_list_(from.brief_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.BlossomBriefInfoNotify)
}

void BlossomBriefInfoNotify::SharedCtor() {
  _cached_size_ = 0;
}

BlossomBriefInfoNotify::~BlossomBriefInfoNotify() {
  // @@protoc_insertion_point(destructor:proto.BlossomBriefInfoNotify)
  SharedDtor();
}

void BlossomBriefInfoNotify::SharedDtor() {
}

void BlossomBriefInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlossomBriefInfoNotify::descriptor() {
  protobuf_cmd_2fcmd_5fblossom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fblossom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlossomBriefInfoNotify& BlossomBriefInfoNotify::default_instance() {
  protobuf_cmd_2fcmd_5fblossom_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlossomBriefInfoNotify* BlossomBriefInfoNotify::New(::google::protobuf::Arena* arena) const {
  BlossomBriefInfoNotify* n = new BlossomBriefInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlossomBriefInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BlossomBriefInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  brief_info_list_.Clear();
  _internal_metadata_.Clear();
}

bool BlossomBriefInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BlossomBriefInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.BlossomBriefInfo brief_info_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_brief_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BlossomBriefInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BlossomBriefInfoNotify)
  return false;
#undef DO_
}

void BlossomBriefInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BlossomBriefInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.BlossomBriefInfo brief_info_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->brief_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->brief_info_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BlossomBriefInfoNotify)
}

::google::protobuf::uint8* BlossomBriefInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BlossomBriefInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.BlossomBriefInfo brief_info_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->brief_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->brief_info_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BlossomBriefInfoNotify)
  return target;
}

size_t BlossomBriefInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BlossomBriefInfoNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.BlossomBriefInfo brief_info_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->brief_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->brief_info_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlossomBriefInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BlossomBriefInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const BlossomBriefInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlossomBriefInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BlossomBriefInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BlossomBriefInfoNotify)
    MergeFrom(*source);
  }
}

void BlossomBriefInfoNotify::MergeFrom(const BlossomBriefInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BlossomBriefInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  brief_info_list_.MergeFrom(from.brief_info_list_);
}

void BlossomBriefInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BlossomBriefInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlossomBriefInfoNotify::CopyFrom(const BlossomBriefInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BlossomBriefInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlossomBriefInfoNotify::IsInitialized() const {
  return true;
}

void BlossomBriefInfoNotify::Swap(BlossomBriefInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlossomBriefInfoNotify::InternalSwap(BlossomBriefInfoNotify* other) {
  using std::swap;
  brief_info_list_.InternalSwap(&other->brief_info_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlossomBriefInfoNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fblossom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fblossom_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlossomBriefInfoNotify

// repeated .proto.BlossomBriefInfo brief_info_list = 4;
int BlossomBriefInfoNotify::brief_info_list_size() const {
  return brief_info_list_.size();
}
void BlossomBriefInfoNotify::clear_brief_info_list() {
  brief_info_list_.Clear();
}
const ::proto::BlossomBriefInfo& BlossomBriefInfoNotify::brief_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BlossomBriefInfoNotify.brief_info_list)
  return brief_info_list_.Get(index);
}
::proto::BlossomBriefInfo* BlossomBriefInfoNotify::mutable_brief_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.BlossomBriefInfoNotify.brief_info_list)
  return brief_info_list_.Mutable(index);
}
::proto::BlossomBriefInfo* BlossomBriefInfoNotify::add_brief_info_list() {
  // @@protoc_insertion_point(field_add:proto.BlossomBriefInfoNotify.brief_info_list)
  return brief_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::BlossomBriefInfo >*
BlossomBriefInfoNotify::mutable_brief_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BlossomBriefInfoNotify.brief_info_list)
  return &brief_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::BlossomBriefInfo >&
BlossomBriefInfoNotify::brief_info_list() const {
  // @@protoc_insertion_point(field_list:proto.BlossomBriefInfoNotify.brief_info_list)
  return brief_info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorldOwnerBlossomBriefInfoNotify::kBriefInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorldOwnerBlossomBriefInfoNotify::WorldOwnerBlossomBriefInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fblossom_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WorldOwnerBlossomBriefInfoNotify)
}
WorldOwnerBlossomBriefInfoNotify::WorldOwnerBlossomBriefInfoNotify(const WorldOwnerBlossomBriefInfoNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      brief_info_list_(from.brief_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.WorldOwnerBlossomBriefInfoNotify)
}

void WorldOwnerBlossomBriefInfoNotify::SharedCtor() {
  _cached_size_ = 0;
}

WorldOwnerBlossomBriefInfoNotify::~WorldOwnerBlossomBriefInfoNotify() {
  // @@protoc_insertion_point(destructor:proto.WorldOwnerBlossomBriefInfoNotify)
  SharedDtor();
}

void WorldOwnerBlossomBriefInfoNotify::SharedDtor() {
}

void WorldOwnerBlossomBriefInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorldOwnerBlossomBriefInfoNotify::descriptor() {
  protobuf_cmd_2fcmd_5fblossom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fblossom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorldOwnerBlossomBriefInfoNotify& WorldOwnerBlossomBriefInfoNotify::default_instance() {
  protobuf_cmd_2fcmd_5fblossom_2eproto::InitDefaults();
  return *internal_default_instance();
}

WorldOwnerBlossomBriefInfoNotify* WorldOwnerBlossomBriefInfoNotify::New(::google::protobuf::Arena* arena) const {
  WorldOwnerBlossomBriefInfoNotify* n = new WorldOwnerBlossomBriefInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorldOwnerBlossomBriefInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WorldOwnerBlossomBriefInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  brief_info_list_.Clear();
  _internal_metadata_.Clear();
}

bool WorldOwnerBlossomBriefInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WorldOwnerBlossomBriefInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.BlossomBriefInfo brief_info_list = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_brief_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WorldOwnerBlossomBriefInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WorldOwnerBlossomBriefInfoNotify)
  return false;
#undef DO_
}

void WorldOwnerBlossomBriefInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WorldOwnerBlossomBriefInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.BlossomBriefInfo brief_info_list = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->brief_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->brief_info_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WorldOwnerBlossomBriefInfoNotify)
}

::google::protobuf::uint8* WorldOwnerBlossomBriefInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WorldOwnerBlossomBriefInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.BlossomBriefInfo brief_info_list = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->brief_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, this->brief_info_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WorldOwnerBlossomBriefInfoNotify)
  return target;
}

size_t WorldOwnerBlossomBriefInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WorldOwnerBlossomBriefInfoNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.BlossomBriefInfo brief_info_list = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->brief_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->brief_info_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorldOwnerBlossomBriefInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WorldOwnerBlossomBriefInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const WorldOwnerBlossomBriefInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorldOwnerBlossomBriefInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WorldOwnerBlossomBriefInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WorldOwnerBlossomBriefInfoNotify)
    MergeFrom(*source);
  }
}

void WorldOwnerBlossomBriefInfoNotify::MergeFrom(const WorldOwnerBlossomBriefInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WorldOwnerBlossomBriefInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  brief_info_list_.MergeFrom(from.brief_info_list_);
}

void WorldOwnerBlossomBriefInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WorldOwnerBlossomBriefInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorldOwnerBlossomBriefInfoNotify::CopyFrom(const WorldOwnerBlossomBriefInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WorldOwnerBlossomBriefInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorldOwnerBlossomBriefInfoNotify::IsInitialized() const {
  return true;
}

void WorldOwnerBlossomBriefInfoNotify::Swap(WorldOwnerBlossomBriefInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorldOwnerBlossomBriefInfoNotify::InternalSwap(WorldOwnerBlossomBriefInfoNotify* other) {
  using std::swap;
  brief_info_list_.InternalSwap(&other->brief_info_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorldOwnerBlossomBriefInfoNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fblossom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fblossom_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WorldOwnerBlossomBriefInfoNotify

// repeated .proto.BlossomBriefInfo brief_info_list = 13;
int WorldOwnerBlossomBriefInfoNotify::brief_info_list_size() const {
  return brief_info_list_.size();
}
void WorldOwnerBlossomBriefInfoNotify::clear_brief_info_list() {
  brief_info_list_.Clear();
}
const ::proto::BlossomBriefInfo& WorldOwnerBlossomBriefInfoNotify::brief_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WorldOwnerBlossomBriefInfoNotify.brief_info_list)
  return brief_info_list_.Get(index);
}
::proto::BlossomBriefInfo* WorldOwnerBlossomBriefInfoNotify::mutable_brief_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.WorldOwnerBlossomBriefInfoNotify.brief_info_list)
  return brief_info_list_.Mutable(index);
}
::proto::BlossomBriefInfo* WorldOwnerBlossomBriefInfoNotify::add_brief_info_list() {
  // @@protoc_insertion_point(field_add:proto.WorldOwnerBlossomBriefInfoNotify.brief_info_list)
  return brief_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::BlossomBriefInfo >*
WorldOwnerBlossomBriefInfoNotify::mutable_brief_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WorldOwnerBlossomBriefInfoNotify.brief_info_list)
  return &brief_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::BlossomBriefInfo >&
WorldOwnerBlossomBriefInfoNotify::brief_info_list() const {
  // @@protoc_insertion_point(field_list:proto.WorldOwnerBlossomBriefInfoNotify.brief_info_list)
  return brief_info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlossomScheduleInfo::kProgressFieldNumber;
const int BlossomScheduleInfo::kStateFieldNumber;
const int BlossomScheduleInfo::kRoundFieldNumber;
const int BlossomScheduleInfo::kCircleCampIdFieldNumber;
const int BlossomScheduleInfo::kRefreshIdFieldNumber;
const int BlossomScheduleInfo::kFinishProgressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlossomScheduleInfo::BlossomScheduleInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fblossom_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BlossomScheduleInfo)
}
BlossomScheduleInfo::BlossomScheduleInfo(const BlossomScheduleInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&round_, &from.round_,
    static_cast<size_t>(reinterpret_cast<char*>(&circle_camp_id_) -
    reinterpret_cast<char*>(&round_)) + sizeof(circle_camp_id_));
  // @@protoc_insertion_point(copy_constructor:proto.BlossomScheduleInfo)
}

void BlossomScheduleInfo::SharedCtor() {
  ::memset(&round_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&circle_camp_id_) -
      reinterpret_cast<char*>(&round_)) + sizeof(circle_camp_id_));
  _cached_size_ = 0;
}

BlossomScheduleInfo::~BlossomScheduleInfo() {
  // @@protoc_insertion_point(destructor:proto.BlossomScheduleInfo)
  SharedDtor();
}

void BlossomScheduleInfo::SharedDtor() {
}

void BlossomScheduleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlossomScheduleInfo::descriptor() {
  protobuf_cmd_2fcmd_5fblossom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fblossom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlossomScheduleInfo& BlossomScheduleInfo::default_instance() {
  protobuf_cmd_2fcmd_5fblossom_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlossomScheduleInfo* BlossomScheduleInfo::New(::google::protobuf::Arena* arena) const {
  BlossomScheduleInfo* n = new BlossomScheduleInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlossomScheduleInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BlossomScheduleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&round_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&circle_camp_id_) -
      reinterpret_cast<char*>(&round_)) + sizeof(circle_camp_id_));
  _internal_metadata_.Clear();
}

bool BlossomScheduleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BlossomScheduleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 round = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &round_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 refresh_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &refresh_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 state = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 progress = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 finish_progress = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &finish_progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 circle_camp_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &circle_camp_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BlossomScheduleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BlossomScheduleInfo)
  return false;
#undef DO_
}

void BlossomScheduleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BlossomScheduleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 round = 4;
  if (this->round() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->round(), output);
  }

  // uint32 refresh_id = 6;
  if (this->refresh_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->refresh_id(), output);
  }

  // uint32 state = 10;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->state(), output);
  }

  // uint32 progress = 13;
  if (this->progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->progress(), output);
  }

  // uint32 finish_progress = 14;
  if (this->finish_progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->finish_progress(), output);
  }

  // uint32 circle_camp_id = 15;
  if (this->circle_camp_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->circle_camp_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BlossomScheduleInfo)
}

::google::protobuf::uint8* BlossomScheduleInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BlossomScheduleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 round = 4;
  if (this->round() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->round(), target);
  }

  // uint32 refresh_id = 6;
  if (this->refresh_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->refresh_id(), target);
  }

  // uint32 state = 10;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->state(), target);
  }

  // uint32 progress = 13;
  if (this->progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->progress(), target);
  }

  // uint32 finish_progress = 14;
  if (this->finish_progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->finish_progress(), target);
  }

  // uint32 circle_camp_id = 15;
  if (this->circle_camp_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->circle_camp_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BlossomScheduleInfo)
  return target;
}

size_t BlossomScheduleInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BlossomScheduleInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 round = 4;
  if (this->round() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->round());
  }

  // uint32 refresh_id = 6;
  if (this->refresh_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->refresh_id());
  }

  // uint32 state = 10;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  // uint32 progress = 13;
  if (this->progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->progress());
  }

  // uint32 finish_progress = 14;
  if (this->finish_progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->finish_progress());
  }

  // uint32 circle_camp_id = 15;
  if (this->circle_camp_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->circle_camp_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlossomScheduleInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BlossomScheduleInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BlossomScheduleInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlossomScheduleInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BlossomScheduleInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BlossomScheduleInfo)
    MergeFrom(*source);
  }
}

void BlossomScheduleInfo::MergeFrom(const BlossomScheduleInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BlossomScheduleInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.round() != 0) {
    set_round(from.round());
  }
  if (from.refresh_id() != 0) {
    set_refresh_id(from.refresh_id());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.progress() != 0) {
    set_progress(from.progress());
  }
  if (from.finish_progress() != 0) {
    set_finish_progress(from.finish_progress());
  }
  if (from.circle_camp_id() != 0) {
    set_circle_camp_id(from.circle_camp_id());
  }
}

void BlossomScheduleInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BlossomScheduleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlossomScheduleInfo::CopyFrom(const BlossomScheduleInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BlossomScheduleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlossomScheduleInfo::IsInitialized() const {
  return true;
}

void BlossomScheduleInfo::Swap(BlossomScheduleInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlossomScheduleInfo::InternalSwap(BlossomScheduleInfo* other) {
  using std::swap;
  swap(round_, other->round_);
  swap(refresh_id_, other->refresh_id_);
  swap(state_, other->state_);
  swap(progress_, other->progress_);
  swap(finish_progress_, other->finish_progress_);
  swap(circle_camp_id_, other->circle_camp_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlossomScheduleInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fblossom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fblossom_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlossomScheduleInfo

// uint32 progress = 13;
void BlossomScheduleInfo::clear_progress() {
  progress_ = 0u;
}
::google::protobuf::uint32 BlossomScheduleInfo::progress() const {
  // @@protoc_insertion_point(field_get:proto.BlossomScheduleInfo.progress)
  return progress_;
}
void BlossomScheduleInfo::set_progress(::google::protobuf::uint32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomScheduleInfo.progress)
}

// uint32 state = 10;
void BlossomScheduleInfo::clear_state() {
  state_ = 0u;
}
::google::protobuf::uint32 BlossomScheduleInfo::state() const {
  // @@protoc_insertion_point(field_get:proto.BlossomScheduleInfo.state)
  return state_;
}
void BlossomScheduleInfo::set_state(::google::protobuf::uint32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomScheduleInfo.state)
}

// uint32 round = 4;
void BlossomScheduleInfo::clear_round() {
  round_ = 0u;
}
::google::protobuf::uint32 BlossomScheduleInfo::round() const {
  // @@protoc_insertion_point(field_get:proto.BlossomScheduleInfo.round)
  return round_;
}
void BlossomScheduleInfo::set_round(::google::protobuf::uint32 value) {
  
  round_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomScheduleInfo.round)
}

// uint32 circle_camp_id = 15;
void BlossomScheduleInfo::clear_circle_camp_id() {
  circle_camp_id_ = 0u;
}
::google::protobuf::uint32 BlossomScheduleInfo::circle_camp_id() const {
  // @@protoc_insertion_point(field_get:proto.BlossomScheduleInfo.circle_camp_id)
  return circle_camp_id_;
}
void BlossomScheduleInfo::set_circle_camp_id(::google::protobuf::uint32 value) {
  
  circle_camp_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomScheduleInfo.circle_camp_id)
}

// uint32 refresh_id = 6;
void BlossomScheduleInfo::clear_refresh_id() {
  refresh_id_ = 0u;
}
::google::protobuf::uint32 BlossomScheduleInfo::refresh_id() const {
  // @@protoc_insertion_point(field_get:proto.BlossomScheduleInfo.refresh_id)
  return refresh_id_;
}
void BlossomScheduleInfo::set_refresh_id(::google::protobuf::uint32 value) {
  
  refresh_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomScheduleInfo.refresh_id)
}

// uint32 finish_progress = 14;
void BlossomScheduleInfo::clear_finish_progress() {
  finish_progress_ = 0u;
}
::google::protobuf::uint32 BlossomScheduleInfo::finish_progress() const {
  // @@protoc_insertion_point(field_get:proto.BlossomScheduleInfo.finish_progress)
  return finish_progress_;
}
void BlossomScheduleInfo::set_finish_progress(::google::protobuf::uint32 value) {
  
  finish_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomScheduleInfo.finish_progress)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorldOwnerBlossomScheduleInfoNotify::kScheduleInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorldOwnerBlossomScheduleInfoNotify::WorldOwnerBlossomScheduleInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fblossom_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WorldOwnerBlossomScheduleInfoNotify)
}
WorldOwnerBlossomScheduleInfoNotify::WorldOwnerBlossomScheduleInfoNotify(const WorldOwnerBlossomScheduleInfoNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_schedule_info()) {
    schedule_info_ = new ::proto::BlossomScheduleInfo(*from.schedule_info_);
  } else {
    schedule_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.WorldOwnerBlossomScheduleInfoNotify)
}

void WorldOwnerBlossomScheduleInfoNotify::SharedCtor() {
  schedule_info_ = NULL;
  _cached_size_ = 0;
}

WorldOwnerBlossomScheduleInfoNotify::~WorldOwnerBlossomScheduleInfoNotify() {
  // @@protoc_insertion_point(destructor:proto.WorldOwnerBlossomScheduleInfoNotify)
  SharedDtor();
}

void WorldOwnerBlossomScheduleInfoNotify::SharedDtor() {
  if (this != internal_default_instance()) delete schedule_info_;
}

void WorldOwnerBlossomScheduleInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorldOwnerBlossomScheduleInfoNotify::descriptor() {
  protobuf_cmd_2fcmd_5fblossom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fblossom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorldOwnerBlossomScheduleInfoNotify& WorldOwnerBlossomScheduleInfoNotify::default_instance() {
  protobuf_cmd_2fcmd_5fblossom_2eproto::InitDefaults();
  return *internal_default_instance();
}

WorldOwnerBlossomScheduleInfoNotify* WorldOwnerBlossomScheduleInfoNotify::New(::google::protobuf::Arena* arena) const {
  WorldOwnerBlossomScheduleInfoNotify* n = new WorldOwnerBlossomScheduleInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorldOwnerBlossomScheduleInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WorldOwnerBlossomScheduleInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && schedule_info_ != NULL) {
    delete schedule_info_;
  }
  schedule_info_ = NULL;
  _internal_metadata_.Clear();
}

bool WorldOwnerBlossomScheduleInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WorldOwnerBlossomScheduleInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.BlossomScheduleInfo schedule_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_schedule_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WorldOwnerBlossomScheduleInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WorldOwnerBlossomScheduleInfoNotify)
  return false;
#undef DO_
}

void WorldOwnerBlossomScheduleInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WorldOwnerBlossomScheduleInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.BlossomScheduleInfo schedule_info = 3;
  if (this->has_schedule_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->schedule_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WorldOwnerBlossomScheduleInfoNotify)
}

::google::protobuf::uint8* WorldOwnerBlossomScheduleInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WorldOwnerBlossomScheduleInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.BlossomScheduleInfo schedule_info = 3;
  if (this->has_schedule_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->schedule_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WorldOwnerBlossomScheduleInfoNotify)
  return target;
}

size_t WorldOwnerBlossomScheduleInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WorldOwnerBlossomScheduleInfoNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.BlossomScheduleInfo schedule_info = 3;
  if (this->has_schedule_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->schedule_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorldOwnerBlossomScheduleInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WorldOwnerBlossomScheduleInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const WorldOwnerBlossomScheduleInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorldOwnerBlossomScheduleInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WorldOwnerBlossomScheduleInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WorldOwnerBlossomScheduleInfoNotify)
    MergeFrom(*source);
  }
}

void WorldOwnerBlossomScheduleInfoNotify::MergeFrom(const WorldOwnerBlossomScheduleInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WorldOwnerBlossomScheduleInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_schedule_info()) {
    mutable_schedule_info()->::proto::BlossomScheduleInfo::MergeFrom(from.schedule_info());
  }
}

void WorldOwnerBlossomScheduleInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WorldOwnerBlossomScheduleInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorldOwnerBlossomScheduleInfoNotify::CopyFrom(const WorldOwnerBlossomScheduleInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WorldOwnerBlossomScheduleInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorldOwnerBlossomScheduleInfoNotify::IsInitialized() const {
  return true;
}

void WorldOwnerBlossomScheduleInfoNotify::Swap(WorldOwnerBlossomScheduleInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorldOwnerBlossomScheduleInfoNotify::InternalSwap(WorldOwnerBlossomScheduleInfoNotify* other) {
  using std::swap;
  swap(schedule_info_, other->schedule_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorldOwnerBlossomScheduleInfoNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fblossom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fblossom_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WorldOwnerBlossomScheduleInfoNotify

// .proto.BlossomScheduleInfo schedule_info = 3;
bool WorldOwnerBlossomScheduleInfoNotify::has_schedule_info() const {
  return this != internal_default_instance() && schedule_info_ != NULL;
}
void WorldOwnerBlossomScheduleInfoNotify::clear_schedule_info() {
  if (GetArenaNoVirtual() == NULL && schedule_info_ != NULL) delete schedule_info_;
  schedule_info_ = NULL;
}
const ::proto::BlossomScheduleInfo& WorldOwnerBlossomScheduleInfoNotify::schedule_info() const {
  const ::proto::BlossomScheduleInfo* p = schedule_info_;
  // @@protoc_insertion_point(field_get:proto.WorldOwnerBlossomScheduleInfoNotify.schedule_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::BlossomScheduleInfo*>(
      &::proto::_BlossomScheduleInfo_default_instance_);
}
::proto::BlossomScheduleInfo* WorldOwnerBlossomScheduleInfoNotify::mutable_schedule_info() {
  
  if (schedule_info_ == NULL) {
    schedule_info_ = new ::proto::BlossomScheduleInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.WorldOwnerBlossomScheduleInfoNotify.schedule_info)
  return schedule_info_;
}
::proto::BlossomScheduleInfo* WorldOwnerBlossomScheduleInfoNotify::release_schedule_info() {
  // @@protoc_insertion_point(field_release:proto.WorldOwnerBlossomScheduleInfoNotify.schedule_info)
  
  ::proto::BlossomScheduleInfo* temp = schedule_info_;
  schedule_info_ = NULL;
  return temp;
}
void WorldOwnerBlossomScheduleInfoNotify::set_allocated_schedule_info(::proto::BlossomScheduleInfo* schedule_info) {
  delete schedule_info_;
  schedule_info_ = schedule_info;
  if (schedule_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.WorldOwnerBlossomScheduleInfoNotify.schedule_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlossomChestCreateNotify::kRefreshIdFieldNumber;
const int BlossomChestCreateNotify::kCircleCampIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlossomChestCreateNotify::BlossomChestCreateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fblossom_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BlossomChestCreateNotify)
}
BlossomChestCreateNotify::BlossomChestCreateNotify(const BlossomChestCreateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&refresh_id_, &from.refresh_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&circle_camp_id_) -
    reinterpret_cast<char*>(&refresh_id_)) + sizeof(circle_camp_id_));
  // @@protoc_insertion_point(copy_constructor:proto.BlossomChestCreateNotify)
}

void BlossomChestCreateNotify::SharedCtor() {
  ::memset(&refresh_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&circle_camp_id_) -
      reinterpret_cast<char*>(&refresh_id_)) + sizeof(circle_camp_id_));
  _cached_size_ = 0;
}

BlossomChestCreateNotify::~BlossomChestCreateNotify() {
  // @@protoc_insertion_point(destructor:proto.BlossomChestCreateNotify)
  SharedDtor();
}

void BlossomChestCreateNotify::SharedDtor() {
}

void BlossomChestCreateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlossomChestCreateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fblossom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fblossom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlossomChestCreateNotify& BlossomChestCreateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fblossom_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlossomChestCreateNotify* BlossomChestCreateNotify::New(::google::protobuf::Arena* arena) const {
  BlossomChestCreateNotify* n = new BlossomChestCreateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlossomChestCreateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BlossomChestCreateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&refresh_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&circle_camp_id_) -
      reinterpret_cast<char*>(&refresh_id_)) + sizeof(circle_camp_id_));
  _internal_metadata_.Clear();
}

bool BlossomChestCreateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BlossomChestCreateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 refresh_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &refresh_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 circle_camp_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &circle_camp_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BlossomChestCreateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BlossomChestCreateNotify)
  return false;
#undef DO_
}

void BlossomChestCreateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BlossomChestCreateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 refresh_id = 1;
  if (this->refresh_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->refresh_id(), output);
  }

  // uint32 circle_camp_id = 10;
  if (this->circle_camp_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->circle_camp_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BlossomChestCreateNotify)
}

::google::protobuf::uint8* BlossomChestCreateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BlossomChestCreateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 refresh_id = 1;
  if (this->refresh_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->refresh_id(), target);
  }

  // uint32 circle_camp_id = 10;
  if (this->circle_camp_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->circle_camp_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BlossomChestCreateNotify)
  return target;
}

size_t BlossomChestCreateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BlossomChestCreateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 refresh_id = 1;
  if (this->refresh_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->refresh_id());
  }

  // uint32 circle_camp_id = 10;
  if (this->circle_camp_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->circle_camp_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlossomChestCreateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BlossomChestCreateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const BlossomChestCreateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlossomChestCreateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BlossomChestCreateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BlossomChestCreateNotify)
    MergeFrom(*source);
  }
}

void BlossomChestCreateNotify::MergeFrom(const BlossomChestCreateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BlossomChestCreateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.refresh_id() != 0) {
    set_refresh_id(from.refresh_id());
  }
  if (from.circle_camp_id() != 0) {
    set_circle_camp_id(from.circle_camp_id());
  }
}

void BlossomChestCreateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BlossomChestCreateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlossomChestCreateNotify::CopyFrom(const BlossomChestCreateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BlossomChestCreateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlossomChestCreateNotify::IsInitialized() const {
  return true;
}

void BlossomChestCreateNotify::Swap(BlossomChestCreateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlossomChestCreateNotify::InternalSwap(BlossomChestCreateNotify* other) {
  using std::swap;
  swap(refresh_id_, other->refresh_id_);
  swap(circle_camp_id_, other->circle_camp_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlossomChestCreateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fblossom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fblossom_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlossomChestCreateNotify

// uint32 refresh_id = 1;
void BlossomChestCreateNotify::clear_refresh_id() {
  refresh_id_ = 0u;
}
::google::protobuf::uint32 BlossomChestCreateNotify::refresh_id() const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestCreateNotify.refresh_id)
  return refresh_id_;
}
void BlossomChestCreateNotify::set_refresh_id(::google::protobuf::uint32 value) {
  
  refresh_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomChestCreateNotify.refresh_id)
}

// uint32 circle_camp_id = 10;
void BlossomChestCreateNotify::clear_circle_camp_id() {
  circle_camp_id_ = 0u;
}
::google::protobuf::uint32 BlossomChestCreateNotify::circle_camp_id() const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestCreateNotify.circle_camp_id)
  return circle_camp_id_;
}
void BlossomChestCreateNotify::set_circle_camp_id(::google::protobuf::uint32 value) {
  
  circle_camp_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomChestCreateNotify.circle_camp_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenBlossomCircleCampGuideNotify::kRefreshIdFieldNumber;
const int OpenBlossomCircleCampGuideNotify::kCircleCampIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenBlossomCircleCampGuideNotify::OpenBlossomCircleCampGuideNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fblossom_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.OpenBlossomCircleCampGuideNotify)
}
OpenBlossomCircleCampGuideNotify::OpenBlossomCircleCampGuideNotify(const OpenBlossomCircleCampGuideNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      circle_camp_id_list_(from.circle_camp_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  refresh_id_ = from.refresh_id_;
  // @@protoc_insertion_point(copy_constructor:proto.OpenBlossomCircleCampGuideNotify)
}

void OpenBlossomCircleCampGuideNotify::SharedCtor() {
  refresh_id_ = 0u;
  _cached_size_ = 0;
}

OpenBlossomCircleCampGuideNotify::~OpenBlossomCircleCampGuideNotify() {
  // @@protoc_insertion_point(destructor:proto.OpenBlossomCircleCampGuideNotify)
  SharedDtor();
}

void OpenBlossomCircleCampGuideNotify::SharedDtor() {
}

void OpenBlossomCircleCampGuideNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenBlossomCircleCampGuideNotify::descriptor() {
  protobuf_cmd_2fcmd_5fblossom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fblossom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpenBlossomCircleCampGuideNotify& OpenBlossomCircleCampGuideNotify::default_instance() {
  protobuf_cmd_2fcmd_5fblossom_2eproto::InitDefaults();
  return *internal_default_instance();
}

OpenBlossomCircleCampGuideNotify* OpenBlossomCircleCampGuideNotify::New(::google::protobuf::Arena* arena) const {
  OpenBlossomCircleCampGuideNotify* n = new OpenBlossomCircleCampGuideNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpenBlossomCircleCampGuideNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.OpenBlossomCircleCampGuideNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  circle_camp_id_list_.Clear();
  refresh_id_ = 0u;
  _internal_metadata_.Clear();
}

bool OpenBlossomCircleCampGuideNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.OpenBlossomCircleCampGuideNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 refresh_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &refresh_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 circle_camp_id_list = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_circle_camp_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 90u, input, this->mutable_circle_camp_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.OpenBlossomCircleCampGuideNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.OpenBlossomCircleCampGuideNotify)
  return false;
#undef DO_
}

void OpenBlossomCircleCampGuideNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.OpenBlossomCircleCampGuideNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 refresh_id = 7;
  if (this->refresh_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->refresh_id(), output);
  }

  // repeated uint32 circle_camp_id_list = 11;
  if (this->circle_camp_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _circle_camp_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->circle_camp_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->circle_camp_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.OpenBlossomCircleCampGuideNotify)
}

::google::protobuf::uint8* OpenBlossomCircleCampGuideNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.OpenBlossomCircleCampGuideNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 refresh_id = 7;
  if (this->refresh_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->refresh_id(), target);
  }

  // repeated uint32 circle_camp_id_list = 11;
  if (this->circle_camp_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _circle_camp_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->circle_camp_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.OpenBlossomCircleCampGuideNotify)
  return target;
}

size_t OpenBlossomCircleCampGuideNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.OpenBlossomCircleCampGuideNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 circle_camp_id_list = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->circle_camp_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _circle_camp_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 refresh_id = 7;
  if (this->refresh_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->refresh_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenBlossomCircleCampGuideNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.OpenBlossomCircleCampGuideNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const OpenBlossomCircleCampGuideNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpenBlossomCircleCampGuideNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.OpenBlossomCircleCampGuideNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.OpenBlossomCircleCampGuideNotify)
    MergeFrom(*source);
  }
}

void OpenBlossomCircleCampGuideNotify::MergeFrom(const OpenBlossomCircleCampGuideNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.OpenBlossomCircleCampGuideNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  circle_camp_id_list_.MergeFrom(from.circle_camp_id_list_);
  if (from.refresh_id() != 0) {
    set_refresh_id(from.refresh_id());
  }
}

void OpenBlossomCircleCampGuideNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.OpenBlossomCircleCampGuideNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenBlossomCircleCampGuideNotify::CopyFrom(const OpenBlossomCircleCampGuideNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.OpenBlossomCircleCampGuideNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenBlossomCircleCampGuideNotify::IsInitialized() const {
  return true;
}

void OpenBlossomCircleCampGuideNotify::Swap(OpenBlossomCircleCampGuideNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenBlossomCircleCampGuideNotify::InternalSwap(OpenBlossomCircleCampGuideNotify* other) {
  using std::swap;
  circle_camp_id_list_.InternalSwap(&other->circle_camp_id_list_);
  swap(refresh_id_, other->refresh_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpenBlossomCircleCampGuideNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fblossom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fblossom_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpenBlossomCircleCampGuideNotify

// uint32 refresh_id = 7;
void OpenBlossomCircleCampGuideNotify::clear_refresh_id() {
  refresh_id_ = 0u;
}
::google::protobuf::uint32 OpenBlossomCircleCampGuideNotify::refresh_id() const {
  // @@protoc_insertion_point(field_get:proto.OpenBlossomCircleCampGuideNotify.refresh_id)
  return refresh_id_;
}
void OpenBlossomCircleCampGuideNotify::set_refresh_id(::google::protobuf::uint32 value) {
  
  refresh_id_ = value;
  // @@protoc_insertion_point(field_set:proto.OpenBlossomCircleCampGuideNotify.refresh_id)
}

// repeated uint32 circle_camp_id_list = 11;
int OpenBlossomCircleCampGuideNotify::circle_camp_id_list_size() const {
  return circle_camp_id_list_.size();
}
void OpenBlossomCircleCampGuideNotify::clear_circle_camp_id_list() {
  circle_camp_id_list_.Clear();
}
::google::protobuf::uint32 OpenBlossomCircleCampGuideNotify::circle_camp_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.OpenBlossomCircleCampGuideNotify.circle_camp_id_list)
  return circle_camp_id_list_.Get(index);
}
void OpenBlossomCircleCampGuideNotify::set_circle_camp_id_list(int index, ::google::protobuf::uint32 value) {
  circle_camp_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.OpenBlossomCircleCampGuideNotify.circle_camp_id_list)
}
void OpenBlossomCircleCampGuideNotify::add_circle_camp_id_list(::google::protobuf::uint32 value) {
  circle_camp_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.OpenBlossomCircleCampGuideNotify.circle_camp_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OpenBlossomCircleCampGuideNotify::circle_camp_id_list() const {
  // @@protoc_insertion_point(field_list:proto.OpenBlossomCircleCampGuideNotify.circle_camp_id_list)
  return circle_camp_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OpenBlossomCircleCampGuideNotify::mutable_circle_camp_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.OpenBlossomCircleCampGuideNotify.circle_camp_id_list)
  return &circle_camp_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
