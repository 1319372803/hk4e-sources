// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_only/cmd_offline_op.server.proto

#ifndef PROTOBUF_server_5fonly_2fcmd_5foffline_5fop_2eserver_2eproto__INCLUDED
#define PROTOBUF_server_5fonly_2fcmd_5foffline_5fop_2eserver_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "server_only/bin_common.server.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class GCGSettleContext;
class GCGSettleContextDefaultTypeInternal;
extern GCGSettleContextDefaultTypeInternal _GCGSettleContext_default_instance_;
class GetOfflineOpReq;
class GetOfflineOpReqDefaultTypeInternal;
extern GetOfflineOpReqDefaultTypeInternal _GetOfflineOpReq_default_instance_;
class GetOfflineOpRsp;
class GetOfflineOpRspDefaultTypeInternal;
extern GetOfflineOpRspDefaultTypeInternal _GetOfflineOpRsp_default_instance_;
class NewOfflineOpNotify;
class NewOfflineOpNotifyDefaultTypeInternal;
extern NewOfflineOpNotifyDefaultTypeInternal _NewOfflineOpNotify_default_instance_;
class OfflineOpContext;
class OfflineOpContextDefaultTypeInternal;
extern OfflineOpContextDefaultTypeInternal _OfflineOpContext_default_instance_;
class OfflineOpData;
class OfflineOpDataDefaultTypeInternal;
extern OfflineOpDataDefaultTypeInternal _OfflineOpData_default_instance_;
class OfflineOpDefaultContext;
class OfflineOpDefaultContextDefaultTypeInternal;
extern OfflineOpDefaultContextDefaultTypeInternal _OfflineOpDefaultContext_default_instance_;
class OfflineOpPlantFlowerActivityGiveFlowerContext;
class OfflineOpPlantFlowerActivityGiveFlowerContextDefaultTypeInternal;
extern OfflineOpPlantFlowerActivityGiveFlowerContextDefaultTypeInternal _OfflineOpPlantFlowerActivityGiveFlowerContext_default_instance_;
class OfflineOpPlantFlowerActivityGiveFlowerContext_FlowerNumMapEntry;
class OfflineOpPlantFlowerActivityGiveFlowerContext_FlowerNumMapEntryDefaultTypeInternal;
extern OfflineOpPlantFlowerActivityGiveFlowerContext_FlowerNumMapEntryDefaultTypeInternal _OfflineOpPlantFlowerActivityGiveFlowerContext_FlowerNumMapEntry_default_instance_;
class RemoveOfflineOpReq;
class RemoveOfflineOpReqDefaultTypeInternal;
extern RemoveOfflineOpReqDefaultTypeInternal _RemoveOfflineOpReq_default_instance_;
class RemoveOfflineOpRsp;
class RemoveOfflineOpRspDefaultTypeInternal;
extern RemoveOfflineOpRspDefaultTypeInternal _RemoveOfflineOpRsp_default_instance_;
class SendGCGOfflineOpReq;
class SendGCGOfflineOpReqDefaultTypeInternal;
extern SendGCGOfflineOpReqDefaultTypeInternal _SendGCGOfflineOpReq_default_instance_;
class SendGCGOfflineOpRsp;
class SendGCGOfflineOpRspDefaultTypeInternal;
extern SendGCGOfflineOpRspDefaultTypeInternal _SendGCGOfflineOpRsp_default_instance_;
class SendOfflineOpReq;
class SendOfflineOpReqDefaultTypeInternal;
extern SendOfflineOpReqDefaultTypeInternal _SendOfflineOpReq_default_instance_;
class SendOfflineOpRsp;
class SendOfflineOpRspDefaultTypeInternal;
extern SendOfflineOpRspDefaultTypeInternal _SendOfflineOpRsp_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_server_5fonly_2fcmd_5foffline_5fop_2eserver_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_server_5fonly_2fcmd_5foffline_5fop_2eserver_2eproto

// ===================================================================

class OfflineOpDefaultContext : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OfflineOpDefaultContext) */ {
 public:
  OfflineOpDefaultContext();
  virtual ~OfflineOpDefaultContext();

  OfflineOpDefaultContext(const OfflineOpDefaultContext& from);

  inline OfflineOpDefaultContext& operator=(const OfflineOpDefaultContext& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OfflineOpDefaultContext(OfflineOpDefaultContext&& from) noexcept
    : OfflineOpDefaultContext() {
    *this = ::std::move(from);
  }

  inline OfflineOpDefaultContext& operator=(OfflineOpDefaultContext&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineOpDefaultContext& default_instance();

  static inline const OfflineOpDefaultContext* internal_default_instance() {
    return reinterpret_cast<const OfflineOpDefaultContext*>(
               &_OfflineOpDefaultContext_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(OfflineOpDefaultContext* other);
  friend void swap(OfflineOpDefaultContext& a, OfflineOpDefaultContext& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OfflineOpDefaultContext* New() const PROTOBUF_FINAL { return New(NULL); }

  OfflineOpDefaultContext* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OfflineOpDefaultContext& from);
  void MergeFrom(const OfflineOpDefaultContext& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OfflineOpDefaultContext* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 tag = 1;
  void clear_tag();
  static const int kTagFieldNumber = 1;
  ::google::protobuf::uint32 tag() const;
  void set_tag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.OfflineOpDefaultContext)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 tag_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5foffline_5fop_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class OfflineOpPlantFlowerActivityGiveFlowerContext : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OfflineOpPlantFlowerActivityGiveFlowerContext) */ {
 public:
  OfflineOpPlantFlowerActivityGiveFlowerContext();
  virtual ~OfflineOpPlantFlowerActivityGiveFlowerContext();

  OfflineOpPlantFlowerActivityGiveFlowerContext(const OfflineOpPlantFlowerActivityGiveFlowerContext& from);

  inline OfflineOpPlantFlowerActivityGiveFlowerContext& operator=(const OfflineOpPlantFlowerActivityGiveFlowerContext& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OfflineOpPlantFlowerActivityGiveFlowerContext(OfflineOpPlantFlowerActivityGiveFlowerContext&& from) noexcept
    : OfflineOpPlantFlowerActivityGiveFlowerContext() {
    *this = ::std::move(from);
  }

  inline OfflineOpPlantFlowerActivityGiveFlowerContext& operator=(OfflineOpPlantFlowerActivityGiveFlowerContext&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineOpPlantFlowerActivityGiveFlowerContext& default_instance();

  static inline const OfflineOpPlantFlowerActivityGiveFlowerContext* internal_default_instance() {
    return reinterpret_cast<const OfflineOpPlantFlowerActivityGiveFlowerContext*>(
               &_OfflineOpPlantFlowerActivityGiveFlowerContext_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(OfflineOpPlantFlowerActivityGiveFlowerContext* other);
  friend void swap(OfflineOpPlantFlowerActivityGiveFlowerContext& a, OfflineOpPlantFlowerActivityGiveFlowerContext& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OfflineOpPlantFlowerActivityGiveFlowerContext* New() const PROTOBUF_FINAL { return New(NULL); }

  OfflineOpPlantFlowerActivityGiveFlowerContext* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OfflineOpPlantFlowerActivityGiveFlowerContext& from);
  void MergeFrom(const OfflineOpPlantFlowerActivityGiveFlowerContext& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OfflineOpPlantFlowerActivityGiveFlowerContext* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> flower_num_map = 2;
  int flower_num_map_size() const;
  void clear_flower_num_map();
  static const int kFlowerNumMapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      flower_num_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_flower_num_map();

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.OfflineOpPlantFlowerActivityGiveFlowerContext)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class OfflineOpPlantFlowerActivityGiveFlowerContext_FlowerNumMapEntry : public ::google::protobuf::internal::MapEntry<OfflineOpPlantFlowerActivityGiveFlowerContext_FlowerNumMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<OfflineOpPlantFlowerActivityGiveFlowerContext_FlowerNumMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    OfflineOpPlantFlowerActivityGiveFlowerContext_FlowerNumMapEntry();
    OfflineOpPlantFlowerActivityGiveFlowerContext_FlowerNumMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const OfflineOpPlantFlowerActivityGiveFlowerContext_FlowerNumMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_OfflineOpPlantFlowerActivityGiveFlowerContext_FlowerNumMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      OfflineOpPlantFlowerActivityGiveFlowerContext_FlowerNumMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > flower_num_map_;
  private:
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5foffline_5fop_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GCGSettleContext : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GCGSettleContext) */ {
 public:
  GCGSettleContext();
  virtual ~GCGSettleContext();

  GCGSettleContext(const GCGSettleContext& from);

  inline GCGSettleContext& operator=(const GCGSettleContext& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GCGSettleContext(GCGSettleContext&& from) noexcept
    : GCGSettleContext() {
    *this = ::std::move(from);
  }

  inline GCGSettleContext& operator=(GCGSettleContext&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGSettleContext& default_instance();

  static inline const GCGSettleContext* internal_default_instance() {
    return reinterpret_cast<const GCGSettleContext*>(
               &_GCGSettleContext_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(GCGSettleContext* other);
  friend void swap(GCGSettleContext& a, GCGSettleContext& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GCGSettleContext* New() const PROTOBUF_FINAL { return New(NULL); }

  GCGSettleContext* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GCGSettleContext& from);
  void MergeFrom(const GCGSettleContext& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GCGSettleContext* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 game_id = 2;
  void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  ::google::protobuf::uint32 game_id() const;
  void set_game_id(::google::protobuf::uint32 value);

  // uint32 game_uid = 3;
  void clear_game_uid();
  static const int kGameUidFieldNumber = 3;
  ::google::protobuf::uint32 game_uid() const;
  void set_game_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GCGSettleContext)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 game_uid_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5foffline_5fop_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OfflineOpContext : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OfflineOpContext) */ {
 public:
  OfflineOpContext();
  virtual ~OfflineOpContext();

  OfflineOpContext(const OfflineOpContext& from);

  inline OfflineOpContext& operator=(const OfflineOpContext& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OfflineOpContext(OfflineOpContext&& from) noexcept
    : OfflineOpContext() {
    *this = ::std::move(from);
  }

  inline OfflineOpContext& operator=(OfflineOpContext&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineOpContext& default_instance();

  enum ContextCase {
    kDefaultContext = 1,
    kPlantFlowerGiveFlowerContext = 2,
    CONTEXT_NOT_SET = 0,
  };

  static inline const OfflineOpContext* internal_default_instance() {
    return reinterpret_cast<const OfflineOpContext*>(
               &_OfflineOpContext_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(OfflineOpContext* other);
  friend void swap(OfflineOpContext& a, OfflineOpContext& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OfflineOpContext* New() const PROTOBUF_FINAL { return New(NULL); }

  OfflineOpContext* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OfflineOpContext& from);
  void MergeFrom(const OfflineOpContext& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OfflineOpContext* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.OfflineOpDefaultContext default_context = 1;
  bool has_default_context() const;
  void clear_default_context();
  static const int kDefaultContextFieldNumber = 1;
  const ::proto::OfflineOpDefaultContext& default_context() const;
  ::proto::OfflineOpDefaultContext* mutable_default_context();
  ::proto::OfflineOpDefaultContext* release_default_context();
  void set_allocated_default_context(::proto::OfflineOpDefaultContext* default_context);

  // .proto.OfflineOpPlantFlowerActivityGiveFlowerContext plant_flower_give_flower_context = 2;
  bool has_plant_flower_give_flower_context() const;
  void clear_plant_flower_give_flower_context();
  static const int kPlantFlowerGiveFlowerContextFieldNumber = 2;
  const ::proto::OfflineOpPlantFlowerActivityGiveFlowerContext& plant_flower_give_flower_context() const;
  ::proto::OfflineOpPlantFlowerActivityGiveFlowerContext* mutable_plant_flower_give_flower_context();
  ::proto::OfflineOpPlantFlowerActivityGiveFlowerContext* release_plant_flower_give_flower_context();
  void set_allocated_plant_flower_give_flower_context(::proto::OfflineOpPlantFlowerActivityGiveFlowerContext* plant_flower_give_flower_context);

  ContextCase context_case() const;
  // @@protoc_insertion_point(class_scope:proto.OfflineOpContext)
 private:
  void set_has_default_context();
  void set_has_plant_flower_give_flower_context();

  inline bool has_context() const;
  void clear_context();
  inline void clear_has_context();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union ContextUnion {
    ContextUnion() {}
    ::proto::OfflineOpDefaultContext* default_context_;
    ::proto::OfflineOpPlantFlowerActivityGiveFlowerContext* plant_flower_give_flower_context_;
  } context_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_server_5fonly_2fcmd_5foffline_5fop_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OfflineOpData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OfflineOpData) */ {
 public:
  OfflineOpData();
  virtual ~OfflineOpData();

  OfflineOpData(const OfflineOpData& from);

  inline OfflineOpData& operator=(const OfflineOpData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OfflineOpData(OfflineOpData&& from) noexcept
    : OfflineOpData() {
    *this = ::std::move(from);
  }

  inline OfflineOpData& operator=(OfflineOpData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineOpData& default_instance();

  static inline const OfflineOpData* internal_default_instance() {
    return reinterpret_cast<const OfflineOpData*>(
               &_OfflineOpData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(OfflineOpData* other);
  friend void swap(OfflineOpData& a, OfflineOpData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OfflineOpData* New() const PROTOBUF_FINAL { return New(NULL); }

  OfflineOpData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OfflineOpData& from);
  void MergeFrom(const OfflineOpData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OfflineOpData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.OfflineOpBin bin = 1;
  bool has_bin() const;
  void clear_bin();
  static const int kBinFieldNumber = 1;
  const ::proto::OfflineOpBin& bin() const;
  ::proto::OfflineOpBin* mutable_bin();
  ::proto::OfflineOpBin* release_bin();
  void set_allocated_bin(::proto::OfflineOpBin* bin);

  // .proto.OfflineOpContext context = 2;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 2;
  const ::proto::OfflineOpContext& context() const;
  ::proto::OfflineOpContext* mutable_context();
  ::proto::OfflineOpContext* release_context();
  void set_allocated_context(::proto::OfflineOpContext* context);

  // uint32 max_length = 3;
  void clear_max_length();
  static const int kMaxLengthFieldNumber = 3;
  ::google::protobuf::uint32 max_length() const;
  void set_max_length(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.OfflineOpData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::OfflineOpBin* bin_;
  ::proto::OfflineOpContext* context_;
  ::google::protobuf::uint32 max_length_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5foffline_5fop_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendOfflineOpReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SendOfflineOpReq) */ {
 public:
  SendOfflineOpReq();
  virtual ~SendOfflineOpReq();

  SendOfflineOpReq(const SendOfflineOpReq& from);

  inline SendOfflineOpReq& operator=(const SendOfflineOpReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendOfflineOpReq(SendOfflineOpReq&& from) noexcept
    : SendOfflineOpReq() {
    *this = ::std::move(from);
  }

  inline SendOfflineOpReq& operator=(SendOfflineOpReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendOfflineOpReq& default_instance();

  static inline const SendOfflineOpReq* internal_default_instance() {
    return reinterpret_cast<const SendOfflineOpReq*>(
               &_SendOfflineOpReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(SendOfflineOpReq* other);
  friend void swap(SendOfflineOpReq& a, SendOfflineOpReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendOfflineOpReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SendOfflineOpReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendOfflineOpReq& from);
  void MergeFrom(const SendOfflineOpReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendOfflineOpReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.OfflineOpData op_data = 4;
  bool has_op_data() const;
  void clear_op_data();
  static const int kOpDataFieldNumber = 4;
  const ::proto::OfflineOpData& op_data() const;
  ::proto::OfflineOpData* mutable_op_data();
  ::proto::OfflineOpData* release_op_data();
  void set_allocated_op_data(::proto::OfflineOpData* op_data);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // fixed32 time = 2;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::uint32 time() const;
  void set_time(::google::protobuf::uint32 value);

  // .proto.OfflineOpType op_type = 3;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 3;
  ::proto::OfflineOpType op_type() const;
  void set_op_type(::proto::OfflineOpType value);

  // @@protoc_insertion_point(class_scope:proto.SendOfflineOpReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::OfflineOpData* op_data_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 time_;
  int op_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5foffline_5fop_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendOfflineOpRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SendOfflineOpRsp) */ {
 public:
  SendOfflineOpRsp();
  virtual ~SendOfflineOpRsp();

  SendOfflineOpRsp(const SendOfflineOpRsp& from);

  inline SendOfflineOpRsp& operator=(const SendOfflineOpRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendOfflineOpRsp(SendOfflineOpRsp&& from) noexcept
    : SendOfflineOpRsp() {
    *this = ::std::move(from);
  }

  inline SendOfflineOpRsp& operator=(SendOfflineOpRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendOfflineOpRsp& default_instance();

  static inline const SendOfflineOpRsp* internal_default_instance() {
    return reinterpret_cast<const SendOfflineOpRsp*>(
               &_SendOfflineOpRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(SendOfflineOpRsp* other);
  friend void swap(SendOfflineOpRsp& a, SendOfflineOpRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendOfflineOpRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SendOfflineOpRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendOfflineOpRsp& from);
  void MergeFrom(const SendOfflineOpRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendOfflineOpRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.OfflineOpContext context = 4;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 4;
  const ::proto::OfflineOpContext& context() const;
  ::proto::OfflineOpContext* mutable_context();
  ::proto::OfflineOpContext* release_context();
  void set_allocated_context(::proto::OfflineOpContext* context);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 index = 2;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // .proto.OfflineOpType op_type = 3;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 3;
  ::proto::OfflineOpType op_type() const;
  void set_op_type(::proto::OfflineOpType value);

  // @@protoc_insertion_point(class_scope:proto.SendOfflineOpRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::OfflineOpContext* context_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 index_;
  int op_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5foffline_5fop_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetOfflineOpReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetOfflineOpReq) */ {
 public:
  GetOfflineOpReq();
  virtual ~GetOfflineOpReq();

  GetOfflineOpReq(const GetOfflineOpReq& from);

  inline GetOfflineOpReq& operator=(const GetOfflineOpReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetOfflineOpReq(GetOfflineOpReq&& from) noexcept
    : GetOfflineOpReq() {
    *this = ::std::move(from);
  }

  inline GetOfflineOpReq& operator=(GetOfflineOpReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetOfflineOpReq& default_instance();

  static inline const GetOfflineOpReq* internal_default_instance() {
    return reinterpret_cast<const GetOfflineOpReq*>(
               &_GetOfflineOpReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(GetOfflineOpReq* other);
  friend void swap(GetOfflineOpReq& a, GetOfflineOpReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetOfflineOpReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetOfflineOpReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetOfflineOpReq& from);
  void MergeFrom(const GetOfflineOpReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetOfflineOpReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.OfflineOpType op_type = 1;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  ::proto::OfflineOpType op_type() const;
  void set_op_type(::proto::OfflineOpType value);

  // uint32 index = 2;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetOfflineOpReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int op_type_;
  ::google::protobuf::uint32 index_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5foffline_5fop_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetOfflineOpRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetOfflineOpRsp) */ {
 public:
  GetOfflineOpRsp();
  virtual ~GetOfflineOpRsp();

  GetOfflineOpRsp(const GetOfflineOpRsp& from);

  inline GetOfflineOpRsp& operator=(const GetOfflineOpRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetOfflineOpRsp(GetOfflineOpRsp&& from) noexcept
    : GetOfflineOpRsp() {
    *this = ::std::move(from);
  }

  inline GetOfflineOpRsp& operator=(GetOfflineOpRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetOfflineOpRsp& default_instance();

  static inline const GetOfflineOpRsp* internal_default_instance() {
    return reinterpret_cast<const GetOfflineOpRsp*>(
               &_GetOfflineOpRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(GetOfflineOpRsp* other);
  friend void swap(GetOfflineOpRsp& a, GetOfflineOpRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetOfflineOpRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetOfflineOpRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetOfflineOpRsp& from);
  void MergeFrom(const GetOfflineOpRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetOfflineOpRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes bin_str_list = 2;
  int bin_str_list_size() const;
  void clear_bin_str_list();
  static const int kBinStrListFieldNumber = 2;
  const ::std::string& bin_str_list(int index) const;
  ::std::string* mutable_bin_str_list(int index);
  void set_bin_str_list(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_bin_str_list(int index, ::std::string&& value);
  #endif
  void set_bin_str_list(int index, const char* value);
  void set_bin_str_list(int index, const void* value, size_t size);
  ::std::string* add_bin_str_list();
  void add_bin_str_list(const ::std::string& value);
  #if LANG_CXX11
  void add_bin_str_list(::std::string&& value);
  #endif
  void add_bin_str_list(const char* value);
  void add_bin_str_list(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& bin_str_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_bin_str_list();

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetOfflineOpRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> bin_str_list_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5foffline_5fop_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NewOfflineOpNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.NewOfflineOpNotify) */ {
 public:
  NewOfflineOpNotify();
  virtual ~NewOfflineOpNotify();

  NewOfflineOpNotify(const NewOfflineOpNotify& from);

  inline NewOfflineOpNotify& operator=(const NewOfflineOpNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NewOfflineOpNotify(NewOfflineOpNotify&& from) noexcept
    : NewOfflineOpNotify() {
    *this = ::std::move(from);
  }

  inline NewOfflineOpNotify& operator=(NewOfflineOpNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NewOfflineOpNotify& default_instance();

  static inline const NewOfflineOpNotify* internal_default_instance() {
    return reinterpret_cast<const NewOfflineOpNotify*>(
               &_NewOfflineOpNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(NewOfflineOpNotify* other);
  friend void swap(NewOfflineOpNotify& a, NewOfflineOpNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NewOfflineOpNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  NewOfflineOpNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NewOfflineOpNotify& from);
  void MergeFrom(const NewOfflineOpNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NewOfflineOpNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.OfflineOpType op_type = 1;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  ::proto::OfflineOpType op_type() const;
  void set_op_type(::proto::OfflineOpType value);

  // uint32 index = 2;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.NewOfflineOpNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int op_type_;
  ::google::protobuf::uint32 index_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5foffline_5fop_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoveOfflineOpReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RemoveOfflineOpReq) */ {
 public:
  RemoveOfflineOpReq();
  virtual ~RemoveOfflineOpReq();

  RemoveOfflineOpReq(const RemoveOfflineOpReq& from);

  inline RemoveOfflineOpReq& operator=(const RemoveOfflineOpReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoveOfflineOpReq(RemoveOfflineOpReq&& from) noexcept
    : RemoveOfflineOpReq() {
    *this = ::std::move(from);
  }

  inline RemoveOfflineOpReq& operator=(RemoveOfflineOpReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveOfflineOpReq& default_instance();

  static inline const RemoveOfflineOpReq* internal_default_instance() {
    return reinterpret_cast<const RemoveOfflineOpReq*>(
               &_RemoveOfflineOpReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(RemoveOfflineOpReq* other);
  friend void swap(RemoveOfflineOpReq& a, RemoveOfflineOpReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoveOfflineOpReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoveOfflineOpReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoveOfflineOpReq& from);
  void MergeFrom(const RemoveOfflineOpReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoveOfflineOpReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.OfflineOpType op_type = 1;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  ::proto::OfflineOpType op_type() const;
  void set_op_type(::proto::OfflineOpType value);

  // uint32 index = 2;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.RemoveOfflineOpReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int op_type_;
  ::google::protobuf::uint32 index_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5foffline_5fop_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoveOfflineOpRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RemoveOfflineOpRsp) */ {
 public:
  RemoveOfflineOpRsp();
  virtual ~RemoveOfflineOpRsp();

  RemoveOfflineOpRsp(const RemoveOfflineOpRsp& from);

  inline RemoveOfflineOpRsp& operator=(const RemoveOfflineOpRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoveOfflineOpRsp(RemoveOfflineOpRsp&& from) noexcept
    : RemoveOfflineOpRsp() {
    *this = ::std::move(from);
  }

  inline RemoveOfflineOpRsp& operator=(RemoveOfflineOpRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveOfflineOpRsp& default_instance();

  static inline const RemoveOfflineOpRsp* internal_default_instance() {
    return reinterpret_cast<const RemoveOfflineOpRsp*>(
               &_RemoveOfflineOpRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(RemoveOfflineOpRsp* other);
  friend void swap(RemoveOfflineOpRsp& a, RemoveOfflineOpRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoveOfflineOpRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoveOfflineOpRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoveOfflineOpRsp& from);
  void MergeFrom(const RemoveOfflineOpRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoveOfflineOpRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // .proto.OfflineOpType op_type = 2;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 2;
  ::proto::OfflineOpType op_type() const;
  void set_op_type(::proto::OfflineOpType value);

  // uint32 index = 3;
  void clear_index();
  static const int kIndexFieldNumber = 3;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.RemoveOfflineOpRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  int op_type_;
  ::google::protobuf::uint32 index_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5foffline_5fop_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendGCGOfflineOpReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SendGCGOfflineOpReq) */ {
 public:
  SendGCGOfflineOpReq();
  virtual ~SendGCGOfflineOpReq();

  SendGCGOfflineOpReq(const SendGCGOfflineOpReq& from);

  inline SendGCGOfflineOpReq& operator=(const SendGCGOfflineOpReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendGCGOfflineOpReq(SendGCGOfflineOpReq&& from) noexcept
    : SendGCGOfflineOpReq() {
    *this = ::std::move(from);
  }

  inline SendGCGOfflineOpReq& operator=(SendGCGOfflineOpReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendGCGOfflineOpReq& default_instance();

  static inline const SendGCGOfflineOpReq* internal_default_instance() {
    return reinterpret_cast<const SendGCGOfflineOpReq*>(
               &_SendGCGOfflineOpReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(SendGCGOfflineOpReq* other);
  friend void swap(SendGCGOfflineOpReq& a, SendGCGOfflineOpReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendGCGOfflineOpReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SendGCGOfflineOpReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendGCGOfflineOpReq& from);
  void MergeFrom(const SendGCGOfflineOpReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendGCGOfflineOpReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.OfflineOpData op_data = 4;
  bool has_op_data() const;
  void clear_op_data();
  static const int kOpDataFieldNumber = 4;
  const ::proto::OfflineOpData& op_data() const;
  ::proto::OfflineOpData* mutable_op_data();
  ::proto::OfflineOpData* release_op_data();
  void set_allocated_op_data(::proto::OfflineOpData* op_data);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // fixed32 time = 2;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::uint32 time() const;
  void set_time(::google::protobuf::uint32 value);

  // .proto.OfflineOpType op_type = 3;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 3;
  ::proto::OfflineOpType op_type() const;
  void set_op_type(::proto::OfflineOpType value);

  // @@protoc_insertion_point(class_scope:proto.SendGCGOfflineOpReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::OfflineOpData* op_data_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 time_;
  int op_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5foffline_5fop_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendGCGOfflineOpRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SendGCGOfflineOpRsp) */ {
 public:
  SendGCGOfflineOpRsp();
  virtual ~SendGCGOfflineOpRsp();

  SendGCGOfflineOpRsp(const SendGCGOfflineOpRsp& from);

  inline SendGCGOfflineOpRsp& operator=(const SendGCGOfflineOpRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendGCGOfflineOpRsp(SendGCGOfflineOpRsp&& from) noexcept
    : SendGCGOfflineOpRsp() {
    *this = ::std::move(from);
  }

  inline SendGCGOfflineOpRsp& operator=(SendGCGOfflineOpRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendGCGOfflineOpRsp& default_instance();

  static inline const SendGCGOfflineOpRsp* internal_default_instance() {
    return reinterpret_cast<const SendGCGOfflineOpRsp*>(
               &_SendGCGOfflineOpRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(SendGCGOfflineOpRsp* other);
  friend void swap(SendGCGOfflineOpRsp& a, SendGCGOfflineOpRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendGCGOfflineOpRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SendGCGOfflineOpRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendGCGOfflineOpRsp& from);
  void MergeFrom(const SendGCGOfflineOpRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendGCGOfflineOpRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.OfflineOpContext context = 4;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 4;
  const ::proto::OfflineOpContext& context() const;
  ::proto::OfflineOpContext* mutable_context();
  ::proto::OfflineOpContext* release_context();
  void set_allocated_context(::proto::OfflineOpContext* context);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 index = 2;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // .proto.OfflineOpType op_type = 3;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 3;
  ::proto::OfflineOpType op_type() const;
  void set_op_type(::proto::OfflineOpType value);

  // @@protoc_insertion_point(class_scope:proto.SendGCGOfflineOpRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::OfflineOpContext* context_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 index_;
  int op_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5foffline_5fop_2eserver_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// OfflineOpDefaultContext

// uint32 tag = 1;
inline void OfflineOpDefaultContext::clear_tag() {
  tag_ = 0u;
}
inline ::google::protobuf::uint32 OfflineOpDefaultContext::tag() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpDefaultContext.tag)
  return tag_;
}
inline void OfflineOpDefaultContext::set_tag(::google::protobuf::uint32 value) {
  
  tag_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineOpDefaultContext.tag)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// OfflineOpPlantFlowerActivityGiveFlowerContext

// uint32 uid = 1;
inline void OfflineOpPlantFlowerActivityGiveFlowerContext::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 OfflineOpPlantFlowerActivityGiveFlowerContext::uid() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpPlantFlowerActivityGiveFlowerContext.uid)
  return uid_;
}
inline void OfflineOpPlantFlowerActivityGiveFlowerContext::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineOpPlantFlowerActivityGiveFlowerContext.uid)
}

// map<uint32, uint32> flower_num_map = 2;
inline int OfflineOpPlantFlowerActivityGiveFlowerContext::flower_num_map_size() const {
  return flower_num_map_.size();
}
inline void OfflineOpPlantFlowerActivityGiveFlowerContext::clear_flower_num_map() {
  flower_num_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
OfflineOpPlantFlowerActivityGiveFlowerContext::flower_num_map() const {
  // @@protoc_insertion_point(field_map:proto.OfflineOpPlantFlowerActivityGiveFlowerContext.flower_num_map)
  return flower_num_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
OfflineOpPlantFlowerActivityGiveFlowerContext::mutable_flower_num_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.OfflineOpPlantFlowerActivityGiveFlowerContext.flower_num_map)
  return flower_num_map_.MutableMap();
}

// -------------------------------------------------------------------

// GCGSettleContext

// uint32 uid = 1;
inline void GCGSettleContext::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 GCGSettleContext::uid() const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleContext.uid)
  return uid_;
}
inline void GCGSettleContext::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGSettleContext.uid)
}

// uint32 game_id = 2;
inline void GCGSettleContext::clear_game_id() {
  game_id_ = 0u;
}
inline ::google::protobuf::uint32 GCGSettleContext::game_id() const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleContext.game_id)
  return game_id_;
}
inline void GCGSettleContext::set_game_id(::google::protobuf::uint32 value) {
  
  game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGSettleContext.game_id)
}

// uint32 game_uid = 3;
inline void GCGSettleContext::clear_game_uid() {
  game_uid_ = 0u;
}
inline ::google::protobuf::uint32 GCGSettleContext::game_uid() const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleContext.game_uid)
  return game_uid_;
}
inline void GCGSettleContext::set_game_uid(::google::protobuf::uint32 value) {
  
  game_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGSettleContext.game_uid)
}

// -------------------------------------------------------------------

// OfflineOpContext

// .proto.OfflineOpDefaultContext default_context = 1;
inline bool OfflineOpContext::has_default_context() const {
  return context_case() == kDefaultContext;
}
inline void OfflineOpContext::set_has_default_context() {
  _oneof_case_[0] = kDefaultContext;
}
inline void OfflineOpContext::clear_default_context() {
  if (has_default_context()) {
    delete context_.default_context_;
    clear_has_context();
  }
}
inline  const ::proto::OfflineOpDefaultContext& OfflineOpContext::default_context() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpContext.default_context)
  return has_default_context()
      ? *context_.default_context_
      : ::proto::OfflineOpDefaultContext::default_instance();
}
inline ::proto::OfflineOpDefaultContext* OfflineOpContext::mutable_default_context() {
  if (!has_default_context()) {
    clear_context();
    set_has_default_context();
    context_.default_context_ = new ::proto::OfflineOpDefaultContext;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpContext.default_context)
  return context_.default_context_;
}
inline ::proto::OfflineOpDefaultContext* OfflineOpContext::release_default_context() {
  // @@protoc_insertion_point(field_release:proto.OfflineOpContext.default_context)
  if (has_default_context()) {
    clear_has_context();
    ::proto::OfflineOpDefaultContext* temp = context_.default_context_;
    context_.default_context_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineOpContext::set_allocated_default_context(::proto::OfflineOpDefaultContext* default_context) {
  clear_context();
  if (default_context) {
    set_has_default_context();
    context_.default_context_ = default_context;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineOpContext.default_context)
}

// .proto.OfflineOpPlantFlowerActivityGiveFlowerContext plant_flower_give_flower_context = 2;
inline bool OfflineOpContext::has_plant_flower_give_flower_context() const {
  return context_case() == kPlantFlowerGiveFlowerContext;
}
inline void OfflineOpContext::set_has_plant_flower_give_flower_context() {
  _oneof_case_[0] = kPlantFlowerGiveFlowerContext;
}
inline void OfflineOpContext::clear_plant_flower_give_flower_context() {
  if (has_plant_flower_give_flower_context()) {
    delete context_.plant_flower_give_flower_context_;
    clear_has_context();
  }
}
inline  const ::proto::OfflineOpPlantFlowerActivityGiveFlowerContext& OfflineOpContext::plant_flower_give_flower_context() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpContext.plant_flower_give_flower_context)
  return has_plant_flower_give_flower_context()
      ? *context_.plant_flower_give_flower_context_
      : ::proto::OfflineOpPlantFlowerActivityGiveFlowerContext::default_instance();
}
inline ::proto::OfflineOpPlantFlowerActivityGiveFlowerContext* OfflineOpContext::mutable_plant_flower_give_flower_context() {
  if (!has_plant_flower_give_flower_context()) {
    clear_context();
    set_has_plant_flower_give_flower_context();
    context_.plant_flower_give_flower_context_ = new ::proto::OfflineOpPlantFlowerActivityGiveFlowerContext;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpContext.plant_flower_give_flower_context)
  return context_.plant_flower_give_flower_context_;
}
inline ::proto::OfflineOpPlantFlowerActivityGiveFlowerContext* OfflineOpContext::release_plant_flower_give_flower_context() {
  // @@protoc_insertion_point(field_release:proto.OfflineOpContext.plant_flower_give_flower_context)
  if (has_plant_flower_give_flower_context()) {
    clear_has_context();
    ::proto::OfflineOpPlantFlowerActivityGiveFlowerContext* temp = context_.plant_flower_give_flower_context_;
    context_.plant_flower_give_flower_context_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineOpContext::set_allocated_plant_flower_give_flower_context(::proto::OfflineOpPlantFlowerActivityGiveFlowerContext* plant_flower_give_flower_context) {
  clear_context();
  if (plant_flower_give_flower_context) {
    set_has_plant_flower_give_flower_context();
    context_.plant_flower_give_flower_context_ = plant_flower_give_flower_context;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineOpContext.plant_flower_give_flower_context)
}

inline bool OfflineOpContext::has_context() const {
  return context_case() != CONTEXT_NOT_SET;
}
inline void OfflineOpContext::clear_has_context() {
  _oneof_case_[0] = CONTEXT_NOT_SET;
}
inline OfflineOpContext::ContextCase OfflineOpContext::context_case() const {
  return OfflineOpContext::ContextCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// OfflineOpData

// .proto.OfflineOpBin bin = 1;
inline bool OfflineOpData::has_bin() const {
  return this != internal_default_instance() && bin_ != NULL;
}
inline void OfflineOpData::clear_bin() {
  if (GetArenaNoVirtual() == NULL && bin_ != NULL) delete bin_;
  bin_ = NULL;
}
inline const ::proto::OfflineOpBin& OfflineOpData::bin() const {
  const ::proto::OfflineOpBin* p = bin_;
  // @@protoc_insertion_point(field_get:proto.OfflineOpData.bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::OfflineOpBin*>(
      &::proto::_OfflineOpBin_default_instance_);
}
inline ::proto::OfflineOpBin* OfflineOpData::mutable_bin() {
  
  if (bin_ == NULL) {
    bin_ = new ::proto::OfflineOpBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpData.bin)
  return bin_;
}
inline ::proto::OfflineOpBin* OfflineOpData::release_bin() {
  // @@protoc_insertion_point(field_release:proto.OfflineOpData.bin)
  
  ::proto::OfflineOpBin* temp = bin_;
  bin_ = NULL;
  return temp;
}
inline void OfflineOpData::set_allocated_bin(::proto::OfflineOpBin* bin) {
  delete bin_;
  bin_ = bin;
  if (bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineOpData.bin)
}

// .proto.OfflineOpContext context = 2;
inline bool OfflineOpData::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline void OfflineOpData::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) delete context_;
  context_ = NULL;
}
inline const ::proto::OfflineOpContext& OfflineOpData::context() const {
  const ::proto::OfflineOpContext* p = context_;
  // @@protoc_insertion_point(field_get:proto.OfflineOpData.context)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::OfflineOpContext*>(
      &::proto::_OfflineOpContext_default_instance_);
}
inline ::proto::OfflineOpContext* OfflineOpData::mutable_context() {
  
  if (context_ == NULL) {
    context_ = new ::proto::OfflineOpContext;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpData.context)
  return context_;
}
inline ::proto::OfflineOpContext* OfflineOpData::release_context() {
  // @@protoc_insertion_point(field_release:proto.OfflineOpData.context)
  
  ::proto::OfflineOpContext* temp = context_;
  context_ = NULL;
  return temp;
}
inline void OfflineOpData::set_allocated_context(::proto::OfflineOpContext* context) {
  delete context_;
  context_ = context;
  if (context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineOpData.context)
}

// uint32 max_length = 3;
inline void OfflineOpData::clear_max_length() {
  max_length_ = 0u;
}
inline ::google::protobuf::uint32 OfflineOpData::max_length() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpData.max_length)
  return max_length_;
}
inline void OfflineOpData::set_max_length(::google::protobuf::uint32 value) {
  
  max_length_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineOpData.max_length)
}

// -------------------------------------------------------------------

// SendOfflineOpReq

// uint32 uid = 1;
inline void SendOfflineOpReq::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 SendOfflineOpReq::uid() const {
  // @@protoc_insertion_point(field_get:proto.SendOfflineOpReq.uid)
  return uid_;
}
inline void SendOfflineOpReq::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SendOfflineOpReq.uid)
}

// fixed32 time = 2;
inline void SendOfflineOpReq::clear_time() {
  time_ = 0u;
}
inline ::google::protobuf::uint32 SendOfflineOpReq::time() const {
  // @@protoc_insertion_point(field_get:proto.SendOfflineOpReq.time)
  return time_;
}
inline void SendOfflineOpReq::set_time(::google::protobuf::uint32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:proto.SendOfflineOpReq.time)
}

// .proto.OfflineOpType op_type = 3;
inline void SendOfflineOpReq::clear_op_type() {
  op_type_ = 0;
}
inline ::proto::OfflineOpType SendOfflineOpReq::op_type() const {
  // @@protoc_insertion_point(field_get:proto.SendOfflineOpReq.op_type)
  return static_cast< ::proto::OfflineOpType >(op_type_);
}
inline void SendOfflineOpReq::set_op_type(::proto::OfflineOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SendOfflineOpReq.op_type)
}

// .proto.OfflineOpData op_data = 4;
inline bool SendOfflineOpReq::has_op_data() const {
  return this != internal_default_instance() && op_data_ != NULL;
}
inline void SendOfflineOpReq::clear_op_data() {
  if (GetArenaNoVirtual() == NULL && op_data_ != NULL) delete op_data_;
  op_data_ = NULL;
}
inline const ::proto::OfflineOpData& SendOfflineOpReq::op_data() const {
  const ::proto::OfflineOpData* p = op_data_;
  // @@protoc_insertion_point(field_get:proto.SendOfflineOpReq.op_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::OfflineOpData*>(
      &::proto::_OfflineOpData_default_instance_);
}
inline ::proto::OfflineOpData* SendOfflineOpReq::mutable_op_data() {
  
  if (op_data_ == NULL) {
    op_data_ = new ::proto::OfflineOpData;
  }
  // @@protoc_insertion_point(field_mutable:proto.SendOfflineOpReq.op_data)
  return op_data_;
}
inline ::proto::OfflineOpData* SendOfflineOpReq::release_op_data() {
  // @@protoc_insertion_point(field_release:proto.SendOfflineOpReq.op_data)
  
  ::proto::OfflineOpData* temp = op_data_;
  op_data_ = NULL;
  return temp;
}
inline void SendOfflineOpReq::set_allocated_op_data(::proto::OfflineOpData* op_data) {
  delete op_data_;
  op_data_ = op_data;
  if (op_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SendOfflineOpReq.op_data)
}

// -------------------------------------------------------------------

// SendOfflineOpRsp

// int32 retcode = 1;
inline void SendOfflineOpRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SendOfflineOpRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SendOfflineOpRsp.retcode)
  return retcode_;
}
inline void SendOfflineOpRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SendOfflineOpRsp.retcode)
}

// uint32 index = 2;
inline void SendOfflineOpRsp::clear_index() {
  index_ = 0u;
}
inline ::google::protobuf::uint32 SendOfflineOpRsp::index() const {
  // @@protoc_insertion_point(field_get:proto.SendOfflineOpRsp.index)
  return index_;
}
inline void SendOfflineOpRsp::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.SendOfflineOpRsp.index)
}

// .proto.OfflineOpType op_type = 3;
inline void SendOfflineOpRsp::clear_op_type() {
  op_type_ = 0;
}
inline ::proto::OfflineOpType SendOfflineOpRsp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.SendOfflineOpRsp.op_type)
  return static_cast< ::proto::OfflineOpType >(op_type_);
}
inline void SendOfflineOpRsp::set_op_type(::proto::OfflineOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SendOfflineOpRsp.op_type)
}

// .proto.OfflineOpContext context = 4;
inline bool SendOfflineOpRsp::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline void SendOfflineOpRsp::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) delete context_;
  context_ = NULL;
}
inline const ::proto::OfflineOpContext& SendOfflineOpRsp::context() const {
  const ::proto::OfflineOpContext* p = context_;
  // @@protoc_insertion_point(field_get:proto.SendOfflineOpRsp.context)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::OfflineOpContext*>(
      &::proto::_OfflineOpContext_default_instance_);
}
inline ::proto::OfflineOpContext* SendOfflineOpRsp::mutable_context() {
  
  if (context_ == NULL) {
    context_ = new ::proto::OfflineOpContext;
  }
  // @@protoc_insertion_point(field_mutable:proto.SendOfflineOpRsp.context)
  return context_;
}
inline ::proto::OfflineOpContext* SendOfflineOpRsp::release_context() {
  // @@protoc_insertion_point(field_release:proto.SendOfflineOpRsp.context)
  
  ::proto::OfflineOpContext* temp = context_;
  context_ = NULL;
  return temp;
}
inline void SendOfflineOpRsp::set_allocated_context(::proto::OfflineOpContext* context) {
  delete context_;
  context_ = context;
  if (context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SendOfflineOpRsp.context)
}

// -------------------------------------------------------------------

// GetOfflineOpReq

// .proto.OfflineOpType op_type = 1;
inline void GetOfflineOpReq::clear_op_type() {
  op_type_ = 0;
}
inline ::proto::OfflineOpType GetOfflineOpReq::op_type() const {
  // @@protoc_insertion_point(field_get:proto.GetOfflineOpReq.op_type)
  return static_cast< ::proto::OfflineOpType >(op_type_);
}
inline void GetOfflineOpReq::set_op_type(::proto::OfflineOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetOfflineOpReq.op_type)
}

// uint32 index = 2;
inline void GetOfflineOpReq::clear_index() {
  index_ = 0u;
}
inline ::google::protobuf::uint32 GetOfflineOpReq::index() const {
  // @@protoc_insertion_point(field_get:proto.GetOfflineOpReq.index)
  return index_;
}
inline void GetOfflineOpReq::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.GetOfflineOpReq.index)
}

// -------------------------------------------------------------------

// GetOfflineOpRsp

// int32 retcode = 1;
inline void GetOfflineOpRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetOfflineOpRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetOfflineOpRsp.retcode)
  return retcode_;
}
inline void GetOfflineOpRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetOfflineOpRsp.retcode)
}

// repeated bytes bin_str_list = 2;
inline int GetOfflineOpRsp::bin_str_list_size() const {
  return bin_str_list_.size();
}
inline void GetOfflineOpRsp::clear_bin_str_list() {
  bin_str_list_.Clear();
}
inline const ::std::string& GetOfflineOpRsp::bin_str_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetOfflineOpRsp.bin_str_list)
  return bin_str_list_.Get(index);
}
inline ::std::string* GetOfflineOpRsp::mutable_bin_str_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetOfflineOpRsp.bin_str_list)
  return bin_str_list_.Mutable(index);
}
inline void GetOfflineOpRsp::set_bin_str_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.GetOfflineOpRsp.bin_str_list)
  bin_str_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GetOfflineOpRsp::set_bin_str_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.GetOfflineOpRsp.bin_str_list)
  bin_str_list_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GetOfflineOpRsp::set_bin_str_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  bin_str_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.GetOfflineOpRsp.bin_str_list)
}
inline void GetOfflineOpRsp::set_bin_str_list(int index, const void* value, size_t size) {
  bin_str_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.GetOfflineOpRsp.bin_str_list)
}
inline ::std::string* GetOfflineOpRsp::add_bin_str_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.GetOfflineOpRsp.bin_str_list)
  return bin_str_list_.Add();
}
inline void GetOfflineOpRsp::add_bin_str_list(const ::std::string& value) {
  bin_str_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.GetOfflineOpRsp.bin_str_list)
}
#if LANG_CXX11
inline void GetOfflineOpRsp::add_bin_str_list(::std::string&& value) {
  bin_str_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.GetOfflineOpRsp.bin_str_list)
}
#endif
inline void GetOfflineOpRsp::add_bin_str_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  bin_str_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.GetOfflineOpRsp.bin_str_list)
}
inline void GetOfflineOpRsp::add_bin_str_list(const void* value, size_t size) {
  bin_str_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.GetOfflineOpRsp.bin_str_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetOfflineOpRsp::bin_str_list() const {
  // @@protoc_insertion_point(field_list:proto.GetOfflineOpRsp.bin_str_list)
  return bin_str_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetOfflineOpRsp::mutable_bin_str_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetOfflineOpRsp.bin_str_list)
  return &bin_str_list_;
}

// -------------------------------------------------------------------

// NewOfflineOpNotify

// .proto.OfflineOpType op_type = 1;
inline void NewOfflineOpNotify::clear_op_type() {
  op_type_ = 0;
}
inline ::proto::OfflineOpType NewOfflineOpNotify::op_type() const {
  // @@protoc_insertion_point(field_get:proto.NewOfflineOpNotify.op_type)
  return static_cast< ::proto::OfflineOpType >(op_type_);
}
inline void NewOfflineOpNotify::set_op_type(::proto::OfflineOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.NewOfflineOpNotify.op_type)
}

// uint32 index = 2;
inline void NewOfflineOpNotify::clear_index() {
  index_ = 0u;
}
inline ::google::protobuf::uint32 NewOfflineOpNotify::index() const {
  // @@protoc_insertion_point(field_get:proto.NewOfflineOpNotify.index)
  return index_;
}
inline void NewOfflineOpNotify::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.NewOfflineOpNotify.index)
}

// -------------------------------------------------------------------

// RemoveOfflineOpReq

// .proto.OfflineOpType op_type = 1;
inline void RemoveOfflineOpReq::clear_op_type() {
  op_type_ = 0;
}
inline ::proto::OfflineOpType RemoveOfflineOpReq::op_type() const {
  // @@protoc_insertion_point(field_get:proto.RemoveOfflineOpReq.op_type)
  return static_cast< ::proto::OfflineOpType >(op_type_);
}
inline void RemoveOfflineOpReq::set_op_type(::proto::OfflineOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveOfflineOpReq.op_type)
}

// uint32 index = 2;
inline void RemoveOfflineOpReq::clear_index() {
  index_ = 0u;
}
inline ::google::protobuf::uint32 RemoveOfflineOpReq::index() const {
  // @@protoc_insertion_point(field_get:proto.RemoveOfflineOpReq.index)
  return index_;
}
inline void RemoveOfflineOpReq::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveOfflineOpReq.index)
}

// -------------------------------------------------------------------

// RemoveOfflineOpRsp

// int32 retcode = 1;
inline void RemoveOfflineOpRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 RemoveOfflineOpRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.RemoveOfflineOpRsp.retcode)
  return retcode_;
}
inline void RemoveOfflineOpRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveOfflineOpRsp.retcode)
}

// .proto.OfflineOpType op_type = 2;
inline void RemoveOfflineOpRsp::clear_op_type() {
  op_type_ = 0;
}
inline ::proto::OfflineOpType RemoveOfflineOpRsp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.RemoveOfflineOpRsp.op_type)
  return static_cast< ::proto::OfflineOpType >(op_type_);
}
inline void RemoveOfflineOpRsp::set_op_type(::proto::OfflineOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveOfflineOpRsp.op_type)
}

// uint32 index = 3;
inline void RemoveOfflineOpRsp::clear_index() {
  index_ = 0u;
}
inline ::google::protobuf::uint32 RemoveOfflineOpRsp::index() const {
  // @@protoc_insertion_point(field_get:proto.RemoveOfflineOpRsp.index)
  return index_;
}
inline void RemoveOfflineOpRsp::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveOfflineOpRsp.index)
}

// -------------------------------------------------------------------

// SendGCGOfflineOpReq

// uint32 uid = 1;
inline void SendGCGOfflineOpReq::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 SendGCGOfflineOpReq::uid() const {
  // @@protoc_insertion_point(field_get:proto.SendGCGOfflineOpReq.uid)
  return uid_;
}
inline void SendGCGOfflineOpReq::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SendGCGOfflineOpReq.uid)
}

// fixed32 time = 2;
inline void SendGCGOfflineOpReq::clear_time() {
  time_ = 0u;
}
inline ::google::protobuf::uint32 SendGCGOfflineOpReq::time() const {
  // @@protoc_insertion_point(field_get:proto.SendGCGOfflineOpReq.time)
  return time_;
}
inline void SendGCGOfflineOpReq::set_time(::google::protobuf::uint32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:proto.SendGCGOfflineOpReq.time)
}

// .proto.OfflineOpType op_type = 3;
inline void SendGCGOfflineOpReq::clear_op_type() {
  op_type_ = 0;
}
inline ::proto::OfflineOpType SendGCGOfflineOpReq::op_type() const {
  // @@protoc_insertion_point(field_get:proto.SendGCGOfflineOpReq.op_type)
  return static_cast< ::proto::OfflineOpType >(op_type_);
}
inline void SendGCGOfflineOpReq::set_op_type(::proto::OfflineOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SendGCGOfflineOpReq.op_type)
}

// .proto.OfflineOpData op_data = 4;
inline bool SendGCGOfflineOpReq::has_op_data() const {
  return this != internal_default_instance() && op_data_ != NULL;
}
inline void SendGCGOfflineOpReq::clear_op_data() {
  if (GetArenaNoVirtual() == NULL && op_data_ != NULL) delete op_data_;
  op_data_ = NULL;
}
inline const ::proto::OfflineOpData& SendGCGOfflineOpReq::op_data() const {
  const ::proto::OfflineOpData* p = op_data_;
  // @@protoc_insertion_point(field_get:proto.SendGCGOfflineOpReq.op_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::OfflineOpData*>(
      &::proto::_OfflineOpData_default_instance_);
}
inline ::proto::OfflineOpData* SendGCGOfflineOpReq::mutable_op_data() {
  
  if (op_data_ == NULL) {
    op_data_ = new ::proto::OfflineOpData;
  }
  // @@protoc_insertion_point(field_mutable:proto.SendGCGOfflineOpReq.op_data)
  return op_data_;
}
inline ::proto::OfflineOpData* SendGCGOfflineOpReq::release_op_data() {
  // @@protoc_insertion_point(field_release:proto.SendGCGOfflineOpReq.op_data)
  
  ::proto::OfflineOpData* temp = op_data_;
  op_data_ = NULL;
  return temp;
}
inline void SendGCGOfflineOpReq::set_allocated_op_data(::proto::OfflineOpData* op_data) {
  delete op_data_;
  op_data_ = op_data;
  if (op_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SendGCGOfflineOpReq.op_data)
}

// -------------------------------------------------------------------

// SendGCGOfflineOpRsp

// int32 retcode = 1;
inline void SendGCGOfflineOpRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SendGCGOfflineOpRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SendGCGOfflineOpRsp.retcode)
  return retcode_;
}
inline void SendGCGOfflineOpRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SendGCGOfflineOpRsp.retcode)
}

// uint32 index = 2;
inline void SendGCGOfflineOpRsp::clear_index() {
  index_ = 0u;
}
inline ::google::protobuf::uint32 SendGCGOfflineOpRsp::index() const {
  // @@protoc_insertion_point(field_get:proto.SendGCGOfflineOpRsp.index)
  return index_;
}
inline void SendGCGOfflineOpRsp::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.SendGCGOfflineOpRsp.index)
}

// .proto.OfflineOpType op_type = 3;
inline void SendGCGOfflineOpRsp::clear_op_type() {
  op_type_ = 0;
}
inline ::proto::OfflineOpType SendGCGOfflineOpRsp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.SendGCGOfflineOpRsp.op_type)
  return static_cast< ::proto::OfflineOpType >(op_type_);
}
inline void SendGCGOfflineOpRsp::set_op_type(::proto::OfflineOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SendGCGOfflineOpRsp.op_type)
}

// .proto.OfflineOpContext context = 4;
inline bool SendGCGOfflineOpRsp::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline void SendGCGOfflineOpRsp::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) delete context_;
  context_ = NULL;
}
inline const ::proto::OfflineOpContext& SendGCGOfflineOpRsp::context() const {
  const ::proto::OfflineOpContext* p = context_;
  // @@protoc_insertion_point(field_get:proto.SendGCGOfflineOpRsp.context)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::OfflineOpContext*>(
      &::proto::_OfflineOpContext_default_instance_);
}
inline ::proto::OfflineOpContext* SendGCGOfflineOpRsp::mutable_context() {
  
  if (context_ == NULL) {
    context_ = new ::proto::OfflineOpContext;
  }
  // @@protoc_insertion_point(field_mutable:proto.SendGCGOfflineOpRsp.context)
  return context_;
}
inline ::proto::OfflineOpContext* SendGCGOfflineOpRsp::release_context() {
  // @@protoc_insertion_point(field_release:proto.SendGCGOfflineOpRsp.context)
  
  ::proto::OfflineOpContext* temp = context_;
  context_ = NULL;
  return temp;
}
inline void SendGCGOfflineOpRsp::set_allocated_context(::proto::OfflineOpContext* context) {
  delete context_;
  context_ = context;
  if (context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SendGCGOfflineOpRsp.context)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_server_5fonly_2fcmd_5foffline_5fop_2eserver_2eproto__INCLUDED
