// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_only/cmd_gcg.server.proto

#ifndef PROTOBUF_server_5fonly_2fcmd_5fgcg_2eserver_2eproto__INCLUDED
#define PROTOBUF_server_5fonly_2fcmd_5fgcg_2eserver_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
#include "cmd/cmd_gcg_common.pb.h"
#include "cmd/cmd_gcg.pb.h"
#include "server_only/cmd_match.server.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class GCGMatchPlayerInfo;
class GCGMatchPlayerInfoDefaultTypeInternal;
extern GCGMatchPlayerInfoDefaultTypeInternal _GCGMatchPlayerInfo_default_instance_;
class GCGPlayerData;
class GCGPlayerDataDefaultTypeInternal;
extern GCGPlayerDataDefaultTypeInternal _GCGPlayerData_default_instance_;
class ServerGCGAddBothAITaskReq;
class ServerGCGAddBothAITaskReqDefaultTypeInternal;
extern ServerGCGAddBothAITaskReqDefaultTypeInternal _ServerGCGAddBothAITaskReq_default_instance_;
class ServerGCGAddBothAITaskRsp;
class ServerGCGAddBothAITaskRspDefaultTypeInternal;
extern ServerGCGAddBothAITaskRspDefaultTypeInternal _ServerGCGAddBothAITaskRsp_default_instance_;
class ServerGCGAskDuelReq;
class ServerGCGAskDuelReqDefaultTypeInternal;
extern ServerGCGAskDuelReqDefaultTypeInternal _ServerGCGAskDuelReq_default_instance_;
class ServerGCGBackToDuelReq;
class ServerGCGBackToDuelReqDefaultTypeInternal;
extern ServerGCGBackToDuelReqDefaultTypeInternal _ServerGCGBackToDuelReq_default_instance_;
class ServerGCGBackToDuelRsp;
class ServerGCGBackToDuelRspDefaultTypeInternal;
extern ServerGCGBackToDuelRspDefaultTypeInternal _ServerGCGBackToDuelRsp_default_instance_;
class ServerGCGChallengeUpdateNotify;
class ServerGCGChallengeUpdateNotifyDefaultTypeInternal;
extern ServerGCGChallengeUpdateNotifyDefaultTypeInternal _ServerGCGChallengeUpdateNotify_default_instance_;
class ServerGCGCreateMatchAIGameNotify;
class ServerGCGCreateMatchAIGameNotifyDefaultTypeInternal;
extern ServerGCGCreateMatchAIGameNotifyDefaultTypeInternal _ServerGCGCreateMatchAIGameNotify_default_instance_;
class ServerGCGCreateMatchGameNotify;
class ServerGCGCreateMatchGameNotifyDefaultTypeInternal;
extern ServerGCGCreateMatchGameNotifyDefaultTypeInternal _ServerGCGCreateMatchGameNotify_default_instance_;
class ServerGCGCreateMultiGameReq;
class ServerGCGCreateMultiGameReqDefaultTypeInternal;
extern ServerGCGCreateMultiGameReqDefaultTypeInternal _ServerGCGCreateMultiGameReq_default_instance_;
class ServerGCGCreateMultiGameRsp;
class ServerGCGCreateMultiGameRspDefaultTypeInternal;
extern ServerGCGCreateMultiGameRspDefaultTypeInternal _ServerGCGCreateMultiGameRsp_default_instance_;
class ServerGCGCreateSingleGameReq;
class ServerGCGCreateSingleGameReqDefaultTypeInternal;
extern ServerGCGCreateSingleGameReqDefaultTypeInternal _ServerGCGCreateSingleGameReq_default_instance_;
class ServerGCGCreateSingleGameRsp;
class ServerGCGCreateSingleGameRspDefaultTypeInternal;
extern ServerGCGCreateSingleGameRspDefaultTypeInternal _ServerGCGCreateSingleGameRsp_default_instance_;
class ServerGCGGMCommandReq;
class ServerGCGGMCommandReqDefaultTypeInternal;
extern ServerGCGGMCommandReqDefaultTypeInternal _ServerGCGGMCommandReq_default_instance_;
class ServerGCGGMCommandRsp;
class ServerGCGGMCommandRspDefaultTypeInternal;
extern ServerGCGGMCommandRspDefaultTypeInternal _ServerGCGGMCommandRsp_default_instance_;
class ServerGCGGiveUpGameReq;
class ServerGCGGiveUpGameReqDefaultTypeInternal;
extern ServerGCGGiveUpGameReqDefaultTypeInternal _ServerGCGGiveUpGameReq_default_instance_;
class ServerGCGGiveUpGameRsp;
class ServerGCGGiveUpGameRspDefaultTypeInternal;
extern ServerGCGGiveUpGameRspDefaultTypeInternal _ServerGCGGiveUpGameRsp_default_instance_;
class ServerGCGHeartBeatNotify;
class ServerGCGHeartBeatNotifyDefaultTypeInternal;
extern ServerGCGHeartBeatNotifyDefaultTypeInternal _ServerGCGHeartBeatNotify_default_instance_;
class ServerGCGInitFinishReq;
class ServerGCGInitFinishReqDefaultTypeInternal;
extern ServerGCGInitFinishReqDefaultTypeInternal _ServerGCGInitFinishReq_default_instance_;
class ServerGCGMatchFinishNotify;
class ServerGCGMatchFinishNotifyDefaultTypeInternal;
extern ServerGCGMatchFinishNotifyDefaultTypeInternal _ServerGCGMatchFinishNotify_default_instance_;
class ServerGCGMessagePackNotify;
class ServerGCGMessagePackNotifyDefaultTypeInternal;
extern ServerGCGMessagePackNotifyDefaultTypeInternal _ServerGCGMessagePackNotify_default_instance_;
class ServerGCGNewGameInfoNotify;
class ServerGCGNewGameInfoNotifyDefaultTypeInternal;
extern ServerGCGNewGameInfoNotifyDefaultTypeInternal _ServerGCGNewGameInfoNotify_default_instance_;
class ServerGCGOperationReq;
class ServerGCGOperationReqDefaultTypeInternal;
extern ServerGCGOperationReqDefaultTypeInternal _ServerGCGOperationReq_default_instance_;
class ServerGCGOperationRsp;
class ServerGCGOperationRspDefaultTypeInternal;
extern ServerGCGOperationRspDefaultTypeInternal _ServerGCGOperationRsp_default_instance_;
class ServerGCGSkillPreviewAskReq;
class ServerGCGSkillPreviewAskReqDefaultTypeInternal;
extern ServerGCGSkillPreviewAskReqDefaultTypeInternal _ServerGCGSkillPreviewAskReq_default_instance_;
class ServerGCGSkillPreviewAskRsp;
class ServerGCGSkillPreviewAskRspDefaultTypeInternal;
extern ServerGCGSkillPreviewAskRspDefaultTypeInternal _ServerGCGSkillPreviewAskRsp_default_instance_;
class ServerGCGSkillPreviewNotify;
class ServerGCGSkillPreviewNotifyDefaultTypeInternal;
extern ServerGCGSkillPreviewNotifyDefaultTypeInternal _ServerGCGSkillPreviewNotify_default_instance_;
class ServerGCGSyncReq;
class ServerGCGSyncReqDefaultTypeInternal;
extern ServerGCGSyncReqDefaultTypeInternal _ServerGCGSyncReq_default_instance_;
class ServerGCGSyncRsp;
class ServerGCGSyncRspDefaultTypeInternal;
extern ServerGCGSyncRspDefaultTypeInternal _ServerGCGSyncRsp_default_instance_;
class ServerGCGVerify;
class ServerGCGVerifyDefaultTypeInternal;
extern ServerGCGVerifyDefaultTypeInternal _ServerGCGVerify_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto

enum GCGStatisticSpecifyItemType {
  SPECIFY_INIT = 0,
  DIE_CHARACTER_NUM = 1,
  ALIVE_CHARACTER_HP_SUM = 2,
  BEING_DAMAGE_SUM = 3,
  BEING_HEAL_SUM = 4,
  SHIELD_REDUCE_SUM = 5,
  REST_ENERGY = 6,
  REST_THINK_REST_VIRTUAL_DICE_SUM = 7,
  REST_DISCARD_INTENTION_SUM = 8,
  REST_DISCARD_INTENTION_DAMAGE_SUM = 9,
  ELEMENT_REACTION_TIMES = 10,
  ONE_HIT_DAMAGE_VEC = 11,
  PLAY_CARD_TIMES = 12,
  SUMMON_TIMES = 13,
  SKILL_TAG_Q_TIMES = 14,
  ONE_OPERATION_KILL_COUNT_VEC = 15,
  CHARACTER_DIE_TIMES = 16,
  BEING_DAMAGE_OVERFLOW_SUM = 17,
  GCGStatisticSpecifyItemType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GCGStatisticSpecifyItemType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GCGStatisticSpecifyItemType_IsValid(int value);
const GCGStatisticSpecifyItemType GCGStatisticSpecifyItemType_MIN = SPECIFY_INIT;
const GCGStatisticSpecifyItemType GCGStatisticSpecifyItemType_MAX = BEING_DAMAGE_OVERFLOW_SUM;
const int GCGStatisticSpecifyItemType_ARRAYSIZE = GCGStatisticSpecifyItemType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GCGStatisticSpecifyItemType_descriptor();
inline const ::std::string& GCGStatisticSpecifyItemType_Name(GCGStatisticSpecifyItemType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GCGStatisticSpecifyItemType_descriptor(), value);
}
inline bool GCGStatisticSpecifyItemType_Parse(
    const ::std::string& name, GCGStatisticSpecifyItemType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GCGStatisticSpecifyItemType>(
    GCGStatisticSpecifyItemType_descriptor(), name, value);
}
enum GCGStatisticCommonItemType {
  COMMON_INIT = 0,
  CONTROLLER_A_WIN = 1,
  ROUND_NUM = 2,
  WINNER_REST_DICE = 3,
  PHASE_MAIN_TIME_USE = 4,
  GCGStatisticCommonItemType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GCGStatisticCommonItemType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GCGStatisticCommonItemType_IsValid(int value);
const GCGStatisticCommonItemType GCGStatisticCommonItemType_MIN = COMMON_INIT;
const GCGStatisticCommonItemType GCGStatisticCommonItemType_MAX = PHASE_MAIN_TIME_USE;
const int GCGStatisticCommonItemType_ARRAYSIZE = GCGStatisticCommonItemType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GCGStatisticCommonItemType_descriptor();
inline const ::std::string& GCGStatisticCommonItemType_Name(GCGStatisticCommonItemType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GCGStatisticCommonItemType_descriptor(), value);
}
inline bool GCGStatisticCommonItemType_Parse(
    const ::std::string& name, GCGStatisticCommonItemType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GCGStatisticCommonItemType>(
    GCGStatisticCommonItemType_descriptor(), name, value);
}
// ===================================================================

class ServerGCGVerify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGVerify) */ {
 public:
  ServerGCGVerify();
  virtual ~ServerGCGVerify();

  ServerGCGVerify(const ServerGCGVerify& from);

  inline ServerGCGVerify& operator=(const ServerGCGVerify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGVerify(ServerGCGVerify&& from) noexcept
    : ServerGCGVerify() {
    *this = ::std::move(from);
  }

  inline ServerGCGVerify& operator=(ServerGCGVerify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGVerify& default_instance();

  static inline const ServerGCGVerify* internal_default_instance() {
    return reinterpret_cast<const ServerGCGVerify*>(
               &_ServerGCGVerify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ServerGCGVerify* other);
  friend void swap(ServerGCGVerify& a, ServerGCGVerify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGVerify* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGVerify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGVerify& from);
  void MergeFrom(const ServerGCGVerify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGVerify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 game_uid = 1;
  void clear_game_uid();
  static const int kGameUidFieldNumber = 1;
  ::google::protobuf::uint32 game_uid() const;
  void set_game_uid(::google::protobuf::uint32 value);

  // uint32 verify_code = 2;
  void clear_verify_code();
  static const int kVerifyCodeFieldNumber = 2;
  ::google::protobuf::uint32 verify_code() const;
  void set_verify_code(::google::protobuf::uint32 value);

  // uint32 app_id = 3;
  void clear_app_id();
  static const int kAppIdFieldNumber = 3;
  ::google::protobuf::uint32 app_id() const;
  void set_app_id(::google::protobuf::uint32 value);

  // uint32 thread_index = 4;
  void clear_thread_index();
  static const int kThreadIndexFieldNumber = 4;
  ::google::protobuf::uint32 thread_index() const;
  void set_thread_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGVerify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 game_uid_;
  ::google::protobuf::uint32 verify_code_;
  ::google::protobuf::uint32 app_id_;
  ::google::protobuf::uint32 thread_index_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGOperationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGOperationReq) */ {
 public:
  ServerGCGOperationReq();
  virtual ~ServerGCGOperationReq();

  ServerGCGOperationReq(const ServerGCGOperationReq& from);

  inline ServerGCGOperationReq& operator=(const ServerGCGOperationReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGOperationReq(ServerGCGOperationReq&& from) noexcept
    : ServerGCGOperationReq() {
    *this = ::std::move(from);
  }

  inline ServerGCGOperationReq& operator=(ServerGCGOperationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGOperationReq& default_instance();

  static inline const ServerGCGOperationReq* internal_default_instance() {
    return reinterpret_cast<const ServerGCGOperationReq*>(
               &_ServerGCGOperationReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ServerGCGOperationReq* other);
  friend void swap(ServerGCGOperationReq& a, ServerGCGOperationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGOperationReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGOperationReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGOperationReq& from);
  void MergeFrom(const ServerGCGOperationReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGOperationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.GCGOperation op = 2;
  bool has_op() const;
  void clear_op();
  static const int kOpFieldNumber = 2;
  const ::proto::GCGOperation& op() const;
  ::proto::GCGOperation* mutable_op();
  ::proto::GCGOperation* release_op();
  void set_allocated_op(::proto::GCGOperation* op);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 op_seq = 3;
  void clear_op_seq();
  static const int kOpSeqFieldNumber = 3;
  ::google::protobuf::uint32 op_seq() const;
  void set_op_seq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGOperationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::GCGOperation* op_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 op_seq_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGOperationRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGOperationRsp) */ {
 public:
  ServerGCGOperationRsp();
  virtual ~ServerGCGOperationRsp();

  ServerGCGOperationRsp(const ServerGCGOperationRsp& from);

  inline ServerGCGOperationRsp& operator=(const ServerGCGOperationRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGOperationRsp(ServerGCGOperationRsp&& from) noexcept
    : ServerGCGOperationRsp() {
    *this = ::std::move(from);
  }

  inline ServerGCGOperationRsp& operator=(ServerGCGOperationRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGOperationRsp& default_instance();

  static inline const ServerGCGOperationRsp* internal_default_instance() {
    return reinterpret_cast<const ServerGCGOperationRsp*>(
               &_ServerGCGOperationRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ServerGCGOperationRsp* other);
  friend void swap(ServerGCGOperationRsp& a, ServerGCGOperationRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGOperationRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGOperationRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGOperationRsp& from);
  void MergeFrom(const ServerGCGOperationRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGOperationRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 op_seq = 2;
  void clear_op_seq();
  static const int kOpSeqFieldNumber = 2;
  ::google::protobuf::uint32 op_seq() const;
  void set_op_seq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGOperationRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 op_seq_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGAskDuelReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGAskDuelReq) */ {
 public:
  ServerGCGAskDuelReq();
  virtual ~ServerGCGAskDuelReq();

  ServerGCGAskDuelReq(const ServerGCGAskDuelReq& from);

  inline ServerGCGAskDuelReq& operator=(const ServerGCGAskDuelReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGAskDuelReq(ServerGCGAskDuelReq&& from) noexcept
    : ServerGCGAskDuelReq() {
    *this = ::std::move(from);
  }

  inline ServerGCGAskDuelReq& operator=(ServerGCGAskDuelReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGAskDuelReq& default_instance();

  static inline const ServerGCGAskDuelReq* internal_default_instance() {
    return reinterpret_cast<const ServerGCGAskDuelReq*>(
               &_ServerGCGAskDuelReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ServerGCGAskDuelReq* other);
  friend void swap(ServerGCGAskDuelReq& a, ServerGCGAskDuelReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGAskDuelReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGAskDuelReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGAskDuelReq& from);
  void MergeFrom(const ServerGCGAskDuelReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGAskDuelReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGAskDuelReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGNewGameInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGNewGameInfoNotify) */ {
 public:
  ServerGCGNewGameInfoNotify();
  virtual ~ServerGCGNewGameInfoNotify();

  ServerGCGNewGameInfoNotify(const ServerGCGNewGameInfoNotify& from);

  inline ServerGCGNewGameInfoNotify& operator=(const ServerGCGNewGameInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGNewGameInfoNotify(ServerGCGNewGameInfoNotify&& from) noexcept
    : ServerGCGNewGameInfoNotify() {
    *this = ::std::move(from);
  }

  inline ServerGCGNewGameInfoNotify& operator=(ServerGCGNewGameInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGNewGameInfoNotify& default_instance();

  static inline const ServerGCGNewGameInfoNotify* internal_default_instance() {
    return reinterpret_cast<const ServerGCGNewGameInfoNotify*>(
               &_ServerGCGNewGameInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ServerGCGNewGameInfoNotify* other);
  friend void swap(ServerGCGNewGameInfoNotify& a, ServerGCGNewGameInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGNewGameInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGNewGameInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGNewGameInfoNotify& from);
  void MergeFrom(const ServerGCGNewGameInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGNewGameInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.GCGGameBriefData game_brief_data = 3;
  bool has_game_brief_data() const;
  void clear_game_brief_data();
  static const int kGameBriefDataFieldNumber = 3;
  const ::proto::GCGGameBriefData& game_brief_data() const;
  ::proto::GCGGameBriefData* mutable_game_brief_data();
  ::proto::GCGGameBriefData* release_game_brief_data();
  void set_allocated_game_brief_data(::proto::GCGGameBriefData* game_brief_data);

  // uint32 app_id = 1;
  void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  ::google::protobuf::uint32 app_id() const;
  void set_app_id(::google::protobuf::uint32 value);

  // uint32 thread_index = 2;
  void clear_thread_index();
  static const int kThreadIndexFieldNumber = 2;
  ::google::protobuf::uint32 thread_index() const;
  void set_thread_index(::google::protobuf::uint32 value);

  // uint32 create_time = 4;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 4;
  ::google::protobuf::uint32 create_time() const;
  void set_create_time(::google::protobuf::uint32 value);

  // uint32 try_create_time = 5;
  void clear_try_create_time();
  static const int kTryCreateTimeFieldNumber = 5;
  ::google::protobuf::uint32 try_create_time() const;
  void set_try_create_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGNewGameInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::GCGGameBriefData* game_brief_data_;
  ::google::protobuf::uint32 app_id_;
  ::google::protobuf::uint32 thread_index_;
  ::google::protobuf::uint32 create_time_;
  ::google::protobuf::uint32 try_create_time_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGGMCommandReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGGMCommandReq) */ {
 public:
  ServerGCGGMCommandReq();
  virtual ~ServerGCGGMCommandReq();

  ServerGCGGMCommandReq(const ServerGCGGMCommandReq& from);

  inline ServerGCGGMCommandReq& operator=(const ServerGCGGMCommandReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGGMCommandReq(ServerGCGGMCommandReq&& from) noexcept
    : ServerGCGGMCommandReq() {
    *this = ::std::move(from);
  }

  inline ServerGCGGMCommandReq& operator=(ServerGCGGMCommandReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGGMCommandReq& default_instance();

  static inline const ServerGCGGMCommandReq* internal_default_instance() {
    return reinterpret_cast<const ServerGCGGMCommandReq*>(
               &_ServerGCGGMCommandReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ServerGCGGMCommandReq* other);
  friend void swap(ServerGCGGMCommandReq& a, ServerGCGGMCommandReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGGMCommandReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGGMCommandReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGGMCommandReq& from);
  void MergeFrom(const ServerGCGGMCommandReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGGMCommandReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string msg_list = 1;
  int msg_list_size() const;
  void clear_msg_list();
  static const int kMsgListFieldNumber = 1;
  const ::std::string& msg_list(int index) const;
  ::std::string* mutable_msg_list(int index);
  void set_msg_list(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_msg_list(int index, ::std::string&& value);
  #endif
  void set_msg_list(int index, const char* value);
  void set_msg_list(int index, const char* value, size_t size);
  ::std::string* add_msg_list();
  void add_msg_list(const ::std::string& value);
  #if LANG_CXX11
  void add_msg_list(::std::string&& value);
  #endif
  void add_msg_list(const char* value);
  void add_msg_list(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& msg_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_msg_list();

  // @@protoc_insertion_point(class_scope:proto.ServerGCGGMCommandReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> msg_list_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGGMCommandRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGGMCommandRsp) */ {
 public:
  ServerGCGGMCommandRsp();
  virtual ~ServerGCGGMCommandRsp();

  ServerGCGGMCommandRsp(const ServerGCGGMCommandRsp& from);

  inline ServerGCGGMCommandRsp& operator=(const ServerGCGGMCommandRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGGMCommandRsp(ServerGCGGMCommandRsp&& from) noexcept
    : ServerGCGGMCommandRsp() {
    *this = ::std::move(from);
  }

  inline ServerGCGGMCommandRsp& operator=(ServerGCGGMCommandRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGGMCommandRsp& default_instance();

  static inline const ServerGCGGMCommandRsp* internal_default_instance() {
    return reinterpret_cast<const ServerGCGGMCommandRsp*>(
               &_ServerGCGGMCommandRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ServerGCGGMCommandRsp* other);
  friend void swap(ServerGCGGMCommandRsp& a, ServerGCGGMCommandRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGGMCommandRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGGMCommandRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGGMCommandRsp& from);
  void MergeFrom(const ServerGCGGMCommandRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGGMCommandRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ret_msg = 2;
  void clear_ret_msg();
  static const int kRetMsgFieldNumber = 2;
  const ::std::string& ret_msg() const;
  void set_ret_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_ret_msg(::std::string&& value);
  #endif
  void set_ret_msg(const char* value);
  void set_ret_msg(const char* value, size_t size);
  ::std::string* mutable_ret_msg();
  ::std::string* release_ret_msg();
  void set_allocated_ret_msg(::std::string* ret_msg);

  // string ret_extra_content = 3;
  void clear_ret_extra_content();
  static const int kRetExtraContentFieldNumber = 3;
  const ::std::string& ret_extra_content() const;
  void set_ret_extra_content(const ::std::string& value);
  #if LANG_CXX11
  void set_ret_extra_content(::std::string&& value);
  #endif
  void set_ret_extra_content(const char* value);
  void set_ret_extra_content(const char* value, size_t size);
  ::std::string* mutable_ret_extra_content();
  ::std::string* release_ret_extra_content();
  void set_allocated_ret_extra_content(::std::string* ret_extra_content);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGGMCommandRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ret_msg_;
  ::google::protobuf::internal::ArenaStringPtr ret_extra_content_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGInitFinishReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGInitFinishReq) */ {
 public:
  ServerGCGInitFinishReq();
  virtual ~ServerGCGInitFinishReq();

  ServerGCGInitFinishReq(const ServerGCGInitFinishReq& from);

  inline ServerGCGInitFinishReq& operator=(const ServerGCGInitFinishReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGInitFinishReq(ServerGCGInitFinishReq&& from) noexcept
    : ServerGCGInitFinishReq() {
    *this = ::std::move(from);
  }

  inline ServerGCGInitFinishReq& operator=(ServerGCGInitFinishReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGInitFinishReq& default_instance();

  static inline const ServerGCGInitFinishReq* internal_default_instance() {
    return reinterpret_cast<const ServerGCGInitFinishReq*>(
               &_ServerGCGInitFinishReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ServerGCGInitFinishReq* other);
  friend void swap(ServerGCGInitFinishReq& a, ServerGCGInitFinishReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGInitFinishReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGInitFinishReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGInitFinishReq& from);
  void MergeFrom(const ServerGCGInitFinishReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGInitFinishReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGInitFinishReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGSyncReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGSyncReq) */ {
 public:
  ServerGCGSyncReq();
  virtual ~ServerGCGSyncReq();

  ServerGCGSyncReq(const ServerGCGSyncReq& from);

  inline ServerGCGSyncReq& operator=(const ServerGCGSyncReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGSyncReq(ServerGCGSyncReq&& from) noexcept
    : ServerGCGSyncReq() {
    *this = ::std::move(from);
  }

  inline ServerGCGSyncReq& operator=(ServerGCGSyncReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGSyncReq& default_instance();

  static inline const ServerGCGSyncReq* internal_default_instance() {
    return reinterpret_cast<const ServerGCGSyncReq*>(
               &_ServerGCGSyncReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ServerGCGSyncReq* other);
  friend void swap(ServerGCGSyncReq& a, ServerGCGSyncReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGSyncReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGSyncReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGSyncReq& from);
  void MergeFrom(const ServerGCGSyncReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGSyncReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 game_uid = 1;
  void clear_game_uid();
  static const int kGameUidFieldNumber = 1;
  ::google::protobuf::uint32 game_uid() const;
  void set_game_uid(::google::protobuf::uint32 value);

  // uint32 verify_code = 2;
  void clear_verify_code();
  static const int kVerifyCodeFieldNumber = 2;
  ::google::protobuf::uint32 verify_code() const;
  void set_verify_code(::google::protobuf::uint32 value);

  // bool is_login = 3;
  void clear_is_login();
  static const int kIsLoginFieldNumber = 3;
  bool is_login() const;
  void set_is_login(bool value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGSyncReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 game_uid_;
  ::google::protobuf::uint32 verify_code_;
  bool is_login_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGSyncRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGSyncRsp) */ {
 public:
  ServerGCGSyncRsp();
  virtual ~ServerGCGSyncRsp();

  ServerGCGSyncRsp(const ServerGCGSyncRsp& from);

  inline ServerGCGSyncRsp& operator=(const ServerGCGSyncRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGSyncRsp(ServerGCGSyncRsp&& from) noexcept
    : ServerGCGSyncRsp() {
    *this = ::std::move(from);
  }

  inline ServerGCGSyncRsp& operator=(ServerGCGSyncRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGSyncRsp& default_instance();

  static inline const ServerGCGSyncRsp* internal_default_instance() {
    return reinterpret_cast<const ServerGCGSyncRsp*>(
               &_ServerGCGSyncRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ServerGCGSyncRsp* other);
  friend void swap(ServerGCGSyncRsp& a, ServerGCGSyncRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGSyncRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGSyncRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGSyncRsp& from);
  void MergeFrom(const ServerGCGSyncRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGSyncRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 game_uid = 2;
  void clear_game_uid();
  static const int kGameUidFieldNumber = 2;
  ::google::protobuf::uint32 game_uid() const;
  void set_game_uid(::google::protobuf::uint32 value);

  // uint32 verify_code = 3;
  void clear_verify_code();
  static const int kVerifyCodeFieldNumber = 3;
  ::google::protobuf::uint32 verify_code() const;
  void set_verify_code(::google::protobuf::uint32 value);

  // uint32 app_id = 4;
  void clear_app_id();
  static const int kAppIdFieldNumber = 4;
  ::google::protobuf::uint32 app_id() const;
  void set_app_id(::google::protobuf::uint32 value);

  // uint32 thread_index = 5;
  void clear_thread_index();
  static const int kThreadIndexFieldNumber = 5;
  ::google::protobuf::uint32 thread_index() const;
  void set_thread_index(::google::protobuf::uint32 value);

  // bool is_login = 6;
  void clear_is_login();
  static const int kIsLoginFieldNumber = 6;
  bool is_login() const;
  void set_is_login(bool value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGSyncRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 game_uid_;
  ::google::protobuf::uint32 verify_code_;
  ::google::protobuf::uint32 app_id_;
  ::google::protobuf::uint32 thread_index_;
  bool is_login_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GCGPlayerData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GCGPlayerData) */ {
 public:
  GCGPlayerData();
  virtual ~GCGPlayerData();

  GCGPlayerData(const GCGPlayerData& from);

  inline GCGPlayerData& operator=(const GCGPlayerData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GCGPlayerData(GCGPlayerData&& from) noexcept
    : GCGPlayerData() {
    *this = ::std::move(from);
  }

  inline GCGPlayerData& operator=(GCGPlayerData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGPlayerData& default_instance();

  static inline const GCGPlayerData* internal_default_instance() {
    return reinterpret_cast<const GCGPlayerData*>(
               &_GCGPlayerData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(GCGPlayerData* other);
  friend void swap(GCGPlayerData& a, GCGPlayerData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GCGPlayerData* New() const PROTOBUF_FINAL { return New(NULL); }

  GCGPlayerData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GCGPlayerData& from);
  void MergeFrom(const GCGPlayerData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GCGPlayerData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.OnlinePlayerInfo player_info = 1;
  bool has_player_info() const;
  void clear_player_info();
  static const int kPlayerInfoFieldNumber = 1;
  const ::proto::OnlinePlayerInfo& player_info() const;
  ::proto::OnlinePlayerInfo* mutable_player_info();
  ::proto::OnlinePlayerInfo* release_player_info();
  void set_allocated_player_info(::proto::OnlinePlayerInfo* player_info);

  // .proto.GCGDuelExtra duel_extra = 2;
  bool has_duel_extra() const;
  void clear_duel_extra();
  static const int kDuelExtraFieldNumber = 2;
  const ::proto::GCGDuelExtra& duel_extra() const;
  ::proto::GCGDuelExtra* mutable_duel_extra();
  ::proto::GCGDuelExtra* release_duel_extra();
  void set_allocated_duel_extra(::proto::GCGDuelExtra* duel_extra);

  // @@protoc_insertion_point(class_scope:proto.GCGPlayerData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::OnlinePlayerInfo* player_info_;
  ::proto::GCGDuelExtra* duel_extra_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGCreateSingleGameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGCreateSingleGameReq) */ {
 public:
  ServerGCGCreateSingleGameReq();
  virtual ~ServerGCGCreateSingleGameReq();

  ServerGCGCreateSingleGameReq(const ServerGCGCreateSingleGameReq& from);

  inline ServerGCGCreateSingleGameReq& operator=(const ServerGCGCreateSingleGameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGCreateSingleGameReq(ServerGCGCreateSingleGameReq&& from) noexcept
    : ServerGCGCreateSingleGameReq() {
    *this = ::std::move(from);
  }

  inline ServerGCGCreateSingleGameReq& operator=(ServerGCGCreateSingleGameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGCreateSingleGameReq& default_instance();

  static inline const ServerGCGCreateSingleGameReq* internal_default_instance() {
    return reinterpret_cast<const ServerGCGCreateSingleGameReq*>(
               &_ServerGCGCreateSingleGameReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(ServerGCGCreateSingleGameReq* other);
  friend void swap(ServerGCGCreateSingleGameReq& a, ServerGCGCreateSingleGameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGCreateSingleGameReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGCreateSingleGameReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGCreateSingleGameReq& from);
  void MergeFrom(const ServerGCGCreateSingleGameReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGCreateSingleGameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 custom_param_list = 4;
  int custom_param_list_size() const;
  void clear_custom_param_list();
  static const int kCustomParamListFieldNumber = 4;
  ::google::protobuf::uint32 custom_param_list(int index) const;
  void set_custom_param_list(int index, ::google::protobuf::uint32 value);
  void add_custom_param_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      custom_param_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_custom_param_list();

  // .proto.GCGPlayerData player_data = 3;
  bool has_player_data() const;
  void clear_player_data();
  static const int kPlayerDataFieldNumber = 3;
  const ::proto::GCGPlayerData& player_data() const;
  ::proto::GCGPlayerData* mutable_player_data();
  ::proto::GCGPlayerData* release_player_data();
  void set_allocated_player_data(::proto::GCGPlayerData* player_data);

  // uint32 game_id = 1;
  void clear_game_id();
  static const int kGameIdFieldNumber = 1;
  ::google::protobuf::uint32 game_id() const;
  void set_game_id(::google::protobuf::uint32 value);

  // .proto.GCGGameBusinessType business_type = 2;
  void clear_business_type();
  static const int kBusinessTypeFieldNumber = 2;
  ::proto::GCGGameBusinessType business_type() const;
  void set_business_type(::proto::GCGGameBusinessType value);

  // uint32 try_create_time = 5;
  void clear_try_create_time();
  static const int kTryCreateTimeFieldNumber = 5;
  ::google::protobuf::uint32 try_create_time() const;
  void set_try_create_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGCreateSingleGameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > custom_param_list_;
  mutable int _custom_param_list_cached_byte_size_;
  ::proto::GCGPlayerData* player_data_;
  ::google::protobuf::uint32 game_id_;
  int business_type_;
  ::google::protobuf::uint32 try_create_time_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGCreateSingleGameRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGCreateSingleGameRsp) */ {
 public:
  ServerGCGCreateSingleGameRsp();
  virtual ~ServerGCGCreateSingleGameRsp();

  ServerGCGCreateSingleGameRsp(const ServerGCGCreateSingleGameRsp& from);

  inline ServerGCGCreateSingleGameRsp& operator=(const ServerGCGCreateSingleGameRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGCreateSingleGameRsp(ServerGCGCreateSingleGameRsp&& from) noexcept
    : ServerGCGCreateSingleGameRsp() {
    *this = ::std::move(from);
  }

  inline ServerGCGCreateSingleGameRsp& operator=(ServerGCGCreateSingleGameRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGCreateSingleGameRsp& default_instance();

  static inline const ServerGCGCreateSingleGameRsp* internal_default_instance() {
    return reinterpret_cast<const ServerGCGCreateSingleGameRsp*>(
               &_ServerGCGCreateSingleGameRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(ServerGCGCreateSingleGameRsp* other);
  friend void swap(ServerGCGCreateSingleGameRsp& a, ServerGCGCreateSingleGameRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGCreateSingleGameRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGCreateSingleGameRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGCreateSingleGameRsp& from);
  void MergeFrom(const ServerGCGCreateSingleGameRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGCreateSingleGameRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 game_id = 2;
  void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  ::google::protobuf::uint32 game_id() const;
  void set_game_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGCreateSingleGameRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 game_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGGiveUpGameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGGiveUpGameReq) */ {
 public:
  ServerGCGGiveUpGameReq();
  virtual ~ServerGCGGiveUpGameReq();

  ServerGCGGiveUpGameReq(const ServerGCGGiveUpGameReq& from);

  inline ServerGCGGiveUpGameReq& operator=(const ServerGCGGiveUpGameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGGiveUpGameReq(ServerGCGGiveUpGameReq&& from) noexcept
    : ServerGCGGiveUpGameReq() {
    *this = ::std::move(from);
  }

  inline ServerGCGGiveUpGameReq& operator=(ServerGCGGiveUpGameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGGiveUpGameReq& default_instance();

  static inline const ServerGCGGiveUpGameReq* internal_default_instance() {
    return reinterpret_cast<const ServerGCGGiveUpGameReq*>(
               &_ServerGCGGiveUpGameReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(ServerGCGGiveUpGameReq* other);
  friend void swap(ServerGCGGiveUpGameReq& a, ServerGCGGiveUpGameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGGiveUpGameReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGGiveUpGameReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGGiveUpGameReq& from);
  void MergeFrom(const ServerGCGGiveUpGameReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGGiveUpGameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 game_uid = 1;
  void clear_game_uid();
  static const int kGameUidFieldNumber = 1;
  ::google::protobuf::uint32 game_uid() const;
  void set_game_uid(::google::protobuf::uint32 value);

  // uint32 game_id = 2;
  void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  ::google::protobuf::uint32 game_id() const;
  void set_game_id(::google::protobuf::uint32 value);

  // uint32 verify_code = 3;
  void clear_verify_code();
  static const int kVerifyCodeFieldNumber = 3;
  ::google::protobuf::uint32 verify_code() const;
  void set_verify_code(::google::protobuf::uint32 value);

  // .proto.GCGGameBusinessType business_type = 4;
  void clear_business_type();
  static const int kBusinessTypeFieldNumber = 4;
  ::proto::GCGGameBusinessType business_type() const;
  void set_business_type(::proto::GCGGameBusinessType value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGGiveUpGameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 game_uid_;
  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 verify_code_;
  int business_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGGiveUpGameRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGGiveUpGameRsp) */ {
 public:
  ServerGCGGiveUpGameRsp();
  virtual ~ServerGCGGiveUpGameRsp();

  ServerGCGGiveUpGameRsp(const ServerGCGGiveUpGameRsp& from);

  inline ServerGCGGiveUpGameRsp& operator=(const ServerGCGGiveUpGameRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGGiveUpGameRsp(ServerGCGGiveUpGameRsp&& from) noexcept
    : ServerGCGGiveUpGameRsp() {
    *this = ::std::move(from);
  }

  inline ServerGCGGiveUpGameRsp& operator=(ServerGCGGiveUpGameRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGGiveUpGameRsp& default_instance();

  static inline const ServerGCGGiveUpGameRsp* internal_default_instance() {
    return reinterpret_cast<const ServerGCGGiveUpGameRsp*>(
               &_ServerGCGGiveUpGameRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(ServerGCGGiveUpGameRsp* other);
  friend void swap(ServerGCGGiveUpGameRsp& a, ServerGCGGiveUpGameRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGGiveUpGameRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGGiveUpGameRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGGiveUpGameRsp& from);
  void MergeFrom(const ServerGCGGiveUpGameRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGGiveUpGameRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 game_uid = 2;
  void clear_game_uid();
  static const int kGameUidFieldNumber = 2;
  ::google::protobuf::uint32 game_uid() const;
  void set_game_uid(::google::protobuf::uint32 value);

  // uint32 game_id = 3;
  void clear_game_id();
  static const int kGameIdFieldNumber = 3;
  ::google::protobuf::uint32 game_id() const;
  void set_game_id(::google::protobuf::uint32 value);

  // uint32 verify_code = 4;
  void clear_verify_code();
  static const int kVerifyCodeFieldNumber = 4;
  ::google::protobuf::uint32 verify_code() const;
  void set_verify_code(::google::protobuf::uint32 value);

  // uint32 app_id = 5;
  void clear_app_id();
  static const int kAppIdFieldNumber = 5;
  ::google::protobuf::uint32 app_id() const;
  void set_app_id(::google::protobuf::uint32 value);

  // uint32 thread_index = 6;
  void clear_thread_index();
  static const int kThreadIndexFieldNumber = 6;
  ::google::protobuf::uint32 thread_index() const;
  void set_thread_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGGiveUpGameRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 game_uid_;
  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 verify_code_;
  ::google::protobuf::uint32 app_id_;
  ::google::protobuf::uint32 thread_index_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGSkillPreviewAskReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGSkillPreviewAskReq) */ {
 public:
  ServerGCGSkillPreviewAskReq();
  virtual ~ServerGCGSkillPreviewAskReq();

  ServerGCGSkillPreviewAskReq(const ServerGCGSkillPreviewAskReq& from);

  inline ServerGCGSkillPreviewAskReq& operator=(const ServerGCGSkillPreviewAskReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGSkillPreviewAskReq(ServerGCGSkillPreviewAskReq&& from) noexcept
    : ServerGCGSkillPreviewAskReq() {
    *this = ::std::move(from);
  }

  inline ServerGCGSkillPreviewAskReq& operator=(ServerGCGSkillPreviewAskReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGSkillPreviewAskReq& default_instance();

  static inline const ServerGCGSkillPreviewAskReq* internal_default_instance() {
    return reinterpret_cast<const ServerGCGSkillPreviewAskReq*>(
               &_ServerGCGSkillPreviewAskReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(ServerGCGSkillPreviewAskReq* other);
  friend void swap(ServerGCGSkillPreviewAskReq& a, ServerGCGSkillPreviewAskReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGSkillPreviewAskReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGSkillPreviewAskReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGSkillPreviewAskReq& from);
  void MergeFrom(const ServerGCGSkillPreviewAskReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGSkillPreviewAskReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGSkillPreviewAskReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGSkillPreviewAskRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGSkillPreviewAskRsp) */ {
 public:
  ServerGCGSkillPreviewAskRsp();
  virtual ~ServerGCGSkillPreviewAskRsp();

  ServerGCGSkillPreviewAskRsp(const ServerGCGSkillPreviewAskRsp& from);

  inline ServerGCGSkillPreviewAskRsp& operator=(const ServerGCGSkillPreviewAskRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGSkillPreviewAskRsp(ServerGCGSkillPreviewAskRsp&& from) noexcept
    : ServerGCGSkillPreviewAskRsp() {
    *this = ::std::move(from);
  }

  inline ServerGCGSkillPreviewAskRsp& operator=(ServerGCGSkillPreviewAskRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGSkillPreviewAskRsp& default_instance();

  static inline const ServerGCGSkillPreviewAskRsp* internal_default_instance() {
    return reinterpret_cast<const ServerGCGSkillPreviewAskRsp*>(
               &_ServerGCGSkillPreviewAskRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(ServerGCGSkillPreviewAskRsp* other);
  friend void swap(ServerGCGSkillPreviewAskRsp& a, ServerGCGSkillPreviewAskRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGSkillPreviewAskRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGSkillPreviewAskRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGSkillPreviewAskRsp& from);
  void MergeFrom(const ServerGCGSkillPreviewAskRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGSkillPreviewAskRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGSkillPreviewAskRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGCreateMultiGameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGCreateMultiGameReq) */ {
 public:
  ServerGCGCreateMultiGameReq();
  virtual ~ServerGCGCreateMultiGameReq();

  ServerGCGCreateMultiGameReq(const ServerGCGCreateMultiGameReq& from);

  inline ServerGCGCreateMultiGameReq& operator=(const ServerGCGCreateMultiGameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGCreateMultiGameReq(ServerGCGCreateMultiGameReq&& from) noexcept
    : ServerGCGCreateMultiGameReq() {
    *this = ::std::move(from);
  }

  inline ServerGCGCreateMultiGameReq& operator=(ServerGCGCreateMultiGameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGCreateMultiGameReq& default_instance();

  static inline const ServerGCGCreateMultiGameReq* internal_default_instance() {
    return reinterpret_cast<const ServerGCGCreateMultiGameReq*>(
               &_ServerGCGCreateMultiGameReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(ServerGCGCreateMultiGameReq* other);
  friend void swap(ServerGCGCreateMultiGameReq& a, ServerGCGCreateMultiGameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGCreateMultiGameReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGCreateMultiGameReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGCreateMultiGameReq& from);
  void MergeFrom(const ServerGCGCreateMultiGameReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGCreateMultiGameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.GCGPlayerData player_data_1 = 3;
  bool has_player_data_1() const;
  void clear_player_data_1();
  static const int kPlayerData1FieldNumber = 3;
  const ::proto::GCGPlayerData& player_data_1() const;
  ::proto::GCGPlayerData* mutable_player_data_1();
  ::proto::GCGPlayerData* release_player_data_1();
  void set_allocated_player_data_1(::proto::GCGPlayerData* player_data_1);

  // .proto.GCGPlayerData player_data_2 = 4;
  bool has_player_data_2() const;
  void clear_player_data_2();
  static const int kPlayerData2FieldNumber = 4;
  const ::proto::GCGPlayerData& player_data_2() const;
  ::proto::GCGPlayerData* mutable_player_data_2();
  ::proto::GCGPlayerData* release_player_data_2();
  void set_allocated_player_data_2(::proto::GCGPlayerData* player_data_2);

  // uint32 game_id = 1;
  void clear_game_id();
  static const int kGameIdFieldNumber = 1;
  ::google::protobuf::uint32 game_id() const;
  void set_game_id(::google::protobuf::uint32 value);

  // .proto.GCGGameBusinessType business_type = 2;
  void clear_business_type();
  static const int kBusinessTypeFieldNumber = 2;
  ::proto::GCGGameBusinessType business_type() const;
  void set_business_type(::proto::GCGGameBusinessType value);

  // uint32 try_create_time = 5;
  void clear_try_create_time();
  static const int kTryCreateTimeFieldNumber = 5;
  ::google::protobuf::uint32 try_create_time() const;
  void set_try_create_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGCreateMultiGameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::GCGPlayerData* player_data_1_;
  ::proto::GCGPlayerData* player_data_2_;
  ::google::protobuf::uint32 game_id_;
  int business_type_;
  ::google::protobuf::uint32 try_create_time_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGCreateMultiGameRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGCreateMultiGameRsp) */ {
 public:
  ServerGCGCreateMultiGameRsp();
  virtual ~ServerGCGCreateMultiGameRsp();

  ServerGCGCreateMultiGameRsp(const ServerGCGCreateMultiGameRsp& from);

  inline ServerGCGCreateMultiGameRsp& operator=(const ServerGCGCreateMultiGameRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGCreateMultiGameRsp(ServerGCGCreateMultiGameRsp&& from) noexcept
    : ServerGCGCreateMultiGameRsp() {
    *this = ::std::move(from);
  }

  inline ServerGCGCreateMultiGameRsp& operator=(ServerGCGCreateMultiGameRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGCreateMultiGameRsp& default_instance();

  static inline const ServerGCGCreateMultiGameRsp* internal_default_instance() {
    return reinterpret_cast<const ServerGCGCreateMultiGameRsp*>(
               &_ServerGCGCreateMultiGameRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(ServerGCGCreateMultiGameRsp* other);
  friend void swap(ServerGCGCreateMultiGameRsp& a, ServerGCGCreateMultiGameRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGCreateMultiGameRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGCreateMultiGameRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGCreateMultiGameRsp& from);
  void MergeFrom(const ServerGCGCreateMultiGameRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGCreateMultiGameRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 game_id = 2;
  void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  ::google::protobuf::uint32 game_id() const;
  void set_game_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGCreateMultiGameRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 game_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGAddBothAITaskReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGAddBothAITaskReq) */ {
 public:
  ServerGCGAddBothAITaskReq();
  virtual ~ServerGCGAddBothAITaskReq();

  ServerGCGAddBothAITaskReq(const ServerGCGAddBothAITaskReq& from);

  inline ServerGCGAddBothAITaskReq& operator=(const ServerGCGAddBothAITaskReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGAddBothAITaskReq(ServerGCGAddBothAITaskReq&& from) noexcept
    : ServerGCGAddBothAITaskReq() {
    *this = ::std::move(from);
  }

  inline ServerGCGAddBothAITaskReq& operator=(ServerGCGAddBothAITaskReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGAddBothAITaskReq& default_instance();

  static inline const ServerGCGAddBothAITaskReq* internal_default_instance() {
    return reinterpret_cast<const ServerGCGAddBothAITaskReq*>(
               &_ServerGCGAddBothAITaskReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(ServerGCGAddBothAITaskReq* other);
  friend void swap(ServerGCGAddBothAITaskReq& a, ServerGCGAddBothAITaskReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGAddBothAITaskReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGAddBothAITaskReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGAddBothAITaskReq& from);
  void MergeFrom(const ServerGCGAddBothAITaskReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGAddBothAITaskReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 task_id = 1;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  ::google::protobuf::uint64 task_id() const;
  void set_task_id(::google::protobuf::uint64 value);

  // uint32 subtask_id = 2;
  void clear_subtask_id();
  static const int kSubtaskIdFieldNumber = 2;
  ::google::protobuf::uint32 subtask_id() const;
  void set_subtask_id(::google::protobuf::uint32 value);

  // uint32 game_type = 3;
  void clear_game_type();
  static const int kGameTypeFieldNumber = 3;
  ::google::protobuf::uint32 game_type() const;
  void set_game_type(::google::protobuf::uint32 value);

  // uint32 level_id = 4;
  void clear_level_id();
  static const int kLevelIdFieldNumber = 4;
  ::google::protobuf::uint32 level_id() const;
  void set_level_id(::google::protobuf::uint32 value);

  // uint32 card_group1_id = 5;
  void clear_card_group1_id();
  static const int kCardGroup1IdFieldNumber = 5;
  ::google::protobuf::uint32 card_group1_id() const;
  void set_card_group1_id(::google::protobuf::uint32 value);

  // uint32 card_group2_id = 6;
  void clear_card_group2_id();
  static const int kCardGroup2IdFieldNumber = 6;
  ::google::protobuf::uint32 card_group2_id() const;
  void set_card_group2_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGAddBothAITaskReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 task_id_;
  ::google::protobuf::uint32 subtask_id_;
  ::google::protobuf::uint32 game_type_;
  ::google::protobuf::uint32 level_id_;
  ::google::protobuf::uint32 card_group1_id_;
  ::google::protobuf::uint32 card_group2_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGAddBothAITaskRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGAddBothAITaskRsp) */ {
 public:
  ServerGCGAddBothAITaskRsp();
  virtual ~ServerGCGAddBothAITaskRsp();

  ServerGCGAddBothAITaskRsp(const ServerGCGAddBothAITaskRsp& from);

  inline ServerGCGAddBothAITaskRsp& operator=(const ServerGCGAddBothAITaskRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGAddBothAITaskRsp(ServerGCGAddBothAITaskRsp&& from) noexcept
    : ServerGCGAddBothAITaskRsp() {
    *this = ::std::move(from);
  }

  inline ServerGCGAddBothAITaskRsp& operator=(ServerGCGAddBothAITaskRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGAddBothAITaskRsp& default_instance();

  static inline const ServerGCGAddBothAITaskRsp* internal_default_instance() {
    return reinterpret_cast<const ServerGCGAddBothAITaskRsp*>(
               &_ServerGCGAddBothAITaskRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(ServerGCGAddBothAITaskRsp* other);
  friend void swap(ServerGCGAddBothAITaskRsp& a, ServerGCGAddBothAITaskRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGAddBothAITaskRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGAddBothAITaskRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGAddBothAITaskRsp& from);
  void MergeFrom(const ServerGCGAddBothAITaskRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGAddBothAITaskRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 task_id = 2;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 2;
  ::google::protobuf::uint32 task_id() const;
  void set_task_id(::google::protobuf::uint32 value);

  // uint32 subtask_id = 3;
  void clear_subtask_id();
  static const int kSubtaskIdFieldNumber = 3;
  ::google::protobuf::uint32 subtask_id() const;
  void set_subtask_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGAddBothAITaskRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 task_id_;
  ::google::protobuf::uint32 subtask_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GCGMatchPlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GCGMatchPlayerInfo) */ {
 public:
  GCGMatchPlayerInfo();
  virtual ~GCGMatchPlayerInfo();

  GCGMatchPlayerInfo(const GCGMatchPlayerInfo& from);

  inline GCGMatchPlayerInfo& operator=(const GCGMatchPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GCGMatchPlayerInfo(GCGMatchPlayerInfo&& from) noexcept
    : GCGMatchPlayerInfo() {
    *this = ::std::move(from);
  }

  inline GCGMatchPlayerInfo& operator=(GCGMatchPlayerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGMatchPlayerInfo& default_instance();

  static inline const GCGMatchPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const GCGMatchPlayerInfo*>(
               &_GCGMatchPlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(GCGMatchPlayerInfo* other);
  friend void swap(GCGMatchPlayerInfo& a, GCGMatchPlayerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GCGMatchPlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  GCGMatchPlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GCGMatchPlayerInfo& from);
  void MergeFrom(const GCGMatchPlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GCGMatchPlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.MatchPlayer match_player = 1;
  bool has_match_player() const;
  void clear_match_player();
  static const int kMatchPlayerFieldNumber = 1;
  const ::proto::MatchPlayer& match_player() const;
  ::proto::MatchPlayer* mutable_match_player();
  ::proto::MatchPlayer* release_match_player();
  void set_allocated_match_player(::proto::MatchPlayer* match_player);

  // .proto.GCGDuelExtra gcg_duel_extra = 2;
  bool has_gcg_duel_extra() const;
  void clear_gcg_duel_extra();
  static const int kGcgDuelExtraFieldNumber = 2;
  const ::proto::GCGDuelExtra& gcg_duel_extra() const;
  ::proto::GCGDuelExtra* mutable_gcg_duel_extra();
  ::proto::GCGDuelExtra* release_gcg_duel_extra();
  void set_allocated_gcg_duel_extra(::proto::GCGDuelExtra* gcg_duel_extra);

  // @@protoc_insertion_point(class_scope:proto.GCGMatchPlayerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MatchPlayer* match_player_;
  ::proto::GCGDuelExtra* gcg_duel_extra_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGCreateMatchGameNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGCreateMatchGameNotify) */ {
 public:
  ServerGCGCreateMatchGameNotify();
  virtual ~ServerGCGCreateMatchGameNotify();

  ServerGCGCreateMatchGameNotify(const ServerGCGCreateMatchGameNotify& from);

  inline ServerGCGCreateMatchGameNotify& operator=(const ServerGCGCreateMatchGameNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGCreateMatchGameNotify(ServerGCGCreateMatchGameNotify&& from) noexcept
    : ServerGCGCreateMatchGameNotify() {
    *this = ::std::move(from);
  }

  inline ServerGCGCreateMatchGameNotify& operator=(ServerGCGCreateMatchGameNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGCreateMatchGameNotify& default_instance();

  static inline const ServerGCGCreateMatchGameNotify* internal_default_instance() {
    return reinterpret_cast<const ServerGCGCreateMatchGameNotify*>(
               &_ServerGCGCreateMatchGameNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(ServerGCGCreateMatchGameNotify* other);
  friend void swap(ServerGCGCreateMatchGameNotify& a, ServerGCGCreateMatchGameNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGCreateMatchGameNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGCreateMatchGameNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGCreateMatchGameNotify& from);
  void MergeFrom(const ServerGCGCreateMatchGameNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGCreateMatchGameNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.GCGMatchPlayerInfo gcg_match_player_list = 2;
  int gcg_match_player_list_size() const;
  void clear_gcg_match_player_list();
  static const int kGcgMatchPlayerListFieldNumber = 2;
  const ::proto::GCGMatchPlayerInfo& gcg_match_player_list(int index) const;
  ::proto::GCGMatchPlayerInfo* mutable_gcg_match_player_list(int index);
  ::proto::GCGMatchPlayerInfo* add_gcg_match_player_list();
  ::google::protobuf::RepeatedPtrField< ::proto::GCGMatchPlayerInfo >*
      mutable_gcg_match_player_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::GCGMatchPlayerInfo >&
      gcg_match_player_list() const;

  // uint32 match_id = 1;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint32 match_id() const;
  void set_match_id(::google::protobuf::uint32 value);

  // uint32 try_create_time = 3;
  void clear_try_create_time();
  static const int kTryCreateTimeFieldNumber = 3;
  ::google::protobuf::uint32 try_create_time() const;
  void set_try_create_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGCreateMatchGameNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::GCGMatchPlayerInfo > gcg_match_player_list_;
  ::google::protobuf::uint32 match_id_;
  ::google::protobuf::uint32 try_create_time_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGCreateMatchAIGameNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGCreateMatchAIGameNotify) */ {
 public:
  ServerGCGCreateMatchAIGameNotify();
  virtual ~ServerGCGCreateMatchAIGameNotify();

  ServerGCGCreateMatchAIGameNotify(const ServerGCGCreateMatchAIGameNotify& from);

  inline ServerGCGCreateMatchAIGameNotify& operator=(const ServerGCGCreateMatchAIGameNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGCreateMatchAIGameNotify(ServerGCGCreateMatchAIGameNotify&& from) noexcept
    : ServerGCGCreateMatchAIGameNotify() {
    *this = ::std::move(from);
  }

  inline ServerGCGCreateMatchAIGameNotify& operator=(ServerGCGCreateMatchAIGameNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGCreateMatchAIGameNotify& default_instance();

  static inline const ServerGCGCreateMatchAIGameNotify* internal_default_instance() {
    return reinterpret_cast<const ServerGCGCreateMatchAIGameNotify*>(
               &_ServerGCGCreateMatchAIGameNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(ServerGCGCreateMatchAIGameNotify* other);
  friend void swap(ServerGCGCreateMatchAIGameNotify& a, ServerGCGCreateMatchAIGameNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGCreateMatchAIGameNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGCreateMatchAIGameNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGCreateMatchAIGameNotify& from);
  void MergeFrom(const ServerGCGCreateMatchAIGameNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGCreateMatchAIGameNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.GCGMatchPlayerInfo gcg_match_player_list = 2;
  int gcg_match_player_list_size() const;
  void clear_gcg_match_player_list();
  static const int kGcgMatchPlayerListFieldNumber = 2;
  const ::proto::GCGMatchPlayerInfo& gcg_match_player_list(int index) const;
  ::proto::GCGMatchPlayerInfo* mutable_gcg_match_player_list(int index);
  ::proto::GCGMatchPlayerInfo* add_gcg_match_player_list();
  ::google::protobuf::RepeatedPtrField< ::proto::GCGMatchPlayerInfo >*
      mutable_gcg_match_player_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::GCGMatchPlayerInfo >&
      gcg_match_player_list() const;

  // .proto.OnlinePlayerInfo ai_info = 3;
  bool has_ai_info() const;
  void clear_ai_info();
  static const int kAiInfoFieldNumber = 3;
  const ::proto::OnlinePlayerInfo& ai_info() const;
  ::proto::OnlinePlayerInfo* mutable_ai_info();
  ::proto::OnlinePlayerInfo* release_ai_info();
  void set_allocated_ai_info(::proto::OnlinePlayerInfo* ai_info);

  // uint32 match_id = 1;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint32 match_id() const;
  void set_match_id(::google::protobuf::uint32 value);

  // uint32 try_create_time = 4;
  void clear_try_create_time();
  static const int kTryCreateTimeFieldNumber = 4;
  ::google::protobuf::uint32 try_create_time() const;
  void set_try_create_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGCreateMatchAIGameNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::GCGMatchPlayerInfo > gcg_match_player_list_;
  ::proto::OnlinePlayerInfo* ai_info_;
  ::google::protobuf::uint32 match_id_;
  ::google::protobuf::uint32 try_create_time_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGMatchFinishNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGMatchFinishNotify) */ {
 public:
  ServerGCGMatchFinishNotify();
  virtual ~ServerGCGMatchFinishNotify();

  ServerGCGMatchFinishNotify(const ServerGCGMatchFinishNotify& from);

  inline ServerGCGMatchFinishNotify& operator=(const ServerGCGMatchFinishNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGMatchFinishNotify(ServerGCGMatchFinishNotify&& from) noexcept
    : ServerGCGMatchFinishNotify() {
    *this = ::std::move(from);
  }

  inline ServerGCGMatchFinishNotify& operator=(ServerGCGMatchFinishNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGMatchFinishNotify& default_instance();

  static inline const ServerGCGMatchFinishNotify* internal_default_instance() {
    return reinterpret_cast<const ServerGCGMatchFinishNotify*>(
               &_ServerGCGMatchFinishNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(ServerGCGMatchFinishNotify* other);
  friend void swap(ServerGCGMatchFinishNotify& a, ServerGCGMatchFinishNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGMatchFinishNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGMatchFinishNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGMatchFinishNotify& from);
  void MergeFrom(const ServerGCGMatchFinishNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGMatchFinishNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.ServerGCGMatchFinishNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGBackToDuelReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGBackToDuelReq) */ {
 public:
  ServerGCGBackToDuelReq();
  virtual ~ServerGCGBackToDuelReq();

  ServerGCGBackToDuelReq(const ServerGCGBackToDuelReq& from);

  inline ServerGCGBackToDuelReq& operator=(const ServerGCGBackToDuelReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGBackToDuelReq(ServerGCGBackToDuelReq&& from) noexcept
    : ServerGCGBackToDuelReq() {
    *this = ::std::move(from);
  }

  inline ServerGCGBackToDuelReq& operator=(ServerGCGBackToDuelReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGBackToDuelReq& default_instance();

  static inline const ServerGCGBackToDuelReq* internal_default_instance() {
    return reinterpret_cast<const ServerGCGBackToDuelReq*>(
               &_ServerGCGBackToDuelReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(ServerGCGBackToDuelReq* other);
  friend void swap(ServerGCGBackToDuelReq& a, ServerGCGBackToDuelReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGBackToDuelReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGBackToDuelReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGBackToDuelReq& from);
  void MergeFrom(const ServerGCGBackToDuelReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGBackToDuelReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 game_uid = 1;
  void clear_game_uid();
  static const int kGameUidFieldNumber = 1;
  ::google::protobuf::uint32 game_uid() const;
  void set_game_uid(::google::protobuf::uint32 value);

  // uint32 verify_code = 2;
  void clear_verify_code();
  static const int kVerifyCodeFieldNumber = 2;
  ::google::protobuf::uint32 verify_code() const;
  void set_verify_code(::google::protobuf::uint32 value);

  // uint32 client_data_version = 3;
  void clear_client_data_version();
  static const int kClientDataVersionFieldNumber = 3;
  ::google::protobuf::uint32 client_data_version() const;
  void set_client_data_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGBackToDuelReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 game_uid_;
  ::google::protobuf::uint32 verify_code_;
  ::google::protobuf::uint32 client_data_version_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGBackToDuelRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGBackToDuelRsp) */ {
 public:
  ServerGCGBackToDuelRsp();
  virtual ~ServerGCGBackToDuelRsp();

  ServerGCGBackToDuelRsp(const ServerGCGBackToDuelRsp& from);

  inline ServerGCGBackToDuelRsp& operator=(const ServerGCGBackToDuelRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGBackToDuelRsp(ServerGCGBackToDuelRsp&& from) noexcept
    : ServerGCGBackToDuelRsp() {
    *this = ::std::move(from);
  }

  inline ServerGCGBackToDuelRsp& operator=(ServerGCGBackToDuelRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGBackToDuelRsp& default_instance();

  static inline const ServerGCGBackToDuelRsp* internal_default_instance() {
    return reinterpret_cast<const ServerGCGBackToDuelRsp*>(
               &_ServerGCGBackToDuelRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(ServerGCGBackToDuelRsp* other);
  friend void swap(ServerGCGBackToDuelRsp& a, ServerGCGBackToDuelRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGBackToDuelRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGBackToDuelRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGBackToDuelRsp& from);
  void MergeFrom(const ServerGCGBackToDuelRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGBackToDuelRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 game_uid = 2;
  void clear_game_uid();
  static const int kGameUidFieldNumber = 2;
  ::google::protobuf::uint32 game_uid() const;
  void set_game_uid(::google::protobuf::uint32 value);

  // uint32 verify_code = 3;
  void clear_verify_code();
  static const int kVerifyCodeFieldNumber = 3;
  ::google::protobuf::uint32 verify_code() const;
  void set_verify_code(::google::protobuf::uint32 value);

  // uint32 app_id = 4;
  void clear_app_id();
  static const int kAppIdFieldNumber = 4;
  ::google::protobuf::uint32 app_id() const;
  void set_app_id(::google::protobuf::uint32 value);

  // uint32 thread_index = 5;
  void clear_thread_index();
  static const int kThreadIndexFieldNumber = 5;
  ::google::protobuf::uint32 thread_index() const;
  void set_thread_index(::google::protobuf::uint32 value);

  // uint32 client_data_version = 6;
  void clear_client_data_version();
  static const int kClientDataVersionFieldNumber = 6;
  ::google::protobuf::uint32 client_data_version() const;
  void set_client_data_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGBackToDuelRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 game_uid_;
  ::google::protobuf::uint32 verify_code_;
  ::google::protobuf::uint32 app_id_;
  ::google::protobuf::uint32 thread_index_;
  ::google::protobuf::uint32 client_data_version_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGMessagePackNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGMessagePackNotify) */ {
 public:
  ServerGCGMessagePackNotify();
  virtual ~ServerGCGMessagePackNotify();

  ServerGCGMessagePackNotify(const ServerGCGMessagePackNotify& from);

  inline ServerGCGMessagePackNotify& operator=(const ServerGCGMessagePackNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGMessagePackNotify(ServerGCGMessagePackNotify&& from) noexcept
    : ServerGCGMessagePackNotify() {
    *this = ::std::move(from);
  }

  inline ServerGCGMessagePackNotify& operator=(ServerGCGMessagePackNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGMessagePackNotify& default_instance();

  static inline const ServerGCGMessagePackNotify* internal_default_instance() {
    return reinterpret_cast<const ServerGCGMessagePackNotify*>(
               &_ServerGCGMessagePackNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(ServerGCGMessagePackNotify* other);
  friend void swap(ServerGCGMessagePackNotify& a, ServerGCGMessagePackNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGMessagePackNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGMessagePackNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGMessagePackNotify& from);
  void MergeFrom(const ServerGCGMessagePackNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGMessagePackNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.GCGMessagePack msg_pack_list = 3;
  int msg_pack_list_size() const;
  void clear_msg_pack_list();
  static const int kMsgPackListFieldNumber = 3;
  const ::proto::GCGMessagePack& msg_pack_list(int index) const;
  ::proto::GCGMessagePack* mutable_msg_pack_list(int index);
  ::proto::GCGMessagePack* add_msg_pack_list();
  ::google::protobuf::RepeatedPtrField< ::proto::GCGMessagePack >*
      mutable_msg_pack_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::GCGMessagePack >&
      msg_pack_list() const;

  // .proto.ServerGCGVerify verify = 1;
  bool has_verify() const;
  void clear_verify();
  static const int kVerifyFieldNumber = 1;
  const ::proto::ServerGCGVerify& verify() const;
  ::proto::ServerGCGVerify* mutable_verify();
  ::proto::ServerGCGVerify* release_verify();
  void set_allocated_verify(::proto::ServerGCGVerify* verify);

  // uint32 server_seq = 2;
  void clear_server_seq();
  static const int kServerSeqFieldNumber = 2;
  ::google::protobuf::uint32 server_seq() const;
  void set_server_seq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGMessagePackNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::GCGMessagePack > msg_pack_list_;
  ::proto::ServerGCGVerify* verify_;
  ::google::protobuf::uint32 server_seq_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGHeartBeatNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGHeartBeatNotify) */ {
 public:
  ServerGCGHeartBeatNotify();
  virtual ~ServerGCGHeartBeatNotify();

  ServerGCGHeartBeatNotify(const ServerGCGHeartBeatNotify& from);

  inline ServerGCGHeartBeatNotify& operator=(const ServerGCGHeartBeatNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGHeartBeatNotify(ServerGCGHeartBeatNotify&& from) noexcept
    : ServerGCGHeartBeatNotify() {
    *this = ::std::move(from);
  }

  inline ServerGCGHeartBeatNotify& operator=(ServerGCGHeartBeatNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGHeartBeatNotify& default_instance();

  static inline const ServerGCGHeartBeatNotify* internal_default_instance() {
    return reinterpret_cast<const ServerGCGHeartBeatNotify*>(
               &_ServerGCGHeartBeatNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(ServerGCGHeartBeatNotify* other);
  friend void swap(ServerGCGHeartBeatNotify& a, ServerGCGHeartBeatNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGHeartBeatNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGHeartBeatNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGHeartBeatNotify& from);
  void MergeFrom(const ServerGCGHeartBeatNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGHeartBeatNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.ServerGCGVerify verify = 1;
  bool has_verify() const;
  void clear_verify();
  static const int kVerifyFieldNumber = 1;
  const ::proto::ServerGCGVerify& verify() const;
  ::proto::ServerGCGVerify* mutable_verify();
  ::proto::ServerGCGVerify* release_verify();
  void set_allocated_verify(::proto::ServerGCGVerify* verify);

  // uint32 server_seq = 2;
  void clear_server_seq();
  static const int kServerSeqFieldNumber = 2;
  ::google::protobuf::uint32 server_seq() const;
  void set_server_seq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGHeartBeatNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ServerGCGVerify* verify_;
  ::google::protobuf::uint32 server_seq_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGSkillPreviewNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGSkillPreviewNotify) */ {
 public:
  ServerGCGSkillPreviewNotify();
  virtual ~ServerGCGSkillPreviewNotify();

  ServerGCGSkillPreviewNotify(const ServerGCGSkillPreviewNotify& from);

  inline ServerGCGSkillPreviewNotify& operator=(const ServerGCGSkillPreviewNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGSkillPreviewNotify(ServerGCGSkillPreviewNotify&& from) noexcept
    : ServerGCGSkillPreviewNotify() {
    *this = ::std::move(from);
  }

  inline ServerGCGSkillPreviewNotify& operator=(ServerGCGSkillPreviewNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGSkillPreviewNotify& default_instance();

  static inline const ServerGCGSkillPreviewNotify* internal_default_instance() {
    return reinterpret_cast<const ServerGCGSkillPreviewNotify*>(
               &_ServerGCGSkillPreviewNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(ServerGCGSkillPreviewNotify* other);
  friend void swap(ServerGCGSkillPreviewNotify& a, ServerGCGSkillPreviewNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGSkillPreviewNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGSkillPreviewNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGSkillPreviewNotify& from);
  void MergeFrom(const ServerGCGSkillPreviewNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGSkillPreviewNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.GCGSkillPreviewInfo skill_preview_list = 4;
  int skill_preview_list_size() const;
  void clear_skill_preview_list();
  static const int kSkillPreviewListFieldNumber = 4;
  const ::proto::GCGSkillPreviewInfo& skill_preview_list(int index) const;
  ::proto::GCGSkillPreviewInfo* mutable_skill_preview_list(int index);
  ::proto::GCGSkillPreviewInfo* add_skill_preview_list();
  ::google::protobuf::RepeatedPtrField< ::proto::GCGSkillPreviewInfo >*
      mutable_skill_preview_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::GCGSkillPreviewInfo >&
      skill_preview_list() const;

  // repeated .proto.GCGChangeOnstageInfo change_onstage_preview_list = 5;
  int change_onstage_preview_list_size() const;
  void clear_change_onstage_preview_list();
  static const int kChangeOnstagePreviewListFieldNumber = 5;
  const ::proto::GCGChangeOnstageInfo& change_onstage_preview_list(int index) const;
  ::proto::GCGChangeOnstageInfo* mutable_change_onstage_preview_list(int index);
  ::proto::GCGChangeOnstageInfo* add_change_onstage_preview_list();
  ::google::protobuf::RepeatedPtrField< ::proto::GCGChangeOnstageInfo >*
      mutable_change_onstage_preview_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::GCGChangeOnstageInfo >&
      change_onstage_preview_list() const;

  // repeated .proto.GCGSkillPreviewPlayCardInfo play_card_list = 6;
  int play_card_list_size() const;
  void clear_play_card_list();
  static const int kPlayCardListFieldNumber = 6;
  const ::proto::GCGSkillPreviewPlayCardInfo& play_card_list(int index) const;
  ::proto::GCGSkillPreviewPlayCardInfo* mutable_play_card_list(int index);
  ::proto::GCGSkillPreviewPlayCardInfo* add_play_card_list();
  ::google::protobuf::RepeatedPtrField< ::proto::GCGSkillPreviewPlayCardInfo >*
      mutable_play_card_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::GCGSkillPreviewPlayCardInfo >&
      play_card_list() const;

  // .proto.ServerGCGVerify verify = 1;
  bool has_verify() const;
  void clear_verify();
  static const int kVerifyFieldNumber = 1;
  const ::proto::ServerGCGVerify& verify() const;
  ::proto::ServerGCGVerify* mutable_verify();
  ::proto::ServerGCGVerify* release_verify();
  void set_allocated_verify(::proto::ServerGCGVerify* verify);

  // uint32 controller_id = 2;
  void clear_controller_id();
  static const int kControllerIdFieldNumber = 2;
  ::google::protobuf::uint32 controller_id() const;
  void set_controller_id(::google::protobuf::uint32 value);

  // uint32 onstage_card_guid = 3;
  void clear_onstage_card_guid();
  static const int kOnstageCardGuidFieldNumber = 3;
  ::google::protobuf::uint32 onstage_card_guid() const;
  void set_onstage_card_guid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGSkillPreviewNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::GCGSkillPreviewInfo > skill_preview_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::GCGChangeOnstageInfo > change_onstage_preview_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::GCGSkillPreviewPlayCardInfo > play_card_list_;
  ::proto::ServerGCGVerify* verify_;
  ::google::protobuf::uint32 controller_id_;
  ::google::protobuf::uint32 onstage_card_guid_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerGCGChallengeUpdateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerGCGChallengeUpdateNotify) */ {
 public:
  ServerGCGChallengeUpdateNotify();
  virtual ~ServerGCGChallengeUpdateNotify();

  ServerGCGChallengeUpdateNotify(const ServerGCGChallengeUpdateNotify& from);

  inline ServerGCGChallengeUpdateNotify& operator=(const ServerGCGChallengeUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerGCGChallengeUpdateNotify(ServerGCGChallengeUpdateNotify&& from) noexcept
    : ServerGCGChallengeUpdateNotify() {
    *this = ::std::move(from);
  }

  inline ServerGCGChallengeUpdateNotify& operator=(ServerGCGChallengeUpdateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerGCGChallengeUpdateNotify& default_instance();

  static inline const ServerGCGChallengeUpdateNotify* internal_default_instance() {
    return reinterpret_cast<const ServerGCGChallengeUpdateNotify*>(
               &_ServerGCGChallengeUpdateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(ServerGCGChallengeUpdateNotify* other);
  friend void swap(ServerGCGChallengeUpdateNotify& a, ServerGCGChallengeUpdateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerGCGChallengeUpdateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerGCGChallengeUpdateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerGCGChallengeUpdateNotify& from);
  void MergeFrom(const ServerGCGChallengeUpdateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerGCGChallengeUpdateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.ServerGCGVerify verify = 1;
  bool has_verify() const;
  void clear_verify();
  static const int kVerifyFieldNumber = 1;
  const ::proto::ServerGCGVerify& verify() const;
  ::proto::ServerGCGVerify* mutable_verify();
  ::proto::ServerGCGVerify* release_verify();
  void set_allocated_verify(::proto::ServerGCGVerify* verify);

  // .proto.GCGDuelChallenge challenge = 3;
  bool has_challenge() const;
  void clear_challenge();
  static const int kChallengeFieldNumber = 3;
  const ::proto::GCGDuelChallenge& challenge() const;
  ::proto::GCGDuelChallenge* mutable_challenge();
  ::proto::GCGDuelChallenge* release_challenge();
  void set_allocated_challenge(::proto::GCGDuelChallenge* challenge);

  // uint32 server_seq = 2;
  void clear_server_seq();
  static const int kServerSeqFieldNumber = 2;
  ::google::protobuf::uint32 server_seq() const;
  void set_server_seq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerGCGChallengeUpdateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ServerGCGVerify* verify_;
  ::proto::GCGDuelChallenge* challenge_;
  ::google::protobuf::uint32 server_seq_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fgcg_2eserver_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ServerGCGVerify

// uint32 game_uid = 1;
inline void ServerGCGVerify::clear_game_uid() {
  game_uid_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGVerify::game_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGVerify.game_uid)
  return game_uid_;
}
inline void ServerGCGVerify::set_game_uid(::google::protobuf::uint32 value) {
  
  game_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGVerify.game_uid)
}

// uint32 verify_code = 2;
inline void ServerGCGVerify::clear_verify_code() {
  verify_code_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGVerify::verify_code() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGVerify.verify_code)
  return verify_code_;
}
inline void ServerGCGVerify::set_verify_code(::google::protobuf::uint32 value) {
  
  verify_code_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGVerify.verify_code)
}

// uint32 app_id = 3;
inline void ServerGCGVerify::clear_app_id() {
  app_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGVerify::app_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGVerify.app_id)
  return app_id_;
}
inline void ServerGCGVerify::set_app_id(::google::protobuf::uint32 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGVerify.app_id)
}

// uint32 thread_index = 4;
inline void ServerGCGVerify::clear_thread_index() {
  thread_index_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGVerify::thread_index() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGVerify.thread_index)
  return thread_index_;
}
inline void ServerGCGVerify::set_thread_index(::google::protobuf::uint32 value) {
  
  thread_index_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGVerify.thread_index)
}

// -------------------------------------------------------------------

// ServerGCGOperationReq

// uint32 uid = 1;
inline void ServerGCGOperationReq::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGOperationReq::uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGOperationReq.uid)
  return uid_;
}
inline void ServerGCGOperationReq::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGOperationReq.uid)
}

// .proto.GCGOperation op = 2;
inline bool ServerGCGOperationReq::has_op() const {
  return this != internal_default_instance() && op_ != NULL;
}
inline void ServerGCGOperationReq::clear_op() {
  if (GetArenaNoVirtual() == NULL && op_ != NULL) delete op_;
  op_ = NULL;
}
inline const ::proto::GCGOperation& ServerGCGOperationReq::op() const {
  const ::proto::GCGOperation* p = op_;
  // @@protoc_insertion_point(field_get:proto.ServerGCGOperationReq.op)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::GCGOperation*>(
      &::proto::_GCGOperation_default_instance_);
}
inline ::proto::GCGOperation* ServerGCGOperationReq::mutable_op() {
  
  if (op_ == NULL) {
    op_ = new ::proto::GCGOperation;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerGCGOperationReq.op)
  return op_;
}
inline ::proto::GCGOperation* ServerGCGOperationReq::release_op() {
  // @@protoc_insertion_point(field_release:proto.ServerGCGOperationReq.op)
  
  ::proto::GCGOperation* temp = op_;
  op_ = NULL;
  return temp;
}
inline void ServerGCGOperationReq::set_allocated_op(::proto::GCGOperation* op) {
  delete op_;
  op_ = op;
  if (op) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerGCGOperationReq.op)
}

// uint32 op_seq = 3;
inline void ServerGCGOperationReq::clear_op_seq() {
  op_seq_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGOperationReq::op_seq() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGOperationReq.op_seq)
  return op_seq_;
}
inline void ServerGCGOperationReq::set_op_seq(::google::protobuf::uint32 value) {
  
  op_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGOperationReq.op_seq)
}

// -------------------------------------------------------------------

// ServerGCGOperationRsp

// int32 retcode = 1;
inline void ServerGCGOperationRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ServerGCGOperationRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGOperationRsp.retcode)
  return retcode_;
}
inline void ServerGCGOperationRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGOperationRsp.retcode)
}

// uint32 op_seq = 2;
inline void ServerGCGOperationRsp::clear_op_seq() {
  op_seq_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGOperationRsp::op_seq() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGOperationRsp.op_seq)
  return op_seq_;
}
inline void ServerGCGOperationRsp::set_op_seq(::google::protobuf::uint32 value) {
  
  op_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGOperationRsp.op_seq)
}

// -------------------------------------------------------------------

// ServerGCGAskDuelReq

// uint32 uid = 1;
inline void ServerGCGAskDuelReq::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGAskDuelReq::uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGAskDuelReq.uid)
  return uid_;
}
inline void ServerGCGAskDuelReq::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGAskDuelReq.uid)
}

// -------------------------------------------------------------------

// ServerGCGNewGameInfoNotify

// uint32 app_id = 1;
inline void ServerGCGNewGameInfoNotify::clear_app_id() {
  app_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGNewGameInfoNotify::app_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGNewGameInfoNotify.app_id)
  return app_id_;
}
inline void ServerGCGNewGameInfoNotify::set_app_id(::google::protobuf::uint32 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGNewGameInfoNotify.app_id)
}

// uint32 thread_index = 2;
inline void ServerGCGNewGameInfoNotify::clear_thread_index() {
  thread_index_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGNewGameInfoNotify::thread_index() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGNewGameInfoNotify.thread_index)
  return thread_index_;
}
inline void ServerGCGNewGameInfoNotify::set_thread_index(::google::protobuf::uint32 value) {
  
  thread_index_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGNewGameInfoNotify.thread_index)
}

// .proto.GCGGameBriefData game_brief_data = 3;
inline bool ServerGCGNewGameInfoNotify::has_game_brief_data() const {
  return this != internal_default_instance() && game_brief_data_ != NULL;
}
inline void ServerGCGNewGameInfoNotify::clear_game_brief_data() {
  if (GetArenaNoVirtual() == NULL && game_brief_data_ != NULL) delete game_brief_data_;
  game_brief_data_ = NULL;
}
inline const ::proto::GCGGameBriefData& ServerGCGNewGameInfoNotify::game_brief_data() const {
  const ::proto::GCGGameBriefData* p = game_brief_data_;
  // @@protoc_insertion_point(field_get:proto.ServerGCGNewGameInfoNotify.game_brief_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::GCGGameBriefData*>(
      &::proto::_GCGGameBriefData_default_instance_);
}
inline ::proto::GCGGameBriefData* ServerGCGNewGameInfoNotify::mutable_game_brief_data() {
  
  if (game_brief_data_ == NULL) {
    game_brief_data_ = new ::proto::GCGGameBriefData;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerGCGNewGameInfoNotify.game_brief_data)
  return game_brief_data_;
}
inline ::proto::GCGGameBriefData* ServerGCGNewGameInfoNotify::release_game_brief_data() {
  // @@protoc_insertion_point(field_release:proto.ServerGCGNewGameInfoNotify.game_brief_data)
  
  ::proto::GCGGameBriefData* temp = game_brief_data_;
  game_brief_data_ = NULL;
  return temp;
}
inline void ServerGCGNewGameInfoNotify::set_allocated_game_brief_data(::proto::GCGGameBriefData* game_brief_data) {
  delete game_brief_data_;
  game_brief_data_ = game_brief_data;
  if (game_brief_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerGCGNewGameInfoNotify.game_brief_data)
}

// uint32 create_time = 4;
inline void ServerGCGNewGameInfoNotify::clear_create_time() {
  create_time_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGNewGameInfoNotify::create_time() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGNewGameInfoNotify.create_time)
  return create_time_;
}
inline void ServerGCGNewGameInfoNotify::set_create_time(::google::protobuf::uint32 value) {
  
  create_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGNewGameInfoNotify.create_time)
}

// uint32 try_create_time = 5;
inline void ServerGCGNewGameInfoNotify::clear_try_create_time() {
  try_create_time_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGNewGameInfoNotify::try_create_time() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGNewGameInfoNotify.try_create_time)
  return try_create_time_;
}
inline void ServerGCGNewGameInfoNotify::set_try_create_time(::google::protobuf::uint32 value) {
  
  try_create_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGNewGameInfoNotify.try_create_time)
}

// -------------------------------------------------------------------

// ServerGCGGMCommandReq

// repeated string msg_list = 1;
inline int ServerGCGGMCommandReq::msg_list_size() const {
  return msg_list_.size();
}
inline void ServerGCGGMCommandReq::clear_msg_list() {
  msg_list_.Clear();
}
inline const ::std::string& ServerGCGGMCommandReq::msg_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGGMCommandReq.msg_list)
  return msg_list_.Get(index);
}
inline ::std::string* ServerGCGGMCommandReq::mutable_msg_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerGCGGMCommandReq.msg_list)
  return msg_list_.Mutable(index);
}
inline void ServerGCGGMCommandReq::set_msg_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.ServerGCGGMCommandReq.msg_list)
  msg_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ServerGCGGMCommandReq::set_msg_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.ServerGCGGMCommandReq.msg_list)
  msg_list_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ServerGCGGMCommandReq::set_msg_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  msg_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.ServerGCGGMCommandReq.msg_list)
}
inline void ServerGCGGMCommandReq::set_msg_list(int index, const char* value, size_t size) {
  msg_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.ServerGCGGMCommandReq.msg_list)
}
inline ::std::string* ServerGCGGMCommandReq::add_msg_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.ServerGCGGMCommandReq.msg_list)
  return msg_list_.Add();
}
inline void ServerGCGGMCommandReq::add_msg_list(const ::std::string& value) {
  msg_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.ServerGCGGMCommandReq.msg_list)
}
#if LANG_CXX11
inline void ServerGCGGMCommandReq::add_msg_list(::std::string&& value) {
  msg_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.ServerGCGGMCommandReq.msg_list)
}
#endif
inline void ServerGCGGMCommandReq::add_msg_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  msg_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.ServerGCGGMCommandReq.msg_list)
}
inline void ServerGCGGMCommandReq::add_msg_list(const char* value, size_t size) {
  msg_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.ServerGCGGMCommandReq.msg_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ServerGCGGMCommandReq::msg_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGCGGMCommandReq.msg_list)
  return msg_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ServerGCGGMCommandReq::mutable_msg_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGCGGMCommandReq.msg_list)
  return &msg_list_;
}

// -------------------------------------------------------------------

// ServerGCGGMCommandRsp

// int32 retcode = 1;
inline void ServerGCGGMCommandRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ServerGCGGMCommandRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGGMCommandRsp.retcode)
  return retcode_;
}
inline void ServerGCGGMCommandRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGGMCommandRsp.retcode)
}

// string ret_msg = 2;
inline void ServerGCGGMCommandRsp::clear_ret_msg() {
  ret_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ServerGCGGMCommandRsp::ret_msg() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGGMCommandRsp.ret_msg)
  return ret_msg_.GetNoArena();
}
inline void ServerGCGGMCommandRsp::set_ret_msg(const ::std::string& value) {
  
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ServerGCGGMCommandRsp.ret_msg)
}
#if LANG_CXX11
inline void ServerGCGGMCommandRsp::set_ret_msg(::std::string&& value) {
  
  ret_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ServerGCGGMCommandRsp.ret_msg)
}
#endif
inline void ServerGCGGMCommandRsp::set_ret_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ServerGCGGMCommandRsp.ret_msg)
}
inline void ServerGCGGMCommandRsp::set_ret_msg(const char* value, size_t size) {
  
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ServerGCGGMCommandRsp.ret_msg)
}
inline ::std::string* ServerGCGGMCommandRsp::mutable_ret_msg() {
  
  // @@protoc_insertion_point(field_mutable:proto.ServerGCGGMCommandRsp.ret_msg)
  return ret_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServerGCGGMCommandRsp::release_ret_msg() {
  // @@protoc_insertion_point(field_release:proto.ServerGCGGMCommandRsp.ret_msg)
  
  return ret_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerGCGGMCommandRsp::set_allocated_ret_msg(::std::string* ret_msg) {
  if (ret_msg != NULL) {
    
  } else {
    
  }
  ret_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ret_msg);
  // @@protoc_insertion_point(field_set_allocated:proto.ServerGCGGMCommandRsp.ret_msg)
}

// string ret_extra_content = 3;
inline void ServerGCGGMCommandRsp::clear_ret_extra_content() {
  ret_extra_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ServerGCGGMCommandRsp::ret_extra_content() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGGMCommandRsp.ret_extra_content)
  return ret_extra_content_.GetNoArena();
}
inline void ServerGCGGMCommandRsp::set_ret_extra_content(const ::std::string& value) {
  
  ret_extra_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ServerGCGGMCommandRsp.ret_extra_content)
}
#if LANG_CXX11
inline void ServerGCGGMCommandRsp::set_ret_extra_content(::std::string&& value) {
  
  ret_extra_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ServerGCGGMCommandRsp.ret_extra_content)
}
#endif
inline void ServerGCGGMCommandRsp::set_ret_extra_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ret_extra_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ServerGCGGMCommandRsp.ret_extra_content)
}
inline void ServerGCGGMCommandRsp::set_ret_extra_content(const char* value, size_t size) {
  
  ret_extra_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ServerGCGGMCommandRsp.ret_extra_content)
}
inline ::std::string* ServerGCGGMCommandRsp::mutable_ret_extra_content() {
  
  // @@protoc_insertion_point(field_mutable:proto.ServerGCGGMCommandRsp.ret_extra_content)
  return ret_extra_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServerGCGGMCommandRsp::release_ret_extra_content() {
  // @@protoc_insertion_point(field_release:proto.ServerGCGGMCommandRsp.ret_extra_content)
  
  return ret_extra_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerGCGGMCommandRsp::set_allocated_ret_extra_content(::std::string* ret_extra_content) {
  if (ret_extra_content != NULL) {
    
  } else {
    
  }
  ret_extra_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ret_extra_content);
  // @@protoc_insertion_point(field_set_allocated:proto.ServerGCGGMCommandRsp.ret_extra_content)
}

// -------------------------------------------------------------------

// ServerGCGInitFinishReq

// int32 retcode = 1;
inline void ServerGCGInitFinishReq::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ServerGCGInitFinishReq::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGInitFinishReq.retcode)
  return retcode_;
}
inline void ServerGCGInitFinishReq::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGInitFinishReq.retcode)
}

// -------------------------------------------------------------------

// ServerGCGSyncReq

// uint32 game_uid = 1;
inline void ServerGCGSyncReq::clear_game_uid() {
  game_uid_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGSyncReq::game_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGSyncReq.game_uid)
  return game_uid_;
}
inline void ServerGCGSyncReq::set_game_uid(::google::protobuf::uint32 value) {
  
  game_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGSyncReq.game_uid)
}

// uint32 verify_code = 2;
inline void ServerGCGSyncReq::clear_verify_code() {
  verify_code_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGSyncReq::verify_code() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGSyncReq.verify_code)
  return verify_code_;
}
inline void ServerGCGSyncReq::set_verify_code(::google::protobuf::uint32 value) {
  
  verify_code_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGSyncReq.verify_code)
}

// bool is_login = 3;
inline void ServerGCGSyncReq::clear_is_login() {
  is_login_ = false;
}
inline bool ServerGCGSyncReq::is_login() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGSyncReq.is_login)
  return is_login_;
}
inline void ServerGCGSyncReq::set_is_login(bool value) {
  
  is_login_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGSyncReq.is_login)
}

// -------------------------------------------------------------------

// ServerGCGSyncRsp

// int32 retcode = 1;
inline void ServerGCGSyncRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ServerGCGSyncRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGSyncRsp.retcode)
  return retcode_;
}
inline void ServerGCGSyncRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGSyncRsp.retcode)
}

// uint32 game_uid = 2;
inline void ServerGCGSyncRsp::clear_game_uid() {
  game_uid_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGSyncRsp::game_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGSyncRsp.game_uid)
  return game_uid_;
}
inline void ServerGCGSyncRsp::set_game_uid(::google::protobuf::uint32 value) {
  
  game_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGSyncRsp.game_uid)
}

// uint32 verify_code = 3;
inline void ServerGCGSyncRsp::clear_verify_code() {
  verify_code_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGSyncRsp::verify_code() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGSyncRsp.verify_code)
  return verify_code_;
}
inline void ServerGCGSyncRsp::set_verify_code(::google::protobuf::uint32 value) {
  
  verify_code_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGSyncRsp.verify_code)
}

// uint32 app_id = 4;
inline void ServerGCGSyncRsp::clear_app_id() {
  app_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGSyncRsp::app_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGSyncRsp.app_id)
  return app_id_;
}
inline void ServerGCGSyncRsp::set_app_id(::google::protobuf::uint32 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGSyncRsp.app_id)
}

// uint32 thread_index = 5;
inline void ServerGCGSyncRsp::clear_thread_index() {
  thread_index_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGSyncRsp::thread_index() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGSyncRsp.thread_index)
  return thread_index_;
}
inline void ServerGCGSyncRsp::set_thread_index(::google::protobuf::uint32 value) {
  
  thread_index_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGSyncRsp.thread_index)
}

// bool is_login = 6;
inline void ServerGCGSyncRsp::clear_is_login() {
  is_login_ = false;
}
inline bool ServerGCGSyncRsp::is_login() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGSyncRsp.is_login)
  return is_login_;
}
inline void ServerGCGSyncRsp::set_is_login(bool value) {
  
  is_login_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGSyncRsp.is_login)
}

// -------------------------------------------------------------------

// GCGPlayerData

// .proto.OnlinePlayerInfo player_info = 1;
inline bool GCGPlayerData::has_player_info() const {
  return this != internal_default_instance() && player_info_ != NULL;
}
inline void GCGPlayerData::clear_player_info() {
  if (GetArenaNoVirtual() == NULL && player_info_ != NULL) delete player_info_;
  player_info_ = NULL;
}
inline const ::proto::OnlinePlayerInfo& GCGPlayerData::player_info() const {
  const ::proto::OnlinePlayerInfo* p = player_info_;
  // @@protoc_insertion_point(field_get:proto.GCGPlayerData.player_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::OnlinePlayerInfo*>(
      &::proto::_OnlinePlayerInfo_default_instance_);
}
inline ::proto::OnlinePlayerInfo* GCGPlayerData::mutable_player_info() {
  
  if (player_info_ == NULL) {
    player_info_ = new ::proto::OnlinePlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.GCGPlayerData.player_info)
  return player_info_;
}
inline ::proto::OnlinePlayerInfo* GCGPlayerData::release_player_info() {
  // @@protoc_insertion_point(field_release:proto.GCGPlayerData.player_info)
  
  ::proto::OnlinePlayerInfo* temp = player_info_;
  player_info_ = NULL;
  return temp;
}
inline void GCGPlayerData::set_allocated_player_info(::proto::OnlinePlayerInfo* player_info) {
  delete player_info_;
  player_info_ = player_info;
  if (player_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GCGPlayerData.player_info)
}

// .proto.GCGDuelExtra duel_extra = 2;
inline bool GCGPlayerData::has_duel_extra() const {
  return this != internal_default_instance() && duel_extra_ != NULL;
}
inline void GCGPlayerData::clear_duel_extra() {
  if (GetArenaNoVirtual() == NULL && duel_extra_ != NULL) delete duel_extra_;
  duel_extra_ = NULL;
}
inline const ::proto::GCGDuelExtra& GCGPlayerData::duel_extra() const {
  const ::proto::GCGDuelExtra* p = duel_extra_;
  // @@protoc_insertion_point(field_get:proto.GCGPlayerData.duel_extra)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::GCGDuelExtra*>(
      &::proto::_GCGDuelExtra_default_instance_);
}
inline ::proto::GCGDuelExtra* GCGPlayerData::mutable_duel_extra() {
  
  if (duel_extra_ == NULL) {
    duel_extra_ = new ::proto::GCGDuelExtra;
  }
  // @@protoc_insertion_point(field_mutable:proto.GCGPlayerData.duel_extra)
  return duel_extra_;
}
inline ::proto::GCGDuelExtra* GCGPlayerData::release_duel_extra() {
  // @@protoc_insertion_point(field_release:proto.GCGPlayerData.duel_extra)
  
  ::proto::GCGDuelExtra* temp = duel_extra_;
  duel_extra_ = NULL;
  return temp;
}
inline void GCGPlayerData::set_allocated_duel_extra(::proto::GCGDuelExtra* duel_extra) {
  delete duel_extra_;
  duel_extra_ = duel_extra;
  if (duel_extra) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GCGPlayerData.duel_extra)
}

// -------------------------------------------------------------------

// ServerGCGCreateSingleGameReq

// uint32 game_id = 1;
inline void ServerGCGCreateSingleGameReq::clear_game_id() {
  game_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGCreateSingleGameReq::game_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGCreateSingleGameReq.game_id)
  return game_id_;
}
inline void ServerGCGCreateSingleGameReq::set_game_id(::google::protobuf::uint32 value) {
  
  game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGCreateSingleGameReq.game_id)
}

// .proto.GCGGameBusinessType business_type = 2;
inline void ServerGCGCreateSingleGameReq::clear_business_type() {
  business_type_ = 0;
}
inline ::proto::GCGGameBusinessType ServerGCGCreateSingleGameReq::business_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGCreateSingleGameReq.business_type)
  return static_cast< ::proto::GCGGameBusinessType >(business_type_);
}
inline void ServerGCGCreateSingleGameReq::set_business_type(::proto::GCGGameBusinessType value) {
  
  business_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGCreateSingleGameReq.business_type)
}

// .proto.GCGPlayerData player_data = 3;
inline bool ServerGCGCreateSingleGameReq::has_player_data() const {
  return this != internal_default_instance() && player_data_ != NULL;
}
inline void ServerGCGCreateSingleGameReq::clear_player_data() {
  if (GetArenaNoVirtual() == NULL && player_data_ != NULL) delete player_data_;
  player_data_ = NULL;
}
inline const ::proto::GCGPlayerData& ServerGCGCreateSingleGameReq::player_data() const {
  const ::proto::GCGPlayerData* p = player_data_;
  // @@protoc_insertion_point(field_get:proto.ServerGCGCreateSingleGameReq.player_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::GCGPlayerData*>(
      &::proto::_GCGPlayerData_default_instance_);
}
inline ::proto::GCGPlayerData* ServerGCGCreateSingleGameReq::mutable_player_data() {
  
  if (player_data_ == NULL) {
    player_data_ = new ::proto::GCGPlayerData;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerGCGCreateSingleGameReq.player_data)
  return player_data_;
}
inline ::proto::GCGPlayerData* ServerGCGCreateSingleGameReq::release_player_data() {
  // @@protoc_insertion_point(field_release:proto.ServerGCGCreateSingleGameReq.player_data)
  
  ::proto::GCGPlayerData* temp = player_data_;
  player_data_ = NULL;
  return temp;
}
inline void ServerGCGCreateSingleGameReq::set_allocated_player_data(::proto::GCGPlayerData* player_data) {
  delete player_data_;
  player_data_ = player_data;
  if (player_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerGCGCreateSingleGameReq.player_data)
}

// repeated uint32 custom_param_list = 4;
inline int ServerGCGCreateSingleGameReq::custom_param_list_size() const {
  return custom_param_list_.size();
}
inline void ServerGCGCreateSingleGameReq::clear_custom_param_list() {
  custom_param_list_.Clear();
}
inline ::google::protobuf::uint32 ServerGCGCreateSingleGameReq::custom_param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGCreateSingleGameReq.custom_param_list)
  return custom_param_list_.Get(index);
}
inline void ServerGCGCreateSingleGameReq::set_custom_param_list(int index, ::google::protobuf::uint32 value) {
  custom_param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerGCGCreateSingleGameReq.custom_param_list)
}
inline void ServerGCGCreateSingleGameReq::add_custom_param_list(::google::protobuf::uint32 value) {
  custom_param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerGCGCreateSingleGameReq.custom_param_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerGCGCreateSingleGameReq::custom_param_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGCGCreateSingleGameReq.custom_param_list)
  return custom_param_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerGCGCreateSingleGameReq::mutable_custom_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGCGCreateSingleGameReq.custom_param_list)
  return &custom_param_list_;
}

// uint32 try_create_time = 5;
inline void ServerGCGCreateSingleGameReq::clear_try_create_time() {
  try_create_time_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGCreateSingleGameReq::try_create_time() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGCreateSingleGameReq.try_create_time)
  return try_create_time_;
}
inline void ServerGCGCreateSingleGameReq::set_try_create_time(::google::protobuf::uint32 value) {
  
  try_create_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGCreateSingleGameReq.try_create_time)
}

// -------------------------------------------------------------------

// ServerGCGCreateSingleGameRsp

// int32 retcode = 1;
inline void ServerGCGCreateSingleGameRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ServerGCGCreateSingleGameRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGCreateSingleGameRsp.retcode)
  return retcode_;
}
inline void ServerGCGCreateSingleGameRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGCreateSingleGameRsp.retcode)
}

// uint32 game_id = 2;
inline void ServerGCGCreateSingleGameRsp::clear_game_id() {
  game_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGCreateSingleGameRsp::game_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGCreateSingleGameRsp.game_id)
  return game_id_;
}
inline void ServerGCGCreateSingleGameRsp::set_game_id(::google::protobuf::uint32 value) {
  
  game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGCreateSingleGameRsp.game_id)
}

// -------------------------------------------------------------------

// ServerGCGGiveUpGameReq

// uint32 game_uid = 1;
inline void ServerGCGGiveUpGameReq::clear_game_uid() {
  game_uid_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGGiveUpGameReq::game_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGGiveUpGameReq.game_uid)
  return game_uid_;
}
inline void ServerGCGGiveUpGameReq::set_game_uid(::google::protobuf::uint32 value) {
  
  game_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGGiveUpGameReq.game_uid)
}

// uint32 game_id = 2;
inline void ServerGCGGiveUpGameReq::clear_game_id() {
  game_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGGiveUpGameReq::game_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGGiveUpGameReq.game_id)
  return game_id_;
}
inline void ServerGCGGiveUpGameReq::set_game_id(::google::protobuf::uint32 value) {
  
  game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGGiveUpGameReq.game_id)
}

// uint32 verify_code = 3;
inline void ServerGCGGiveUpGameReq::clear_verify_code() {
  verify_code_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGGiveUpGameReq::verify_code() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGGiveUpGameReq.verify_code)
  return verify_code_;
}
inline void ServerGCGGiveUpGameReq::set_verify_code(::google::protobuf::uint32 value) {
  
  verify_code_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGGiveUpGameReq.verify_code)
}

// .proto.GCGGameBusinessType business_type = 4;
inline void ServerGCGGiveUpGameReq::clear_business_type() {
  business_type_ = 0;
}
inline ::proto::GCGGameBusinessType ServerGCGGiveUpGameReq::business_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGGiveUpGameReq.business_type)
  return static_cast< ::proto::GCGGameBusinessType >(business_type_);
}
inline void ServerGCGGiveUpGameReq::set_business_type(::proto::GCGGameBusinessType value) {
  
  business_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGGiveUpGameReq.business_type)
}

// -------------------------------------------------------------------

// ServerGCGGiveUpGameRsp

// int32 retcode = 1;
inline void ServerGCGGiveUpGameRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ServerGCGGiveUpGameRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGGiveUpGameRsp.retcode)
  return retcode_;
}
inline void ServerGCGGiveUpGameRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGGiveUpGameRsp.retcode)
}

// uint32 game_uid = 2;
inline void ServerGCGGiveUpGameRsp::clear_game_uid() {
  game_uid_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGGiveUpGameRsp::game_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGGiveUpGameRsp.game_uid)
  return game_uid_;
}
inline void ServerGCGGiveUpGameRsp::set_game_uid(::google::protobuf::uint32 value) {
  
  game_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGGiveUpGameRsp.game_uid)
}

// uint32 game_id = 3;
inline void ServerGCGGiveUpGameRsp::clear_game_id() {
  game_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGGiveUpGameRsp::game_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGGiveUpGameRsp.game_id)
  return game_id_;
}
inline void ServerGCGGiveUpGameRsp::set_game_id(::google::protobuf::uint32 value) {
  
  game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGGiveUpGameRsp.game_id)
}

// uint32 verify_code = 4;
inline void ServerGCGGiveUpGameRsp::clear_verify_code() {
  verify_code_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGGiveUpGameRsp::verify_code() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGGiveUpGameRsp.verify_code)
  return verify_code_;
}
inline void ServerGCGGiveUpGameRsp::set_verify_code(::google::protobuf::uint32 value) {
  
  verify_code_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGGiveUpGameRsp.verify_code)
}

// uint32 app_id = 5;
inline void ServerGCGGiveUpGameRsp::clear_app_id() {
  app_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGGiveUpGameRsp::app_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGGiveUpGameRsp.app_id)
  return app_id_;
}
inline void ServerGCGGiveUpGameRsp::set_app_id(::google::protobuf::uint32 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGGiveUpGameRsp.app_id)
}

// uint32 thread_index = 6;
inline void ServerGCGGiveUpGameRsp::clear_thread_index() {
  thread_index_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGGiveUpGameRsp::thread_index() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGGiveUpGameRsp.thread_index)
  return thread_index_;
}
inline void ServerGCGGiveUpGameRsp::set_thread_index(::google::protobuf::uint32 value) {
  
  thread_index_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGGiveUpGameRsp.thread_index)
}

// -------------------------------------------------------------------

// ServerGCGSkillPreviewAskReq

// uint32 uid = 1;
inline void ServerGCGSkillPreviewAskReq::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGSkillPreviewAskReq::uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGSkillPreviewAskReq.uid)
  return uid_;
}
inline void ServerGCGSkillPreviewAskReq::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGSkillPreviewAskReq.uid)
}

// -------------------------------------------------------------------

// ServerGCGSkillPreviewAskRsp

// int32 retcode = 1;
inline void ServerGCGSkillPreviewAskRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ServerGCGSkillPreviewAskRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGSkillPreviewAskRsp.retcode)
  return retcode_;
}
inline void ServerGCGSkillPreviewAskRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGSkillPreviewAskRsp.retcode)
}

// -------------------------------------------------------------------

// ServerGCGCreateMultiGameReq

// uint32 game_id = 1;
inline void ServerGCGCreateMultiGameReq::clear_game_id() {
  game_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGCreateMultiGameReq::game_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGCreateMultiGameReq.game_id)
  return game_id_;
}
inline void ServerGCGCreateMultiGameReq::set_game_id(::google::protobuf::uint32 value) {
  
  game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGCreateMultiGameReq.game_id)
}

// .proto.GCGGameBusinessType business_type = 2;
inline void ServerGCGCreateMultiGameReq::clear_business_type() {
  business_type_ = 0;
}
inline ::proto::GCGGameBusinessType ServerGCGCreateMultiGameReq::business_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGCreateMultiGameReq.business_type)
  return static_cast< ::proto::GCGGameBusinessType >(business_type_);
}
inline void ServerGCGCreateMultiGameReq::set_business_type(::proto::GCGGameBusinessType value) {
  
  business_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGCreateMultiGameReq.business_type)
}

// .proto.GCGPlayerData player_data_1 = 3;
inline bool ServerGCGCreateMultiGameReq::has_player_data_1() const {
  return this != internal_default_instance() && player_data_1_ != NULL;
}
inline void ServerGCGCreateMultiGameReq::clear_player_data_1() {
  if (GetArenaNoVirtual() == NULL && player_data_1_ != NULL) delete player_data_1_;
  player_data_1_ = NULL;
}
inline const ::proto::GCGPlayerData& ServerGCGCreateMultiGameReq::player_data_1() const {
  const ::proto::GCGPlayerData* p = player_data_1_;
  // @@protoc_insertion_point(field_get:proto.ServerGCGCreateMultiGameReq.player_data_1)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::GCGPlayerData*>(
      &::proto::_GCGPlayerData_default_instance_);
}
inline ::proto::GCGPlayerData* ServerGCGCreateMultiGameReq::mutable_player_data_1() {
  
  if (player_data_1_ == NULL) {
    player_data_1_ = new ::proto::GCGPlayerData;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerGCGCreateMultiGameReq.player_data_1)
  return player_data_1_;
}
inline ::proto::GCGPlayerData* ServerGCGCreateMultiGameReq::release_player_data_1() {
  // @@protoc_insertion_point(field_release:proto.ServerGCGCreateMultiGameReq.player_data_1)
  
  ::proto::GCGPlayerData* temp = player_data_1_;
  player_data_1_ = NULL;
  return temp;
}
inline void ServerGCGCreateMultiGameReq::set_allocated_player_data_1(::proto::GCGPlayerData* player_data_1) {
  delete player_data_1_;
  player_data_1_ = player_data_1;
  if (player_data_1) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerGCGCreateMultiGameReq.player_data_1)
}

// .proto.GCGPlayerData player_data_2 = 4;
inline bool ServerGCGCreateMultiGameReq::has_player_data_2() const {
  return this != internal_default_instance() && player_data_2_ != NULL;
}
inline void ServerGCGCreateMultiGameReq::clear_player_data_2() {
  if (GetArenaNoVirtual() == NULL && player_data_2_ != NULL) delete player_data_2_;
  player_data_2_ = NULL;
}
inline const ::proto::GCGPlayerData& ServerGCGCreateMultiGameReq::player_data_2() const {
  const ::proto::GCGPlayerData* p = player_data_2_;
  // @@protoc_insertion_point(field_get:proto.ServerGCGCreateMultiGameReq.player_data_2)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::GCGPlayerData*>(
      &::proto::_GCGPlayerData_default_instance_);
}
inline ::proto::GCGPlayerData* ServerGCGCreateMultiGameReq::mutable_player_data_2() {
  
  if (player_data_2_ == NULL) {
    player_data_2_ = new ::proto::GCGPlayerData;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerGCGCreateMultiGameReq.player_data_2)
  return player_data_2_;
}
inline ::proto::GCGPlayerData* ServerGCGCreateMultiGameReq::release_player_data_2() {
  // @@protoc_insertion_point(field_release:proto.ServerGCGCreateMultiGameReq.player_data_2)
  
  ::proto::GCGPlayerData* temp = player_data_2_;
  player_data_2_ = NULL;
  return temp;
}
inline void ServerGCGCreateMultiGameReq::set_allocated_player_data_2(::proto::GCGPlayerData* player_data_2) {
  delete player_data_2_;
  player_data_2_ = player_data_2;
  if (player_data_2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerGCGCreateMultiGameReq.player_data_2)
}

// uint32 try_create_time = 5;
inline void ServerGCGCreateMultiGameReq::clear_try_create_time() {
  try_create_time_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGCreateMultiGameReq::try_create_time() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGCreateMultiGameReq.try_create_time)
  return try_create_time_;
}
inline void ServerGCGCreateMultiGameReq::set_try_create_time(::google::protobuf::uint32 value) {
  
  try_create_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGCreateMultiGameReq.try_create_time)
}

// -------------------------------------------------------------------

// ServerGCGCreateMultiGameRsp

// int32 retcode = 1;
inline void ServerGCGCreateMultiGameRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ServerGCGCreateMultiGameRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGCreateMultiGameRsp.retcode)
  return retcode_;
}
inline void ServerGCGCreateMultiGameRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGCreateMultiGameRsp.retcode)
}

// uint32 game_id = 2;
inline void ServerGCGCreateMultiGameRsp::clear_game_id() {
  game_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGCreateMultiGameRsp::game_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGCreateMultiGameRsp.game_id)
  return game_id_;
}
inline void ServerGCGCreateMultiGameRsp::set_game_id(::google::protobuf::uint32 value) {
  
  game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGCreateMultiGameRsp.game_id)
}

// -------------------------------------------------------------------

// ServerGCGAddBothAITaskReq

// uint64 task_id = 1;
inline void ServerGCGAddBothAITaskReq::clear_task_id() {
  task_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ServerGCGAddBothAITaskReq::task_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGAddBothAITaskReq.task_id)
  return task_id_;
}
inline void ServerGCGAddBothAITaskReq::set_task_id(::google::protobuf::uint64 value) {
  
  task_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGAddBothAITaskReq.task_id)
}

// uint32 subtask_id = 2;
inline void ServerGCGAddBothAITaskReq::clear_subtask_id() {
  subtask_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGAddBothAITaskReq::subtask_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGAddBothAITaskReq.subtask_id)
  return subtask_id_;
}
inline void ServerGCGAddBothAITaskReq::set_subtask_id(::google::protobuf::uint32 value) {
  
  subtask_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGAddBothAITaskReq.subtask_id)
}

// uint32 game_type = 3;
inline void ServerGCGAddBothAITaskReq::clear_game_type() {
  game_type_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGAddBothAITaskReq::game_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGAddBothAITaskReq.game_type)
  return game_type_;
}
inline void ServerGCGAddBothAITaskReq::set_game_type(::google::protobuf::uint32 value) {
  
  game_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGAddBothAITaskReq.game_type)
}

// uint32 level_id = 4;
inline void ServerGCGAddBothAITaskReq::clear_level_id() {
  level_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGAddBothAITaskReq::level_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGAddBothAITaskReq.level_id)
  return level_id_;
}
inline void ServerGCGAddBothAITaskReq::set_level_id(::google::protobuf::uint32 value) {
  
  level_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGAddBothAITaskReq.level_id)
}

// uint32 card_group1_id = 5;
inline void ServerGCGAddBothAITaskReq::clear_card_group1_id() {
  card_group1_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGAddBothAITaskReq::card_group1_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGAddBothAITaskReq.card_group1_id)
  return card_group1_id_;
}
inline void ServerGCGAddBothAITaskReq::set_card_group1_id(::google::protobuf::uint32 value) {
  
  card_group1_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGAddBothAITaskReq.card_group1_id)
}

// uint32 card_group2_id = 6;
inline void ServerGCGAddBothAITaskReq::clear_card_group2_id() {
  card_group2_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGAddBothAITaskReq::card_group2_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGAddBothAITaskReq.card_group2_id)
  return card_group2_id_;
}
inline void ServerGCGAddBothAITaskReq::set_card_group2_id(::google::protobuf::uint32 value) {
  
  card_group2_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGAddBothAITaskReq.card_group2_id)
}

// -------------------------------------------------------------------

// ServerGCGAddBothAITaskRsp

// int32 retcode = 1;
inline void ServerGCGAddBothAITaskRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ServerGCGAddBothAITaskRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGAddBothAITaskRsp.retcode)
  return retcode_;
}
inline void ServerGCGAddBothAITaskRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGAddBothAITaskRsp.retcode)
}

// uint32 task_id = 2;
inline void ServerGCGAddBothAITaskRsp::clear_task_id() {
  task_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGAddBothAITaskRsp::task_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGAddBothAITaskRsp.task_id)
  return task_id_;
}
inline void ServerGCGAddBothAITaskRsp::set_task_id(::google::protobuf::uint32 value) {
  
  task_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGAddBothAITaskRsp.task_id)
}

// uint32 subtask_id = 3;
inline void ServerGCGAddBothAITaskRsp::clear_subtask_id() {
  subtask_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGAddBothAITaskRsp::subtask_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGAddBothAITaskRsp.subtask_id)
  return subtask_id_;
}
inline void ServerGCGAddBothAITaskRsp::set_subtask_id(::google::protobuf::uint32 value) {
  
  subtask_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGAddBothAITaskRsp.subtask_id)
}

// -------------------------------------------------------------------

// GCGMatchPlayerInfo

// .proto.MatchPlayer match_player = 1;
inline bool GCGMatchPlayerInfo::has_match_player() const {
  return this != internal_default_instance() && match_player_ != NULL;
}
inline void GCGMatchPlayerInfo::clear_match_player() {
  if (GetArenaNoVirtual() == NULL && match_player_ != NULL) delete match_player_;
  match_player_ = NULL;
}
inline const ::proto::MatchPlayer& GCGMatchPlayerInfo::match_player() const {
  const ::proto::MatchPlayer* p = match_player_;
  // @@protoc_insertion_point(field_get:proto.GCGMatchPlayerInfo.match_player)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MatchPlayer*>(
      &::proto::_MatchPlayer_default_instance_);
}
inline ::proto::MatchPlayer* GCGMatchPlayerInfo::mutable_match_player() {
  
  if (match_player_ == NULL) {
    match_player_ = new ::proto::MatchPlayer;
  }
  // @@protoc_insertion_point(field_mutable:proto.GCGMatchPlayerInfo.match_player)
  return match_player_;
}
inline ::proto::MatchPlayer* GCGMatchPlayerInfo::release_match_player() {
  // @@protoc_insertion_point(field_release:proto.GCGMatchPlayerInfo.match_player)
  
  ::proto::MatchPlayer* temp = match_player_;
  match_player_ = NULL;
  return temp;
}
inline void GCGMatchPlayerInfo::set_allocated_match_player(::proto::MatchPlayer* match_player) {
  delete match_player_;
  match_player_ = match_player;
  if (match_player) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GCGMatchPlayerInfo.match_player)
}

// .proto.GCGDuelExtra gcg_duel_extra = 2;
inline bool GCGMatchPlayerInfo::has_gcg_duel_extra() const {
  return this != internal_default_instance() && gcg_duel_extra_ != NULL;
}
inline void GCGMatchPlayerInfo::clear_gcg_duel_extra() {
  if (GetArenaNoVirtual() == NULL && gcg_duel_extra_ != NULL) delete gcg_duel_extra_;
  gcg_duel_extra_ = NULL;
}
inline const ::proto::GCGDuelExtra& GCGMatchPlayerInfo::gcg_duel_extra() const {
  const ::proto::GCGDuelExtra* p = gcg_duel_extra_;
  // @@protoc_insertion_point(field_get:proto.GCGMatchPlayerInfo.gcg_duel_extra)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::GCGDuelExtra*>(
      &::proto::_GCGDuelExtra_default_instance_);
}
inline ::proto::GCGDuelExtra* GCGMatchPlayerInfo::mutable_gcg_duel_extra() {
  
  if (gcg_duel_extra_ == NULL) {
    gcg_duel_extra_ = new ::proto::GCGDuelExtra;
  }
  // @@protoc_insertion_point(field_mutable:proto.GCGMatchPlayerInfo.gcg_duel_extra)
  return gcg_duel_extra_;
}
inline ::proto::GCGDuelExtra* GCGMatchPlayerInfo::release_gcg_duel_extra() {
  // @@protoc_insertion_point(field_release:proto.GCGMatchPlayerInfo.gcg_duel_extra)
  
  ::proto::GCGDuelExtra* temp = gcg_duel_extra_;
  gcg_duel_extra_ = NULL;
  return temp;
}
inline void GCGMatchPlayerInfo::set_allocated_gcg_duel_extra(::proto::GCGDuelExtra* gcg_duel_extra) {
  delete gcg_duel_extra_;
  gcg_duel_extra_ = gcg_duel_extra;
  if (gcg_duel_extra) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GCGMatchPlayerInfo.gcg_duel_extra)
}

// -------------------------------------------------------------------

// ServerGCGCreateMatchGameNotify

// uint32 match_id = 1;
inline void ServerGCGCreateMatchGameNotify::clear_match_id() {
  match_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGCreateMatchGameNotify::match_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGCreateMatchGameNotify.match_id)
  return match_id_;
}
inline void ServerGCGCreateMatchGameNotify::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGCreateMatchGameNotify.match_id)
}

// repeated .proto.GCGMatchPlayerInfo gcg_match_player_list = 2;
inline int ServerGCGCreateMatchGameNotify::gcg_match_player_list_size() const {
  return gcg_match_player_list_.size();
}
inline void ServerGCGCreateMatchGameNotify::clear_gcg_match_player_list() {
  gcg_match_player_list_.Clear();
}
inline const ::proto::GCGMatchPlayerInfo& ServerGCGCreateMatchGameNotify::gcg_match_player_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGCreateMatchGameNotify.gcg_match_player_list)
  return gcg_match_player_list_.Get(index);
}
inline ::proto::GCGMatchPlayerInfo* ServerGCGCreateMatchGameNotify::mutable_gcg_match_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerGCGCreateMatchGameNotify.gcg_match_player_list)
  return gcg_match_player_list_.Mutable(index);
}
inline ::proto::GCGMatchPlayerInfo* ServerGCGCreateMatchGameNotify::add_gcg_match_player_list() {
  // @@protoc_insertion_point(field_add:proto.ServerGCGCreateMatchGameNotify.gcg_match_player_list)
  return gcg_match_player_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::GCGMatchPlayerInfo >*
ServerGCGCreateMatchGameNotify::mutable_gcg_match_player_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGCGCreateMatchGameNotify.gcg_match_player_list)
  return &gcg_match_player_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::GCGMatchPlayerInfo >&
ServerGCGCreateMatchGameNotify::gcg_match_player_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGCGCreateMatchGameNotify.gcg_match_player_list)
  return gcg_match_player_list_;
}

// uint32 try_create_time = 3;
inline void ServerGCGCreateMatchGameNotify::clear_try_create_time() {
  try_create_time_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGCreateMatchGameNotify::try_create_time() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGCreateMatchGameNotify.try_create_time)
  return try_create_time_;
}
inline void ServerGCGCreateMatchGameNotify::set_try_create_time(::google::protobuf::uint32 value) {
  
  try_create_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGCreateMatchGameNotify.try_create_time)
}

// -------------------------------------------------------------------

// ServerGCGCreateMatchAIGameNotify

// uint32 match_id = 1;
inline void ServerGCGCreateMatchAIGameNotify::clear_match_id() {
  match_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGCreateMatchAIGameNotify::match_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGCreateMatchAIGameNotify.match_id)
  return match_id_;
}
inline void ServerGCGCreateMatchAIGameNotify::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGCreateMatchAIGameNotify.match_id)
}

// repeated .proto.GCGMatchPlayerInfo gcg_match_player_list = 2;
inline int ServerGCGCreateMatchAIGameNotify::gcg_match_player_list_size() const {
  return gcg_match_player_list_.size();
}
inline void ServerGCGCreateMatchAIGameNotify::clear_gcg_match_player_list() {
  gcg_match_player_list_.Clear();
}
inline const ::proto::GCGMatchPlayerInfo& ServerGCGCreateMatchAIGameNotify::gcg_match_player_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGCreateMatchAIGameNotify.gcg_match_player_list)
  return gcg_match_player_list_.Get(index);
}
inline ::proto::GCGMatchPlayerInfo* ServerGCGCreateMatchAIGameNotify::mutable_gcg_match_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerGCGCreateMatchAIGameNotify.gcg_match_player_list)
  return gcg_match_player_list_.Mutable(index);
}
inline ::proto::GCGMatchPlayerInfo* ServerGCGCreateMatchAIGameNotify::add_gcg_match_player_list() {
  // @@protoc_insertion_point(field_add:proto.ServerGCGCreateMatchAIGameNotify.gcg_match_player_list)
  return gcg_match_player_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::GCGMatchPlayerInfo >*
ServerGCGCreateMatchAIGameNotify::mutable_gcg_match_player_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGCGCreateMatchAIGameNotify.gcg_match_player_list)
  return &gcg_match_player_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::GCGMatchPlayerInfo >&
ServerGCGCreateMatchAIGameNotify::gcg_match_player_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGCGCreateMatchAIGameNotify.gcg_match_player_list)
  return gcg_match_player_list_;
}

// .proto.OnlinePlayerInfo ai_info = 3;
inline bool ServerGCGCreateMatchAIGameNotify::has_ai_info() const {
  return this != internal_default_instance() && ai_info_ != NULL;
}
inline void ServerGCGCreateMatchAIGameNotify::clear_ai_info() {
  if (GetArenaNoVirtual() == NULL && ai_info_ != NULL) delete ai_info_;
  ai_info_ = NULL;
}
inline const ::proto::OnlinePlayerInfo& ServerGCGCreateMatchAIGameNotify::ai_info() const {
  const ::proto::OnlinePlayerInfo* p = ai_info_;
  // @@protoc_insertion_point(field_get:proto.ServerGCGCreateMatchAIGameNotify.ai_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::OnlinePlayerInfo*>(
      &::proto::_OnlinePlayerInfo_default_instance_);
}
inline ::proto::OnlinePlayerInfo* ServerGCGCreateMatchAIGameNotify::mutable_ai_info() {
  
  if (ai_info_ == NULL) {
    ai_info_ = new ::proto::OnlinePlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerGCGCreateMatchAIGameNotify.ai_info)
  return ai_info_;
}
inline ::proto::OnlinePlayerInfo* ServerGCGCreateMatchAIGameNotify::release_ai_info() {
  // @@protoc_insertion_point(field_release:proto.ServerGCGCreateMatchAIGameNotify.ai_info)
  
  ::proto::OnlinePlayerInfo* temp = ai_info_;
  ai_info_ = NULL;
  return temp;
}
inline void ServerGCGCreateMatchAIGameNotify::set_allocated_ai_info(::proto::OnlinePlayerInfo* ai_info) {
  delete ai_info_;
  ai_info_ = ai_info;
  if (ai_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerGCGCreateMatchAIGameNotify.ai_info)
}

// uint32 try_create_time = 4;
inline void ServerGCGCreateMatchAIGameNotify::clear_try_create_time() {
  try_create_time_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGCreateMatchAIGameNotify::try_create_time() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGCreateMatchAIGameNotify.try_create_time)
  return try_create_time_;
}
inline void ServerGCGCreateMatchAIGameNotify::set_try_create_time(::google::protobuf::uint32 value) {
  
  try_create_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGCreateMatchAIGameNotify.try_create_time)
}

// -------------------------------------------------------------------

// ServerGCGMatchFinishNotify

// -------------------------------------------------------------------

// ServerGCGBackToDuelReq

// uint32 game_uid = 1;
inline void ServerGCGBackToDuelReq::clear_game_uid() {
  game_uid_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGBackToDuelReq::game_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGBackToDuelReq.game_uid)
  return game_uid_;
}
inline void ServerGCGBackToDuelReq::set_game_uid(::google::protobuf::uint32 value) {
  
  game_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGBackToDuelReq.game_uid)
}

// uint32 verify_code = 2;
inline void ServerGCGBackToDuelReq::clear_verify_code() {
  verify_code_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGBackToDuelReq::verify_code() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGBackToDuelReq.verify_code)
  return verify_code_;
}
inline void ServerGCGBackToDuelReq::set_verify_code(::google::protobuf::uint32 value) {
  
  verify_code_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGBackToDuelReq.verify_code)
}

// uint32 client_data_version = 3;
inline void ServerGCGBackToDuelReq::clear_client_data_version() {
  client_data_version_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGBackToDuelReq::client_data_version() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGBackToDuelReq.client_data_version)
  return client_data_version_;
}
inline void ServerGCGBackToDuelReq::set_client_data_version(::google::protobuf::uint32 value) {
  
  client_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGBackToDuelReq.client_data_version)
}

// -------------------------------------------------------------------

// ServerGCGBackToDuelRsp

// int32 retcode = 1;
inline void ServerGCGBackToDuelRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ServerGCGBackToDuelRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGBackToDuelRsp.retcode)
  return retcode_;
}
inline void ServerGCGBackToDuelRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGBackToDuelRsp.retcode)
}

// uint32 game_uid = 2;
inline void ServerGCGBackToDuelRsp::clear_game_uid() {
  game_uid_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGBackToDuelRsp::game_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGBackToDuelRsp.game_uid)
  return game_uid_;
}
inline void ServerGCGBackToDuelRsp::set_game_uid(::google::protobuf::uint32 value) {
  
  game_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGBackToDuelRsp.game_uid)
}

// uint32 verify_code = 3;
inline void ServerGCGBackToDuelRsp::clear_verify_code() {
  verify_code_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGBackToDuelRsp::verify_code() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGBackToDuelRsp.verify_code)
  return verify_code_;
}
inline void ServerGCGBackToDuelRsp::set_verify_code(::google::protobuf::uint32 value) {
  
  verify_code_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGBackToDuelRsp.verify_code)
}

// uint32 app_id = 4;
inline void ServerGCGBackToDuelRsp::clear_app_id() {
  app_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGBackToDuelRsp::app_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGBackToDuelRsp.app_id)
  return app_id_;
}
inline void ServerGCGBackToDuelRsp::set_app_id(::google::protobuf::uint32 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGBackToDuelRsp.app_id)
}

// uint32 thread_index = 5;
inline void ServerGCGBackToDuelRsp::clear_thread_index() {
  thread_index_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGBackToDuelRsp::thread_index() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGBackToDuelRsp.thread_index)
  return thread_index_;
}
inline void ServerGCGBackToDuelRsp::set_thread_index(::google::protobuf::uint32 value) {
  
  thread_index_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGBackToDuelRsp.thread_index)
}

// uint32 client_data_version = 6;
inline void ServerGCGBackToDuelRsp::clear_client_data_version() {
  client_data_version_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGBackToDuelRsp::client_data_version() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGBackToDuelRsp.client_data_version)
  return client_data_version_;
}
inline void ServerGCGBackToDuelRsp::set_client_data_version(::google::protobuf::uint32 value) {
  
  client_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGBackToDuelRsp.client_data_version)
}

// -------------------------------------------------------------------

// ServerGCGMessagePackNotify

// .proto.ServerGCGVerify verify = 1;
inline bool ServerGCGMessagePackNotify::has_verify() const {
  return this != internal_default_instance() && verify_ != NULL;
}
inline void ServerGCGMessagePackNotify::clear_verify() {
  if (GetArenaNoVirtual() == NULL && verify_ != NULL) delete verify_;
  verify_ = NULL;
}
inline const ::proto::ServerGCGVerify& ServerGCGMessagePackNotify::verify() const {
  const ::proto::ServerGCGVerify* p = verify_;
  // @@protoc_insertion_point(field_get:proto.ServerGCGMessagePackNotify.verify)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ServerGCGVerify*>(
      &::proto::_ServerGCGVerify_default_instance_);
}
inline ::proto::ServerGCGVerify* ServerGCGMessagePackNotify::mutable_verify() {
  
  if (verify_ == NULL) {
    verify_ = new ::proto::ServerGCGVerify;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerGCGMessagePackNotify.verify)
  return verify_;
}
inline ::proto::ServerGCGVerify* ServerGCGMessagePackNotify::release_verify() {
  // @@protoc_insertion_point(field_release:proto.ServerGCGMessagePackNotify.verify)
  
  ::proto::ServerGCGVerify* temp = verify_;
  verify_ = NULL;
  return temp;
}
inline void ServerGCGMessagePackNotify::set_allocated_verify(::proto::ServerGCGVerify* verify) {
  delete verify_;
  verify_ = verify;
  if (verify) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerGCGMessagePackNotify.verify)
}

// uint32 server_seq = 2;
inline void ServerGCGMessagePackNotify::clear_server_seq() {
  server_seq_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGMessagePackNotify::server_seq() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGMessagePackNotify.server_seq)
  return server_seq_;
}
inline void ServerGCGMessagePackNotify::set_server_seq(::google::protobuf::uint32 value) {
  
  server_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGMessagePackNotify.server_seq)
}

// repeated .proto.GCGMessagePack msg_pack_list = 3;
inline int ServerGCGMessagePackNotify::msg_pack_list_size() const {
  return msg_pack_list_.size();
}
inline void ServerGCGMessagePackNotify::clear_msg_pack_list() {
  msg_pack_list_.Clear();
}
inline const ::proto::GCGMessagePack& ServerGCGMessagePackNotify::msg_pack_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGMessagePackNotify.msg_pack_list)
  return msg_pack_list_.Get(index);
}
inline ::proto::GCGMessagePack* ServerGCGMessagePackNotify::mutable_msg_pack_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerGCGMessagePackNotify.msg_pack_list)
  return msg_pack_list_.Mutable(index);
}
inline ::proto::GCGMessagePack* ServerGCGMessagePackNotify::add_msg_pack_list() {
  // @@protoc_insertion_point(field_add:proto.ServerGCGMessagePackNotify.msg_pack_list)
  return msg_pack_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::GCGMessagePack >*
ServerGCGMessagePackNotify::mutable_msg_pack_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGCGMessagePackNotify.msg_pack_list)
  return &msg_pack_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::GCGMessagePack >&
ServerGCGMessagePackNotify::msg_pack_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGCGMessagePackNotify.msg_pack_list)
  return msg_pack_list_;
}

// -------------------------------------------------------------------

// ServerGCGHeartBeatNotify

// .proto.ServerGCGVerify verify = 1;
inline bool ServerGCGHeartBeatNotify::has_verify() const {
  return this != internal_default_instance() && verify_ != NULL;
}
inline void ServerGCGHeartBeatNotify::clear_verify() {
  if (GetArenaNoVirtual() == NULL && verify_ != NULL) delete verify_;
  verify_ = NULL;
}
inline const ::proto::ServerGCGVerify& ServerGCGHeartBeatNotify::verify() const {
  const ::proto::ServerGCGVerify* p = verify_;
  // @@protoc_insertion_point(field_get:proto.ServerGCGHeartBeatNotify.verify)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ServerGCGVerify*>(
      &::proto::_ServerGCGVerify_default_instance_);
}
inline ::proto::ServerGCGVerify* ServerGCGHeartBeatNotify::mutable_verify() {
  
  if (verify_ == NULL) {
    verify_ = new ::proto::ServerGCGVerify;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerGCGHeartBeatNotify.verify)
  return verify_;
}
inline ::proto::ServerGCGVerify* ServerGCGHeartBeatNotify::release_verify() {
  // @@protoc_insertion_point(field_release:proto.ServerGCGHeartBeatNotify.verify)
  
  ::proto::ServerGCGVerify* temp = verify_;
  verify_ = NULL;
  return temp;
}
inline void ServerGCGHeartBeatNotify::set_allocated_verify(::proto::ServerGCGVerify* verify) {
  delete verify_;
  verify_ = verify;
  if (verify) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerGCGHeartBeatNotify.verify)
}

// uint32 server_seq = 2;
inline void ServerGCGHeartBeatNotify::clear_server_seq() {
  server_seq_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGHeartBeatNotify::server_seq() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGHeartBeatNotify.server_seq)
  return server_seq_;
}
inline void ServerGCGHeartBeatNotify::set_server_seq(::google::protobuf::uint32 value) {
  
  server_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGHeartBeatNotify.server_seq)
}

// -------------------------------------------------------------------

// ServerGCGSkillPreviewNotify

// .proto.ServerGCGVerify verify = 1;
inline bool ServerGCGSkillPreviewNotify::has_verify() const {
  return this != internal_default_instance() && verify_ != NULL;
}
inline void ServerGCGSkillPreviewNotify::clear_verify() {
  if (GetArenaNoVirtual() == NULL && verify_ != NULL) delete verify_;
  verify_ = NULL;
}
inline const ::proto::ServerGCGVerify& ServerGCGSkillPreviewNotify::verify() const {
  const ::proto::ServerGCGVerify* p = verify_;
  // @@protoc_insertion_point(field_get:proto.ServerGCGSkillPreviewNotify.verify)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ServerGCGVerify*>(
      &::proto::_ServerGCGVerify_default_instance_);
}
inline ::proto::ServerGCGVerify* ServerGCGSkillPreviewNotify::mutable_verify() {
  
  if (verify_ == NULL) {
    verify_ = new ::proto::ServerGCGVerify;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerGCGSkillPreviewNotify.verify)
  return verify_;
}
inline ::proto::ServerGCGVerify* ServerGCGSkillPreviewNotify::release_verify() {
  // @@protoc_insertion_point(field_release:proto.ServerGCGSkillPreviewNotify.verify)
  
  ::proto::ServerGCGVerify* temp = verify_;
  verify_ = NULL;
  return temp;
}
inline void ServerGCGSkillPreviewNotify::set_allocated_verify(::proto::ServerGCGVerify* verify) {
  delete verify_;
  verify_ = verify;
  if (verify) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerGCGSkillPreviewNotify.verify)
}

// uint32 controller_id = 2;
inline void ServerGCGSkillPreviewNotify::clear_controller_id() {
  controller_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGSkillPreviewNotify::controller_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGSkillPreviewNotify.controller_id)
  return controller_id_;
}
inline void ServerGCGSkillPreviewNotify::set_controller_id(::google::protobuf::uint32 value) {
  
  controller_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGSkillPreviewNotify.controller_id)
}

// uint32 onstage_card_guid = 3;
inline void ServerGCGSkillPreviewNotify::clear_onstage_card_guid() {
  onstage_card_guid_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGSkillPreviewNotify::onstage_card_guid() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGSkillPreviewNotify.onstage_card_guid)
  return onstage_card_guid_;
}
inline void ServerGCGSkillPreviewNotify::set_onstage_card_guid(::google::protobuf::uint32 value) {
  
  onstage_card_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGSkillPreviewNotify.onstage_card_guid)
}

// repeated .proto.GCGSkillPreviewInfo skill_preview_list = 4;
inline int ServerGCGSkillPreviewNotify::skill_preview_list_size() const {
  return skill_preview_list_.size();
}
inline void ServerGCGSkillPreviewNotify::clear_skill_preview_list() {
  skill_preview_list_.Clear();
}
inline const ::proto::GCGSkillPreviewInfo& ServerGCGSkillPreviewNotify::skill_preview_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGSkillPreviewNotify.skill_preview_list)
  return skill_preview_list_.Get(index);
}
inline ::proto::GCGSkillPreviewInfo* ServerGCGSkillPreviewNotify::mutable_skill_preview_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerGCGSkillPreviewNotify.skill_preview_list)
  return skill_preview_list_.Mutable(index);
}
inline ::proto::GCGSkillPreviewInfo* ServerGCGSkillPreviewNotify::add_skill_preview_list() {
  // @@protoc_insertion_point(field_add:proto.ServerGCGSkillPreviewNotify.skill_preview_list)
  return skill_preview_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::GCGSkillPreviewInfo >*
ServerGCGSkillPreviewNotify::mutable_skill_preview_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGCGSkillPreviewNotify.skill_preview_list)
  return &skill_preview_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::GCGSkillPreviewInfo >&
ServerGCGSkillPreviewNotify::skill_preview_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGCGSkillPreviewNotify.skill_preview_list)
  return skill_preview_list_;
}

// repeated .proto.GCGChangeOnstageInfo change_onstage_preview_list = 5;
inline int ServerGCGSkillPreviewNotify::change_onstage_preview_list_size() const {
  return change_onstage_preview_list_.size();
}
inline void ServerGCGSkillPreviewNotify::clear_change_onstage_preview_list() {
  change_onstage_preview_list_.Clear();
}
inline const ::proto::GCGChangeOnstageInfo& ServerGCGSkillPreviewNotify::change_onstage_preview_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGSkillPreviewNotify.change_onstage_preview_list)
  return change_onstage_preview_list_.Get(index);
}
inline ::proto::GCGChangeOnstageInfo* ServerGCGSkillPreviewNotify::mutable_change_onstage_preview_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerGCGSkillPreviewNotify.change_onstage_preview_list)
  return change_onstage_preview_list_.Mutable(index);
}
inline ::proto::GCGChangeOnstageInfo* ServerGCGSkillPreviewNotify::add_change_onstage_preview_list() {
  // @@protoc_insertion_point(field_add:proto.ServerGCGSkillPreviewNotify.change_onstage_preview_list)
  return change_onstage_preview_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::GCGChangeOnstageInfo >*
ServerGCGSkillPreviewNotify::mutable_change_onstage_preview_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGCGSkillPreviewNotify.change_onstage_preview_list)
  return &change_onstage_preview_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::GCGChangeOnstageInfo >&
ServerGCGSkillPreviewNotify::change_onstage_preview_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGCGSkillPreviewNotify.change_onstage_preview_list)
  return change_onstage_preview_list_;
}

// repeated .proto.GCGSkillPreviewPlayCardInfo play_card_list = 6;
inline int ServerGCGSkillPreviewNotify::play_card_list_size() const {
  return play_card_list_.size();
}
inline void ServerGCGSkillPreviewNotify::clear_play_card_list() {
  play_card_list_.Clear();
}
inline const ::proto::GCGSkillPreviewPlayCardInfo& ServerGCGSkillPreviewNotify::play_card_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGSkillPreviewNotify.play_card_list)
  return play_card_list_.Get(index);
}
inline ::proto::GCGSkillPreviewPlayCardInfo* ServerGCGSkillPreviewNotify::mutable_play_card_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerGCGSkillPreviewNotify.play_card_list)
  return play_card_list_.Mutable(index);
}
inline ::proto::GCGSkillPreviewPlayCardInfo* ServerGCGSkillPreviewNotify::add_play_card_list() {
  // @@protoc_insertion_point(field_add:proto.ServerGCGSkillPreviewNotify.play_card_list)
  return play_card_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::GCGSkillPreviewPlayCardInfo >*
ServerGCGSkillPreviewNotify::mutable_play_card_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGCGSkillPreviewNotify.play_card_list)
  return &play_card_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::GCGSkillPreviewPlayCardInfo >&
ServerGCGSkillPreviewNotify::play_card_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGCGSkillPreviewNotify.play_card_list)
  return play_card_list_;
}

// -------------------------------------------------------------------

// ServerGCGChallengeUpdateNotify

// .proto.ServerGCGVerify verify = 1;
inline bool ServerGCGChallengeUpdateNotify::has_verify() const {
  return this != internal_default_instance() && verify_ != NULL;
}
inline void ServerGCGChallengeUpdateNotify::clear_verify() {
  if (GetArenaNoVirtual() == NULL && verify_ != NULL) delete verify_;
  verify_ = NULL;
}
inline const ::proto::ServerGCGVerify& ServerGCGChallengeUpdateNotify::verify() const {
  const ::proto::ServerGCGVerify* p = verify_;
  // @@protoc_insertion_point(field_get:proto.ServerGCGChallengeUpdateNotify.verify)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ServerGCGVerify*>(
      &::proto::_ServerGCGVerify_default_instance_);
}
inline ::proto::ServerGCGVerify* ServerGCGChallengeUpdateNotify::mutable_verify() {
  
  if (verify_ == NULL) {
    verify_ = new ::proto::ServerGCGVerify;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerGCGChallengeUpdateNotify.verify)
  return verify_;
}
inline ::proto::ServerGCGVerify* ServerGCGChallengeUpdateNotify::release_verify() {
  // @@protoc_insertion_point(field_release:proto.ServerGCGChallengeUpdateNotify.verify)
  
  ::proto::ServerGCGVerify* temp = verify_;
  verify_ = NULL;
  return temp;
}
inline void ServerGCGChallengeUpdateNotify::set_allocated_verify(::proto::ServerGCGVerify* verify) {
  delete verify_;
  verify_ = verify;
  if (verify) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerGCGChallengeUpdateNotify.verify)
}

// uint32 server_seq = 2;
inline void ServerGCGChallengeUpdateNotify::clear_server_seq() {
  server_seq_ = 0u;
}
inline ::google::protobuf::uint32 ServerGCGChallengeUpdateNotify::server_seq() const {
  // @@protoc_insertion_point(field_get:proto.ServerGCGChallengeUpdateNotify.server_seq)
  return server_seq_;
}
inline void ServerGCGChallengeUpdateNotify::set_server_seq(::google::protobuf::uint32 value) {
  
  server_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGCGChallengeUpdateNotify.server_seq)
}

// .proto.GCGDuelChallenge challenge = 3;
inline bool ServerGCGChallengeUpdateNotify::has_challenge() const {
  return this != internal_default_instance() && challenge_ != NULL;
}
inline void ServerGCGChallengeUpdateNotify::clear_challenge() {
  if (GetArenaNoVirtual() == NULL && challenge_ != NULL) delete challenge_;
  challenge_ = NULL;
}
inline const ::proto::GCGDuelChallenge& ServerGCGChallengeUpdateNotify::challenge() const {
  const ::proto::GCGDuelChallenge* p = challenge_;
  // @@protoc_insertion_point(field_get:proto.ServerGCGChallengeUpdateNotify.challenge)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::GCGDuelChallenge*>(
      &::proto::_GCGDuelChallenge_default_instance_);
}
inline ::proto::GCGDuelChallenge* ServerGCGChallengeUpdateNotify::mutable_challenge() {
  
  if (challenge_ == NULL) {
    challenge_ = new ::proto::GCGDuelChallenge;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerGCGChallengeUpdateNotify.challenge)
  return challenge_;
}
inline ::proto::GCGDuelChallenge* ServerGCGChallengeUpdateNotify::release_challenge() {
  // @@protoc_insertion_point(field_release:proto.ServerGCGChallengeUpdateNotify.challenge)
  
  ::proto::GCGDuelChallenge* temp = challenge_;
  challenge_ = NULL;
  return temp;
}
inline void ServerGCGChallengeUpdateNotify::set_allocated_challenge(::proto::GCGDuelChallenge* challenge) {
  delete challenge_;
  challenge_ = challenge;
  if (challenge) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerGCGChallengeUpdateNotify.challenge)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::GCGStatisticSpecifyItemType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GCGStatisticSpecifyItemType>() {
  return ::proto::GCGStatisticSpecifyItemType_descriptor();
}
template <> struct is_proto_enum< ::proto::GCGStatisticCommonItemType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GCGStatisticCommonItemType>() {
  return ::proto::GCGStatisticCommonItemType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_server_5fonly_2fcmd_5fgcg_2eserver_2eproto__INCLUDED
