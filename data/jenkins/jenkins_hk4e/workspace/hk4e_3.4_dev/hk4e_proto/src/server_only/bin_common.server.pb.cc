// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_only/bin_common.server.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "server_only/bin_common.server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class VectorBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<VectorBin>
     _instance;
} _VectorBin_default_instance_;
class Uint32PairBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Uint32PairBin>
     _instance;
} _Uint32PairBin_default_instance_;
class Uint32ToInt32PairBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Uint32ToInt32PairBin>
     _instance;
} _Uint32ToInt32PairBin_default_instance_;
class FloatPairBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FloatPairBin>
     _instance;
} _FloatPairBin_default_instance_;
class Uint32ListDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Uint32List>
     _instance;
} _Uint32List_default_instance_;
class Int32ListDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Int32List>
     _instance;
} _Int32List_default_instance_;
class ReliquaryBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ReliquaryBin>
     _instance;
} _ReliquaryBin_default_instance_;
class WeaponBin_AffixMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WeaponBin::WeaponBin_AffixMapEntry>
     _instance;
} _WeaponBin_AffixMapEntry_default_instance_;
class WeaponBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WeaponBin>
     _instance;
} _WeaponBin_default_instance_;
class ItemParamBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ItemParamBin>
     _instance;
} _ItemParamBin_default_instance_;
class MailBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MailBin>
     _instance;
} _MailBin_default_instance_;
class DelItemOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DelItemOp>
     _instance;
} _DelItemOp_default_instance_;
class DelItemNegativeOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DelItemNegativeOp>
     _instance;
} _DelItemNegativeOp_default_instance_;
class DelEquipOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DelEquipOp>
     _instance;
} _DelEquipOp_default_instance_;
class PlayerGotoOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerGotoOp>
     _instance;
} _PlayerGotoOp_default_instance_;
class ResetParentQuestOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ResetParentQuestOp>
     _instance;
} _ResetParentQuestOp_default_instance_;
class RefreshGroupOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RefreshGroupOp>
     _instance;
} _RefreshGroupOp_default_instance_;
class SetScenePointLockStatusOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetScenePointLockStatusOp>
     _instance;
} _SetScenePointLockStatusOp_default_instance_;
class SetPlayerNickNameOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPlayerNickNameOp>
     _instance;
} _SetPlayerNickNameOp_default_instance_;
class RefreshShopOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RefreshShopOp>
     _instance;
} _RefreshShopOp_default_instance_;
class UnlockTalentOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UnlockTalentOp>
     _instance;
} _UnlockTalentOp_default_instance_;
class TakeOffEquipOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TakeOffEquipOp>
     _instance;
} _TakeOffEquipOp_default_instance_;
class DelMailOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DelMailOp>
     _instance;
} _DelMailOp_default_instance_;
class UnlockAreaOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UnlockAreaOp>
     _instance;
} _UnlockAreaOp_default_instance_;
class FinishDailyTaskOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FinishDailyTaskOp>
     _instance;
} _FinishDailyTaskOp_default_instance_;
class AddItemOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddItemOp>
     _instance;
  const ::proto::ReliquaryBin* reliquary_;
  const ::proto::WeaponBin* weapon_;
} _AddItemOp_default_instance_;
class ModifyBornPosOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ModifyBornPosOp>
     _instance;
} _ModifyBornPosOp_default_instance_;
class SubCoinNegativeOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SubCoinNegativeOp>
     _instance;
} _SubCoinNegativeOp_default_instance_;
class SetQuestContentProgressOp_FinishProgressMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetQuestContentProgressOp::SetQuestContentProgressOp_FinishProgressMapEntry>
     _instance;
} _SetQuestContentProgressOp_FinishProgressMapEntry_default_instance_;
class SetQuestContentProgressOp_FailProgressMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetQuestContentProgressOp::SetQuestContentProgressOp_FailProgressMapEntry>
     _instance;
} _SetQuestContentProgressOp_FailProgressMapEntry_default_instance_;
class SetQuestContentProgressOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetQuestContentProgressOp>
     _instance;
} _SetQuestContentProgressOp_default_instance_;
class FinishOrderOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FinishOrderOp>
     _instance;
} _FinishOrderOp_default_instance_;
class AddOrModifyWatcherOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddOrModifyWatcherOp>
     _instance;
} _AddOrModifyWatcherOp_default_instance_;
class DelWatcherOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DelWatcherOp>
     _instance;
} _DelWatcherOp_default_instance_;
class SetSignatureOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetSignatureOp>
     _instance;
} _SetSignatureOp_default_instance_;
class AddOrSubResinOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddOrSubResinOp>
     _instance;
} _AddOrSubResinOp_default_instance_;
class SetQuestGlobalVarValueOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetQuestGlobalVarValueOp>
     _instance;
} _SetQuestGlobalVarValueOp_default_instance_;
class AddMcoinVipPointOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddMcoinVipPointOp>
     _instance;
} _AddMcoinVipPointOp_default_instance_;
class ExchangeMcoinOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ExchangeMcoinOp>
     _instance;
} _ExchangeMcoinOp_default_instance_;
class GroupBinOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GroupBinOp>
     _instance;
} _GroupBinOp_default_instance_;
class DelOneOffOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DelOneOffOp>
     _instance;
} _DelOneOffOp_default_instance_;
class FinishRoutineOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FinishRoutineOp>
     _instance;
} _FinishRoutineOp_default_instance_;
class FinishDailyTaskUnloadGroupOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FinishDailyTaskUnloadGroupOp>
     _instance;
} _FinishDailyTaskUnloadGroupOp_default_instance_;
class RefreshBlossomCircleCampOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RefreshBlossomCircleCampOp>
     _instance;
} _RefreshBlossomCircleCampOp_default_instance_;
class BlessingActivityGivePicOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BlessingActivityGivePicOp>
     _instance;
} _BlessingActivityGivePicOp_default_instance_;
class ExpeditionActivityAssistOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ExpeditionActivityAssistOp>
     _instance;
} _ExpeditionActivityAssistOp_default_instance_;
class RecoverWorldLevelOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RecoverWorldLevelOp>
     _instance;
} _RecoverWorldLevelOp_default_instance_;
class AddRegionSearchProgressOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddRegionSearchProgressOp>
     _instance;
} _AddRegionSearchProgressOp_default_instance_;
class SetMatchPunishTimesOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetMatchPunishTimesOp>
     _instance;
} _SetMatchPunishTimesOp_default_instance_;
class ResetChannellerSlabCampGroupOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ResetChannellerSlabCampGroupOp>
     _instance;
} _ResetChannellerSlabCampGroupOp_default_instance_;
class ForceAcceptQuestOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ForceAcceptQuestOp>
     _instance;
} _ForceAcceptQuestOp_default_instance_;
class SetMainCoopConfidenceOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetMainCoopConfidenceOp>
     _instance;
} _SetMainCoopConfidenceOp_default_instance_;
class AddCoopPointSavePointListOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddCoopPointSavePointListOp>
     _instance;
} _AddCoopPointSavePointListOp_default_instance_;
class SetClimateAreaTypeOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetClimateAreaTypeOp>
     _instance;
} _SetClimateAreaTypeOp_default_instance_;
class ProcSceneTagOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ProcSceneTagOp>
     _instance;
} _ProcSceneTagOp_default_instance_;
class SetFinishedParentQuestChildStateOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetFinishedParentQuestChildStateOp>
     _instance;
} _SetFinishedParentQuestChildStateOp_default_instance_;
class ChangeMapAreaInfoOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChangeMapAreaInfoOp>
     _instance;
} _ChangeMapAreaInfoOp_default_instance_;
class SetLevel1AreaExplorePointOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetLevel1AreaExplorePointOp>
     _instance;
} _SetLevel1AreaExplorePointOp_default_instance_;
class SetCodexOpenOrCloseOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetCodexOpenOrCloseOp>
     _instance;
} _SetCodexOpenOrCloseOp_default_instance_;
class GroupLinkOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GroupLinkOp>
     _instance;
} _GroupLinkOp_default_instance_;
class SetWatcherCompRecordValueOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetWatcherCompRecordValueOp>
     _instance;
  float max_critical_damage_;
  float max_fly_map_distance_;
  float max_fly_time_;
  float max_dash_time_;
} _SetWatcherCompRecordValueOp_default_instance_;
class AddFriendOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddFriendOp>
     _instance;
} _AddFriendOp_default_instance_;
class DelFriendOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DelFriendOp>
     _instance;
} _DelFriendOp_default_instance_;
class AddFriendAskOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddFriendAskOp>
     _instance;
} _AddFriendAskOp_default_instance_;
class DelFriendAskOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DelFriendAskOp>
     _instance;
} _DelFriendAskOp_default_instance_;
class BanCustomDungeonOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BanCustomDungeonOp>
     _instance;
} _BanCustomDungeonOp_default_instance_;
class RemoveInvalidMapMarksOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RemoveInvalidMapMarksOp>
     _instance;
} _RemoveInvalidMapMarksOp_default_instance_;
class RecalculateAreaExplorePointOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RecalculateAreaExplorePointOp>
     _instance;
} _RecalculateAreaExplorePointOp_default_instance_;
class NicknameAuditResultOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<NicknameAuditResultOp>
     _instance;
} _NicknameAuditResultOp_default_instance_;
class SignatureAuditResultOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SignatureAuditResultOp>
     _instance;
} _SignatureAuditResultOp_default_instance_;
class PassHomeSceneArrangementAuditOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PassHomeSceneArrangementAuditOp>
     _instance;
} _PassHomeSceneArrangementAuditOp_default_instance_;
class FailHomeSceneArrangementAuditOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FailHomeSceneArrangementAuditOp>
     _instance;
} _FailHomeSceneArrangementAuditOp_default_instance_;
class FailHomeModulesArrangementAuditOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FailHomeModulesArrangementAuditOp>
     _instance;
} _FailHomeModulesArrangementAuditOp_default_instance_;
class BanUgcPublishOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BanUgcPublishOp>
     _instance;
} _BanUgcPublishOp_default_instance_;
class ResetPlayerPersistentDungeonOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ResetPlayerPersistentDungeonOp>
     _instance;
} _ResetPlayerPersistentDungeonOp_default_instance_;
class ResetPlayerPosInPersistentDungeonOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ResetPlayerPosInPersistentDungeonOp>
     _instance;
} _ResetPlayerPosInPersistentDungeonOp_default_instance_;
class LevelTagChangeOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LevelTagChangeOp>
     _instance;
} _LevelTagChangeOp_default_instance_;
class ResetPlayerWayPointInPersistentDungeonOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ResetPlayerWayPointInPersistentDungeonOp>
     _instance;
} _ResetPlayerWayPointInPersistentDungeonOp_default_instance_;
class ExhibitionSetOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ExhibitionSetOp>
     _instance;
  ::google::protobuf::uint32 accumulable_val_;
  ::google::protobuf::uint32 replaceable_val_;
} _ExhibitionSetOp_default_instance_;
class SetAvatarExtraPropOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetAvatarExtraPropOp>
     _instance;
} _SetAvatarExtraPropOp_default_instance_;
class AddItemWithLimitOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddItemWithLimitOp>
     _instance;
} _AddItemWithLimitOp_default_instance_;
class SetGadgetChainLevelOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetGadgetChainLevelOp>
     _instance;
} _SetGadgetChainLevelOp_default_instance_;
class SetDailyTaskVarOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetDailyTaskVarOp>
     _instance;
} _SetDailyTaskVarOp_default_instance_;
class AvatarRenameAuditResultOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarRenameAuditResultOp>
     _instance;
} _AvatarRenameAuditResultOp_default_instance_;
class ResetAvatarRenameOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ResetAvatarRenameOp>
     _instance;
} _ResetAvatarRenameOp_default_instance_;
class AddFinishedTalkOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddFinishedTalkOp>
     _instance;
} _AddFinishedTalkOp_default_instance_;
class DelFinishedTalkOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DelFinishedTalkOp>
     _instance;
} _DelFinishedTalkOp_default_instance_;
class SetPlayerGCGMatchScoreOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPlayerGCGMatchScoreOp>
     _instance;
} _SetPlayerGCGMatchScoreOp_default_instance_;
class SetPushTipsStateOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPushTipsStateOp>
     _instance;
} _SetPushTipsStateOp_default_instance_;
class DeletePlayerGCGCardOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DeletePlayerGCGCardOp>
     _instance;
} _DeletePlayerGCGCardOp_default_instance_;
class DeletePlayerGCGCardFaceOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DeletePlayerGCGCardFaceOp>
     _instance;
} _DeletePlayerGCGCardFaceOp_default_instance_;
class DeletePlayerGCGCardBackOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DeletePlayerGCGCardBackOp>
     _instance;
} _DeletePlayerGCGCardBackOp_default_instance_;
class DeletePlayerGCGDeckFieldOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DeletePlayerGCGDeckFieldOp>
     _instance;
} _DeletePlayerGCGDeckFieldOp_default_instance_;
class BanPlayerGCGMatchOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BanPlayerGCGMatchOp>
     _instance;
} _BanPlayerGCGMatchOp_default_instance_;
class BanPlayerGCGPVPOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BanPlayerGCGPVPOp>
     _instance;
} _BanPlayerGCGPVPOp_default_instance_;
class OfflineMsgBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OfflineMsgBin>
     _instance;
  const ::proto::DelItemOp* del_item_op_;
  const ::proto::PlayerGotoOp* goto_op_;
  const ::proto::ResetParentQuestOp* reset_parent_quest_op_;
  const ::proto::RefreshGroupOp* refresh_group_op_;
  const ::proto::SetScenePointLockStatusOp* set_scene_point_lock_status_op_;
  const ::proto::SetPlayerNickNameOp* set_nick_name_op_;
  const ::proto::RefreshShopOp* refresh_shop_op_;
  const ::proto::UnlockTalentOp* unlock_talent_op_;
  const ::proto::TakeOffEquipOp* take_off_equip_op_;
  const ::proto::DelMailOp* del_mail_op_;
  const ::proto::FinishDailyTaskOp* finish_daily_task_op_;
  const ::proto::UnlockAreaOp* unlock_area_op_;
  const ::proto::DelItemNegativeOp* del_item_negative_op_;
  const ::proto::DelEquipOp* del_equip_op_;
  const ::proto::AddItemOp* add_item_op_;
  const ::proto::ModifyBornPosOp* modify_born_pos_op_;
  const ::proto::SubCoinNegativeOp* sub_coin_negative_op_;
  const ::proto::SetQuestContentProgressOp* set_quest_content_progress_op_;
  const ::proto::FinishOrderOp* finish_order_op_;
  const ::proto::AddOrModifyWatcherOp* add_or_modify_watcher_op_;
  const ::proto::DelWatcherOp* del_watcher_op_;
  const ::proto::SetSignatureOp* set_signature_op_;
  const ::proto::AddOrSubResinOp* add_or_sub_resin_op_;
  const ::proto::SetQuestGlobalVarValueOp* set_quest_global_var_value_op_;
  const ::proto::AddMcoinVipPointOp* add_mcoin_op_;
  const ::proto::GroupBinOp* group_bin_op_;
  const ::proto::DelOneOffOp* del_one_off_op_;
  const ::proto::FinishRoutineOp* finish_routine_op_;
  const ::proto::FinishDailyTaskUnloadGroupOp* finish_daily_task_group_op_;
  const ::proto::RefreshBlossomCircleCampOp* refresh_blossom_circle_camp_op_;
  const ::proto::BlessingActivityGivePicOp* blessing_give_pic_op_;
  const ::proto::ExpeditionActivityAssistOp* expedition_assist_op_;
  const ::proto::RecoverWorldLevelOp* recover_world_level_op_;
  const ::proto::ForceAcceptQuestOp* force_accept_quest_op_;
  const ::proto::SetMainCoopConfidenceOp* set_main_coop_confidence_op_;
  const ::proto::AddCoopPointSavePointListOp* add_coop_point_save_point_list_op_;
  const ::proto::AddRegionSearchProgressOp* add_region_search_progress_op_;
  const ::proto::SetMatchPunishTimesOp* set_match_punish_times_op_;
  const ::proto::ResetChannellerSlabCampGroupOp* reset_channeller_slab_camp_group_op_;
  const ::proto::ProcSceneTagOp* proc_scene_tag_op_;
  const ::proto::SetClimateAreaTypeOp* set_climate_area_type_op_;
  const ::proto::ExchangeMcoinOp* exchange_mcoin_op_;
  const ::proto::SetFinishedParentQuestChildStateOp* set_finished_parent_quest_child_state_op_;
  const ::proto::SetLevel1AreaExplorePointOp* set_level1_area_explore_point_op_;
  const ::proto::SetCodexOpenOrCloseOp* set_codex_open_or_close_op_;
  const ::proto::ChangeMapAreaInfoOp* change_map_area_info_op_;
  const ::proto::GroupLinkOp* group_link_op_;
  const ::proto::SetWatcherCompRecordValueOp* set_watcher_comp_record_value_op_;
  const ::proto::AddFriendOp* add_friend_op_;
  const ::proto::DelFriendOp* del_friend_op_;
  const ::proto::AddFriendAskOp* add_friend_ask_op_;
  const ::proto::DelFriendAskOp* del_friend_ask_op_;
  const ::proto::BanCustomDungeonOp* ban_custom_dungeon_op_;
  const ::proto::RemoveInvalidMapMarksOp* remove_invalid_map_marks_op_;
  const ::proto::RecalculateAreaExplorePointOp* recalculate_area_explore_point_op_;
  const ::proto::NicknameAuditResultOp* nickname_audit_result_op_;
  const ::proto::SignatureAuditResultOp* signature_audit_result_op_;
  const ::proto::PassHomeSceneArrangementAuditOp* pass_home_scene_arrangement_audit_op_;
  const ::proto::FailHomeSceneArrangementAuditOp* fail_home_scene_arrangement_audit_op_;
  const ::proto::FailHomeModulesArrangementAuditOp* fail_home_modules_arrangement_audit_op_;
  const ::proto::BanUgcPublishOp* ban_ugc_publish_op_;
  const ::proto::ResetPlayerPersistentDungeonOp* reset_player_persistent_dungeon_op_;
  const ::proto::ResetPlayerPosInPersistentDungeonOp* reset_player_pos_in_persistent_dungeon_op_;
  const ::proto::LevelTagChangeOp* level_tag_change_op_;
  const ::proto::ResetPlayerWayPointInPersistentDungeonOp* reset_player_way_point_in_persistent_dungeon_op_;
  const ::proto::ExhibitionSetOp* exhibition_set_op_;
  const ::proto::SetAvatarExtraPropOp* set_avatar_extra_prop_op_;
  const ::proto::AddItemWithLimitOp* add_item_with_limit_op_;
  const ::proto::SetGadgetChainLevelOp* set_gadget_chain_level_op_;
  const ::proto::SetDailyTaskVarOp* set_daily_task_var_op_;
  const ::proto::AvatarRenameAuditResultOp* avatar_rename_audit_result_op_;
  const ::proto::ResetAvatarRenameOp* reset_avatar_rename_op_;
  const ::proto::AddFinishedTalkOp* add_finished_talk_op_;
  const ::proto::DelFinishedTalkOp* del_finished_talk_op_;
  const ::proto::SetPlayerGCGMatchScoreOp* set_player_gcg_match_score_op_;
  const ::proto::SetPushTipsStateOp* set_push_tips_state_op_;
  const ::proto::DeletePlayerGCGCardOp* delete_player_gcg_card_op_;
  const ::proto::DeletePlayerGCGCardFaceOp* delete_player_gcg_card_face_op_;
  const ::proto::DeletePlayerGCGCardBackOp* delete_player_gcg_card_back_op_;
  const ::proto::DeletePlayerGCGDeckFieldOp* delete_player_gcg_deck_field_op_;
  const ::proto::BanPlayerGCGMatchOp* ban_player_gcg_match_op_;
  const ::proto::BanPlayerGCGPVPOp* ban_player_gcg_pvp_op_;
} _OfflineMsgBin_default_instance_;
class HomeTestOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeTestOp>
     _instance;
} _HomeTestOp_default_instance_;
class HomeRestoreDefaultsArrangementOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeRestoreDefaultsArrangementOp>
     _instance;
} _HomeRestoreDefaultsArrangementOp_default_instance_;
class HomeRestoreDefaultsSceneArrangementOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeRestoreDefaultsSceneArrangementOp>
     _instance;
} _HomeRestoreDefaultsSceneArrangementOp_default_instance_;
class HomeOfflineMsgBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeOfflineMsgBin>
     _instance;
  const ::proto::HomeTestOp* test_op_;
  const ::proto::HomeRestoreDefaultsArrangementOp* restore_defaults_arrangement_op_;
  const ::proto::HomeRestoreDefaultsSceneArrangementOp* restore_defaults_scene_arrangement_op_;
} _HomeOfflineMsgBin_default_instance_;
class GroupVariableBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GroupVariableBin>
     _instance;
} _GroupVariableBin_default_instance_;
class GroupVariableConfigIdBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GroupVariableConfigIdBin>
     _instance;
} _GroupVariableConfigIdBin_default_instance_;
class GroupProductBin_GadgetOneOffMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GroupProductBin::GroupProductBin_GadgetOneOffMapEntry>
     _instance;
} _GroupProductBin_GadgetOneOffMapEntry_default_instance_;
class GroupProductBin_MonsterOneOffMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GroupProductBin::GroupProductBin_MonsterOneOffMapEntry>
     _instance;
} _GroupProductBin_MonsterOneOffMapEntry_default_instance_;
class GroupProductBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GroupProductBin>
     _instance;
} _GroupProductBin_default_instance_;
class InteractGadgetDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<InteractGadget>
     _instance;
} _InteractGadget_default_instance_;
class AreaBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AreaBin>
     _instance;
} _AreaBin_default_instance_;
class CityBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CityBin>
     _instance;
} _CityBin_default_instance_;
class ScenePlayerLocationBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ScenePlayerLocationBin>
     _instance;
} _ScenePlayerLocationBin_default_instance_;
class EnvZoneInfoBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnvZoneInfoBin>
     _instance;
} _EnvZoneInfoBin_default_instance_;
class SceneEnvAnimalCompBin_ZoneInfoMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneEnvAnimalCompBin::SceneEnvAnimalCompBin_ZoneInfoMapEntry>
     _instance;
} _SceneEnvAnimalCompBin_ZoneInfoMapEntry_default_instance_;
class SceneEnvAnimalCompBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneEnvAnimalCompBin>
     _instance;
} _SceneEnvAnimalCompBin_default_instance_;
class SceneWeatherInfoBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneWeatherInfoBin>
     _instance;
} _SceneWeatherInfoBin_default_instance_;
class SceneClimateAreaInfoBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneClimateAreaInfoBin>
     _instance;
} _SceneClimateAreaInfoBin_default_instance_;
class SceneAllWeatherInfoBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneAllWeatherInfoBin>
     _instance;
} _SceneAllWeatherInfoBin_default_instance_;
class BackupGroupBin_VariableMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BackupGroupBin::BackupGroupBin_VariableMapEntry>
     _instance;
} _BackupGroupBin_VariableMapEntry_default_instance_;
class BackupGroupBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BackupGroupBin>
     _instance;
} _BackupGroupBin_default_instance_;
class SceneBlockGroupCompBin_BackupGroupMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneBlockGroupCompBin::SceneBlockGroupCompBin_BackupGroupMapEntry>
     _instance;
} _SceneBlockGroupCompBin_BackupGroupMapEntry_default_instance_;
class SceneBlockGroupCompBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneBlockGroupCompBin>
     _instance;
} _SceneBlockGroupCompBin_default_instance_;
class SceneAreaCompBin_AreaMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneAreaCompBin::SceneAreaCompBin_AreaMapEntry>
     _instance;
} _SceneAreaCompBin_AreaMapEntry_default_instance_;
class SceneAreaCompBin_CityMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneAreaCompBin::SceneAreaCompBin_CityMapEntry>
     _instance;
} _SceneAreaCompBin_CityMapEntry_default_instance_;
class SceneAreaCompBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneAreaCompBin>
     _instance;
} _SceneAreaCompBin_default_instance_;
class SceneEncounterCompBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneEncounterCompBin>
     _instance;
} _SceneEncounterCompBin_default_instance_;
class ActivitySceneBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivitySceneBin>
     _instance;
} _ActivitySceneBin_default_instance_;
class SceneVehicleBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneVehicleBin>
     _instance;
} _SceneVehicleBin_default_instance_;
class SceneTagOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneTagOp>
     _instance;
} _SceneTagOp_default_instance_;
class WayPointDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WayPoint>
     _instance;
} _WayPoint_default_instance_;
class DungeonSceneBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DungeonSceneBin>
     _instance;
} _DungeonSceneBin_default_instance_;
class SceneBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneBin>
     _instance;
  const ::proto::ActivitySceneBin* activity_scene_bin_;
  const ::proto::DungeonSceneBin* dungeon_scene_bin_;
} _SceneBin_default_instance_;
class GCGSettleData_UidMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GCGSettleData::GCGSettleData_UidMapEntry>
     _instance;
} _GCGSettleData_UidMapEntry_default_instance_;
class GCGSettleData_ChallengeProgressMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GCGSettleData::GCGSettleData_ChallengeProgressMapEntry>
     _instance;
} _GCGSettleData_ChallengeProgressMapEntry_default_instance_;
class GCGSettleData_ScoreMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GCGSettleData::GCGSettleData_ScoreMapEntry>
     _instance;
} _GCGSettleData_ScoreMapEntry_default_instance_;
class GCGSettleDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GCGSettleData>
     _instance;
} _GCGSettleData_default_instance_;
class OfflineOpTestOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OfflineOpTestOp>
     _instance;
} _OfflineOpTestOp_default_instance_;
class OfflineOpFurnitureMakeHelpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OfflineOpFurnitureMakeHelp>
     _instance;
} _OfflineOpFurnitureMakeHelp_default_instance_;
class OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OfflineOpPlantFlowerActivityGiveFlower::OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry>
     _instance;
} _OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry_default_instance_;
class OfflineOpPlantFlowerActivityGiveFlowerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OfflineOpPlantFlowerActivityGiveFlower>
     _instance;
} _OfflineOpPlantFlowerActivityGiveFlower_default_instance_;
class OfflineOpWinterCampActivityGiveItemDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OfflineOpWinterCampActivityGiveItem>
     _instance;
} _OfflineOpWinterCampActivityGiveItem_default_instance_;
class OfflineOpGCGSettleDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OfflineOpGCGSettle>
     _instance;
} _OfflineOpGCGSettle_default_instance_;
class OfflineOpActivityGiveGift_GiftNumMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OfflineOpActivityGiveGift::OfflineOpActivityGiveGift_GiftNumMapEntry>
     _instance;
} _OfflineOpActivityGiveGift_GiftNumMapEntry_default_instance_;
class OfflineOpActivityGiveGiftDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OfflineOpActivityGiveGift>
     _instance;
} _OfflineOpActivityGiveGift_default_instance_;
class OfflineOpVintageActivityDividendDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OfflineOpVintageActivityDividend>
     _instance;
} _OfflineOpVintageActivityDividend_default_instance_;
class OfflineOpBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OfflineOpBin>
     _instance;
  const ::proto::OfflineOpTestOp* test_op_;
  const ::proto::OfflineOpFurnitureMakeHelp* furniture_make_help_op_;
  const ::proto::OfflineOpPlantFlowerActivityGiveFlower* plant_flower_give_flower_op_;
  const ::proto::OfflineOpWinterCampActivityGiveItem* winter_camp_give_item_op_;
  const ::proto::OfflineOpActivityGiveGift* activity_give_gift_op_;
  const ::proto::OfflineOpVintageActivityDividend* vintage_dividend_op_;
  const ::proto::OfflineOpGCGSettle* gcg_settle_op_;
} _OfflineOpBin_default_instance_;
class FurnitureMakeSlotsBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FurnitureMakeSlotsBin>
     _instance;
} _FurnitureMakeSlotsBin_default_instance_;
class ProfilePictureBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ProfilePictureBin>
     _instance;
} _ProfilePictureBin_default_instance_;
class CustomDungeonSettingBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CustomDungeonSettingBin>
     _instance;
} _CustomDungeonSettingBin_default_instance_;
class CustomDungeonAbstractBin_BrickStatisticsMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CustomDungeonAbstractBin::CustomDungeonAbstractBin_BrickStatisticsMapEntry>
     _instance;
} _CustomDungeonAbstractBin_BrickStatisticsMapEntry_default_instance_;
class CustomDungeonAbstractBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CustomDungeonAbstractBin>
     _instance;
} _CustomDungeonAbstractBin_default_instance_;

namespace protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[148];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorBin, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorBin, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorBin, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Uint32PairBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Uint32PairBin, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Uint32PairBin, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Uint32ToInt32PairBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Uint32ToInt32PairBin, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Uint32ToInt32PairBin, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FloatPairBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FloatPairBin, first_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FloatPairBin, second_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Uint32List, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Uint32List, uint32_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Int32List, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Int32List, int32_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReliquaryBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReliquaryBin, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReliquaryBin, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReliquaryBin, main_prop_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReliquaryBin, append_prop_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WeaponBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WeaponBin, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WeaponBin, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WeaponBin, promote_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WeaponBin, affix_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemParamBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemParamBin, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemParamBin, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemParamBin, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemParamBin, promote_level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailBin, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailBin, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailBin, sender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailBin, item_param_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailBin, send_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailBin, expire_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailBin, importance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailBin, config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailBin, argument_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailBin, item_limit_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailBin, source_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailBin, tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailBin, reason_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailBin, collect_state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelItemOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelItemOp, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelItemOp, item_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelItemNegativeOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelItemNegativeOp, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelItemNegativeOp, item_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelItemNegativeOp, remain_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelEquipOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelEquipOp, guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerGotoOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerGotoOp, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerGotoOp, pos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetParentQuestOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetParentQuestOp, parent_quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshGroupOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshGroupOp, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshGroupOp, suite_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshGroupOp, scene_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetScenePointLockStatusOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetScenePointLockStatusOp, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetScenePointLockStatusOp, point_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetScenePointLockStatusOp, is_locked_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerNickNameOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerNickNameOp, nick_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshShopOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockTalentOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockTalentOp, avatar_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockTalentOp, skill_depot_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockTalentOp, talent_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeOffEquipOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeOffEquipOp, avatar_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeOffEquipOp, equip_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelMailOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelMailOp, mail_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockAreaOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockAreaOp, area_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishDailyTaskOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishDailyTaskOp, daily_task_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishDailyTaskOp, daily_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddItemOp, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddItemOp, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddItemOp, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddItemOp, item_count_),
  offsetof(AddItemOpDefaultTypeInternal, reliquary_),
  offsetof(AddItemOpDefaultTypeInternal, weapon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddItemOp, detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyBornPosOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyBornPosOp, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyBornPosOp, pos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubCoinNegativeOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubCoinNegativeOp, scoin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubCoinNegativeOp, hcoin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubCoinNegativeOp, mcoin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubCoinNegativeOp, home_coin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubCoinNegativeOp, platform_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetQuestContentProgressOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetQuestContentProgressOp, quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetQuestContentProgressOp, finish_progress_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetQuestContentProgressOp, fail_progress_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishOrderOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishOrderOp, order_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddOrModifyWatcherOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddOrModifyWatcherOp, watcher_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddOrModifyWatcherOp, progress_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelWatcherOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelWatcherOp, watcher_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetSignatureOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetSignatureOp, signature_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddOrSubResinOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddOrSubResinOp, delta_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddOrSubResinOp, is_sub_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetQuestGlobalVarValueOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetQuestGlobalVarValueOp, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetQuestGlobalVarValueOp, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMcoinVipPointOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMcoinVipPointOp, mcoin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMcoinVipPointOp, vip_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMcoinVipPointOp, platform_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangeMcoinOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangeMcoinOp, num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangeMcoinOp, exchange_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBinOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBinOp, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBinOp, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBinOp, config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBinOp, is_add_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBinOp, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBinOp, is_create_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBinOp, trigger_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBinOp, trigger_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBinOp, variable_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBinOp, variable_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBinOp, target_suite_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBinOp, scene_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelOneOffOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelOneOffOp, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelOneOffOp, config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelOneOffOp, is_monster_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelOneOffOp, scene_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishRoutineOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishRoutineOp, routine_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishDailyTaskUnloadGroupOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishDailyTaskUnloadGroupOp, daily_task_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishDailyTaskUnloadGroupOp, daily_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshBlossomCircleCampOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshBlossomCircleCampOp, refresh_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshBlossomCircleCampOp, circle_camp_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlessingActivityGivePicOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlessingActivityGivePicOp, source_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlessingActivityGivePicOp, target_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlessingActivityGivePicOp, pic_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExpeditionActivityAssistOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExpeditionActivityAssistOp, avatar_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExpeditionActivityAssistOp, assist_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExpeditionActivityAssistOp, target_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExpeditionActivityAssistOp, target_nick_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExpeditionActivityAssistOp, online_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExpeditionActivityAssistOp, assist_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoverWorldLevelOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRegionSearchProgressOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRegionSearchProgressOp, region_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRegionSearchProgressOp, add_recycle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRegionSearchProgressOp, add_progress_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetMatchPunishTimesOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetMatchPunishTimesOp, match_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetMatchPunishTimesOp, punish_times_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetChannellerSlabCampGroupOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetChannellerSlabCampGroupOp, stage_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetChannellerSlabCampGroupOp, round_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForceAcceptQuestOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForceAcceptQuestOp, quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetMainCoopConfidenceOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetMainCoopConfidenceOp, confidence_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddCoopPointSavePointListOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddCoopPointSavePointListOp, coop_point_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddCoopPointSavePointListOp, save_point_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetClimateAreaTypeOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetClimateAreaTypeOp, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetClimateAreaTypeOp, climate_area_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetClimateAreaTypeOp, climate_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcSceneTagOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcSceneTagOp, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcSceneTagOp, scene_tag_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcSceneTagOp, op_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFinishedParentQuestChildStateOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFinishedParentQuestChildStateOp, quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFinishedParentQuestChildStateOp, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeMapAreaInfoOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeMapAreaInfoOp, map_area_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeMapAreaInfoOp, is_open_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLevel1AreaExplorePointOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLevel1AreaExplorePointOp, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLevel1AreaExplorePointOp, level1_area_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLevel1AreaExplorePointOp, explore_point_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetCodexOpenOrCloseOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetCodexOpenOrCloseOp, codex_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetCodexOpenOrCloseOp, codex_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetCodexOpenOrCloseOp, is_open_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupLinkOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupLinkOp, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupLinkOp, group_bundle_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupLinkOp, activity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetWatcherCompRecordValueOp, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetWatcherCompRecordValueOp, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(SetWatcherCompRecordValueOpDefaultTypeInternal, max_critical_damage_),
  offsetof(SetWatcherCompRecordValueOpDefaultTypeInternal, max_fly_map_distance_),
  offsetof(SetWatcherCompRecordValueOpDefaultTypeInternal, max_fly_time_),
  offsetof(SetWatcherCompRecordValueOpDefaultTypeInternal, max_dash_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetWatcherCompRecordValueOp, optional_max_critical_damage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetWatcherCompRecordValueOp, optional_max_fly_map_distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetWatcherCompRecordValueOp, optional_max_fly_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetWatcherCompRecordValueOp, optional_max_dash_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFriendOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFriendOp, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelFriendOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelFriendOp, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFriendAskOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFriendAskOp, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelFriendAskOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelFriendAskOp, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BanCustomDungeonOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BanCustomDungeonOp, ban_expire_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveInvalidMapMarksOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveInvalidMapMarksOp, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveInvalidMapMarksOp, x_range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveInvalidMapMarksOp, z_range_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecalculateAreaExplorePointOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecalculateAreaExplorePointOp, area_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecalculateAreaExplorePointOp, old_exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecalculateAreaExplorePointOp, recalc_exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecalculateAreaExplorePointOp, new_exp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NicknameAuditResultOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NicknameAuditResultOp, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NicknameAuditResultOp, is_ok_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignatureAuditResultOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignatureAuditResultOp, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignatureAuditResultOp, is_ok_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PassHomeSceneArrangementAuditOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PassHomeSceneArrangementAuditOp, module_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PassHomeSceneArrangementAuditOp, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PassHomeSceneArrangementAuditOp, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FailHomeSceneArrangementAuditOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FailHomeSceneArrangementAuditOp, module_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FailHomeSceneArrangementAuditOp, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FailHomeSceneArrangementAuditOp, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FailHomeModulesArrangementAuditOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FailHomeModulesArrangementAuditOp, is_all_module_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FailHomeModulesArrangementAuditOp, module_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FailHomeModulesArrangementAuditOp, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BanUgcPublishOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BanUgcPublishOp, ban_publish_expire_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetPlayerPersistentDungeonOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetPlayerPersistentDungeonOp, scene_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetPlayerPosInPersistentDungeonOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetPlayerPosInPersistentDungeonOp, scene_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelTagChangeOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelTagChangeOp, level_tag_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetPlayerWayPointInPersistentDungeonOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetPlayerWayPointInPersistentDungeonOp, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetPlayerWayPointInPersistentDungeonOp, way_point_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExhibitionSetOp, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExhibitionSetOp, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExhibitionSetOp, exhibition_id_),
  offsetof(ExhibitionSetOpDefaultTypeInternal, accumulable_val_),
  offsetof(ExhibitionSetOpDefaultTypeInternal, replaceable_val_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExhibitionSetOp, optional_accumulable_val_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExhibitionSetOp, optional_replaceable_val_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAvatarExtraPropOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAvatarExtraPropOp, avatar_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAvatarExtraPropOp, extra_prop_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAvatarExtraPropOp, extra_prop_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddItemWithLimitOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddItemWithLimitOp, add_item_op_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddItemWithLimitOp, max_item_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetGadgetChainLevelOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetGadgetChainLevelOp, gadgetchain_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetGadgetChainLevelOp, gadgetchain_level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetDailyTaskVarOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetDailyTaskVarOp, task_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetDailyTaskVarOp, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetDailyTaskVarOp, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarRenameAuditResultOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarRenameAuditResultOp, rename_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarRenameAuditResultOp, target_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarRenameAuditResultOp, is_succ_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarRenameAuditResultOp, source_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetAvatarRenameOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetAvatarRenameOp, avatar_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetAvatarRenameOp, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFinishedTalkOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddFinishedTalkOp, talk_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelFinishedTalkOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelFinishedTalkOp, talk_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerGCGMatchScoreOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerGCGMatchScoreOp, match_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerGCGMatchScoreOp, score_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPushTipsStateOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPushTipsStateOp, push_tips_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPushTipsStateOp, push_tips_state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeletePlayerGCGCardOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeletePlayerGCGCardOp, card_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeletePlayerGCGCardOp, del_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeletePlayerGCGCardFaceOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeletePlayerGCGCardFaceOp, card_face_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeletePlayerGCGCardBackOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeletePlayerGCGCardBackOp, card_back_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeletePlayerGCGDeckFieldOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeletePlayerGCGDeckFieldOp, deck_field_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BanPlayerGCGMatchOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BanPlayerGCGMatchOp, expire_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BanPlayerGCGPVPOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BanPlayerGCGPVPOp, expire_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineMsgBin, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineMsgBin, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineMsgBin, enque_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineMsgBin, ticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineMsgBin, index_),
  offsetof(OfflineMsgBinDefaultTypeInternal, del_item_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, goto_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, reset_parent_quest_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, refresh_group_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, set_scene_point_lock_status_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, set_nick_name_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, refresh_shop_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, unlock_talent_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, take_off_equip_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, del_mail_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, finish_daily_task_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, unlock_area_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, del_item_negative_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, del_equip_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, add_item_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, modify_born_pos_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, sub_coin_negative_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, set_quest_content_progress_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, finish_order_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, add_or_modify_watcher_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, del_watcher_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, set_signature_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, add_or_sub_resin_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, set_quest_global_var_value_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, add_mcoin_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, group_bin_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, del_one_off_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, finish_routine_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, finish_daily_task_group_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, refresh_blossom_circle_camp_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, blessing_give_pic_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, expedition_assist_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, recover_world_level_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, force_accept_quest_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, set_main_coop_confidence_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, add_coop_point_save_point_list_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, add_region_search_progress_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, set_match_punish_times_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, reset_channeller_slab_camp_group_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, proc_scene_tag_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, set_climate_area_type_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, exchange_mcoin_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, set_finished_parent_quest_child_state_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, set_level1_area_explore_point_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, set_codex_open_or_close_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, change_map_area_info_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, group_link_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, set_watcher_comp_record_value_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, add_friend_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, del_friend_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, add_friend_ask_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, del_friend_ask_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, ban_custom_dungeon_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, remove_invalid_map_marks_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, recalculate_area_explore_point_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, nickname_audit_result_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, signature_audit_result_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, pass_home_scene_arrangement_audit_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, fail_home_scene_arrangement_audit_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, fail_home_modules_arrangement_audit_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, ban_ugc_publish_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, reset_player_persistent_dungeon_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, reset_player_pos_in_persistent_dungeon_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, level_tag_change_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, reset_player_way_point_in_persistent_dungeon_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, exhibition_set_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, set_avatar_extra_prop_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, add_item_with_limit_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, set_gadget_chain_level_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, set_daily_task_var_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, avatar_rename_audit_result_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, reset_avatar_rename_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, add_finished_talk_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, del_finished_talk_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, set_player_gcg_match_score_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, set_push_tips_state_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, delete_player_gcg_card_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, delete_player_gcg_card_face_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, delete_player_gcg_card_back_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, delete_player_gcg_deck_field_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, ban_player_gcg_match_op_),
  offsetof(OfflineMsgBinDefaultTypeInternal, ban_player_gcg_pvp_op_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineMsgBin, detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeTestOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeTestOp, val_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeRestoreDefaultsArrangementOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeRestoreDefaultsArrangementOp, is_all_module_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeRestoreDefaultsArrangementOp, module_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeRestoreDefaultsArrangementOp, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeRestoreDefaultsSceneArrangementOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeRestoreDefaultsSceneArrangementOp, module_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeRestoreDefaultsSceneArrangementOp, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeRestoreDefaultsSceneArrangementOp, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeOfflineMsgBin, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeOfflineMsgBin, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeOfflineMsgBin, enque_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeOfflineMsgBin, ticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeOfflineMsgBin, index_),
  offsetof(HomeOfflineMsgBinDefaultTypeInternal, test_op_),
  offsetof(HomeOfflineMsgBinDefaultTypeInternal, restore_defaults_arrangement_op_),
  offsetof(HomeOfflineMsgBinDefaultTypeInternal, restore_defaults_scene_arrangement_op_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeOfflineMsgBin, detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupVariableBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupVariableBin, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupVariableConfigIdBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupVariableConfigIdBin, config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupVariableConfigIdBin, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupProductBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupProductBin, gadget_one_off_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupProductBin, monster_one_off_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InteractGadget, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InteractGadget, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InteractGadget, config_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AreaBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AreaBin, explore_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AreaBin, explore_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AreaBin, unlock_point_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AreaBin, interact_gadget_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CityBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CityBin, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CityBin, crystal_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScenePlayerLocationBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScenePlayerLocationBin, cur_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScenePlayerLocationBin, cur_rot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScenePlayerLocationBin, last_valid_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScenePlayerLocationBin, last_valid_rot_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvZoneInfoBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvZoneInfoBin, last_refresh_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvZoneInfoBin, animal_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEnvAnimalCompBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEnvAnimalCompBin, zone_info_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneWeatherInfoBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneWeatherInfoBin, height_area_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneWeatherInfoBin, climate_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneWeatherInfoBin, next_climate_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneWeatherInfoBin, forcast_climate_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneClimateAreaInfoBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneClimateAreaInfoBin, climate_area_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneClimateAreaInfoBin, json_climate_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAllWeatherInfoBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAllWeatherInfoBin, weather_info_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAllWeatherInfoBin, closed_weather_area_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAllWeatherInfoBin, climate_area_info_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAllWeatherInfoBin, closed_climate_area_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackupGroupBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackupGroupBin, del_monster_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackupGroupBin, variable_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackupGroupBin, revise_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackupGroupBin, last_refresh_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneBlockGroupCompBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneBlockGroupCompBin, dead_group_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneBlockGroupCompBin, backup_group_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneBlockGroupCompBin, is_scene_group_all_dead_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAreaCompBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAreaCompBin, unlocked_area_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAreaCompBin, area_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAreaCompBin, city_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEncounterCompBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEncounterCompBin, parent_quest_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivitySceneBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivitySceneBin, is_open_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneVehicleBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneVehicleBin, config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneVehicleBin, cur_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneVehicleBin, cur_rot_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTagOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTagOp, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTagOp, op_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WayPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WayPoint, point_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WayPoint, activate_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonSceneBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonSceneBin, activated_way_point_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonSceneBin, activated_slip_revive_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneBin, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneBin, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneBin, unlocked_point_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneBin, unlocked_force_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneBin, locked_point_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneBin, all_weather_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneBin, owner_player_location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneBin, block_group_bin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneBin, env_animal_bin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneBin, area_comp_bin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneBin, encounter_comp_bin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneBin, last_spring_recover_time_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneBin, group_unlimit_point_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneBin, interacted_to_be_explored_point_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneBin, cur_spring_volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneBin, is_locked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneBin, vehicle_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneBin, scene_tag_op_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneBin, hide_point_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneBin, unhide_point_list_),
  offsetof(SceneBinDefaultTypeInternal, activity_scene_bin_),
  offsetof(SceneBinDefaultTypeInternal, dungeon_scene_bin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneBin, detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCGSettleData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCGSettleData, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCGSettleData, thread_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCGSettleData, game_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCGSettleData, game_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCGSettleData, verify_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCGSettleData, reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCGSettleData, business_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCGSettleData, uid_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCGSettleData, winner_controller_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCGSettleData, challenge_progress_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCGSettleData, card_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCGSettleData, card_group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCGSettleData, score_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCGSettleData, match_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCGSettleData, custom_param_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCGSettleData, forbid_finish_challenge_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpTestOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpTestOp, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpFurnitureMakeHelp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpFurnitureMakeHelp, player_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpFurnitureMakeHelp, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpFurnitureMakeHelp, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpFurnitureMakeHelp, icon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpFurnitureMakeHelp, profile_picture_bin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpPlantFlowerActivityGiveFlower, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpPlantFlowerActivityGiveFlower, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpPlantFlowerActivityGiveFlower, flower_num_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpPlantFlowerActivityGiveFlower, schedule_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpWinterCampActivityGiveItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpWinterCampActivityGiveItem, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpWinterCampActivityGiveItem, item_bin_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpWinterCampActivityGiveItem, schedule_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpGCGSettle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpGCGSettle, settle_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpActivityGiveGift, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpActivityGiveGift, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpActivityGiveGift, gift_num_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpActivityGiveGift, schedule_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpVintageActivityDividend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpVintageActivityDividend, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpVintageActivityDividend, schedule_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpBin, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpBin, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(OfflineOpBinDefaultTypeInternal, test_op_),
  offsetof(OfflineOpBinDefaultTypeInternal, furniture_make_help_op_),
  offsetof(OfflineOpBinDefaultTypeInternal, plant_flower_give_flower_op_),
  offsetof(OfflineOpBinDefaultTypeInternal, winter_camp_give_item_op_),
  offsetof(OfflineOpBinDefaultTypeInternal, activity_give_gift_op_),
  offsetof(OfflineOpBinDefaultTypeInternal, vintage_dividend_op_),
  offsetof(OfflineOpBinDefaultTypeInternal, gcg_settle_op_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineOpBin, detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FurnitureMakeSlotsBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FurnitureMakeSlotsBin, make_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FurnitureMakeSlotsBin, begin_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FurnitureMakeSlotsBin, dur_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FurnitureMakeSlotsBin, accelerate_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FurnitureMakeSlotsBin, accelerate_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FurnitureMakeSlotsBin, avatar_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilePictureBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilePictureBin, avatar_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilePictureBin, costume_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomDungeonSettingBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomDungeonSettingBin, is_arrive_finish_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomDungeonSettingBin, coin_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomDungeonSettingBin, time_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomDungeonSettingBin, is_forbid_skill_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomDungeonSettingBin, open_room_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomDungeonSettingBin, start_room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomDungeonSettingBin, life_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomDungeonAbstractBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomDungeonAbstractBin, finish_room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomDungeonAbstractBin, total_coin_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomDungeonAbstractBin, first_publish_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomDungeonAbstractBin, last_publish_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomDungeonAbstractBin, brick_statistics_map_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(VectorBin)},
  { 8, -1, sizeof(Uint32PairBin)},
  { 15, -1, sizeof(Uint32ToInt32PairBin)},
  { 22, -1, sizeof(FloatPairBin)},
  { 29, -1, sizeof(Uint32List)},
  { 35, -1, sizeof(Int32List)},
  { 41, -1, sizeof(ReliquaryBin)},
  { 50, -1, sizeof(WeaponBin)},
  { 59, -1, sizeof(ItemParamBin)},
  { 68, -1, sizeof(MailBin)},
  { 87, -1, sizeof(DelItemOp)},
  { 94, -1, sizeof(DelItemNegativeOp)},
  { 102, -1, sizeof(DelEquipOp)},
  { 108, -1, sizeof(PlayerGotoOp)},
  { 115, -1, sizeof(ResetParentQuestOp)},
  { 121, -1, sizeof(RefreshGroupOp)},
  { 129, -1, sizeof(SetScenePointLockStatusOp)},
  { 137, -1, sizeof(SetPlayerNickNameOp)},
  { 143, -1, sizeof(RefreshShopOp)},
  { 148, -1, sizeof(UnlockTalentOp)},
  { 156, -1, sizeof(TakeOffEquipOp)},
  { 163, -1, sizeof(DelMailOp)},
  { 169, -1, sizeof(UnlockAreaOp)},
  { 175, -1, sizeof(FinishDailyTaskOp)},
  { 182, -1, sizeof(AddItemOp)},
  { 192, -1, sizeof(ModifyBornPosOp)},
  { 199, -1, sizeof(SubCoinNegativeOp)},
  { 209, -1, sizeof(SetQuestContentProgressOp)},
  { 217, -1, sizeof(FinishOrderOp)},
  { 223, -1, sizeof(AddOrModifyWatcherOp)},
  { 230, -1, sizeof(DelWatcherOp)},
  { 236, -1, sizeof(SetSignatureOp)},
  { 242, -1, sizeof(AddOrSubResinOp)},
  { 249, -1, sizeof(SetQuestGlobalVarValueOp)},
  { 256, -1, sizeof(AddMcoinVipPointOp)},
  { 264, -1, sizeof(ExchangeMcoinOp)},
  { 271, -1, sizeof(GroupBinOp)},
  { 288, -1, sizeof(DelOneOffOp)},
  { 297, -1, sizeof(FinishRoutineOp)},
  { 303, -1, sizeof(FinishDailyTaskUnloadGroupOp)},
  { 310, -1, sizeof(RefreshBlossomCircleCampOp)},
  { 317, -1, sizeof(BlessingActivityGivePicOp)},
  { 325, -1, sizeof(ExpeditionActivityAssistOp)},
  { 336, -1, sizeof(RecoverWorldLevelOp)},
  { 341, -1, sizeof(AddRegionSearchProgressOp)},
  { 349, -1, sizeof(SetMatchPunishTimesOp)},
  { 356, -1, sizeof(ResetChannellerSlabCampGroupOp)},
  { 363, -1, sizeof(ForceAcceptQuestOp)},
  { 369, -1, sizeof(SetMainCoopConfidenceOp)},
  { 375, -1, sizeof(AddCoopPointSavePointListOp)},
  { 382, -1, sizeof(SetClimateAreaTypeOp)},
  { 390, -1, sizeof(ProcSceneTagOp)},
  { 398, -1, sizeof(SetFinishedParentQuestChildStateOp)},
  { 405, -1, sizeof(ChangeMapAreaInfoOp)},
  { 412, -1, sizeof(SetLevel1AreaExplorePointOp)},
  { 420, -1, sizeof(SetCodexOpenOrCloseOp)},
  { 428, -1, sizeof(GroupLinkOp)},
  { 436, -1, sizeof(SetWatcherCompRecordValueOp)},
  { 449, -1, sizeof(AddFriendOp)},
  { 455, -1, sizeof(DelFriendOp)},
  { 461, -1, sizeof(AddFriendAskOp)},
  { 467, -1, sizeof(DelFriendAskOp)},
  { 473, -1, sizeof(BanCustomDungeonOp)},
  { 479, -1, sizeof(RemoveInvalidMapMarksOp)},
  { 487, -1, sizeof(RecalculateAreaExplorePointOp)},
  { 496, -1, sizeof(NicknameAuditResultOp)},
  { 503, -1, sizeof(SignatureAuditResultOp)},
  { 510, -1, sizeof(PassHomeSceneArrangementAuditOp)},
  { 518, -1, sizeof(FailHomeSceneArrangementAuditOp)},
  { 526, -1, sizeof(FailHomeModulesArrangementAuditOp)},
  { 534, -1, sizeof(BanUgcPublishOp)},
  { 540, -1, sizeof(ResetPlayerPersistentDungeonOp)},
  { 546, -1, sizeof(ResetPlayerPosInPersistentDungeonOp)},
  { 552, -1, sizeof(LevelTagChangeOp)},
  { 558, -1, sizeof(ResetPlayerWayPointInPersistentDungeonOp)},
  { 565, -1, sizeof(ExhibitionSetOp)},
  { 575, -1, sizeof(SetAvatarExtraPropOp)},
  { 583, -1, sizeof(AddItemWithLimitOp)},
  { 590, -1, sizeof(SetGadgetChainLevelOp)},
  { 597, -1, sizeof(SetDailyTaskVarOp)},
  { 605, -1, sizeof(AvatarRenameAuditResultOp)},
  { 614, -1, sizeof(ResetAvatarRenameOp)},
  { 621, -1, sizeof(AddFinishedTalkOp)},
  { 627, -1, sizeof(DelFinishedTalkOp)},
  { 633, -1, sizeof(SetPlayerGCGMatchScoreOp)},
  { 640, -1, sizeof(SetPushTipsStateOp)},
  { 647, -1, sizeof(DeletePlayerGCGCardOp)},
  { 654, -1, sizeof(DeletePlayerGCGCardFaceOp)},
  { 660, -1, sizeof(DeletePlayerGCGCardBackOp)},
  { 666, -1, sizeof(DeletePlayerGCGDeckFieldOp)},
  { 672, -1, sizeof(BanPlayerGCGMatchOp)},
  { 678, -1, sizeof(BanPlayerGCGPVPOp)},
  { 684, -1, sizeof(OfflineMsgBin)},
  { 775, -1, sizeof(HomeTestOp)},
  { 781, -1, sizeof(HomeRestoreDefaultsArrangementOp)},
  { 789, -1, sizeof(HomeRestoreDefaultsSceneArrangementOp)},
  { 797, -1, sizeof(HomeOfflineMsgBin)},
  { 809, -1, sizeof(GroupVariableBin)},
  { 815, -1, sizeof(GroupVariableConfigIdBin)},
  { 822, -1, sizeof(GroupProductBin)},
  { 829, -1, sizeof(InteractGadget)},
  { 836, -1, sizeof(AreaBin)},
  { 845, -1, sizeof(CityBin)},
  { 852, -1, sizeof(ScenePlayerLocationBin)},
  { 861, -1, sizeof(EnvZoneInfoBin)},
  { 868, -1, sizeof(SceneEnvAnimalCompBin)},
  { 874, -1, sizeof(SceneWeatherInfoBin)},
  { 883, -1, sizeof(SceneClimateAreaInfoBin)},
  { 890, -1, sizeof(SceneAllWeatherInfoBin)},
  { 899, -1, sizeof(BackupGroupBin)},
  { 908, -1, sizeof(SceneBlockGroupCompBin)},
  { 916, -1, sizeof(SceneAreaCompBin)},
  { 924, -1, sizeof(SceneEncounterCompBin)},
  { 930, -1, sizeof(ActivitySceneBin)},
  { 936, -1, sizeof(SceneVehicleBin)},
  { 944, -1, sizeof(SceneTagOp)},
  { 951, -1, sizeof(WayPoint)},
  { 958, -1, sizeof(DungeonSceneBin)},
  { 965, -1, sizeof(SceneBin)},
  { 991, -1, sizeof(GCGSettleData)},
  { 1012, -1, sizeof(OfflineOpTestOp)},
  { 1018, -1, sizeof(OfflineOpFurnitureMakeHelp)},
  { 1028, -1, sizeof(OfflineOpPlantFlowerActivityGiveFlower)},
  { 1036, -1, sizeof(OfflineOpWinterCampActivityGiveItem)},
  { 1044, -1, sizeof(OfflineOpGCGSettle)},
  { 1050, -1, sizeof(OfflineOpActivityGiveGift)},
  { 1058, -1, sizeof(OfflineOpVintageActivityDividend)},
  { 1065, -1, sizeof(OfflineOpBin)},
  { 1078, -1, sizeof(FurnitureMakeSlotsBin)},
  { 1089, -1, sizeof(ProfilePictureBin)},
  { 1096, -1, sizeof(CustomDungeonSettingBin)},
  { 1108, -1, sizeof(CustomDungeonAbstractBin)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_VectorBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Uint32PairBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Uint32ToInt32PairBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FloatPairBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Uint32List_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Int32List_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReliquaryBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WeaponBin_AffixMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WeaponBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ItemParamBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MailBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelItemOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelItemNegativeOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelEquipOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerGotoOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResetParentQuestOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RefreshGroupOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetScenePointLockStatusOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPlayerNickNameOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RefreshShopOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnlockTalentOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TakeOffEquipOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelMailOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnlockAreaOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FinishDailyTaskOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddItemOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModifyBornPosOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SubCoinNegativeOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetQuestContentProgressOp_FinishProgressMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetQuestContentProgressOp_FailProgressMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetQuestContentProgressOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FinishOrderOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddOrModifyWatcherOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelWatcherOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetSignatureOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddOrSubResinOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetQuestGlobalVarValueOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddMcoinVipPointOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExchangeMcoinOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GroupBinOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelOneOffOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FinishRoutineOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FinishDailyTaskUnloadGroupOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RefreshBlossomCircleCampOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlessingActivityGivePicOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExpeditionActivityAssistOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RecoverWorldLevelOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddRegionSearchProgressOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetMatchPunishTimesOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResetChannellerSlabCampGroupOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ForceAcceptQuestOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetMainCoopConfidenceOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddCoopPointSavePointListOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetClimateAreaTypeOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProcSceneTagOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetFinishedParentQuestChildStateOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChangeMapAreaInfoOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetLevel1AreaExplorePointOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetCodexOpenOrCloseOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GroupLinkOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetWatcherCompRecordValueOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddFriendOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelFriendOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddFriendAskOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelFriendAskOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BanCustomDungeonOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RemoveInvalidMapMarksOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RecalculateAreaExplorePointOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NicknameAuditResultOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SignatureAuditResultOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PassHomeSceneArrangementAuditOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FailHomeSceneArrangementAuditOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FailHomeModulesArrangementAuditOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BanUgcPublishOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResetPlayerPersistentDungeonOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResetPlayerPosInPersistentDungeonOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LevelTagChangeOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResetPlayerWayPointInPersistentDungeonOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExhibitionSetOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetAvatarExtraPropOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddItemWithLimitOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetGadgetChainLevelOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetDailyTaskVarOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarRenameAuditResultOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResetAvatarRenameOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddFinishedTalkOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelFinishedTalkOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPlayerGCGMatchScoreOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPushTipsStateOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeletePlayerGCGCardOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeletePlayerGCGCardFaceOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeletePlayerGCGCardBackOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeletePlayerGCGDeckFieldOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BanPlayerGCGMatchOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BanPlayerGCGPVPOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OfflineMsgBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeTestOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeRestoreDefaultsArrangementOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeRestoreDefaultsSceneArrangementOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeOfflineMsgBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GroupVariableBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GroupVariableConfigIdBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GroupProductBin_GadgetOneOffMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GroupProductBin_MonsterOneOffMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GroupProductBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InteractGadget_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AreaBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CityBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ScenePlayerLocationBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnvZoneInfoBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneEnvAnimalCompBin_ZoneInfoMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneEnvAnimalCompBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneWeatherInfoBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneClimateAreaInfoBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneAllWeatherInfoBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BackupGroupBin_VariableMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BackupGroupBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneBlockGroupCompBin_BackupGroupMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneBlockGroupCompBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneAreaCompBin_AreaMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneAreaCompBin_CityMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneAreaCompBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneEncounterCompBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivitySceneBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneVehicleBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneTagOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WayPoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DungeonSceneBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GCGSettleData_UidMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GCGSettleData_ChallengeProgressMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GCGSettleData_ScoreMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GCGSettleData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OfflineOpTestOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OfflineOpFurnitureMakeHelp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OfflineOpPlantFlowerActivityGiveFlower_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OfflineOpWinterCampActivityGiveItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OfflineOpGCGSettle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OfflineOpActivityGiveGift_GiftNumMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OfflineOpActivityGiveGift_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OfflineOpVintageActivityDividend_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OfflineOpBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FurnitureMakeSlotsBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProfilePictureBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CustomDungeonSettingBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CustomDungeonAbstractBin_BrickStatisticsMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CustomDungeonAbstractBin_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "server_only/bin_common.server.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
file_level_metadata[7].reflection = WeaponBin::WeaponBin_AffixMapEntry::CreateReflection(file_level_metadata[7].descriptor, _WeaponBin_AffixMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[28].reflection = SetQuestContentProgressOp::SetQuestContentProgressOp_FinishProgressMapEntry::CreateReflection(file_level_metadata[28].descriptor, _SetQuestContentProgressOp_FinishProgressMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[29].reflection = SetQuestContentProgressOp::SetQuestContentProgressOp_FailProgressMapEntry::CreateReflection(file_level_metadata[29].descriptor, _SetQuestContentProgressOp_FailProgressMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[102].reflection = GroupProductBin::GroupProductBin_GadgetOneOffMapEntry::CreateReflection(file_level_metadata[102].descriptor, _GroupProductBin_GadgetOneOffMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[103].reflection = GroupProductBin::GroupProductBin_MonsterOneOffMapEntry::CreateReflection(file_level_metadata[103].descriptor, _GroupProductBin_MonsterOneOffMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[110].reflection = SceneEnvAnimalCompBin::SceneEnvAnimalCompBin_ZoneInfoMapEntry::CreateReflection(file_level_metadata[110].descriptor, _SceneEnvAnimalCompBin_ZoneInfoMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[115].reflection = BackupGroupBin::BackupGroupBin_VariableMapEntry::CreateReflection(file_level_metadata[115].descriptor, _BackupGroupBin_VariableMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[117].reflection = SceneBlockGroupCompBin::SceneBlockGroupCompBin_BackupGroupMapEntry::CreateReflection(file_level_metadata[117].descriptor, _SceneBlockGroupCompBin_BackupGroupMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[119].reflection = SceneAreaCompBin::SceneAreaCompBin_AreaMapEntry::CreateReflection(file_level_metadata[119].descriptor, _SceneAreaCompBin_AreaMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[120].reflection = SceneAreaCompBin::SceneAreaCompBin_CityMapEntry::CreateReflection(file_level_metadata[120].descriptor, _SceneAreaCompBin_CityMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[129].reflection = GCGSettleData::GCGSettleData_UidMapEntry::CreateReflection(file_level_metadata[129].descriptor, _GCGSettleData_UidMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[130].reflection = GCGSettleData::GCGSettleData_ChallengeProgressMapEntry::CreateReflection(file_level_metadata[130].descriptor, _GCGSettleData_ChallengeProgressMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[131].reflection = GCGSettleData::GCGSettleData_ScoreMapEntry::CreateReflection(file_level_metadata[131].descriptor, _GCGSettleData_ScoreMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[135].reflection = OfflineOpPlantFlowerActivityGiveFlower::OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry::CreateReflection(file_level_metadata[135].descriptor, _OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[139].reflection = OfflineOpActivityGiveGift::OfflineOpActivityGiveGift_GiftNumMapEntry::CreateReflection(file_level_metadata[139].descriptor, _OfflineOpActivityGiveGift_GiftNumMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[146].reflection = CustomDungeonAbstractBin::CustomDungeonAbstractBin_BrickStatisticsMapEntry::CreateReflection(file_level_metadata[146].descriptor, _CustomDungeonAbstractBin_BrickStatisticsMapEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 148);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _VectorBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_VectorBin_default_instance_);_Uint32PairBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Uint32PairBin_default_instance_);_Uint32ToInt32PairBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Uint32ToInt32PairBin_default_instance_);_FloatPairBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FloatPairBin_default_instance_);_Uint32List_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Uint32List_default_instance_);_Int32List_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Int32List_default_instance_);_ReliquaryBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ReliquaryBin_default_instance_);_WeaponBin_AffixMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WeaponBin_AffixMapEntry_default_instance_);_WeaponBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WeaponBin_default_instance_);_ItemParamBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ItemParamBin_default_instance_);_MailBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MailBin_default_instance_);_DelItemOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DelItemOp_default_instance_);_DelItemNegativeOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DelItemNegativeOp_default_instance_);_DelEquipOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DelEquipOp_default_instance_);_PlayerGotoOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerGotoOp_default_instance_);_ResetParentQuestOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ResetParentQuestOp_default_instance_);_RefreshGroupOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RefreshGroupOp_default_instance_);_SetScenePointLockStatusOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetScenePointLockStatusOp_default_instance_);_SetPlayerNickNameOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPlayerNickNameOp_default_instance_);_RefreshShopOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RefreshShopOp_default_instance_);_UnlockTalentOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UnlockTalentOp_default_instance_);_TakeOffEquipOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TakeOffEquipOp_default_instance_);_DelMailOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DelMailOp_default_instance_);_UnlockAreaOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UnlockAreaOp_default_instance_);_FinishDailyTaskOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FinishDailyTaskOp_default_instance_);_AddItemOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddItemOp_default_instance_);_ModifyBornPosOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ModifyBornPosOp_default_instance_);_SubCoinNegativeOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SubCoinNegativeOp_default_instance_);_SetQuestContentProgressOp_FinishProgressMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetQuestContentProgressOp_FinishProgressMapEntry_default_instance_);_SetQuestContentProgressOp_FailProgressMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetQuestContentProgressOp_FailProgressMapEntry_default_instance_);_SetQuestContentProgressOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetQuestContentProgressOp_default_instance_);_FinishOrderOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FinishOrderOp_default_instance_);_AddOrModifyWatcherOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddOrModifyWatcherOp_default_instance_);_DelWatcherOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DelWatcherOp_default_instance_);_SetSignatureOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetSignatureOp_default_instance_);_AddOrSubResinOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddOrSubResinOp_default_instance_);_SetQuestGlobalVarValueOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetQuestGlobalVarValueOp_default_instance_);_AddMcoinVipPointOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddMcoinVipPointOp_default_instance_);_ExchangeMcoinOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ExchangeMcoinOp_default_instance_);_GroupBinOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GroupBinOp_default_instance_);_DelOneOffOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DelOneOffOp_default_instance_);_FinishRoutineOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FinishRoutineOp_default_instance_);_FinishDailyTaskUnloadGroupOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FinishDailyTaskUnloadGroupOp_default_instance_);_RefreshBlossomCircleCampOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RefreshBlossomCircleCampOp_default_instance_);_BlessingActivityGivePicOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BlessingActivityGivePicOp_default_instance_);_ExpeditionActivityAssistOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ExpeditionActivityAssistOp_default_instance_);_RecoverWorldLevelOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RecoverWorldLevelOp_default_instance_);_AddRegionSearchProgressOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddRegionSearchProgressOp_default_instance_);_SetMatchPunishTimesOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetMatchPunishTimesOp_default_instance_);_ResetChannellerSlabCampGroupOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ResetChannellerSlabCampGroupOp_default_instance_);_ForceAcceptQuestOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ForceAcceptQuestOp_default_instance_);_SetMainCoopConfidenceOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetMainCoopConfidenceOp_default_instance_);_AddCoopPointSavePointListOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddCoopPointSavePointListOp_default_instance_);_SetClimateAreaTypeOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetClimateAreaTypeOp_default_instance_);_ProcSceneTagOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ProcSceneTagOp_default_instance_);_SetFinishedParentQuestChildStateOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetFinishedParentQuestChildStateOp_default_instance_);_ChangeMapAreaInfoOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChangeMapAreaInfoOp_default_instance_);_SetLevel1AreaExplorePointOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetLevel1AreaExplorePointOp_default_instance_);_SetCodexOpenOrCloseOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetCodexOpenOrCloseOp_default_instance_);_GroupLinkOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GroupLinkOp_default_instance_);_SetWatcherCompRecordValueOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetWatcherCompRecordValueOp_default_instance_);_AddFriendOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddFriendOp_default_instance_);_DelFriendOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DelFriendOp_default_instance_);_AddFriendAskOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddFriendAskOp_default_instance_);_DelFriendAskOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DelFriendAskOp_default_instance_);_BanCustomDungeonOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BanCustomDungeonOp_default_instance_);_RemoveInvalidMapMarksOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RemoveInvalidMapMarksOp_default_instance_);_RecalculateAreaExplorePointOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RecalculateAreaExplorePointOp_default_instance_);_NicknameAuditResultOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_NicknameAuditResultOp_default_instance_);_SignatureAuditResultOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SignatureAuditResultOp_default_instance_);_PassHomeSceneArrangementAuditOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PassHomeSceneArrangementAuditOp_default_instance_);_FailHomeSceneArrangementAuditOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FailHomeSceneArrangementAuditOp_default_instance_);_FailHomeModulesArrangementAuditOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FailHomeModulesArrangementAuditOp_default_instance_);_BanUgcPublishOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BanUgcPublishOp_default_instance_);_ResetPlayerPersistentDungeonOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ResetPlayerPersistentDungeonOp_default_instance_);_ResetPlayerPosInPersistentDungeonOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ResetPlayerPosInPersistentDungeonOp_default_instance_);_LevelTagChangeOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LevelTagChangeOp_default_instance_);_ResetPlayerWayPointInPersistentDungeonOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ResetPlayerWayPointInPersistentDungeonOp_default_instance_);_ExhibitionSetOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ExhibitionSetOp_default_instance_);_SetAvatarExtraPropOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetAvatarExtraPropOp_default_instance_);_AddItemWithLimitOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddItemWithLimitOp_default_instance_);_SetGadgetChainLevelOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetGadgetChainLevelOp_default_instance_);_SetDailyTaskVarOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetDailyTaskVarOp_default_instance_);_AvatarRenameAuditResultOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarRenameAuditResultOp_default_instance_);_ResetAvatarRenameOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ResetAvatarRenameOp_default_instance_);_AddFinishedTalkOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddFinishedTalkOp_default_instance_);_DelFinishedTalkOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DelFinishedTalkOp_default_instance_);_SetPlayerGCGMatchScoreOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPlayerGCGMatchScoreOp_default_instance_);_SetPushTipsStateOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPushTipsStateOp_default_instance_);_DeletePlayerGCGCardOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DeletePlayerGCGCardOp_default_instance_);_DeletePlayerGCGCardFaceOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DeletePlayerGCGCardFaceOp_default_instance_);_DeletePlayerGCGCardBackOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DeletePlayerGCGCardBackOp_default_instance_);_DeletePlayerGCGDeckFieldOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DeletePlayerGCGDeckFieldOp_default_instance_);_BanPlayerGCGMatchOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BanPlayerGCGMatchOp_default_instance_);_BanPlayerGCGPVPOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BanPlayerGCGPVPOp_default_instance_);_OfflineMsgBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OfflineMsgBin_default_instance_);_HomeTestOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeTestOp_default_instance_);_HomeRestoreDefaultsArrangementOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeRestoreDefaultsArrangementOp_default_instance_);_HomeRestoreDefaultsSceneArrangementOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeRestoreDefaultsSceneArrangementOp_default_instance_);_HomeOfflineMsgBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeOfflineMsgBin_default_instance_);_GroupVariableBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GroupVariableBin_default_instance_);_GroupVariableConfigIdBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GroupVariableConfigIdBin_default_instance_);_GroupProductBin_GadgetOneOffMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GroupProductBin_GadgetOneOffMapEntry_default_instance_);_GroupProductBin_MonsterOneOffMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GroupProductBin_MonsterOneOffMapEntry_default_instance_);_GroupProductBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GroupProductBin_default_instance_);_InteractGadget_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_InteractGadget_default_instance_);_AreaBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AreaBin_default_instance_);_CityBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CityBin_default_instance_);_ScenePlayerLocationBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ScenePlayerLocationBin_default_instance_);_EnvZoneInfoBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnvZoneInfoBin_default_instance_);_SceneEnvAnimalCompBin_ZoneInfoMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneEnvAnimalCompBin_ZoneInfoMapEntry_default_instance_);_SceneEnvAnimalCompBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneEnvAnimalCompBin_default_instance_);_SceneWeatherInfoBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneWeatherInfoBin_default_instance_);_SceneClimateAreaInfoBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneClimateAreaInfoBin_default_instance_);_SceneAllWeatherInfoBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneAllWeatherInfoBin_default_instance_);_BackupGroupBin_VariableMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BackupGroupBin_VariableMapEntry_default_instance_);_BackupGroupBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BackupGroupBin_default_instance_);_SceneBlockGroupCompBin_BackupGroupMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneBlockGroupCompBin_BackupGroupMapEntry_default_instance_);_SceneBlockGroupCompBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneBlockGroupCompBin_default_instance_);_SceneAreaCompBin_AreaMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneAreaCompBin_AreaMapEntry_default_instance_);_SceneAreaCompBin_CityMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneAreaCompBin_CityMapEntry_default_instance_);_SceneAreaCompBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneAreaCompBin_default_instance_);_SceneEncounterCompBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneEncounterCompBin_default_instance_);_ActivitySceneBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivitySceneBin_default_instance_);_SceneVehicleBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneVehicleBin_default_instance_);_SceneTagOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneTagOp_default_instance_);_WayPoint_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WayPoint_default_instance_);_DungeonSceneBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DungeonSceneBin_default_instance_);_SceneBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneBin_default_instance_);_GCGSettleData_UidMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GCGSettleData_UidMapEntry_default_instance_);_GCGSettleData_ChallengeProgressMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GCGSettleData_ChallengeProgressMapEntry_default_instance_);_GCGSettleData_ScoreMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GCGSettleData_ScoreMapEntry_default_instance_);_GCGSettleData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GCGSettleData_default_instance_);_OfflineOpTestOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OfflineOpTestOp_default_instance_);_OfflineOpFurnitureMakeHelp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OfflineOpFurnitureMakeHelp_default_instance_);_OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry_default_instance_);_OfflineOpPlantFlowerActivityGiveFlower_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OfflineOpPlantFlowerActivityGiveFlower_default_instance_);_OfflineOpWinterCampActivityGiveItem_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OfflineOpWinterCampActivityGiveItem_default_instance_);_OfflineOpGCGSettle_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OfflineOpGCGSettle_default_instance_);_OfflineOpActivityGiveGift_GiftNumMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OfflineOpActivityGiveGift_GiftNumMapEntry_default_instance_);_OfflineOpActivityGiveGift_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OfflineOpActivityGiveGift_default_instance_);_OfflineOpVintageActivityDividend_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OfflineOpVintageActivityDividend_default_instance_);_OfflineOpBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OfflineOpBin_default_instance_);_FurnitureMakeSlotsBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FurnitureMakeSlotsBin_default_instance_);_ProfilePictureBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ProfilePictureBin_default_instance_);_CustomDungeonSettingBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CustomDungeonSettingBin_default_instance_);_CustomDungeonAbstractBin_BrickStatisticsMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CustomDungeonAbstractBin_BrickStatisticsMapEntry_default_instance_);_CustomDungeonAbstractBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CustomDungeonAbstractBin_default_instance_);_WeaponBin_AffixMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_WeaponBin_AffixMapEntry_default_instance_._instance.get_mutable());
  _WeaponBin_AffixMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _PlayerGotoOp_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::VectorBin*>(
      ::proto::VectorBin::internal_default_instance());
  _AddItemOp_default_instance_.reliquary_ = const_cast< ::proto::ReliquaryBin*>(
      ::proto::ReliquaryBin::internal_default_instance());
  _AddItemOp_default_instance_.weapon_ = const_cast< ::proto::WeaponBin*>(
      ::proto::WeaponBin::internal_default_instance());
  _ModifyBornPosOp_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::VectorBin*>(
      ::proto::VectorBin::internal_default_instance());
  _SetQuestContentProgressOp_FinishProgressMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_SetQuestContentProgressOp_FinishProgressMapEntry_default_instance_._instance.get_mutable());
  _SetQuestContentProgressOp_FinishProgressMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _SetQuestContentProgressOp_FailProgressMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_SetQuestContentProgressOp_FailProgressMapEntry_default_instance_._instance.get_mutable());
  _SetQuestContentProgressOp_FailProgressMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _SetWatcherCompRecordValueOp_default_instance_.max_critical_damage_ = 0;
  _SetWatcherCompRecordValueOp_default_instance_.max_fly_map_distance_ = 0;
  _SetWatcherCompRecordValueOp_default_instance_.max_fly_time_ = 0;
  _SetWatcherCompRecordValueOp_default_instance_.max_dash_time_ = 0;
  _RemoveInvalidMapMarksOp_default_instance_._instance.get_mutable()->x_range_ = const_cast< ::proto::FloatPairBin*>(
      ::proto::FloatPairBin::internal_default_instance());
  _RemoveInvalidMapMarksOp_default_instance_._instance.get_mutable()->z_range_ = const_cast< ::proto::FloatPairBin*>(
      ::proto::FloatPairBin::internal_default_instance());
  _ExhibitionSetOp_default_instance_.accumulable_val_ = 0u;
  _ExhibitionSetOp_default_instance_.replaceable_val_ = 0u;
  _AddItemWithLimitOp_default_instance_._instance.get_mutable()->add_item_op_ = const_cast< ::proto::AddItemOp*>(
      ::proto::AddItemOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.del_item_op_ = const_cast< ::proto::DelItemOp*>(
      ::proto::DelItemOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.goto_op_ = const_cast< ::proto::PlayerGotoOp*>(
      ::proto::PlayerGotoOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.reset_parent_quest_op_ = const_cast< ::proto::ResetParentQuestOp*>(
      ::proto::ResetParentQuestOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.refresh_group_op_ = const_cast< ::proto::RefreshGroupOp*>(
      ::proto::RefreshGroupOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.set_scene_point_lock_status_op_ = const_cast< ::proto::SetScenePointLockStatusOp*>(
      ::proto::SetScenePointLockStatusOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.set_nick_name_op_ = const_cast< ::proto::SetPlayerNickNameOp*>(
      ::proto::SetPlayerNickNameOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.refresh_shop_op_ = const_cast< ::proto::RefreshShopOp*>(
      ::proto::RefreshShopOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.unlock_talent_op_ = const_cast< ::proto::UnlockTalentOp*>(
      ::proto::UnlockTalentOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.take_off_equip_op_ = const_cast< ::proto::TakeOffEquipOp*>(
      ::proto::TakeOffEquipOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.del_mail_op_ = const_cast< ::proto::DelMailOp*>(
      ::proto::DelMailOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.finish_daily_task_op_ = const_cast< ::proto::FinishDailyTaskOp*>(
      ::proto::FinishDailyTaskOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.unlock_area_op_ = const_cast< ::proto::UnlockAreaOp*>(
      ::proto::UnlockAreaOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.del_item_negative_op_ = const_cast< ::proto::DelItemNegativeOp*>(
      ::proto::DelItemNegativeOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.del_equip_op_ = const_cast< ::proto::DelEquipOp*>(
      ::proto::DelEquipOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.add_item_op_ = const_cast< ::proto::AddItemOp*>(
      ::proto::AddItemOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.modify_born_pos_op_ = const_cast< ::proto::ModifyBornPosOp*>(
      ::proto::ModifyBornPosOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.sub_coin_negative_op_ = const_cast< ::proto::SubCoinNegativeOp*>(
      ::proto::SubCoinNegativeOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.set_quest_content_progress_op_ = const_cast< ::proto::SetQuestContentProgressOp*>(
      ::proto::SetQuestContentProgressOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.finish_order_op_ = const_cast< ::proto::FinishOrderOp*>(
      ::proto::FinishOrderOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.add_or_modify_watcher_op_ = const_cast< ::proto::AddOrModifyWatcherOp*>(
      ::proto::AddOrModifyWatcherOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.del_watcher_op_ = const_cast< ::proto::DelWatcherOp*>(
      ::proto::DelWatcherOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.set_signature_op_ = const_cast< ::proto::SetSignatureOp*>(
      ::proto::SetSignatureOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.add_or_sub_resin_op_ = const_cast< ::proto::AddOrSubResinOp*>(
      ::proto::AddOrSubResinOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.set_quest_global_var_value_op_ = const_cast< ::proto::SetQuestGlobalVarValueOp*>(
      ::proto::SetQuestGlobalVarValueOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.add_mcoin_op_ = const_cast< ::proto::AddMcoinVipPointOp*>(
      ::proto::AddMcoinVipPointOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.group_bin_op_ = const_cast< ::proto::GroupBinOp*>(
      ::proto::GroupBinOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.del_one_off_op_ = const_cast< ::proto::DelOneOffOp*>(
      ::proto::DelOneOffOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.finish_routine_op_ = const_cast< ::proto::FinishRoutineOp*>(
      ::proto::FinishRoutineOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.finish_daily_task_group_op_ = const_cast< ::proto::FinishDailyTaskUnloadGroupOp*>(
      ::proto::FinishDailyTaskUnloadGroupOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.refresh_blossom_circle_camp_op_ = const_cast< ::proto::RefreshBlossomCircleCampOp*>(
      ::proto::RefreshBlossomCircleCampOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.blessing_give_pic_op_ = const_cast< ::proto::BlessingActivityGivePicOp*>(
      ::proto::BlessingActivityGivePicOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.expedition_assist_op_ = const_cast< ::proto::ExpeditionActivityAssistOp*>(
      ::proto::ExpeditionActivityAssistOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.recover_world_level_op_ = const_cast< ::proto::RecoverWorldLevelOp*>(
      ::proto::RecoverWorldLevelOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.force_accept_quest_op_ = const_cast< ::proto::ForceAcceptQuestOp*>(
      ::proto::ForceAcceptQuestOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.set_main_coop_confidence_op_ = const_cast< ::proto::SetMainCoopConfidenceOp*>(
      ::proto::SetMainCoopConfidenceOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.add_coop_point_save_point_list_op_ = const_cast< ::proto::AddCoopPointSavePointListOp*>(
      ::proto::AddCoopPointSavePointListOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.add_region_search_progress_op_ = const_cast< ::proto::AddRegionSearchProgressOp*>(
      ::proto::AddRegionSearchProgressOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.set_match_punish_times_op_ = const_cast< ::proto::SetMatchPunishTimesOp*>(
      ::proto::SetMatchPunishTimesOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.reset_channeller_slab_camp_group_op_ = const_cast< ::proto::ResetChannellerSlabCampGroupOp*>(
      ::proto::ResetChannellerSlabCampGroupOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.proc_scene_tag_op_ = const_cast< ::proto::ProcSceneTagOp*>(
      ::proto::ProcSceneTagOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.set_climate_area_type_op_ = const_cast< ::proto::SetClimateAreaTypeOp*>(
      ::proto::SetClimateAreaTypeOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.exchange_mcoin_op_ = const_cast< ::proto::ExchangeMcoinOp*>(
      ::proto::ExchangeMcoinOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.set_finished_parent_quest_child_state_op_ = const_cast< ::proto::SetFinishedParentQuestChildStateOp*>(
      ::proto::SetFinishedParentQuestChildStateOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.set_level1_area_explore_point_op_ = const_cast< ::proto::SetLevel1AreaExplorePointOp*>(
      ::proto::SetLevel1AreaExplorePointOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.set_codex_open_or_close_op_ = const_cast< ::proto::SetCodexOpenOrCloseOp*>(
      ::proto::SetCodexOpenOrCloseOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.change_map_area_info_op_ = const_cast< ::proto::ChangeMapAreaInfoOp*>(
      ::proto::ChangeMapAreaInfoOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.group_link_op_ = const_cast< ::proto::GroupLinkOp*>(
      ::proto::GroupLinkOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.set_watcher_comp_record_value_op_ = const_cast< ::proto::SetWatcherCompRecordValueOp*>(
      ::proto::SetWatcherCompRecordValueOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.add_friend_op_ = const_cast< ::proto::AddFriendOp*>(
      ::proto::AddFriendOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.del_friend_op_ = const_cast< ::proto::DelFriendOp*>(
      ::proto::DelFriendOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.add_friend_ask_op_ = const_cast< ::proto::AddFriendAskOp*>(
      ::proto::AddFriendAskOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.del_friend_ask_op_ = const_cast< ::proto::DelFriendAskOp*>(
      ::proto::DelFriendAskOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.ban_custom_dungeon_op_ = const_cast< ::proto::BanCustomDungeonOp*>(
      ::proto::BanCustomDungeonOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.remove_invalid_map_marks_op_ = const_cast< ::proto::RemoveInvalidMapMarksOp*>(
      ::proto::RemoveInvalidMapMarksOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.recalculate_area_explore_point_op_ = const_cast< ::proto::RecalculateAreaExplorePointOp*>(
      ::proto::RecalculateAreaExplorePointOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.nickname_audit_result_op_ = const_cast< ::proto::NicknameAuditResultOp*>(
      ::proto::NicknameAuditResultOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.signature_audit_result_op_ = const_cast< ::proto::SignatureAuditResultOp*>(
      ::proto::SignatureAuditResultOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.pass_home_scene_arrangement_audit_op_ = const_cast< ::proto::PassHomeSceneArrangementAuditOp*>(
      ::proto::PassHomeSceneArrangementAuditOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.fail_home_scene_arrangement_audit_op_ = const_cast< ::proto::FailHomeSceneArrangementAuditOp*>(
      ::proto::FailHomeSceneArrangementAuditOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.fail_home_modules_arrangement_audit_op_ = const_cast< ::proto::FailHomeModulesArrangementAuditOp*>(
      ::proto::FailHomeModulesArrangementAuditOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.ban_ugc_publish_op_ = const_cast< ::proto::BanUgcPublishOp*>(
      ::proto::BanUgcPublishOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.reset_player_persistent_dungeon_op_ = const_cast< ::proto::ResetPlayerPersistentDungeonOp*>(
      ::proto::ResetPlayerPersistentDungeonOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.reset_player_pos_in_persistent_dungeon_op_ = const_cast< ::proto::ResetPlayerPosInPersistentDungeonOp*>(
      ::proto::ResetPlayerPosInPersistentDungeonOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.level_tag_change_op_ = const_cast< ::proto::LevelTagChangeOp*>(
      ::proto::LevelTagChangeOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.reset_player_way_point_in_persistent_dungeon_op_ = const_cast< ::proto::ResetPlayerWayPointInPersistentDungeonOp*>(
      ::proto::ResetPlayerWayPointInPersistentDungeonOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.exhibition_set_op_ = const_cast< ::proto::ExhibitionSetOp*>(
      ::proto::ExhibitionSetOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.set_avatar_extra_prop_op_ = const_cast< ::proto::SetAvatarExtraPropOp*>(
      ::proto::SetAvatarExtraPropOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.add_item_with_limit_op_ = const_cast< ::proto::AddItemWithLimitOp*>(
      ::proto::AddItemWithLimitOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.set_gadget_chain_level_op_ = const_cast< ::proto::SetGadgetChainLevelOp*>(
      ::proto::SetGadgetChainLevelOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.set_daily_task_var_op_ = const_cast< ::proto::SetDailyTaskVarOp*>(
      ::proto::SetDailyTaskVarOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.avatar_rename_audit_result_op_ = const_cast< ::proto::AvatarRenameAuditResultOp*>(
      ::proto::AvatarRenameAuditResultOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.reset_avatar_rename_op_ = const_cast< ::proto::ResetAvatarRenameOp*>(
      ::proto::ResetAvatarRenameOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.add_finished_talk_op_ = const_cast< ::proto::AddFinishedTalkOp*>(
      ::proto::AddFinishedTalkOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.del_finished_talk_op_ = const_cast< ::proto::DelFinishedTalkOp*>(
      ::proto::DelFinishedTalkOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.set_player_gcg_match_score_op_ = const_cast< ::proto::SetPlayerGCGMatchScoreOp*>(
      ::proto::SetPlayerGCGMatchScoreOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.set_push_tips_state_op_ = const_cast< ::proto::SetPushTipsStateOp*>(
      ::proto::SetPushTipsStateOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.delete_player_gcg_card_op_ = const_cast< ::proto::DeletePlayerGCGCardOp*>(
      ::proto::DeletePlayerGCGCardOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.delete_player_gcg_card_face_op_ = const_cast< ::proto::DeletePlayerGCGCardFaceOp*>(
      ::proto::DeletePlayerGCGCardFaceOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.delete_player_gcg_card_back_op_ = const_cast< ::proto::DeletePlayerGCGCardBackOp*>(
      ::proto::DeletePlayerGCGCardBackOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.delete_player_gcg_deck_field_op_ = const_cast< ::proto::DeletePlayerGCGDeckFieldOp*>(
      ::proto::DeletePlayerGCGDeckFieldOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.ban_player_gcg_match_op_ = const_cast< ::proto::BanPlayerGCGMatchOp*>(
      ::proto::BanPlayerGCGMatchOp::internal_default_instance());
  _OfflineMsgBin_default_instance_.ban_player_gcg_pvp_op_ = const_cast< ::proto::BanPlayerGCGPVPOp*>(
      ::proto::BanPlayerGCGPVPOp::internal_default_instance());
  _HomeOfflineMsgBin_default_instance_.test_op_ = const_cast< ::proto::HomeTestOp*>(
      ::proto::HomeTestOp::internal_default_instance());
  _HomeOfflineMsgBin_default_instance_.restore_defaults_arrangement_op_ = const_cast< ::proto::HomeRestoreDefaultsArrangementOp*>(
      ::proto::HomeRestoreDefaultsArrangementOp::internal_default_instance());
  _HomeOfflineMsgBin_default_instance_.restore_defaults_scene_arrangement_op_ = const_cast< ::proto::HomeRestoreDefaultsSceneArrangementOp*>(
      ::proto::HomeRestoreDefaultsSceneArrangementOp::internal_default_instance());
  _GroupProductBin_GadgetOneOffMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_GroupProductBin_GadgetOneOffMapEntry_default_instance_._instance.get_mutable());
  _GroupProductBin_GadgetOneOffMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _GroupProductBin_MonsterOneOffMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_GroupProductBin_MonsterOneOffMapEntry_default_instance_._instance.get_mutable());
  _GroupProductBin_MonsterOneOffMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _ScenePlayerLocationBin_default_instance_._instance.get_mutable()->cur_pos_ = const_cast< ::proto::VectorBin*>(
      ::proto::VectorBin::internal_default_instance());
  _ScenePlayerLocationBin_default_instance_._instance.get_mutable()->cur_rot_ = const_cast< ::proto::VectorBin*>(
      ::proto::VectorBin::internal_default_instance());
  _ScenePlayerLocationBin_default_instance_._instance.get_mutable()->last_valid_pos_ = const_cast< ::proto::VectorBin*>(
      ::proto::VectorBin::internal_default_instance());
  _ScenePlayerLocationBin_default_instance_._instance.get_mutable()->last_valid_rot_ = const_cast< ::proto::VectorBin*>(
      ::proto::VectorBin::internal_default_instance());
  _SceneEnvAnimalCompBin_ZoneInfoMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_SceneEnvAnimalCompBin_ZoneInfoMapEntry_default_instance_._instance.get_mutable());
  _SceneEnvAnimalCompBin_ZoneInfoMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _BackupGroupBin_VariableMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_BackupGroupBin_VariableMapEntry_default_instance_._instance.get_mutable());
  _BackupGroupBin_VariableMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _SceneBlockGroupCompBin_BackupGroupMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_SceneBlockGroupCompBin_BackupGroupMapEntry_default_instance_._instance.get_mutable());
  _SceneBlockGroupCompBin_BackupGroupMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _SceneAreaCompBin_AreaMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_SceneAreaCompBin_AreaMapEntry_default_instance_._instance.get_mutable());
  _SceneAreaCompBin_AreaMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _SceneAreaCompBin_CityMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_SceneAreaCompBin_CityMapEntry_default_instance_._instance.get_mutable());
  _SceneAreaCompBin_CityMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _SceneVehicleBin_default_instance_._instance.get_mutable()->cur_pos_ = const_cast< ::proto::VectorBin*>(
      ::proto::VectorBin::internal_default_instance());
  _SceneVehicleBin_default_instance_._instance.get_mutable()->cur_rot_ = const_cast< ::proto::VectorBin*>(
      ::proto::VectorBin::internal_default_instance());
  _SceneBin_default_instance_._instance.get_mutable()->all_weather_info_ = const_cast< ::proto::SceneAllWeatherInfoBin*>(
      ::proto::SceneAllWeatherInfoBin::internal_default_instance());
  _SceneBin_default_instance_._instance.get_mutable()->owner_player_location_ = const_cast< ::proto::ScenePlayerLocationBin*>(
      ::proto::ScenePlayerLocationBin::internal_default_instance());
  _SceneBin_default_instance_._instance.get_mutable()->block_group_bin_ = const_cast< ::proto::SceneBlockGroupCompBin*>(
      ::proto::SceneBlockGroupCompBin::internal_default_instance());
  _SceneBin_default_instance_._instance.get_mutable()->env_animal_bin_ = const_cast< ::proto::SceneEnvAnimalCompBin*>(
      ::proto::SceneEnvAnimalCompBin::internal_default_instance());
  _SceneBin_default_instance_._instance.get_mutable()->area_comp_bin_ = const_cast< ::proto::SceneAreaCompBin*>(
      ::proto::SceneAreaCompBin::internal_default_instance());
  _SceneBin_default_instance_._instance.get_mutable()->encounter_comp_bin_ = const_cast< ::proto::SceneEncounterCompBin*>(
      ::proto::SceneEncounterCompBin::internal_default_instance());
  _SceneBin_default_instance_.activity_scene_bin_ = const_cast< ::proto::ActivitySceneBin*>(
      ::proto::ActivitySceneBin::internal_default_instance());
  _SceneBin_default_instance_.dungeon_scene_bin_ = const_cast< ::proto::DungeonSceneBin*>(
      ::proto::DungeonSceneBin::internal_default_instance());
  _GCGSettleData_UidMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_GCGSettleData_UidMapEntry_default_instance_._instance.get_mutable());
  _GCGSettleData_UidMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _GCGSettleData_ChallengeProgressMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_GCGSettleData_ChallengeProgressMapEntry_default_instance_._instance.get_mutable());
  _GCGSettleData_ChallengeProgressMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _GCGSettleData_ScoreMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_GCGSettleData_ScoreMapEntry_default_instance_._instance.get_mutable());
  _GCGSettleData_ScoreMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _OfflineOpFurnitureMakeHelp_default_instance_._instance.get_mutable()->profile_picture_bin_ = const_cast< ::proto::ProfilePictureBin*>(
      ::proto::ProfilePictureBin::internal_default_instance());
  _OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry_default_instance_._instance.get_mutable());
  _OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _OfflineOpGCGSettle_default_instance_._instance.get_mutable()->settle_data_ = const_cast< ::proto::GCGSettleData*>(
      ::proto::GCGSettleData::internal_default_instance());
  _OfflineOpActivityGiveGift_GiftNumMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_OfflineOpActivityGiveGift_GiftNumMapEntry_default_instance_._instance.get_mutable());
  _OfflineOpActivityGiveGift_GiftNumMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _OfflineOpBin_default_instance_.test_op_ = const_cast< ::proto::OfflineOpTestOp*>(
      ::proto::OfflineOpTestOp::internal_default_instance());
  _OfflineOpBin_default_instance_.furniture_make_help_op_ = const_cast< ::proto::OfflineOpFurnitureMakeHelp*>(
      ::proto::OfflineOpFurnitureMakeHelp::internal_default_instance());
  _OfflineOpBin_default_instance_.plant_flower_give_flower_op_ = const_cast< ::proto::OfflineOpPlantFlowerActivityGiveFlower*>(
      ::proto::OfflineOpPlantFlowerActivityGiveFlower::internal_default_instance());
  _OfflineOpBin_default_instance_.winter_camp_give_item_op_ = const_cast< ::proto::OfflineOpWinterCampActivityGiveItem*>(
      ::proto::OfflineOpWinterCampActivityGiveItem::internal_default_instance());
  _OfflineOpBin_default_instance_.activity_give_gift_op_ = const_cast< ::proto::OfflineOpActivityGiveGift*>(
      ::proto::OfflineOpActivityGiveGift::internal_default_instance());
  _OfflineOpBin_default_instance_.vintage_dividend_op_ = const_cast< ::proto::OfflineOpVintageActivityDividend*>(
      ::proto::OfflineOpVintageActivityDividend::internal_default_instance());
  _OfflineOpBin_default_instance_.gcg_settle_op_ = const_cast< ::proto::OfflineOpGCGSettle*>(
      ::proto::OfflineOpGCGSettle::internal_default_instance());
  _CustomDungeonAbstractBin_BrickStatisticsMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_CustomDungeonAbstractBin_BrickStatisticsMapEntry_default_instance_._instance.get_mutable());
  _CustomDungeonAbstractBin_BrickStatisticsMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n#server_only/bin_common.server.proto\022\005p"
      "roto\032\014define.proto\",\n\tVectorBin\022\t\n\001x\030\001 \001"
      "(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"+\n\rUint32PairBi"
      "n\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r\"2\n\024Uint32T"
      "oInt32PairBin\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001("
      "\005\"-\n\014FloatPairBin\022\r\n\005first\030\001 \001(\002\022\016\n\006seco"
      "nd\030\002 \001(\002\"!\n\nUint32List\022\023\n\013uint32_list\030\001 "
      "\003(\r\"\037\n\tInt32List\022\022\n\nint32_list\030\001 \003(\005\"]\n\014"
      "ReliquaryBin\022\r\n\005level\030\001 \001(\r\022\013\n\003exp\030\002 \001(\r"
      "\022\024\n\014main_prop_id\030\004 \001(\r\022\033\n\023append_prop_id"
      "_list\030\005 \003(\r\"\242\001\n\tWeaponBin\022\r\n\005level\030\001 \001(\r"
      "\022\013\n\003exp\030\002 \001(\r\022\025\n\rpromote_level\030\003 \001(\r\0221\n\t"
      "affix_map\030\004 \003(\0132\036.proto.WeaponBin.AffixM"
      "apEntry\032/\n\rAffixMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n"
      "\005value\030\002 \001(\r:\0028\001\"T\n\014ItemParamBin\022\017\n\007item"
      "_id\030\001 \001(\r\022\r\n\005count\030\002 \001(\r\022\r\n\005level\030\003 \001(\r\022"
      "\025\n\rpromote_level\030\004 \001(\r\"\264\002\n\007MailBin\022\r\n\005ti"
      "tle\030\001 \001(\t\022\017\n\007content\030\002 \001(\t\022\016\n\006sender\030\003 \001"
      "(\t\022,\n\017item_param_list\030\004 \003(\0132\023.proto.Item"
      "ParamBin\022\021\n\tsend_time\030\005 \001(\007\022\023\n\013expire_ti"
      "me\030\006 \001(\007\022\022\n\nimportance\030\007 \001(\r\022\021\n\tconfig_i"
      "d\030\010 \001(\r\022\025\n\rargument_list\030\t \003(\t\022\027\n\017item_l"
      "imit_type\030\n \001(\r\022\023\n\013source_type\030\013 \001(\r\022\013\n\003"
      "tag\030\014 \001(\t\022\023\n\013reason_type\030\r \001(\r\022\025\n\rcollec"
      "t_state\030\016 \001(\r\".\n\tDelItemOp\022\017\n\007item_id\030\001 "
      "\001(\r\022\020\n\010item_num\030\002 \001(\r\"J\n\021DelItemNegative"
      "Op\022\017\n\007item_id\030\001 \001(\r\022\020\n\010item_num\030\002 \001(\r\022\022\n"
      "\nremain_num\030\003 \001(\r\"\032\n\nDelEquipOp\022\014\n\004guid\030"
      "\001 \001(\004\"\?\n\014PlayerGotoOp\022\020\n\010scene_id\030\001 \001(\r\022"
      "\035\n\003pos\030\002 \001(\0132\020.proto.VectorBin\"-\n\022ResetP"
      "arentQuestOp\022\027\n\017parent_quest_id\030\003 \001(\r\"F\n"
      "\016RefreshGroupOp\022\020\n\010group_id\030\001 \001(\r\022\020\n\010sui"
      "te_id\030\002 \001(\r\022\020\n\010scene_id\030\003 \001(\r\"R\n\031SetScen"
      "ePointLockStatusOp\022\020\n\010scene_id\030\001 \001(\r\022\020\n\010"
      "point_id\030\002 \001(\r\022\021\n\tis_locked\030\003 \001(\010\"(\n\023Set"
      "PlayerNickNameOp\022\021\n\tnick_name\030\001 \001(\t\"\017\n\rR"
      "efreshShopOp\"N\n\016UnlockTalentOp\022\021\n\tavatar"
      "_id\030\001 \001(\r\022\026\n\016skill_depot_id\030\002 \001(\r\022\021\n\ttal"
      "ent_id\030\003 \001(\r\"7\n\016TakeOffEquipOp\022\021\n\tavatar"
      "_id\030\001 \001(\r\022\022\n\nequip_type\030\002 \001(\r\"!\n\tDelMail"
      "Op\022\024\n\014mail_id_list\030\001 \003(\r\"\037\n\014UnlockAreaOp"
      "\022\017\n\007area_id\030\001 \001(\r\">\n\021FinishDailyTaskOp\022\025"
      "\n\rdaily_task_id\030\001 \001(\r\022\022\n\ndaily_time\030\002 \001("
      "\r\"\210\001\n\tAddItemOp\022\017\n\007item_id\030\001 \001(\r\022\022\n\nitem"
      "_count\030\002 \001(\r\022(\n\treliquary\030e \001(\0132\023.proto."
      "ReliquaryBinH\000\022\"\n\006weapon\030f \001(\0132\020.proto.W"
      "eaponBinH\000B\010\n\006detail\"B\n\017ModifyBornPosOp\022"
      "\020\n\010scene_id\030\001 \001(\r\022\035\n\003pos\030\002 \001(\0132\020.proto.V"
      "ectorBin\"\177\n\021SubCoinNegativeOp\022\r\n\005scoin\030\001"
      " \001(\r\022\r\n\005hcoin\030\002 \001(\r\022\r\n\005mcoin\030\003 \001(\r\022\021\n\tho"
      "me_coin\030\004 \001(\r\022*\n\rplatform_type\030\005 \001(\0162\023.p"
      "roto.PlatformType\"\307\002\n\031SetQuestContentPro"
      "gressOp\022\020\n\010quest_id\030\001 \001(\r\022T\n\023finish_prog"
      "ress_map\030\002 \003(\01327.proto.SetQuestContentPr"
      "ogressOp.FinishProgressMapEntry\022P\n\021fail_"
      "progress_map\030\003 \003(\01325.proto.SetQuestConte"
      "ntProgressOp.FailProgressMapEntry\0328\n\026Fin"
      "ishProgressMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005valu"
      "e\030\002 \001(\r:\0028\001\0326\n\024FailProgressMapEntry\022\013\n\003k"
      "ey\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\"!\n\rFinishOrd"
      "erOp\022\020\n\010order_id\030\001 \001(\r\"<\n\024AddOrModifyWat"
      "cherOp\022\022\n\nwatcher_id\030\001 \001(\r\022\020\n\010progress\030\002"
      " \001(\r\"\"\n\014DelWatcherOp\022\022\n\nwatcher_id\030\001 \001(\r"
      "\"#\n\016SetSignatureOp\022\021\n\tsignature\030\001 \001(\t\"6\n"
      "\017AddOrSubResinOp\022\023\n\013delta_count\030\001 \001(\r\022\016\n"
      "\006is_sub\030\002 \001(\010\"5\n\030SetQuestGlobalVarValueO"
      "p\022\n\n\002id\030\001 \001(\r\022\r\n\005value\030\002 \001(\005\"b\n\022AddMcoin"
      "VipPointOp\022\r\n\005mcoin\030\001 \001(\r\022\021\n\tvip_point\030\002"
      " \001(\r\022*\n\rplatform_type\030\003 \001(\0162\023.proto.Plat"
      "formType\"O\n\017ExchangeMcoinOp\022\013\n\003num\030\001 \001(\r"
      "\022/\n\rexchange_type\030\002 \001(\0162\030.proto.Exchange"
      "McoinType\"\222\002\n\nGroupBinOp\022)\n\007op_type\030\001 \001("
      "\0162\030.proto.GroupBinOperation\022\020\n\010group_id\030"
      "\002 \001(\r\022\021\n\tconfig_id\030\003 \001(\r\022\016\n\006is_add\030\004 \001(\010"
      "\022\r\n\005state\030\005 \001(\r\022\021\n\tis_create\030\006 \001(\010\022\024\n\014tr"
      "igger_name\030\007 \001(\t\022\025\n\rtrigger_count\030\010 \001(\r\022"
      "\025\n\rvariable_name\030\t \001(\t\022\026\n\016variable_value"
      "\030\n \001(\005\022\024\n\014target_suite\030\013 \001(\r\022\020\n\010scene_id"
      "\030\014 \001(\r\"X\n\013DelOneOffOp\022\020\n\010group_id\030\001 \001(\r\022"
      "\021\n\tconfig_id\030\002 \001(\r\022\022\n\nis_monster\030\003 \001(\010\022\020"
      "\n\010scene_id\030\004 \001(\r\"%\n\017FinishRoutineOp\022\022\n\nr"
      "outine_id\030\001 \001(\r\"I\n\034FinishDailyTaskUnload"
      "GroupOp\022\025\n\rdaily_task_id\030\001 \001(\r\022\022\n\ndaily_"
      "time\030\002 \001(\r\"H\n\032RefreshBlossomCircleCampOp"
      "\022\022\n\nrefresh_id\030\001 \001(\r\022\026\n\016circle_camp_id\030\002"
      " \001(\r\"S\n\031BlessingActivityGivePicOp\022\022\n\nsou"
      "rce_uid\030\001 \001(\r\022\022\n\ntarget_uid\030\002 \001(\r\022\016\n\006pic"
      "_id\030\003 \001(\r\"\231\001\n\032ExpeditionActivityAssistOp"
      "\022\021\n\tavatar_id\030\001 \001(\r\022\023\n\013assist_time\030\002 \001(\r"
      "\022\022\n\ntarget_uid\030\003 \001(\r\022\030\n\020target_nick_name"
      "\030\004 \001(\t\022\021\n\tonline_id\030\005 \001(\t\022\022\n\nassist_uid\030"
      "\006 \001(\r\"\025\n\023RecoverWorldLevelOp\"Y\n\031AddRegio"
      "nSearchProgressOp\022\021\n\tregion_id\030\001 \001(\r\022\023\n\013"
      "add_recycle\030\002 \001(\r\022\024\n\014add_progress\030\003 \001(\r\""
      "\?\n\025SetMatchPunishTimesOp\022\020\n\010match_id\030\001 \001"
      "(\r\022\024\n\014punish_times\030\002 \001(\r\"D\n\036ResetChannel"
      "lerSlabCampGroupOp\022\020\n\010stage_id\030\001 \001(\r\022\020\n\010"
      "round_id\030\002 \001(\r\"&\n\022ForceAcceptQuestOp\022\020\n\010"
      "quest_id\030\001 \001(\r\"-\n\027SetMainCoopConfidenceO"
      "p\022\022\n\nconfidence\030\001 \001(\r\"M\n\033AddCoopPointSav"
      "ePointListOp\022\025\n\rcoop_point_id\030\001 \001(\r\022\027\n\017s"
      "ave_point_list\030\002 \003(\r\"W\n\024SetClimateAreaTy"
      "peOp\022\020\n\010scene_id\030\001 \001(\r\022\027\n\017climate_area_i"
      "d\030\002 \001(\r\022\024\n\014climate_type\030\003 \001(\r\"`\n\016ProcSce"
      "neTagOp\022\020\n\010scene_id\030\001 \001(\r\022\024\n\014scene_tag_i"
      "d\030\002 \001(\r\022&\n\007op_type\030\003 \001(\0162\025.proto.SceneTa"
      "gOpType\"E\n\"SetFinishedParentQuestChildSt"
      "ateOp\022\020\n\010quest_id\030\001 \001(\r\022\r\n\005state\030\002 \001(\r\";"
      "\n\023ChangeMapAreaInfoOp\022\023\n\013map_area_id\030\001 \001"
      "(\r\022\017\n\007is_open\030\002 \001(\010\"^\n\033SetLevel1AreaExpl"
      "orePointOp\022\020\n\010scene_id\030\001 \001(\r\022\026\n\016level1_a"
      "rea_id\030\002 \001(\r\022\025\n\rexplore_point\030\003 \001(\r\"N\n\025S"
      "etCodexOpenOrCloseOp\022\022\n\ncodex_type\030\001 \001(\r"
      "\022\020\n\010codex_id\030\002 \001(\r\022\017\n\007is_open\030\003 \001(\010\"d\n\013G"
      "roupLinkOp\022\'\n\007op_type\030\001 \001(\0162\026.proto.Grou"
      "pLinkOpType\022\027\n\017group_bundle_id\030\002 \001(\r\022\023\n\013"
      "activity_id\030\003 \001(\r\"\201\002\n\033SetWatcherCompReco"
      "rdValueOp\022\035\n\023max_critical_damage\030\001 \001(\002H\000"
      "\022\036\n\024max_fly_map_distance\030\002 \001(\002H\001\022\026\n\014max_"
      "fly_time\030\003 \001(\002H\002\022\027\n\rmax_dash_time\030\004 \001(\002H"
      "\003B\036\n\034optional_max_critical_damageB\037\n\035opt"
      "ional_max_fly_map_distanceB\027\n\025optional_m"
      "ax_fly_timeB\030\n\026optional_max_dash_time\"!\n"
      "\013AddFriendOp\022\022\n\ntarget_uid\030\001 \001(\r\"!\n\013DelF"
      "riendOp\022\022\n\ntarget_uid\030\001 \001(\r\"$\n\016AddFriend"
      "AskOp\022\022\n\ntarget_uid\030\001 \001(\r\"$\n\016DelFriendAs"
      "kOp\022\022\n\ntarget_uid\030\001 \001(\r\"-\n\022BanCustomDung"
      "eonOp\022\027\n\017ban_expire_time\030\001 \001(\r\"w\n\027Remove"
      "InvalidMapMarksOp\022\020\n\010scene_id\030\001 \001(\r\022$\n\007x"
      "_range\030\002 \001(\0132\023.proto.FloatPairBin\022$\n\007z_r"
      "ange\030\003 \001(\0132\023.proto.FloatPairBin\"f\n\035Recal"
      "culateAreaExplorePointOp\022\017\n\007area_id\030\001 \001("
      "\r\022\017\n\007old_exp\030\002 \001(\r\022\022\n\nrecalc_exp\030\003 \001(\r\022\017"
      "\n\007new_exp\030\004 \001(\r\"8\n\025NicknameAuditResultOp"
      "\022\020\n\010nickname\030\001 \001(\t\022\r\n\005is_ok\030\002 \001(\010\":\n\026Sig"
      "natureAuditResultOp\022\021\n\tsignature\030\001 \001(\t\022\r"
      "\n\005is_ok\030\002 \001(\010\"W\n\037PassHomeSceneArrangemen"
      "tAuditOp\022\021\n\tmodule_id\030\001 \001(\r\022\020\n\010scene_id\030"
      "\002 \001(\r\022\017\n\007version\030\003 \001(\r\"W\n\037FailHomeSceneA"
      "rrangementAuditOp\022\021\n\tmodule_id\030\001 \001(\r\022\020\n\010"
      "scene_id\030\002 \001(\r\022\017\n\007version\030\003 \001(\r\"c\n!FailH"
      "omeModulesArrangementAuditOp\022\025\n\ris_all_m"
      "odule\030\001 \001(\010\022\026\n\016module_id_list\030\002 \003(\r\022\017\n\007v"
      "ersion\030\003 \001(\r\"2\n\017BanUgcPublishOp\022\037\n\027ban_p"
      "ublish_expire_time\030\001 \001(\r\"2\n\036ResetPlayerP"
      "ersistentDungeonOp\022\020\n\010scene_id\030\001 \001(\r\"7\n#"
      "ResetPlayerPosInPersistentDungeonOp\022\020\n\010s"
      "cene_id\030\001 \001(\r\"(\n\020LevelTagChangeOp\022\024\n\014lev"
      "el_tag_id\030\001 \001(\r\"R\n(ResetPlayerWayPointIn"
      "PersistentDungeonOp\022\020\n\010scene_id\030\001 \001(\r\022\024\n"
      "\014way_point_id\030\002 \001(\r\"\226\001\n\017ExhibitionSetOp\022"
      "\025\n\rexhibition_id\030\001 \001(\r\022\031\n\017accumulable_va"
      "l\030\002 \001(\rH\000\022\031\n\017replaceable_val\030\003 \001(\rH\001B\032\n\030"
      "optional_accumulable_valB\032\n\030optional_rep"
      "laceable_val\"Z\n\024SetAvatarExtraPropOp\022\021\n\t"
      "avatar_id\030\001 \001(\r\022\025\n\rextra_prop_id\030\002 \001(\r\022\030"
      "\n\020extra_prop_count\030\003 \001(\r\"S\n\022AddItemWithL"
      "imitOp\022%\n\013add_item_op\030\001 \001(\0132\020.proto.AddI"
      "temOp\022\026\n\016max_item_count\030\002 \001(\r\"J\n\025SetGadg"
      "etChainLevelOp\022\026\n\016gadgetchain_id\030\001 \001(\r\022\031"
      "\n\021gadgetchain_level\030\002 \001(\r\"B\n\021SetDailyTas"
      "kVarOp\022\017\n\007task_id\030\001 \001(\r\022\r\n\005index\030\002 \001(\r\022\r"
      "\n\005value\030\003 \001(\005\"i\n\031AvatarRenameAuditResult"
      "Op\022\021\n\trename_id\030\001 \001(\r\022\023\n\013target_name\030\002 \001"
      "(\t\022\017\n\007is_succ\030\003 \001(\010\022\023\n\013source_type\030\004 \001(\r"
      "\"8\n\023ResetAvatarRenameOp\022\021\n\tavatar_id\030\001 \001"
      "(\r\022\016\n\006reason\030\002 \001(\r\"$\n\021AddFinishedTalkOp\022"
      "\017\n\007talk_id\030\001 \001(\r\"$\n\021DelFinishedTalkOp\022\017\n"
      "\007talk_id\030\001 \001(\r\";\n\030SetPlayerGCGMatchScore"
      "Op\022\020\n\010match_id\030\001 \001(\r\022\r\n\005score\030\002 \001(\r\"C\n\022S"
      "etPushTipsStateOp\022\024\n\014push_tips_id\030\001 \001(\r\022"
      "\027\n\017push_tips_state\030\002 \001(\r\"9\n\025DeletePlayer"
      "GCGCardOp\022\017\n\007card_id\030\001 \001(\r\022\017\n\007del_num\030\002 "
      "\001(\r\"1\n\031DeletePlayerGCGCardFaceOp\022\024\n\014card"
      "_face_id\030\001 \001(\r\"1\n\031DeletePlayerGCGCardBac"
      "kOp\022\024\n\014card_back_id\030\001 \001(\r\"3\n\032DeletePlaye"
      "rGCGDeckFieldOp\022\025\n\rdeck_field_id\030\001 \001(\r\"*"
      "\n\023BanPlayerGCGMatchOp\022\023\n\013expire_time\030\001 \001"
      "(\r\"(\n\021BanPlayerGCGPVPOp\022\023\n\013expire_time\030\001"
      " \001(\r\"\301)\n\rOfflineMsgBin\022\022\n\nenque_time\030\001 \001"
      "(\007\022\016\n\006ticket\030\002 \001(\t\022\r\n\005index\030\003 \001(\r\022\'\n\013del"
      "_item_op\030\004 \001(\0132\020.proto.DelItemOpH\000\022&\n\007go"
      "to_op\030\005 \001(\0132\023.proto.PlayerGotoOpH\000\022:\n\025re"
      "set_parent_quest_op\030\006 \001(\0132\031.proto.ResetP"
      "arentQuestOpH\000\0221\n\020refresh_group_op\030\007 \001(\013"
      "2\025.proto.RefreshGroupOpH\000\022J\n\036set_scene_p"
      "oint_lock_status_op\030\010 \001(\0132 .proto.SetSce"
      "nePointLockStatusOpH\000\0226\n\020set_nick_name_o"
      "p\030\t \001(\0132\032.proto.SetPlayerNickNameOpH\000\022/\n"
      "\017refresh_shop_op\030\n \001(\0132\024.proto.RefreshSh"
      "opOpH\000\0221\n\020unlock_talent_op\030\013 \001(\0132\025.proto"
      ".UnlockTalentOpH\000\0222\n\021take_off_equip_op\030\014"
      " \001(\0132\025.proto.TakeOffEquipOpH\000\022\'\n\013del_mai"
      "l_op\030\r \001(\0132\020.proto.DelMailOpH\000\0228\n\024finish"
      "_daily_task_op\030\016 \001(\0132\030.proto.FinishDaily"
      "TaskOpH\000\022-\n\016unlock_area_op\030\017 \001(\0132\023.proto"
      ".UnlockAreaOpH\000\0228\n\024del_item_negative_op\030"
      "\020 \001(\0132\030.proto.DelItemNegativeOpH\000\022)\n\014del"
      "_equip_op\030\021 \001(\0132\021.proto.DelEquipOpH\000\022\'\n\013"
      "add_item_op\030\022 \001(\0132\020.proto.AddItemOpH\000\0224\n"
      "\022modify_born_pos_op\030\023 \001(\0132\026.proto.Modify"
      "BornPosOpH\000\0228\n\024sub_coin_negative_op\030\024 \001("
      "\0132\030.proto.SubCoinNegativeOpH\000\022I\n\035set_que"
      "st_content_progress_op\030\025 \001(\0132 .proto.Set"
      "QuestContentProgressOpH\000\022/\n\017finish_order"
      "_op\030\026 \001(\0132\024.proto.FinishOrderOpH\000\022\?\n\030add"
      "_or_modify_watcher_op\030\027 \001(\0132\033.proto.AddO"
      "rModifyWatcherOpH\000\022-\n\016del_watcher_op\030\030 \001"
      "(\0132\023.proto.DelWatcherOpH\000\0221\n\020set_signatu"
      "re_op\030\031 \001(\0132\025.proto.SetSignatureOpH\000\0225\n\023"
      "add_or_sub_resin_op\030\032 \001(\0132\026.proto.AddOrS"
      "ubResinOpH\000\022H\n\035set_quest_global_var_valu"
      "e_op\030\033 \001(\0132\037.proto.SetQuestGlobalVarValu"
      "eOpH\000\0221\n\014add_mcoin_op\030\034 \001(\0132\031.proto.AddM"
      "coinVipPointOpH\000\022)\n\014group_bin_op\030\035 \001(\0132\021"
      ".proto.GroupBinOpH\000\022,\n\016del_one_off_op\030\036 "
      "\001(\0132\022.proto.DelOneOffOpH\000\0223\n\021finish_rout"
      "ine_op\030\037 \001(\0132\026.proto.FinishRoutineOpH\000\022I"
      "\n\032finish_daily_task_group_op\030  \001(\0132#.pro"
      "to.FinishDailyTaskUnloadGroupOpH\000\022K\n\036ref"
      "resh_blossom_circle_camp_op\030! \001(\0132!.prot"
      "o.RefreshBlossomCircleCampOpH\000\022@\n\024blessi"
      "ng_give_pic_op\030\" \001(\0132 .proto.BlessingAct"
      "ivityGivePicOpH\000\022A\n\024expedition_assist_op"
      "\030# \001(\0132!.proto.ExpeditionActivityAssistO"
      "pH\000\022<\n\026recover_world_level_op\030$ \001(\0132\032.pr"
      "oto.RecoverWorldLevelOpH\000\022:\n\025force_accep"
      "t_quest_op\030% \001(\0132\031.proto.ForceAcceptQues"
      "tOpH\000\022E\n\033set_main_coop_confidence_op\030& \001"
      "(\0132\036.proto.SetMainCoopConfidenceOpH\000\022O\n!"
      "add_coop_point_save_point_list_op\030\' \001(\0132"
      "\".proto.AddCoopPointSavePointListOpH\000\022I\n"
      "\035add_region_search_progress_op\030( \001(\0132 .p"
      "roto.AddRegionSearchProgressOpH\000\022A\n\031set_"
      "match_punish_times_op\030) \001(\0132\034.proto.SetM"
      "atchPunishTimesOpH\000\022T\n#reset_channeller_"
      "slab_camp_group_op\030* \001(\0132%.proto.ResetCh"
      "annellerSlabCampGroupOpH\000\0222\n\021proc_scene_"
      "tag_op\030+ \001(\0132\025.proto.ProcSceneTagOpH\000\022\?\n"
      "\030set_climate_area_type_op\030, \001(\0132\033.proto."
      "SetClimateAreaTypeOpH\000\0223\n\021exchange_mcoin"
      "_op\030- \001(\0132\026.proto.ExchangeMcoinOpH\000\022]\n(s"
      "et_finished_parent_quest_child_state_op\030"
      ". \001(\0132).proto.SetFinishedParentQuestChil"
      "dStateOpH\000\022N\n set_level1_area_explore_po"
      "int_op\030/ \001(\0132\".proto.SetLevel1AreaExplor"
      "ePointOpH\000\022B\n\032set_codex_open_or_close_op"
      "\0300 \001(\0132\034.proto.SetCodexOpenOrCloseOpH\000\022="
      "\n\027change_map_area_info_op\0301 \001(\0132\032.proto."
      "ChangeMapAreaInfoOpH\000\022+\n\rgroup_link_op\0302"
      " \001(\0132\022.proto.GroupLinkOpH\000\022N\n set_watche"
      "r_comp_record_value_op\0303 \001(\0132\".proto.Set"
      "WatcherCompRecordValueOpH\000\022+\n\radd_friend"
      "_op\0304 \001(\0132\022.proto.AddFriendOpH\000\022+\n\rdel_f"
      "riend_op\0305 \001(\0132\022.proto.DelFriendOpH\000\0222\n\021"
      "add_friend_ask_op\0306 \001(\0132\025.proto.AddFrien"
      "dAskOpH\000\0222\n\021del_friend_ask_op\0307 \001(\0132\025.pr"
      "oto.DelFriendAskOpH\000\022:\n\025ban_custom_dunge"
      "on_op\0308 \001(\0132\031.proto.BanCustomDungeonOpH\000"
      "\022E\n\033remove_invalid_map_marks_op\0309 \001(\0132\036."
      "proto.RemoveInvalidMapMarksOpH\000\022Q\n!recal"
      "culate_area_explore_point_op\030: \001(\0132$.pro"
      "to.RecalculateAreaExplorePointOpH\000\022@\n\030ni"
      "ckname_audit_result_op\030; \001(\0132\034.proto.Nic"
      "knameAuditResultOpH\000\022B\n\031signature_audit_"
      "result_op\030< \001(\0132\035.proto.SignatureAuditRe"
      "sultOpH\000\022V\n$pass_home_scene_arrangement_"
      "audit_op\030= \001(\0132&.proto.PassHomeSceneArra"
      "ngementAuditOpH\000\022V\n$fail_home_scene_arra"
      "ngement_audit_op\030> \001(\0132&.proto.FailHomeS"
      "ceneArrangementAuditOpH\000\022Z\n&fail_home_mo"
      "dules_arrangement_audit_op\030\? \001(\0132(.proto"
      ".FailHomeModulesArrangementAuditOpH\000\0224\n\022"
      "ban_ugc_publish_op\030@ \001(\0132\026.proto.BanUgcP"
      "ublishOpH\000\022U\n\"reset_player_persistent_du"
      "ngeon_op\030\341\332\001 \001(\0132%.proto.ResetPlayerPers"
      "istentDungeonOpH\000\022a\n)reset_player_pos_in"
      "_persistent_dungeon_op\030\342\332\001 \001(\0132*.proto.R"
      "esetPlayerPosInPersistentDungeonOpH\000\0228\n\023"
      "level_tag_change_op\030\343\332\001 \001(\0132\027.proto.Leve"
      "lTagChangeOpH\000\022l\n/reset_player_way_point"
      "_in_persistent_dungeon_op\030\344\332\001 \001(\0132/.prot"
      "o.ResetPlayerWayPointInPersistentDungeon"
      "OpH\000\0225\n\021exhibition_set_op\030\260\352\001 \001(\0132\026.prot"
      "o.ExhibitionSetOpH\000\022A\n\030set_avatar_extra_"
      "prop_op\030\261\352\001 \001(\0132\033.proto.SetAvatarExtraPr"
      "opOpH\000\022=\n\026add_item_with_limit_op\030\262\352\001 \001(\013"
      "2\031.proto.AddItemWithLimitOpH\000\022C\n\031set_gad"
      "get_chain_level_op\030\231\362\001 \001(\0132\034.proto.SetGa"
      "dgetChainLevelOpH\000\022;\n\025set_daily_task_var"
      "_op\030\201\372\001 \001(\0132\030.proto.SetDailyTaskVarOpH\000\022"
      "K\n\035avatar_rename_audit_result_op\030\351\201\002 \001(\013"
      "2 .proto.AvatarRenameAuditResultOpH\000\022>\n\026"
      "reset_avatar_rename_op\030\352\201\002 \001(\0132\032.proto.R"
      "esetAvatarRenameOpH\000\022:\n\024add_finished_tal"
      "k_op\030\353\201\002 \001(\0132\030.proto.AddFinishedTalkOpH\000"
      "\022:\n\024del_finished_talk_op\030\354\201\002 \001(\0132\030.proto"
      ".DelFinishedTalkOpH\000\022J\n\035set_player_gcg_m"
      "atch_score_op\030\355\201\002 \001(\0132\037.proto.SetPlayerG"
      "CGMatchScoreOpH\000\022=\n\026set_push_tips_state_"
      "op\030\356\201\002 \001(\0132\031.proto.SetPushTipsStateOpH\000\022"
      "C\n\031delete_player_gcg_card_op\030\357\201\002 \001(\0132\034.p"
      "roto.DeletePlayerGCGCardOpH\000\022L\n\036delete_p"
      "layer_gcg_card_face_op\030\360\201\002 \001(\0132 .proto.D"
      "eletePlayerGCGCardFaceOpH\000\022L\n\036delete_pla"
      "yer_gcg_card_back_op\030\361\201\002 \001(\0132 .proto.Del"
      "etePlayerGCGCardBackOpH\000\022N\n\037delete_playe"
      "r_gcg_deck_field_op\030\362\201\002 \001(\0132!.proto.Dele"
      "tePlayerGCGDeckFieldOpH\000\022\?\n\027ban_player_g"
      "cg_match_op\030\363\201\002 \001(\0132\032.proto.BanPlayerGCG"
      "MatchOpH\000\022;\n\025ban_player_gcg_pvp_op\030\364\201\002 \001"
      "(\0132\030.proto.BanPlayerGCGPVPOpH\000B\010\n\006detail"
      "\"\031\n\nHomeTestOp\022\013\n\003val\030\001 \001(\r\"b\n HomeResto"
      "reDefaultsArrangementOp\022\025\n\ris_all_module"
      "\030\001 \001(\010\022\026\n\016module_id_list\030\002 \003(\r\022\017\n\007versio"
      "n\030\003 \001(\r\"]\n%HomeRestoreDefaultsSceneArran"
      "gementOp\022\021\n\tmodule_id\030\001 \001(\r\022\020\n\010scene_id\030"
      "\002 \001(\r\022\017\n\007version\030\003 \001(\r\"\251\002\n\021HomeOfflineMs"
      "gBin\022\022\n\nenque_time\030\001 \001(\007\022\016\n\006ticket\030\002 \001(\t"
      "\022\r\n\005index\030\003 \001(\r\022$\n\007test_op\030e \001(\0132\021.proto"
      ".HomeTestOpH\000\022R\n\037restore_defaults_arrang"
      "ement_op\030f \001(\0132\'.proto.HomeRestoreDefaul"
      "tsArrangementOpH\000\022]\n%restore_defaults_sc"
      "ene_arrangement_op\030g \001(\0132,.proto.HomeRes"
      "toreDefaultsSceneArrangementOpH\000B\010\n\006deta"
      "il\"!\n\020GroupVariableBin\022\r\n\005value\030\002 \001(\005\"<\n"
      "\030GroupVariableConfigIdBin\022\021\n\tconfig_id\030\001"
      " \001(\r\022\r\n\005value\030\002 \001(\005\"\226\002\n\017GroupProductBin\022"
      "G\n\022gadget_one_off_map\030\001 \003(\0132+.proto.Grou"
      "pProductBin.GadgetOneOffMapEntry\022I\n\023mons"
      "ter_one_off_map\030\002 \003(\0132,.proto.GroupProdu"
      "ctBin.MonsterOneOffMapEntry\0326\n\024GadgetOne"
      "OffMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:"
      "\0028\001\0327\n\025MonsterOneOffMapEntry\022\013\n\003key\030\001 \001("
      "\r\022\r\n\005value\030\002 \001(\r:\0028\001\"5\n\016InteractGadget\022\020"
      "\n\010group_id\030\001 \001(\r\022\021\n\tconfig_id\030\002 \001(\r\"\205\001\n\007"
      "AreaBin\022\023\n\013explore_num\030\001 \001(\r\022\025\n\rexplore_"
      "point\030\002 \001(\r\022\031\n\021unlock_point_list\030\003 \003(\r\0223"
      "\n\024interact_gadget_list\030\004 \003(\0132\025.proto.Int"
      "eractGadget\"-\n\007CityBin\022\r\n\005level\030\001 \001(\r\022\023\n"
      "\013crystal_num\030\002 \001(\r\"\262\001\n\026ScenePlayerLocati"
      "onBin\022!\n\007cur_pos\030\001 \001(\0132\020.proto.VectorBin"
      "\022!\n\007cur_rot\030\002 \001(\0132\020.proto.VectorBin\022(\n\016l"
      "ast_valid_pos\030\003 \001(\0132\020.proto.VectorBin\022(\n"
      "\016last_valid_rot\030\004 \001(\0132\020.proto.VectorBin\""
      "\?\n\016EnvZoneInfoBin\022\031\n\021last_refresh_time\030\001"
      " \001(\007\022\022\n\nanimal_num\030\002 \001(\r\"\250\001\n\025SceneEnvAni"
      "malCompBin\022D\n\rzone_info_map\030\001 \003(\0132-.prot"
      "o.SceneEnvAnimalCompBin.ZoneInfoMapEntry"
      "\032I\n\020ZoneInfoMapEntry\022\013\n\003key\030\001 \001(\r\022$\n\005val"
      "ue\030\002 \001(\0132\025.proto.EnvZoneInfoBin:\0028\001\"|\n\023S"
      "ceneWeatherInfoBin\022\026\n\016height_area_id\030\001 \001"
      "(\r\022\024\n\014climate_type\030\002 \001(\r\022\031\n\021next_climate"
      "_time\030\003 \001(\004\022\034\n\024forcast_climate_list\030\004 \003("
      "\r\"M\n\027SceneClimateAreaInfoBin\022\027\n\017climate_"
      "area_id\030\001 \001(\r\022\031\n\021json_climate_type\030\002 \001(\r"
      "\"\323\001\n\026SceneAllWeatherInfoBin\0225\n\021weather_i"
      "nfo_list\030\001 \003(\0132\032.proto.SceneWeatherInfoB"
      "in\022 \n\030closed_weather_area_list\030\002 \003(\r\022>\n\026"
      "climate_area_info_list\030\003 \003(\0132\036.proto.Sce"
      "neClimateAreaInfoBin\022 \n\030closed_climate_a"
      "rea_list\030\004 \003(\r\"\346\001\n\016BackupGroupBin\022\030\n\020del"
      "_monster_list\030\001 \003(\r\022<\n\014variable_map\030\002 \003("
      "\0132&.proto.BackupGroupBin.VariableMapEntr"
      "y\022\024\n\014revise_level\030\003 \001(\r\022\031\n\021last_refresh_"
      "time\030\004 \001(\007\032K\n\020VariableMapEntry\022\013\n\003key\030\001 "
      "\001(\t\022&\n\005value\030\002 \001(\0132\027.proto.GroupVariable"
      "Bin:\0028\001\"\355\001\n\026SceneBlockGroupCompBin\022\027\n\017de"
      "ad_group_list\030\001 \003(\r\022K\n\020backup_group_map\030"
      "\002 \003(\01321.proto.SceneBlockGroupCompBin.Bac"
      "kupGroupMapEntry\022\037\n\027is_scene_group_all_d"
      "ead\030\003 \001(\010\032L\n\023BackupGroupMapEntry\022\013\n\003key\030"
      "\001 \001(\r\022$\n\005value\030\002 \001(\0132\025.proto.BackupGroup"
      "Bin:\0028\001\"\236\002\n\020SceneAreaCompBin\022\032\n\022unlocked"
      "_area_list\030\001 \003(\r\0226\n\010area_map\030\002 \003(\0132$.pro"
      "to.SceneAreaCompBin.AreaMapEntry\0226\n\010city"
      "_map\030\003 \003(\0132$.proto.SceneAreaCompBin.City"
      "MapEntry\032>\n\014AreaMapEntry\022\013\n\003key\030\001 \001(\r\022\035\n"
      "\005value\030\002 \001(\0132\016.proto.AreaBin:\0028\001\032>\n\014City"
      "MapEntry\022\013\n\003key\030\001 \001(\r\022\035\n\005value\030\002 \001(\0132\016.p"
      "roto.CityBin:\0028\001\"5\n\025SceneEncounterCompBi"
      "n\022\034\n\024parent_quest_id_list\030\001 \003(\r\"#\n\020Activ"
      "itySceneBin\022\017\n\007is_open\030\001 \001(\010\"j\n\017SceneVeh"
      "icleBin\022\021\n\tconfig_id\030\001 \001(\r\022!\n\007cur_pos\030\002 "
      "\001(\0132\020.proto.VectorBin\022!\n\007cur_rot\030\003 \001(\0132\020"
      ".proto.VectorBin\"@\n\nSceneTagOp\022\n\n\002id\030\001 \001"
      "(\r\022&\n\007op_type\030\002 \001(\0162\025.proto.SceneTagOpTy"
      "pe\"3\n\010WayPoint\022\020\n\010point_id\030\001 \001(\r\022\025\n\racti"
      "vate_time\030\002 \001(\r\"y\n\017DungeonSceneBin\0221\n\030ac"
      "tivated_way_point_list\030\001 \003(\0132\017.proto.Way"
      "Point\0223\n\032activated_slip_revive_list\030\002 \003("
      "\0132\017.proto.WayPoint\"\327\006\n\010SceneBin\022\033\n\023unloc"
      "ked_point_list\030\001 \003(\r\022\033\n\023unlocked_force_l"
      "ist\030\002 \003(\r\022\031\n\021locked_point_list\030\003 \003(\r\0227\n\020"
      "all_weather_info\030\004 \001(\0132\035.proto.SceneAllW"
      "eatherInfoBin\022<\n\025owner_player_location\030\005"
      " \001(\0132\035.proto.ScenePlayerLocationBin\0226\n\017b"
      "lock_group_bin\030\006 \001(\0132\035.proto.SceneBlockG"
      "roupCompBin\0224\n\016env_animal_bin\030\007 \001(\0132\034.pr"
      "oto.SceneEnvAnimalCompBin\022.\n\rarea_comp_b"
      "in\030\010 \001(\0132\027.proto.SceneAreaCompBin\0228\n\022enc"
      "ounter_comp_bin\030\t \001(\0132\034.proto.SceneEncou"
      "nterCompBin\022#\n\033last_spring_recover_time_"
      "ms\030\n \001(\004\022 \n\030group_unlimit_point_list\030\013 \003"
      "(\r\022,\n$interacted_to_be_explored_point_li"
      "st\030\014 \003(\r\022\031\n\021cur_spring_volume\030\r \001(\002\022\021\n\ti"
      "s_locked\030\016 \001(\010\022,\n\014vehicle_list\030\017 \003(\0132\026.p"
      "roto.SceneVehicleBin\022,\n\021scene_tag_op_lis"
      "t\030\020 \003(\0132\021.proto.SceneTagOp\022\027\n\017hide_point"
      "_list\030\021 \003(\r\022\031\n\021unhide_point_list\030\022 \003(\r\0225"
      "\n\022activity_scene_bin\030e \001(\0132\027.proto.Activ"
      "itySceneBinH\000\0223\n\021dungeon_scene_bin\030f \001(\013"
      "2\026.proto.DungeonSceneBinH\000B\010\n\006detail\"\206\005\n"
      "\rGCGSettleData\022\016\n\006app_id\030\001 \001(\r\022\024\n\014thread"
      "_index\030\002 \001(\r\022\017\n\007game_id\030\003 \001(\r\022\020\n\010game_ui"
      "d\030\004 \001(\r\022\023\n\013verify_code\030\005 \001(\r\022\016\n\006reason\030\006"
      " \001(\r\022\025\n\rbusiness_type\030\007 \001(\r\0221\n\007uid_map\030\010"
      " \003(\0132 .proto.GCGSettleData.UidMapEntry\022\031"
      "\n\021winner_controller\030\t \001(\r\022N\n\026challenge_p"
      "rogress_map\030\n \003(\0132..proto.GCGSettleData."
      "ChallengeProgressMapEntry\022\024\n\014card_id_lis"
      "t\030\013 \003(\r\022\025\n\rcard_group_id\030\014 \001(\r\0225\n\tscore_"
      "map\030\r \003(\0132\".proto.GCGSettleData.ScoreMap"
      "Entry\022\020\n\010match_id\030\016 \001(\r\022\031\n\021custom_param_"
      "list\030\017 \003(\r\022$\n\034forbid_finish_challenge_li"
      "st\030\020 \003(\r\032-\n\013UidMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005"
      "value\030\002 \001(\r:\0028\001\032;\n\031ChallengeProgressMapE"
      "ntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\032/\n\r"
      "ScoreMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001("
      "\r:\0028\001\"\036\n\017OfflineOpTestOp\022\013\n\003msg\030\001 \001(\t\"\221\001"
      "\n\032OfflineOpFurnitureMakeHelp\022\023\n\013player_n"
      "ame\030\001 \001(\t\022\014\n\004time\030\002 \001(\007\022\013\n\003uid\030\003 \001(\r\022\014\n\004"
      "icon\030\004 \001(\r\0225\n\023profile_picture_bin\030\005 \001(\0132"
      "\030.proto.ProfilePictureBin\"\330\001\n&OfflineOpP"
      "lantFlowerActivityGiveFlower\022\013\n\003uid\030\001 \001("
      "\r\022W\n\016flower_num_map\030\002 \003(\0132\?.proto.Offlin"
      "eOpPlantFlowerActivityGiveFlower.FlowerN"
      "umMapEntry\022\023\n\013schedule_id\030\003 \001(\r\0323\n\021Flowe"
      "rNumMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r"
      ":\0028\001\"s\n#OfflineOpWinterCampActivityGiveI"
      "tem\022\013\n\003uid\030\001 \001(\r\022*\n\ritem_bin_list\030\002 \003(\0132"
      "\023.proto.ItemParamBin\022\023\n\013schedule_id\030\003 \001("
      "\r\"\?\n\022OfflineOpGCGSettle\022)\n\013settle_data\030\001"
      " \001(\0132\024.proto.GCGSettleData\"\270\001\n\031OfflineOp"
      "ActivityGiveGift\022\013\n\003uid\030\001 \001(\r\022F\n\014gift_nu"
      "m_map\030\002 \003(\01320.proto.OfflineOpActivityGiv"
      "eGift.GiftNumMapEntry\022\023\n\013schedule_id\030\003 \001"
      "(\r\0321\n\017GiftNumMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005va"
      "lue\030\002 \001(\r:\0028\001\"D\n OfflineOpVintageActivit"
      "yDividend\022\013\n\003uid\030\001 \001(\r\022\023\n\013schedule_id\030\002 "
      "\001(\r\"\355\003\n\014OfflineOpBin\022)\n\007test_op\030\001 \001(\0132\026."
      "proto.OfflineOpTestOpH\000\022C\n\026furniture_mak"
      "e_help_op\030\002 \001(\0132!.proto.OfflineOpFurnitu"
      "reMakeHelpH\000\022T\n\033plant_flower_give_flower"
      "_op\030\003 \001(\0132-.proto.OfflineOpPlantFlowerAc"
      "tivityGiveFlowerH\000\022N\n\030winter_camp_give_i"
      "tem_op\030\004 \001(\0132*.proto.OfflineOpWinterCamp"
      "ActivityGiveItemH\000\022A\n\025activity_give_gift"
      "_op\030\005 \001(\0132 .proto.OfflineOpActivityGiveG"
      "iftH\000\022F\n\023vintage_dividend_op\030\006 \001(\0132\'.pro"
      "to.OfflineOpVintageActivityDividendH\000\0222\n"
      "\rgcg_settle_op\030\007 \001(\0132\031.proto.OfflineOpGC"
      "GSettleH\000B\010\n\006detail\"\224\001\n\025FurnitureMakeSlo"
      "tsBin\022\017\n\007make_id\030\001 \001(\r\022\022\n\nbegin_time\030\002 \001"
      "(\007\022\020\n\010dur_time\030\003 \001(\r\022\027\n\017accelerate_time\030"
      "\004 \001(\007\022\030\n\020accelerate_count\030\006 \001(\r\022\021\n\tavata"
      "r_id\030\007 \001(\r\":\n\021ProfilePictureBin\022\021\n\tavata"
      "r_id\030\001 \001(\r\022\022\n\ncostume_id\030\002 \001(\r\"\265\001\n\027Custo"
      "mDungeonSettingBin\022\030\n\020is_arrive_finish\030\001"
      " \001(\010\022\022\n\ncoin_limit\030\002 \001(\r\022\022\n\ntime_limit\030\003"
      " \001(\r\022\027\n\017is_forbid_skill\030\004 \001(\010\022\026\n\016open_ro"
      "om_list\030\005 \003(\r\022\025\n\rstart_room_id\030\006 \001(\r\022\020\n\010"
      "life_num\030\007 \001(\r\"\223\002\n\030CustomDungeonAbstract"
      "Bin\022\026\n\016finish_room_id\030\001 \001(\r\022\026\n\016total_coi"
      "n_num\030\002 \001(\r\022\032\n\022first_publish_time\030\003 \001(\r\022"
      "\031\n\021last_publish_time\030\004 \001(\r\022U\n\024brick_stat"
      "istics_map\030\005 \003(\01327.proto.CustomDungeonAb"
      "stractBin.BrickStatisticsMapEntry\0329\n\027Bri"
      "ckStatisticsMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005val"
      "ue\030\002 \001(\r:\0028\001*\351\002\n\021GroupBinOperation\022\021\n\rGR"
      "OUP_OP_NONE\020\000\022\033\n\027GROUP_OP_GADGET_MAP_DEL"
      "\020\001\022\034\n\030GROUP_OP_DEL_GADGET_LIST\020\002\022\034\n\030GROU"
      "P_OP_MONSTER_MAP_DEL\020\003\022\035\n\031GROUP_OP_DEL_M"
      "ONSTER_LIST\020\004\022\030\n\024GORUP_OP_DEL_TRIGGER\020\005\022"
      "\036\n\032GROUP_OP_SET_TRIGGER_COUNT\020\006\022\035\n\031GROUP"
      "_OP_SET_VARIABLE_VAL\020\007\022\035\n\031GROUP_OP_SET_T"
      "ARGET_SUITE\020\010\022\035\n\031GROUP_OP_SET_GADGET_STA"
      "TE\020\t\022\025\n\021GROUP_OP_SET_DEAD\020\n\022\033\n\027GROUP_OP_"
      "SET_UNREGISTER\020\013*\222\001\n\017GroupLinkOpType\022\026\n\022"
      "GROUP_LINK_OP_NONE\020\000\022!\n\035GROUP_LINK_OP_BU"
      "NDLE_REGISTER\020\001\022\037\n\033GROUP_LINK_OP_BUNDLE_"
      "FINISH\020\002\022#\n\037GROUP_LINK_OP_BUNDLE_UNREGIS"
      "TER\020\003*S\n\016SceneTagOpType\022\025\n\021SCENE_TAG_OP_"
      "NONE\020\000\022\024\n\020SCENE_TAG_OP_ADD\020\001\022\024\n\020SCENE_TA"
      "G_OP_DEL\020\002*\235\002\n\rOfflineOpType\022\023\n\017OFFLINE_"
      "OP_NONE\020\000\022\023\n\017OFFLINE_OP_TEST\020\001\022\"\n\036OFFLIN"
      "E_OP_FURNITURE_MAKE_HELP\020\002\0220\n,OFFLINE_OP"
      "_PLANT_FLOWER_ACTIVITY_GIVE_FLOWER\020\003\022$\n "
      "OFFLINE_OP_WINTER_CAMP_GIVE_ITEM\020\004\022!\n\035OF"
      "FLINE_OP_ACTIVITY_GIVE_GIFT\020\005\022(\n$OFFLINE"
      "_OP_VINTAGE_ACTIVITY_DIVIDEND\020\006\022\031\n\025OFFLI"
      "NE_OP_GCG_SETTLE\020\007B(Z&github.com/teyvat-"
      "helper/hk4e-proto/pbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 20108);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server_only/bin_common.server.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto

const ::google::protobuf::EnumDescriptor* GroupBinOperation_descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_enum_descriptors[0];
}
bool GroupBinOperation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GroupLinkOpType_descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_enum_descriptors[1];
}
bool GroupLinkOpType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SceneTagOpType_descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_enum_descriptors[2];
}
bool SceneTagOpType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* OfflineOpType_descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_enum_descriptors[3];
}
bool OfflineOpType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VectorBin::kXFieldNumber;
const int VectorBin::kYFieldNumber;
const int VectorBin::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VectorBin::VectorBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.VectorBin)
}
VectorBin::VectorBin(const VectorBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:proto.VectorBin)
}

void VectorBin::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _cached_size_ = 0;
}

VectorBin::~VectorBin() {
  // @@protoc_insertion_point(destructor:proto.VectorBin)
  SharedDtor();
}

void VectorBin::SharedDtor() {
}

void VectorBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VectorBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VectorBin& VectorBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

VectorBin* VectorBin::New(::google::protobuf::Arena* arena) const {
  VectorBin* n = new VectorBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VectorBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.VectorBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool VectorBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.VectorBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.VectorBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.VectorBin)
  return false;
#undef DO_
}

void VectorBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.VectorBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.VectorBin)
}

::google::protobuf::uint8* VectorBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.VectorBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.VectorBin)
  return target;
}

size_t VectorBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.VectorBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VectorBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.VectorBin)
  GOOGLE_DCHECK_NE(&from, this);
  const VectorBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VectorBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.VectorBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.VectorBin)
    MergeFrom(*source);
  }
}

void VectorBin::MergeFrom(const VectorBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.VectorBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void VectorBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.VectorBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VectorBin::CopyFrom(const VectorBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.VectorBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VectorBin::IsInitialized() const {
  return true;
}

void VectorBin::Swap(VectorBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VectorBin::InternalSwap(VectorBin* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VectorBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VectorBin

// float x = 1;
void VectorBin::clear_x() {
  x_ = 0;
}
float VectorBin::x() const {
  // @@protoc_insertion_point(field_get:proto.VectorBin.x)
  return x_;
}
void VectorBin::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.VectorBin.x)
}

// float y = 2;
void VectorBin::clear_y() {
  y_ = 0;
}
float VectorBin::y() const {
  // @@protoc_insertion_point(field_get:proto.VectorBin.y)
  return y_;
}
void VectorBin::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:proto.VectorBin.y)
}

// float z = 3;
void VectorBin::clear_z() {
  z_ = 0;
}
float VectorBin::z() const {
  // @@protoc_insertion_point(field_get:proto.VectorBin.z)
  return z_;
}
void VectorBin::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:proto.VectorBin.z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Uint32PairBin::kKeyFieldNumber;
const int Uint32PairBin::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Uint32PairBin::Uint32PairBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Uint32PairBin)
}
Uint32PairBin::Uint32PairBin(const Uint32PairBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&key_, &from.key_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&key_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:proto.Uint32PairBin)
}

void Uint32PairBin::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&key_)) + sizeof(value_));
  _cached_size_ = 0;
}

Uint32PairBin::~Uint32PairBin() {
  // @@protoc_insertion_point(destructor:proto.Uint32PairBin)
  SharedDtor();
}

void Uint32PairBin::SharedDtor() {
}

void Uint32PairBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Uint32PairBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Uint32PairBin& Uint32PairBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

Uint32PairBin* Uint32PairBin::New(::google::protobuf::Arena* arena) const {
  Uint32PairBin* n = new Uint32PairBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Uint32PairBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Uint32PairBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&key_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

bool Uint32PairBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Uint32PairBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Uint32PairBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Uint32PairBin)
  return false;
#undef DO_
}

void Uint32PairBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Uint32PairBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 key = 1;
  if (this->key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->key(), output);
  }

  // uint32 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Uint32PairBin)
}

::google::protobuf::uint8* Uint32PairBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.Uint32PairBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 key = 1;
  if (this->key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->key(), target);
  }

  // uint32 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Uint32PairBin)
  return target;
}

size_t Uint32PairBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Uint32PairBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 key = 1;
  if (this->key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->key());
  }

  // uint32 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Uint32PairBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Uint32PairBin)
  GOOGLE_DCHECK_NE(&from, this);
  const Uint32PairBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Uint32PairBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Uint32PairBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Uint32PairBin)
    MergeFrom(*source);
  }
}

void Uint32PairBin::MergeFrom(const Uint32PairBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Uint32PairBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key() != 0) {
    set_key(from.key());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Uint32PairBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Uint32PairBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Uint32PairBin::CopyFrom(const Uint32PairBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Uint32PairBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Uint32PairBin::IsInitialized() const {
  return true;
}

void Uint32PairBin::Swap(Uint32PairBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Uint32PairBin::InternalSwap(Uint32PairBin* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Uint32PairBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Uint32PairBin

// uint32 key = 1;
void Uint32PairBin::clear_key() {
  key_ = 0u;
}
::google::protobuf::uint32 Uint32PairBin::key() const {
  // @@protoc_insertion_point(field_get:proto.Uint32PairBin.key)
  return key_;
}
void Uint32PairBin::set_key(::google::protobuf::uint32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto.Uint32PairBin.key)
}

// uint32 value = 2;
void Uint32PairBin::clear_value() {
  value_ = 0u;
}
::google::protobuf::uint32 Uint32PairBin::value() const {
  // @@protoc_insertion_point(field_get:proto.Uint32PairBin.value)
  return value_;
}
void Uint32PairBin::set_value(::google::protobuf::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.Uint32PairBin.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Uint32ToInt32PairBin::kKeyFieldNumber;
const int Uint32ToInt32PairBin::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Uint32ToInt32PairBin::Uint32ToInt32PairBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Uint32ToInt32PairBin)
}
Uint32ToInt32PairBin::Uint32ToInt32PairBin(const Uint32ToInt32PairBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&key_, &from.key_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&key_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:proto.Uint32ToInt32PairBin)
}

void Uint32ToInt32PairBin::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&key_)) + sizeof(value_));
  _cached_size_ = 0;
}

Uint32ToInt32PairBin::~Uint32ToInt32PairBin() {
  // @@protoc_insertion_point(destructor:proto.Uint32ToInt32PairBin)
  SharedDtor();
}

void Uint32ToInt32PairBin::SharedDtor() {
}

void Uint32ToInt32PairBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Uint32ToInt32PairBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Uint32ToInt32PairBin& Uint32ToInt32PairBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

Uint32ToInt32PairBin* Uint32ToInt32PairBin::New(::google::protobuf::Arena* arena) const {
  Uint32ToInt32PairBin* n = new Uint32ToInt32PairBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Uint32ToInt32PairBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Uint32ToInt32PairBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&key_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

bool Uint32ToInt32PairBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Uint32ToInt32PairBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Uint32ToInt32PairBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Uint32ToInt32PairBin)
  return false;
#undef DO_
}

void Uint32ToInt32PairBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Uint32ToInt32PairBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 key = 1;
  if (this->key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->key(), output);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Uint32ToInt32PairBin)
}

::google::protobuf::uint8* Uint32ToInt32PairBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.Uint32ToInt32PairBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 key = 1;
  if (this->key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->key(), target);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Uint32ToInt32PairBin)
  return target;
}

size_t Uint32ToInt32PairBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Uint32ToInt32PairBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 key = 1;
  if (this->key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->key());
  }

  // int32 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Uint32ToInt32PairBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Uint32ToInt32PairBin)
  GOOGLE_DCHECK_NE(&from, this);
  const Uint32ToInt32PairBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Uint32ToInt32PairBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Uint32ToInt32PairBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Uint32ToInt32PairBin)
    MergeFrom(*source);
  }
}

void Uint32ToInt32PairBin::MergeFrom(const Uint32ToInt32PairBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Uint32ToInt32PairBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key() != 0) {
    set_key(from.key());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Uint32ToInt32PairBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Uint32ToInt32PairBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Uint32ToInt32PairBin::CopyFrom(const Uint32ToInt32PairBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Uint32ToInt32PairBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Uint32ToInt32PairBin::IsInitialized() const {
  return true;
}

void Uint32ToInt32PairBin::Swap(Uint32ToInt32PairBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Uint32ToInt32PairBin::InternalSwap(Uint32ToInt32PairBin* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Uint32ToInt32PairBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Uint32ToInt32PairBin

// uint32 key = 1;
void Uint32ToInt32PairBin::clear_key() {
  key_ = 0u;
}
::google::protobuf::uint32 Uint32ToInt32PairBin::key() const {
  // @@protoc_insertion_point(field_get:proto.Uint32ToInt32PairBin.key)
  return key_;
}
void Uint32ToInt32PairBin::set_key(::google::protobuf::uint32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto.Uint32ToInt32PairBin.key)
}

// int32 value = 2;
void Uint32ToInt32PairBin::clear_value() {
  value_ = 0;
}
::google::protobuf::int32 Uint32ToInt32PairBin::value() const {
  // @@protoc_insertion_point(field_get:proto.Uint32ToInt32PairBin.value)
  return value_;
}
void Uint32ToInt32PairBin::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.Uint32ToInt32PairBin.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FloatPairBin::kFirstFieldNumber;
const int FloatPairBin::kSecondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FloatPairBin::FloatPairBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FloatPairBin)
}
FloatPairBin::FloatPairBin(const FloatPairBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&first_, &from.first_,
    static_cast<size_t>(reinterpret_cast<char*>(&second_) -
    reinterpret_cast<char*>(&first_)) + sizeof(second_));
  // @@protoc_insertion_point(copy_constructor:proto.FloatPairBin)
}

void FloatPairBin::SharedCtor() {
  ::memset(&first_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&second_) -
      reinterpret_cast<char*>(&first_)) + sizeof(second_));
  _cached_size_ = 0;
}

FloatPairBin::~FloatPairBin() {
  // @@protoc_insertion_point(destructor:proto.FloatPairBin)
  SharedDtor();
}

void FloatPairBin::SharedDtor() {
}

void FloatPairBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FloatPairBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FloatPairBin& FloatPairBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

FloatPairBin* FloatPairBin::New(::google::protobuf::Arena* arena) const {
  FloatPairBin* n = new FloatPairBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FloatPairBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FloatPairBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&first_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&second_) -
      reinterpret_cast<char*>(&first_)) + sizeof(second_));
  _internal_metadata_.Clear();
}

bool FloatPairBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FloatPairBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float first = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &first_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float second = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &second_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FloatPairBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FloatPairBin)
  return false;
#undef DO_
}

void FloatPairBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FloatPairBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float first = 1;
  if (this->first() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->first(), output);
  }

  // float second = 2;
  if (this->second() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->second(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FloatPairBin)
}

::google::protobuf::uint8* FloatPairBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FloatPairBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float first = 1;
  if (this->first() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->first(), target);
  }

  // float second = 2;
  if (this->second() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->second(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FloatPairBin)
  return target;
}

size_t FloatPairBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FloatPairBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float first = 1;
  if (this->first() != 0) {
    total_size += 1 + 4;
  }

  // float second = 2;
  if (this->second() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FloatPairBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FloatPairBin)
  GOOGLE_DCHECK_NE(&from, this);
  const FloatPairBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FloatPairBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FloatPairBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FloatPairBin)
    MergeFrom(*source);
  }
}

void FloatPairBin::MergeFrom(const FloatPairBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FloatPairBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.first() != 0) {
    set_first(from.first());
  }
  if (from.second() != 0) {
    set_second(from.second());
  }
}

void FloatPairBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FloatPairBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FloatPairBin::CopyFrom(const FloatPairBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FloatPairBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FloatPairBin::IsInitialized() const {
  return true;
}

void FloatPairBin::Swap(FloatPairBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FloatPairBin::InternalSwap(FloatPairBin* other) {
  using std::swap;
  swap(first_, other->first_);
  swap(second_, other->second_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FloatPairBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FloatPairBin

// float first = 1;
void FloatPairBin::clear_first() {
  first_ = 0;
}
float FloatPairBin::first() const {
  // @@protoc_insertion_point(field_get:proto.FloatPairBin.first)
  return first_;
}
void FloatPairBin::set_first(float value) {
  
  first_ = value;
  // @@protoc_insertion_point(field_set:proto.FloatPairBin.first)
}

// float second = 2;
void FloatPairBin::clear_second() {
  second_ = 0;
}
float FloatPairBin::second() const {
  // @@protoc_insertion_point(field_get:proto.FloatPairBin.second)
  return second_;
}
void FloatPairBin::set_second(float value) {
  
  second_ = value;
  // @@protoc_insertion_point(field_set:proto.FloatPairBin.second)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Uint32List::kUint32ListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Uint32List::Uint32List()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Uint32List)
}
Uint32List::Uint32List(const Uint32List& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      uint32_list_(from.uint32_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.Uint32List)
}

void Uint32List::SharedCtor() {
  _cached_size_ = 0;
}

Uint32List::~Uint32List() {
  // @@protoc_insertion_point(destructor:proto.Uint32List)
  SharedDtor();
}

void Uint32List::SharedDtor() {
}

void Uint32List::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Uint32List::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Uint32List& Uint32List::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

Uint32List* Uint32List::New(::google::protobuf::Arena* arena) const {
  Uint32List* n = new Uint32List;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Uint32List::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Uint32List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uint32_list_.Clear();
  _internal_metadata_.Clear();
}

bool Uint32List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Uint32List)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 uint32_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_uint32_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_uint32_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Uint32List)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Uint32List)
  return false;
#undef DO_
}

void Uint32List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Uint32List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 uint32_list = 1;
  if (this->uint32_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _uint32_list_cached_byte_size_));
  }
  for (int i = 0, n = this->uint32_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->uint32_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Uint32List)
}

::google::protobuf::uint8* Uint32List::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.Uint32List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 uint32_list = 1;
  if (this->uint32_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _uint32_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->uint32_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Uint32List)
  return target;
}

size_t Uint32List::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Uint32List)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 uint32_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->uint32_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _uint32_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Uint32List::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Uint32List)
  GOOGLE_DCHECK_NE(&from, this);
  const Uint32List* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Uint32List>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Uint32List)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Uint32List)
    MergeFrom(*source);
  }
}

void Uint32List::MergeFrom(const Uint32List& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Uint32List)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  uint32_list_.MergeFrom(from.uint32_list_);
}

void Uint32List::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Uint32List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Uint32List::CopyFrom(const Uint32List& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Uint32List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Uint32List::IsInitialized() const {
  return true;
}

void Uint32List::Swap(Uint32List* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Uint32List::InternalSwap(Uint32List* other) {
  using std::swap;
  uint32_list_.InternalSwap(&other->uint32_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Uint32List::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Uint32List

// repeated uint32 uint32_list = 1;
int Uint32List::uint32_list_size() const {
  return uint32_list_.size();
}
void Uint32List::clear_uint32_list() {
  uint32_list_.Clear();
}
::google::protobuf::uint32 Uint32List::uint32_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.Uint32List.uint32_list)
  return uint32_list_.Get(index);
}
void Uint32List::set_uint32_list(int index, ::google::protobuf::uint32 value) {
  uint32_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.Uint32List.uint32_list)
}
void Uint32List::add_uint32_list(::google::protobuf::uint32 value) {
  uint32_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.Uint32List.uint32_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Uint32List::uint32_list() const {
  // @@protoc_insertion_point(field_list:proto.Uint32List.uint32_list)
  return uint32_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Uint32List::mutable_uint32_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.Uint32List.uint32_list)
  return &uint32_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Int32List::kInt32ListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Int32List::Int32List()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Int32List)
}
Int32List::Int32List(const Int32List& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      int32_list_(from.int32_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.Int32List)
}

void Int32List::SharedCtor() {
  _cached_size_ = 0;
}

Int32List::~Int32List() {
  // @@protoc_insertion_point(destructor:proto.Int32List)
  SharedDtor();
}

void Int32List::SharedDtor() {
}

void Int32List::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Int32List::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Int32List& Int32List::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

Int32List* Int32List::New(::google::protobuf::Arena* arena) const {
  Int32List* n = new Int32List;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Int32List::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Int32List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int32_list_.Clear();
  _internal_metadata_.Clear();
}

bool Int32List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Int32List)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 int32_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_int32_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_int32_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Int32List)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Int32List)
  return false;
#undef DO_
}

void Int32List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Int32List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 int32_list = 1;
  if (this->int32_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _int32_list_cached_byte_size_));
  }
  for (int i = 0, n = this->int32_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->int32_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Int32List)
}

::google::protobuf::uint8* Int32List::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.Int32List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 int32_list = 1;
  if (this->int32_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _int32_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->int32_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Int32List)
  return target;
}

size_t Int32List::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Int32List)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 int32_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->int32_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _int32_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Int32List::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Int32List)
  GOOGLE_DCHECK_NE(&from, this);
  const Int32List* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Int32List>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Int32List)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Int32List)
    MergeFrom(*source);
  }
}

void Int32List::MergeFrom(const Int32List& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Int32List)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  int32_list_.MergeFrom(from.int32_list_);
}

void Int32List::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Int32List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Int32List::CopyFrom(const Int32List& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Int32List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Int32List::IsInitialized() const {
  return true;
}

void Int32List::Swap(Int32List* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Int32List::InternalSwap(Int32List* other) {
  using std::swap;
  int32_list_.InternalSwap(&other->int32_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Int32List::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Int32List

// repeated int32 int32_list = 1;
int Int32List::int32_list_size() const {
  return int32_list_.size();
}
void Int32List::clear_int32_list() {
  int32_list_.Clear();
}
::google::protobuf::int32 Int32List::int32_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.Int32List.int32_list)
  return int32_list_.Get(index);
}
void Int32List::set_int32_list(int index, ::google::protobuf::int32 value) {
  int32_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.Int32List.int32_list)
}
void Int32List::add_int32_list(::google::protobuf::int32 value) {
  int32_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.Int32List.int32_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Int32List::int32_list() const {
  // @@protoc_insertion_point(field_list:proto.Int32List.int32_list)
  return int32_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Int32List::mutable_int32_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.Int32List.int32_list)
  return &int32_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReliquaryBin::kLevelFieldNumber;
const int ReliquaryBin::kExpFieldNumber;
const int ReliquaryBin::kMainPropIdFieldNumber;
const int ReliquaryBin::kAppendPropIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReliquaryBin::ReliquaryBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ReliquaryBin)
}
ReliquaryBin::ReliquaryBin(const ReliquaryBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      append_prop_id_list_(from.append_prop_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&main_prop_id_) -
    reinterpret_cast<char*>(&level_)) + sizeof(main_prop_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ReliquaryBin)
}

void ReliquaryBin::SharedCtor() {
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&main_prop_id_) -
      reinterpret_cast<char*>(&level_)) + sizeof(main_prop_id_));
  _cached_size_ = 0;
}

ReliquaryBin::~ReliquaryBin() {
  // @@protoc_insertion_point(destructor:proto.ReliquaryBin)
  SharedDtor();
}

void ReliquaryBin::SharedDtor() {
}

void ReliquaryBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReliquaryBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReliquaryBin& ReliquaryBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReliquaryBin* ReliquaryBin::New(::google::protobuf::Arena* arena) const {
  ReliquaryBin* n = new ReliquaryBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReliquaryBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ReliquaryBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  append_prop_id_list_.Clear();
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&main_prop_id_) -
      reinterpret_cast<char*>(&level_)) + sizeof(main_prop_id_));
  _internal_metadata_.Clear();
}

bool ReliquaryBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ReliquaryBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 exp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 main_prop_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &main_prop_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 append_prop_id_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_append_prop_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_append_prop_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ReliquaryBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ReliquaryBin)
  return false;
#undef DO_
}

void ReliquaryBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ReliquaryBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level = 1;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // uint32 exp = 2;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->exp(), output);
  }

  // uint32 main_prop_id = 4;
  if (this->main_prop_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->main_prop_id(), output);
  }

  // repeated uint32 append_prop_id_list = 5;
  if (this->append_prop_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _append_prop_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->append_prop_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->append_prop_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ReliquaryBin)
}

::google::protobuf::uint8* ReliquaryBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ReliquaryBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level = 1;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // uint32 exp = 2;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->exp(), target);
  }

  // uint32 main_prop_id = 4;
  if (this->main_prop_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->main_prop_id(), target);
  }

  // repeated uint32 append_prop_id_list = 5;
  if (this->append_prop_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _append_prop_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->append_prop_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ReliquaryBin)
  return target;
}

size_t ReliquaryBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ReliquaryBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 append_prop_id_list = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->append_prop_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _append_prop_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 exp = 2;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exp());
  }

  // uint32 main_prop_id = 4;
  if (this->main_prop_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->main_prop_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReliquaryBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ReliquaryBin)
  GOOGLE_DCHECK_NE(&from, this);
  const ReliquaryBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReliquaryBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ReliquaryBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ReliquaryBin)
    MergeFrom(*source);
  }
}

void ReliquaryBin::MergeFrom(const ReliquaryBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ReliquaryBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  append_prop_id_list_.MergeFrom(from.append_prop_id_list_);
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.main_prop_id() != 0) {
    set_main_prop_id(from.main_prop_id());
  }
}

void ReliquaryBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ReliquaryBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReliquaryBin::CopyFrom(const ReliquaryBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ReliquaryBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReliquaryBin::IsInitialized() const {
  return true;
}

void ReliquaryBin::Swap(ReliquaryBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReliquaryBin::InternalSwap(ReliquaryBin* other) {
  using std::swap;
  append_prop_id_list_.InternalSwap(&other->append_prop_id_list_);
  swap(level_, other->level_);
  swap(exp_, other->exp_);
  swap(main_prop_id_, other->main_prop_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReliquaryBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReliquaryBin

// uint32 level = 1;
void ReliquaryBin::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 ReliquaryBin::level() const {
  // @@protoc_insertion_point(field_get:proto.ReliquaryBin.level)
  return level_;
}
void ReliquaryBin::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.ReliquaryBin.level)
}

// uint32 exp = 2;
void ReliquaryBin::clear_exp() {
  exp_ = 0u;
}
::google::protobuf::uint32 ReliquaryBin::exp() const {
  // @@protoc_insertion_point(field_get:proto.ReliquaryBin.exp)
  return exp_;
}
void ReliquaryBin::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:proto.ReliquaryBin.exp)
}

// uint32 main_prop_id = 4;
void ReliquaryBin::clear_main_prop_id() {
  main_prop_id_ = 0u;
}
::google::protobuf::uint32 ReliquaryBin::main_prop_id() const {
  // @@protoc_insertion_point(field_get:proto.ReliquaryBin.main_prop_id)
  return main_prop_id_;
}
void ReliquaryBin::set_main_prop_id(::google::protobuf::uint32 value) {
  
  main_prop_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ReliquaryBin.main_prop_id)
}

// repeated uint32 append_prop_id_list = 5;
int ReliquaryBin::append_prop_id_list_size() const {
  return append_prop_id_list_.size();
}
void ReliquaryBin::clear_append_prop_id_list() {
  append_prop_id_list_.Clear();
}
::google::protobuf::uint32 ReliquaryBin::append_prop_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ReliquaryBin.append_prop_id_list)
  return append_prop_id_list_.Get(index);
}
void ReliquaryBin::set_append_prop_id_list(int index, ::google::protobuf::uint32 value) {
  append_prop_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ReliquaryBin.append_prop_id_list)
}
void ReliquaryBin::add_append_prop_id_list(::google::protobuf::uint32 value) {
  append_prop_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ReliquaryBin.append_prop_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReliquaryBin::append_prop_id_list() const {
  // @@protoc_insertion_point(field_list:proto.ReliquaryBin.append_prop_id_list)
  return append_prop_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReliquaryBin::mutable_append_prop_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ReliquaryBin.append_prop_id_list)
  return &append_prop_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

WeaponBin::WeaponBin_AffixMapEntry::WeaponBin_AffixMapEntry() {}
WeaponBin::WeaponBin_AffixMapEntry::WeaponBin_AffixMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata WeaponBin::WeaponBin_AffixMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[7];
}
void WeaponBin::WeaponBin_AffixMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void WeaponBin::WeaponBin_AffixMapEntry::MergeFrom(const WeaponBin_AffixMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WeaponBin::kLevelFieldNumber;
const int WeaponBin::kExpFieldNumber;
const int WeaponBin::kPromoteLevelFieldNumber;
const int WeaponBin::kAffixMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WeaponBin::WeaponBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WeaponBin)
}
WeaponBin::WeaponBin(const WeaponBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  affix_map_.MergeFrom(from.affix_map_);
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&promote_level_) -
    reinterpret_cast<char*>(&level_)) + sizeof(promote_level_));
  // @@protoc_insertion_point(copy_constructor:proto.WeaponBin)
}

void WeaponBin::SharedCtor() {
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&promote_level_) -
      reinterpret_cast<char*>(&level_)) + sizeof(promote_level_));
  _cached_size_ = 0;
}

WeaponBin::~WeaponBin() {
  // @@protoc_insertion_point(destructor:proto.WeaponBin)
  SharedDtor();
}

void WeaponBin::SharedDtor() {
}

void WeaponBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WeaponBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WeaponBin& WeaponBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

WeaponBin* WeaponBin::New(::google::protobuf::Arena* arena) const {
  WeaponBin* n = new WeaponBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WeaponBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WeaponBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  affix_map_.Clear();
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&promote_level_) -
      reinterpret_cast<char*>(&level_)) + sizeof(promote_level_));
  _internal_metadata_.Clear();
}

bool WeaponBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WeaponBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 exp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 promote_level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &promote_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> affix_map = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          WeaponBin_AffixMapEntry::Parser< ::google::protobuf::internal::MapField<
              WeaponBin_AffixMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&affix_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WeaponBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WeaponBin)
  return false;
#undef DO_
}

void WeaponBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WeaponBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level = 1;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // uint32 exp = 2;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->exp(), output);
  }

  // uint32 promote_level = 3;
  if (this->promote_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->promote_level(), output);
  }

  // map<uint32, uint32> affix_map = 4;
  if (!this->affix_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->affix_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->affix_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->affix_map().begin();
          it != this->affix_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<WeaponBin_AffixMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(affix_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<WeaponBin_AffixMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->affix_map().begin();
          it != this->affix_map().end(); ++it) {
        entry.reset(affix_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WeaponBin)
}

::google::protobuf::uint8* WeaponBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WeaponBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level = 1;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // uint32 exp = 2;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->exp(), target);
  }

  // uint32 promote_level = 3;
  if (this->promote_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->promote_level(), target);
  }

  // map<uint32, uint32> affix_map = 4;
  if (!this->affix_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->affix_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->affix_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->affix_map().begin();
          it != this->affix_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<WeaponBin_AffixMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(affix_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<WeaponBin_AffixMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->affix_map().begin();
          it != this->affix_map().end(); ++it) {
        entry.reset(affix_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WeaponBin)
  return target;
}

size_t WeaponBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WeaponBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> affix_map = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->affix_map_size());
  {
    ::google::protobuf::scoped_ptr<WeaponBin_AffixMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->affix_map().begin();
        it != this->affix_map().end(); ++it) {
      entry.reset(affix_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint32 level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 exp = 2;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exp());
  }

  // uint32 promote_level = 3;
  if (this->promote_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->promote_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WeaponBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WeaponBin)
  GOOGLE_DCHECK_NE(&from, this);
  const WeaponBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WeaponBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WeaponBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WeaponBin)
    MergeFrom(*source);
  }
}

void WeaponBin::MergeFrom(const WeaponBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WeaponBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  affix_map_.MergeFrom(from.affix_map_);
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.promote_level() != 0) {
    set_promote_level(from.promote_level());
  }
}

void WeaponBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WeaponBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WeaponBin::CopyFrom(const WeaponBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WeaponBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WeaponBin::IsInitialized() const {
  return true;
}

void WeaponBin::Swap(WeaponBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WeaponBin::InternalSwap(WeaponBin* other) {
  using std::swap;
  affix_map_.Swap(&other->affix_map_);
  swap(level_, other->level_);
  swap(exp_, other->exp_);
  swap(promote_level_, other->promote_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WeaponBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WeaponBin

// uint32 level = 1;
void WeaponBin::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 WeaponBin::level() const {
  // @@protoc_insertion_point(field_get:proto.WeaponBin.level)
  return level_;
}
void WeaponBin::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.WeaponBin.level)
}

// uint32 exp = 2;
void WeaponBin::clear_exp() {
  exp_ = 0u;
}
::google::protobuf::uint32 WeaponBin::exp() const {
  // @@protoc_insertion_point(field_get:proto.WeaponBin.exp)
  return exp_;
}
void WeaponBin::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:proto.WeaponBin.exp)
}

// uint32 promote_level = 3;
void WeaponBin::clear_promote_level() {
  promote_level_ = 0u;
}
::google::protobuf::uint32 WeaponBin::promote_level() const {
  // @@protoc_insertion_point(field_get:proto.WeaponBin.promote_level)
  return promote_level_;
}
void WeaponBin::set_promote_level(::google::protobuf::uint32 value) {
  
  promote_level_ = value;
  // @@protoc_insertion_point(field_set:proto.WeaponBin.promote_level)
}

// map<uint32, uint32> affix_map = 4;
int WeaponBin::affix_map_size() const {
  return affix_map_.size();
}
void WeaponBin::clear_affix_map() {
  affix_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
WeaponBin::affix_map() const {
  // @@protoc_insertion_point(field_map:proto.WeaponBin.affix_map)
  return affix_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
WeaponBin::mutable_affix_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.WeaponBin.affix_map)
  return affix_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemParamBin::kItemIdFieldNumber;
const int ItemParamBin::kCountFieldNumber;
const int ItemParamBin::kLevelFieldNumber;
const int ItemParamBin::kPromoteLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemParamBin::ItemParamBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ItemParamBin)
}
ItemParamBin::ItemParamBin(const ItemParamBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&promote_level_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(promote_level_));
  // @@protoc_insertion_point(copy_constructor:proto.ItemParamBin)
}

void ItemParamBin::SharedCtor() {
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&promote_level_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(promote_level_));
  _cached_size_ = 0;
}

ItemParamBin::~ItemParamBin() {
  // @@protoc_insertion_point(destructor:proto.ItemParamBin)
  SharedDtor();
}

void ItemParamBin::SharedDtor() {
}

void ItemParamBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemParamBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemParamBin& ItemParamBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ItemParamBin* ItemParamBin::New(::google::protobuf::Arena* arena) const {
  ItemParamBin* n = new ItemParamBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemParamBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ItemParamBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&promote_level_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(promote_level_));
  _internal_metadata_.Clear();
}

bool ItemParamBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ItemParamBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 promote_level = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &promote_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ItemParamBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ItemParamBin)
  return false;
#undef DO_
}

void ItemParamBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ItemParamBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_id(), output);
  }

  // uint32 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  // uint32 level = 3;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  // uint32 promote_level = 4;
  if (this->promote_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->promote_level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ItemParamBin)
}

::google::protobuf::uint8* ItemParamBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ItemParamBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_id(), target);
  }

  // uint32 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  // uint32 level = 3;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  // uint32 promote_level = 4;
  if (this->promote_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->promote_level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ItemParamBin)
  return target;
}

size_t ItemParamBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ItemParamBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_id());
  }

  // uint32 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  // uint32 level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 promote_level = 4;
  if (this->promote_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->promote_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemParamBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ItemParamBin)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemParamBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemParamBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ItemParamBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ItemParamBin)
    MergeFrom(*source);
  }
}

void ItemParamBin::MergeFrom(const ItemParamBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ItemParamBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.item_id() != 0) {
    set_item_id(from.item_id());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.promote_level() != 0) {
    set_promote_level(from.promote_level());
  }
}

void ItemParamBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ItemParamBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemParamBin::CopyFrom(const ItemParamBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ItemParamBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemParamBin::IsInitialized() const {
  return true;
}

void ItemParamBin::Swap(ItemParamBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemParamBin::InternalSwap(ItemParamBin* other) {
  using std::swap;
  swap(item_id_, other->item_id_);
  swap(count_, other->count_);
  swap(level_, other->level_);
  swap(promote_level_, other->promote_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemParamBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemParamBin

// uint32 item_id = 1;
void ItemParamBin::clear_item_id() {
  item_id_ = 0u;
}
::google::protobuf::uint32 ItemParamBin::item_id() const {
  // @@protoc_insertion_point(field_get:proto.ItemParamBin.item_id)
  return item_id_;
}
void ItemParamBin::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemParamBin.item_id)
}

// uint32 count = 2;
void ItemParamBin::clear_count() {
  count_ = 0u;
}
::google::protobuf::uint32 ItemParamBin::count() const {
  // @@protoc_insertion_point(field_get:proto.ItemParamBin.count)
  return count_;
}
void ItemParamBin::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemParamBin.count)
}

// uint32 level = 3;
void ItemParamBin::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 ItemParamBin::level() const {
  // @@protoc_insertion_point(field_get:proto.ItemParamBin.level)
  return level_;
}
void ItemParamBin::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemParamBin.level)
}

// uint32 promote_level = 4;
void ItemParamBin::clear_promote_level() {
  promote_level_ = 0u;
}
::google::protobuf::uint32 ItemParamBin::promote_level() const {
  // @@protoc_insertion_point(field_get:proto.ItemParamBin.promote_level)
  return promote_level_;
}
void ItemParamBin::set_promote_level(::google::protobuf::uint32 value) {
  
  promote_level_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemParamBin.promote_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailBin::kTitleFieldNumber;
const int MailBin::kContentFieldNumber;
const int MailBin::kSenderFieldNumber;
const int MailBin::kItemParamListFieldNumber;
const int MailBin::kSendTimeFieldNumber;
const int MailBin::kExpireTimeFieldNumber;
const int MailBin::kImportanceFieldNumber;
const int MailBin::kConfigIdFieldNumber;
const int MailBin::kArgumentListFieldNumber;
const int MailBin::kItemLimitTypeFieldNumber;
const int MailBin::kSourceTypeFieldNumber;
const int MailBin::kTagFieldNumber;
const int MailBin::kReasonTypeFieldNumber;
const int MailBin::kCollectStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailBin::MailBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MailBin)
}
MailBin::MailBin(const MailBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_param_list_(from.item_param_list_),
      argument_list_(from.argument_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sender().size() > 0) {
    sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
  tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tag().size() > 0) {
    tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
  }
  ::memcpy(&send_time_, &from.send_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&collect_state_) -
    reinterpret_cast<char*>(&send_time_)) + sizeof(collect_state_));
  // @@protoc_insertion_point(copy_constructor:proto.MailBin)
}

void MailBin::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&send_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&collect_state_) -
      reinterpret_cast<char*>(&send_time_)) + sizeof(collect_state_));
  _cached_size_ = 0;
}

MailBin::~MailBin() {
  // @@protoc_insertion_point(destructor:proto.MailBin)
  SharedDtor();
}

void MailBin::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MailBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MailBin& MailBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

MailBin* MailBin::New(::google::protobuf::Arena* arena) const {
  MailBin* n = new MailBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MailBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MailBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_param_list_.Clear();
  argument_list_.Clear();
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&send_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&collect_state_) -
      reinterpret_cast<char*>(&send_time_)) + sizeof(collect_state_));
  _internal_metadata_.Clear();
}

bool MailBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MailBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.MailBin.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.MailBin.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sender = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sender().data(), static_cast<int>(this->sender().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.MailBin.sender"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ItemParamBin item_param_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_param_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 send_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &send_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 expire_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &expire_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 importance = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &importance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 config_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string argument_list = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_argument_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->argument_list(this->argument_list_size() - 1).data(),
            static_cast<int>(this->argument_list(this->argument_list_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.MailBin.argument_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 item_limit_type = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_limit_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 source_type = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tag = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tag().data(), static_cast<int>(this->tag().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.MailBin.tag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reason_type = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reason_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 collect_state = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &collect_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MailBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MailBin)
  return false;
#undef DO_
}

void MailBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MailBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.MailBin.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // string content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.MailBin.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->content(), output);
  }

  // string sender = 3;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender().data(), static_cast<int>(this->sender().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.MailBin.sender");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sender(), output);
  }

  // repeated .proto.ItemParamBin item_param_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_param_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->item_param_list(static_cast<int>(i)), output);
  }

  // fixed32 send_time = 5;
  if (this->send_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(5, this->send_time(), output);
  }

  // fixed32 expire_time = 6;
  if (this->expire_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(6, this->expire_time(), output);
  }

  // uint32 importance = 7;
  if (this->importance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->importance(), output);
  }

  // uint32 config_id = 8;
  if (this->config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->config_id(), output);
  }

  // repeated string argument_list = 9;
  for (int i = 0, n = this->argument_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->argument_list(i).data(), static_cast<int>(this->argument_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.MailBin.argument_list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->argument_list(i), output);
  }

  // uint32 item_limit_type = 10;
  if (this->item_limit_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->item_limit_type(), output);
  }

  // uint32 source_type = 11;
  if (this->source_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->source_type(), output);
  }

  // string tag = 12;
  if (this->tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag().data(), static_cast<int>(this->tag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.MailBin.tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->tag(), output);
  }

  // uint32 reason_type = 13;
  if (this->reason_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->reason_type(), output);
  }

  // uint32 collect_state = 14;
  if (this->collect_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->collect_state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MailBin)
}

::google::protobuf::uint8* MailBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MailBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.MailBin.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  // string content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.MailBin.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->content(), target);
  }

  // string sender = 3;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender().data(), static_cast<int>(this->sender().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.MailBin.sender");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sender(), target);
  }

  // repeated .proto.ItemParamBin item_param_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_param_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->item_param_list(static_cast<int>(i)), deterministic, target);
  }

  // fixed32 send_time = 5;
  if (this->send_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(5, this->send_time(), target);
  }

  // fixed32 expire_time = 6;
  if (this->expire_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(6, this->expire_time(), target);
  }

  // uint32 importance = 7;
  if (this->importance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->importance(), target);
  }

  // uint32 config_id = 8;
  if (this->config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->config_id(), target);
  }

  // repeated string argument_list = 9;
  for (int i = 0, n = this->argument_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->argument_list(i).data(), static_cast<int>(this->argument_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.MailBin.argument_list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(9, this->argument_list(i), target);
  }

  // uint32 item_limit_type = 10;
  if (this->item_limit_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->item_limit_type(), target);
  }

  // uint32 source_type = 11;
  if (this->source_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->source_type(), target);
  }

  // string tag = 12;
  if (this->tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag().data(), static_cast<int>(this->tag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.MailBin.tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->tag(), target);
  }

  // uint32 reason_type = 13;
  if (this->reason_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->reason_type(), target);
  }

  // uint32 collect_state = 14;
  if (this->collect_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->collect_state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MailBin)
  return target;
}

size_t MailBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MailBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ItemParamBin item_param_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->item_param_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item_param_list(static_cast<int>(i)));
    }
  }

  // repeated string argument_list = 9;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->argument_list_size());
  for (int i = 0, n = this->argument_list_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->argument_list(i));
  }

  // string title = 1;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string content = 2;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // string sender = 3;
  if (this->sender().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sender());
  }

  // string tag = 12;
  if (this->tag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tag());
  }

  // fixed32 send_time = 5;
  if (this->send_time() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 expire_time = 6;
  if (this->expire_time() != 0) {
    total_size += 1 + 4;
  }

  // uint32 importance = 7;
  if (this->importance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->importance());
  }

  // uint32 config_id = 8;
  if (this->config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_id());
  }

  // uint32 item_limit_type = 10;
  if (this->item_limit_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_limit_type());
  }

  // uint32 source_type = 11;
  if (this->source_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->source_type());
  }

  // uint32 reason_type = 13;
  if (this->reason_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reason_type());
  }

  // uint32 collect_state = 14;
  if (this->collect_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->collect_state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MailBin)
  GOOGLE_DCHECK_NE(&from, this);
  const MailBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MailBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MailBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MailBin)
    MergeFrom(*source);
  }
}

void MailBin::MergeFrom(const MailBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MailBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_param_list_.MergeFrom(from.item_param_list_);
  argument_list_.MergeFrom(from.argument_list_);
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.sender().size() > 0) {

    sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
  if (from.tag().size() > 0) {

    tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
  }
  if (from.send_time() != 0) {
    set_send_time(from.send_time());
  }
  if (from.expire_time() != 0) {
    set_expire_time(from.expire_time());
  }
  if (from.importance() != 0) {
    set_importance(from.importance());
  }
  if (from.config_id() != 0) {
    set_config_id(from.config_id());
  }
  if (from.item_limit_type() != 0) {
    set_item_limit_type(from.item_limit_type());
  }
  if (from.source_type() != 0) {
    set_source_type(from.source_type());
  }
  if (from.reason_type() != 0) {
    set_reason_type(from.reason_type());
  }
  if (from.collect_state() != 0) {
    set_collect_state(from.collect_state());
  }
}

void MailBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MailBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailBin::CopyFrom(const MailBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MailBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailBin::IsInitialized() const {
  return true;
}

void MailBin::Swap(MailBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MailBin::InternalSwap(MailBin* other) {
  using std::swap;
  item_param_list_.InternalSwap(&other->item_param_list_);
  argument_list_.InternalSwap(&other->argument_list_);
  title_.Swap(&other->title_);
  content_.Swap(&other->content_);
  sender_.Swap(&other->sender_);
  tag_.Swap(&other->tag_);
  swap(send_time_, other->send_time_);
  swap(expire_time_, other->expire_time_);
  swap(importance_, other->importance_);
  swap(config_id_, other->config_id_);
  swap(item_limit_type_, other->item_limit_type_);
  swap(source_type_, other->source_type_);
  swap(reason_type_, other->reason_type_);
  swap(collect_state_, other->collect_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MailBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MailBin

// string title = 1;
void MailBin::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MailBin::title() const {
  // @@protoc_insertion_point(field_get:proto.MailBin.title)
  return title_.GetNoArena();
}
void MailBin::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MailBin.title)
}
#if LANG_CXX11
void MailBin::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MailBin.title)
}
#endif
void MailBin::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MailBin.title)
}
void MailBin::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MailBin.title)
}
::std::string* MailBin::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:proto.MailBin.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MailBin::release_title() {
  // @@protoc_insertion_point(field_release:proto.MailBin.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MailBin::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:proto.MailBin.title)
}

// string content = 2;
void MailBin::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MailBin::content() const {
  // @@protoc_insertion_point(field_get:proto.MailBin.content)
  return content_.GetNoArena();
}
void MailBin::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MailBin.content)
}
#if LANG_CXX11
void MailBin::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MailBin.content)
}
#endif
void MailBin::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MailBin.content)
}
void MailBin::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MailBin.content)
}
::std::string* MailBin::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:proto.MailBin.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MailBin::release_content() {
  // @@protoc_insertion_point(field_release:proto.MailBin.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MailBin::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:proto.MailBin.content)
}

// string sender = 3;
void MailBin::clear_sender() {
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MailBin::sender() const {
  // @@protoc_insertion_point(field_get:proto.MailBin.sender)
  return sender_.GetNoArena();
}
void MailBin::set_sender(const ::std::string& value) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MailBin.sender)
}
#if LANG_CXX11
void MailBin::set_sender(::std::string&& value) {
  
  sender_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MailBin.sender)
}
#endif
void MailBin::set_sender(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MailBin.sender)
}
void MailBin::set_sender(const char* value, size_t size) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MailBin.sender)
}
::std::string* MailBin::mutable_sender() {
  
  // @@protoc_insertion_point(field_mutable:proto.MailBin.sender)
  return sender_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MailBin::release_sender() {
  // @@protoc_insertion_point(field_release:proto.MailBin.sender)
  
  return sender_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MailBin::set_allocated_sender(::std::string* sender) {
  if (sender != NULL) {
    
  } else {
    
  }
  sender_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender);
  // @@protoc_insertion_point(field_set_allocated:proto.MailBin.sender)
}

// repeated .proto.ItemParamBin item_param_list = 4;
int MailBin::item_param_list_size() const {
  return item_param_list_.size();
}
void MailBin::clear_item_param_list() {
  item_param_list_.Clear();
}
const ::proto::ItemParamBin& MailBin::item_param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MailBin.item_param_list)
  return item_param_list_.Get(index);
}
::proto::ItemParamBin* MailBin::mutable_item_param_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MailBin.item_param_list)
  return item_param_list_.Mutable(index);
}
::proto::ItemParamBin* MailBin::add_item_param_list() {
  // @@protoc_insertion_point(field_add:proto.MailBin.item_param_list)
  return item_param_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ItemParamBin >*
MailBin::mutable_item_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MailBin.item_param_list)
  return &item_param_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ItemParamBin >&
MailBin::item_param_list() const {
  // @@protoc_insertion_point(field_list:proto.MailBin.item_param_list)
  return item_param_list_;
}

// fixed32 send_time = 5;
void MailBin::clear_send_time() {
  send_time_ = 0u;
}
::google::protobuf::uint32 MailBin::send_time() const {
  // @@protoc_insertion_point(field_get:proto.MailBin.send_time)
  return send_time_;
}
void MailBin::set_send_time(::google::protobuf::uint32 value) {
  
  send_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MailBin.send_time)
}

// fixed32 expire_time = 6;
void MailBin::clear_expire_time() {
  expire_time_ = 0u;
}
::google::protobuf::uint32 MailBin::expire_time() const {
  // @@protoc_insertion_point(field_get:proto.MailBin.expire_time)
  return expire_time_;
}
void MailBin::set_expire_time(::google::protobuf::uint32 value) {
  
  expire_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MailBin.expire_time)
}

// uint32 importance = 7;
void MailBin::clear_importance() {
  importance_ = 0u;
}
::google::protobuf::uint32 MailBin::importance() const {
  // @@protoc_insertion_point(field_get:proto.MailBin.importance)
  return importance_;
}
void MailBin::set_importance(::google::protobuf::uint32 value) {
  
  importance_ = value;
  // @@protoc_insertion_point(field_set:proto.MailBin.importance)
}

// uint32 config_id = 8;
void MailBin::clear_config_id() {
  config_id_ = 0u;
}
::google::protobuf::uint32 MailBin::config_id() const {
  // @@protoc_insertion_point(field_get:proto.MailBin.config_id)
  return config_id_;
}
void MailBin::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MailBin.config_id)
}

// repeated string argument_list = 9;
int MailBin::argument_list_size() const {
  return argument_list_.size();
}
void MailBin::clear_argument_list() {
  argument_list_.Clear();
}
const ::std::string& MailBin::argument_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MailBin.argument_list)
  return argument_list_.Get(index);
}
::std::string* MailBin::mutable_argument_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MailBin.argument_list)
  return argument_list_.Mutable(index);
}
void MailBin::set_argument_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.MailBin.argument_list)
  argument_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void MailBin::set_argument_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.MailBin.argument_list)
  argument_list_.Mutable(index)->assign(std::move(value));
}
#endif
void MailBin::set_argument_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  argument_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.MailBin.argument_list)
}
void MailBin::set_argument_list(int index, const char* value, size_t size) {
  argument_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.MailBin.argument_list)
}
::std::string* MailBin::add_argument_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.MailBin.argument_list)
  return argument_list_.Add();
}
void MailBin::add_argument_list(const ::std::string& value) {
  argument_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.MailBin.argument_list)
}
#if LANG_CXX11
void MailBin::add_argument_list(::std::string&& value) {
  argument_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.MailBin.argument_list)
}
#endif
void MailBin::add_argument_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  argument_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.MailBin.argument_list)
}
void MailBin::add_argument_list(const char* value, size_t size) {
  argument_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.MailBin.argument_list)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
MailBin::argument_list() const {
  // @@protoc_insertion_point(field_list:proto.MailBin.argument_list)
  return argument_list_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
MailBin::mutable_argument_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MailBin.argument_list)
  return &argument_list_;
}

// uint32 item_limit_type = 10;
void MailBin::clear_item_limit_type() {
  item_limit_type_ = 0u;
}
::google::protobuf::uint32 MailBin::item_limit_type() const {
  // @@protoc_insertion_point(field_get:proto.MailBin.item_limit_type)
  return item_limit_type_;
}
void MailBin::set_item_limit_type(::google::protobuf::uint32 value) {
  
  item_limit_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MailBin.item_limit_type)
}

// uint32 source_type = 11;
void MailBin::clear_source_type() {
  source_type_ = 0u;
}
::google::protobuf::uint32 MailBin::source_type() const {
  // @@protoc_insertion_point(field_get:proto.MailBin.source_type)
  return source_type_;
}
void MailBin::set_source_type(::google::protobuf::uint32 value) {
  
  source_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MailBin.source_type)
}

// string tag = 12;
void MailBin::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MailBin::tag() const {
  // @@protoc_insertion_point(field_get:proto.MailBin.tag)
  return tag_.GetNoArena();
}
void MailBin::set_tag(const ::std::string& value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MailBin.tag)
}
#if LANG_CXX11
void MailBin::set_tag(::std::string&& value) {
  
  tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MailBin.tag)
}
#endif
void MailBin::set_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MailBin.tag)
}
void MailBin::set_tag(const char* value, size_t size) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MailBin.tag)
}
::std::string* MailBin::mutable_tag() {
  
  // @@protoc_insertion_point(field_mutable:proto.MailBin.tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MailBin::release_tag() {
  // @@protoc_insertion_point(field_release:proto.MailBin.tag)
  
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MailBin::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    
  } else {
    
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:proto.MailBin.tag)
}

// uint32 reason_type = 13;
void MailBin::clear_reason_type() {
  reason_type_ = 0u;
}
::google::protobuf::uint32 MailBin::reason_type() const {
  // @@protoc_insertion_point(field_get:proto.MailBin.reason_type)
  return reason_type_;
}
void MailBin::set_reason_type(::google::protobuf::uint32 value) {
  
  reason_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MailBin.reason_type)
}

// uint32 collect_state = 14;
void MailBin::clear_collect_state() {
  collect_state_ = 0u;
}
::google::protobuf::uint32 MailBin::collect_state() const {
  // @@protoc_insertion_point(field_get:proto.MailBin.collect_state)
  return collect_state_;
}
void MailBin::set_collect_state(::google::protobuf::uint32 value) {
  
  collect_state_ = value;
  // @@protoc_insertion_point(field_set:proto.MailBin.collect_state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelItemOp::kItemIdFieldNumber;
const int DelItemOp::kItemNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelItemOp::DelItemOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DelItemOp)
}
DelItemOp::DelItemOp(const DelItemOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&item_num_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(item_num_));
  // @@protoc_insertion_point(copy_constructor:proto.DelItemOp)
}

void DelItemOp::SharedCtor() {
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_num_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(item_num_));
  _cached_size_ = 0;
}

DelItemOp::~DelItemOp() {
  // @@protoc_insertion_point(destructor:proto.DelItemOp)
  SharedDtor();
}

void DelItemOp::SharedDtor() {
}

void DelItemOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelItemOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelItemOp& DelItemOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelItemOp* DelItemOp::New(::google::protobuf::Arena* arena) const {
  DelItemOp* n = new DelItemOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelItemOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DelItemOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_num_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(item_num_));
  _internal_metadata_.Clear();
}

bool DelItemOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DelItemOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 item_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DelItemOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DelItemOp)
  return false;
#undef DO_
}

void DelItemOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DelItemOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_id(), output);
  }

  // uint32 item_num = 2;
  if (this->item_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->item_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DelItemOp)
}

::google::protobuf::uint8* DelItemOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DelItemOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_id(), target);
  }

  // uint32 item_num = 2;
  if (this->item_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->item_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DelItemOp)
  return target;
}

size_t DelItemOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DelItemOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_id());
  }

  // uint32 item_num = 2;
  if (this->item_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelItemOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DelItemOp)
  GOOGLE_DCHECK_NE(&from, this);
  const DelItemOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelItemOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DelItemOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DelItemOp)
    MergeFrom(*source);
  }
}

void DelItemOp::MergeFrom(const DelItemOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DelItemOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.item_id() != 0) {
    set_item_id(from.item_id());
  }
  if (from.item_num() != 0) {
    set_item_num(from.item_num());
  }
}

void DelItemOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DelItemOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelItemOp::CopyFrom(const DelItemOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DelItemOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelItemOp::IsInitialized() const {
  return true;
}

void DelItemOp::Swap(DelItemOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelItemOp::InternalSwap(DelItemOp* other) {
  using std::swap;
  swap(item_id_, other->item_id_);
  swap(item_num_, other->item_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelItemOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelItemOp

// uint32 item_id = 1;
void DelItemOp::clear_item_id() {
  item_id_ = 0u;
}
::google::protobuf::uint32 DelItemOp::item_id() const {
  // @@protoc_insertion_point(field_get:proto.DelItemOp.item_id)
  return item_id_;
}
void DelItemOp::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DelItemOp.item_id)
}

// uint32 item_num = 2;
void DelItemOp::clear_item_num() {
  item_num_ = 0u;
}
::google::protobuf::uint32 DelItemOp::item_num() const {
  // @@protoc_insertion_point(field_get:proto.DelItemOp.item_num)
  return item_num_;
}
void DelItemOp::set_item_num(::google::protobuf::uint32 value) {
  
  item_num_ = value;
  // @@protoc_insertion_point(field_set:proto.DelItemOp.item_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelItemNegativeOp::kItemIdFieldNumber;
const int DelItemNegativeOp::kItemNumFieldNumber;
const int DelItemNegativeOp::kRemainNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelItemNegativeOp::DelItemNegativeOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DelItemNegativeOp)
}
DelItemNegativeOp::DelItemNegativeOp(const DelItemNegativeOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&remain_num_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(remain_num_));
  // @@protoc_insertion_point(copy_constructor:proto.DelItemNegativeOp)
}

void DelItemNegativeOp::SharedCtor() {
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remain_num_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(remain_num_));
  _cached_size_ = 0;
}

DelItemNegativeOp::~DelItemNegativeOp() {
  // @@protoc_insertion_point(destructor:proto.DelItemNegativeOp)
  SharedDtor();
}

void DelItemNegativeOp::SharedDtor() {
}

void DelItemNegativeOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelItemNegativeOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelItemNegativeOp& DelItemNegativeOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelItemNegativeOp* DelItemNegativeOp::New(::google::protobuf::Arena* arena) const {
  DelItemNegativeOp* n = new DelItemNegativeOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelItemNegativeOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DelItemNegativeOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remain_num_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(remain_num_));
  _internal_metadata_.Clear();
}

bool DelItemNegativeOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DelItemNegativeOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 item_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 remain_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remain_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DelItemNegativeOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DelItemNegativeOp)
  return false;
#undef DO_
}

void DelItemNegativeOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DelItemNegativeOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_id(), output);
  }

  // uint32 item_num = 2;
  if (this->item_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->item_num(), output);
  }

  // uint32 remain_num = 3;
  if (this->remain_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->remain_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DelItemNegativeOp)
}

::google::protobuf::uint8* DelItemNegativeOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DelItemNegativeOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_id(), target);
  }

  // uint32 item_num = 2;
  if (this->item_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->item_num(), target);
  }

  // uint32 remain_num = 3;
  if (this->remain_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->remain_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DelItemNegativeOp)
  return target;
}

size_t DelItemNegativeOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DelItemNegativeOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_id());
  }

  // uint32 item_num = 2;
  if (this->item_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_num());
  }

  // uint32 remain_num = 3;
  if (this->remain_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->remain_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelItemNegativeOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DelItemNegativeOp)
  GOOGLE_DCHECK_NE(&from, this);
  const DelItemNegativeOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelItemNegativeOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DelItemNegativeOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DelItemNegativeOp)
    MergeFrom(*source);
  }
}

void DelItemNegativeOp::MergeFrom(const DelItemNegativeOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DelItemNegativeOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.item_id() != 0) {
    set_item_id(from.item_id());
  }
  if (from.item_num() != 0) {
    set_item_num(from.item_num());
  }
  if (from.remain_num() != 0) {
    set_remain_num(from.remain_num());
  }
}

void DelItemNegativeOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DelItemNegativeOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelItemNegativeOp::CopyFrom(const DelItemNegativeOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DelItemNegativeOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelItemNegativeOp::IsInitialized() const {
  return true;
}

void DelItemNegativeOp::Swap(DelItemNegativeOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelItemNegativeOp::InternalSwap(DelItemNegativeOp* other) {
  using std::swap;
  swap(item_id_, other->item_id_);
  swap(item_num_, other->item_num_);
  swap(remain_num_, other->remain_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelItemNegativeOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelItemNegativeOp

// uint32 item_id = 1;
void DelItemNegativeOp::clear_item_id() {
  item_id_ = 0u;
}
::google::protobuf::uint32 DelItemNegativeOp::item_id() const {
  // @@protoc_insertion_point(field_get:proto.DelItemNegativeOp.item_id)
  return item_id_;
}
void DelItemNegativeOp::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DelItemNegativeOp.item_id)
}

// uint32 item_num = 2;
void DelItemNegativeOp::clear_item_num() {
  item_num_ = 0u;
}
::google::protobuf::uint32 DelItemNegativeOp::item_num() const {
  // @@protoc_insertion_point(field_get:proto.DelItemNegativeOp.item_num)
  return item_num_;
}
void DelItemNegativeOp::set_item_num(::google::protobuf::uint32 value) {
  
  item_num_ = value;
  // @@protoc_insertion_point(field_set:proto.DelItemNegativeOp.item_num)
}

// uint32 remain_num = 3;
void DelItemNegativeOp::clear_remain_num() {
  remain_num_ = 0u;
}
::google::protobuf::uint32 DelItemNegativeOp::remain_num() const {
  // @@protoc_insertion_point(field_get:proto.DelItemNegativeOp.remain_num)
  return remain_num_;
}
void DelItemNegativeOp::set_remain_num(::google::protobuf::uint32 value) {
  
  remain_num_ = value;
  // @@protoc_insertion_point(field_set:proto.DelItemNegativeOp.remain_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelEquipOp::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelEquipOp::DelEquipOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DelEquipOp)
}
DelEquipOp::DelEquipOp(const DelEquipOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:proto.DelEquipOp)
}

void DelEquipOp::SharedCtor() {
  guid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

DelEquipOp::~DelEquipOp() {
  // @@protoc_insertion_point(destructor:proto.DelEquipOp)
  SharedDtor();
}

void DelEquipOp::SharedDtor() {
}

void DelEquipOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelEquipOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelEquipOp& DelEquipOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelEquipOp* DelEquipOp::New(::google::protobuf::Arena* arena) const {
  DelEquipOp* n = new DelEquipOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelEquipOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DelEquipOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool DelEquipOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DelEquipOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DelEquipOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DelEquipOp)
  return false;
#undef DO_
}

void DelEquipOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DelEquipOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DelEquipOp)
}

::google::protobuf::uint8* DelEquipOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DelEquipOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DelEquipOp)
  return target;
}

size_t DelEquipOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DelEquipOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelEquipOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DelEquipOp)
  GOOGLE_DCHECK_NE(&from, this);
  const DelEquipOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelEquipOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DelEquipOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DelEquipOp)
    MergeFrom(*source);
  }
}

void DelEquipOp::MergeFrom(const DelEquipOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DelEquipOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guid() != 0) {
    set_guid(from.guid());
  }
}

void DelEquipOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DelEquipOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelEquipOp::CopyFrom(const DelEquipOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DelEquipOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelEquipOp::IsInitialized() const {
  return true;
}

void DelEquipOp::Swap(DelEquipOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelEquipOp::InternalSwap(DelEquipOp* other) {
  using std::swap;
  swap(guid_, other->guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelEquipOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelEquipOp

// uint64 guid = 1;
void DelEquipOp::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 DelEquipOp::guid() const {
  // @@protoc_insertion_point(field_get:proto.DelEquipOp.guid)
  return guid_;
}
void DelEquipOp::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.DelEquipOp.guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerGotoOp::kSceneIdFieldNumber;
const int PlayerGotoOp::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerGotoOp::PlayerGotoOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerGotoOp)
}
PlayerGotoOp::PlayerGotoOp(const PlayerGotoOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::proto::VectorBin(*from.pos_);
  } else {
    pos_ = NULL;
  }
  scene_id_ = from.scene_id_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerGotoOp)
}

void PlayerGotoOp::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(scene_id_));
  _cached_size_ = 0;
}

PlayerGotoOp::~PlayerGotoOp() {
  // @@protoc_insertion_point(destructor:proto.PlayerGotoOp)
  SharedDtor();
}

void PlayerGotoOp::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
}

void PlayerGotoOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerGotoOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerGotoOp& PlayerGotoOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerGotoOp* PlayerGotoOp::New(::google::protobuf::Arena* arena) const {
  PlayerGotoOp* n = new PlayerGotoOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerGotoOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerGotoOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  scene_id_ = 0u;
  _internal_metadata_.Clear();
}

bool PlayerGotoOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerGotoOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.VectorBin pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerGotoOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerGotoOp)
  return false;
#undef DO_
}

void PlayerGotoOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerGotoOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // .proto.VectorBin pos = 2;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pos_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerGotoOp)
}

::google::protobuf::uint8* PlayerGotoOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerGotoOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // .proto.VectorBin pos = 2;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->pos_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerGotoOp)
  return target;
}

size_t PlayerGotoOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerGotoOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.VectorBin pos = 2;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerGotoOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerGotoOp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerGotoOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerGotoOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerGotoOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerGotoOp)
    MergeFrom(*source);
  }
}

void PlayerGotoOp::MergeFrom(const PlayerGotoOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerGotoOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::proto::VectorBin::MergeFrom(from.pos());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void PlayerGotoOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerGotoOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerGotoOp::CopyFrom(const PlayerGotoOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerGotoOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerGotoOp::IsInitialized() const {
  return true;
}

void PlayerGotoOp::Swap(PlayerGotoOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerGotoOp::InternalSwap(PlayerGotoOp* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerGotoOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerGotoOp

// uint32 scene_id = 1;
void PlayerGotoOp::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 PlayerGotoOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGotoOp.scene_id)
  return scene_id_;
}
void PlayerGotoOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGotoOp.scene_id)
}

// .proto.VectorBin pos = 2;
bool PlayerGotoOp::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void PlayerGotoOp::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::VectorBin& PlayerGotoOp::pos() const {
  const ::proto::VectorBin* p = pos_;
  // @@protoc_insertion_point(field_get:proto.PlayerGotoOp.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
::proto::VectorBin* PlayerGotoOp::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerGotoOp.pos)
  return pos_;
}
::proto::VectorBin* PlayerGotoOp::release_pos() {
  // @@protoc_insertion_point(field_release:proto.PlayerGotoOp.pos)
  
  ::proto::VectorBin* temp = pos_;
  pos_ = NULL;
  return temp;
}
void PlayerGotoOp::set_allocated_pos(::proto::VectorBin* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerGotoOp.pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResetParentQuestOp::kParentQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResetParentQuestOp::ResetParentQuestOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ResetParentQuestOp)
}
ResetParentQuestOp::ResetParentQuestOp(const ResetParentQuestOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_quest_id_ = from.parent_quest_id_;
  // @@protoc_insertion_point(copy_constructor:proto.ResetParentQuestOp)
}

void ResetParentQuestOp::SharedCtor() {
  parent_quest_id_ = 0u;
  _cached_size_ = 0;
}

ResetParentQuestOp::~ResetParentQuestOp() {
  // @@protoc_insertion_point(destructor:proto.ResetParentQuestOp)
  SharedDtor();
}

void ResetParentQuestOp::SharedDtor() {
}

void ResetParentQuestOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResetParentQuestOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResetParentQuestOp& ResetParentQuestOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResetParentQuestOp* ResetParentQuestOp::New(::google::protobuf::Arena* arena) const {
  ResetParentQuestOp* n = new ResetParentQuestOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResetParentQuestOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ResetParentQuestOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_quest_id_ = 0u;
  _internal_metadata_.Clear();
}

bool ResetParentQuestOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ResetParentQuestOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 parent_quest_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ResetParentQuestOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ResetParentQuestOp)
  return false;
#undef DO_
}

void ResetParentQuestOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ResetParentQuestOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 parent_quest_id = 3;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->parent_quest_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ResetParentQuestOp)
}

::google::protobuf::uint8* ResetParentQuestOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ResetParentQuestOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 parent_quest_id = 3;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->parent_quest_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ResetParentQuestOp)
  return target;
}

size_t ResetParentQuestOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ResetParentQuestOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 parent_quest_id = 3;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResetParentQuestOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ResetParentQuestOp)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetParentQuestOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResetParentQuestOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ResetParentQuestOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ResetParentQuestOp)
    MergeFrom(*source);
  }
}

void ResetParentQuestOp::MergeFrom(const ResetParentQuestOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ResetParentQuestOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
}

void ResetParentQuestOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ResetParentQuestOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetParentQuestOp::CopyFrom(const ResetParentQuestOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ResetParentQuestOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetParentQuestOp::IsInitialized() const {
  return true;
}

void ResetParentQuestOp::Swap(ResetParentQuestOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResetParentQuestOp::InternalSwap(ResetParentQuestOp* other) {
  using std::swap;
  swap(parent_quest_id_, other->parent_quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResetParentQuestOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResetParentQuestOp

// uint32 parent_quest_id = 3;
void ResetParentQuestOp::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 ResetParentQuestOp::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.ResetParentQuestOp.parent_quest_id)
  return parent_quest_id_;
}
void ResetParentQuestOp::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ResetParentQuestOp.parent_quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RefreshGroupOp::kGroupIdFieldNumber;
const int RefreshGroupOp::kSuiteIdFieldNumber;
const int RefreshGroupOp::kSceneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RefreshGroupOp::RefreshGroupOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RefreshGroupOp)
}
RefreshGroupOp::RefreshGroupOp(const RefreshGroupOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&scene_id_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(scene_id_));
  // @@protoc_insertion_point(copy_constructor:proto.RefreshGroupOp)
}

void RefreshGroupOp::SharedCtor() {
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(scene_id_));
  _cached_size_ = 0;
}

RefreshGroupOp::~RefreshGroupOp() {
  // @@protoc_insertion_point(destructor:proto.RefreshGroupOp)
  SharedDtor();
}

void RefreshGroupOp::SharedDtor() {
}

void RefreshGroupOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RefreshGroupOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RefreshGroupOp& RefreshGroupOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

RefreshGroupOp* RefreshGroupOp::New(::google::protobuf::Arena* arena) const {
  RefreshGroupOp* n = new RefreshGroupOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RefreshGroupOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RefreshGroupOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(scene_id_));
  _internal_metadata_.Clear();
}

bool RefreshGroupOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RefreshGroupOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 suite_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &suite_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RefreshGroupOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RefreshGroupOp)
  return false;
#undef DO_
}

void RefreshGroupOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RefreshGroupOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->group_id(), output);
  }

  // uint32 suite_id = 2;
  if (this->suite_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->suite_id(), output);
  }

  // uint32 scene_id = 3;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->scene_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RefreshGroupOp)
}

::google::protobuf::uint8* RefreshGroupOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RefreshGroupOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->group_id(), target);
  }

  // uint32 suite_id = 2;
  if (this->suite_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->suite_id(), target);
  }

  // uint32 scene_id = 3;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->scene_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RefreshGroupOp)
  return target;
}

size_t RefreshGroupOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RefreshGroupOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  // uint32 suite_id = 2;
  if (this->suite_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->suite_id());
  }

  // uint32 scene_id = 3;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RefreshGroupOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RefreshGroupOp)
  GOOGLE_DCHECK_NE(&from, this);
  const RefreshGroupOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RefreshGroupOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RefreshGroupOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RefreshGroupOp)
    MergeFrom(*source);
  }
}

void RefreshGroupOp::MergeFrom(const RefreshGroupOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RefreshGroupOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.suite_id() != 0) {
    set_suite_id(from.suite_id());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void RefreshGroupOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RefreshGroupOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshGroupOp::CopyFrom(const RefreshGroupOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RefreshGroupOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshGroupOp::IsInitialized() const {
  return true;
}

void RefreshGroupOp::Swap(RefreshGroupOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RefreshGroupOp::InternalSwap(RefreshGroupOp* other) {
  using std::swap;
  swap(group_id_, other->group_id_);
  swap(suite_id_, other->suite_id_);
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RefreshGroupOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RefreshGroupOp

// uint32 group_id = 1;
void RefreshGroupOp::clear_group_id() {
  group_id_ = 0u;
}
::google::protobuf::uint32 RefreshGroupOp::group_id() const {
  // @@protoc_insertion_point(field_get:proto.RefreshGroupOp.group_id)
  return group_id_;
}
void RefreshGroupOp::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RefreshGroupOp.group_id)
}

// uint32 suite_id = 2;
void RefreshGroupOp::clear_suite_id() {
  suite_id_ = 0u;
}
::google::protobuf::uint32 RefreshGroupOp::suite_id() const {
  // @@protoc_insertion_point(field_get:proto.RefreshGroupOp.suite_id)
  return suite_id_;
}
void RefreshGroupOp::set_suite_id(::google::protobuf::uint32 value) {
  
  suite_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RefreshGroupOp.suite_id)
}

// uint32 scene_id = 3;
void RefreshGroupOp::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 RefreshGroupOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.RefreshGroupOp.scene_id)
  return scene_id_;
}
void RefreshGroupOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RefreshGroupOp.scene_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetScenePointLockStatusOp::kSceneIdFieldNumber;
const int SetScenePointLockStatusOp::kPointIdFieldNumber;
const int SetScenePointLockStatusOp::kIsLockedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetScenePointLockStatusOp::SetScenePointLockStatusOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetScenePointLockStatusOp)
}
SetScenePointLockStatusOp::SetScenePointLockStatusOp(const SetScenePointLockStatusOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_locked_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(is_locked_));
  // @@protoc_insertion_point(copy_constructor:proto.SetScenePointLockStatusOp)
}

void SetScenePointLockStatusOp::SharedCtor() {
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_locked_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(is_locked_));
  _cached_size_ = 0;
}

SetScenePointLockStatusOp::~SetScenePointLockStatusOp() {
  // @@protoc_insertion_point(destructor:proto.SetScenePointLockStatusOp)
  SharedDtor();
}

void SetScenePointLockStatusOp::SharedDtor() {
}

void SetScenePointLockStatusOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetScenePointLockStatusOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetScenePointLockStatusOp& SetScenePointLockStatusOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetScenePointLockStatusOp* SetScenePointLockStatusOp::New(::google::protobuf::Arena* arena) const {
  SetScenePointLockStatusOp* n = new SetScenePointLockStatusOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetScenePointLockStatusOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetScenePointLockStatusOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_locked_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(is_locked_));
  _internal_metadata_.Clear();
}

bool SetScenePointLockStatusOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetScenePointLockStatusOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 point_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &point_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_locked = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_locked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetScenePointLockStatusOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetScenePointLockStatusOp)
  return false;
#undef DO_
}

void SetScenePointLockStatusOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetScenePointLockStatusOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // uint32 point_id = 2;
  if (this->point_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->point_id(), output);
  }

  // bool is_locked = 3;
  if (this->is_locked() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_locked(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetScenePointLockStatusOp)
}

::google::protobuf::uint8* SetScenePointLockStatusOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetScenePointLockStatusOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // uint32 point_id = 2;
  if (this->point_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->point_id(), target);
  }

  // bool is_locked = 3;
  if (this->is_locked() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_locked(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetScenePointLockStatusOp)
  return target;
}

size_t SetScenePointLockStatusOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetScenePointLockStatusOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 point_id = 2;
  if (this->point_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->point_id());
  }

  // bool is_locked = 3;
  if (this->is_locked() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetScenePointLockStatusOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetScenePointLockStatusOp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetScenePointLockStatusOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetScenePointLockStatusOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetScenePointLockStatusOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetScenePointLockStatusOp)
    MergeFrom(*source);
  }
}

void SetScenePointLockStatusOp::MergeFrom(const SetScenePointLockStatusOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetScenePointLockStatusOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.point_id() != 0) {
    set_point_id(from.point_id());
  }
  if (from.is_locked() != 0) {
    set_is_locked(from.is_locked());
  }
}

void SetScenePointLockStatusOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetScenePointLockStatusOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetScenePointLockStatusOp::CopyFrom(const SetScenePointLockStatusOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetScenePointLockStatusOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetScenePointLockStatusOp::IsInitialized() const {
  return true;
}

void SetScenePointLockStatusOp::Swap(SetScenePointLockStatusOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetScenePointLockStatusOp::InternalSwap(SetScenePointLockStatusOp* other) {
  using std::swap;
  swap(scene_id_, other->scene_id_);
  swap(point_id_, other->point_id_);
  swap(is_locked_, other->is_locked_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetScenePointLockStatusOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetScenePointLockStatusOp

// uint32 scene_id = 1;
void SetScenePointLockStatusOp::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 SetScenePointLockStatusOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.SetScenePointLockStatusOp.scene_id)
  return scene_id_;
}
void SetScenePointLockStatusOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetScenePointLockStatusOp.scene_id)
}

// uint32 point_id = 2;
void SetScenePointLockStatusOp::clear_point_id() {
  point_id_ = 0u;
}
::google::protobuf::uint32 SetScenePointLockStatusOp::point_id() const {
  // @@protoc_insertion_point(field_get:proto.SetScenePointLockStatusOp.point_id)
  return point_id_;
}
void SetScenePointLockStatusOp::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetScenePointLockStatusOp.point_id)
}

// bool is_locked = 3;
void SetScenePointLockStatusOp::clear_is_locked() {
  is_locked_ = false;
}
bool SetScenePointLockStatusOp::is_locked() const {
  // @@protoc_insertion_point(field_get:proto.SetScenePointLockStatusOp.is_locked)
  return is_locked_;
}
void SetScenePointLockStatusOp::set_is_locked(bool value) {
  
  is_locked_ = value;
  // @@protoc_insertion_point(field_set:proto.SetScenePointLockStatusOp.is_locked)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerNickNameOp::kNickNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerNickNameOp::SetPlayerNickNameOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPlayerNickNameOp)
}
SetPlayerNickNameOp::SetPlayerNickNameOp(const SetPlayerNickNameOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nick_name().size() > 0) {
    nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_name_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.SetPlayerNickNameOp)
}

void SetPlayerNickNameOp::SharedCtor() {
  nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SetPlayerNickNameOp::~SetPlayerNickNameOp() {
  // @@protoc_insertion_point(destructor:proto.SetPlayerNickNameOp)
  SharedDtor();
}

void SetPlayerNickNameOp::SharedDtor() {
  nick_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetPlayerNickNameOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerNickNameOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPlayerNickNameOp& SetPlayerNickNameOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPlayerNickNameOp* SetPlayerNickNameOp::New(::google::protobuf::Arena* arena) const {
  SetPlayerNickNameOp* n = new SetPlayerNickNameOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerNickNameOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPlayerNickNameOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SetPlayerNickNameOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPlayerNickNameOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string nick_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nick_name().data(), static_cast<int>(this->nick_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SetPlayerNickNameOp.nick_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPlayerNickNameOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPlayerNickNameOp)
  return false;
#undef DO_
}

void SetPlayerNickNameOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPlayerNickNameOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nick_name = 1;
  if (this->nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_name().data(), static_cast<int>(this->nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SetPlayerNickNameOp.nick_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nick_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPlayerNickNameOp)
}

::google::protobuf::uint8* SetPlayerNickNameOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPlayerNickNameOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nick_name = 1;
  if (this->nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_name().data(), static_cast<int>(this->nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SetPlayerNickNameOp.nick_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nick_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPlayerNickNameOp)
  return target;
}

size_t SetPlayerNickNameOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPlayerNickNameOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string nick_name = 1;
  if (this->nick_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nick_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerNickNameOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPlayerNickNameOp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPlayerNickNameOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerNickNameOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPlayerNickNameOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPlayerNickNameOp)
    MergeFrom(*source);
  }
}

void SetPlayerNickNameOp::MergeFrom(const SetPlayerNickNameOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPlayerNickNameOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nick_name().size() > 0) {

    nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_name_);
  }
}

void SetPlayerNickNameOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPlayerNickNameOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerNickNameOp::CopyFrom(const SetPlayerNickNameOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPlayerNickNameOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerNickNameOp::IsInitialized() const {
  return true;
}

void SetPlayerNickNameOp::Swap(SetPlayerNickNameOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerNickNameOp::InternalSwap(SetPlayerNickNameOp* other) {
  using std::swap;
  nick_name_.Swap(&other->nick_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerNickNameOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerNickNameOp

// string nick_name = 1;
void SetPlayerNickNameOp::clear_nick_name() {
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetPlayerNickNameOp::nick_name() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerNickNameOp.nick_name)
  return nick_name_.GetNoArena();
}
void SetPlayerNickNameOp::set_nick_name(const ::std::string& value) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetPlayerNickNameOp.nick_name)
}
#if LANG_CXX11
void SetPlayerNickNameOp::set_nick_name(::std::string&& value) {
  
  nick_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetPlayerNickNameOp.nick_name)
}
#endif
void SetPlayerNickNameOp::set_nick_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetPlayerNickNameOp.nick_name)
}
void SetPlayerNickNameOp::set_nick_name(const char* value, size_t size) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetPlayerNickNameOp.nick_name)
}
::std::string* SetPlayerNickNameOp::mutable_nick_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerNickNameOp.nick_name)
  return nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetPlayerNickNameOp::release_nick_name() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerNickNameOp.nick_name)
  
  return nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetPlayerNickNameOp::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name != NULL) {
    
  } else {
    
  }
  nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick_name);
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerNickNameOp.nick_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RefreshShopOp::RefreshShopOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RefreshShopOp)
}
RefreshShopOp::RefreshShopOp(const RefreshShopOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.RefreshShopOp)
}

void RefreshShopOp::SharedCtor() {
  _cached_size_ = 0;
}

RefreshShopOp::~RefreshShopOp() {
  // @@protoc_insertion_point(destructor:proto.RefreshShopOp)
  SharedDtor();
}

void RefreshShopOp::SharedDtor() {
}

void RefreshShopOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RefreshShopOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RefreshShopOp& RefreshShopOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

RefreshShopOp* RefreshShopOp::New(::google::protobuf::Arena* arena) const {
  RefreshShopOp* n = new RefreshShopOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RefreshShopOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RefreshShopOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool RefreshShopOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RefreshShopOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RefreshShopOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RefreshShopOp)
  return false;
#undef DO_
}

void RefreshShopOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RefreshShopOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RefreshShopOp)
}

::google::protobuf::uint8* RefreshShopOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RefreshShopOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RefreshShopOp)
  return target;
}

size_t RefreshShopOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RefreshShopOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RefreshShopOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RefreshShopOp)
  GOOGLE_DCHECK_NE(&from, this);
  const RefreshShopOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RefreshShopOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RefreshShopOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RefreshShopOp)
    MergeFrom(*source);
  }
}

void RefreshShopOp::MergeFrom(const RefreshShopOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RefreshShopOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RefreshShopOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RefreshShopOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshShopOp::CopyFrom(const RefreshShopOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RefreshShopOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshShopOp::IsInitialized() const {
  return true;
}

void RefreshShopOp::Swap(RefreshShopOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RefreshShopOp::InternalSwap(RefreshShopOp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RefreshShopOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RefreshShopOp

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnlockTalentOp::kAvatarIdFieldNumber;
const int UnlockTalentOp::kSkillDepotIdFieldNumber;
const int UnlockTalentOp::kTalentIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnlockTalentOp::UnlockTalentOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UnlockTalentOp)
}
UnlockTalentOp::UnlockTalentOp(const UnlockTalentOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&avatar_id_, &from.avatar_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&talent_id_) -
    reinterpret_cast<char*>(&avatar_id_)) + sizeof(talent_id_));
  // @@protoc_insertion_point(copy_constructor:proto.UnlockTalentOp)
}

void UnlockTalentOp::SharedCtor() {
  ::memset(&avatar_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&talent_id_) -
      reinterpret_cast<char*>(&avatar_id_)) + sizeof(talent_id_));
  _cached_size_ = 0;
}

UnlockTalentOp::~UnlockTalentOp() {
  // @@protoc_insertion_point(destructor:proto.UnlockTalentOp)
  SharedDtor();
}

void UnlockTalentOp::SharedDtor() {
}

void UnlockTalentOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnlockTalentOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnlockTalentOp& UnlockTalentOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnlockTalentOp* UnlockTalentOp::New(::google::protobuf::Arena* arena) const {
  UnlockTalentOp* n = new UnlockTalentOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnlockTalentOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UnlockTalentOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&avatar_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&talent_id_) -
      reinterpret_cast<char*>(&avatar_id_)) + sizeof(talent_id_));
  _internal_metadata_.Clear();
}

bool UnlockTalentOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UnlockTalentOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 avatar_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 skill_depot_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skill_depot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 talent_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &talent_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UnlockTalentOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UnlockTalentOp)
  return false;
#undef DO_
}

void UnlockTalentOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UnlockTalentOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->avatar_id(), output);
  }

  // uint32 skill_depot_id = 2;
  if (this->skill_depot_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->skill_depot_id(), output);
  }

  // uint32 talent_id = 3;
  if (this->talent_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->talent_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UnlockTalentOp)
}

::google::protobuf::uint8* UnlockTalentOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UnlockTalentOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->avatar_id(), target);
  }

  // uint32 skill_depot_id = 2;
  if (this->skill_depot_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->skill_depot_id(), target);
  }

  // uint32 talent_id = 3;
  if (this->talent_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->talent_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UnlockTalentOp)
  return target;
}

size_t UnlockTalentOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UnlockTalentOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_id());
  }

  // uint32 skill_depot_id = 2;
  if (this->skill_depot_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->skill_depot_id());
  }

  // uint32 talent_id = 3;
  if (this->talent_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->talent_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnlockTalentOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UnlockTalentOp)
  GOOGLE_DCHECK_NE(&from, this);
  const UnlockTalentOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnlockTalentOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UnlockTalentOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UnlockTalentOp)
    MergeFrom(*source);
  }
}

void UnlockTalentOp::MergeFrom(const UnlockTalentOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UnlockTalentOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_id() != 0) {
    set_avatar_id(from.avatar_id());
  }
  if (from.skill_depot_id() != 0) {
    set_skill_depot_id(from.skill_depot_id());
  }
  if (from.talent_id() != 0) {
    set_talent_id(from.talent_id());
  }
}

void UnlockTalentOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UnlockTalentOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnlockTalentOp::CopyFrom(const UnlockTalentOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UnlockTalentOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockTalentOp::IsInitialized() const {
  return true;
}

void UnlockTalentOp::Swap(UnlockTalentOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnlockTalentOp::InternalSwap(UnlockTalentOp* other) {
  using std::swap;
  swap(avatar_id_, other->avatar_id_);
  swap(skill_depot_id_, other->skill_depot_id_);
  swap(talent_id_, other->talent_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnlockTalentOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnlockTalentOp

// uint32 avatar_id = 1;
void UnlockTalentOp::clear_avatar_id() {
  avatar_id_ = 0u;
}
::google::protobuf::uint32 UnlockTalentOp::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.UnlockTalentOp.avatar_id)
  return avatar_id_;
}
void UnlockTalentOp::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockTalentOp.avatar_id)
}

// uint32 skill_depot_id = 2;
void UnlockTalentOp::clear_skill_depot_id() {
  skill_depot_id_ = 0u;
}
::google::protobuf::uint32 UnlockTalentOp::skill_depot_id() const {
  // @@protoc_insertion_point(field_get:proto.UnlockTalentOp.skill_depot_id)
  return skill_depot_id_;
}
void UnlockTalentOp::set_skill_depot_id(::google::protobuf::uint32 value) {
  
  skill_depot_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockTalentOp.skill_depot_id)
}

// uint32 talent_id = 3;
void UnlockTalentOp::clear_talent_id() {
  talent_id_ = 0u;
}
::google::protobuf::uint32 UnlockTalentOp::talent_id() const {
  // @@protoc_insertion_point(field_get:proto.UnlockTalentOp.talent_id)
  return talent_id_;
}
void UnlockTalentOp::set_talent_id(::google::protobuf::uint32 value) {
  
  talent_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockTalentOp.talent_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakeOffEquipOp::kAvatarIdFieldNumber;
const int TakeOffEquipOp::kEquipTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakeOffEquipOp::TakeOffEquipOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TakeOffEquipOp)
}
TakeOffEquipOp::TakeOffEquipOp(const TakeOffEquipOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&avatar_id_, &from.avatar_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&equip_type_) -
    reinterpret_cast<char*>(&avatar_id_)) + sizeof(equip_type_));
  // @@protoc_insertion_point(copy_constructor:proto.TakeOffEquipOp)
}

void TakeOffEquipOp::SharedCtor() {
  ::memset(&avatar_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&equip_type_) -
      reinterpret_cast<char*>(&avatar_id_)) + sizeof(equip_type_));
  _cached_size_ = 0;
}

TakeOffEquipOp::~TakeOffEquipOp() {
  // @@protoc_insertion_point(destructor:proto.TakeOffEquipOp)
  SharedDtor();
}

void TakeOffEquipOp::SharedDtor() {
}

void TakeOffEquipOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TakeOffEquipOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakeOffEquipOp& TakeOffEquipOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

TakeOffEquipOp* TakeOffEquipOp::New(::google::protobuf::Arena* arena) const {
  TakeOffEquipOp* n = new TakeOffEquipOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TakeOffEquipOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TakeOffEquipOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&avatar_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&equip_type_) -
      reinterpret_cast<char*>(&avatar_id_)) + sizeof(equip_type_));
  _internal_metadata_.Clear();
}

bool TakeOffEquipOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TakeOffEquipOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 avatar_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 equip_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &equip_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TakeOffEquipOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TakeOffEquipOp)
  return false;
#undef DO_
}

void TakeOffEquipOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TakeOffEquipOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->avatar_id(), output);
  }

  // uint32 equip_type = 2;
  if (this->equip_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->equip_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TakeOffEquipOp)
}

::google::protobuf::uint8* TakeOffEquipOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TakeOffEquipOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->avatar_id(), target);
  }

  // uint32 equip_type = 2;
  if (this->equip_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->equip_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TakeOffEquipOp)
  return target;
}

size_t TakeOffEquipOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TakeOffEquipOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_id());
  }

  // uint32 equip_type = 2;
  if (this->equip_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->equip_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TakeOffEquipOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TakeOffEquipOp)
  GOOGLE_DCHECK_NE(&from, this);
  const TakeOffEquipOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakeOffEquipOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TakeOffEquipOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TakeOffEquipOp)
    MergeFrom(*source);
  }
}

void TakeOffEquipOp::MergeFrom(const TakeOffEquipOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TakeOffEquipOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_id() != 0) {
    set_avatar_id(from.avatar_id());
  }
  if (from.equip_type() != 0) {
    set_equip_type(from.equip_type());
  }
}

void TakeOffEquipOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TakeOffEquipOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakeOffEquipOp::CopyFrom(const TakeOffEquipOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TakeOffEquipOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakeOffEquipOp::IsInitialized() const {
  return true;
}

void TakeOffEquipOp::Swap(TakeOffEquipOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakeOffEquipOp::InternalSwap(TakeOffEquipOp* other) {
  using std::swap;
  swap(avatar_id_, other->avatar_id_);
  swap(equip_type_, other->equip_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TakeOffEquipOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TakeOffEquipOp

// uint32 avatar_id = 1;
void TakeOffEquipOp::clear_avatar_id() {
  avatar_id_ = 0u;
}
::google::protobuf::uint32 TakeOffEquipOp::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.TakeOffEquipOp.avatar_id)
  return avatar_id_;
}
void TakeOffEquipOp::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeOffEquipOp.avatar_id)
}

// uint32 equip_type = 2;
void TakeOffEquipOp::clear_equip_type() {
  equip_type_ = 0u;
}
::google::protobuf::uint32 TakeOffEquipOp::equip_type() const {
  // @@protoc_insertion_point(field_get:proto.TakeOffEquipOp.equip_type)
  return equip_type_;
}
void TakeOffEquipOp::set_equip_type(::google::protobuf::uint32 value) {
  
  equip_type_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeOffEquipOp.equip_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelMailOp::kMailIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelMailOp::DelMailOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DelMailOp)
}
DelMailOp::DelMailOp(const DelMailOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mail_id_list_(from.mail_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.DelMailOp)
}

void DelMailOp::SharedCtor() {
  _cached_size_ = 0;
}

DelMailOp::~DelMailOp() {
  // @@protoc_insertion_point(destructor:proto.DelMailOp)
  SharedDtor();
}

void DelMailOp::SharedDtor() {
}

void DelMailOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelMailOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelMailOp& DelMailOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelMailOp* DelMailOp::New(::google::protobuf::Arena* arena) const {
  DelMailOp* n = new DelMailOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelMailOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DelMailOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mail_id_list_.Clear();
  _internal_metadata_.Clear();
}

bool DelMailOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DelMailOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 mail_id_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_mail_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_mail_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DelMailOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DelMailOp)
  return false;
#undef DO_
}

void DelMailOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DelMailOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 mail_id_list = 1;
  if (this->mail_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _mail_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->mail_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->mail_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DelMailOp)
}

::google::protobuf::uint8* DelMailOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DelMailOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 mail_id_list = 1;
  if (this->mail_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _mail_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->mail_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DelMailOp)
  return target;
}

size_t DelMailOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DelMailOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 mail_id_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->mail_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _mail_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelMailOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DelMailOp)
  GOOGLE_DCHECK_NE(&from, this);
  const DelMailOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelMailOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DelMailOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DelMailOp)
    MergeFrom(*source);
  }
}

void DelMailOp::MergeFrom(const DelMailOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DelMailOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mail_id_list_.MergeFrom(from.mail_id_list_);
}

void DelMailOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DelMailOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelMailOp::CopyFrom(const DelMailOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DelMailOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelMailOp::IsInitialized() const {
  return true;
}

void DelMailOp::Swap(DelMailOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelMailOp::InternalSwap(DelMailOp* other) {
  using std::swap;
  mail_id_list_.InternalSwap(&other->mail_id_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelMailOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelMailOp

// repeated uint32 mail_id_list = 1;
int DelMailOp::mail_id_list_size() const {
  return mail_id_list_.size();
}
void DelMailOp::clear_mail_id_list() {
  mail_id_list_.Clear();
}
::google::protobuf::uint32 DelMailOp::mail_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.DelMailOp.mail_id_list)
  return mail_id_list_.Get(index);
}
void DelMailOp::set_mail_id_list(int index, ::google::protobuf::uint32 value) {
  mail_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.DelMailOp.mail_id_list)
}
void DelMailOp::add_mail_id_list(::google::protobuf::uint32 value) {
  mail_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.DelMailOp.mail_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DelMailOp::mail_id_list() const {
  // @@protoc_insertion_point(field_list:proto.DelMailOp.mail_id_list)
  return mail_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DelMailOp::mutable_mail_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.DelMailOp.mail_id_list)
  return &mail_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnlockAreaOp::kAreaIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnlockAreaOp::UnlockAreaOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UnlockAreaOp)
}
UnlockAreaOp::UnlockAreaOp(const UnlockAreaOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  area_id_ = from.area_id_;
  // @@protoc_insertion_point(copy_constructor:proto.UnlockAreaOp)
}

void UnlockAreaOp::SharedCtor() {
  area_id_ = 0u;
  _cached_size_ = 0;
}

UnlockAreaOp::~UnlockAreaOp() {
  // @@protoc_insertion_point(destructor:proto.UnlockAreaOp)
  SharedDtor();
}

void UnlockAreaOp::SharedDtor() {
}

void UnlockAreaOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnlockAreaOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnlockAreaOp& UnlockAreaOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnlockAreaOp* UnlockAreaOp::New(::google::protobuf::Arena* arena) const {
  UnlockAreaOp* n = new UnlockAreaOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnlockAreaOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UnlockAreaOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  area_id_ = 0u;
  _internal_metadata_.Clear();
}

bool UnlockAreaOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UnlockAreaOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 area_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &area_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UnlockAreaOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UnlockAreaOp)
  return false;
#undef DO_
}

void UnlockAreaOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UnlockAreaOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 area_id = 1;
  if (this->area_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->area_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UnlockAreaOp)
}

::google::protobuf::uint8* UnlockAreaOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UnlockAreaOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 area_id = 1;
  if (this->area_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->area_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UnlockAreaOp)
  return target;
}

size_t UnlockAreaOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UnlockAreaOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 area_id = 1;
  if (this->area_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->area_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnlockAreaOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UnlockAreaOp)
  GOOGLE_DCHECK_NE(&from, this);
  const UnlockAreaOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnlockAreaOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UnlockAreaOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UnlockAreaOp)
    MergeFrom(*source);
  }
}

void UnlockAreaOp::MergeFrom(const UnlockAreaOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UnlockAreaOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.area_id() != 0) {
    set_area_id(from.area_id());
  }
}

void UnlockAreaOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UnlockAreaOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnlockAreaOp::CopyFrom(const UnlockAreaOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UnlockAreaOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockAreaOp::IsInitialized() const {
  return true;
}

void UnlockAreaOp::Swap(UnlockAreaOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnlockAreaOp::InternalSwap(UnlockAreaOp* other) {
  using std::swap;
  swap(area_id_, other->area_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnlockAreaOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnlockAreaOp

// uint32 area_id = 1;
void UnlockAreaOp::clear_area_id() {
  area_id_ = 0u;
}
::google::protobuf::uint32 UnlockAreaOp::area_id() const {
  // @@protoc_insertion_point(field_get:proto.UnlockAreaOp.area_id)
  return area_id_;
}
void UnlockAreaOp::set_area_id(::google::protobuf::uint32 value) {
  
  area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockAreaOp.area_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FinishDailyTaskOp::kDailyTaskIdFieldNumber;
const int FinishDailyTaskOp::kDailyTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FinishDailyTaskOp::FinishDailyTaskOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FinishDailyTaskOp)
}
FinishDailyTaskOp::FinishDailyTaskOp(const FinishDailyTaskOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&daily_task_id_, &from.daily_task_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&daily_time_) -
    reinterpret_cast<char*>(&daily_task_id_)) + sizeof(daily_time_));
  // @@protoc_insertion_point(copy_constructor:proto.FinishDailyTaskOp)
}

void FinishDailyTaskOp::SharedCtor() {
  ::memset(&daily_task_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&daily_time_) -
      reinterpret_cast<char*>(&daily_task_id_)) + sizeof(daily_time_));
  _cached_size_ = 0;
}

FinishDailyTaskOp::~FinishDailyTaskOp() {
  // @@protoc_insertion_point(destructor:proto.FinishDailyTaskOp)
  SharedDtor();
}

void FinishDailyTaskOp::SharedDtor() {
}

void FinishDailyTaskOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FinishDailyTaskOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FinishDailyTaskOp& FinishDailyTaskOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

FinishDailyTaskOp* FinishDailyTaskOp::New(::google::protobuf::Arena* arena) const {
  FinishDailyTaskOp* n = new FinishDailyTaskOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FinishDailyTaskOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FinishDailyTaskOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&daily_task_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&daily_time_) -
      reinterpret_cast<char*>(&daily_task_id_)) + sizeof(daily_time_));
  _internal_metadata_.Clear();
}

bool FinishDailyTaskOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FinishDailyTaskOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 daily_task_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &daily_task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 daily_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &daily_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FinishDailyTaskOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FinishDailyTaskOp)
  return false;
#undef DO_
}

void FinishDailyTaskOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FinishDailyTaskOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 daily_task_id = 1;
  if (this->daily_task_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->daily_task_id(), output);
  }

  // uint32 daily_time = 2;
  if (this->daily_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->daily_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FinishDailyTaskOp)
}

::google::protobuf::uint8* FinishDailyTaskOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FinishDailyTaskOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 daily_task_id = 1;
  if (this->daily_task_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->daily_task_id(), target);
  }

  // uint32 daily_time = 2;
  if (this->daily_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->daily_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FinishDailyTaskOp)
  return target;
}

size_t FinishDailyTaskOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FinishDailyTaskOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 daily_task_id = 1;
  if (this->daily_task_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->daily_task_id());
  }

  // uint32 daily_time = 2;
  if (this->daily_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->daily_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FinishDailyTaskOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FinishDailyTaskOp)
  GOOGLE_DCHECK_NE(&from, this);
  const FinishDailyTaskOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FinishDailyTaskOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FinishDailyTaskOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FinishDailyTaskOp)
    MergeFrom(*source);
  }
}

void FinishDailyTaskOp::MergeFrom(const FinishDailyTaskOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FinishDailyTaskOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.daily_task_id() != 0) {
    set_daily_task_id(from.daily_task_id());
  }
  if (from.daily_time() != 0) {
    set_daily_time(from.daily_time());
  }
}

void FinishDailyTaskOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FinishDailyTaskOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FinishDailyTaskOp::CopyFrom(const FinishDailyTaskOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FinishDailyTaskOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FinishDailyTaskOp::IsInitialized() const {
  return true;
}

void FinishDailyTaskOp::Swap(FinishDailyTaskOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FinishDailyTaskOp::InternalSwap(FinishDailyTaskOp* other) {
  using std::swap;
  swap(daily_task_id_, other->daily_task_id_);
  swap(daily_time_, other->daily_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FinishDailyTaskOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FinishDailyTaskOp

// uint32 daily_task_id = 1;
void FinishDailyTaskOp::clear_daily_task_id() {
  daily_task_id_ = 0u;
}
::google::protobuf::uint32 FinishDailyTaskOp::daily_task_id() const {
  // @@protoc_insertion_point(field_get:proto.FinishDailyTaskOp.daily_task_id)
  return daily_task_id_;
}
void FinishDailyTaskOp::set_daily_task_id(::google::protobuf::uint32 value) {
  
  daily_task_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FinishDailyTaskOp.daily_task_id)
}

// uint32 daily_time = 2;
void FinishDailyTaskOp::clear_daily_time() {
  daily_time_ = 0u;
}
::google::protobuf::uint32 FinishDailyTaskOp::daily_time() const {
  // @@protoc_insertion_point(field_get:proto.FinishDailyTaskOp.daily_time)
  return daily_time_;
}
void FinishDailyTaskOp::set_daily_time(::google::protobuf::uint32 value) {
  
  daily_time_ = value;
  // @@protoc_insertion_point(field_set:proto.FinishDailyTaskOp.daily_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddItemOp::kItemIdFieldNumber;
const int AddItemOp::kItemCountFieldNumber;
const int AddItemOp::kReliquaryFieldNumber;
const int AddItemOp::kWeaponFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddItemOp::AddItemOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddItemOp)
}
AddItemOp::AddItemOp(const AddItemOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&item_count_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(item_count_));
  clear_has_detail();
  switch (from.detail_case()) {
    case kReliquary: {
      mutable_reliquary()->::proto::ReliquaryBin::MergeFrom(from.reliquary());
      break;
    }
    case kWeapon: {
      mutable_weapon()->::proto::WeaponBin::MergeFrom(from.weapon());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.AddItemOp)
}

void AddItemOp::SharedCtor() {
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_count_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(item_count_));
  clear_has_detail();
  _cached_size_ = 0;
}

AddItemOp::~AddItemOp() {
  // @@protoc_insertion_point(destructor:proto.AddItemOp)
  SharedDtor();
}

void AddItemOp::SharedDtor() {
  if (has_detail()) {
    clear_detail();
  }
}

void AddItemOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddItemOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddItemOp& AddItemOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddItemOp* AddItemOp::New(::google::protobuf::Arena* arena) const {
  AddItemOp* n = new AddItemOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddItemOp::clear_detail() {
// @@protoc_insertion_point(one_of_clear_start:proto.AddItemOp)
  switch (detail_case()) {
    case kReliquary: {
      delete detail_.reliquary_;
      break;
    }
    case kWeapon: {
      delete detail_.weapon_;
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DETAIL_NOT_SET;
}


void AddItemOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddItemOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_count_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(item_count_));
  clear_detail();
  _internal_metadata_.Clear();
}

bool AddItemOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddItemOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 item_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ReliquaryBin reliquary = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reliquary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.WeaponBin weapon = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 818 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_weapon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddItemOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddItemOp)
  return false;
#undef DO_
}

void AddItemOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddItemOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_id(), output);
  }

  // uint32 item_count = 2;
  if (this->item_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->item_count(), output);
  }

  // .proto.ReliquaryBin reliquary = 101;
  if (has_reliquary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101, *detail_.reliquary_, output);
  }

  // .proto.WeaponBin weapon = 102;
  if (has_weapon()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      102, *detail_.weapon_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddItemOp)
}

::google::protobuf::uint8* AddItemOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddItemOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_id(), target);
  }

  // uint32 item_count = 2;
  if (this->item_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->item_count(), target);
  }

  // .proto.ReliquaryBin reliquary = 101;
  if (has_reliquary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        101, *detail_.reliquary_, deterministic, target);
  }

  // .proto.WeaponBin weapon = 102;
  if (has_weapon()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        102, *detail_.weapon_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddItemOp)
  return target;
}

size_t AddItemOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddItemOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_id());
  }

  // uint32 item_count = 2;
  if (this->item_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_count());
  }

  switch (detail_case()) {
    // .proto.ReliquaryBin reliquary = 101;
    case kReliquary: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.reliquary_);
      break;
    }
    // .proto.WeaponBin weapon = 102;
    case kWeapon: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.weapon_);
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddItemOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddItemOp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddItemOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddItemOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddItemOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddItemOp)
    MergeFrom(*source);
  }
}

void AddItemOp::MergeFrom(const AddItemOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddItemOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.item_id() != 0) {
    set_item_id(from.item_id());
  }
  if (from.item_count() != 0) {
    set_item_count(from.item_count());
  }
  switch (from.detail_case()) {
    case kReliquary: {
      mutable_reliquary()->::proto::ReliquaryBin::MergeFrom(from.reliquary());
      break;
    }
    case kWeapon: {
      mutable_weapon()->::proto::WeaponBin::MergeFrom(from.weapon());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
}

void AddItemOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddItemOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddItemOp::CopyFrom(const AddItemOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddItemOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddItemOp::IsInitialized() const {
  return true;
}

void AddItemOp::Swap(AddItemOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddItemOp::InternalSwap(AddItemOp* other) {
  using std::swap;
  swap(item_id_, other->item_id_);
  swap(item_count_, other->item_count_);
  swap(detail_, other->detail_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddItemOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddItemOp

// uint32 item_id = 1;
void AddItemOp::clear_item_id() {
  item_id_ = 0u;
}
::google::protobuf::uint32 AddItemOp::item_id() const {
  // @@protoc_insertion_point(field_get:proto.AddItemOp.item_id)
  return item_id_;
}
void AddItemOp::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddItemOp.item_id)
}

// uint32 item_count = 2;
void AddItemOp::clear_item_count() {
  item_count_ = 0u;
}
::google::protobuf::uint32 AddItemOp::item_count() const {
  // @@protoc_insertion_point(field_get:proto.AddItemOp.item_count)
  return item_count_;
}
void AddItemOp::set_item_count(::google::protobuf::uint32 value) {
  
  item_count_ = value;
  // @@protoc_insertion_point(field_set:proto.AddItemOp.item_count)
}

// .proto.ReliquaryBin reliquary = 101;
bool AddItemOp::has_reliquary() const {
  return detail_case() == kReliquary;
}
void AddItemOp::set_has_reliquary() {
  _oneof_case_[0] = kReliquary;
}
void AddItemOp::clear_reliquary() {
  if (has_reliquary()) {
    delete detail_.reliquary_;
    clear_has_detail();
  }
}
 const ::proto::ReliquaryBin& AddItemOp::reliquary() const {
  // @@protoc_insertion_point(field_get:proto.AddItemOp.reliquary)
  return has_reliquary()
      ? *detail_.reliquary_
      : ::proto::ReliquaryBin::default_instance();
}
::proto::ReliquaryBin* AddItemOp::mutable_reliquary() {
  if (!has_reliquary()) {
    clear_detail();
    set_has_reliquary();
    detail_.reliquary_ = new ::proto::ReliquaryBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.AddItemOp.reliquary)
  return detail_.reliquary_;
}
::proto::ReliquaryBin* AddItemOp::release_reliquary() {
  // @@protoc_insertion_point(field_release:proto.AddItemOp.reliquary)
  if (has_reliquary()) {
    clear_has_detail();
    ::proto::ReliquaryBin* temp = detail_.reliquary_;
    detail_.reliquary_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void AddItemOp::set_allocated_reliquary(::proto::ReliquaryBin* reliquary) {
  clear_detail();
  if (reliquary) {
    set_has_reliquary();
    detail_.reliquary_ = reliquary;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AddItemOp.reliquary)
}

// .proto.WeaponBin weapon = 102;
bool AddItemOp::has_weapon() const {
  return detail_case() == kWeapon;
}
void AddItemOp::set_has_weapon() {
  _oneof_case_[0] = kWeapon;
}
void AddItemOp::clear_weapon() {
  if (has_weapon()) {
    delete detail_.weapon_;
    clear_has_detail();
  }
}
 const ::proto::WeaponBin& AddItemOp::weapon() const {
  // @@protoc_insertion_point(field_get:proto.AddItemOp.weapon)
  return has_weapon()
      ? *detail_.weapon_
      : ::proto::WeaponBin::default_instance();
}
::proto::WeaponBin* AddItemOp::mutable_weapon() {
  if (!has_weapon()) {
    clear_detail();
    set_has_weapon();
    detail_.weapon_ = new ::proto::WeaponBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.AddItemOp.weapon)
  return detail_.weapon_;
}
::proto::WeaponBin* AddItemOp::release_weapon() {
  // @@protoc_insertion_point(field_release:proto.AddItemOp.weapon)
  if (has_weapon()) {
    clear_has_detail();
    ::proto::WeaponBin* temp = detail_.weapon_;
    detail_.weapon_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void AddItemOp::set_allocated_weapon(::proto::WeaponBin* weapon) {
  clear_detail();
  if (weapon) {
    set_has_weapon();
    detail_.weapon_ = weapon;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AddItemOp.weapon)
}

bool AddItemOp::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
void AddItemOp::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
AddItemOp::DetailCase AddItemOp::detail_case() const {
  return AddItemOp::DetailCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyBornPosOp::kSceneIdFieldNumber;
const int ModifyBornPosOp::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyBornPosOp::ModifyBornPosOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ModifyBornPosOp)
}
ModifyBornPosOp::ModifyBornPosOp(const ModifyBornPosOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::proto::VectorBin(*from.pos_);
  } else {
    pos_ = NULL;
  }
  scene_id_ = from.scene_id_;
  // @@protoc_insertion_point(copy_constructor:proto.ModifyBornPosOp)
}

void ModifyBornPosOp::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(scene_id_));
  _cached_size_ = 0;
}

ModifyBornPosOp::~ModifyBornPosOp() {
  // @@protoc_insertion_point(destructor:proto.ModifyBornPosOp)
  SharedDtor();
}

void ModifyBornPosOp::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
}

void ModifyBornPosOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyBornPosOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModifyBornPosOp& ModifyBornPosOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModifyBornPosOp* ModifyBornPosOp::New(::google::protobuf::Arena* arena) const {
  ModifyBornPosOp* n = new ModifyBornPosOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyBornPosOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ModifyBornPosOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  scene_id_ = 0u;
  _internal_metadata_.Clear();
}

bool ModifyBornPosOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ModifyBornPosOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.VectorBin pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ModifyBornPosOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ModifyBornPosOp)
  return false;
#undef DO_
}

void ModifyBornPosOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ModifyBornPosOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // .proto.VectorBin pos = 2;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pos_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ModifyBornPosOp)
}

::google::protobuf::uint8* ModifyBornPosOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ModifyBornPosOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // .proto.VectorBin pos = 2;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->pos_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ModifyBornPosOp)
  return target;
}

size_t ModifyBornPosOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ModifyBornPosOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.VectorBin pos = 2;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyBornPosOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ModifyBornPosOp)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyBornPosOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyBornPosOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ModifyBornPosOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ModifyBornPosOp)
    MergeFrom(*source);
  }
}

void ModifyBornPosOp::MergeFrom(const ModifyBornPosOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ModifyBornPosOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::proto::VectorBin::MergeFrom(from.pos());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void ModifyBornPosOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ModifyBornPosOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyBornPosOp::CopyFrom(const ModifyBornPosOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ModifyBornPosOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyBornPosOp::IsInitialized() const {
  return true;
}

void ModifyBornPosOp::Swap(ModifyBornPosOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyBornPosOp::InternalSwap(ModifyBornPosOp* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyBornPosOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModifyBornPosOp

// uint32 scene_id = 1;
void ModifyBornPosOp::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 ModifyBornPosOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ModifyBornPosOp.scene_id)
  return scene_id_;
}
void ModifyBornPosOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ModifyBornPosOp.scene_id)
}

// .proto.VectorBin pos = 2;
bool ModifyBornPosOp::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void ModifyBornPosOp::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::VectorBin& ModifyBornPosOp::pos() const {
  const ::proto::VectorBin* p = pos_;
  // @@protoc_insertion_point(field_get:proto.ModifyBornPosOp.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
::proto::VectorBin* ModifyBornPosOp::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.ModifyBornPosOp.pos)
  return pos_;
}
::proto::VectorBin* ModifyBornPosOp::release_pos() {
  // @@protoc_insertion_point(field_release:proto.ModifyBornPosOp.pos)
  
  ::proto::VectorBin* temp = pos_;
  pos_ = NULL;
  return temp;
}
void ModifyBornPosOp::set_allocated_pos(::proto::VectorBin* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ModifyBornPosOp.pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubCoinNegativeOp::kScoinFieldNumber;
const int SubCoinNegativeOp::kHcoinFieldNumber;
const int SubCoinNegativeOp::kMcoinFieldNumber;
const int SubCoinNegativeOp::kHomeCoinFieldNumber;
const int SubCoinNegativeOp::kPlatformTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubCoinNegativeOp::SubCoinNegativeOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SubCoinNegativeOp)
}
SubCoinNegativeOp::SubCoinNegativeOp(const SubCoinNegativeOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scoin_, &from.scoin_,
    static_cast<size_t>(reinterpret_cast<char*>(&platform_type_) -
    reinterpret_cast<char*>(&scoin_)) + sizeof(platform_type_));
  // @@protoc_insertion_point(copy_constructor:proto.SubCoinNegativeOp)
}

void SubCoinNegativeOp::SharedCtor() {
  ::memset(&scoin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&platform_type_) -
      reinterpret_cast<char*>(&scoin_)) + sizeof(platform_type_));
  _cached_size_ = 0;
}

SubCoinNegativeOp::~SubCoinNegativeOp() {
  // @@protoc_insertion_point(destructor:proto.SubCoinNegativeOp)
  SharedDtor();
}

void SubCoinNegativeOp::SharedDtor() {
}

void SubCoinNegativeOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubCoinNegativeOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubCoinNegativeOp& SubCoinNegativeOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SubCoinNegativeOp* SubCoinNegativeOp::New(::google::protobuf::Arena* arena) const {
  SubCoinNegativeOp* n = new SubCoinNegativeOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubCoinNegativeOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SubCoinNegativeOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scoin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&platform_type_) -
      reinterpret_cast<char*>(&scoin_)) + sizeof(platform_type_));
  _internal_metadata_.Clear();
}

bool SubCoinNegativeOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SubCoinNegativeOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scoin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scoin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hcoin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hcoin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mcoin = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mcoin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 home_coin = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &home_coin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PlatformType platform_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_platform_type(static_cast< ::proto::PlatformType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SubCoinNegativeOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SubCoinNegativeOp)
  return false;
#undef DO_
}

void SubCoinNegativeOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SubCoinNegativeOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scoin = 1;
  if (this->scoin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scoin(), output);
  }

  // uint32 hcoin = 2;
  if (this->hcoin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hcoin(), output);
  }

  // uint32 mcoin = 3;
  if (this->mcoin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->mcoin(), output);
  }

  // uint32 home_coin = 4;
  if (this->home_coin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->home_coin(), output);
  }

  // .proto.PlatformType platform_type = 5;
  if (this->platform_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->platform_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SubCoinNegativeOp)
}

::google::protobuf::uint8* SubCoinNegativeOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SubCoinNegativeOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scoin = 1;
  if (this->scoin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scoin(), target);
  }

  // uint32 hcoin = 2;
  if (this->hcoin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hcoin(), target);
  }

  // uint32 mcoin = 3;
  if (this->mcoin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->mcoin(), target);
  }

  // uint32 home_coin = 4;
  if (this->home_coin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->home_coin(), target);
  }

  // .proto.PlatformType platform_type = 5;
  if (this->platform_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->platform_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SubCoinNegativeOp)
  return target;
}

size_t SubCoinNegativeOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SubCoinNegativeOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 scoin = 1;
  if (this->scoin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scoin());
  }

  // uint32 hcoin = 2;
  if (this->hcoin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hcoin());
  }

  // uint32 mcoin = 3;
  if (this->mcoin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mcoin());
  }

  // uint32 home_coin = 4;
  if (this->home_coin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->home_coin());
  }

  // .proto.PlatformType platform_type = 5;
  if (this->platform_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->platform_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubCoinNegativeOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SubCoinNegativeOp)
  GOOGLE_DCHECK_NE(&from, this);
  const SubCoinNegativeOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubCoinNegativeOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SubCoinNegativeOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SubCoinNegativeOp)
    MergeFrom(*source);
  }
}

void SubCoinNegativeOp::MergeFrom(const SubCoinNegativeOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SubCoinNegativeOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scoin() != 0) {
    set_scoin(from.scoin());
  }
  if (from.hcoin() != 0) {
    set_hcoin(from.hcoin());
  }
  if (from.mcoin() != 0) {
    set_mcoin(from.mcoin());
  }
  if (from.home_coin() != 0) {
    set_home_coin(from.home_coin());
  }
  if (from.platform_type() != 0) {
    set_platform_type(from.platform_type());
  }
}

void SubCoinNegativeOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SubCoinNegativeOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubCoinNegativeOp::CopyFrom(const SubCoinNegativeOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SubCoinNegativeOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubCoinNegativeOp::IsInitialized() const {
  return true;
}

void SubCoinNegativeOp::Swap(SubCoinNegativeOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubCoinNegativeOp::InternalSwap(SubCoinNegativeOp* other) {
  using std::swap;
  swap(scoin_, other->scoin_);
  swap(hcoin_, other->hcoin_);
  swap(mcoin_, other->mcoin_);
  swap(home_coin_, other->home_coin_);
  swap(platform_type_, other->platform_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubCoinNegativeOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubCoinNegativeOp

// uint32 scoin = 1;
void SubCoinNegativeOp::clear_scoin() {
  scoin_ = 0u;
}
::google::protobuf::uint32 SubCoinNegativeOp::scoin() const {
  // @@protoc_insertion_point(field_get:proto.SubCoinNegativeOp.scoin)
  return scoin_;
}
void SubCoinNegativeOp::set_scoin(::google::protobuf::uint32 value) {
  
  scoin_ = value;
  // @@protoc_insertion_point(field_set:proto.SubCoinNegativeOp.scoin)
}

// uint32 hcoin = 2;
void SubCoinNegativeOp::clear_hcoin() {
  hcoin_ = 0u;
}
::google::protobuf::uint32 SubCoinNegativeOp::hcoin() const {
  // @@protoc_insertion_point(field_get:proto.SubCoinNegativeOp.hcoin)
  return hcoin_;
}
void SubCoinNegativeOp::set_hcoin(::google::protobuf::uint32 value) {
  
  hcoin_ = value;
  // @@protoc_insertion_point(field_set:proto.SubCoinNegativeOp.hcoin)
}

// uint32 mcoin = 3;
void SubCoinNegativeOp::clear_mcoin() {
  mcoin_ = 0u;
}
::google::protobuf::uint32 SubCoinNegativeOp::mcoin() const {
  // @@protoc_insertion_point(field_get:proto.SubCoinNegativeOp.mcoin)
  return mcoin_;
}
void SubCoinNegativeOp::set_mcoin(::google::protobuf::uint32 value) {
  
  mcoin_ = value;
  // @@protoc_insertion_point(field_set:proto.SubCoinNegativeOp.mcoin)
}

// uint32 home_coin = 4;
void SubCoinNegativeOp::clear_home_coin() {
  home_coin_ = 0u;
}
::google::protobuf::uint32 SubCoinNegativeOp::home_coin() const {
  // @@protoc_insertion_point(field_get:proto.SubCoinNegativeOp.home_coin)
  return home_coin_;
}
void SubCoinNegativeOp::set_home_coin(::google::protobuf::uint32 value) {
  
  home_coin_ = value;
  // @@protoc_insertion_point(field_set:proto.SubCoinNegativeOp.home_coin)
}

// .proto.PlatformType platform_type = 5;
void SubCoinNegativeOp::clear_platform_type() {
  platform_type_ = 0;
}
::proto::PlatformType SubCoinNegativeOp::platform_type() const {
  // @@protoc_insertion_point(field_get:proto.SubCoinNegativeOp.platform_type)
  return static_cast< ::proto::PlatformType >(platform_type_);
}
void SubCoinNegativeOp::set_platform_type(::proto::PlatformType value) {
  
  platform_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SubCoinNegativeOp.platform_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

SetQuestContentProgressOp::SetQuestContentProgressOp_FinishProgressMapEntry::SetQuestContentProgressOp_FinishProgressMapEntry() {}
SetQuestContentProgressOp::SetQuestContentProgressOp_FinishProgressMapEntry::SetQuestContentProgressOp_FinishProgressMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata SetQuestContentProgressOp::SetQuestContentProgressOp_FinishProgressMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[28];
}
void SetQuestContentProgressOp::SetQuestContentProgressOp_FinishProgressMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void SetQuestContentProgressOp::SetQuestContentProgressOp_FinishProgressMapEntry::MergeFrom(const SetQuestContentProgressOp_FinishProgressMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

SetQuestContentProgressOp::SetQuestContentProgressOp_FailProgressMapEntry::SetQuestContentProgressOp_FailProgressMapEntry() {}
SetQuestContentProgressOp::SetQuestContentProgressOp_FailProgressMapEntry::SetQuestContentProgressOp_FailProgressMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata SetQuestContentProgressOp::SetQuestContentProgressOp_FailProgressMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[29];
}
void SetQuestContentProgressOp::SetQuestContentProgressOp_FailProgressMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void SetQuestContentProgressOp::SetQuestContentProgressOp_FailProgressMapEntry::MergeFrom(const SetQuestContentProgressOp_FailProgressMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetQuestContentProgressOp::kQuestIdFieldNumber;
const int SetQuestContentProgressOp::kFinishProgressMapFieldNumber;
const int SetQuestContentProgressOp::kFailProgressMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetQuestContentProgressOp::SetQuestContentProgressOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetQuestContentProgressOp)
}
SetQuestContentProgressOp::SetQuestContentProgressOp(const SetQuestContentProgressOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  finish_progress_map_.MergeFrom(from.finish_progress_map_);
  fail_progress_map_.MergeFrom(from.fail_progress_map_);
  quest_id_ = from.quest_id_;
  // @@protoc_insertion_point(copy_constructor:proto.SetQuestContentProgressOp)
}

void SetQuestContentProgressOp::SharedCtor() {
  quest_id_ = 0u;
  _cached_size_ = 0;
}

SetQuestContentProgressOp::~SetQuestContentProgressOp() {
  // @@protoc_insertion_point(destructor:proto.SetQuestContentProgressOp)
  SharedDtor();
}

void SetQuestContentProgressOp::SharedDtor() {
}

void SetQuestContentProgressOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetQuestContentProgressOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetQuestContentProgressOp& SetQuestContentProgressOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetQuestContentProgressOp* SetQuestContentProgressOp::New(::google::protobuf::Arena* arena) const {
  SetQuestContentProgressOp* n = new SetQuestContentProgressOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetQuestContentProgressOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetQuestContentProgressOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  finish_progress_map_.Clear();
  fail_progress_map_.Clear();
  quest_id_ = 0u;
  _internal_metadata_.Clear();
}

bool SetQuestContentProgressOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetQuestContentProgressOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 quest_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> finish_progress_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          SetQuestContentProgressOp_FinishProgressMapEntry::Parser< ::google::protobuf::internal::MapField<
              SetQuestContentProgressOp_FinishProgressMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&finish_progress_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> fail_progress_map = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          SetQuestContentProgressOp_FailProgressMapEntry::Parser< ::google::protobuf::internal::MapField<
              SetQuestContentProgressOp_FailProgressMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&fail_progress_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetQuestContentProgressOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetQuestContentProgressOp)
  return false;
#undef DO_
}

void SetQuestContentProgressOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetQuestContentProgressOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 1;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->quest_id(), output);
  }

  // map<uint32, uint32> finish_progress_map = 2;
  if (!this->finish_progress_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->finish_progress_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->finish_progress_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->finish_progress_map().begin();
          it != this->finish_progress_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SetQuestContentProgressOp_FinishProgressMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(finish_progress_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<SetQuestContentProgressOp_FinishProgressMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->finish_progress_map().begin();
          it != this->finish_progress_map().end(); ++it) {
        entry.reset(finish_progress_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    }
  }

  // map<uint32, uint32> fail_progress_map = 3;
  if (!this->fail_progress_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->fail_progress_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->fail_progress_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->fail_progress_map().begin();
          it != this->fail_progress_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SetQuestContentProgressOp_FailProgressMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(fail_progress_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<SetQuestContentProgressOp_FailProgressMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->fail_progress_map().begin();
          it != this->fail_progress_map().end(); ++it) {
        entry.reset(fail_progress_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetQuestContentProgressOp)
}

::google::protobuf::uint8* SetQuestContentProgressOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetQuestContentProgressOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 1;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->quest_id(), target);
  }

  // map<uint32, uint32> finish_progress_map = 2;
  if (!this->finish_progress_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->finish_progress_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->finish_progress_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->finish_progress_map().begin();
          it != this->finish_progress_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SetQuestContentProgressOp_FinishProgressMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(finish_progress_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<SetQuestContentProgressOp_FinishProgressMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->finish_progress_map().begin();
          it != this->finish_progress_map().end(); ++it) {
        entry.reset(finish_progress_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    }
  }

  // map<uint32, uint32> fail_progress_map = 3;
  if (!this->fail_progress_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->fail_progress_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->fail_progress_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->fail_progress_map().begin();
          it != this->fail_progress_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SetQuestContentProgressOp_FailProgressMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(fail_progress_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<SetQuestContentProgressOp_FailProgressMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->fail_progress_map().begin();
          it != this->fail_progress_map().end(); ++it) {
        entry.reset(fail_progress_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetQuestContentProgressOp)
  return target;
}

size_t SetQuestContentProgressOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetQuestContentProgressOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> finish_progress_map = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->finish_progress_map_size());
  {
    ::google::protobuf::scoped_ptr<SetQuestContentProgressOp_FinishProgressMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->finish_progress_map().begin();
        it != this->finish_progress_map().end(); ++it) {
      entry.reset(finish_progress_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<uint32, uint32> fail_progress_map = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->fail_progress_map_size());
  {
    ::google::protobuf::scoped_ptr<SetQuestContentProgressOp_FailProgressMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->fail_progress_map().begin();
        it != this->fail_progress_map().end(); ++it) {
      entry.reset(fail_progress_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint32 quest_id = 1;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetQuestContentProgressOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetQuestContentProgressOp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetQuestContentProgressOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetQuestContentProgressOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetQuestContentProgressOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetQuestContentProgressOp)
    MergeFrom(*source);
  }
}

void SetQuestContentProgressOp::MergeFrom(const SetQuestContentProgressOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetQuestContentProgressOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  finish_progress_map_.MergeFrom(from.finish_progress_map_);
  fail_progress_map_.MergeFrom(from.fail_progress_map_);
  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
}

void SetQuestContentProgressOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetQuestContentProgressOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetQuestContentProgressOp::CopyFrom(const SetQuestContentProgressOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetQuestContentProgressOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetQuestContentProgressOp::IsInitialized() const {
  return true;
}

void SetQuestContentProgressOp::Swap(SetQuestContentProgressOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetQuestContentProgressOp::InternalSwap(SetQuestContentProgressOp* other) {
  using std::swap;
  finish_progress_map_.Swap(&other->finish_progress_map_);
  fail_progress_map_.Swap(&other->fail_progress_map_);
  swap(quest_id_, other->quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetQuestContentProgressOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetQuestContentProgressOp

// uint32 quest_id = 1;
void SetQuestContentProgressOp::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 SetQuestContentProgressOp::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.SetQuestContentProgressOp.quest_id)
  return quest_id_;
}
void SetQuestContentProgressOp::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetQuestContentProgressOp.quest_id)
}

// map<uint32, uint32> finish_progress_map = 2;
int SetQuestContentProgressOp::finish_progress_map_size() const {
  return finish_progress_map_.size();
}
void SetQuestContentProgressOp::clear_finish_progress_map() {
  finish_progress_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
SetQuestContentProgressOp::finish_progress_map() const {
  // @@protoc_insertion_point(field_map:proto.SetQuestContentProgressOp.finish_progress_map)
  return finish_progress_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
SetQuestContentProgressOp::mutable_finish_progress_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SetQuestContentProgressOp.finish_progress_map)
  return finish_progress_map_.MutableMap();
}

// map<uint32, uint32> fail_progress_map = 3;
int SetQuestContentProgressOp::fail_progress_map_size() const {
  return fail_progress_map_.size();
}
void SetQuestContentProgressOp::clear_fail_progress_map() {
  fail_progress_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
SetQuestContentProgressOp::fail_progress_map() const {
  // @@protoc_insertion_point(field_map:proto.SetQuestContentProgressOp.fail_progress_map)
  return fail_progress_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
SetQuestContentProgressOp::mutable_fail_progress_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SetQuestContentProgressOp.fail_progress_map)
  return fail_progress_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FinishOrderOp::kOrderIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FinishOrderOp::FinishOrderOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FinishOrderOp)
}
FinishOrderOp::FinishOrderOp(const FinishOrderOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  order_id_ = from.order_id_;
  // @@protoc_insertion_point(copy_constructor:proto.FinishOrderOp)
}

void FinishOrderOp::SharedCtor() {
  order_id_ = 0u;
  _cached_size_ = 0;
}

FinishOrderOp::~FinishOrderOp() {
  // @@protoc_insertion_point(destructor:proto.FinishOrderOp)
  SharedDtor();
}

void FinishOrderOp::SharedDtor() {
}

void FinishOrderOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FinishOrderOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FinishOrderOp& FinishOrderOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

FinishOrderOp* FinishOrderOp::New(::google::protobuf::Arena* arena) const {
  FinishOrderOp* n = new FinishOrderOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FinishOrderOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FinishOrderOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  order_id_ = 0u;
  _internal_metadata_.Clear();
}

bool FinishOrderOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FinishOrderOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 order_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &order_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FinishOrderOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FinishOrderOp)
  return false;
#undef DO_
}

void FinishOrderOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FinishOrderOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 order_id = 1;
  if (this->order_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->order_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FinishOrderOp)
}

::google::protobuf::uint8* FinishOrderOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FinishOrderOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 order_id = 1;
  if (this->order_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->order_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FinishOrderOp)
  return target;
}

size_t FinishOrderOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FinishOrderOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 order_id = 1;
  if (this->order_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->order_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FinishOrderOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FinishOrderOp)
  GOOGLE_DCHECK_NE(&from, this);
  const FinishOrderOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FinishOrderOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FinishOrderOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FinishOrderOp)
    MergeFrom(*source);
  }
}

void FinishOrderOp::MergeFrom(const FinishOrderOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FinishOrderOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.order_id() != 0) {
    set_order_id(from.order_id());
  }
}

void FinishOrderOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FinishOrderOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FinishOrderOp::CopyFrom(const FinishOrderOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FinishOrderOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FinishOrderOp::IsInitialized() const {
  return true;
}

void FinishOrderOp::Swap(FinishOrderOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FinishOrderOp::InternalSwap(FinishOrderOp* other) {
  using std::swap;
  swap(order_id_, other->order_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FinishOrderOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FinishOrderOp

// uint32 order_id = 1;
void FinishOrderOp::clear_order_id() {
  order_id_ = 0u;
}
::google::protobuf::uint32 FinishOrderOp::order_id() const {
  // @@protoc_insertion_point(field_get:proto.FinishOrderOp.order_id)
  return order_id_;
}
void FinishOrderOp::set_order_id(::google::protobuf::uint32 value) {
  
  order_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FinishOrderOp.order_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddOrModifyWatcherOp::kWatcherIdFieldNumber;
const int AddOrModifyWatcherOp::kProgressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddOrModifyWatcherOp::AddOrModifyWatcherOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddOrModifyWatcherOp)
}
AddOrModifyWatcherOp::AddOrModifyWatcherOp(const AddOrModifyWatcherOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&watcher_id_, &from.watcher_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&progress_) -
    reinterpret_cast<char*>(&watcher_id_)) + sizeof(progress_));
  // @@protoc_insertion_point(copy_constructor:proto.AddOrModifyWatcherOp)
}

void AddOrModifyWatcherOp::SharedCtor() {
  ::memset(&watcher_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&watcher_id_)) + sizeof(progress_));
  _cached_size_ = 0;
}

AddOrModifyWatcherOp::~AddOrModifyWatcherOp() {
  // @@protoc_insertion_point(destructor:proto.AddOrModifyWatcherOp)
  SharedDtor();
}

void AddOrModifyWatcherOp::SharedDtor() {
}

void AddOrModifyWatcherOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddOrModifyWatcherOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddOrModifyWatcherOp& AddOrModifyWatcherOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddOrModifyWatcherOp* AddOrModifyWatcherOp::New(::google::protobuf::Arena* arena) const {
  AddOrModifyWatcherOp* n = new AddOrModifyWatcherOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddOrModifyWatcherOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddOrModifyWatcherOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&watcher_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&watcher_id_)) + sizeof(progress_));
  _internal_metadata_.Clear();
}

bool AddOrModifyWatcherOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddOrModifyWatcherOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 watcher_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &watcher_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 progress = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddOrModifyWatcherOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddOrModifyWatcherOp)
  return false;
#undef DO_
}

void AddOrModifyWatcherOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddOrModifyWatcherOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 watcher_id = 1;
  if (this->watcher_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->watcher_id(), output);
  }

  // uint32 progress = 2;
  if (this->progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->progress(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddOrModifyWatcherOp)
}

::google::protobuf::uint8* AddOrModifyWatcherOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddOrModifyWatcherOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 watcher_id = 1;
  if (this->watcher_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->watcher_id(), target);
  }

  // uint32 progress = 2;
  if (this->progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->progress(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddOrModifyWatcherOp)
  return target;
}

size_t AddOrModifyWatcherOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddOrModifyWatcherOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 watcher_id = 1;
  if (this->watcher_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->watcher_id());
  }

  // uint32 progress = 2;
  if (this->progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->progress());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddOrModifyWatcherOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddOrModifyWatcherOp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrModifyWatcherOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddOrModifyWatcherOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddOrModifyWatcherOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddOrModifyWatcherOp)
    MergeFrom(*source);
  }
}

void AddOrModifyWatcherOp::MergeFrom(const AddOrModifyWatcherOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddOrModifyWatcherOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.watcher_id() != 0) {
    set_watcher_id(from.watcher_id());
  }
  if (from.progress() != 0) {
    set_progress(from.progress());
  }
}

void AddOrModifyWatcherOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddOrModifyWatcherOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrModifyWatcherOp::CopyFrom(const AddOrModifyWatcherOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddOrModifyWatcherOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrModifyWatcherOp::IsInitialized() const {
  return true;
}

void AddOrModifyWatcherOp::Swap(AddOrModifyWatcherOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddOrModifyWatcherOp::InternalSwap(AddOrModifyWatcherOp* other) {
  using std::swap;
  swap(watcher_id_, other->watcher_id_);
  swap(progress_, other->progress_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddOrModifyWatcherOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddOrModifyWatcherOp

// uint32 watcher_id = 1;
void AddOrModifyWatcherOp::clear_watcher_id() {
  watcher_id_ = 0u;
}
::google::protobuf::uint32 AddOrModifyWatcherOp::watcher_id() const {
  // @@protoc_insertion_point(field_get:proto.AddOrModifyWatcherOp.watcher_id)
  return watcher_id_;
}
void AddOrModifyWatcherOp::set_watcher_id(::google::protobuf::uint32 value) {
  
  watcher_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddOrModifyWatcherOp.watcher_id)
}

// uint32 progress = 2;
void AddOrModifyWatcherOp::clear_progress() {
  progress_ = 0u;
}
::google::protobuf::uint32 AddOrModifyWatcherOp::progress() const {
  // @@protoc_insertion_point(field_get:proto.AddOrModifyWatcherOp.progress)
  return progress_;
}
void AddOrModifyWatcherOp::set_progress(::google::protobuf::uint32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.AddOrModifyWatcherOp.progress)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelWatcherOp::kWatcherIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelWatcherOp::DelWatcherOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DelWatcherOp)
}
DelWatcherOp::DelWatcherOp(const DelWatcherOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  watcher_id_ = from.watcher_id_;
  // @@protoc_insertion_point(copy_constructor:proto.DelWatcherOp)
}

void DelWatcherOp::SharedCtor() {
  watcher_id_ = 0u;
  _cached_size_ = 0;
}

DelWatcherOp::~DelWatcherOp() {
  // @@protoc_insertion_point(destructor:proto.DelWatcherOp)
  SharedDtor();
}

void DelWatcherOp::SharedDtor() {
}

void DelWatcherOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelWatcherOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelWatcherOp& DelWatcherOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelWatcherOp* DelWatcherOp::New(::google::protobuf::Arena* arena) const {
  DelWatcherOp* n = new DelWatcherOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelWatcherOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DelWatcherOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  watcher_id_ = 0u;
  _internal_metadata_.Clear();
}

bool DelWatcherOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DelWatcherOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 watcher_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &watcher_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DelWatcherOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DelWatcherOp)
  return false;
#undef DO_
}

void DelWatcherOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DelWatcherOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 watcher_id = 1;
  if (this->watcher_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->watcher_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DelWatcherOp)
}

::google::protobuf::uint8* DelWatcherOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DelWatcherOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 watcher_id = 1;
  if (this->watcher_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->watcher_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DelWatcherOp)
  return target;
}

size_t DelWatcherOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DelWatcherOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 watcher_id = 1;
  if (this->watcher_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->watcher_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelWatcherOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DelWatcherOp)
  GOOGLE_DCHECK_NE(&from, this);
  const DelWatcherOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelWatcherOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DelWatcherOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DelWatcherOp)
    MergeFrom(*source);
  }
}

void DelWatcherOp::MergeFrom(const DelWatcherOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DelWatcherOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.watcher_id() != 0) {
    set_watcher_id(from.watcher_id());
  }
}

void DelWatcherOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DelWatcherOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelWatcherOp::CopyFrom(const DelWatcherOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DelWatcherOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelWatcherOp::IsInitialized() const {
  return true;
}

void DelWatcherOp::Swap(DelWatcherOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelWatcherOp::InternalSwap(DelWatcherOp* other) {
  using std::swap;
  swap(watcher_id_, other->watcher_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelWatcherOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelWatcherOp

// uint32 watcher_id = 1;
void DelWatcherOp::clear_watcher_id() {
  watcher_id_ = 0u;
}
::google::protobuf::uint32 DelWatcherOp::watcher_id() const {
  // @@protoc_insertion_point(field_get:proto.DelWatcherOp.watcher_id)
  return watcher_id_;
}
void DelWatcherOp::set_watcher_id(::google::protobuf::uint32 value) {
  
  watcher_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DelWatcherOp.watcher_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetSignatureOp::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetSignatureOp::SetSignatureOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetSignatureOp)
}
SetSignatureOp::SetSignatureOp(const SetSignatureOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.SetSignatureOp)
}

void SetSignatureOp::SharedCtor() {
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SetSignatureOp::~SetSignatureOp() {
  // @@protoc_insertion_point(destructor:proto.SetSignatureOp)
  SharedDtor();
}

void SetSignatureOp::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetSignatureOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetSignatureOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetSignatureOp& SetSignatureOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetSignatureOp* SetSignatureOp::New(::google::protobuf::Arena* arena) const {
  SetSignatureOp* n = new SetSignatureOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetSignatureOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetSignatureOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SetSignatureOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetSignatureOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string signature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signature().data(), static_cast<int>(this->signature().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SetSignatureOp.signature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetSignatureOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetSignatureOp)
  return false;
#undef DO_
}

void SetSignatureOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetSignatureOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string signature = 1;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SetSignatureOp.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->signature(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetSignatureOp)
}

::google::protobuf::uint8* SetSignatureOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetSignatureOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string signature = 1;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SetSignatureOp.signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->signature(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetSignatureOp)
  return target;
}

size_t SetSignatureOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetSignatureOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string signature = 1;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetSignatureOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetSignatureOp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetSignatureOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetSignatureOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetSignatureOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetSignatureOp)
    MergeFrom(*source);
  }
}

void SetSignatureOp::MergeFrom(const SetSignatureOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetSignatureOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
}

void SetSignatureOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetSignatureOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetSignatureOp::CopyFrom(const SetSignatureOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetSignatureOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSignatureOp::IsInitialized() const {
  return true;
}

void SetSignatureOp::Swap(SetSignatureOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetSignatureOp::InternalSwap(SetSignatureOp* other) {
  using std::swap;
  signature_.Swap(&other->signature_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetSignatureOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetSignatureOp

// string signature = 1;
void SetSignatureOp::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetSignatureOp::signature() const {
  // @@protoc_insertion_point(field_get:proto.SetSignatureOp.signature)
  return signature_.GetNoArena();
}
void SetSignatureOp::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetSignatureOp.signature)
}
#if LANG_CXX11
void SetSignatureOp::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetSignatureOp.signature)
}
#endif
void SetSignatureOp::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetSignatureOp.signature)
}
void SetSignatureOp::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetSignatureOp.signature)
}
::std::string* SetSignatureOp::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetSignatureOp.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetSignatureOp::release_signature() {
  // @@protoc_insertion_point(field_release:proto.SetSignatureOp.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetSignatureOp::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:proto.SetSignatureOp.signature)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddOrSubResinOp::kDeltaCountFieldNumber;
const int AddOrSubResinOp::kIsSubFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddOrSubResinOp::AddOrSubResinOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddOrSubResinOp)
}
AddOrSubResinOp::AddOrSubResinOp(const AddOrSubResinOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&delta_count_, &from.delta_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_sub_) -
    reinterpret_cast<char*>(&delta_count_)) + sizeof(is_sub_));
  // @@protoc_insertion_point(copy_constructor:proto.AddOrSubResinOp)
}

void AddOrSubResinOp::SharedCtor() {
  ::memset(&delta_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_sub_) -
      reinterpret_cast<char*>(&delta_count_)) + sizeof(is_sub_));
  _cached_size_ = 0;
}

AddOrSubResinOp::~AddOrSubResinOp() {
  // @@protoc_insertion_point(destructor:proto.AddOrSubResinOp)
  SharedDtor();
}

void AddOrSubResinOp::SharedDtor() {
}

void AddOrSubResinOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddOrSubResinOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddOrSubResinOp& AddOrSubResinOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddOrSubResinOp* AddOrSubResinOp::New(::google::protobuf::Arena* arena) const {
  AddOrSubResinOp* n = new AddOrSubResinOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddOrSubResinOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddOrSubResinOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&delta_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_sub_) -
      reinterpret_cast<char*>(&delta_count_)) + sizeof(is_sub_));
  _internal_metadata_.Clear();
}

bool AddOrSubResinOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddOrSubResinOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 delta_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &delta_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_sub = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_sub_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddOrSubResinOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddOrSubResinOp)
  return false;
#undef DO_
}

void AddOrSubResinOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddOrSubResinOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 delta_count = 1;
  if (this->delta_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->delta_count(), output);
  }

  // bool is_sub = 2;
  if (this->is_sub() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_sub(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddOrSubResinOp)
}

::google::protobuf::uint8* AddOrSubResinOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddOrSubResinOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 delta_count = 1;
  if (this->delta_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->delta_count(), target);
  }

  // bool is_sub = 2;
  if (this->is_sub() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_sub(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddOrSubResinOp)
  return target;
}

size_t AddOrSubResinOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddOrSubResinOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 delta_count = 1;
  if (this->delta_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->delta_count());
  }

  // bool is_sub = 2;
  if (this->is_sub() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddOrSubResinOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddOrSubResinOp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrSubResinOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddOrSubResinOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddOrSubResinOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddOrSubResinOp)
    MergeFrom(*source);
  }
}

void AddOrSubResinOp::MergeFrom(const AddOrSubResinOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddOrSubResinOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.delta_count() != 0) {
    set_delta_count(from.delta_count());
  }
  if (from.is_sub() != 0) {
    set_is_sub(from.is_sub());
  }
}

void AddOrSubResinOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddOrSubResinOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrSubResinOp::CopyFrom(const AddOrSubResinOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddOrSubResinOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrSubResinOp::IsInitialized() const {
  return true;
}

void AddOrSubResinOp::Swap(AddOrSubResinOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddOrSubResinOp::InternalSwap(AddOrSubResinOp* other) {
  using std::swap;
  swap(delta_count_, other->delta_count_);
  swap(is_sub_, other->is_sub_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddOrSubResinOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddOrSubResinOp

// uint32 delta_count = 1;
void AddOrSubResinOp::clear_delta_count() {
  delta_count_ = 0u;
}
::google::protobuf::uint32 AddOrSubResinOp::delta_count() const {
  // @@protoc_insertion_point(field_get:proto.AddOrSubResinOp.delta_count)
  return delta_count_;
}
void AddOrSubResinOp::set_delta_count(::google::protobuf::uint32 value) {
  
  delta_count_ = value;
  // @@protoc_insertion_point(field_set:proto.AddOrSubResinOp.delta_count)
}

// bool is_sub = 2;
void AddOrSubResinOp::clear_is_sub() {
  is_sub_ = false;
}
bool AddOrSubResinOp::is_sub() const {
  // @@protoc_insertion_point(field_get:proto.AddOrSubResinOp.is_sub)
  return is_sub_;
}
void AddOrSubResinOp::set_is_sub(bool value) {
  
  is_sub_ = value;
  // @@protoc_insertion_point(field_set:proto.AddOrSubResinOp.is_sub)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetQuestGlobalVarValueOp::kIdFieldNumber;
const int SetQuestGlobalVarValueOp::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetQuestGlobalVarValueOp::SetQuestGlobalVarValueOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetQuestGlobalVarValueOp)
}
SetQuestGlobalVarValueOp::SetQuestGlobalVarValueOp(const SetQuestGlobalVarValueOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&id_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:proto.SetQuestGlobalVarValueOp)
}

void SetQuestGlobalVarValueOp::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_));
  _cached_size_ = 0;
}

SetQuestGlobalVarValueOp::~SetQuestGlobalVarValueOp() {
  // @@protoc_insertion_point(destructor:proto.SetQuestGlobalVarValueOp)
  SharedDtor();
}

void SetQuestGlobalVarValueOp::SharedDtor() {
}

void SetQuestGlobalVarValueOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetQuestGlobalVarValueOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetQuestGlobalVarValueOp& SetQuestGlobalVarValueOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetQuestGlobalVarValueOp* SetQuestGlobalVarValueOp::New(::google::protobuf::Arena* arena) const {
  SetQuestGlobalVarValueOp* n = new SetQuestGlobalVarValueOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetQuestGlobalVarValueOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetQuestGlobalVarValueOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

bool SetQuestGlobalVarValueOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetQuestGlobalVarValueOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetQuestGlobalVarValueOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetQuestGlobalVarValueOp)
  return false;
#undef DO_
}

void SetQuestGlobalVarValueOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetQuestGlobalVarValueOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetQuestGlobalVarValueOp)
}

::google::protobuf::uint8* SetQuestGlobalVarValueOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetQuestGlobalVarValueOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetQuestGlobalVarValueOp)
  return target;
}

size_t SetQuestGlobalVarValueOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetQuestGlobalVarValueOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // int32 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetQuestGlobalVarValueOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetQuestGlobalVarValueOp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetQuestGlobalVarValueOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetQuestGlobalVarValueOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetQuestGlobalVarValueOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetQuestGlobalVarValueOp)
    MergeFrom(*source);
  }
}

void SetQuestGlobalVarValueOp::MergeFrom(const SetQuestGlobalVarValueOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetQuestGlobalVarValueOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void SetQuestGlobalVarValueOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetQuestGlobalVarValueOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetQuestGlobalVarValueOp::CopyFrom(const SetQuestGlobalVarValueOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetQuestGlobalVarValueOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetQuestGlobalVarValueOp::IsInitialized() const {
  return true;
}

void SetQuestGlobalVarValueOp::Swap(SetQuestGlobalVarValueOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetQuestGlobalVarValueOp::InternalSwap(SetQuestGlobalVarValueOp* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetQuestGlobalVarValueOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetQuestGlobalVarValueOp

// uint32 id = 1;
void SetQuestGlobalVarValueOp::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 SetQuestGlobalVarValueOp::id() const {
  // @@protoc_insertion_point(field_get:proto.SetQuestGlobalVarValueOp.id)
  return id_;
}
void SetQuestGlobalVarValueOp::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetQuestGlobalVarValueOp.id)
}

// int32 value = 2;
void SetQuestGlobalVarValueOp::clear_value() {
  value_ = 0;
}
::google::protobuf::int32 SetQuestGlobalVarValueOp::value() const {
  // @@protoc_insertion_point(field_get:proto.SetQuestGlobalVarValueOp.value)
  return value_;
}
void SetQuestGlobalVarValueOp::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.SetQuestGlobalVarValueOp.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddMcoinVipPointOp::kMcoinFieldNumber;
const int AddMcoinVipPointOp::kVipPointFieldNumber;
const int AddMcoinVipPointOp::kPlatformTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddMcoinVipPointOp::AddMcoinVipPointOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddMcoinVipPointOp)
}
AddMcoinVipPointOp::AddMcoinVipPointOp(const AddMcoinVipPointOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mcoin_, &from.mcoin_,
    static_cast<size_t>(reinterpret_cast<char*>(&platform_type_) -
    reinterpret_cast<char*>(&mcoin_)) + sizeof(platform_type_));
  // @@protoc_insertion_point(copy_constructor:proto.AddMcoinVipPointOp)
}

void AddMcoinVipPointOp::SharedCtor() {
  ::memset(&mcoin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&platform_type_) -
      reinterpret_cast<char*>(&mcoin_)) + sizeof(platform_type_));
  _cached_size_ = 0;
}

AddMcoinVipPointOp::~AddMcoinVipPointOp() {
  // @@protoc_insertion_point(destructor:proto.AddMcoinVipPointOp)
  SharedDtor();
}

void AddMcoinVipPointOp::SharedDtor() {
}

void AddMcoinVipPointOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddMcoinVipPointOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddMcoinVipPointOp& AddMcoinVipPointOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddMcoinVipPointOp* AddMcoinVipPointOp::New(::google::protobuf::Arena* arena) const {
  AddMcoinVipPointOp* n = new AddMcoinVipPointOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddMcoinVipPointOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddMcoinVipPointOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&mcoin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&platform_type_) -
      reinterpret_cast<char*>(&mcoin_)) + sizeof(platform_type_));
  _internal_metadata_.Clear();
}

bool AddMcoinVipPointOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddMcoinVipPointOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 mcoin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mcoin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 vip_point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vip_point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PlatformType platform_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_platform_type(static_cast< ::proto::PlatformType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddMcoinVipPointOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddMcoinVipPointOp)
  return false;
#undef DO_
}

void AddMcoinVipPointOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddMcoinVipPointOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mcoin = 1;
  if (this->mcoin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mcoin(), output);
  }

  // uint32 vip_point = 2;
  if (this->vip_point() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->vip_point(), output);
  }

  // .proto.PlatformType platform_type = 3;
  if (this->platform_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->platform_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddMcoinVipPointOp)
}

::google::protobuf::uint8* AddMcoinVipPointOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddMcoinVipPointOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mcoin = 1;
  if (this->mcoin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mcoin(), target);
  }

  // uint32 vip_point = 2;
  if (this->vip_point() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->vip_point(), target);
  }

  // .proto.PlatformType platform_type = 3;
  if (this->platform_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->platform_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddMcoinVipPointOp)
  return target;
}

size_t AddMcoinVipPointOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddMcoinVipPointOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 mcoin = 1;
  if (this->mcoin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mcoin());
  }

  // uint32 vip_point = 2;
  if (this->vip_point() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vip_point());
  }

  // .proto.PlatformType platform_type = 3;
  if (this->platform_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->platform_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddMcoinVipPointOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddMcoinVipPointOp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddMcoinVipPointOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddMcoinVipPointOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddMcoinVipPointOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddMcoinVipPointOp)
    MergeFrom(*source);
  }
}

void AddMcoinVipPointOp::MergeFrom(const AddMcoinVipPointOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddMcoinVipPointOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mcoin() != 0) {
    set_mcoin(from.mcoin());
  }
  if (from.vip_point() != 0) {
    set_vip_point(from.vip_point());
  }
  if (from.platform_type() != 0) {
    set_platform_type(from.platform_type());
  }
}

void AddMcoinVipPointOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddMcoinVipPointOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddMcoinVipPointOp::CopyFrom(const AddMcoinVipPointOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddMcoinVipPointOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddMcoinVipPointOp::IsInitialized() const {
  return true;
}

void AddMcoinVipPointOp::Swap(AddMcoinVipPointOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddMcoinVipPointOp::InternalSwap(AddMcoinVipPointOp* other) {
  using std::swap;
  swap(mcoin_, other->mcoin_);
  swap(vip_point_, other->vip_point_);
  swap(platform_type_, other->platform_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddMcoinVipPointOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddMcoinVipPointOp

// uint32 mcoin = 1;
void AddMcoinVipPointOp::clear_mcoin() {
  mcoin_ = 0u;
}
::google::protobuf::uint32 AddMcoinVipPointOp::mcoin() const {
  // @@protoc_insertion_point(field_get:proto.AddMcoinVipPointOp.mcoin)
  return mcoin_;
}
void AddMcoinVipPointOp::set_mcoin(::google::protobuf::uint32 value) {
  
  mcoin_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMcoinVipPointOp.mcoin)
}

// uint32 vip_point = 2;
void AddMcoinVipPointOp::clear_vip_point() {
  vip_point_ = 0u;
}
::google::protobuf::uint32 AddMcoinVipPointOp::vip_point() const {
  // @@protoc_insertion_point(field_get:proto.AddMcoinVipPointOp.vip_point)
  return vip_point_;
}
void AddMcoinVipPointOp::set_vip_point(::google::protobuf::uint32 value) {
  
  vip_point_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMcoinVipPointOp.vip_point)
}

// .proto.PlatformType platform_type = 3;
void AddMcoinVipPointOp::clear_platform_type() {
  platform_type_ = 0;
}
::proto::PlatformType AddMcoinVipPointOp::platform_type() const {
  // @@protoc_insertion_point(field_get:proto.AddMcoinVipPointOp.platform_type)
  return static_cast< ::proto::PlatformType >(platform_type_);
}
void AddMcoinVipPointOp::set_platform_type(::proto::PlatformType value) {
  
  platform_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMcoinVipPointOp.platform_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExchangeMcoinOp::kNumFieldNumber;
const int ExchangeMcoinOp::kExchangeTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExchangeMcoinOp::ExchangeMcoinOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ExchangeMcoinOp)
}
ExchangeMcoinOp::ExchangeMcoinOp(const ExchangeMcoinOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&num_, &from.num_,
    static_cast<size_t>(reinterpret_cast<char*>(&exchange_type_) -
    reinterpret_cast<char*>(&num_)) + sizeof(exchange_type_));
  // @@protoc_insertion_point(copy_constructor:proto.ExchangeMcoinOp)
}

void ExchangeMcoinOp::SharedCtor() {
  ::memset(&num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exchange_type_) -
      reinterpret_cast<char*>(&num_)) + sizeof(exchange_type_));
  _cached_size_ = 0;
}

ExchangeMcoinOp::~ExchangeMcoinOp() {
  // @@protoc_insertion_point(destructor:proto.ExchangeMcoinOp)
  SharedDtor();
}

void ExchangeMcoinOp::SharedDtor() {
}

void ExchangeMcoinOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExchangeMcoinOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExchangeMcoinOp& ExchangeMcoinOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExchangeMcoinOp* ExchangeMcoinOp::New(::google::protobuf::Arena* arena) const {
  ExchangeMcoinOp* n = new ExchangeMcoinOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExchangeMcoinOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ExchangeMcoinOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exchange_type_) -
      reinterpret_cast<char*>(&num_)) + sizeof(exchange_type_));
  _internal_metadata_.Clear();
}

bool ExchangeMcoinOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ExchangeMcoinOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ExchangeMcoinType exchange_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_exchange_type(static_cast< ::proto::ExchangeMcoinType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ExchangeMcoinOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ExchangeMcoinOp)
  return false;
#undef DO_
}

void ExchangeMcoinOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ExchangeMcoinOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 num = 1;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->num(), output);
  }

  // .proto.ExchangeMcoinType exchange_type = 2;
  if (this->exchange_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->exchange_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ExchangeMcoinOp)
}

::google::protobuf::uint8* ExchangeMcoinOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ExchangeMcoinOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 num = 1;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->num(), target);
  }

  // .proto.ExchangeMcoinType exchange_type = 2;
  if (this->exchange_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->exchange_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ExchangeMcoinOp)
  return target;
}

size_t ExchangeMcoinOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ExchangeMcoinOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 num = 1;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num());
  }

  // .proto.ExchangeMcoinType exchange_type = 2;
  if (this->exchange_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->exchange_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExchangeMcoinOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ExchangeMcoinOp)
  GOOGLE_DCHECK_NE(&from, this);
  const ExchangeMcoinOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExchangeMcoinOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ExchangeMcoinOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ExchangeMcoinOp)
    MergeFrom(*source);
  }
}

void ExchangeMcoinOp::MergeFrom(const ExchangeMcoinOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ExchangeMcoinOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.num() != 0) {
    set_num(from.num());
  }
  if (from.exchange_type() != 0) {
    set_exchange_type(from.exchange_type());
  }
}

void ExchangeMcoinOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ExchangeMcoinOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExchangeMcoinOp::CopyFrom(const ExchangeMcoinOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ExchangeMcoinOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExchangeMcoinOp::IsInitialized() const {
  return true;
}

void ExchangeMcoinOp::Swap(ExchangeMcoinOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExchangeMcoinOp::InternalSwap(ExchangeMcoinOp* other) {
  using std::swap;
  swap(num_, other->num_);
  swap(exchange_type_, other->exchange_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExchangeMcoinOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExchangeMcoinOp

// uint32 num = 1;
void ExchangeMcoinOp::clear_num() {
  num_ = 0u;
}
::google::protobuf::uint32 ExchangeMcoinOp::num() const {
  // @@protoc_insertion_point(field_get:proto.ExchangeMcoinOp.num)
  return num_;
}
void ExchangeMcoinOp::set_num(::google::protobuf::uint32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:proto.ExchangeMcoinOp.num)
}

// .proto.ExchangeMcoinType exchange_type = 2;
void ExchangeMcoinOp::clear_exchange_type() {
  exchange_type_ = 0;
}
::proto::ExchangeMcoinType ExchangeMcoinOp::exchange_type() const {
  // @@protoc_insertion_point(field_get:proto.ExchangeMcoinOp.exchange_type)
  return static_cast< ::proto::ExchangeMcoinType >(exchange_type_);
}
void ExchangeMcoinOp::set_exchange_type(::proto::ExchangeMcoinType value) {
  
  exchange_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ExchangeMcoinOp.exchange_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupBinOp::kOpTypeFieldNumber;
const int GroupBinOp::kGroupIdFieldNumber;
const int GroupBinOp::kConfigIdFieldNumber;
const int GroupBinOp::kIsAddFieldNumber;
const int GroupBinOp::kStateFieldNumber;
const int GroupBinOp::kIsCreateFieldNumber;
const int GroupBinOp::kTriggerNameFieldNumber;
const int GroupBinOp::kTriggerCountFieldNumber;
const int GroupBinOp::kVariableNameFieldNumber;
const int GroupBinOp::kVariableValueFieldNumber;
const int GroupBinOp::kTargetSuiteFieldNumber;
const int GroupBinOp::kSceneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupBinOp::GroupBinOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GroupBinOp)
}
GroupBinOp::GroupBinOp(const GroupBinOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  trigger_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trigger_name().size() > 0) {
    trigger_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trigger_name_);
  }
  variable_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.variable_name().size() > 0) {
    variable_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.variable_name_);
  }
  ::memcpy(&op_type_, &from.op_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&scene_id_) -
    reinterpret_cast<char*>(&op_type_)) + sizeof(scene_id_));
  // @@protoc_insertion_point(copy_constructor:proto.GroupBinOp)
}

void GroupBinOp::SharedCtor() {
  trigger_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  variable_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&op_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&op_type_)) + sizeof(scene_id_));
  _cached_size_ = 0;
}

GroupBinOp::~GroupBinOp() {
  // @@protoc_insertion_point(destructor:proto.GroupBinOp)
  SharedDtor();
}

void GroupBinOp::SharedDtor() {
  trigger_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  variable_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupBinOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroupBinOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GroupBinOp& GroupBinOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

GroupBinOp* GroupBinOp::New(::google::protobuf::Arena* arena) const {
  GroupBinOp* n = new GroupBinOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GroupBinOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GroupBinOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trigger_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  variable_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&op_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&op_type_)) + sizeof(scene_id_));
  _internal_metadata_.Clear();
}

bool GroupBinOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GroupBinOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.GroupBinOperation op_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::proto::GroupBinOperation >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 config_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_add = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_add_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 state = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_create = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_create_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trigger_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trigger_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trigger_name().data(), static_cast<int>(this->trigger_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GroupBinOp.trigger_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 trigger_count = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &trigger_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string variable_name = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_variable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->variable_name().data(), static_cast<int>(this->variable_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GroupBinOp.variable_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 variable_value = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &variable_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_suite = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_suite_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GroupBinOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GroupBinOp)
  return false;
#undef DO_
}

void GroupBinOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GroupBinOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.GroupBinOperation op_type = 1;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->op_type(), output);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_id(), output);
  }

  // uint32 config_id = 3;
  if (this->config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->config_id(), output);
  }

  // bool is_add = 4;
  if (this->is_add() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_add(), output);
  }

  // uint32 state = 5;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->state(), output);
  }

  // bool is_create = 6;
  if (this->is_create() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_create(), output);
  }

  // string trigger_name = 7;
  if (this->trigger_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trigger_name().data(), static_cast<int>(this->trigger_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GroupBinOp.trigger_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->trigger_name(), output);
  }

  // uint32 trigger_count = 8;
  if (this->trigger_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->trigger_count(), output);
  }

  // string variable_name = 9;
  if (this->variable_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->variable_name().data(), static_cast<int>(this->variable_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GroupBinOp.variable_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->variable_name(), output);
  }

  // int32 variable_value = 10;
  if (this->variable_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->variable_value(), output);
  }

  // uint32 target_suite = 11;
  if (this->target_suite() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->target_suite(), output);
  }

  // uint32 scene_id = 12;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->scene_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GroupBinOp)
}

::google::protobuf::uint8* GroupBinOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GroupBinOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.GroupBinOperation op_type = 1;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->op_type(), target);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->group_id(), target);
  }

  // uint32 config_id = 3;
  if (this->config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->config_id(), target);
  }

  // bool is_add = 4;
  if (this->is_add() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_add(), target);
  }

  // uint32 state = 5;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->state(), target);
  }

  // bool is_create = 6;
  if (this->is_create() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_create(), target);
  }

  // string trigger_name = 7;
  if (this->trigger_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trigger_name().data(), static_cast<int>(this->trigger_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GroupBinOp.trigger_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->trigger_name(), target);
  }

  // uint32 trigger_count = 8;
  if (this->trigger_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->trigger_count(), target);
  }

  // string variable_name = 9;
  if (this->variable_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->variable_name().data(), static_cast<int>(this->variable_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GroupBinOp.variable_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->variable_name(), target);
  }

  // int32 variable_value = 10;
  if (this->variable_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->variable_value(), target);
  }

  // uint32 target_suite = 11;
  if (this->target_suite() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->target_suite(), target);
  }

  // uint32 scene_id = 12;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->scene_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GroupBinOp)
  return target;
}

size_t GroupBinOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GroupBinOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string trigger_name = 7;
  if (this->trigger_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trigger_name());
  }

  // string variable_name = 9;
  if (this->variable_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->variable_name());
  }

  // .proto.GroupBinOperation op_type = 1;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  // uint32 config_id = 3;
  if (this->config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_id());
  }

  // uint32 state = 5;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  // bool is_add = 4;
  if (this->is_add() != 0) {
    total_size += 1 + 1;
  }

  // bool is_create = 6;
  if (this->is_create() != 0) {
    total_size += 1 + 1;
  }

  // uint32 trigger_count = 8;
  if (this->trigger_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->trigger_count());
  }

  // int32 variable_value = 10;
  if (this->variable_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->variable_value());
  }

  // uint32 target_suite = 11;
  if (this->target_suite() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_suite());
  }

  // uint32 scene_id = 12;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroupBinOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GroupBinOp)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupBinOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupBinOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GroupBinOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GroupBinOp)
    MergeFrom(*source);
  }
}

void GroupBinOp::MergeFrom(const GroupBinOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GroupBinOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.trigger_name().size() > 0) {

    trigger_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trigger_name_);
  }
  if (from.variable_name().size() > 0) {

    variable_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.variable_name_);
  }
  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.config_id() != 0) {
    set_config_id(from.config_id());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.is_add() != 0) {
    set_is_add(from.is_add());
  }
  if (from.is_create() != 0) {
    set_is_create(from.is_create());
  }
  if (from.trigger_count() != 0) {
    set_trigger_count(from.trigger_count());
  }
  if (from.variable_value() != 0) {
    set_variable_value(from.variable_value());
  }
  if (from.target_suite() != 0) {
    set_target_suite(from.target_suite());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void GroupBinOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GroupBinOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupBinOp::CopyFrom(const GroupBinOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GroupBinOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupBinOp::IsInitialized() const {
  return true;
}

void GroupBinOp::Swap(GroupBinOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupBinOp::InternalSwap(GroupBinOp* other) {
  using std::swap;
  trigger_name_.Swap(&other->trigger_name_);
  variable_name_.Swap(&other->variable_name_);
  swap(op_type_, other->op_type_);
  swap(group_id_, other->group_id_);
  swap(config_id_, other->config_id_);
  swap(state_, other->state_);
  swap(is_add_, other->is_add_);
  swap(is_create_, other->is_create_);
  swap(trigger_count_, other->trigger_count_);
  swap(variable_value_, other->variable_value_);
  swap(target_suite_, other->target_suite_);
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GroupBinOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GroupBinOp

// .proto.GroupBinOperation op_type = 1;
void GroupBinOp::clear_op_type() {
  op_type_ = 0;
}
::proto::GroupBinOperation GroupBinOp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.GroupBinOp.op_type)
  return static_cast< ::proto::GroupBinOperation >(op_type_);
}
void GroupBinOp::set_op_type(::proto::GroupBinOperation value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBinOp.op_type)
}

// uint32 group_id = 2;
void GroupBinOp::clear_group_id() {
  group_id_ = 0u;
}
::google::protobuf::uint32 GroupBinOp::group_id() const {
  // @@protoc_insertion_point(field_get:proto.GroupBinOp.group_id)
  return group_id_;
}
void GroupBinOp::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBinOp.group_id)
}

// uint32 config_id = 3;
void GroupBinOp::clear_config_id() {
  config_id_ = 0u;
}
::google::protobuf::uint32 GroupBinOp::config_id() const {
  // @@protoc_insertion_point(field_get:proto.GroupBinOp.config_id)
  return config_id_;
}
void GroupBinOp::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBinOp.config_id)
}

// bool is_add = 4;
void GroupBinOp::clear_is_add() {
  is_add_ = false;
}
bool GroupBinOp::is_add() const {
  // @@protoc_insertion_point(field_get:proto.GroupBinOp.is_add)
  return is_add_;
}
void GroupBinOp::set_is_add(bool value) {
  
  is_add_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBinOp.is_add)
}

// uint32 state = 5;
void GroupBinOp::clear_state() {
  state_ = 0u;
}
::google::protobuf::uint32 GroupBinOp::state() const {
  // @@protoc_insertion_point(field_get:proto.GroupBinOp.state)
  return state_;
}
void GroupBinOp::set_state(::google::protobuf::uint32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBinOp.state)
}

// bool is_create = 6;
void GroupBinOp::clear_is_create() {
  is_create_ = false;
}
bool GroupBinOp::is_create() const {
  // @@protoc_insertion_point(field_get:proto.GroupBinOp.is_create)
  return is_create_;
}
void GroupBinOp::set_is_create(bool value) {
  
  is_create_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBinOp.is_create)
}

// string trigger_name = 7;
void GroupBinOp::clear_trigger_name() {
  trigger_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GroupBinOp::trigger_name() const {
  // @@protoc_insertion_point(field_get:proto.GroupBinOp.trigger_name)
  return trigger_name_.GetNoArena();
}
void GroupBinOp::set_trigger_name(const ::std::string& value) {
  
  trigger_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GroupBinOp.trigger_name)
}
#if LANG_CXX11
void GroupBinOp::set_trigger_name(::std::string&& value) {
  
  trigger_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GroupBinOp.trigger_name)
}
#endif
void GroupBinOp::set_trigger_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trigger_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GroupBinOp.trigger_name)
}
void GroupBinOp::set_trigger_name(const char* value, size_t size) {
  
  trigger_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GroupBinOp.trigger_name)
}
::std::string* GroupBinOp::mutable_trigger_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.GroupBinOp.trigger_name)
  return trigger_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GroupBinOp::release_trigger_name() {
  // @@protoc_insertion_point(field_release:proto.GroupBinOp.trigger_name)
  
  return trigger_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GroupBinOp::set_allocated_trigger_name(::std::string* trigger_name) {
  if (trigger_name != NULL) {
    
  } else {
    
  }
  trigger_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trigger_name);
  // @@protoc_insertion_point(field_set_allocated:proto.GroupBinOp.trigger_name)
}

// uint32 trigger_count = 8;
void GroupBinOp::clear_trigger_count() {
  trigger_count_ = 0u;
}
::google::protobuf::uint32 GroupBinOp::trigger_count() const {
  // @@protoc_insertion_point(field_get:proto.GroupBinOp.trigger_count)
  return trigger_count_;
}
void GroupBinOp::set_trigger_count(::google::protobuf::uint32 value) {
  
  trigger_count_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBinOp.trigger_count)
}

// string variable_name = 9;
void GroupBinOp::clear_variable_name() {
  variable_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GroupBinOp::variable_name() const {
  // @@protoc_insertion_point(field_get:proto.GroupBinOp.variable_name)
  return variable_name_.GetNoArena();
}
void GroupBinOp::set_variable_name(const ::std::string& value) {
  
  variable_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GroupBinOp.variable_name)
}
#if LANG_CXX11
void GroupBinOp::set_variable_name(::std::string&& value) {
  
  variable_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GroupBinOp.variable_name)
}
#endif
void GroupBinOp::set_variable_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  variable_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GroupBinOp.variable_name)
}
void GroupBinOp::set_variable_name(const char* value, size_t size) {
  
  variable_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GroupBinOp.variable_name)
}
::std::string* GroupBinOp::mutable_variable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.GroupBinOp.variable_name)
  return variable_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GroupBinOp::release_variable_name() {
  // @@protoc_insertion_point(field_release:proto.GroupBinOp.variable_name)
  
  return variable_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GroupBinOp::set_allocated_variable_name(::std::string* variable_name) {
  if (variable_name != NULL) {
    
  } else {
    
  }
  variable_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), variable_name);
  // @@protoc_insertion_point(field_set_allocated:proto.GroupBinOp.variable_name)
}

// int32 variable_value = 10;
void GroupBinOp::clear_variable_value() {
  variable_value_ = 0;
}
::google::protobuf::int32 GroupBinOp::variable_value() const {
  // @@protoc_insertion_point(field_get:proto.GroupBinOp.variable_value)
  return variable_value_;
}
void GroupBinOp::set_variable_value(::google::protobuf::int32 value) {
  
  variable_value_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBinOp.variable_value)
}

// uint32 target_suite = 11;
void GroupBinOp::clear_target_suite() {
  target_suite_ = 0u;
}
::google::protobuf::uint32 GroupBinOp::target_suite() const {
  // @@protoc_insertion_point(field_get:proto.GroupBinOp.target_suite)
  return target_suite_;
}
void GroupBinOp::set_target_suite(::google::protobuf::uint32 value) {
  
  target_suite_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBinOp.target_suite)
}

// uint32 scene_id = 12;
void GroupBinOp::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 GroupBinOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.GroupBinOp.scene_id)
  return scene_id_;
}
void GroupBinOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBinOp.scene_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelOneOffOp::kGroupIdFieldNumber;
const int DelOneOffOp::kConfigIdFieldNumber;
const int DelOneOffOp::kIsMonsterFieldNumber;
const int DelOneOffOp::kSceneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelOneOffOp::DelOneOffOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DelOneOffOp)
}
DelOneOffOp::DelOneOffOp(const DelOneOffOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&scene_id_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(scene_id_));
  // @@protoc_insertion_point(copy_constructor:proto.DelOneOffOp)
}

void DelOneOffOp::SharedCtor() {
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(scene_id_));
  _cached_size_ = 0;
}

DelOneOffOp::~DelOneOffOp() {
  // @@protoc_insertion_point(destructor:proto.DelOneOffOp)
  SharedDtor();
}

void DelOneOffOp::SharedDtor() {
}

void DelOneOffOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelOneOffOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelOneOffOp& DelOneOffOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelOneOffOp* DelOneOffOp::New(::google::protobuf::Arena* arena) const {
  DelOneOffOp* n = new DelOneOffOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelOneOffOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DelOneOffOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(scene_id_));
  _internal_metadata_.Clear();
}

bool DelOneOffOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DelOneOffOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 config_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_monster = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_monster_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DelOneOffOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DelOneOffOp)
  return false;
#undef DO_
}

void DelOneOffOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DelOneOffOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->group_id(), output);
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->config_id(), output);
  }

  // bool is_monster = 3;
  if (this->is_monster() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_monster(), output);
  }

  // uint32 scene_id = 4;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->scene_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DelOneOffOp)
}

::google::protobuf::uint8* DelOneOffOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DelOneOffOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->group_id(), target);
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->config_id(), target);
  }

  // bool is_monster = 3;
  if (this->is_monster() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_monster(), target);
  }

  // uint32 scene_id = 4;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->scene_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DelOneOffOp)
  return target;
}

size_t DelOneOffOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DelOneOffOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_id());
  }

  // bool is_monster = 3;
  if (this->is_monster() != 0) {
    total_size += 1 + 1;
  }

  // uint32 scene_id = 4;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelOneOffOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DelOneOffOp)
  GOOGLE_DCHECK_NE(&from, this);
  const DelOneOffOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelOneOffOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DelOneOffOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DelOneOffOp)
    MergeFrom(*source);
  }
}

void DelOneOffOp::MergeFrom(const DelOneOffOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DelOneOffOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.config_id() != 0) {
    set_config_id(from.config_id());
  }
  if (from.is_monster() != 0) {
    set_is_monster(from.is_monster());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void DelOneOffOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DelOneOffOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelOneOffOp::CopyFrom(const DelOneOffOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DelOneOffOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelOneOffOp::IsInitialized() const {
  return true;
}

void DelOneOffOp::Swap(DelOneOffOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelOneOffOp::InternalSwap(DelOneOffOp* other) {
  using std::swap;
  swap(group_id_, other->group_id_);
  swap(config_id_, other->config_id_);
  swap(is_monster_, other->is_monster_);
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelOneOffOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelOneOffOp

// uint32 group_id = 1;
void DelOneOffOp::clear_group_id() {
  group_id_ = 0u;
}
::google::protobuf::uint32 DelOneOffOp::group_id() const {
  // @@protoc_insertion_point(field_get:proto.DelOneOffOp.group_id)
  return group_id_;
}
void DelOneOffOp::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DelOneOffOp.group_id)
}

// uint32 config_id = 2;
void DelOneOffOp::clear_config_id() {
  config_id_ = 0u;
}
::google::protobuf::uint32 DelOneOffOp::config_id() const {
  // @@protoc_insertion_point(field_get:proto.DelOneOffOp.config_id)
  return config_id_;
}
void DelOneOffOp::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DelOneOffOp.config_id)
}

// bool is_monster = 3;
void DelOneOffOp::clear_is_monster() {
  is_monster_ = false;
}
bool DelOneOffOp::is_monster() const {
  // @@protoc_insertion_point(field_get:proto.DelOneOffOp.is_monster)
  return is_monster_;
}
void DelOneOffOp::set_is_monster(bool value) {
  
  is_monster_ = value;
  // @@protoc_insertion_point(field_set:proto.DelOneOffOp.is_monster)
}

// uint32 scene_id = 4;
void DelOneOffOp::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 DelOneOffOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.DelOneOffOp.scene_id)
  return scene_id_;
}
void DelOneOffOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DelOneOffOp.scene_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FinishRoutineOp::kRoutineIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FinishRoutineOp::FinishRoutineOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FinishRoutineOp)
}
FinishRoutineOp::FinishRoutineOp(const FinishRoutineOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  routine_id_ = from.routine_id_;
  // @@protoc_insertion_point(copy_constructor:proto.FinishRoutineOp)
}

void FinishRoutineOp::SharedCtor() {
  routine_id_ = 0u;
  _cached_size_ = 0;
}

FinishRoutineOp::~FinishRoutineOp() {
  // @@protoc_insertion_point(destructor:proto.FinishRoutineOp)
  SharedDtor();
}

void FinishRoutineOp::SharedDtor() {
}

void FinishRoutineOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FinishRoutineOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FinishRoutineOp& FinishRoutineOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

FinishRoutineOp* FinishRoutineOp::New(::google::protobuf::Arena* arena) const {
  FinishRoutineOp* n = new FinishRoutineOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FinishRoutineOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FinishRoutineOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  routine_id_ = 0u;
  _internal_metadata_.Clear();
}

bool FinishRoutineOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FinishRoutineOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 routine_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &routine_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FinishRoutineOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FinishRoutineOp)
  return false;
#undef DO_
}

void FinishRoutineOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FinishRoutineOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 routine_id = 1;
  if (this->routine_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->routine_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FinishRoutineOp)
}

::google::protobuf::uint8* FinishRoutineOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FinishRoutineOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 routine_id = 1;
  if (this->routine_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->routine_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FinishRoutineOp)
  return target;
}

size_t FinishRoutineOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FinishRoutineOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 routine_id = 1;
  if (this->routine_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->routine_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FinishRoutineOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FinishRoutineOp)
  GOOGLE_DCHECK_NE(&from, this);
  const FinishRoutineOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FinishRoutineOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FinishRoutineOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FinishRoutineOp)
    MergeFrom(*source);
  }
}

void FinishRoutineOp::MergeFrom(const FinishRoutineOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FinishRoutineOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.routine_id() != 0) {
    set_routine_id(from.routine_id());
  }
}

void FinishRoutineOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FinishRoutineOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FinishRoutineOp::CopyFrom(const FinishRoutineOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FinishRoutineOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FinishRoutineOp::IsInitialized() const {
  return true;
}

void FinishRoutineOp::Swap(FinishRoutineOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FinishRoutineOp::InternalSwap(FinishRoutineOp* other) {
  using std::swap;
  swap(routine_id_, other->routine_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FinishRoutineOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FinishRoutineOp

// uint32 routine_id = 1;
void FinishRoutineOp::clear_routine_id() {
  routine_id_ = 0u;
}
::google::protobuf::uint32 FinishRoutineOp::routine_id() const {
  // @@protoc_insertion_point(field_get:proto.FinishRoutineOp.routine_id)
  return routine_id_;
}
void FinishRoutineOp::set_routine_id(::google::protobuf::uint32 value) {
  
  routine_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FinishRoutineOp.routine_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FinishDailyTaskUnloadGroupOp::kDailyTaskIdFieldNumber;
const int FinishDailyTaskUnloadGroupOp::kDailyTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FinishDailyTaskUnloadGroupOp::FinishDailyTaskUnloadGroupOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FinishDailyTaskUnloadGroupOp)
}
FinishDailyTaskUnloadGroupOp::FinishDailyTaskUnloadGroupOp(const FinishDailyTaskUnloadGroupOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&daily_task_id_, &from.daily_task_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&daily_time_) -
    reinterpret_cast<char*>(&daily_task_id_)) + sizeof(daily_time_));
  // @@protoc_insertion_point(copy_constructor:proto.FinishDailyTaskUnloadGroupOp)
}

void FinishDailyTaskUnloadGroupOp::SharedCtor() {
  ::memset(&daily_task_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&daily_time_) -
      reinterpret_cast<char*>(&daily_task_id_)) + sizeof(daily_time_));
  _cached_size_ = 0;
}

FinishDailyTaskUnloadGroupOp::~FinishDailyTaskUnloadGroupOp() {
  // @@protoc_insertion_point(destructor:proto.FinishDailyTaskUnloadGroupOp)
  SharedDtor();
}

void FinishDailyTaskUnloadGroupOp::SharedDtor() {
}

void FinishDailyTaskUnloadGroupOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FinishDailyTaskUnloadGroupOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FinishDailyTaskUnloadGroupOp& FinishDailyTaskUnloadGroupOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

FinishDailyTaskUnloadGroupOp* FinishDailyTaskUnloadGroupOp::New(::google::protobuf::Arena* arena) const {
  FinishDailyTaskUnloadGroupOp* n = new FinishDailyTaskUnloadGroupOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FinishDailyTaskUnloadGroupOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FinishDailyTaskUnloadGroupOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&daily_task_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&daily_time_) -
      reinterpret_cast<char*>(&daily_task_id_)) + sizeof(daily_time_));
  _internal_metadata_.Clear();
}

bool FinishDailyTaskUnloadGroupOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FinishDailyTaskUnloadGroupOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 daily_task_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &daily_task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 daily_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &daily_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FinishDailyTaskUnloadGroupOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FinishDailyTaskUnloadGroupOp)
  return false;
#undef DO_
}

void FinishDailyTaskUnloadGroupOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FinishDailyTaskUnloadGroupOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 daily_task_id = 1;
  if (this->daily_task_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->daily_task_id(), output);
  }

  // uint32 daily_time = 2;
  if (this->daily_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->daily_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FinishDailyTaskUnloadGroupOp)
}

::google::protobuf::uint8* FinishDailyTaskUnloadGroupOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FinishDailyTaskUnloadGroupOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 daily_task_id = 1;
  if (this->daily_task_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->daily_task_id(), target);
  }

  // uint32 daily_time = 2;
  if (this->daily_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->daily_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FinishDailyTaskUnloadGroupOp)
  return target;
}

size_t FinishDailyTaskUnloadGroupOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FinishDailyTaskUnloadGroupOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 daily_task_id = 1;
  if (this->daily_task_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->daily_task_id());
  }

  // uint32 daily_time = 2;
  if (this->daily_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->daily_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FinishDailyTaskUnloadGroupOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FinishDailyTaskUnloadGroupOp)
  GOOGLE_DCHECK_NE(&from, this);
  const FinishDailyTaskUnloadGroupOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FinishDailyTaskUnloadGroupOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FinishDailyTaskUnloadGroupOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FinishDailyTaskUnloadGroupOp)
    MergeFrom(*source);
  }
}

void FinishDailyTaskUnloadGroupOp::MergeFrom(const FinishDailyTaskUnloadGroupOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FinishDailyTaskUnloadGroupOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.daily_task_id() != 0) {
    set_daily_task_id(from.daily_task_id());
  }
  if (from.daily_time() != 0) {
    set_daily_time(from.daily_time());
  }
}

void FinishDailyTaskUnloadGroupOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FinishDailyTaskUnloadGroupOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FinishDailyTaskUnloadGroupOp::CopyFrom(const FinishDailyTaskUnloadGroupOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FinishDailyTaskUnloadGroupOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FinishDailyTaskUnloadGroupOp::IsInitialized() const {
  return true;
}

void FinishDailyTaskUnloadGroupOp::Swap(FinishDailyTaskUnloadGroupOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FinishDailyTaskUnloadGroupOp::InternalSwap(FinishDailyTaskUnloadGroupOp* other) {
  using std::swap;
  swap(daily_task_id_, other->daily_task_id_);
  swap(daily_time_, other->daily_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FinishDailyTaskUnloadGroupOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FinishDailyTaskUnloadGroupOp

// uint32 daily_task_id = 1;
void FinishDailyTaskUnloadGroupOp::clear_daily_task_id() {
  daily_task_id_ = 0u;
}
::google::protobuf::uint32 FinishDailyTaskUnloadGroupOp::daily_task_id() const {
  // @@protoc_insertion_point(field_get:proto.FinishDailyTaskUnloadGroupOp.daily_task_id)
  return daily_task_id_;
}
void FinishDailyTaskUnloadGroupOp::set_daily_task_id(::google::protobuf::uint32 value) {
  
  daily_task_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FinishDailyTaskUnloadGroupOp.daily_task_id)
}

// uint32 daily_time = 2;
void FinishDailyTaskUnloadGroupOp::clear_daily_time() {
  daily_time_ = 0u;
}
::google::protobuf::uint32 FinishDailyTaskUnloadGroupOp::daily_time() const {
  // @@protoc_insertion_point(field_get:proto.FinishDailyTaskUnloadGroupOp.daily_time)
  return daily_time_;
}
void FinishDailyTaskUnloadGroupOp::set_daily_time(::google::protobuf::uint32 value) {
  
  daily_time_ = value;
  // @@protoc_insertion_point(field_set:proto.FinishDailyTaskUnloadGroupOp.daily_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RefreshBlossomCircleCampOp::kRefreshIdFieldNumber;
const int RefreshBlossomCircleCampOp::kCircleCampIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RefreshBlossomCircleCampOp::RefreshBlossomCircleCampOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RefreshBlossomCircleCampOp)
}
RefreshBlossomCircleCampOp::RefreshBlossomCircleCampOp(const RefreshBlossomCircleCampOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&refresh_id_, &from.refresh_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&circle_camp_id_) -
    reinterpret_cast<char*>(&refresh_id_)) + sizeof(circle_camp_id_));
  // @@protoc_insertion_point(copy_constructor:proto.RefreshBlossomCircleCampOp)
}

void RefreshBlossomCircleCampOp::SharedCtor() {
  ::memset(&refresh_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&circle_camp_id_) -
      reinterpret_cast<char*>(&refresh_id_)) + sizeof(circle_camp_id_));
  _cached_size_ = 0;
}

RefreshBlossomCircleCampOp::~RefreshBlossomCircleCampOp() {
  // @@protoc_insertion_point(destructor:proto.RefreshBlossomCircleCampOp)
  SharedDtor();
}

void RefreshBlossomCircleCampOp::SharedDtor() {
}

void RefreshBlossomCircleCampOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RefreshBlossomCircleCampOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RefreshBlossomCircleCampOp& RefreshBlossomCircleCampOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

RefreshBlossomCircleCampOp* RefreshBlossomCircleCampOp::New(::google::protobuf::Arena* arena) const {
  RefreshBlossomCircleCampOp* n = new RefreshBlossomCircleCampOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RefreshBlossomCircleCampOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RefreshBlossomCircleCampOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&refresh_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&circle_camp_id_) -
      reinterpret_cast<char*>(&refresh_id_)) + sizeof(circle_camp_id_));
  _internal_metadata_.Clear();
}

bool RefreshBlossomCircleCampOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RefreshBlossomCircleCampOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 refresh_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &refresh_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 circle_camp_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &circle_camp_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RefreshBlossomCircleCampOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RefreshBlossomCircleCampOp)
  return false;
#undef DO_
}

void RefreshBlossomCircleCampOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RefreshBlossomCircleCampOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 refresh_id = 1;
  if (this->refresh_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->refresh_id(), output);
  }

  // uint32 circle_camp_id = 2;
  if (this->circle_camp_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->circle_camp_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RefreshBlossomCircleCampOp)
}

::google::protobuf::uint8* RefreshBlossomCircleCampOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RefreshBlossomCircleCampOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 refresh_id = 1;
  if (this->refresh_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->refresh_id(), target);
  }

  // uint32 circle_camp_id = 2;
  if (this->circle_camp_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->circle_camp_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RefreshBlossomCircleCampOp)
  return target;
}

size_t RefreshBlossomCircleCampOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RefreshBlossomCircleCampOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 refresh_id = 1;
  if (this->refresh_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->refresh_id());
  }

  // uint32 circle_camp_id = 2;
  if (this->circle_camp_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->circle_camp_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RefreshBlossomCircleCampOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RefreshBlossomCircleCampOp)
  GOOGLE_DCHECK_NE(&from, this);
  const RefreshBlossomCircleCampOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RefreshBlossomCircleCampOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RefreshBlossomCircleCampOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RefreshBlossomCircleCampOp)
    MergeFrom(*source);
  }
}

void RefreshBlossomCircleCampOp::MergeFrom(const RefreshBlossomCircleCampOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RefreshBlossomCircleCampOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.refresh_id() != 0) {
    set_refresh_id(from.refresh_id());
  }
  if (from.circle_camp_id() != 0) {
    set_circle_camp_id(from.circle_camp_id());
  }
}

void RefreshBlossomCircleCampOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RefreshBlossomCircleCampOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshBlossomCircleCampOp::CopyFrom(const RefreshBlossomCircleCampOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RefreshBlossomCircleCampOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshBlossomCircleCampOp::IsInitialized() const {
  return true;
}

void RefreshBlossomCircleCampOp::Swap(RefreshBlossomCircleCampOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RefreshBlossomCircleCampOp::InternalSwap(RefreshBlossomCircleCampOp* other) {
  using std::swap;
  swap(refresh_id_, other->refresh_id_);
  swap(circle_camp_id_, other->circle_camp_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RefreshBlossomCircleCampOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RefreshBlossomCircleCampOp

// uint32 refresh_id = 1;
void RefreshBlossomCircleCampOp::clear_refresh_id() {
  refresh_id_ = 0u;
}
::google::protobuf::uint32 RefreshBlossomCircleCampOp::refresh_id() const {
  // @@protoc_insertion_point(field_get:proto.RefreshBlossomCircleCampOp.refresh_id)
  return refresh_id_;
}
void RefreshBlossomCircleCampOp::set_refresh_id(::google::protobuf::uint32 value) {
  
  refresh_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RefreshBlossomCircleCampOp.refresh_id)
}

// uint32 circle_camp_id = 2;
void RefreshBlossomCircleCampOp::clear_circle_camp_id() {
  circle_camp_id_ = 0u;
}
::google::protobuf::uint32 RefreshBlossomCircleCampOp::circle_camp_id() const {
  // @@protoc_insertion_point(field_get:proto.RefreshBlossomCircleCampOp.circle_camp_id)
  return circle_camp_id_;
}
void RefreshBlossomCircleCampOp::set_circle_camp_id(::google::protobuf::uint32 value) {
  
  circle_camp_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RefreshBlossomCircleCampOp.circle_camp_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlessingActivityGivePicOp::kSourceUidFieldNumber;
const int BlessingActivityGivePicOp::kTargetUidFieldNumber;
const int BlessingActivityGivePicOp::kPicIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlessingActivityGivePicOp::BlessingActivityGivePicOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BlessingActivityGivePicOp)
}
BlessingActivityGivePicOp::BlessingActivityGivePicOp(const BlessingActivityGivePicOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&source_uid_, &from.source_uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pic_id_) -
    reinterpret_cast<char*>(&source_uid_)) + sizeof(pic_id_));
  // @@protoc_insertion_point(copy_constructor:proto.BlessingActivityGivePicOp)
}

void BlessingActivityGivePicOp::SharedCtor() {
  ::memset(&source_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pic_id_) -
      reinterpret_cast<char*>(&source_uid_)) + sizeof(pic_id_));
  _cached_size_ = 0;
}

BlessingActivityGivePicOp::~BlessingActivityGivePicOp() {
  // @@protoc_insertion_point(destructor:proto.BlessingActivityGivePicOp)
  SharedDtor();
}

void BlessingActivityGivePicOp::SharedDtor() {
}

void BlessingActivityGivePicOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlessingActivityGivePicOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlessingActivityGivePicOp& BlessingActivityGivePicOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlessingActivityGivePicOp* BlessingActivityGivePicOp::New(::google::protobuf::Arena* arena) const {
  BlessingActivityGivePicOp* n = new BlessingActivityGivePicOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlessingActivityGivePicOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BlessingActivityGivePicOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&source_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pic_id_) -
      reinterpret_cast<char*>(&source_uid_)) + sizeof(pic_id_));
  _internal_metadata_.Clear();
}

bool BlessingActivityGivePicOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BlessingActivityGivePicOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 source_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pic_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pic_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BlessingActivityGivePicOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BlessingActivityGivePicOp)
  return false;
#undef DO_
}

void BlessingActivityGivePicOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BlessingActivityGivePicOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 source_uid = 1;
  if (this->source_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->source_uid(), output);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_uid(), output);
  }

  // uint32 pic_id = 3;
  if (this->pic_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pic_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BlessingActivityGivePicOp)
}

::google::protobuf::uint8* BlessingActivityGivePicOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BlessingActivityGivePicOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 source_uid = 1;
  if (this->source_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->source_uid(), target);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_uid(), target);
  }

  // uint32 pic_id = 3;
  if (this->pic_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pic_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BlessingActivityGivePicOp)
  return target;
}

size_t BlessingActivityGivePicOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BlessingActivityGivePicOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 source_uid = 1;
  if (this->source_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->source_uid());
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  // uint32 pic_id = 3;
  if (this->pic_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pic_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlessingActivityGivePicOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BlessingActivityGivePicOp)
  GOOGLE_DCHECK_NE(&from, this);
  const BlessingActivityGivePicOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlessingActivityGivePicOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BlessingActivityGivePicOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BlessingActivityGivePicOp)
    MergeFrom(*source);
  }
}

void BlessingActivityGivePicOp::MergeFrom(const BlessingActivityGivePicOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BlessingActivityGivePicOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.source_uid() != 0) {
    set_source_uid(from.source_uid());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  if (from.pic_id() != 0) {
    set_pic_id(from.pic_id());
  }
}

void BlessingActivityGivePicOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BlessingActivityGivePicOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlessingActivityGivePicOp::CopyFrom(const BlessingActivityGivePicOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BlessingActivityGivePicOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlessingActivityGivePicOp::IsInitialized() const {
  return true;
}

void BlessingActivityGivePicOp::Swap(BlessingActivityGivePicOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlessingActivityGivePicOp::InternalSwap(BlessingActivityGivePicOp* other) {
  using std::swap;
  swap(source_uid_, other->source_uid_);
  swap(target_uid_, other->target_uid_);
  swap(pic_id_, other->pic_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlessingActivityGivePicOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlessingActivityGivePicOp

// uint32 source_uid = 1;
void BlessingActivityGivePicOp::clear_source_uid() {
  source_uid_ = 0u;
}
::google::protobuf::uint32 BlessingActivityGivePicOp::source_uid() const {
  // @@protoc_insertion_point(field_get:proto.BlessingActivityGivePicOp.source_uid)
  return source_uid_;
}
void BlessingActivityGivePicOp::set_source_uid(::google::protobuf::uint32 value) {
  
  source_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.BlessingActivityGivePicOp.source_uid)
}

// uint32 target_uid = 2;
void BlessingActivityGivePicOp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 BlessingActivityGivePicOp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.BlessingActivityGivePicOp.target_uid)
  return target_uid_;
}
void BlessingActivityGivePicOp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.BlessingActivityGivePicOp.target_uid)
}

// uint32 pic_id = 3;
void BlessingActivityGivePicOp::clear_pic_id() {
  pic_id_ = 0u;
}
::google::protobuf::uint32 BlessingActivityGivePicOp::pic_id() const {
  // @@protoc_insertion_point(field_get:proto.BlessingActivityGivePicOp.pic_id)
  return pic_id_;
}
void BlessingActivityGivePicOp::set_pic_id(::google::protobuf::uint32 value) {
  
  pic_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BlessingActivityGivePicOp.pic_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExpeditionActivityAssistOp::kAvatarIdFieldNumber;
const int ExpeditionActivityAssistOp::kAssistTimeFieldNumber;
const int ExpeditionActivityAssistOp::kTargetUidFieldNumber;
const int ExpeditionActivityAssistOp::kTargetNickNameFieldNumber;
const int ExpeditionActivityAssistOp::kOnlineIdFieldNumber;
const int ExpeditionActivityAssistOp::kAssistUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExpeditionActivityAssistOp::ExpeditionActivityAssistOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ExpeditionActivityAssistOp)
}
ExpeditionActivityAssistOp::ExpeditionActivityAssistOp(const ExpeditionActivityAssistOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_nick_name().size() > 0) {
    target_nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_nick_name_);
  }
  online_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.online_id().size() > 0) {
    online_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_id_);
  }
  ::memcpy(&avatar_id_, &from.avatar_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&assist_uid_) -
    reinterpret_cast<char*>(&avatar_id_)) + sizeof(assist_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.ExpeditionActivityAssistOp)
}

void ExpeditionActivityAssistOp::SharedCtor() {
  target_nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&avatar_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&assist_uid_) -
      reinterpret_cast<char*>(&avatar_id_)) + sizeof(assist_uid_));
  _cached_size_ = 0;
}

ExpeditionActivityAssistOp::~ExpeditionActivityAssistOp() {
  // @@protoc_insertion_point(destructor:proto.ExpeditionActivityAssistOp)
  SharedDtor();
}

void ExpeditionActivityAssistOp::SharedDtor() {
  target_nick_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExpeditionActivityAssistOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExpeditionActivityAssistOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExpeditionActivityAssistOp& ExpeditionActivityAssistOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExpeditionActivityAssistOp* ExpeditionActivityAssistOp::New(::google::protobuf::Arena* arena) const {
  ExpeditionActivityAssistOp* n = new ExpeditionActivityAssistOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExpeditionActivityAssistOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ExpeditionActivityAssistOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&avatar_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&assist_uid_) -
      reinterpret_cast<char*>(&avatar_id_)) + sizeof(assist_uid_));
  _internal_metadata_.Clear();
}

bool ExpeditionActivityAssistOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ExpeditionActivityAssistOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 avatar_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 assist_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &assist_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string target_nick_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_nick_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_nick_name().data(), static_cast<int>(this->target_nick_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ExpeditionActivityAssistOp.target_nick_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string online_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_online_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->online_id().data(), static_cast<int>(this->online_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ExpeditionActivityAssistOp.online_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 assist_uid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &assist_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ExpeditionActivityAssistOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ExpeditionActivityAssistOp)
  return false;
#undef DO_
}

void ExpeditionActivityAssistOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ExpeditionActivityAssistOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->avatar_id(), output);
  }

  // uint32 assist_time = 2;
  if (this->assist_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->assist_time(), output);
  }

  // uint32 target_uid = 3;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->target_uid(), output);
  }

  // string target_nick_name = 4;
  if (this->target_nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_nick_name().data(), static_cast<int>(this->target_nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ExpeditionActivityAssistOp.target_nick_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->target_nick_name(), output);
  }

  // string online_id = 5;
  if (this->online_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->online_id().data(), static_cast<int>(this->online_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ExpeditionActivityAssistOp.online_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->online_id(), output);
  }

  // uint32 assist_uid = 6;
  if (this->assist_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->assist_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ExpeditionActivityAssistOp)
}

::google::protobuf::uint8* ExpeditionActivityAssistOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ExpeditionActivityAssistOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->avatar_id(), target);
  }

  // uint32 assist_time = 2;
  if (this->assist_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->assist_time(), target);
  }

  // uint32 target_uid = 3;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->target_uid(), target);
  }

  // string target_nick_name = 4;
  if (this->target_nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_nick_name().data(), static_cast<int>(this->target_nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ExpeditionActivityAssistOp.target_nick_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->target_nick_name(), target);
  }

  // string online_id = 5;
  if (this->online_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->online_id().data(), static_cast<int>(this->online_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ExpeditionActivityAssistOp.online_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->online_id(), target);
  }

  // uint32 assist_uid = 6;
  if (this->assist_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->assist_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ExpeditionActivityAssistOp)
  return target;
}

size_t ExpeditionActivityAssistOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ExpeditionActivityAssistOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string target_nick_name = 4;
  if (this->target_nick_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_nick_name());
  }

  // string online_id = 5;
  if (this->online_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->online_id());
  }

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_id());
  }

  // uint32 assist_time = 2;
  if (this->assist_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->assist_time());
  }

  // uint32 target_uid = 3;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  // uint32 assist_uid = 6;
  if (this->assist_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->assist_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExpeditionActivityAssistOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ExpeditionActivityAssistOp)
  GOOGLE_DCHECK_NE(&from, this);
  const ExpeditionActivityAssistOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExpeditionActivityAssistOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ExpeditionActivityAssistOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ExpeditionActivityAssistOp)
    MergeFrom(*source);
  }
}

void ExpeditionActivityAssistOp::MergeFrom(const ExpeditionActivityAssistOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ExpeditionActivityAssistOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_nick_name().size() > 0) {

    target_nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_nick_name_);
  }
  if (from.online_id().size() > 0) {

    online_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_id_);
  }
  if (from.avatar_id() != 0) {
    set_avatar_id(from.avatar_id());
  }
  if (from.assist_time() != 0) {
    set_assist_time(from.assist_time());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  if (from.assist_uid() != 0) {
    set_assist_uid(from.assist_uid());
  }
}

void ExpeditionActivityAssistOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ExpeditionActivityAssistOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExpeditionActivityAssistOp::CopyFrom(const ExpeditionActivityAssistOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ExpeditionActivityAssistOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExpeditionActivityAssistOp::IsInitialized() const {
  return true;
}

void ExpeditionActivityAssistOp::Swap(ExpeditionActivityAssistOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExpeditionActivityAssistOp::InternalSwap(ExpeditionActivityAssistOp* other) {
  using std::swap;
  target_nick_name_.Swap(&other->target_nick_name_);
  online_id_.Swap(&other->online_id_);
  swap(avatar_id_, other->avatar_id_);
  swap(assist_time_, other->assist_time_);
  swap(target_uid_, other->target_uid_);
  swap(assist_uid_, other->assist_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExpeditionActivityAssistOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExpeditionActivityAssistOp

// uint32 avatar_id = 1;
void ExpeditionActivityAssistOp::clear_avatar_id() {
  avatar_id_ = 0u;
}
::google::protobuf::uint32 ExpeditionActivityAssistOp::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.ExpeditionActivityAssistOp.avatar_id)
  return avatar_id_;
}
void ExpeditionActivityAssistOp::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ExpeditionActivityAssistOp.avatar_id)
}

// uint32 assist_time = 2;
void ExpeditionActivityAssistOp::clear_assist_time() {
  assist_time_ = 0u;
}
::google::protobuf::uint32 ExpeditionActivityAssistOp::assist_time() const {
  // @@protoc_insertion_point(field_get:proto.ExpeditionActivityAssistOp.assist_time)
  return assist_time_;
}
void ExpeditionActivityAssistOp::set_assist_time(::google::protobuf::uint32 value) {
  
  assist_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ExpeditionActivityAssistOp.assist_time)
}

// uint32 target_uid = 3;
void ExpeditionActivityAssistOp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 ExpeditionActivityAssistOp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ExpeditionActivityAssistOp.target_uid)
  return target_uid_;
}
void ExpeditionActivityAssistOp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ExpeditionActivityAssistOp.target_uid)
}

// string target_nick_name = 4;
void ExpeditionActivityAssistOp::clear_target_nick_name() {
  target_nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ExpeditionActivityAssistOp::target_nick_name() const {
  // @@protoc_insertion_point(field_get:proto.ExpeditionActivityAssistOp.target_nick_name)
  return target_nick_name_.GetNoArena();
}
void ExpeditionActivityAssistOp::set_target_nick_name(const ::std::string& value) {
  
  target_nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ExpeditionActivityAssistOp.target_nick_name)
}
#if LANG_CXX11
void ExpeditionActivityAssistOp::set_target_nick_name(::std::string&& value) {
  
  target_nick_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ExpeditionActivityAssistOp.target_nick_name)
}
#endif
void ExpeditionActivityAssistOp::set_target_nick_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  target_nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ExpeditionActivityAssistOp.target_nick_name)
}
void ExpeditionActivityAssistOp::set_target_nick_name(const char* value, size_t size) {
  
  target_nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ExpeditionActivityAssistOp.target_nick_name)
}
::std::string* ExpeditionActivityAssistOp::mutable_target_nick_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.ExpeditionActivityAssistOp.target_nick_name)
  return target_nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ExpeditionActivityAssistOp::release_target_nick_name() {
  // @@protoc_insertion_point(field_release:proto.ExpeditionActivityAssistOp.target_nick_name)
  
  return target_nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExpeditionActivityAssistOp::set_allocated_target_nick_name(::std::string* target_nick_name) {
  if (target_nick_name != NULL) {
    
  } else {
    
  }
  target_nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_nick_name);
  // @@protoc_insertion_point(field_set_allocated:proto.ExpeditionActivityAssistOp.target_nick_name)
}

// string online_id = 5;
void ExpeditionActivityAssistOp::clear_online_id() {
  online_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ExpeditionActivityAssistOp::online_id() const {
  // @@protoc_insertion_point(field_get:proto.ExpeditionActivityAssistOp.online_id)
  return online_id_.GetNoArena();
}
void ExpeditionActivityAssistOp::set_online_id(const ::std::string& value) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ExpeditionActivityAssistOp.online_id)
}
#if LANG_CXX11
void ExpeditionActivityAssistOp::set_online_id(::std::string&& value) {
  
  online_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ExpeditionActivityAssistOp.online_id)
}
#endif
void ExpeditionActivityAssistOp::set_online_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ExpeditionActivityAssistOp.online_id)
}
void ExpeditionActivityAssistOp::set_online_id(const char* value, size_t size) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ExpeditionActivityAssistOp.online_id)
}
::std::string* ExpeditionActivityAssistOp::mutable_online_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.ExpeditionActivityAssistOp.online_id)
  return online_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ExpeditionActivityAssistOp::release_online_id() {
  // @@protoc_insertion_point(field_release:proto.ExpeditionActivityAssistOp.online_id)
  
  return online_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExpeditionActivityAssistOp::set_allocated_online_id(::std::string* online_id) {
  if (online_id != NULL) {
    
  } else {
    
  }
  online_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), online_id);
  // @@protoc_insertion_point(field_set_allocated:proto.ExpeditionActivityAssistOp.online_id)
}

// uint32 assist_uid = 6;
void ExpeditionActivityAssistOp::clear_assist_uid() {
  assist_uid_ = 0u;
}
::google::protobuf::uint32 ExpeditionActivityAssistOp::assist_uid() const {
  // @@protoc_insertion_point(field_get:proto.ExpeditionActivityAssistOp.assist_uid)
  return assist_uid_;
}
void ExpeditionActivityAssistOp::set_assist_uid(::google::protobuf::uint32 value) {
  
  assist_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ExpeditionActivityAssistOp.assist_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecoverWorldLevelOp::RecoverWorldLevelOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RecoverWorldLevelOp)
}
RecoverWorldLevelOp::RecoverWorldLevelOp(const RecoverWorldLevelOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.RecoverWorldLevelOp)
}

void RecoverWorldLevelOp::SharedCtor() {
  _cached_size_ = 0;
}

RecoverWorldLevelOp::~RecoverWorldLevelOp() {
  // @@protoc_insertion_point(destructor:proto.RecoverWorldLevelOp)
  SharedDtor();
}

void RecoverWorldLevelOp::SharedDtor() {
}

void RecoverWorldLevelOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecoverWorldLevelOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecoverWorldLevelOp& RecoverWorldLevelOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

RecoverWorldLevelOp* RecoverWorldLevelOp::New(::google::protobuf::Arena* arena) const {
  RecoverWorldLevelOp* n = new RecoverWorldLevelOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecoverWorldLevelOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RecoverWorldLevelOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool RecoverWorldLevelOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RecoverWorldLevelOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RecoverWorldLevelOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RecoverWorldLevelOp)
  return false;
#undef DO_
}

void RecoverWorldLevelOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RecoverWorldLevelOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RecoverWorldLevelOp)
}

::google::protobuf::uint8* RecoverWorldLevelOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RecoverWorldLevelOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RecoverWorldLevelOp)
  return target;
}

size_t RecoverWorldLevelOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RecoverWorldLevelOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecoverWorldLevelOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RecoverWorldLevelOp)
  GOOGLE_DCHECK_NE(&from, this);
  const RecoverWorldLevelOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecoverWorldLevelOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RecoverWorldLevelOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RecoverWorldLevelOp)
    MergeFrom(*source);
  }
}

void RecoverWorldLevelOp::MergeFrom(const RecoverWorldLevelOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RecoverWorldLevelOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RecoverWorldLevelOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RecoverWorldLevelOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecoverWorldLevelOp::CopyFrom(const RecoverWorldLevelOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RecoverWorldLevelOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecoverWorldLevelOp::IsInitialized() const {
  return true;
}

void RecoverWorldLevelOp::Swap(RecoverWorldLevelOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecoverWorldLevelOp::InternalSwap(RecoverWorldLevelOp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecoverWorldLevelOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RecoverWorldLevelOp

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddRegionSearchProgressOp::kRegionIdFieldNumber;
const int AddRegionSearchProgressOp::kAddRecycleFieldNumber;
const int AddRegionSearchProgressOp::kAddProgressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddRegionSearchProgressOp::AddRegionSearchProgressOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddRegionSearchProgressOp)
}
AddRegionSearchProgressOp::AddRegionSearchProgressOp(const AddRegionSearchProgressOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&region_id_, &from.region_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&add_progress_) -
    reinterpret_cast<char*>(&region_id_)) + sizeof(add_progress_));
  // @@protoc_insertion_point(copy_constructor:proto.AddRegionSearchProgressOp)
}

void AddRegionSearchProgressOp::SharedCtor() {
  ::memset(&region_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&add_progress_) -
      reinterpret_cast<char*>(&region_id_)) + sizeof(add_progress_));
  _cached_size_ = 0;
}

AddRegionSearchProgressOp::~AddRegionSearchProgressOp() {
  // @@protoc_insertion_point(destructor:proto.AddRegionSearchProgressOp)
  SharedDtor();
}

void AddRegionSearchProgressOp::SharedDtor() {
}

void AddRegionSearchProgressOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddRegionSearchProgressOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddRegionSearchProgressOp& AddRegionSearchProgressOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddRegionSearchProgressOp* AddRegionSearchProgressOp::New(::google::protobuf::Arena* arena) const {
  AddRegionSearchProgressOp* n = new AddRegionSearchProgressOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddRegionSearchProgressOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddRegionSearchProgressOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&region_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&add_progress_) -
      reinterpret_cast<char*>(&region_id_)) + sizeof(add_progress_));
  _internal_metadata_.Clear();
}

bool AddRegionSearchProgressOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddRegionSearchProgressOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 region_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 add_recycle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &add_recycle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 add_progress = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &add_progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddRegionSearchProgressOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddRegionSearchProgressOp)
  return false;
#undef DO_
}

void AddRegionSearchProgressOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddRegionSearchProgressOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 region_id = 1;
  if (this->region_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->region_id(), output);
  }

  // uint32 add_recycle = 2;
  if (this->add_recycle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->add_recycle(), output);
  }

  // uint32 add_progress = 3;
  if (this->add_progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->add_progress(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddRegionSearchProgressOp)
}

::google::protobuf::uint8* AddRegionSearchProgressOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddRegionSearchProgressOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 region_id = 1;
  if (this->region_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->region_id(), target);
  }

  // uint32 add_recycle = 2;
  if (this->add_recycle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->add_recycle(), target);
  }

  // uint32 add_progress = 3;
  if (this->add_progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->add_progress(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddRegionSearchProgressOp)
  return target;
}

size_t AddRegionSearchProgressOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddRegionSearchProgressOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 region_id = 1;
  if (this->region_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->region_id());
  }

  // uint32 add_recycle = 2;
  if (this->add_recycle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->add_recycle());
  }

  // uint32 add_progress = 3;
  if (this->add_progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->add_progress());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddRegionSearchProgressOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddRegionSearchProgressOp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddRegionSearchProgressOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddRegionSearchProgressOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddRegionSearchProgressOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddRegionSearchProgressOp)
    MergeFrom(*source);
  }
}

void AddRegionSearchProgressOp::MergeFrom(const AddRegionSearchProgressOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddRegionSearchProgressOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.region_id() != 0) {
    set_region_id(from.region_id());
  }
  if (from.add_recycle() != 0) {
    set_add_recycle(from.add_recycle());
  }
  if (from.add_progress() != 0) {
    set_add_progress(from.add_progress());
  }
}

void AddRegionSearchProgressOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddRegionSearchProgressOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddRegionSearchProgressOp::CopyFrom(const AddRegionSearchProgressOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddRegionSearchProgressOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRegionSearchProgressOp::IsInitialized() const {
  return true;
}

void AddRegionSearchProgressOp::Swap(AddRegionSearchProgressOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddRegionSearchProgressOp::InternalSwap(AddRegionSearchProgressOp* other) {
  using std::swap;
  swap(region_id_, other->region_id_);
  swap(add_recycle_, other->add_recycle_);
  swap(add_progress_, other->add_progress_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddRegionSearchProgressOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddRegionSearchProgressOp

// uint32 region_id = 1;
void AddRegionSearchProgressOp::clear_region_id() {
  region_id_ = 0u;
}
::google::protobuf::uint32 AddRegionSearchProgressOp::region_id() const {
  // @@protoc_insertion_point(field_get:proto.AddRegionSearchProgressOp.region_id)
  return region_id_;
}
void AddRegionSearchProgressOp::set_region_id(::google::protobuf::uint32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddRegionSearchProgressOp.region_id)
}

// uint32 add_recycle = 2;
void AddRegionSearchProgressOp::clear_add_recycle() {
  add_recycle_ = 0u;
}
::google::protobuf::uint32 AddRegionSearchProgressOp::add_recycle() const {
  // @@protoc_insertion_point(field_get:proto.AddRegionSearchProgressOp.add_recycle)
  return add_recycle_;
}
void AddRegionSearchProgressOp::set_add_recycle(::google::protobuf::uint32 value) {
  
  add_recycle_ = value;
  // @@protoc_insertion_point(field_set:proto.AddRegionSearchProgressOp.add_recycle)
}

// uint32 add_progress = 3;
void AddRegionSearchProgressOp::clear_add_progress() {
  add_progress_ = 0u;
}
::google::protobuf::uint32 AddRegionSearchProgressOp::add_progress() const {
  // @@protoc_insertion_point(field_get:proto.AddRegionSearchProgressOp.add_progress)
  return add_progress_;
}
void AddRegionSearchProgressOp::set_add_progress(::google::protobuf::uint32 value) {
  
  add_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.AddRegionSearchProgressOp.add_progress)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetMatchPunishTimesOp::kMatchIdFieldNumber;
const int SetMatchPunishTimesOp::kPunishTimesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetMatchPunishTimesOp::SetMatchPunishTimesOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetMatchPunishTimesOp)
}
SetMatchPunishTimesOp::SetMatchPunishTimesOp(const SetMatchPunishTimesOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&match_id_, &from.match_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&punish_times_) -
    reinterpret_cast<char*>(&match_id_)) + sizeof(punish_times_));
  // @@protoc_insertion_point(copy_constructor:proto.SetMatchPunishTimesOp)
}

void SetMatchPunishTimesOp::SharedCtor() {
  ::memset(&match_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&punish_times_) -
      reinterpret_cast<char*>(&match_id_)) + sizeof(punish_times_));
  _cached_size_ = 0;
}

SetMatchPunishTimesOp::~SetMatchPunishTimesOp() {
  // @@protoc_insertion_point(destructor:proto.SetMatchPunishTimesOp)
  SharedDtor();
}

void SetMatchPunishTimesOp::SharedDtor() {
}

void SetMatchPunishTimesOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetMatchPunishTimesOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetMatchPunishTimesOp& SetMatchPunishTimesOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetMatchPunishTimesOp* SetMatchPunishTimesOp::New(::google::protobuf::Arena* arena) const {
  SetMatchPunishTimesOp* n = new SetMatchPunishTimesOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetMatchPunishTimesOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetMatchPunishTimesOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&match_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&punish_times_) -
      reinterpret_cast<char*>(&match_id_)) + sizeof(punish_times_));
  _internal_metadata_.Clear();
}

bool SetMatchPunishTimesOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetMatchPunishTimesOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 match_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &match_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 punish_times = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &punish_times_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetMatchPunishTimesOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetMatchPunishTimesOp)
  return false;
#undef DO_
}

void SetMatchPunishTimesOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetMatchPunishTimesOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 match_id = 1;
  if (this->match_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->match_id(), output);
  }

  // uint32 punish_times = 2;
  if (this->punish_times() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->punish_times(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetMatchPunishTimesOp)
}

::google::protobuf::uint8* SetMatchPunishTimesOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetMatchPunishTimesOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 match_id = 1;
  if (this->match_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->match_id(), target);
  }

  // uint32 punish_times = 2;
  if (this->punish_times() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->punish_times(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetMatchPunishTimesOp)
  return target;
}

size_t SetMatchPunishTimesOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetMatchPunishTimesOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 match_id = 1;
  if (this->match_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->match_id());
  }

  // uint32 punish_times = 2;
  if (this->punish_times() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->punish_times());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetMatchPunishTimesOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetMatchPunishTimesOp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetMatchPunishTimesOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetMatchPunishTimesOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetMatchPunishTimesOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetMatchPunishTimesOp)
    MergeFrom(*source);
  }
}

void SetMatchPunishTimesOp::MergeFrom(const SetMatchPunishTimesOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetMatchPunishTimesOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.match_id() != 0) {
    set_match_id(from.match_id());
  }
  if (from.punish_times() != 0) {
    set_punish_times(from.punish_times());
  }
}

void SetMatchPunishTimesOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetMatchPunishTimesOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetMatchPunishTimesOp::CopyFrom(const SetMatchPunishTimesOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetMatchPunishTimesOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMatchPunishTimesOp::IsInitialized() const {
  return true;
}

void SetMatchPunishTimesOp::Swap(SetMatchPunishTimesOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetMatchPunishTimesOp::InternalSwap(SetMatchPunishTimesOp* other) {
  using std::swap;
  swap(match_id_, other->match_id_);
  swap(punish_times_, other->punish_times_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetMatchPunishTimesOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetMatchPunishTimesOp

// uint32 match_id = 1;
void SetMatchPunishTimesOp::clear_match_id() {
  match_id_ = 0u;
}
::google::protobuf::uint32 SetMatchPunishTimesOp::match_id() const {
  // @@protoc_insertion_point(field_get:proto.SetMatchPunishTimesOp.match_id)
  return match_id_;
}
void SetMatchPunishTimesOp::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetMatchPunishTimesOp.match_id)
}

// uint32 punish_times = 2;
void SetMatchPunishTimesOp::clear_punish_times() {
  punish_times_ = 0u;
}
::google::protobuf::uint32 SetMatchPunishTimesOp::punish_times() const {
  // @@protoc_insertion_point(field_get:proto.SetMatchPunishTimesOp.punish_times)
  return punish_times_;
}
void SetMatchPunishTimesOp::set_punish_times(::google::protobuf::uint32 value) {
  
  punish_times_ = value;
  // @@protoc_insertion_point(field_set:proto.SetMatchPunishTimesOp.punish_times)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResetChannellerSlabCampGroupOp::kStageIdFieldNumber;
const int ResetChannellerSlabCampGroupOp::kRoundIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResetChannellerSlabCampGroupOp::ResetChannellerSlabCampGroupOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ResetChannellerSlabCampGroupOp)
}
ResetChannellerSlabCampGroupOp::ResetChannellerSlabCampGroupOp(const ResetChannellerSlabCampGroupOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&stage_id_, &from.stage_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&round_id_) -
    reinterpret_cast<char*>(&stage_id_)) + sizeof(round_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ResetChannellerSlabCampGroupOp)
}

void ResetChannellerSlabCampGroupOp::SharedCtor() {
  ::memset(&stage_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&round_id_) -
      reinterpret_cast<char*>(&stage_id_)) + sizeof(round_id_));
  _cached_size_ = 0;
}

ResetChannellerSlabCampGroupOp::~ResetChannellerSlabCampGroupOp() {
  // @@protoc_insertion_point(destructor:proto.ResetChannellerSlabCampGroupOp)
  SharedDtor();
}

void ResetChannellerSlabCampGroupOp::SharedDtor() {
}

void ResetChannellerSlabCampGroupOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResetChannellerSlabCampGroupOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResetChannellerSlabCampGroupOp& ResetChannellerSlabCampGroupOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResetChannellerSlabCampGroupOp* ResetChannellerSlabCampGroupOp::New(::google::protobuf::Arena* arena) const {
  ResetChannellerSlabCampGroupOp* n = new ResetChannellerSlabCampGroupOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResetChannellerSlabCampGroupOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ResetChannellerSlabCampGroupOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&stage_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&round_id_) -
      reinterpret_cast<char*>(&stage_id_)) + sizeof(round_id_));
  _internal_metadata_.Clear();
}

bool ResetChannellerSlabCampGroupOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ResetChannellerSlabCampGroupOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 stage_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stage_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 round_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &round_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ResetChannellerSlabCampGroupOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ResetChannellerSlabCampGroupOp)
  return false;
#undef DO_
}

void ResetChannellerSlabCampGroupOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ResetChannellerSlabCampGroupOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 stage_id = 1;
  if (this->stage_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->stage_id(), output);
  }

  // uint32 round_id = 2;
  if (this->round_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->round_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ResetChannellerSlabCampGroupOp)
}

::google::protobuf::uint8* ResetChannellerSlabCampGroupOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ResetChannellerSlabCampGroupOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 stage_id = 1;
  if (this->stage_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->stage_id(), target);
  }

  // uint32 round_id = 2;
  if (this->round_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->round_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ResetChannellerSlabCampGroupOp)
  return target;
}

size_t ResetChannellerSlabCampGroupOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ResetChannellerSlabCampGroupOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 stage_id = 1;
  if (this->stage_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->stage_id());
  }

  // uint32 round_id = 2;
  if (this->round_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->round_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResetChannellerSlabCampGroupOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ResetChannellerSlabCampGroupOp)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetChannellerSlabCampGroupOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResetChannellerSlabCampGroupOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ResetChannellerSlabCampGroupOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ResetChannellerSlabCampGroupOp)
    MergeFrom(*source);
  }
}

void ResetChannellerSlabCampGroupOp::MergeFrom(const ResetChannellerSlabCampGroupOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ResetChannellerSlabCampGroupOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stage_id() != 0) {
    set_stage_id(from.stage_id());
  }
  if (from.round_id() != 0) {
    set_round_id(from.round_id());
  }
}

void ResetChannellerSlabCampGroupOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ResetChannellerSlabCampGroupOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetChannellerSlabCampGroupOp::CopyFrom(const ResetChannellerSlabCampGroupOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ResetChannellerSlabCampGroupOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetChannellerSlabCampGroupOp::IsInitialized() const {
  return true;
}

void ResetChannellerSlabCampGroupOp::Swap(ResetChannellerSlabCampGroupOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResetChannellerSlabCampGroupOp::InternalSwap(ResetChannellerSlabCampGroupOp* other) {
  using std::swap;
  swap(stage_id_, other->stage_id_);
  swap(round_id_, other->round_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResetChannellerSlabCampGroupOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResetChannellerSlabCampGroupOp

// uint32 stage_id = 1;
void ResetChannellerSlabCampGroupOp::clear_stage_id() {
  stage_id_ = 0u;
}
::google::protobuf::uint32 ResetChannellerSlabCampGroupOp::stage_id() const {
  // @@protoc_insertion_point(field_get:proto.ResetChannellerSlabCampGroupOp.stage_id)
  return stage_id_;
}
void ResetChannellerSlabCampGroupOp::set_stage_id(::google::protobuf::uint32 value) {
  
  stage_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ResetChannellerSlabCampGroupOp.stage_id)
}

// uint32 round_id = 2;
void ResetChannellerSlabCampGroupOp::clear_round_id() {
  round_id_ = 0u;
}
::google::protobuf::uint32 ResetChannellerSlabCampGroupOp::round_id() const {
  // @@protoc_insertion_point(field_get:proto.ResetChannellerSlabCampGroupOp.round_id)
  return round_id_;
}
void ResetChannellerSlabCampGroupOp::set_round_id(::google::protobuf::uint32 value) {
  
  round_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ResetChannellerSlabCampGroupOp.round_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForceAcceptQuestOp::kQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForceAcceptQuestOp::ForceAcceptQuestOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ForceAcceptQuestOp)
}
ForceAcceptQuestOp::ForceAcceptQuestOp(const ForceAcceptQuestOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  quest_id_ = from.quest_id_;
  // @@protoc_insertion_point(copy_constructor:proto.ForceAcceptQuestOp)
}

void ForceAcceptQuestOp::SharedCtor() {
  quest_id_ = 0u;
  _cached_size_ = 0;
}

ForceAcceptQuestOp::~ForceAcceptQuestOp() {
  // @@protoc_insertion_point(destructor:proto.ForceAcceptQuestOp)
  SharedDtor();
}

void ForceAcceptQuestOp::SharedDtor() {
}

void ForceAcceptQuestOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ForceAcceptQuestOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ForceAcceptQuestOp& ForceAcceptQuestOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ForceAcceptQuestOp* ForceAcceptQuestOp::New(::google::protobuf::Arena* arena) const {
  ForceAcceptQuestOp* n = new ForceAcceptQuestOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ForceAcceptQuestOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ForceAcceptQuestOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quest_id_ = 0u;
  _internal_metadata_.Clear();
}

bool ForceAcceptQuestOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ForceAcceptQuestOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 quest_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ForceAcceptQuestOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ForceAcceptQuestOp)
  return false;
#undef DO_
}

void ForceAcceptQuestOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ForceAcceptQuestOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 1;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->quest_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ForceAcceptQuestOp)
}

::google::protobuf::uint8* ForceAcceptQuestOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ForceAcceptQuestOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 1;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->quest_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ForceAcceptQuestOp)
  return target;
}

size_t ForceAcceptQuestOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ForceAcceptQuestOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 quest_id = 1;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ForceAcceptQuestOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ForceAcceptQuestOp)
  GOOGLE_DCHECK_NE(&from, this);
  const ForceAcceptQuestOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ForceAcceptQuestOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ForceAcceptQuestOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ForceAcceptQuestOp)
    MergeFrom(*source);
  }
}

void ForceAcceptQuestOp::MergeFrom(const ForceAcceptQuestOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ForceAcceptQuestOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
}

void ForceAcceptQuestOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ForceAcceptQuestOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForceAcceptQuestOp::CopyFrom(const ForceAcceptQuestOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ForceAcceptQuestOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForceAcceptQuestOp::IsInitialized() const {
  return true;
}

void ForceAcceptQuestOp::Swap(ForceAcceptQuestOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForceAcceptQuestOp::InternalSwap(ForceAcceptQuestOp* other) {
  using std::swap;
  swap(quest_id_, other->quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ForceAcceptQuestOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ForceAcceptQuestOp

// uint32 quest_id = 1;
void ForceAcceptQuestOp::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 ForceAcceptQuestOp::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.ForceAcceptQuestOp.quest_id)
  return quest_id_;
}
void ForceAcceptQuestOp::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ForceAcceptQuestOp.quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetMainCoopConfidenceOp::kConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetMainCoopConfidenceOp::SetMainCoopConfidenceOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetMainCoopConfidenceOp)
}
SetMainCoopConfidenceOp::SetMainCoopConfidenceOp(const SetMainCoopConfidenceOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  confidence_ = from.confidence_;
  // @@protoc_insertion_point(copy_constructor:proto.SetMainCoopConfidenceOp)
}

void SetMainCoopConfidenceOp::SharedCtor() {
  confidence_ = 0u;
  _cached_size_ = 0;
}

SetMainCoopConfidenceOp::~SetMainCoopConfidenceOp() {
  // @@protoc_insertion_point(destructor:proto.SetMainCoopConfidenceOp)
  SharedDtor();
}

void SetMainCoopConfidenceOp::SharedDtor() {
}

void SetMainCoopConfidenceOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetMainCoopConfidenceOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetMainCoopConfidenceOp& SetMainCoopConfidenceOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetMainCoopConfidenceOp* SetMainCoopConfidenceOp::New(::google::protobuf::Arena* arena) const {
  SetMainCoopConfidenceOp* n = new SetMainCoopConfidenceOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetMainCoopConfidenceOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetMainCoopConfidenceOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  confidence_ = 0u;
  _internal_metadata_.Clear();
}

bool SetMainCoopConfidenceOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetMainCoopConfidenceOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 confidence = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetMainCoopConfidenceOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetMainCoopConfidenceOp)
  return false;
#undef DO_
}

void SetMainCoopConfidenceOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetMainCoopConfidenceOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 confidence = 1;
  if (this->confidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->confidence(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetMainCoopConfidenceOp)
}

::google::protobuf::uint8* SetMainCoopConfidenceOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetMainCoopConfidenceOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 confidence = 1;
  if (this->confidence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->confidence(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetMainCoopConfidenceOp)
  return target;
}

size_t SetMainCoopConfidenceOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetMainCoopConfidenceOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 confidence = 1;
  if (this->confidence() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->confidence());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetMainCoopConfidenceOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetMainCoopConfidenceOp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetMainCoopConfidenceOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetMainCoopConfidenceOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetMainCoopConfidenceOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetMainCoopConfidenceOp)
    MergeFrom(*source);
  }
}

void SetMainCoopConfidenceOp::MergeFrom(const SetMainCoopConfidenceOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetMainCoopConfidenceOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.confidence() != 0) {
    set_confidence(from.confidence());
  }
}

void SetMainCoopConfidenceOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetMainCoopConfidenceOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetMainCoopConfidenceOp::CopyFrom(const SetMainCoopConfidenceOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetMainCoopConfidenceOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMainCoopConfidenceOp::IsInitialized() const {
  return true;
}

void SetMainCoopConfidenceOp::Swap(SetMainCoopConfidenceOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetMainCoopConfidenceOp::InternalSwap(SetMainCoopConfidenceOp* other) {
  using std::swap;
  swap(confidence_, other->confidence_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetMainCoopConfidenceOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetMainCoopConfidenceOp

// uint32 confidence = 1;
void SetMainCoopConfidenceOp::clear_confidence() {
  confidence_ = 0u;
}
::google::protobuf::uint32 SetMainCoopConfidenceOp::confidence() const {
  // @@protoc_insertion_point(field_get:proto.SetMainCoopConfidenceOp.confidence)
  return confidence_;
}
void SetMainCoopConfidenceOp::set_confidence(::google::protobuf::uint32 value) {
  
  confidence_ = value;
  // @@protoc_insertion_point(field_set:proto.SetMainCoopConfidenceOp.confidence)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddCoopPointSavePointListOp::kCoopPointIdFieldNumber;
const int AddCoopPointSavePointListOp::kSavePointListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddCoopPointSavePointListOp::AddCoopPointSavePointListOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddCoopPointSavePointListOp)
}
AddCoopPointSavePointListOp::AddCoopPointSavePointListOp(const AddCoopPointSavePointListOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      save_point_list_(from.save_point_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  coop_point_id_ = from.coop_point_id_;
  // @@protoc_insertion_point(copy_constructor:proto.AddCoopPointSavePointListOp)
}

void AddCoopPointSavePointListOp::SharedCtor() {
  coop_point_id_ = 0u;
  _cached_size_ = 0;
}

AddCoopPointSavePointListOp::~AddCoopPointSavePointListOp() {
  // @@protoc_insertion_point(destructor:proto.AddCoopPointSavePointListOp)
  SharedDtor();
}

void AddCoopPointSavePointListOp::SharedDtor() {
}

void AddCoopPointSavePointListOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddCoopPointSavePointListOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddCoopPointSavePointListOp& AddCoopPointSavePointListOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddCoopPointSavePointListOp* AddCoopPointSavePointListOp::New(::google::protobuf::Arena* arena) const {
  AddCoopPointSavePointListOp* n = new AddCoopPointSavePointListOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddCoopPointSavePointListOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddCoopPointSavePointListOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  save_point_list_.Clear();
  coop_point_id_ = 0u;
  _internal_metadata_.Clear();
}

bool AddCoopPointSavePointListOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddCoopPointSavePointListOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 coop_point_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &coop_point_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 save_point_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_save_point_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_save_point_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddCoopPointSavePointListOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddCoopPointSavePointListOp)
  return false;
#undef DO_
}

void AddCoopPointSavePointListOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddCoopPointSavePointListOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 coop_point_id = 1;
  if (this->coop_point_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->coop_point_id(), output);
  }

  // repeated uint32 save_point_list = 2;
  if (this->save_point_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _save_point_list_cached_byte_size_));
  }
  for (int i = 0, n = this->save_point_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->save_point_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddCoopPointSavePointListOp)
}

::google::protobuf::uint8* AddCoopPointSavePointListOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddCoopPointSavePointListOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 coop_point_id = 1;
  if (this->coop_point_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->coop_point_id(), target);
  }

  // repeated uint32 save_point_list = 2;
  if (this->save_point_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _save_point_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->save_point_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddCoopPointSavePointListOp)
  return target;
}

size_t AddCoopPointSavePointListOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddCoopPointSavePointListOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 save_point_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->save_point_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _save_point_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 coop_point_id = 1;
  if (this->coop_point_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->coop_point_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddCoopPointSavePointListOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddCoopPointSavePointListOp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddCoopPointSavePointListOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddCoopPointSavePointListOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddCoopPointSavePointListOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddCoopPointSavePointListOp)
    MergeFrom(*source);
  }
}

void AddCoopPointSavePointListOp::MergeFrom(const AddCoopPointSavePointListOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddCoopPointSavePointListOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  save_point_list_.MergeFrom(from.save_point_list_);
  if (from.coop_point_id() != 0) {
    set_coop_point_id(from.coop_point_id());
  }
}

void AddCoopPointSavePointListOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddCoopPointSavePointListOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddCoopPointSavePointListOp::CopyFrom(const AddCoopPointSavePointListOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddCoopPointSavePointListOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddCoopPointSavePointListOp::IsInitialized() const {
  return true;
}

void AddCoopPointSavePointListOp::Swap(AddCoopPointSavePointListOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddCoopPointSavePointListOp::InternalSwap(AddCoopPointSavePointListOp* other) {
  using std::swap;
  save_point_list_.InternalSwap(&other->save_point_list_);
  swap(coop_point_id_, other->coop_point_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddCoopPointSavePointListOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddCoopPointSavePointListOp

// uint32 coop_point_id = 1;
void AddCoopPointSavePointListOp::clear_coop_point_id() {
  coop_point_id_ = 0u;
}
::google::protobuf::uint32 AddCoopPointSavePointListOp::coop_point_id() const {
  // @@protoc_insertion_point(field_get:proto.AddCoopPointSavePointListOp.coop_point_id)
  return coop_point_id_;
}
void AddCoopPointSavePointListOp::set_coop_point_id(::google::protobuf::uint32 value) {
  
  coop_point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddCoopPointSavePointListOp.coop_point_id)
}

// repeated uint32 save_point_list = 2;
int AddCoopPointSavePointListOp::save_point_list_size() const {
  return save_point_list_.size();
}
void AddCoopPointSavePointListOp::clear_save_point_list() {
  save_point_list_.Clear();
}
::google::protobuf::uint32 AddCoopPointSavePointListOp::save_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AddCoopPointSavePointListOp.save_point_list)
  return save_point_list_.Get(index);
}
void AddCoopPointSavePointListOp::set_save_point_list(int index, ::google::protobuf::uint32 value) {
  save_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AddCoopPointSavePointListOp.save_point_list)
}
void AddCoopPointSavePointListOp::add_save_point_list(::google::protobuf::uint32 value) {
  save_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AddCoopPointSavePointListOp.save_point_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AddCoopPointSavePointListOp::save_point_list() const {
  // @@protoc_insertion_point(field_list:proto.AddCoopPointSavePointListOp.save_point_list)
  return save_point_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AddCoopPointSavePointListOp::mutable_save_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AddCoopPointSavePointListOp.save_point_list)
  return &save_point_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetClimateAreaTypeOp::kSceneIdFieldNumber;
const int SetClimateAreaTypeOp::kClimateAreaIdFieldNumber;
const int SetClimateAreaTypeOp::kClimateTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetClimateAreaTypeOp::SetClimateAreaTypeOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetClimateAreaTypeOp)
}
SetClimateAreaTypeOp::SetClimateAreaTypeOp(const SetClimateAreaTypeOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&climate_type_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(climate_type_));
  // @@protoc_insertion_point(copy_constructor:proto.SetClimateAreaTypeOp)
}

void SetClimateAreaTypeOp::SharedCtor() {
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&climate_type_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(climate_type_));
  _cached_size_ = 0;
}

SetClimateAreaTypeOp::~SetClimateAreaTypeOp() {
  // @@protoc_insertion_point(destructor:proto.SetClimateAreaTypeOp)
  SharedDtor();
}

void SetClimateAreaTypeOp::SharedDtor() {
}

void SetClimateAreaTypeOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetClimateAreaTypeOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetClimateAreaTypeOp& SetClimateAreaTypeOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetClimateAreaTypeOp* SetClimateAreaTypeOp::New(::google::protobuf::Arena* arena) const {
  SetClimateAreaTypeOp* n = new SetClimateAreaTypeOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetClimateAreaTypeOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetClimateAreaTypeOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&climate_type_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(climate_type_));
  _internal_metadata_.Clear();
}

bool SetClimateAreaTypeOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetClimateAreaTypeOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 climate_area_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &climate_area_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 climate_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &climate_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetClimateAreaTypeOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetClimateAreaTypeOp)
  return false;
#undef DO_
}

void SetClimateAreaTypeOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetClimateAreaTypeOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // uint32 climate_area_id = 2;
  if (this->climate_area_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->climate_area_id(), output);
  }

  // uint32 climate_type = 3;
  if (this->climate_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->climate_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetClimateAreaTypeOp)
}

::google::protobuf::uint8* SetClimateAreaTypeOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetClimateAreaTypeOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // uint32 climate_area_id = 2;
  if (this->climate_area_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->climate_area_id(), target);
  }

  // uint32 climate_type = 3;
  if (this->climate_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->climate_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetClimateAreaTypeOp)
  return target;
}

size_t SetClimateAreaTypeOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetClimateAreaTypeOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 climate_area_id = 2;
  if (this->climate_area_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->climate_area_id());
  }

  // uint32 climate_type = 3;
  if (this->climate_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->climate_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetClimateAreaTypeOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetClimateAreaTypeOp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetClimateAreaTypeOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetClimateAreaTypeOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetClimateAreaTypeOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetClimateAreaTypeOp)
    MergeFrom(*source);
  }
}

void SetClimateAreaTypeOp::MergeFrom(const SetClimateAreaTypeOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetClimateAreaTypeOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.climate_area_id() != 0) {
    set_climate_area_id(from.climate_area_id());
  }
  if (from.climate_type() != 0) {
    set_climate_type(from.climate_type());
  }
}

void SetClimateAreaTypeOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetClimateAreaTypeOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetClimateAreaTypeOp::CopyFrom(const SetClimateAreaTypeOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetClimateAreaTypeOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetClimateAreaTypeOp::IsInitialized() const {
  return true;
}

void SetClimateAreaTypeOp::Swap(SetClimateAreaTypeOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetClimateAreaTypeOp::InternalSwap(SetClimateAreaTypeOp* other) {
  using std::swap;
  swap(scene_id_, other->scene_id_);
  swap(climate_area_id_, other->climate_area_id_);
  swap(climate_type_, other->climate_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetClimateAreaTypeOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetClimateAreaTypeOp

// uint32 scene_id = 1;
void SetClimateAreaTypeOp::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 SetClimateAreaTypeOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.SetClimateAreaTypeOp.scene_id)
  return scene_id_;
}
void SetClimateAreaTypeOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetClimateAreaTypeOp.scene_id)
}

// uint32 climate_area_id = 2;
void SetClimateAreaTypeOp::clear_climate_area_id() {
  climate_area_id_ = 0u;
}
::google::protobuf::uint32 SetClimateAreaTypeOp::climate_area_id() const {
  // @@protoc_insertion_point(field_get:proto.SetClimateAreaTypeOp.climate_area_id)
  return climate_area_id_;
}
void SetClimateAreaTypeOp::set_climate_area_id(::google::protobuf::uint32 value) {
  
  climate_area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetClimateAreaTypeOp.climate_area_id)
}

// uint32 climate_type = 3;
void SetClimateAreaTypeOp::clear_climate_type() {
  climate_type_ = 0u;
}
::google::protobuf::uint32 SetClimateAreaTypeOp::climate_type() const {
  // @@protoc_insertion_point(field_get:proto.SetClimateAreaTypeOp.climate_type)
  return climate_type_;
}
void SetClimateAreaTypeOp::set_climate_type(::google::protobuf::uint32 value) {
  
  climate_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SetClimateAreaTypeOp.climate_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcSceneTagOp::kSceneIdFieldNumber;
const int ProcSceneTagOp::kSceneTagIdFieldNumber;
const int ProcSceneTagOp::kOpTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcSceneTagOp::ProcSceneTagOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ProcSceneTagOp)
}
ProcSceneTagOp::ProcSceneTagOp(const ProcSceneTagOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&op_type_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(op_type_));
  // @@protoc_insertion_point(copy_constructor:proto.ProcSceneTagOp)
}

void ProcSceneTagOp::SharedCtor() {
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_type_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(op_type_));
  _cached_size_ = 0;
}

ProcSceneTagOp::~ProcSceneTagOp() {
  // @@protoc_insertion_point(destructor:proto.ProcSceneTagOp)
  SharedDtor();
}

void ProcSceneTagOp::SharedDtor() {
}

void ProcSceneTagOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProcSceneTagOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcSceneTagOp& ProcSceneTagOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProcSceneTagOp* ProcSceneTagOp::New(::google::protobuf::Arena* arena) const {
  ProcSceneTagOp* n = new ProcSceneTagOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProcSceneTagOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ProcSceneTagOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_type_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(op_type_));
  _internal_metadata_.Clear();
}

bool ProcSceneTagOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ProcSceneTagOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_tag_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_tag_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SceneTagOpType op_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::proto::SceneTagOpType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ProcSceneTagOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ProcSceneTagOp)
  return false;
#undef DO_
}

void ProcSceneTagOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ProcSceneTagOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // uint32 scene_tag_id = 2;
  if (this->scene_tag_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->scene_tag_id(), output);
  }

  // .proto.SceneTagOpType op_type = 3;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->op_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ProcSceneTagOp)
}

::google::protobuf::uint8* ProcSceneTagOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ProcSceneTagOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // uint32 scene_tag_id = 2;
  if (this->scene_tag_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->scene_tag_id(), target);
  }

  // .proto.SceneTagOpType op_type = 3;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->op_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ProcSceneTagOp)
  return target;
}

size_t ProcSceneTagOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ProcSceneTagOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 scene_tag_id = 2;
  if (this->scene_tag_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_tag_id());
  }

  // .proto.SceneTagOpType op_type = 3;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProcSceneTagOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ProcSceneTagOp)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcSceneTagOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcSceneTagOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ProcSceneTagOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ProcSceneTagOp)
    MergeFrom(*source);
  }
}

void ProcSceneTagOp::MergeFrom(const ProcSceneTagOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ProcSceneTagOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.scene_tag_id() != 0) {
    set_scene_tag_id(from.scene_tag_id());
  }
  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
}

void ProcSceneTagOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ProcSceneTagOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcSceneTagOp::CopyFrom(const ProcSceneTagOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ProcSceneTagOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcSceneTagOp::IsInitialized() const {
  return true;
}

void ProcSceneTagOp::Swap(ProcSceneTagOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcSceneTagOp::InternalSwap(ProcSceneTagOp* other) {
  using std::swap;
  swap(scene_id_, other->scene_id_);
  swap(scene_tag_id_, other->scene_tag_id_);
  swap(op_type_, other->op_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProcSceneTagOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProcSceneTagOp

// uint32 scene_id = 1;
void ProcSceneTagOp::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 ProcSceneTagOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ProcSceneTagOp.scene_id)
  return scene_id_;
}
void ProcSceneTagOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ProcSceneTagOp.scene_id)
}

// uint32 scene_tag_id = 2;
void ProcSceneTagOp::clear_scene_tag_id() {
  scene_tag_id_ = 0u;
}
::google::protobuf::uint32 ProcSceneTagOp::scene_tag_id() const {
  // @@protoc_insertion_point(field_get:proto.ProcSceneTagOp.scene_tag_id)
  return scene_tag_id_;
}
void ProcSceneTagOp::set_scene_tag_id(::google::protobuf::uint32 value) {
  
  scene_tag_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ProcSceneTagOp.scene_tag_id)
}

// .proto.SceneTagOpType op_type = 3;
void ProcSceneTagOp::clear_op_type() {
  op_type_ = 0;
}
::proto::SceneTagOpType ProcSceneTagOp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.ProcSceneTagOp.op_type)
  return static_cast< ::proto::SceneTagOpType >(op_type_);
}
void ProcSceneTagOp::set_op_type(::proto::SceneTagOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ProcSceneTagOp.op_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetFinishedParentQuestChildStateOp::kQuestIdFieldNumber;
const int SetFinishedParentQuestChildStateOp::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetFinishedParentQuestChildStateOp::SetFinishedParentQuestChildStateOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetFinishedParentQuestChildStateOp)
}
SetFinishedParentQuestChildStateOp::SetFinishedParentQuestChildStateOp(const SetFinishedParentQuestChildStateOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&quest_id_, &from.quest_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&quest_id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:proto.SetFinishedParentQuestChildStateOp)
}

void SetFinishedParentQuestChildStateOp::SharedCtor() {
  ::memset(&quest_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&quest_id_)) + sizeof(state_));
  _cached_size_ = 0;
}

SetFinishedParentQuestChildStateOp::~SetFinishedParentQuestChildStateOp() {
  // @@protoc_insertion_point(destructor:proto.SetFinishedParentQuestChildStateOp)
  SharedDtor();
}

void SetFinishedParentQuestChildStateOp::SharedDtor() {
}

void SetFinishedParentQuestChildStateOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetFinishedParentQuestChildStateOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetFinishedParentQuestChildStateOp& SetFinishedParentQuestChildStateOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetFinishedParentQuestChildStateOp* SetFinishedParentQuestChildStateOp::New(::google::protobuf::Arena* arena) const {
  SetFinishedParentQuestChildStateOp* n = new SetFinishedParentQuestChildStateOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetFinishedParentQuestChildStateOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetFinishedParentQuestChildStateOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&quest_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&quest_id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool SetFinishedParentQuestChildStateOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetFinishedParentQuestChildStateOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 quest_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetFinishedParentQuestChildStateOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetFinishedParentQuestChildStateOp)
  return false;
#undef DO_
}

void SetFinishedParentQuestChildStateOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetFinishedParentQuestChildStateOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 1;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->quest_id(), output);
  }

  // uint32 state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetFinishedParentQuestChildStateOp)
}

::google::protobuf::uint8* SetFinishedParentQuestChildStateOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetFinishedParentQuestChildStateOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 1;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->quest_id(), target);
  }

  // uint32 state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetFinishedParentQuestChildStateOp)
  return target;
}

size_t SetFinishedParentQuestChildStateOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetFinishedParentQuestChildStateOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 quest_id = 1;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  // uint32 state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetFinishedParentQuestChildStateOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetFinishedParentQuestChildStateOp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetFinishedParentQuestChildStateOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetFinishedParentQuestChildStateOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetFinishedParentQuestChildStateOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetFinishedParentQuestChildStateOp)
    MergeFrom(*source);
  }
}

void SetFinishedParentQuestChildStateOp::MergeFrom(const SetFinishedParentQuestChildStateOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetFinishedParentQuestChildStateOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void SetFinishedParentQuestChildStateOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetFinishedParentQuestChildStateOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetFinishedParentQuestChildStateOp::CopyFrom(const SetFinishedParentQuestChildStateOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetFinishedParentQuestChildStateOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFinishedParentQuestChildStateOp::IsInitialized() const {
  return true;
}

void SetFinishedParentQuestChildStateOp::Swap(SetFinishedParentQuestChildStateOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetFinishedParentQuestChildStateOp::InternalSwap(SetFinishedParentQuestChildStateOp* other) {
  using std::swap;
  swap(quest_id_, other->quest_id_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetFinishedParentQuestChildStateOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetFinishedParentQuestChildStateOp

// uint32 quest_id = 1;
void SetFinishedParentQuestChildStateOp::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 SetFinishedParentQuestChildStateOp::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.SetFinishedParentQuestChildStateOp.quest_id)
  return quest_id_;
}
void SetFinishedParentQuestChildStateOp::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetFinishedParentQuestChildStateOp.quest_id)
}

// uint32 state = 2;
void SetFinishedParentQuestChildStateOp::clear_state() {
  state_ = 0u;
}
::google::protobuf::uint32 SetFinishedParentQuestChildStateOp::state() const {
  // @@protoc_insertion_point(field_get:proto.SetFinishedParentQuestChildStateOp.state)
  return state_;
}
void SetFinishedParentQuestChildStateOp::set_state(::google::protobuf::uint32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.SetFinishedParentQuestChildStateOp.state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeMapAreaInfoOp::kMapAreaIdFieldNumber;
const int ChangeMapAreaInfoOp::kIsOpenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeMapAreaInfoOp::ChangeMapAreaInfoOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChangeMapAreaInfoOp)
}
ChangeMapAreaInfoOp::ChangeMapAreaInfoOp(const ChangeMapAreaInfoOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&map_area_id_, &from.map_area_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_open_) -
    reinterpret_cast<char*>(&map_area_id_)) + sizeof(is_open_));
  // @@protoc_insertion_point(copy_constructor:proto.ChangeMapAreaInfoOp)
}

void ChangeMapAreaInfoOp::SharedCtor() {
  ::memset(&map_area_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_open_) -
      reinterpret_cast<char*>(&map_area_id_)) + sizeof(is_open_));
  _cached_size_ = 0;
}

ChangeMapAreaInfoOp::~ChangeMapAreaInfoOp() {
  // @@protoc_insertion_point(destructor:proto.ChangeMapAreaInfoOp)
  SharedDtor();
}

void ChangeMapAreaInfoOp::SharedDtor() {
}

void ChangeMapAreaInfoOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeMapAreaInfoOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeMapAreaInfoOp& ChangeMapAreaInfoOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChangeMapAreaInfoOp* ChangeMapAreaInfoOp::New(::google::protobuf::Arena* arena) const {
  ChangeMapAreaInfoOp* n = new ChangeMapAreaInfoOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangeMapAreaInfoOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChangeMapAreaInfoOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&map_area_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_open_) -
      reinterpret_cast<char*>(&map_area_id_)) + sizeof(is_open_));
  _internal_metadata_.Clear();
}

bool ChangeMapAreaInfoOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChangeMapAreaInfoOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 map_area_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &map_area_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_open = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_open_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChangeMapAreaInfoOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChangeMapAreaInfoOp)
  return false;
#undef DO_
}

void ChangeMapAreaInfoOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChangeMapAreaInfoOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 map_area_id = 1;
  if (this->map_area_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->map_area_id(), output);
  }

  // bool is_open = 2;
  if (this->is_open() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_open(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChangeMapAreaInfoOp)
}

::google::protobuf::uint8* ChangeMapAreaInfoOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChangeMapAreaInfoOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 map_area_id = 1;
  if (this->map_area_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->map_area_id(), target);
  }

  // bool is_open = 2;
  if (this->is_open() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_open(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChangeMapAreaInfoOp)
  return target;
}

size_t ChangeMapAreaInfoOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChangeMapAreaInfoOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 map_area_id = 1;
  if (this->map_area_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->map_area_id());
  }

  // bool is_open = 2;
  if (this->is_open() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeMapAreaInfoOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChangeMapAreaInfoOp)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeMapAreaInfoOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeMapAreaInfoOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChangeMapAreaInfoOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChangeMapAreaInfoOp)
    MergeFrom(*source);
  }
}

void ChangeMapAreaInfoOp::MergeFrom(const ChangeMapAreaInfoOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChangeMapAreaInfoOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.map_area_id() != 0) {
    set_map_area_id(from.map_area_id());
  }
  if (from.is_open() != 0) {
    set_is_open(from.is_open());
  }
}

void ChangeMapAreaInfoOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChangeMapAreaInfoOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeMapAreaInfoOp::CopyFrom(const ChangeMapAreaInfoOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChangeMapAreaInfoOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeMapAreaInfoOp::IsInitialized() const {
  return true;
}

void ChangeMapAreaInfoOp::Swap(ChangeMapAreaInfoOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeMapAreaInfoOp::InternalSwap(ChangeMapAreaInfoOp* other) {
  using std::swap;
  swap(map_area_id_, other->map_area_id_);
  swap(is_open_, other->is_open_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeMapAreaInfoOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChangeMapAreaInfoOp

// uint32 map_area_id = 1;
void ChangeMapAreaInfoOp::clear_map_area_id() {
  map_area_id_ = 0u;
}
::google::protobuf::uint32 ChangeMapAreaInfoOp::map_area_id() const {
  // @@protoc_insertion_point(field_get:proto.ChangeMapAreaInfoOp.map_area_id)
  return map_area_id_;
}
void ChangeMapAreaInfoOp::set_map_area_id(::google::protobuf::uint32 value) {
  
  map_area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeMapAreaInfoOp.map_area_id)
}

// bool is_open = 2;
void ChangeMapAreaInfoOp::clear_is_open() {
  is_open_ = false;
}
bool ChangeMapAreaInfoOp::is_open() const {
  // @@protoc_insertion_point(field_get:proto.ChangeMapAreaInfoOp.is_open)
  return is_open_;
}
void ChangeMapAreaInfoOp::set_is_open(bool value) {
  
  is_open_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeMapAreaInfoOp.is_open)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetLevel1AreaExplorePointOp::kSceneIdFieldNumber;
const int SetLevel1AreaExplorePointOp::kLevel1AreaIdFieldNumber;
const int SetLevel1AreaExplorePointOp::kExplorePointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetLevel1AreaExplorePointOp::SetLevel1AreaExplorePointOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetLevel1AreaExplorePointOp)
}
SetLevel1AreaExplorePointOp::SetLevel1AreaExplorePointOp(const SetLevel1AreaExplorePointOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&explore_point_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(explore_point_));
  // @@protoc_insertion_point(copy_constructor:proto.SetLevel1AreaExplorePointOp)
}

void SetLevel1AreaExplorePointOp::SharedCtor() {
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&explore_point_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(explore_point_));
  _cached_size_ = 0;
}

SetLevel1AreaExplorePointOp::~SetLevel1AreaExplorePointOp() {
  // @@protoc_insertion_point(destructor:proto.SetLevel1AreaExplorePointOp)
  SharedDtor();
}

void SetLevel1AreaExplorePointOp::SharedDtor() {
}

void SetLevel1AreaExplorePointOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetLevel1AreaExplorePointOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetLevel1AreaExplorePointOp& SetLevel1AreaExplorePointOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetLevel1AreaExplorePointOp* SetLevel1AreaExplorePointOp::New(::google::protobuf::Arena* arena) const {
  SetLevel1AreaExplorePointOp* n = new SetLevel1AreaExplorePointOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetLevel1AreaExplorePointOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetLevel1AreaExplorePointOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&explore_point_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(explore_point_));
  _internal_metadata_.Clear();
}

bool SetLevel1AreaExplorePointOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetLevel1AreaExplorePointOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 level1_area_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level1_area_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 explore_point = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &explore_point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetLevel1AreaExplorePointOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetLevel1AreaExplorePointOp)
  return false;
#undef DO_
}

void SetLevel1AreaExplorePointOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetLevel1AreaExplorePointOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // uint32 level1_area_id = 2;
  if (this->level1_area_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level1_area_id(), output);
  }

  // uint32 explore_point = 3;
  if (this->explore_point() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->explore_point(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetLevel1AreaExplorePointOp)
}

::google::protobuf::uint8* SetLevel1AreaExplorePointOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetLevel1AreaExplorePointOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // uint32 level1_area_id = 2;
  if (this->level1_area_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level1_area_id(), target);
  }

  // uint32 explore_point = 3;
  if (this->explore_point() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->explore_point(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetLevel1AreaExplorePointOp)
  return target;
}

size_t SetLevel1AreaExplorePointOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetLevel1AreaExplorePointOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 level1_area_id = 2;
  if (this->level1_area_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level1_area_id());
  }

  // uint32 explore_point = 3;
  if (this->explore_point() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->explore_point());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetLevel1AreaExplorePointOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetLevel1AreaExplorePointOp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLevel1AreaExplorePointOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetLevel1AreaExplorePointOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetLevel1AreaExplorePointOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetLevel1AreaExplorePointOp)
    MergeFrom(*source);
  }
}

void SetLevel1AreaExplorePointOp::MergeFrom(const SetLevel1AreaExplorePointOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetLevel1AreaExplorePointOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.level1_area_id() != 0) {
    set_level1_area_id(from.level1_area_id());
  }
  if (from.explore_point() != 0) {
    set_explore_point(from.explore_point());
  }
}

void SetLevel1AreaExplorePointOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetLevel1AreaExplorePointOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLevel1AreaExplorePointOp::CopyFrom(const SetLevel1AreaExplorePointOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetLevel1AreaExplorePointOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLevel1AreaExplorePointOp::IsInitialized() const {
  return true;
}

void SetLevel1AreaExplorePointOp::Swap(SetLevel1AreaExplorePointOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetLevel1AreaExplorePointOp::InternalSwap(SetLevel1AreaExplorePointOp* other) {
  using std::swap;
  swap(scene_id_, other->scene_id_);
  swap(level1_area_id_, other->level1_area_id_);
  swap(explore_point_, other->explore_point_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetLevel1AreaExplorePointOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetLevel1AreaExplorePointOp

// uint32 scene_id = 1;
void SetLevel1AreaExplorePointOp::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 SetLevel1AreaExplorePointOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.SetLevel1AreaExplorePointOp.scene_id)
  return scene_id_;
}
void SetLevel1AreaExplorePointOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetLevel1AreaExplorePointOp.scene_id)
}

// uint32 level1_area_id = 2;
void SetLevel1AreaExplorePointOp::clear_level1_area_id() {
  level1_area_id_ = 0u;
}
::google::protobuf::uint32 SetLevel1AreaExplorePointOp::level1_area_id() const {
  // @@protoc_insertion_point(field_get:proto.SetLevel1AreaExplorePointOp.level1_area_id)
  return level1_area_id_;
}
void SetLevel1AreaExplorePointOp::set_level1_area_id(::google::protobuf::uint32 value) {
  
  level1_area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetLevel1AreaExplorePointOp.level1_area_id)
}

// uint32 explore_point = 3;
void SetLevel1AreaExplorePointOp::clear_explore_point() {
  explore_point_ = 0u;
}
::google::protobuf::uint32 SetLevel1AreaExplorePointOp::explore_point() const {
  // @@protoc_insertion_point(field_get:proto.SetLevel1AreaExplorePointOp.explore_point)
  return explore_point_;
}
void SetLevel1AreaExplorePointOp::set_explore_point(::google::protobuf::uint32 value) {
  
  explore_point_ = value;
  // @@protoc_insertion_point(field_set:proto.SetLevel1AreaExplorePointOp.explore_point)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetCodexOpenOrCloseOp::kCodexTypeFieldNumber;
const int SetCodexOpenOrCloseOp::kCodexIdFieldNumber;
const int SetCodexOpenOrCloseOp::kIsOpenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetCodexOpenOrCloseOp::SetCodexOpenOrCloseOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetCodexOpenOrCloseOp)
}
SetCodexOpenOrCloseOp::SetCodexOpenOrCloseOp(const SetCodexOpenOrCloseOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&codex_type_, &from.codex_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_open_) -
    reinterpret_cast<char*>(&codex_type_)) + sizeof(is_open_));
  // @@protoc_insertion_point(copy_constructor:proto.SetCodexOpenOrCloseOp)
}

void SetCodexOpenOrCloseOp::SharedCtor() {
  ::memset(&codex_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_open_) -
      reinterpret_cast<char*>(&codex_type_)) + sizeof(is_open_));
  _cached_size_ = 0;
}

SetCodexOpenOrCloseOp::~SetCodexOpenOrCloseOp() {
  // @@protoc_insertion_point(destructor:proto.SetCodexOpenOrCloseOp)
  SharedDtor();
}

void SetCodexOpenOrCloseOp::SharedDtor() {
}

void SetCodexOpenOrCloseOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetCodexOpenOrCloseOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetCodexOpenOrCloseOp& SetCodexOpenOrCloseOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetCodexOpenOrCloseOp* SetCodexOpenOrCloseOp::New(::google::protobuf::Arena* arena) const {
  SetCodexOpenOrCloseOp* n = new SetCodexOpenOrCloseOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetCodexOpenOrCloseOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetCodexOpenOrCloseOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&codex_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_open_) -
      reinterpret_cast<char*>(&codex_type_)) + sizeof(is_open_));
  _internal_metadata_.Clear();
}

bool SetCodexOpenOrCloseOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetCodexOpenOrCloseOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 codex_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &codex_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 codex_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &codex_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_open = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_open_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetCodexOpenOrCloseOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetCodexOpenOrCloseOp)
  return false;
#undef DO_
}

void SetCodexOpenOrCloseOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetCodexOpenOrCloseOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 codex_type = 1;
  if (this->codex_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->codex_type(), output);
  }

  // uint32 codex_id = 2;
  if (this->codex_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->codex_id(), output);
  }

  // bool is_open = 3;
  if (this->is_open() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_open(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetCodexOpenOrCloseOp)
}

::google::protobuf::uint8* SetCodexOpenOrCloseOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetCodexOpenOrCloseOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 codex_type = 1;
  if (this->codex_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->codex_type(), target);
  }

  // uint32 codex_id = 2;
  if (this->codex_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->codex_id(), target);
  }

  // bool is_open = 3;
  if (this->is_open() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_open(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetCodexOpenOrCloseOp)
  return target;
}

size_t SetCodexOpenOrCloseOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetCodexOpenOrCloseOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 codex_type = 1;
  if (this->codex_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->codex_type());
  }

  // uint32 codex_id = 2;
  if (this->codex_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->codex_id());
  }

  // bool is_open = 3;
  if (this->is_open() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetCodexOpenOrCloseOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetCodexOpenOrCloseOp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetCodexOpenOrCloseOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetCodexOpenOrCloseOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetCodexOpenOrCloseOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetCodexOpenOrCloseOp)
    MergeFrom(*source);
  }
}

void SetCodexOpenOrCloseOp::MergeFrom(const SetCodexOpenOrCloseOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetCodexOpenOrCloseOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.codex_type() != 0) {
    set_codex_type(from.codex_type());
  }
  if (from.codex_id() != 0) {
    set_codex_id(from.codex_id());
  }
  if (from.is_open() != 0) {
    set_is_open(from.is_open());
  }
}

void SetCodexOpenOrCloseOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetCodexOpenOrCloseOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetCodexOpenOrCloseOp::CopyFrom(const SetCodexOpenOrCloseOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetCodexOpenOrCloseOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetCodexOpenOrCloseOp::IsInitialized() const {
  return true;
}

void SetCodexOpenOrCloseOp::Swap(SetCodexOpenOrCloseOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetCodexOpenOrCloseOp::InternalSwap(SetCodexOpenOrCloseOp* other) {
  using std::swap;
  swap(codex_type_, other->codex_type_);
  swap(codex_id_, other->codex_id_);
  swap(is_open_, other->is_open_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetCodexOpenOrCloseOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetCodexOpenOrCloseOp

// uint32 codex_type = 1;
void SetCodexOpenOrCloseOp::clear_codex_type() {
  codex_type_ = 0u;
}
::google::protobuf::uint32 SetCodexOpenOrCloseOp::codex_type() const {
  // @@protoc_insertion_point(field_get:proto.SetCodexOpenOrCloseOp.codex_type)
  return codex_type_;
}
void SetCodexOpenOrCloseOp::set_codex_type(::google::protobuf::uint32 value) {
  
  codex_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SetCodexOpenOrCloseOp.codex_type)
}

// uint32 codex_id = 2;
void SetCodexOpenOrCloseOp::clear_codex_id() {
  codex_id_ = 0u;
}
::google::protobuf::uint32 SetCodexOpenOrCloseOp::codex_id() const {
  // @@protoc_insertion_point(field_get:proto.SetCodexOpenOrCloseOp.codex_id)
  return codex_id_;
}
void SetCodexOpenOrCloseOp::set_codex_id(::google::protobuf::uint32 value) {
  
  codex_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetCodexOpenOrCloseOp.codex_id)
}

// bool is_open = 3;
void SetCodexOpenOrCloseOp::clear_is_open() {
  is_open_ = false;
}
bool SetCodexOpenOrCloseOp::is_open() const {
  // @@protoc_insertion_point(field_get:proto.SetCodexOpenOrCloseOp.is_open)
  return is_open_;
}
void SetCodexOpenOrCloseOp::set_is_open(bool value) {
  
  is_open_ = value;
  // @@protoc_insertion_point(field_set:proto.SetCodexOpenOrCloseOp.is_open)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupLinkOp::kOpTypeFieldNumber;
const int GroupLinkOp::kGroupBundleIdFieldNumber;
const int GroupLinkOp::kActivityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupLinkOp::GroupLinkOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GroupLinkOp)
}
GroupLinkOp::GroupLinkOp(const GroupLinkOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&op_type_, &from.op_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&activity_id_) -
    reinterpret_cast<char*>(&op_type_)) + sizeof(activity_id_));
  // @@protoc_insertion_point(copy_constructor:proto.GroupLinkOp)
}

void GroupLinkOp::SharedCtor() {
  ::memset(&op_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&activity_id_) -
      reinterpret_cast<char*>(&op_type_)) + sizeof(activity_id_));
  _cached_size_ = 0;
}

GroupLinkOp::~GroupLinkOp() {
  // @@protoc_insertion_point(destructor:proto.GroupLinkOp)
  SharedDtor();
}

void GroupLinkOp::SharedDtor() {
}

void GroupLinkOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroupLinkOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GroupLinkOp& GroupLinkOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

GroupLinkOp* GroupLinkOp::New(::google::protobuf::Arena* arena) const {
  GroupLinkOp* n = new GroupLinkOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GroupLinkOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GroupLinkOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&op_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&activity_id_) -
      reinterpret_cast<char*>(&op_type_)) + sizeof(activity_id_));
  _internal_metadata_.Clear();
}

bool GroupLinkOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GroupLinkOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.GroupLinkOpType op_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::proto::GroupLinkOpType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_bundle_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_bundle_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 activity_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &activity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GroupLinkOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GroupLinkOp)
  return false;
#undef DO_
}

void GroupLinkOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GroupLinkOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.GroupLinkOpType op_type = 1;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->op_type(), output);
  }

  // uint32 group_bundle_id = 2;
  if (this->group_bundle_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_bundle_id(), output);
  }

  // uint32 activity_id = 3;
  if (this->activity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->activity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GroupLinkOp)
}

::google::protobuf::uint8* GroupLinkOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GroupLinkOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.GroupLinkOpType op_type = 1;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->op_type(), target);
  }

  // uint32 group_bundle_id = 2;
  if (this->group_bundle_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->group_bundle_id(), target);
  }

  // uint32 activity_id = 3;
  if (this->activity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->activity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GroupLinkOp)
  return target;
}

size_t GroupLinkOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GroupLinkOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.GroupLinkOpType op_type = 1;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  // uint32 group_bundle_id = 2;
  if (this->group_bundle_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_bundle_id());
  }

  // uint32 activity_id = 3;
  if (this->activity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->activity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroupLinkOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GroupLinkOp)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupLinkOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupLinkOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GroupLinkOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GroupLinkOp)
    MergeFrom(*source);
  }
}

void GroupLinkOp::MergeFrom(const GroupLinkOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GroupLinkOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
  if (from.group_bundle_id() != 0) {
    set_group_bundle_id(from.group_bundle_id());
  }
  if (from.activity_id() != 0) {
    set_activity_id(from.activity_id());
  }
}

void GroupLinkOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GroupLinkOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupLinkOp::CopyFrom(const GroupLinkOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GroupLinkOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupLinkOp::IsInitialized() const {
  return true;
}

void GroupLinkOp::Swap(GroupLinkOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupLinkOp::InternalSwap(GroupLinkOp* other) {
  using std::swap;
  swap(op_type_, other->op_type_);
  swap(group_bundle_id_, other->group_bundle_id_);
  swap(activity_id_, other->activity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GroupLinkOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GroupLinkOp

// .proto.GroupLinkOpType op_type = 1;
void GroupLinkOp::clear_op_type() {
  op_type_ = 0;
}
::proto::GroupLinkOpType GroupLinkOp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.GroupLinkOp.op_type)
  return static_cast< ::proto::GroupLinkOpType >(op_type_);
}
void GroupLinkOp::set_op_type(::proto::GroupLinkOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupLinkOp.op_type)
}

// uint32 group_bundle_id = 2;
void GroupLinkOp::clear_group_bundle_id() {
  group_bundle_id_ = 0u;
}
::google::protobuf::uint32 GroupLinkOp::group_bundle_id() const {
  // @@protoc_insertion_point(field_get:proto.GroupLinkOp.group_bundle_id)
  return group_bundle_id_;
}
void GroupLinkOp::set_group_bundle_id(::google::protobuf::uint32 value) {
  
  group_bundle_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupLinkOp.group_bundle_id)
}

// uint32 activity_id = 3;
void GroupLinkOp::clear_activity_id() {
  activity_id_ = 0u;
}
::google::protobuf::uint32 GroupLinkOp::activity_id() const {
  // @@protoc_insertion_point(field_get:proto.GroupLinkOp.activity_id)
  return activity_id_;
}
void GroupLinkOp::set_activity_id(::google::protobuf::uint32 value) {
  
  activity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupLinkOp.activity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetWatcherCompRecordValueOp::kMaxCriticalDamageFieldNumber;
const int SetWatcherCompRecordValueOp::kMaxFlyMapDistanceFieldNumber;
const int SetWatcherCompRecordValueOp::kMaxFlyTimeFieldNumber;
const int SetWatcherCompRecordValueOp::kMaxDashTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetWatcherCompRecordValueOp::SetWatcherCompRecordValueOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetWatcherCompRecordValueOp)
}
SetWatcherCompRecordValueOp::SetWatcherCompRecordValueOp(const SetWatcherCompRecordValueOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_optional_max_critical_damage();
  switch (from.optional_max_critical_damage_case()) {
    case kMaxCriticalDamage: {
      set_max_critical_damage(from.max_critical_damage());
      break;
    }
    case OPTIONAL_MAX_CRITICAL_DAMAGE_NOT_SET: {
      break;
    }
  }
  clear_has_optional_max_fly_map_distance();
  switch (from.optional_max_fly_map_distance_case()) {
    case kMaxFlyMapDistance: {
      set_max_fly_map_distance(from.max_fly_map_distance());
      break;
    }
    case OPTIONAL_MAX_FLY_MAP_DISTANCE_NOT_SET: {
      break;
    }
  }
  clear_has_optional_max_fly_time();
  switch (from.optional_max_fly_time_case()) {
    case kMaxFlyTime: {
      set_max_fly_time(from.max_fly_time());
      break;
    }
    case OPTIONAL_MAX_FLY_TIME_NOT_SET: {
      break;
    }
  }
  clear_has_optional_max_dash_time();
  switch (from.optional_max_dash_time_case()) {
    case kMaxDashTime: {
      set_max_dash_time(from.max_dash_time());
      break;
    }
    case OPTIONAL_MAX_DASH_TIME_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.SetWatcherCompRecordValueOp)
}

void SetWatcherCompRecordValueOp::SharedCtor() {
  clear_has_optional_max_critical_damage();
  clear_has_optional_max_fly_map_distance();
  clear_has_optional_max_fly_time();
  clear_has_optional_max_dash_time();
  _cached_size_ = 0;
}

SetWatcherCompRecordValueOp::~SetWatcherCompRecordValueOp() {
  // @@protoc_insertion_point(destructor:proto.SetWatcherCompRecordValueOp)
  SharedDtor();
}

void SetWatcherCompRecordValueOp::SharedDtor() {
  if (has_optional_max_critical_damage()) {
    clear_optional_max_critical_damage();
  }
  if (has_optional_max_fly_map_distance()) {
    clear_optional_max_fly_map_distance();
  }
  if (has_optional_max_fly_time()) {
    clear_optional_max_fly_time();
  }
  if (has_optional_max_dash_time()) {
    clear_optional_max_dash_time();
  }
}

void SetWatcherCompRecordValueOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetWatcherCompRecordValueOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetWatcherCompRecordValueOp& SetWatcherCompRecordValueOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetWatcherCompRecordValueOp* SetWatcherCompRecordValueOp::New(::google::protobuf::Arena* arena) const {
  SetWatcherCompRecordValueOp* n = new SetWatcherCompRecordValueOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetWatcherCompRecordValueOp::clear_optional_max_critical_damage() {
// @@protoc_insertion_point(one_of_clear_start:proto.SetWatcherCompRecordValueOp)
  switch (optional_max_critical_damage_case()) {
    case kMaxCriticalDamage: {
      // No need to clear
      break;
    }
    case OPTIONAL_MAX_CRITICAL_DAMAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OPTIONAL_MAX_CRITICAL_DAMAGE_NOT_SET;
}

void SetWatcherCompRecordValueOp::clear_optional_max_fly_map_distance() {
// @@protoc_insertion_point(one_of_clear_start:proto.SetWatcherCompRecordValueOp)
  switch (optional_max_fly_map_distance_case()) {
    case kMaxFlyMapDistance: {
      // No need to clear
      break;
    }
    case OPTIONAL_MAX_FLY_MAP_DISTANCE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = OPTIONAL_MAX_FLY_MAP_DISTANCE_NOT_SET;
}

void SetWatcherCompRecordValueOp::clear_optional_max_fly_time() {
// @@protoc_insertion_point(one_of_clear_start:proto.SetWatcherCompRecordValueOp)
  switch (optional_max_fly_time_case()) {
    case kMaxFlyTime: {
      // No need to clear
      break;
    }
    case OPTIONAL_MAX_FLY_TIME_NOT_SET: {
      break;
    }
  }
  _oneof_case_[2] = OPTIONAL_MAX_FLY_TIME_NOT_SET;
}

void SetWatcherCompRecordValueOp::clear_optional_max_dash_time() {
// @@protoc_insertion_point(one_of_clear_start:proto.SetWatcherCompRecordValueOp)
  switch (optional_max_dash_time_case()) {
    case kMaxDashTime: {
      // No need to clear
      break;
    }
    case OPTIONAL_MAX_DASH_TIME_NOT_SET: {
      break;
    }
  }
  _oneof_case_[3] = OPTIONAL_MAX_DASH_TIME_NOT_SET;
}


void SetWatcherCompRecordValueOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetWatcherCompRecordValueOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_optional_max_critical_damage();
  clear_optional_max_fly_map_distance();
  clear_optional_max_fly_time();
  clear_optional_max_dash_time();
  _internal_metadata_.Clear();
}

bool SetWatcherCompRecordValueOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetWatcherCompRecordValueOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float max_critical_damage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          clear_optional_max_critical_damage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &optional_max_critical_damage_.max_critical_damage_)));
          set_has_max_critical_damage();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float max_fly_map_distance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          clear_optional_max_fly_map_distance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &optional_max_fly_map_distance_.max_fly_map_distance_)));
          set_has_max_fly_map_distance();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float max_fly_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          clear_optional_max_fly_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &optional_max_fly_time_.max_fly_time_)));
          set_has_max_fly_time();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float max_dash_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          clear_optional_max_dash_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &optional_max_dash_time_.max_dash_time_)));
          set_has_max_dash_time();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetWatcherCompRecordValueOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetWatcherCompRecordValueOp)
  return false;
#undef DO_
}

void SetWatcherCompRecordValueOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetWatcherCompRecordValueOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float max_critical_damage = 1;
  if (has_max_critical_damage()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->max_critical_damage(), output);
  }

  // float max_fly_map_distance = 2;
  if (has_max_fly_map_distance()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->max_fly_map_distance(), output);
  }

  // float max_fly_time = 3;
  if (has_max_fly_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->max_fly_time(), output);
  }

  // float max_dash_time = 4;
  if (has_max_dash_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->max_dash_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetWatcherCompRecordValueOp)
}

::google::protobuf::uint8* SetWatcherCompRecordValueOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetWatcherCompRecordValueOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float max_critical_damage = 1;
  if (has_max_critical_damage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->max_critical_damage(), target);
  }

  // float max_fly_map_distance = 2;
  if (has_max_fly_map_distance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->max_fly_map_distance(), target);
  }

  // float max_fly_time = 3;
  if (has_max_fly_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->max_fly_time(), target);
  }

  // float max_dash_time = 4;
  if (has_max_dash_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->max_dash_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetWatcherCompRecordValueOp)
  return target;
}

size_t SetWatcherCompRecordValueOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetWatcherCompRecordValueOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (optional_max_critical_damage_case()) {
    // float max_critical_damage = 1;
    case kMaxCriticalDamage: {
      total_size += 1 + 4;
      break;
    }
    case OPTIONAL_MAX_CRITICAL_DAMAGE_NOT_SET: {
      break;
    }
  }
  switch (optional_max_fly_map_distance_case()) {
    // float max_fly_map_distance = 2;
    case kMaxFlyMapDistance: {
      total_size += 1 + 4;
      break;
    }
    case OPTIONAL_MAX_FLY_MAP_DISTANCE_NOT_SET: {
      break;
    }
  }
  switch (optional_max_fly_time_case()) {
    // float max_fly_time = 3;
    case kMaxFlyTime: {
      total_size += 1 + 4;
      break;
    }
    case OPTIONAL_MAX_FLY_TIME_NOT_SET: {
      break;
    }
  }
  switch (optional_max_dash_time_case()) {
    // float max_dash_time = 4;
    case kMaxDashTime: {
      total_size += 1 + 4;
      break;
    }
    case OPTIONAL_MAX_DASH_TIME_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetWatcherCompRecordValueOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetWatcherCompRecordValueOp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetWatcherCompRecordValueOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetWatcherCompRecordValueOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetWatcherCompRecordValueOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetWatcherCompRecordValueOp)
    MergeFrom(*source);
  }
}

void SetWatcherCompRecordValueOp::MergeFrom(const SetWatcherCompRecordValueOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetWatcherCompRecordValueOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.optional_max_critical_damage_case()) {
    case kMaxCriticalDamage: {
      set_max_critical_damage(from.max_critical_damage());
      break;
    }
    case OPTIONAL_MAX_CRITICAL_DAMAGE_NOT_SET: {
      break;
    }
  }
  switch (from.optional_max_fly_map_distance_case()) {
    case kMaxFlyMapDistance: {
      set_max_fly_map_distance(from.max_fly_map_distance());
      break;
    }
    case OPTIONAL_MAX_FLY_MAP_DISTANCE_NOT_SET: {
      break;
    }
  }
  switch (from.optional_max_fly_time_case()) {
    case kMaxFlyTime: {
      set_max_fly_time(from.max_fly_time());
      break;
    }
    case OPTIONAL_MAX_FLY_TIME_NOT_SET: {
      break;
    }
  }
  switch (from.optional_max_dash_time_case()) {
    case kMaxDashTime: {
      set_max_dash_time(from.max_dash_time());
      break;
    }
    case OPTIONAL_MAX_DASH_TIME_NOT_SET: {
      break;
    }
  }
}

void SetWatcherCompRecordValueOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetWatcherCompRecordValueOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetWatcherCompRecordValueOp::CopyFrom(const SetWatcherCompRecordValueOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetWatcherCompRecordValueOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetWatcherCompRecordValueOp::IsInitialized() const {
  return true;
}

void SetWatcherCompRecordValueOp::Swap(SetWatcherCompRecordValueOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetWatcherCompRecordValueOp::InternalSwap(SetWatcherCompRecordValueOp* other) {
  using std::swap;
  swap(optional_max_critical_damage_, other->optional_max_critical_damage_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(optional_max_fly_map_distance_, other->optional_max_fly_map_distance_);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
  swap(optional_max_fly_time_, other->optional_max_fly_time_);
  swap(_oneof_case_[2], other->_oneof_case_[2]);
  swap(optional_max_dash_time_, other->optional_max_dash_time_);
  swap(_oneof_case_[3], other->_oneof_case_[3]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetWatcherCompRecordValueOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetWatcherCompRecordValueOp

// float max_critical_damage = 1;
bool SetWatcherCompRecordValueOp::has_max_critical_damage() const {
  return optional_max_critical_damage_case() == kMaxCriticalDamage;
}
void SetWatcherCompRecordValueOp::set_has_max_critical_damage() {
  _oneof_case_[0] = kMaxCriticalDamage;
}
void SetWatcherCompRecordValueOp::clear_max_critical_damage() {
  if (has_max_critical_damage()) {
    optional_max_critical_damage_.max_critical_damage_ = 0;
    clear_has_optional_max_critical_damage();
  }
}
float SetWatcherCompRecordValueOp::max_critical_damage() const {
  // @@protoc_insertion_point(field_get:proto.SetWatcherCompRecordValueOp.max_critical_damage)
  if (has_max_critical_damage()) {
    return optional_max_critical_damage_.max_critical_damage_;
  }
  return 0;
}
void SetWatcherCompRecordValueOp::set_max_critical_damage(float value) {
  if (!has_max_critical_damage()) {
    clear_optional_max_critical_damage();
    set_has_max_critical_damage();
  }
  optional_max_critical_damage_.max_critical_damage_ = value;
  // @@protoc_insertion_point(field_set:proto.SetWatcherCompRecordValueOp.max_critical_damage)
}

// float max_fly_map_distance = 2;
bool SetWatcherCompRecordValueOp::has_max_fly_map_distance() const {
  return optional_max_fly_map_distance_case() == kMaxFlyMapDistance;
}
void SetWatcherCompRecordValueOp::set_has_max_fly_map_distance() {
  _oneof_case_[1] = kMaxFlyMapDistance;
}
void SetWatcherCompRecordValueOp::clear_max_fly_map_distance() {
  if (has_max_fly_map_distance()) {
    optional_max_fly_map_distance_.max_fly_map_distance_ = 0;
    clear_has_optional_max_fly_map_distance();
  }
}
float SetWatcherCompRecordValueOp::max_fly_map_distance() const {
  // @@protoc_insertion_point(field_get:proto.SetWatcherCompRecordValueOp.max_fly_map_distance)
  if (has_max_fly_map_distance()) {
    return optional_max_fly_map_distance_.max_fly_map_distance_;
  }
  return 0;
}
void SetWatcherCompRecordValueOp::set_max_fly_map_distance(float value) {
  if (!has_max_fly_map_distance()) {
    clear_optional_max_fly_map_distance();
    set_has_max_fly_map_distance();
  }
  optional_max_fly_map_distance_.max_fly_map_distance_ = value;
  // @@protoc_insertion_point(field_set:proto.SetWatcherCompRecordValueOp.max_fly_map_distance)
}

// float max_fly_time = 3;
bool SetWatcherCompRecordValueOp::has_max_fly_time() const {
  return optional_max_fly_time_case() == kMaxFlyTime;
}
void SetWatcherCompRecordValueOp::set_has_max_fly_time() {
  _oneof_case_[2] = kMaxFlyTime;
}
void SetWatcherCompRecordValueOp::clear_max_fly_time() {
  if (has_max_fly_time()) {
    optional_max_fly_time_.max_fly_time_ = 0;
    clear_has_optional_max_fly_time();
  }
}
float SetWatcherCompRecordValueOp::max_fly_time() const {
  // @@protoc_insertion_point(field_get:proto.SetWatcherCompRecordValueOp.max_fly_time)
  if (has_max_fly_time()) {
    return optional_max_fly_time_.max_fly_time_;
  }
  return 0;
}
void SetWatcherCompRecordValueOp::set_max_fly_time(float value) {
  if (!has_max_fly_time()) {
    clear_optional_max_fly_time();
    set_has_max_fly_time();
  }
  optional_max_fly_time_.max_fly_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SetWatcherCompRecordValueOp.max_fly_time)
}

// float max_dash_time = 4;
bool SetWatcherCompRecordValueOp::has_max_dash_time() const {
  return optional_max_dash_time_case() == kMaxDashTime;
}
void SetWatcherCompRecordValueOp::set_has_max_dash_time() {
  _oneof_case_[3] = kMaxDashTime;
}
void SetWatcherCompRecordValueOp::clear_max_dash_time() {
  if (has_max_dash_time()) {
    optional_max_dash_time_.max_dash_time_ = 0;
    clear_has_optional_max_dash_time();
  }
}
float SetWatcherCompRecordValueOp::max_dash_time() const {
  // @@protoc_insertion_point(field_get:proto.SetWatcherCompRecordValueOp.max_dash_time)
  if (has_max_dash_time()) {
    return optional_max_dash_time_.max_dash_time_;
  }
  return 0;
}
void SetWatcherCompRecordValueOp::set_max_dash_time(float value) {
  if (!has_max_dash_time()) {
    clear_optional_max_dash_time();
    set_has_max_dash_time();
  }
  optional_max_dash_time_.max_dash_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SetWatcherCompRecordValueOp.max_dash_time)
}

bool SetWatcherCompRecordValueOp::has_optional_max_critical_damage() const {
  return optional_max_critical_damage_case() != OPTIONAL_MAX_CRITICAL_DAMAGE_NOT_SET;
}
void SetWatcherCompRecordValueOp::clear_has_optional_max_critical_damage() {
  _oneof_case_[0] = OPTIONAL_MAX_CRITICAL_DAMAGE_NOT_SET;
}
bool SetWatcherCompRecordValueOp::has_optional_max_fly_map_distance() const {
  return optional_max_fly_map_distance_case() != OPTIONAL_MAX_FLY_MAP_DISTANCE_NOT_SET;
}
void SetWatcherCompRecordValueOp::clear_has_optional_max_fly_map_distance() {
  _oneof_case_[1] = OPTIONAL_MAX_FLY_MAP_DISTANCE_NOT_SET;
}
bool SetWatcherCompRecordValueOp::has_optional_max_fly_time() const {
  return optional_max_fly_time_case() != OPTIONAL_MAX_FLY_TIME_NOT_SET;
}
void SetWatcherCompRecordValueOp::clear_has_optional_max_fly_time() {
  _oneof_case_[2] = OPTIONAL_MAX_FLY_TIME_NOT_SET;
}
bool SetWatcherCompRecordValueOp::has_optional_max_dash_time() const {
  return optional_max_dash_time_case() != OPTIONAL_MAX_DASH_TIME_NOT_SET;
}
void SetWatcherCompRecordValueOp::clear_has_optional_max_dash_time() {
  _oneof_case_[3] = OPTIONAL_MAX_DASH_TIME_NOT_SET;
}
SetWatcherCompRecordValueOp::OptionalMaxCriticalDamageCase SetWatcherCompRecordValueOp::optional_max_critical_damage_case() const {
  return SetWatcherCompRecordValueOp::OptionalMaxCriticalDamageCase(_oneof_case_[0]);
}
SetWatcherCompRecordValueOp::OptionalMaxFlyMapDistanceCase SetWatcherCompRecordValueOp::optional_max_fly_map_distance_case() const {
  return SetWatcherCompRecordValueOp::OptionalMaxFlyMapDistanceCase(_oneof_case_[1]);
}
SetWatcherCompRecordValueOp::OptionalMaxFlyTimeCase SetWatcherCompRecordValueOp::optional_max_fly_time_case() const {
  return SetWatcherCompRecordValueOp::OptionalMaxFlyTimeCase(_oneof_case_[2]);
}
SetWatcherCompRecordValueOp::OptionalMaxDashTimeCase SetWatcherCompRecordValueOp::optional_max_dash_time_case() const {
  return SetWatcherCompRecordValueOp::OptionalMaxDashTimeCase(_oneof_case_[3]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddFriendOp::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddFriendOp::AddFriendOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddFriendOp)
}
AddFriendOp::AddFriendOp(const AddFriendOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.AddFriendOp)
}

void AddFriendOp::SharedCtor() {
  target_uid_ = 0u;
  _cached_size_ = 0;
}

AddFriendOp::~AddFriendOp() {
  // @@protoc_insertion_point(destructor:proto.AddFriendOp)
  SharedDtor();
}

void AddFriendOp::SharedDtor() {
}

void AddFriendOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddFriendOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddFriendOp& AddFriendOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddFriendOp* AddFriendOp::New(::google::protobuf::Arena* arena) const {
  AddFriendOp* n = new AddFriendOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddFriendOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddFriendOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool AddFriendOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddFriendOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddFriendOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddFriendOp)
  return false;
#undef DO_
}

void AddFriendOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddFriendOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddFriendOp)
}

::google::protobuf::uint8* AddFriendOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddFriendOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddFriendOp)
  return target;
}

size_t AddFriendOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddFriendOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddFriendOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddFriendOp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddFriendOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddFriendOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddFriendOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddFriendOp)
    MergeFrom(*source);
  }
}

void AddFriendOp::MergeFrom(const AddFriendOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddFriendOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void AddFriendOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddFriendOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddFriendOp::CopyFrom(const AddFriendOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddFriendOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddFriendOp::IsInitialized() const {
  return true;
}

void AddFriendOp::Swap(AddFriendOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddFriendOp::InternalSwap(AddFriendOp* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddFriendOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddFriendOp

// uint32 target_uid = 1;
void AddFriendOp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 AddFriendOp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.AddFriendOp.target_uid)
  return target_uid_;
}
void AddFriendOp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.AddFriendOp.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelFriendOp::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelFriendOp::DelFriendOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DelFriendOp)
}
DelFriendOp::DelFriendOp(const DelFriendOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.DelFriendOp)
}

void DelFriendOp::SharedCtor() {
  target_uid_ = 0u;
  _cached_size_ = 0;
}

DelFriendOp::~DelFriendOp() {
  // @@protoc_insertion_point(destructor:proto.DelFriendOp)
  SharedDtor();
}

void DelFriendOp::SharedDtor() {
}

void DelFriendOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelFriendOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelFriendOp& DelFriendOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelFriendOp* DelFriendOp::New(::google::protobuf::Arena* arena) const {
  DelFriendOp* n = new DelFriendOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelFriendOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DelFriendOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool DelFriendOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DelFriendOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DelFriendOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DelFriendOp)
  return false;
#undef DO_
}

void DelFriendOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DelFriendOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DelFriendOp)
}

::google::protobuf::uint8* DelFriendOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DelFriendOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DelFriendOp)
  return target;
}

size_t DelFriendOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DelFriendOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelFriendOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DelFriendOp)
  GOOGLE_DCHECK_NE(&from, this);
  const DelFriendOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelFriendOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DelFriendOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DelFriendOp)
    MergeFrom(*source);
  }
}

void DelFriendOp::MergeFrom(const DelFriendOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DelFriendOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void DelFriendOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DelFriendOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelFriendOp::CopyFrom(const DelFriendOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DelFriendOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelFriendOp::IsInitialized() const {
  return true;
}

void DelFriendOp::Swap(DelFriendOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelFriendOp::InternalSwap(DelFriendOp* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelFriendOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelFriendOp

// uint32 target_uid = 1;
void DelFriendOp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 DelFriendOp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.DelFriendOp.target_uid)
  return target_uid_;
}
void DelFriendOp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.DelFriendOp.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddFriendAskOp::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddFriendAskOp::AddFriendAskOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddFriendAskOp)
}
AddFriendAskOp::AddFriendAskOp(const AddFriendAskOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.AddFriendAskOp)
}

void AddFriendAskOp::SharedCtor() {
  target_uid_ = 0u;
  _cached_size_ = 0;
}

AddFriendAskOp::~AddFriendAskOp() {
  // @@protoc_insertion_point(destructor:proto.AddFriendAskOp)
  SharedDtor();
}

void AddFriendAskOp::SharedDtor() {
}

void AddFriendAskOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddFriendAskOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddFriendAskOp& AddFriendAskOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddFriendAskOp* AddFriendAskOp::New(::google::protobuf::Arena* arena) const {
  AddFriendAskOp* n = new AddFriendAskOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddFriendAskOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddFriendAskOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool AddFriendAskOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddFriendAskOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddFriendAskOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddFriendAskOp)
  return false;
#undef DO_
}

void AddFriendAskOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddFriendAskOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddFriendAskOp)
}

::google::protobuf::uint8* AddFriendAskOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddFriendAskOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddFriendAskOp)
  return target;
}

size_t AddFriendAskOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddFriendAskOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddFriendAskOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddFriendAskOp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddFriendAskOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddFriendAskOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddFriendAskOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddFriendAskOp)
    MergeFrom(*source);
  }
}

void AddFriendAskOp::MergeFrom(const AddFriendAskOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddFriendAskOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void AddFriendAskOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddFriendAskOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddFriendAskOp::CopyFrom(const AddFriendAskOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddFriendAskOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddFriendAskOp::IsInitialized() const {
  return true;
}

void AddFriendAskOp::Swap(AddFriendAskOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddFriendAskOp::InternalSwap(AddFriendAskOp* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddFriendAskOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddFriendAskOp

// uint32 target_uid = 1;
void AddFriendAskOp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 AddFriendAskOp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.AddFriendAskOp.target_uid)
  return target_uid_;
}
void AddFriendAskOp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.AddFriendAskOp.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelFriendAskOp::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelFriendAskOp::DelFriendAskOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DelFriendAskOp)
}
DelFriendAskOp::DelFriendAskOp(const DelFriendAskOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.DelFriendAskOp)
}

void DelFriendAskOp::SharedCtor() {
  target_uid_ = 0u;
  _cached_size_ = 0;
}

DelFriendAskOp::~DelFriendAskOp() {
  // @@protoc_insertion_point(destructor:proto.DelFriendAskOp)
  SharedDtor();
}

void DelFriendAskOp::SharedDtor() {
}

void DelFriendAskOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelFriendAskOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelFriendAskOp& DelFriendAskOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelFriendAskOp* DelFriendAskOp::New(::google::protobuf::Arena* arena) const {
  DelFriendAskOp* n = new DelFriendAskOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelFriendAskOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DelFriendAskOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool DelFriendAskOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DelFriendAskOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DelFriendAskOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DelFriendAskOp)
  return false;
#undef DO_
}

void DelFriendAskOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DelFriendAskOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DelFriendAskOp)
}

::google::protobuf::uint8* DelFriendAskOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DelFriendAskOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DelFriendAskOp)
  return target;
}

size_t DelFriendAskOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DelFriendAskOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelFriendAskOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DelFriendAskOp)
  GOOGLE_DCHECK_NE(&from, this);
  const DelFriendAskOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelFriendAskOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DelFriendAskOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DelFriendAskOp)
    MergeFrom(*source);
  }
}

void DelFriendAskOp::MergeFrom(const DelFriendAskOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DelFriendAskOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void DelFriendAskOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DelFriendAskOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelFriendAskOp::CopyFrom(const DelFriendAskOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DelFriendAskOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelFriendAskOp::IsInitialized() const {
  return true;
}

void DelFriendAskOp::Swap(DelFriendAskOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelFriendAskOp::InternalSwap(DelFriendAskOp* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelFriendAskOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelFriendAskOp

// uint32 target_uid = 1;
void DelFriendAskOp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 DelFriendAskOp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.DelFriendAskOp.target_uid)
  return target_uid_;
}
void DelFriendAskOp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.DelFriendAskOp.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BanCustomDungeonOp::kBanExpireTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BanCustomDungeonOp::BanCustomDungeonOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BanCustomDungeonOp)
}
BanCustomDungeonOp::BanCustomDungeonOp(const BanCustomDungeonOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ban_expire_time_ = from.ban_expire_time_;
  // @@protoc_insertion_point(copy_constructor:proto.BanCustomDungeonOp)
}

void BanCustomDungeonOp::SharedCtor() {
  ban_expire_time_ = 0u;
  _cached_size_ = 0;
}

BanCustomDungeonOp::~BanCustomDungeonOp() {
  // @@protoc_insertion_point(destructor:proto.BanCustomDungeonOp)
  SharedDtor();
}

void BanCustomDungeonOp::SharedDtor() {
}

void BanCustomDungeonOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BanCustomDungeonOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BanCustomDungeonOp& BanCustomDungeonOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

BanCustomDungeonOp* BanCustomDungeonOp::New(::google::protobuf::Arena* arena) const {
  BanCustomDungeonOp* n = new BanCustomDungeonOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BanCustomDungeonOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BanCustomDungeonOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ban_expire_time_ = 0u;
  _internal_metadata_.Clear();
}

bool BanCustomDungeonOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BanCustomDungeonOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 ban_expire_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ban_expire_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BanCustomDungeonOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BanCustomDungeonOp)
  return false;
#undef DO_
}

void BanCustomDungeonOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BanCustomDungeonOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ban_expire_time = 1;
  if (this->ban_expire_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ban_expire_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BanCustomDungeonOp)
}

::google::protobuf::uint8* BanCustomDungeonOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BanCustomDungeonOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ban_expire_time = 1;
  if (this->ban_expire_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ban_expire_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BanCustomDungeonOp)
  return target;
}

size_t BanCustomDungeonOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BanCustomDungeonOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 ban_expire_time = 1;
  if (this->ban_expire_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ban_expire_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BanCustomDungeonOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BanCustomDungeonOp)
  GOOGLE_DCHECK_NE(&from, this);
  const BanCustomDungeonOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BanCustomDungeonOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BanCustomDungeonOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BanCustomDungeonOp)
    MergeFrom(*source);
  }
}

void BanCustomDungeonOp::MergeFrom(const BanCustomDungeonOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BanCustomDungeonOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ban_expire_time() != 0) {
    set_ban_expire_time(from.ban_expire_time());
  }
}

void BanCustomDungeonOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BanCustomDungeonOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BanCustomDungeonOp::CopyFrom(const BanCustomDungeonOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BanCustomDungeonOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BanCustomDungeonOp::IsInitialized() const {
  return true;
}

void BanCustomDungeonOp::Swap(BanCustomDungeonOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BanCustomDungeonOp::InternalSwap(BanCustomDungeonOp* other) {
  using std::swap;
  swap(ban_expire_time_, other->ban_expire_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BanCustomDungeonOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BanCustomDungeonOp

// uint32 ban_expire_time = 1;
void BanCustomDungeonOp::clear_ban_expire_time() {
  ban_expire_time_ = 0u;
}
::google::protobuf::uint32 BanCustomDungeonOp::ban_expire_time() const {
  // @@protoc_insertion_point(field_get:proto.BanCustomDungeonOp.ban_expire_time)
  return ban_expire_time_;
}
void BanCustomDungeonOp::set_ban_expire_time(::google::protobuf::uint32 value) {
  
  ban_expire_time_ = value;
  // @@protoc_insertion_point(field_set:proto.BanCustomDungeonOp.ban_expire_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveInvalidMapMarksOp::kSceneIdFieldNumber;
const int RemoveInvalidMapMarksOp::kXRangeFieldNumber;
const int RemoveInvalidMapMarksOp::kZRangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveInvalidMapMarksOp::RemoveInvalidMapMarksOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RemoveInvalidMapMarksOp)
}
RemoveInvalidMapMarksOp::RemoveInvalidMapMarksOp(const RemoveInvalidMapMarksOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_x_range()) {
    x_range_ = new ::proto::FloatPairBin(*from.x_range_);
  } else {
    x_range_ = NULL;
  }
  if (from.has_z_range()) {
    z_range_ = new ::proto::FloatPairBin(*from.z_range_);
  } else {
    z_range_ = NULL;
  }
  scene_id_ = from.scene_id_;
  // @@protoc_insertion_point(copy_constructor:proto.RemoveInvalidMapMarksOp)
}

void RemoveInvalidMapMarksOp::SharedCtor() {
  ::memset(&x_range_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&x_range_)) + sizeof(scene_id_));
  _cached_size_ = 0;
}

RemoveInvalidMapMarksOp::~RemoveInvalidMapMarksOp() {
  // @@protoc_insertion_point(destructor:proto.RemoveInvalidMapMarksOp)
  SharedDtor();
}

void RemoveInvalidMapMarksOp::SharedDtor() {
  if (this != internal_default_instance()) delete x_range_;
  if (this != internal_default_instance()) delete z_range_;
}

void RemoveInvalidMapMarksOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveInvalidMapMarksOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveInvalidMapMarksOp& RemoveInvalidMapMarksOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

RemoveInvalidMapMarksOp* RemoveInvalidMapMarksOp::New(::google::protobuf::Arena* arena) const {
  RemoveInvalidMapMarksOp* n = new RemoveInvalidMapMarksOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveInvalidMapMarksOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RemoveInvalidMapMarksOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && x_range_ != NULL) {
    delete x_range_;
  }
  x_range_ = NULL;
  if (GetArenaNoVirtual() == NULL && z_range_ != NULL) {
    delete z_range_;
  }
  z_range_ = NULL;
  scene_id_ = 0u;
  _internal_metadata_.Clear();
}

bool RemoveInvalidMapMarksOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RemoveInvalidMapMarksOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FloatPairBin x_range = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_x_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FloatPairBin z_range = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_z_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RemoveInvalidMapMarksOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RemoveInvalidMapMarksOp)
  return false;
#undef DO_
}

void RemoveInvalidMapMarksOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RemoveInvalidMapMarksOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // .proto.FloatPairBin x_range = 2;
  if (this->has_x_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->x_range_, output);
  }

  // .proto.FloatPairBin z_range = 3;
  if (this->has_z_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->z_range_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RemoveInvalidMapMarksOp)
}

::google::protobuf::uint8* RemoveInvalidMapMarksOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RemoveInvalidMapMarksOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // .proto.FloatPairBin x_range = 2;
  if (this->has_x_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->x_range_, deterministic, target);
  }

  // .proto.FloatPairBin z_range = 3;
  if (this->has_z_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->z_range_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RemoveInvalidMapMarksOp)
  return target;
}

size_t RemoveInvalidMapMarksOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RemoveInvalidMapMarksOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.FloatPairBin x_range = 2;
  if (this->has_x_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->x_range_);
  }

  // .proto.FloatPairBin z_range = 3;
  if (this->has_z_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->z_range_);
  }

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveInvalidMapMarksOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RemoveInvalidMapMarksOp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveInvalidMapMarksOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveInvalidMapMarksOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RemoveInvalidMapMarksOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RemoveInvalidMapMarksOp)
    MergeFrom(*source);
  }
}

void RemoveInvalidMapMarksOp::MergeFrom(const RemoveInvalidMapMarksOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RemoveInvalidMapMarksOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_x_range()) {
    mutable_x_range()->::proto::FloatPairBin::MergeFrom(from.x_range());
  }
  if (from.has_z_range()) {
    mutable_z_range()->::proto::FloatPairBin::MergeFrom(from.z_range());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void RemoveInvalidMapMarksOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RemoveInvalidMapMarksOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveInvalidMapMarksOp::CopyFrom(const RemoveInvalidMapMarksOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RemoveInvalidMapMarksOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveInvalidMapMarksOp::IsInitialized() const {
  return true;
}

void RemoveInvalidMapMarksOp::Swap(RemoveInvalidMapMarksOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveInvalidMapMarksOp::InternalSwap(RemoveInvalidMapMarksOp* other) {
  using std::swap;
  swap(x_range_, other->x_range_);
  swap(z_range_, other->z_range_);
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveInvalidMapMarksOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoveInvalidMapMarksOp

// uint32 scene_id = 1;
void RemoveInvalidMapMarksOp::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 RemoveInvalidMapMarksOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.RemoveInvalidMapMarksOp.scene_id)
  return scene_id_;
}
void RemoveInvalidMapMarksOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveInvalidMapMarksOp.scene_id)
}

// .proto.FloatPairBin x_range = 2;
bool RemoveInvalidMapMarksOp::has_x_range() const {
  return this != internal_default_instance() && x_range_ != NULL;
}
void RemoveInvalidMapMarksOp::clear_x_range() {
  if (GetArenaNoVirtual() == NULL && x_range_ != NULL) delete x_range_;
  x_range_ = NULL;
}
const ::proto::FloatPairBin& RemoveInvalidMapMarksOp::x_range() const {
  const ::proto::FloatPairBin* p = x_range_;
  // @@protoc_insertion_point(field_get:proto.RemoveInvalidMapMarksOp.x_range)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::FloatPairBin*>(
      &::proto::_FloatPairBin_default_instance_);
}
::proto::FloatPairBin* RemoveInvalidMapMarksOp::mutable_x_range() {
  
  if (x_range_ == NULL) {
    x_range_ = new ::proto::FloatPairBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.RemoveInvalidMapMarksOp.x_range)
  return x_range_;
}
::proto::FloatPairBin* RemoveInvalidMapMarksOp::release_x_range() {
  // @@protoc_insertion_point(field_release:proto.RemoveInvalidMapMarksOp.x_range)
  
  ::proto::FloatPairBin* temp = x_range_;
  x_range_ = NULL;
  return temp;
}
void RemoveInvalidMapMarksOp::set_allocated_x_range(::proto::FloatPairBin* x_range) {
  delete x_range_;
  x_range_ = x_range;
  if (x_range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.RemoveInvalidMapMarksOp.x_range)
}

// .proto.FloatPairBin z_range = 3;
bool RemoveInvalidMapMarksOp::has_z_range() const {
  return this != internal_default_instance() && z_range_ != NULL;
}
void RemoveInvalidMapMarksOp::clear_z_range() {
  if (GetArenaNoVirtual() == NULL && z_range_ != NULL) delete z_range_;
  z_range_ = NULL;
}
const ::proto::FloatPairBin& RemoveInvalidMapMarksOp::z_range() const {
  const ::proto::FloatPairBin* p = z_range_;
  // @@protoc_insertion_point(field_get:proto.RemoveInvalidMapMarksOp.z_range)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::FloatPairBin*>(
      &::proto::_FloatPairBin_default_instance_);
}
::proto::FloatPairBin* RemoveInvalidMapMarksOp::mutable_z_range() {
  
  if (z_range_ == NULL) {
    z_range_ = new ::proto::FloatPairBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.RemoveInvalidMapMarksOp.z_range)
  return z_range_;
}
::proto::FloatPairBin* RemoveInvalidMapMarksOp::release_z_range() {
  // @@protoc_insertion_point(field_release:proto.RemoveInvalidMapMarksOp.z_range)
  
  ::proto::FloatPairBin* temp = z_range_;
  z_range_ = NULL;
  return temp;
}
void RemoveInvalidMapMarksOp::set_allocated_z_range(::proto::FloatPairBin* z_range) {
  delete z_range_;
  z_range_ = z_range;
  if (z_range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.RemoveInvalidMapMarksOp.z_range)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecalculateAreaExplorePointOp::kAreaIdFieldNumber;
const int RecalculateAreaExplorePointOp::kOldExpFieldNumber;
const int RecalculateAreaExplorePointOp::kRecalcExpFieldNumber;
const int RecalculateAreaExplorePointOp::kNewExpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecalculateAreaExplorePointOp::RecalculateAreaExplorePointOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RecalculateAreaExplorePointOp)
}
RecalculateAreaExplorePointOp::RecalculateAreaExplorePointOp(const RecalculateAreaExplorePointOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&area_id_, &from.area_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&new_exp_) -
    reinterpret_cast<char*>(&area_id_)) + sizeof(new_exp_));
  // @@protoc_insertion_point(copy_constructor:proto.RecalculateAreaExplorePointOp)
}

void RecalculateAreaExplorePointOp::SharedCtor() {
  ::memset(&area_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&new_exp_) -
      reinterpret_cast<char*>(&area_id_)) + sizeof(new_exp_));
  _cached_size_ = 0;
}

RecalculateAreaExplorePointOp::~RecalculateAreaExplorePointOp() {
  // @@protoc_insertion_point(destructor:proto.RecalculateAreaExplorePointOp)
  SharedDtor();
}

void RecalculateAreaExplorePointOp::SharedDtor() {
}

void RecalculateAreaExplorePointOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecalculateAreaExplorePointOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecalculateAreaExplorePointOp& RecalculateAreaExplorePointOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

RecalculateAreaExplorePointOp* RecalculateAreaExplorePointOp::New(::google::protobuf::Arena* arena) const {
  RecalculateAreaExplorePointOp* n = new RecalculateAreaExplorePointOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecalculateAreaExplorePointOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RecalculateAreaExplorePointOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&area_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&new_exp_) -
      reinterpret_cast<char*>(&area_id_)) + sizeof(new_exp_));
  _internal_metadata_.Clear();
}

bool RecalculateAreaExplorePointOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RecalculateAreaExplorePointOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 area_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &area_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 old_exp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &old_exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 recalc_exp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recalc_exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 new_exp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &new_exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RecalculateAreaExplorePointOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RecalculateAreaExplorePointOp)
  return false;
#undef DO_
}

void RecalculateAreaExplorePointOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RecalculateAreaExplorePointOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 area_id = 1;
  if (this->area_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->area_id(), output);
  }

  // uint32 old_exp = 2;
  if (this->old_exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->old_exp(), output);
  }

  // uint32 recalc_exp = 3;
  if (this->recalc_exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->recalc_exp(), output);
  }

  // uint32 new_exp = 4;
  if (this->new_exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->new_exp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RecalculateAreaExplorePointOp)
}

::google::protobuf::uint8* RecalculateAreaExplorePointOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RecalculateAreaExplorePointOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 area_id = 1;
  if (this->area_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->area_id(), target);
  }

  // uint32 old_exp = 2;
  if (this->old_exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->old_exp(), target);
  }

  // uint32 recalc_exp = 3;
  if (this->recalc_exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->recalc_exp(), target);
  }

  // uint32 new_exp = 4;
  if (this->new_exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->new_exp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RecalculateAreaExplorePointOp)
  return target;
}

size_t RecalculateAreaExplorePointOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RecalculateAreaExplorePointOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 area_id = 1;
  if (this->area_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->area_id());
  }

  // uint32 old_exp = 2;
  if (this->old_exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->old_exp());
  }

  // uint32 recalc_exp = 3;
  if (this->recalc_exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->recalc_exp());
  }

  // uint32 new_exp = 4;
  if (this->new_exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->new_exp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecalculateAreaExplorePointOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RecalculateAreaExplorePointOp)
  GOOGLE_DCHECK_NE(&from, this);
  const RecalculateAreaExplorePointOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecalculateAreaExplorePointOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RecalculateAreaExplorePointOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RecalculateAreaExplorePointOp)
    MergeFrom(*source);
  }
}

void RecalculateAreaExplorePointOp::MergeFrom(const RecalculateAreaExplorePointOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RecalculateAreaExplorePointOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.area_id() != 0) {
    set_area_id(from.area_id());
  }
  if (from.old_exp() != 0) {
    set_old_exp(from.old_exp());
  }
  if (from.recalc_exp() != 0) {
    set_recalc_exp(from.recalc_exp());
  }
  if (from.new_exp() != 0) {
    set_new_exp(from.new_exp());
  }
}

void RecalculateAreaExplorePointOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RecalculateAreaExplorePointOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecalculateAreaExplorePointOp::CopyFrom(const RecalculateAreaExplorePointOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RecalculateAreaExplorePointOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecalculateAreaExplorePointOp::IsInitialized() const {
  return true;
}

void RecalculateAreaExplorePointOp::Swap(RecalculateAreaExplorePointOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecalculateAreaExplorePointOp::InternalSwap(RecalculateAreaExplorePointOp* other) {
  using std::swap;
  swap(area_id_, other->area_id_);
  swap(old_exp_, other->old_exp_);
  swap(recalc_exp_, other->recalc_exp_);
  swap(new_exp_, other->new_exp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecalculateAreaExplorePointOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RecalculateAreaExplorePointOp

// uint32 area_id = 1;
void RecalculateAreaExplorePointOp::clear_area_id() {
  area_id_ = 0u;
}
::google::protobuf::uint32 RecalculateAreaExplorePointOp::area_id() const {
  // @@protoc_insertion_point(field_get:proto.RecalculateAreaExplorePointOp.area_id)
  return area_id_;
}
void RecalculateAreaExplorePointOp::set_area_id(::google::protobuf::uint32 value) {
  
  area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RecalculateAreaExplorePointOp.area_id)
}

// uint32 old_exp = 2;
void RecalculateAreaExplorePointOp::clear_old_exp() {
  old_exp_ = 0u;
}
::google::protobuf::uint32 RecalculateAreaExplorePointOp::old_exp() const {
  // @@protoc_insertion_point(field_get:proto.RecalculateAreaExplorePointOp.old_exp)
  return old_exp_;
}
void RecalculateAreaExplorePointOp::set_old_exp(::google::protobuf::uint32 value) {
  
  old_exp_ = value;
  // @@protoc_insertion_point(field_set:proto.RecalculateAreaExplorePointOp.old_exp)
}

// uint32 recalc_exp = 3;
void RecalculateAreaExplorePointOp::clear_recalc_exp() {
  recalc_exp_ = 0u;
}
::google::protobuf::uint32 RecalculateAreaExplorePointOp::recalc_exp() const {
  // @@protoc_insertion_point(field_get:proto.RecalculateAreaExplorePointOp.recalc_exp)
  return recalc_exp_;
}
void RecalculateAreaExplorePointOp::set_recalc_exp(::google::protobuf::uint32 value) {
  
  recalc_exp_ = value;
  // @@protoc_insertion_point(field_set:proto.RecalculateAreaExplorePointOp.recalc_exp)
}

// uint32 new_exp = 4;
void RecalculateAreaExplorePointOp::clear_new_exp() {
  new_exp_ = 0u;
}
::google::protobuf::uint32 RecalculateAreaExplorePointOp::new_exp() const {
  // @@protoc_insertion_point(field_get:proto.RecalculateAreaExplorePointOp.new_exp)
  return new_exp_;
}
void RecalculateAreaExplorePointOp::set_new_exp(::google::protobuf::uint32 value) {
  
  new_exp_ = value;
  // @@protoc_insertion_point(field_set:proto.RecalculateAreaExplorePointOp.new_exp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NicknameAuditResultOp::kNicknameFieldNumber;
const int NicknameAuditResultOp::kIsOkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NicknameAuditResultOp::NicknameAuditResultOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.NicknameAuditResultOp)
}
NicknameAuditResultOp::NicknameAuditResultOp(const NicknameAuditResultOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  is_ok_ = from.is_ok_;
  // @@protoc_insertion_point(copy_constructor:proto.NicknameAuditResultOp)
}

void NicknameAuditResultOp::SharedCtor() {
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_ok_ = false;
  _cached_size_ = 0;
}

NicknameAuditResultOp::~NicknameAuditResultOp() {
  // @@protoc_insertion_point(destructor:proto.NicknameAuditResultOp)
  SharedDtor();
}

void NicknameAuditResultOp::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NicknameAuditResultOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NicknameAuditResultOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NicknameAuditResultOp& NicknameAuditResultOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

NicknameAuditResultOp* NicknameAuditResultOp::New(::google::protobuf::Arena* arena) const {
  NicknameAuditResultOp* n = new NicknameAuditResultOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NicknameAuditResultOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.NicknameAuditResultOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_ok_ = false;
  _internal_metadata_.Clear();
}

bool NicknameAuditResultOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.NicknameAuditResultOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string nickname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.NicknameAuditResultOp.nickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_ok = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_ok_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.NicknameAuditResultOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.NicknameAuditResultOp)
  return false;
#undef DO_
}

void NicknameAuditResultOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.NicknameAuditResultOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nickname = 1;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.NicknameAuditResultOp.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nickname(), output);
  }

  // bool is_ok = 2;
  if (this->is_ok() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_ok(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.NicknameAuditResultOp)
}

::google::protobuf::uint8* NicknameAuditResultOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.NicknameAuditResultOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nickname = 1;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.NicknameAuditResultOp.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nickname(), target);
  }

  // bool is_ok = 2;
  if (this->is_ok() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_ok(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.NicknameAuditResultOp)
  return target;
}

size_t NicknameAuditResultOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.NicknameAuditResultOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string nickname = 1;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  // bool is_ok = 2;
  if (this->is_ok() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NicknameAuditResultOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.NicknameAuditResultOp)
  GOOGLE_DCHECK_NE(&from, this);
  const NicknameAuditResultOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NicknameAuditResultOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.NicknameAuditResultOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.NicknameAuditResultOp)
    MergeFrom(*source);
  }
}

void NicknameAuditResultOp::MergeFrom(const NicknameAuditResultOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.NicknameAuditResultOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.is_ok() != 0) {
    set_is_ok(from.is_ok());
  }
}

void NicknameAuditResultOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.NicknameAuditResultOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NicknameAuditResultOp::CopyFrom(const NicknameAuditResultOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.NicknameAuditResultOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NicknameAuditResultOp::IsInitialized() const {
  return true;
}

void NicknameAuditResultOp::Swap(NicknameAuditResultOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NicknameAuditResultOp::InternalSwap(NicknameAuditResultOp* other) {
  using std::swap;
  nickname_.Swap(&other->nickname_);
  swap(is_ok_, other->is_ok_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NicknameAuditResultOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NicknameAuditResultOp

// string nickname = 1;
void NicknameAuditResultOp::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NicknameAuditResultOp::nickname() const {
  // @@protoc_insertion_point(field_get:proto.NicknameAuditResultOp.nickname)
  return nickname_.GetNoArena();
}
void NicknameAuditResultOp::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.NicknameAuditResultOp.nickname)
}
#if LANG_CXX11
void NicknameAuditResultOp::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.NicknameAuditResultOp.nickname)
}
#endif
void NicknameAuditResultOp::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.NicknameAuditResultOp.nickname)
}
void NicknameAuditResultOp::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.NicknameAuditResultOp.nickname)
}
::std::string* NicknameAuditResultOp::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.NicknameAuditResultOp.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NicknameAuditResultOp::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.NicknameAuditResultOp.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NicknameAuditResultOp::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.NicknameAuditResultOp.nickname)
}

// bool is_ok = 2;
void NicknameAuditResultOp::clear_is_ok() {
  is_ok_ = false;
}
bool NicknameAuditResultOp::is_ok() const {
  // @@protoc_insertion_point(field_get:proto.NicknameAuditResultOp.is_ok)
  return is_ok_;
}
void NicknameAuditResultOp::set_is_ok(bool value) {
  
  is_ok_ = value;
  // @@protoc_insertion_point(field_set:proto.NicknameAuditResultOp.is_ok)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignatureAuditResultOp::kSignatureFieldNumber;
const int SignatureAuditResultOp::kIsOkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignatureAuditResultOp::SignatureAuditResultOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SignatureAuditResultOp)
}
SignatureAuditResultOp::SignatureAuditResultOp(const SignatureAuditResultOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  is_ok_ = from.is_ok_;
  // @@protoc_insertion_point(copy_constructor:proto.SignatureAuditResultOp)
}

void SignatureAuditResultOp::SharedCtor() {
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_ok_ = false;
  _cached_size_ = 0;
}

SignatureAuditResultOp::~SignatureAuditResultOp() {
  // @@protoc_insertion_point(destructor:proto.SignatureAuditResultOp)
  SharedDtor();
}

void SignatureAuditResultOp::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignatureAuditResultOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SignatureAuditResultOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignatureAuditResultOp& SignatureAuditResultOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SignatureAuditResultOp* SignatureAuditResultOp::New(::google::protobuf::Arena* arena) const {
  SignatureAuditResultOp* n = new SignatureAuditResultOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SignatureAuditResultOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SignatureAuditResultOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_ok_ = false;
  _internal_metadata_.Clear();
}

bool SignatureAuditResultOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SignatureAuditResultOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string signature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signature().data(), static_cast<int>(this->signature().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SignatureAuditResultOp.signature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_ok = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_ok_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SignatureAuditResultOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SignatureAuditResultOp)
  return false;
#undef DO_
}

void SignatureAuditResultOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SignatureAuditResultOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string signature = 1;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SignatureAuditResultOp.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->signature(), output);
  }

  // bool is_ok = 2;
  if (this->is_ok() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_ok(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SignatureAuditResultOp)
}

::google::protobuf::uint8* SignatureAuditResultOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SignatureAuditResultOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string signature = 1;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SignatureAuditResultOp.signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->signature(), target);
  }

  // bool is_ok = 2;
  if (this->is_ok() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_ok(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SignatureAuditResultOp)
  return target;
}

size_t SignatureAuditResultOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SignatureAuditResultOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string signature = 1;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature());
  }

  // bool is_ok = 2;
  if (this->is_ok() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SignatureAuditResultOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SignatureAuditResultOp)
  GOOGLE_DCHECK_NE(&from, this);
  const SignatureAuditResultOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignatureAuditResultOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SignatureAuditResultOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SignatureAuditResultOp)
    MergeFrom(*source);
  }
}

void SignatureAuditResultOp::MergeFrom(const SignatureAuditResultOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SignatureAuditResultOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.is_ok() != 0) {
    set_is_ok(from.is_ok());
  }
}

void SignatureAuditResultOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SignatureAuditResultOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignatureAuditResultOp::CopyFrom(const SignatureAuditResultOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SignatureAuditResultOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignatureAuditResultOp::IsInitialized() const {
  return true;
}

void SignatureAuditResultOp::Swap(SignatureAuditResultOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignatureAuditResultOp::InternalSwap(SignatureAuditResultOp* other) {
  using std::swap;
  signature_.Swap(&other->signature_);
  swap(is_ok_, other->is_ok_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SignatureAuditResultOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SignatureAuditResultOp

// string signature = 1;
void SignatureAuditResultOp::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SignatureAuditResultOp::signature() const {
  // @@protoc_insertion_point(field_get:proto.SignatureAuditResultOp.signature)
  return signature_.GetNoArena();
}
void SignatureAuditResultOp::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SignatureAuditResultOp.signature)
}
#if LANG_CXX11
void SignatureAuditResultOp::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SignatureAuditResultOp.signature)
}
#endif
void SignatureAuditResultOp::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SignatureAuditResultOp.signature)
}
void SignatureAuditResultOp::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SignatureAuditResultOp.signature)
}
::std::string* SignatureAuditResultOp::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:proto.SignatureAuditResultOp.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SignatureAuditResultOp::release_signature() {
  // @@protoc_insertion_point(field_release:proto.SignatureAuditResultOp.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SignatureAuditResultOp::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:proto.SignatureAuditResultOp.signature)
}

// bool is_ok = 2;
void SignatureAuditResultOp::clear_is_ok() {
  is_ok_ = false;
}
bool SignatureAuditResultOp::is_ok() const {
  // @@protoc_insertion_point(field_get:proto.SignatureAuditResultOp.is_ok)
  return is_ok_;
}
void SignatureAuditResultOp::set_is_ok(bool value) {
  
  is_ok_ = value;
  // @@protoc_insertion_point(field_set:proto.SignatureAuditResultOp.is_ok)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PassHomeSceneArrangementAuditOp::kModuleIdFieldNumber;
const int PassHomeSceneArrangementAuditOp::kSceneIdFieldNumber;
const int PassHomeSceneArrangementAuditOp::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PassHomeSceneArrangementAuditOp::PassHomeSceneArrangementAuditOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PassHomeSceneArrangementAuditOp)
}
PassHomeSceneArrangementAuditOp::PassHomeSceneArrangementAuditOp(const PassHomeSceneArrangementAuditOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&module_id_, &from.module_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&module_id_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:proto.PassHomeSceneArrangementAuditOp)
}

void PassHomeSceneArrangementAuditOp::SharedCtor() {
  ::memset(&module_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&module_id_)) + sizeof(version_));
  _cached_size_ = 0;
}

PassHomeSceneArrangementAuditOp::~PassHomeSceneArrangementAuditOp() {
  // @@protoc_insertion_point(destructor:proto.PassHomeSceneArrangementAuditOp)
  SharedDtor();
}

void PassHomeSceneArrangementAuditOp::SharedDtor() {
}

void PassHomeSceneArrangementAuditOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PassHomeSceneArrangementAuditOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PassHomeSceneArrangementAuditOp& PassHomeSceneArrangementAuditOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

PassHomeSceneArrangementAuditOp* PassHomeSceneArrangementAuditOp::New(::google::protobuf::Arena* arena) const {
  PassHomeSceneArrangementAuditOp* n = new PassHomeSceneArrangementAuditOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PassHomeSceneArrangementAuditOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PassHomeSceneArrangementAuditOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&module_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&module_id_)) + sizeof(version_));
  _internal_metadata_.Clear();
}

bool PassHomeSceneArrangementAuditOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PassHomeSceneArrangementAuditOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 module_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &module_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PassHomeSceneArrangementAuditOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PassHomeSceneArrangementAuditOp)
  return false;
#undef DO_
}

void PassHomeSceneArrangementAuditOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PassHomeSceneArrangementAuditOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->module_id(), output);
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->scene_id(), output);
  }

  // uint32 version = 3;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PassHomeSceneArrangementAuditOp)
}

::google::protobuf::uint8* PassHomeSceneArrangementAuditOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PassHomeSceneArrangementAuditOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->module_id(), target);
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->scene_id(), target);
  }

  // uint32 version = 3;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PassHomeSceneArrangementAuditOp)
  return target;
}

size_t PassHomeSceneArrangementAuditOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PassHomeSceneArrangementAuditOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->module_id());
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 version = 3;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PassHomeSceneArrangementAuditOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PassHomeSceneArrangementAuditOp)
  GOOGLE_DCHECK_NE(&from, this);
  const PassHomeSceneArrangementAuditOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PassHomeSceneArrangementAuditOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PassHomeSceneArrangementAuditOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PassHomeSceneArrangementAuditOp)
    MergeFrom(*source);
  }
}

void PassHomeSceneArrangementAuditOp::MergeFrom(const PassHomeSceneArrangementAuditOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PassHomeSceneArrangementAuditOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.module_id() != 0) {
    set_module_id(from.module_id());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void PassHomeSceneArrangementAuditOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PassHomeSceneArrangementAuditOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PassHomeSceneArrangementAuditOp::CopyFrom(const PassHomeSceneArrangementAuditOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PassHomeSceneArrangementAuditOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PassHomeSceneArrangementAuditOp::IsInitialized() const {
  return true;
}

void PassHomeSceneArrangementAuditOp::Swap(PassHomeSceneArrangementAuditOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PassHomeSceneArrangementAuditOp::InternalSwap(PassHomeSceneArrangementAuditOp* other) {
  using std::swap;
  swap(module_id_, other->module_id_);
  swap(scene_id_, other->scene_id_);
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PassHomeSceneArrangementAuditOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PassHomeSceneArrangementAuditOp

// uint32 module_id = 1;
void PassHomeSceneArrangementAuditOp::clear_module_id() {
  module_id_ = 0u;
}
::google::protobuf::uint32 PassHomeSceneArrangementAuditOp::module_id() const {
  // @@protoc_insertion_point(field_get:proto.PassHomeSceneArrangementAuditOp.module_id)
  return module_id_;
}
void PassHomeSceneArrangementAuditOp::set_module_id(::google::protobuf::uint32 value) {
  
  module_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PassHomeSceneArrangementAuditOp.module_id)
}

// uint32 scene_id = 2;
void PassHomeSceneArrangementAuditOp::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 PassHomeSceneArrangementAuditOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.PassHomeSceneArrangementAuditOp.scene_id)
  return scene_id_;
}
void PassHomeSceneArrangementAuditOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PassHomeSceneArrangementAuditOp.scene_id)
}

// uint32 version = 3;
void PassHomeSceneArrangementAuditOp::clear_version() {
  version_ = 0u;
}
::google::protobuf::uint32 PassHomeSceneArrangementAuditOp::version() const {
  // @@protoc_insertion_point(field_get:proto.PassHomeSceneArrangementAuditOp.version)
  return version_;
}
void PassHomeSceneArrangementAuditOp::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.PassHomeSceneArrangementAuditOp.version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FailHomeSceneArrangementAuditOp::kModuleIdFieldNumber;
const int FailHomeSceneArrangementAuditOp::kSceneIdFieldNumber;
const int FailHomeSceneArrangementAuditOp::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FailHomeSceneArrangementAuditOp::FailHomeSceneArrangementAuditOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FailHomeSceneArrangementAuditOp)
}
FailHomeSceneArrangementAuditOp::FailHomeSceneArrangementAuditOp(const FailHomeSceneArrangementAuditOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&module_id_, &from.module_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&module_id_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:proto.FailHomeSceneArrangementAuditOp)
}

void FailHomeSceneArrangementAuditOp::SharedCtor() {
  ::memset(&module_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&module_id_)) + sizeof(version_));
  _cached_size_ = 0;
}

FailHomeSceneArrangementAuditOp::~FailHomeSceneArrangementAuditOp() {
  // @@protoc_insertion_point(destructor:proto.FailHomeSceneArrangementAuditOp)
  SharedDtor();
}

void FailHomeSceneArrangementAuditOp::SharedDtor() {
}

void FailHomeSceneArrangementAuditOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FailHomeSceneArrangementAuditOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FailHomeSceneArrangementAuditOp& FailHomeSceneArrangementAuditOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

FailHomeSceneArrangementAuditOp* FailHomeSceneArrangementAuditOp::New(::google::protobuf::Arena* arena) const {
  FailHomeSceneArrangementAuditOp* n = new FailHomeSceneArrangementAuditOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FailHomeSceneArrangementAuditOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FailHomeSceneArrangementAuditOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&module_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&module_id_)) + sizeof(version_));
  _internal_metadata_.Clear();
}

bool FailHomeSceneArrangementAuditOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FailHomeSceneArrangementAuditOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 module_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &module_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FailHomeSceneArrangementAuditOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FailHomeSceneArrangementAuditOp)
  return false;
#undef DO_
}

void FailHomeSceneArrangementAuditOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FailHomeSceneArrangementAuditOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->module_id(), output);
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->scene_id(), output);
  }

  // uint32 version = 3;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FailHomeSceneArrangementAuditOp)
}

::google::protobuf::uint8* FailHomeSceneArrangementAuditOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FailHomeSceneArrangementAuditOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->module_id(), target);
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->scene_id(), target);
  }

  // uint32 version = 3;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FailHomeSceneArrangementAuditOp)
  return target;
}

size_t FailHomeSceneArrangementAuditOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FailHomeSceneArrangementAuditOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->module_id());
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 version = 3;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FailHomeSceneArrangementAuditOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FailHomeSceneArrangementAuditOp)
  GOOGLE_DCHECK_NE(&from, this);
  const FailHomeSceneArrangementAuditOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FailHomeSceneArrangementAuditOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FailHomeSceneArrangementAuditOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FailHomeSceneArrangementAuditOp)
    MergeFrom(*source);
  }
}

void FailHomeSceneArrangementAuditOp::MergeFrom(const FailHomeSceneArrangementAuditOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FailHomeSceneArrangementAuditOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.module_id() != 0) {
    set_module_id(from.module_id());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void FailHomeSceneArrangementAuditOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FailHomeSceneArrangementAuditOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FailHomeSceneArrangementAuditOp::CopyFrom(const FailHomeSceneArrangementAuditOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FailHomeSceneArrangementAuditOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FailHomeSceneArrangementAuditOp::IsInitialized() const {
  return true;
}

void FailHomeSceneArrangementAuditOp::Swap(FailHomeSceneArrangementAuditOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FailHomeSceneArrangementAuditOp::InternalSwap(FailHomeSceneArrangementAuditOp* other) {
  using std::swap;
  swap(module_id_, other->module_id_);
  swap(scene_id_, other->scene_id_);
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FailHomeSceneArrangementAuditOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FailHomeSceneArrangementAuditOp

// uint32 module_id = 1;
void FailHomeSceneArrangementAuditOp::clear_module_id() {
  module_id_ = 0u;
}
::google::protobuf::uint32 FailHomeSceneArrangementAuditOp::module_id() const {
  // @@protoc_insertion_point(field_get:proto.FailHomeSceneArrangementAuditOp.module_id)
  return module_id_;
}
void FailHomeSceneArrangementAuditOp::set_module_id(::google::protobuf::uint32 value) {
  
  module_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FailHomeSceneArrangementAuditOp.module_id)
}

// uint32 scene_id = 2;
void FailHomeSceneArrangementAuditOp::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 FailHomeSceneArrangementAuditOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.FailHomeSceneArrangementAuditOp.scene_id)
  return scene_id_;
}
void FailHomeSceneArrangementAuditOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FailHomeSceneArrangementAuditOp.scene_id)
}

// uint32 version = 3;
void FailHomeSceneArrangementAuditOp::clear_version() {
  version_ = 0u;
}
::google::protobuf::uint32 FailHomeSceneArrangementAuditOp::version() const {
  // @@protoc_insertion_point(field_get:proto.FailHomeSceneArrangementAuditOp.version)
  return version_;
}
void FailHomeSceneArrangementAuditOp::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.FailHomeSceneArrangementAuditOp.version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FailHomeModulesArrangementAuditOp::kIsAllModuleFieldNumber;
const int FailHomeModulesArrangementAuditOp::kModuleIdListFieldNumber;
const int FailHomeModulesArrangementAuditOp::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FailHomeModulesArrangementAuditOp::FailHomeModulesArrangementAuditOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FailHomeModulesArrangementAuditOp)
}
FailHomeModulesArrangementAuditOp::FailHomeModulesArrangementAuditOp(const FailHomeModulesArrangementAuditOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      module_id_list_(from.module_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_all_module_, &from.is_all_module_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&is_all_module_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:proto.FailHomeModulesArrangementAuditOp)
}

void FailHomeModulesArrangementAuditOp::SharedCtor() {
  ::memset(&is_all_module_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&is_all_module_)) + sizeof(version_));
  _cached_size_ = 0;
}

FailHomeModulesArrangementAuditOp::~FailHomeModulesArrangementAuditOp() {
  // @@protoc_insertion_point(destructor:proto.FailHomeModulesArrangementAuditOp)
  SharedDtor();
}

void FailHomeModulesArrangementAuditOp::SharedDtor() {
}

void FailHomeModulesArrangementAuditOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FailHomeModulesArrangementAuditOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FailHomeModulesArrangementAuditOp& FailHomeModulesArrangementAuditOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

FailHomeModulesArrangementAuditOp* FailHomeModulesArrangementAuditOp::New(::google::protobuf::Arena* arena) const {
  FailHomeModulesArrangementAuditOp* n = new FailHomeModulesArrangementAuditOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FailHomeModulesArrangementAuditOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FailHomeModulesArrangementAuditOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  module_id_list_.Clear();
  ::memset(&is_all_module_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&is_all_module_)) + sizeof(version_));
  _internal_metadata_.Clear();
}

bool FailHomeModulesArrangementAuditOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FailHomeModulesArrangementAuditOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_all_module = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_all_module_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 module_id_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_module_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_module_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FailHomeModulesArrangementAuditOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FailHomeModulesArrangementAuditOp)
  return false;
#undef DO_
}

void FailHomeModulesArrangementAuditOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FailHomeModulesArrangementAuditOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_all_module = 1;
  if (this->is_all_module() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_all_module(), output);
  }

  // repeated uint32 module_id_list = 2;
  if (this->module_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _module_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->module_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->module_id_list(i), output);
  }

  // uint32 version = 3;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FailHomeModulesArrangementAuditOp)
}

::google::protobuf::uint8* FailHomeModulesArrangementAuditOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FailHomeModulesArrangementAuditOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_all_module = 1;
  if (this->is_all_module() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_all_module(), target);
  }

  // repeated uint32 module_id_list = 2;
  if (this->module_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _module_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->module_id_list_, target);
  }

  // uint32 version = 3;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FailHomeModulesArrangementAuditOp)
  return target;
}

size_t FailHomeModulesArrangementAuditOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FailHomeModulesArrangementAuditOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 module_id_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->module_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _module_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bool is_all_module = 1;
  if (this->is_all_module() != 0) {
    total_size += 1 + 1;
  }

  // uint32 version = 3;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FailHomeModulesArrangementAuditOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FailHomeModulesArrangementAuditOp)
  GOOGLE_DCHECK_NE(&from, this);
  const FailHomeModulesArrangementAuditOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FailHomeModulesArrangementAuditOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FailHomeModulesArrangementAuditOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FailHomeModulesArrangementAuditOp)
    MergeFrom(*source);
  }
}

void FailHomeModulesArrangementAuditOp::MergeFrom(const FailHomeModulesArrangementAuditOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FailHomeModulesArrangementAuditOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  module_id_list_.MergeFrom(from.module_id_list_);
  if (from.is_all_module() != 0) {
    set_is_all_module(from.is_all_module());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void FailHomeModulesArrangementAuditOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FailHomeModulesArrangementAuditOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FailHomeModulesArrangementAuditOp::CopyFrom(const FailHomeModulesArrangementAuditOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FailHomeModulesArrangementAuditOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FailHomeModulesArrangementAuditOp::IsInitialized() const {
  return true;
}

void FailHomeModulesArrangementAuditOp::Swap(FailHomeModulesArrangementAuditOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FailHomeModulesArrangementAuditOp::InternalSwap(FailHomeModulesArrangementAuditOp* other) {
  using std::swap;
  module_id_list_.InternalSwap(&other->module_id_list_);
  swap(is_all_module_, other->is_all_module_);
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FailHomeModulesArrangementAuditOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FailHomeModulesArrangementAuditOp

// bool is_all_module = 1;
void FailHomeModulesArrangementAuditOp::clear_is_all_module() {
  is_all_module_ = false;
}
bool FailHomeModulesArrangementAuditOp::is_all_module() const {
  // @@protoc_insertion_point(field_get:proto.FailHomeModulesArrangementAuditOp.is_all_module)
  return is_all_module_;
}
void FailHomeModulesArrangementAuditOp::set_is_all_module(bool value) {
  
  is_all_module_ = value;
  // @@protoc_insertion_point(field_set:proto.FailHomeModulesArrangementAuditOp.is_all_module)
}

// repeated uint32 module_id_list = 2;
int FailHomeModulesArrangementAuditOp::module_id_list_size() const {
  return module_id_list_.size();
}
void FailHomeModulesArrangementAuditOp::clear_module_id_list() {
  module_id_list_.Clear();
}
::google::protobuf::uint32 FailHomeModulesArrangementAuditOp::module_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.FailHomeModulesArrangementAuditOp.module_id_list)
  return module_id_list_.Get(index);
}
void FailHomeModulesArrangementAuditOp::set_module_id_list(int index, ::google::protobuf::uint32 value) {
  module_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.FailHomeModulesArrangementAuditOp.module_id_list)
}
void FailHomeModulesArrangementAuditOp::add_module_id_list(::google::protobuf::uint32 value) {
  module_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.FailHomeModulesArrangementAuditOp.module_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FailHomeModulesArrangementAuditOp::module_id_list() const {
  // @@protoc_insertion_point(field_list:proto.FailHomeModulesArrangementAuditOp.module_id_list)
  return module_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FailHomeModulesArrangementAuditOp::mutable_module_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.FailHomeModulesArrangementAuditOp.module_id_list)
  return &module_id_list_;
}

// uint32 version = 3;
void FailHomeModulesArrangementAuditOp::clear_version() {
  version_ = 0u;
}
::google::protobuf::uint32 FailHomeModulesArrangementAuditOp::version() const {
  // @@protoc_insertion_point(field_get:proto.FailHomeModulesArrangementAuditOp.version)
  return version_;
}
void FailHomeModulesArrangementAuditOp::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.FailHomeModulesArrangementAuditOp.version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BanUgcPublishOp::kBanPublishExpireTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BanUgcPublishOp::BanUgcPublishOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BanUgcPublishOp)
}
BanUgcPublishOp::BanUgcPublishOp(const BanUgcPublishOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ban_publish_expire_time_ = from.ban_publish_expire_time_;
  // @@protoc_insertion_point(copy_constructor:proto.BanUgcPublishOp)
}

void BanUgcPublishOp::SharedCtor() {
  ban_publish_expire_time_ = 0u;
  _cached_size_ = 0;
}

BanUgcPublishOp::~BanUgcPublishOp() {
  // @@protoc_insertion_point(destructor:proto.BanUgcPublishOp)
  SharedDtor();
}

void BanUgcPublishOp::SharedDtor() {
}

void BanUgcPublishOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BanUgcPublishOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BanUgcPublishOp& BanUgcPublishOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

BanUgcPublishOp* BanUgcPublishOp::New(::google::protobuf::Arena* arena) const {
  BanUgcPublishOp* n = new BanUgcPublishOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BanUgcPublishOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BanUgcPublishOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ban_publish_expire_time_ = 0u;
  _internal_metadata_.Clear();
}

bool BanUgcPublishOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BanUgcPublishOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 ban_publish_expire_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ban_publish_expire_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BanUgcPublishOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BanUgcPublishOp)
  return false;
#undef DO_
}

void BanUgcPublishOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BanUgcPublishOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ban_publish_expire_time = 1;
  if (this->ban_publish_expire_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ban_publish_expire_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BanUgcPublishOp)
}

::google::protobuf::uint8* BanUgcPublishOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BanUgcPublishOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ban_publish_expire_time = 1;
  if (this->ban_publish_expire_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ban_publish_expire_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BanUgcPublishOp)
  return target;
}

size_t BanUgcPublishOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BanUgcPublishOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 ban_publish_expire_time = 1;
  if (this->ban_publish_expire_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ban_publish_expire_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BanUgcPublishOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BanUgcPublishOp)
  GOOGLE_DCHECK_NE(&from, this);
  const BanUgcPublishOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BanUgcPublishOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BanUgcPublishOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BanUgcPublishOp)
    MergeFrom(*source);
  }
}

void BanUgcPublishOp::MergeFrom(const BanUgcPublishOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BanUgcPublishOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ban_publish_expire_time() != 0) {
    set_ban_publish_expire_time(from.ban_publish_expire_time());
  }
}

void BanUgcPublishOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BanUgcPublishOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BanUgcPublishOp::CopyFrom(const BanUgcPublishOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BanUgcPublishOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BanUgcPublishOp::IsInitialized() const {
  return true;
}

void BanUgcPublishOp::Swap(BanUgcPublishOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BanUgcPublishOp::InternalSwap(BanUgcPublishOp* other) {
  using std::swap;
  swap(ban_publish_expire_time_, other->ban_publish_expire_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BanUgcPublishOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BanUgcPublishOp

// uint32 ban_publish_expire_time = 1;
void BanUgcPublishOp::clear_ban_publish_expire_time() {
  ban_publish_expire_time_ = 0u;
}
::google::protobuf::uint32 BanUgcPublishOp::ban_publish_expire_time() const {
  // @@protoc_insertion_point(field_get:proto.BanUgcPublishOp.ban_publish_expire_time)
  return ban_publish_expire_time_;
}
void BanUgcPublishOp::set_ban_publish_expire_time(::google::protobuf::uint32 value) {
  
  ban_publish_expire_time_ = value;
  // @@protoc_insertion_point(field_set:proto.BanUgcPublishOp.ban_publish_expire_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResetPlayerPersistentDungeonOp::kSceneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResetPlayerPersistentDungeonOp::ResetPlayerPersistentDungeonOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ResetPlayerPersistentDungeonOp)
}
ResetPlayerPersistentDungeonOp::ResetPlayerPersistentDungeonOp(const ResetPlayerPersistentDungeonOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  scene_id_ = from.scene_id_;
  // @@protoc_insertion_point(copy_constructor:proto.ResetPlayerPersistentDungeonOp)
}

void ResetPlayerPersistentDungeonOp::SharedCtor() {
  scene_id_ = 0u;
  _cached_size_ = 0;
}

ResetPlayerPersistentDungeonOp::~ResetPlayerPersistentDungeonOp() {
  // @@protoc_insertion_point(destructor:proto.ResetPlayerPersistentDungeonOp)
  SharedDtor();
}

void ResetPlayerPersistentDungeonOp::SharedDtor() {
}

void ResetPlayerPersistentDungeonOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResetPlayerPersistentDungeonOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResetPlayerPersistentDungeonOp& ResetPlayerPersistentDungeonOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResetPlayerPersistentDungeonOp* ResetPlayerPersistentDungeonOp::New(::google::protobuf::Arena* arena) const {
  ResetPlayerPersistentDungeonOp* n = new ResetPlayerPersistentDungeonOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResetPlayerPersistentDungeonOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ResetPlayerPersistentDungeonOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scene_id_ = 0u;
  _internal_metadata_.Clear();
}

bool ResetPlayerPersistentDungeonOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ResetPlayerPersistentDungeonOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ResetPlayerPersistentDungeonOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ResetPlayerPersistentDungeonOp)
  return false;
#undef DO_
}

void ResetPlayerPersistentDungeonOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ResetPlayerPersistentDungeonOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ResetPlayerPersistentDungeonOp)
}

::google::protobuf::uint8* ResetPlayerPersistentDungeonOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ResetPlayerPersistentDungeonOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ResetPlayerPersistentDungeonOp)
  return target;
}

size_t ResetPlayerPersistentDungeonOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ResetPlayerPersistentDungeonOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResetPlayerPersistentDungeonOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ResetPlayerPersistentDungeonOp)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetPlayerPersistentDungeonOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResetPlayerPersistentDungeonOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ResetPlayerPersistentDungeonOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ResetPlayerPersistentDungeonOp)
    MergeFrom(*source);
  }
}

void ResetPlayerPersistentDungeonOp::MergeFrom(const ResetPlayerPersistentDungeonOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ResetPlayerPersistentDungeonOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void ResetPlayerPersistentDungeonOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ResetPlayerPersistentDungeonOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetPlayerPersistentDungeonOp::CopyFrom(const ResetPlayerPersistentDungeonOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ResetPlayerPersistentDungeonOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetPlayerPersistentDungeonOp::IsInitialized() const {
  return true;
}

void ResetPlayerPersistentDungeonOp::Swap(ResetPlayerPersistentDungeonOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResetPlayerPersistentDungeonOp::InternalSwap(ResetPlayerPersistentDungeonOp* other) {
  using std::swap;
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResetPlayerPersistentDungeonOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResetPlayerPersistentDungeonOp

// uint32 scene_id = 1;
void ResetPlayerPersistentDungeonOp::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 ResetPlayerPersistentDungeonOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ResetPlayerPersistentDungeonOp.scene_id)
  return scene_id_;
}
void ResetPlayerPersistentDungeonOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ResetPlayerPersistentDungeonOp.scene_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResetPlayerPosInPersistentDungeonOp::kSceneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResetPlayerPosInPersistentDungeonOp::ResetPlayerPosInPersistentDungeonOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ResetPlayerPosInPersistentDungeonOp)
}
ResetPlayerPosInPersistentDungeonOp::ResetPlayerPosInPersistentDungeonOp(const ResetPlayerPosInPersistentDungeonOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  scene_id_ = from.scene_id_;
  // @@protoc_insertion_point(copy_constructor:proto.ResetPlayerPosInPersistentDungeonOp)
}

void ResetPlayerPosInPersistentDungeonOp::SharedCtor() {
  scene_id_ = 0u;
  _cached_size_ = 0;
}

ResetPlayerPosInPersistentDungeonOp::~ResetPlayerPosInPersistentDungeonOp() {
  // @@protoc_insertion_point(destructor:proto.ResetPlayerPosInPersistentDungeonOp)
  SharedDtor();
}

void ResetPlayerPosInPersistentDungeonOp::SharedDtor() {
}

void ResetPlayerPosInPersistentDungeonOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResetPlayerPosInPersistentDungeonOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResetPlayerPosInPersistentDungeonOp& ResetPlayerPosInPersistentDungeonOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResetPlayerPosInPersistentDungeonOp* ResetPlayerPosInPersistentDungeonOp::New(::google::protobuf::Arena* arena) const {
  ResetPlayerPosInPersistentDungeonOp* n = new ResetPlayerPosInPersistentDungeonOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResetPlayerPosInPersistentDungeonOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ResetPlayerPosInPersistentDungeonOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scene_id_ = 0u;
  _internal_metadata_.Clear();
}

bool ResetPlayerPosInPersistentDungeonOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ResetPlayerPosInPersistentDungeonOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ResetPlayerPosInPersistentDungeonOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ResetPlayerPosInPersistentDungeonOp)
  return false;
#undef DO_
}

void ResetPlayerPosInPersistentDungeonOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ResetPlayerPosInPersistentDungeonOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ResetPlayerPosInPersistentDungeonOp)
}

::google::protobuf::uint8* ResetPlayerPosInPersistentDungeonOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ResetPlayerPosInPersistentDungeonOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ResetPlayerPosInPersistentDungeonOp)
  return target;
}

size_t ResetPlayerPosInPersistentDungeonOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ResetPlayerPosInPersistentDungeonOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResetPlayerPosInPersistentDungeonOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ResetPlayerPosInPersistentDungeonOp)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetPlayerPosInPersistentDungeonOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResetPlayerPosInPersistentDungeonOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ResetPlayerPosInPersistentDungeonOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ResetPlayerPosInPersistentDungeonOp)
    MergeFrom(*source);
  }
}

void ResetPlayerPosInPersistentDungeonOp::MergeFrom(const ResetPlayerPosInPersistentDungeonOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ResetPlayerPosInPersistentDungeonOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void ResetPlayerPosInPersistentDungeonOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ResetPlayerPosInPersistentDungeonOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetPlayerPosInPersistentDungeonOp::CopyFrom(const ResetPlayerPosInPersistentDungeonOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ResetPlayerPosInPersistentDungeonOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetPlayerPosInPersistentDungeonOp::IsInitialized() const {
  return true;
}

void ResetPlayerPosInPersistentDungeonOp::Swap(ResetPlayerPosInPersistentDungeonOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResetPlayerPosInPersistentDungeonOp::InternalSwap(ResetPlayerPosInPersistentDungeonOp* other) {
  using std::swap;
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResetPlayerPosInPersistentDungeonOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResetPlayerPosInPersistentDungeonOp

// uint32 scene_id = 1;
void ResetPlayerPosInPersistentDungeonOp::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 ResetPlayerPosInPersistentDungeonOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ResetPlayerPosInPersistentDungeonOp.scene_id)
  return scene_id_;
}
void ResetPlayerPosInPersistentDungeonOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ResetPlayerPosInPersistentDungeonOp.scene_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LevelTagChangeOp::kLevelTagIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LevelTagChangeOp::LevelTagChangeOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.LevelTagChangeOp)
}
LevelTagChangeOp::LevelTagChangeOp(const LevelTagChangeOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  level_tag_id_ = from.level_tag_id_;
  // @@protoc_insertion_point(copy_constructor:proto.LevelTagChangeOp)
}

void LevelTagChangeOp::SharedCtor() {
  level_tag_id_ = 0u;
  _cached_size_ = 0;
}

LevelTagChangeOp::~LevelTagChangeOp() {
  // @@protoc_insertion_point(destructor:proto.LevelTagChangeOp)
  SharedDtor();
}

void LevelTagChangeOp::SharedDtor() {
}

void LevelTagChangeOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LevelTagChangeOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LevelTagChangeOp& LevelTagChangeOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

LevelTagChangeOp* LevelTagChangeOp::New(::google::protobuf::Arena* arena) const {
  LevelTagChangeOp* n = new LevelTagChangeOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LevelTagChangeOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.LevelTagChangeOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  level_tag_id_ = 0u;
  _internal_metadata_.Clear();
}

bool LevelTagChangeOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.LevelTagChangeOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 level_tag_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_tag_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.LevelTagChangeOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.LevelTagChangeOp)
  return false;
#undef DO_
}

void LevelTagChangeOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.LevelTagChangeOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level_tag_id = 1;
  if (this->level_tag_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level_tag_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.LevelTagChangeOp)
}

::google::protobuf::uint8* LevelTagChangeOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.LevelTagChangeOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level_tag_id = 1;
  if (this->level_tag_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level_tag_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.LevelTagChangeOp)
  return target;
}

size_t LevelTagChangeOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.LevelTagChangeOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 level_tag_id = 1;
  if (this->level_tag_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level_tag_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LevelTagChangeOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.LevelTagChangeOp)
  GOOGLE_DCHECK_NE(&from, this);
  const LevelTagChangeOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LevelTagChangeOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.LevelTagChangeOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.LevelTagChangeOp)
    MergeFrom(*source);
  }
}

void LevelTagChangeOp::MergeFrom(const LevelTagChangeOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.LevelTagChangeOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.level_tag_id() != 0) {
    set_level_tag_id(from.level_tag_id());
  }
}

void LevelTagChangeOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.LevelTagChangeOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelTagChangeOp::CopyFrom(const LevelTagChangeOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.LevelTagChangeOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelTagChangeOp::IsInitialized() const {
  return true;
}

void LevelTagChangeOp::Swap(LevelTagChangeOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LevelTagChangeOp::InternalSwap(LevelTagChangeOp* other) {
  using std::swap;
  swap(level_tag_id_, other->level_tag_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LevelTagChangeOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LevelTagChangeOp

// uint32 level_tag_id = 1;
void LevelTagChangeOp::clear_level_tag_id() {
  level_tag_id_ = 0u;
}
::google::protobuf::uint32 LevelTagChangeOp::level_tag_id() const {
  // @@protoc_insertion_point(field_get:proto.LevelTagChangeOp.level_tag_id)
  return level_tag_id_;
}
void LevelTagChangeOp::set_level_tag_id(::google::protobuf::uint32 value) {
  
  level_tag_id_ = value;
  // @@protoc_insertion_point(field_set:proto.LevelTagChangeOp.level_tag_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResetPlayerWayPointInPersistentDungeonOp::kSceneIdFieldNumber;
const int ResetPlayerWayPointInPersistentDungeonOp::kWayPointIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResetPlayerWayPointInPersistentDungeonOp::ResetPlayerWayPointInPersistentDungeonOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ResetPlayerWayPointInPersistentDungeonOp)
}
ResetPlayerWayPointInPersistentDungeonOp::ResetPlayerWayPointInPersistentDungeonOp(const ResetPlayerWayPointInPersistentDungeonOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&way_point_id_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(way_point_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ResetPlayerWayPointInPersistentDungeonOp)
}

void ResetPlayerWayPointInPersistentDungeonOp::SharedCtor() {
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&way_point_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(way_point_id_));
  _cached_size_ = 0;
}

ResetPlayerWayPointInPersistentDungeonOp::~ResetPlayerWayPointInPersistentDungeonOp() {
  // @@protoc_insertion_point(destructor:proto.ResetPlayerWayPointInPersistentDungeonOp)
  SharedDtor();
}

void ResetPlayerWayPointInPersistentDungeonOp::SharedDtor() {
}

void ResetPlayerWayPointInPersistentDungeonOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResetPlayerWayPointInPersistentDungeonOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResetPlayerWayPointInPersistentDungeonOp& ResetPlayerWayPointInPersistentDungeonOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResetPlayerWayPointInPersistentDungeonOp* ResetPlayerWayPointInPersistentDungeonOp::New(::google::protobuf::Arena* arena) const {
  ResetPlayerWayPointInPersistentDungeonOp* n = new ResetPlayerWayPointInPersistentDungeonOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResetPlayerWayPointInPersistentDungeonOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ResetPlayerWayPointInPersistentDungeonOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&way_point_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(way_point_id_));
  _internal_metadata_.Clear();
}

bool ResetPlayerWayPointInPersistentDungeonOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ResetPlayerWayPointInPersistentDungeonOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 way_point_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &way_point_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ResetPlayerWayPointInPersistentDungeonOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ResetPlayerWayPointInPersistentDungeonOp)
  return false;
#undef DO_
}

void ResetPlayerWayPointInPersistentDungeonOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ResetPlayerWayPointInPersistentDungeonOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // uint32 way_point_id = 2;
  if (this->way_point_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->way_point_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ResetPlayerWayPointInPersistentDungeonOp)
}

::google::protobuf::uint8* ResetPlayerWayPointInPersistentDungeonOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ResetPlayerWayPointInPersistentDungeonOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // uint32 way_point_id = 2;
  if (this->way_point_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->way_point_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ResetPlayerWayPointInPersistentDungeonOp)
  return target;
}

size_t ResetPlayerWayPointInPersistentDungeonOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ResetPlayerWayPointInPersistentDungeonOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 way_point_id = 2;
  if (this->way_point_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->way_point_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResetPlayerWayPointInPersistentDungeonOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ResetPlayerWayPointInPersistentDungeonOp)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetPlayerWayPointInPersistentDungeonOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResetPlayerWayPointInPersistentDungeonOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ResetPlayerWayPointInPersistentDungeonOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ResetPlayerWayPointInPersistentDungeonOp)
    MergeFrom(*source);
  }
}

void ResetPlayerWayPointInPersistentDungeonOp::MergeFrom(const ResetPlayerWayPointInPersistentDungeonOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ResetPlayerWayPointInPersistentDungeonOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.way_point_id() != 0) {
    set_way_point_id(from.way_point_id());
  }
}

void ResetPlayerWayPointInPersistentDungeonOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ResetPlayerWayPointInPersistentDungeonOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetPlayerWayPointInPersistentDungeonOp::CopyFrom(const ResetPlayerWayPointInPersistentDungeonOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ResetPlayerWayPointInPersistentDungeonOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetPlayerWayPointInPersistentDungeonOp::IsInitialized() const {
  return true;
}

void ResetPlayerWayPointInPersistentDungeonOp::Swap(ResetPlayerWayPointInPersistentDungeonOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResetPlayerWayPointInPersistentDungeonOp::InternalSwap(ResetPlayerWayPointInPersistentDungeonOp* other) {
  using std::swap;
  swap(scene_id_, other->scene_id_);
  swap(way_point_id_, other->way_point_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResetPlayerWayPointInPersistentDungeonOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResetPlayerWayPointInPersistentDungeonOp

// uint32 scene_id = 1;
void ResetPlayerWayPointInPersistentDungeonOp::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 ResetPlayerWayPointInPersistentDungeonOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ResetPlayerWayPointInPersistentDungeonOp.scene_id)
  return scene_id_;
}
void ResetPlayerWayPointInPersistentDungeonOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ResetPlayerWayPointInPersistentDungeonOp.scene_id)
}

// uint32 way_point_id = 2;
void ResetPlayerWayPointInPersistentDungeonOp::clear_way_point_id() {
  way_point_id_ = 0u;
}
::google::protobuf::uint32 ResetPlayerWayPointInPersistentDungeonOp::way_point_id() const {
  // @@protoc_insertion_point(field_get:proto.ResetPlayerWayPointInPersistentDungeonOp.way_point_id)
  return way_point_id_;
}
void ResetPlayerWayPointInPersistentDungeonOp::set_way_point_id(::google::protobuf::uint32 value) {
  
  way_point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ResetPlayerWayPointInPersistentDungeonOp.way_point_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExhibitionSetOp::kExhibitionIdFieldNumber;
const int ExhibitionSetOp::kAccumulableValFieldNumber;
const int ExhibitionSetOp::kReplaceableValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExhibitionSetOp::ExhibitionSetOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ExhibitionSetOp)
}
ExhibitionSetOp::ExhibitionSetOp(const ExhibitionSetOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  exhibition_id_ = from.exhibition_id_;
  clear_has_optional_accumulable_val();
  switch (from.optional_accumulable_val_case()) {
    case kAccumulableVal: {
      set_accumulable_val(from.accumulable_val());
      break;
    }
    case OPTIONAL_ACCUMULABLE_VAL_NOT_SET: {
      break;
    }
  }
  clear_has_optional_replaceable_val();
  switch (from.optional_replaceable_val_case()) {
    case kReplaceableVal: {
      set_replaceable_val(from.replaceable_val());
      break;
    }
    case OPTIONAL_REPLACEABLE_VAL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.ExhibitionSetOp)
}

void ExhibitionSetOp::SharedCtor() {
  exhibition_id_ = 0u;
  clear_has_optional_accumulable_val();
  clear_has_optional_replaceable_val();
  _cached_size_ = 0;
}

ExhibitionSetOp::~ExhibitionSetOp() {
  // @@protoc_insertion_point(destructor:proto.ExhibitionSetOp)
  SharedDtor();
}

void ExhibitionSetOp::SharedDtor() {
  if (has_optional_accumulable_val()) {
    clear_optional_accumulable_val();
  }
  if (has_optional_replaceable_val()) {
    clear_optional_replaceable_val();
  }
}

void ExhibitionSetOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExhibitionSetOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExhibitionSetOp& ExhibitionSetOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExhibitionSetOp* ExhibitionSetOp::New(::google::protobuf::Arena* arena) const {
  ExhibitionSetOp* n = new ExhibitionSetOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExhibitionSetOp::clear_optional_accumulable_val() {
// @@protoc_insertion_point(one_of_clear_start:proto.ExhibitionSetOp)
  switch (optional_accumulable_val_case()) {
    case kAccumulableVal: {
      // No need to clear
      break;
    }
    case OPTIONAL_ACCUMULABLE_VAL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OPTIONAL_ACCUMULABLE_VAL_NOT_SET;
}

void ExhibitionSetOp::clear_optional_replaceable_val() {
// @@protoc_insertion_point(one_of_clear_start:proto.ExhibitionSetOp)
  switch (optional_replaceable_val_case()) {
    case kReplaceableVal: {
      // No need to clear
      break;
    }
    case OPTIONAL_REPLACEABLE_VAL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = OPTIONAL_REPLACEABLE_VAL_NOT_SET;
}


void ExhibitionSetOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ExhibitionSetOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exhibition_id_ = 0u;
  clear_optional_accumulable_val();
  clear_optional_replaceable_val();
  _internal_metadata_.Clear();
}

bool ExhibitionSetOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ExhibitionSetOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 exhibition_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exhibition_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 accumulable_val = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_optional_accumulable_val();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &optional_accumulable_val_.accumulable_val_)));
          set_has_accumulable_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 replaceable_val = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_optional_replaceable_val();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &optional_replaceable_val_.replaceable_val_)));
          set_has_replaceable_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ExhibitionSetOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ExhibitionSetOp)
  return false;
#undef DO_
}

void ExhibitionSetOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ExhibitionSetOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 exhibition_id = 1;
  if (this->exhibition_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->exhibition_id(), output);
  }

  // uint32 accumulable_val = 2;
  if (has_accumulable_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->accumulable_val(), output);
  }

  // uint32 replaceable_val = 3;
  if (has_replaceable_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->replaceable_val(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ExhibitionSetOp)
}

::google::protobuf::uint8* ExhibitionSetOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ExhibitionSetOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 exhibition_id = 1;
  if (this->exhibition_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->exhibition_id(), target);
  }

  // uint32 accumulable_val = 2;
  if (has_accumulable_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->accumulable_val(), target);
  }

  // uint32 replaceable_val = 3;
  if (has_replaceable_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->replaceable_val(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ExhibitionSetOp)
  return target;
}

size_t ExhibitionSetOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ExhibitionSetOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 exhibition_id = 1;
  if (this->exhibition_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exhibition_id());
  }

  switch (optional_accumulable_val_case()) {
    // uint32 accumulable_val = 2;
    case kAccumulableVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accumulable_val());
      break;
    }
    case OPTIONAL_ACCUMULABLE_VAL_NOT_SET: {
      break;
    }
  }
  switch (optional_replaceable_val_case()) {
    // uint32 replaceable_val = 3;
    case kReplaceableVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->replaceable_val());
      break;
    }
    case OPTIONAL_REPLACEABLE_VAL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExhibitionSetOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ExhibitionSetOp)
  GOOGLE_DCHECK_NE(&from, this);
  const ExhibitionSetOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExhibitionSetOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ExhibitionSetOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ExhibitionSetOp)
    MergeFrom(*source);
  }
}

void ExhibitionSetOp::MergeFrom(const ExhibitionSetOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ExhibitionSetOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.exhibition_id() != 0) {
    set_exhibition_id(from.exhibition_id());
  }
  switch (from.optional_accumulable_val_case()) {
    case kAccumulableVal: {
      set_accumulable_val(from.accumulable_val());
      break;
    }
    case OPTIONAL_ACCUMULABLE_VAL_NOT_SET: {
      break;
    }
  }
  switch (from.optional_replaceable_val_case()) {
    case kReplaceableVal: {
      set_replaceable_val(from.replaceable_val());
      break;
    }
    case OPTIONAL_REPLACEABLE_VAL_NOT_SET: {
      break;
    }
  }
}

void ExhibitionSetOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ExhibitionSetOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExhibitionSetOp::CopyFrom(const ExhibitionSetOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ExhibitionSetOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExhibitionSetOp::IsInitialized() const {
  return true;
}

void ExhibitionSetOp::Swap(ExhibitionSetOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExhibitionSetOp::InternalSwap(ExhibitionSetOp* other) {
  using std::swap;
  swap(exhibition_id_, other->exhibition_id_);
  swap(optional_accumulable_val_, other->optional_accumulable_val_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(optional_replaceable_val_, other->optional_replaceable_val_);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExhibitionSetOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExhibitionSetOp

// uint32 exhibition_id = 1;
void ExhibitionSetOp::clear_exhibition_id() {
  exhibition_id_ = 0u;
}
::google::protobuf::uint32 ExhibitionSetOp::exhibition_id() const {
  // @@protoc_insertion_point(field_get:proto.ExhibitionSetOp.exhibition_id)
  return exhibition_id_;
}
void ExhibitionSetOp::set_exhibition_id(::google::protobuf::uint32 value) {
  
  exhibition_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ExhibitionSetOp.exhibition_id)
}

// uint32 accumulable_val = 2;
bool ExhibitionSetOp::has_accumulable_val() const {
  return optional_accumulable_val_case() == kAccumulableVal;
}
void ExhibitionSetOp::set_has_accumulable_val() {
  _oneof_case_[0] = kAccumulableVal;
}
void ExhibitionSetOp::clear_accumulable_val() {
  if (has_accumulable_val()) {
    optional_accumulable_val_.accumulable_val_ = 0u;
    clear_has_optional_accumulable_val();
  }
}
::google::protobuf::uint32 ExhibitionSetOp::accumulable_val() const {
  // @@protoc_insertion_point(field_get:proto.ExhibitionSetOp.accumulable_val)
  if (has_accumulable_val()) {
    return optional_accumulable_val_.accumulable_val_;
  }
  return 0u;
}
void ExhibitionSetOp::set_accumulable_val(::google::protobuf::uint32 value) {
  if (!has_accumulable_val()) {
    clear_optional_accumulable_val();
    set_has_accumulable_val();
  }
  optional_accumulable_val_.accumulable_val_ = value;
  // @@protoc_insertion_point(field_set:proto.ExhibitionSetOp.accumulable_val)
}

// uint32 replaceable_val = 3;
bool ExhibitionSetOp::has_replaceable_val() const {
  return optional_replaceable_val_case() == kReplaceableVal;
}
void ExhibitionSetOp::set_has_replaceable_val() {
  _oneof_case_[1] = kReplaceableVal;
}
void ExhibitionSetOp::clear_replaceable_val() {
  if (has_replaceable_val()) {
    optional_replaceable_val_.replaceable_val_ = 0u;
    clear_has_optional_replaceable_val();
  }
}
::google::protobuf::uint32 ExhibitionSetOp::replaceable_val() const {
  // @@protoc_insertion_point(field_get:proto.ExhibitionSetOp.replaceable_val)
  if (has_replaceable_val()) {
    return optional_replaceable_val_.replaceable_val_;
  }
  return 0u;
}
void ExhibitionSetOp::set_replaceable_val(::google::protobuf::uint32 value) {
  if (!has_replaceable_val()) {
    clear_optional_replaceable_val();
    set_has_replaceable_val();
  }
  optional_replaceable_val_.replaceable_val_ = value;
  // @@protoc_insertion_point(field_set:proto.ExhibitionSetOp.replaceable_val)
}

bool ExhibitionSetOp::has_optional_accumulable_val() const {
  return optional_accumulable_val_case() != OPTIONAL_ACCUMULABLE_VAL_NOT_SET;
}
void ExhibitionSetOp::clear_has_optional_accumulable_val() {
  _oneof_case_[0] = OPTIONAL_ACCUMULABLE_VAL_NOT_SET;
}
bool ExhibitionSetOp::has_optional_replaceable_val() const {
  return optional_replaceable_val_case() != OPTIONAL_REPLACEABLE_VAL_NOT_SET;
}
void ExhibitionSetOp::clear_has_optional_replaceable_val() {
  _oneof_case_[1] = OPTIONAL_REPLACEABLE_VAL_NOT_SET;
}
ExhibitionSetOp::OptionalAccumulableValCase ExhibitionSetOp::optional_accumulable_val_case() const {
  return ExhibitionSetOp::OptionalAccumulableValCase(_oneof_case_[0]);
}
ExhibitionSetOp::OptionalReplaceableValCase ExhibitionSetOp::optional_replaceable_val_case() const {
  return ExhibitionSetOp::OptionalReplaceableValCase(_oneof_case_[1]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetAvatarExtraPropOp::kAvatarIdFieldNumber;
const int SetAvatarExtraPropOp::kExtraPropIdFieldNumber;
const int SetAvatarExtraPropOp::kExtraPropCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetAvatarExtraPropOp::SetAvatarExtraPropOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetAvatarExtraPropOp)
}
SetAvatarExtraPropOp::SetAvatarExtraPropOp(const SetAvatarExtraPropOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&avatar_id_, &from.avatar_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&extra_prop_count_) -
    reinterpret_cast<char*>(&avatar_id_)) + sizeof(extra_prop_count_));
  // @@protoc_insertion_point(copy_constructor:proto.SetAvatarExtraPropOp)
}

void SetAvatarExtraPropOp::SharedCtor() {
  ::memset(&avatar_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&extra_prop_count_) -
      reinterpret_cast<char*>(&avatar_id_)) + sizeof(extra_prop_count_));
  _cached_size_ = 0;
}

SetAvatarExtraPropOp::~SetAvatarExtraPropOp() {
  // @@protoc_insertion_point(destructor:proto.SetAvatarExtraPropOp)
  SharedDtor();
}

void SetAvatarExtraPropOp::SharedDtor() {
}

void SetAvatarExtraPropOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetAvatarExtraPropOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetAvatarExtraPropOp& SetAvatarExtraPropOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetAvatarExtraPropOp* SetAvatarExtraPropOp::New(::google::protobuf::Arena* arena) const {
  SetAvatarExtraPropOp* n = new SetAvatarExtraPropOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetAvatarExtraPropOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetAvatarExtraPropOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&avatar_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&extra_prop_count_) -
      reinterpret_cast<char*>(&avatar_id_)) + sizeof(extra_prop_count_));
  _internal_metadata_.Clear();
}

bool SetAvatarExtraPropOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetAvatarExtraPropOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 avatar_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 extra_prop_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &extra_prop_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 extra_prop_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &extra_prop_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetAvatarExtraPropOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetAvatarExtraPropOp)
  return false;
#undef DO_
}

void SetAvatarExtraPropOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetAvatarExtraPropOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->avatar_id(), output);
  }

  // uint32 extra_prop_id = 2;
  if (this->extra_prop_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->extra_prop_id(), output);
  }

  // uint32 extra_prop_count = 3;
  if (this->extra_prop_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->extra_prop_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetAvatarExtraPropOp)
}

::google::protobuf::uint8* SetAvatarExtraPropOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetAvatarExtraPropOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->avatar_id(), target);
  }

  // uint32 extra_prop_id = 2;
  if (this->extra_prop_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->extra_prop_id(), target);
  }

  // uint32 extra_prop_count = 3;
  if (this->extra_prop_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->extra_prop_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetAvatarExtraPropOp)
  return target;
}

size_t SetAvatarExtraPropOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetAvatarExtraPropOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_id());
  }

  // uint32 extra_prop_id = 2;
  if (this->extra_prop_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->extra_prop_id());
  }

  // uint32 extra_prop_count = 3;
  if (this->extra_prop_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->extra_prop_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetAvatarExtraPropOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetAvatarExtraPropOp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetAvatarExtraPropOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetAvatarExtraPropOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetAvatarExtraPropOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetAvatarExtraPropOp)
    MergeFrom(*source);
  }
}

void SetAvatarExtraPropOp::MergeFrom(const SetAvatarExtraPropOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetAvatarExtraPropOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_id() != 0) {
    set_avatar_id(from.avatar_id());
  }
  if (from.extra_prop_id() != 0) {
    set_extra_prop_id(from.extra_prop_id());
  }
  if (from.extra_prop_count() != 0) {
    set_extra_prop_count(from.extra_prop_count());
  }
}

void SetAvatarExtraPropOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetAvatarExtraPropOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetAvatarExtraPropOp::CopyFrom(const SetAvatarExtraPropOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetAvatarExtraPropOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAvatarExtraPropOp::IsInitialized() const {
  return true;
}

void SetAvatarExtraPropOp::Swap(SetAvatarExtraPropOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetAvatarExtraPropOp::InternalSwap(SetAvatarExtraPropOp* other) {
  using std::swap;
  swap(avatar_id_, other->avatar_id_);
  swap(extra_prop_id_, other->extra_prop_id_);
  swap(extra_prop_count_, other->extra_prop_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetAvatarExtraPropOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetAvatarExtraPropOp

// uint32 avatar_id = 1;
void SetAvatarExtraPropOp::clear_avatar_id() {
  avatar_id_ = 0u;
}
::google::protobuf::uint32 SetAvatarExtraPropOp::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.SetAvatarExtraPropOp.avatar_id)
  return avatar_id_;
}
void SetAvatarExtraPropOp::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetAvatarExtraPropOp.avatar_id)
}

// uint32 extra_prop_id = 2;
void SetAvatarExtraPropOp::clear_extra_prop_id() {
  extra_prop_id_ = 0u;
}
::google::protobuf::uint32 SetAvatarExtraPropOp::extra_prop_id() const {
  // @@protoc_insertion_point(field_get:proto.SetAvatarExtraPropOp.extra_prop_id)
  return extra_prop_id_;
}
void SetAvatarExtraPropOp::set_extra_prop_id(::google::protobuf::uint32 value) {
  
  extra_prop_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetAvatarExtraPropOp.extra_prop_id)
}

// uint32 extra_prop_count = 3;
void SetAvatarExtraPropOp::clear_extra_prop_count() {
  extra_prop_count_ = 0u;
}
::google::protobuf::uint32 SetAvatarExtraPropOp::extra_prop_count() const {
  // @@protoc_insertion_point(field_get:proto.SetAvatarExtraPropOp.extra_prop_count)
  return extra_prop_count_;
}
void SetAvatarExtraPropOp::set_extra_prop_count(::google::protobuf::uint32 value) {
  
  extra_prop_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SetAvatarExtraPropOp.extra_prop_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddItemWithLimitOp::kAddItemOpFieldNumber;
const int AddItemWithLimitOp::kMaxItemCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddItemWithLimitOp::AddItemWithLimitOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddItemWithLimitOp)
}
AddItemWithLimitOp::AddItemWithLimitOp(const AddItemWithLimitOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_add_item_op()) {
    add_item_op_ = new ::proto::AddItemOp(*from.add_item_op_);
  } else {
    add_item_op_ = NULL;
  }
  max_item_count_ = from.max_item_count_;
  // @@protoc_insertion_point(copy_constructor:proto.AddItemWithLimitOp)
}

void AddItemWithLimitOp::SharedCtor() {
  ::memset(&add_item_op_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_item_count_) -
      reinterpret_cast<char*>(&add_item_op_)) + sizeof(max_item_count_));
  _cached_size_ = 0;
}

AddItemWithLimitOp::~AddItemWithLimitOp() {
  // @@protoc_insertion_point(destructor:proto.AddItemWithLimitOp)
  SharedDtor();
}

void AddItemWithLimitOp::SharedDtor() {
  if (this != internal_default_instance()) delete add_item_op_;
}

void AddItemWithLimitOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddItemWithLimitOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddItemWithLimitOp& AddItemWithLimitOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddItemWithLimitOp* AddItemWithLimitOp::New(::google::protobuf::Arena* arena) const {
  AddItemWithLimitOp* n = new AddItemWithLimitOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddItemWithLimitOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddItemWithLimitOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && add_item_op_ != NULL) {
    delete add_item_op_;
  }
  add_item_op_ = NULL;
  max_item_count_ = 0u;
  _internal_metadata_.Clear();
}

bool AddItemWithLimitOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddItemWithLimitOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.AddItemOp add_item_op = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_add_item_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_item_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_item_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddItemWithLimitOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddItemWithLimitOp)
  return false;
#undef DO_
}

void AddItemWithLimitOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddItemWithLimitOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.AddItemOp add_item_op = 1;
  if (this->has_add_item_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->add_item_op_, output);
  }

  // uint32 max_item_count = 2;
  if (this->max_item_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->max_item_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddItemWithLimitOp)
}

::google::protobuf::uint8* AddItemWithLimitOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddItemWithLimitOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.AddItemOp add_item_op = 1;
  if (this->has_add_item_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->add_item_op_, deterministic, target);
  }

  // uint32 max_item_count = 2;
  if (this->max_item_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->max_item_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddItemWithLimitOp)
  return target;
}

size_t AddItemWithLimitOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddItemWithLimitOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.AddItemOp add_item_op = 1;
  if (this->has_add_item_op()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->add_item_op_);
  }

  // uint32 max_item_count = 2;
  if (this->max_item_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_item_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddItemWithLimitOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddItemWithLimitOp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddItemWithLimitOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddItemWithLimitOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddItemWithLimitOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddItemWithLimitOp)
    MergeFrom(*source);
  }
}

void AddItemWithLimitOp::MergeFrom(const AddItemWithLimitOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddItemWithLimitOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_add_item_op()) {
    mutable_add_item_op()->::proto::AddItemOp::MergeFrom(from.add_item_op());
  }
  if (from.max_item_count() != 0) {
    set_max_item_count(from.max_item_count());
  }
}

void AddItemWithLimitOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddItemWithLimitOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddItemWithLimitOp::CopyFrom(const AddItemWithLimitOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddItemWithLimitOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddItemWithLimitOp::IsInitialized() const {
  return true;
}

void AddItemWithLimitOp::Swap(AddItemWithLimitOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddItemWithLimitOp::InternalSwap(AddItemWithLimitOp* other) {
  using std::swap;
  swap(add_item_op_, other->add_item_op_);
  swap(max_item_count_, other->max_item_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddItemWithLimitOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddItemWithLimitOp

// .proto.AddItemOp add_item_op = 1;
bool AddItemWithLimitOp::has_add_item_op() const {
  return this != internal_default_instance() && add_item_op_ != NULL;
}
void AddItemWithLimitOp::clear_add_item_op() {
  if (GetArenaNoVirtual() == NULL && add_item_op_ != NULL) delete add_item_op_;
  add_item_op_ = NULL;
}
const ::proto::AddItemOp& AddItemWithLimitOp::add_item_op() const {
  const ::proto::AddItemOp* p = add_item_op_;
  // @@protoc_insertion_point(field_get:proto.AddItemWithLimitOp.add_item_op)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AddItemOp*>(
      &::proto::_AddItemOp_default_instance_);
}
::proto::AddItemOp* AddItemWithLimitOp::mutable_add_item_op() {
  
  if (add_item_op_ == NULL) {
    add_item_op_ = new ::proto::AddItemOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.AddItemWithLimitOp.add_item_op)
  return add_item_op_;
}
::proto::AddItemOp* AddItemWithLimitOp::release_add_item_op() {
  // @@protoc_insertion_point(field_release:proto.AddItemWithLimitOp.add_item_op)
  
  ::proto::AddItemOp* temp = add_item_op_;
  add_item_op_ = NULL;
  return temp;
}
void AddItemWithLimitOp::set_allocated_add_item_op(::proto::AddItemOp* add_item_op) {
  delete add_item_op_;
  add_item_op_ = add_item_op;
  if (add_item_op) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AddItemWithLimitOp.add_item_op)
}

// uint32 max_item_count = 2;
void AddItemWithLimitOp::clear_max_item_count() {
  max_item_count_ = 0u;
}
::google::protobuf::uint32 AddItemWithLimitOp::max_item_count() const {
  // @@protoc_insertion_point(field_get:proto.AddItemWithLimitOp.max_item_count)
  return max_item_count_;
}
void AddItemWithLimitOp::set_max_item_count(::google::protobuf::uint32 value) {
  
  max_item_count_ = value;
  // @@protoc_insertion_point(field_set:proto.AddItemWithLimitOp.max_item_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetGadgetChainLevelOp::kGadgetchainIdFieldNumber;
const int SetGadgetChainLevelOp::kGadgetchainLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetGadgetChainLevelOp::SetGadgetChainLevelOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetGadgetChainLevelOp)
}
SetGadgetChainLevelOp::SetGadgetChainLevelOp(const SetGadgetChainLevelOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gadgetchain_id_, &from.gadgetchain_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&gadgetchain_level_) -
    reinterpret_cast<char*>(&gadgetchain_id_)) + sizeof(gadgetchain_level_));
  // @@protoc_insertion_point(copy_constructor:proto.SetGadgetChainLevelOp)
}

void SetGadgetChainLevelOp::SharedCtor() {
  ::memset(&gadgetchain_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gadgetchain_level_) -
      reinterpret_cast<char*>(&gadgetchain_id_)) + sizeof(gadgetchain_level_));
  _cached_size_ = 0;
}

SetGadgetChainLevelOp::~SetGadgetChainLevelOp() {
  // @@protoc_insertion_point(destructor:proto.SetGadgetChainLevelOp)
  SharedDtor();
}

void SetGadgetChainLevelOp::SharedDtor() {
}

void SetGadgetChainLevelOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetGadgetChainLevelOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetGadgetChainLevelOp& SetGadgetChainLevelOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetGadgetChainLevelOp* SetGadgetChainLevelOp::New(::google::protobuf::Arena* arena) const {
  SetGadgetChainLevelOp* n = new SetGadgetChainLevelOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetGadgetChainLevelOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetGadgetChainLevelOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gadgetchain_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gadgetchain_level_) -
      reinterpret_cast<char*>(&gadgetchain_id_)) + sizeof(gadgetchain_level_));
  _internal_metadata_.Clear();
}

bool SetGadgetChainLevelOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetGadgetChainLevelOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 gadgetchain_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadgetchain_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadgetchain_level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadgetchain_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetGadgetChainLevelOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetGadgetChainLevelOp)
  return false;
#undef DO_
}

void SetGadgetChainLevelOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetGadgetChainLevelOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gadgetchain_id = 1;
  if (this->gadgetchain_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gadgetchain_id(), output);
  }

  // uint32 gadgetchain_level = 2;
  if (this->gadgetchain_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gadgetchain_level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetGadgetChainLevelOp)
}

::google::protobuf::uint8* SetGadgetChainLevelOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetGadgetChainLevelOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gadgetchain_id = 1;
  if (this->gadgetchain_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gadgetchain_id(), target);
  }

  // uint32 gadgetchain_level = 2;
  if (this->gadgetchain_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gadgetchain_level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetGadgetChainLevelOp)
  return target;
}

size_t SetGadgetChainLevelOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetGadgetChainLevelOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 gadgetchain_id = 1;
  if (this->gadgetchain_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadgetchain_id());
  }

  // uint32 gadgetchain_level = 2;
  if (this->gadgetchain_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadgetchain_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetGadgetChainLevelOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetGadgetChainLevelOp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetGadgetChainLevelOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetGadgetChainLevelOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetGadgetChainLevelOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetGadgetChainLevelOp)
    MergeFrom(*source);
  }
}

void SetGadgetChainLevelOp::MergeFrom(const SetGadgetChainLevelOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetGadgetChainLevelOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gadgetchain_id() != 0) {
    set_gadgetchain_id(from.gadgetchain_id());
  }
  if (from.gadgetchain_level() != 0) {
    set_gadgetchain_level(from.gadgetchain_level());
  }
}

void SetGadgetChainLevelOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetGadgetChainLevelOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetGadgetChainLevelOp::CopyFrom(const SetGadgetChainLevelOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetGadgetChainLevelOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGadgetChainLevelOp::IsInitialized() const {
  return true;
}

void SetGadgetChainLevelOp::Swap(SetGadgetChainLevelOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetGadgetChainLevelOp::InternalSwap(SetGadgetChainLevelOp* other) {
  using std::swap;
  swap(gadgetchain_id_, other->gadgetchain_id_);
  swap(gadgetchain_level_, other->gadgetchain_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetGadgetChainLevelOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetGadgetChainLevelOp

// uint32 gadgetchain_id = 1;
void SetGadgetChainLevelOp::clear_gadgetchain_id() {
  gadgetchain_id_ = 0u;
}
::google::protobuf::uint32 SetGadgetChainLevelOp::gadgetchain_id() const {
  // @@protoc_insertion_point(field_get:proto.SetGadgetChainLevelOp.gadgetchain_id)
  return gadgetchain_id_;
}
void SetGadgetChainLevelOp::set_gadgetchain_id(::google::protobuf::uint32 value) {
  
  gadgetchain_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetGadgetChainLevelOp.gadgetchain_id)
}

// uint32 gadgetchain_level = 2;
void SetGadgetChainLevelOp::clear_gadgetchain_level() {
  gadgetchain_level_ = 0u;
}
::google::protobuf::uint32 SetGadgetChainLevelOp::gadgetchain_level() const {
  // @@protoc_insertion_point(field_get:proto.SetGadgetChainLevelOp.gadgetchain_level)
  return gadgetchain_level_;
}
void SetGadgetChainLevelOp::set_gadgetchain_level(::google::protobuf::uint32 value) {
  
  gadgetchain_level_ = value;
  // @@protoc_insertion_point(field_set:proto.SetGadgetChainLevelOp.gadgetchain_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetDailyTaskVarOp::kTaskIdFieldNumber;
const int SetDailyTaskVarOp::kIndexFieldNumber;
const int SetDailyTaskVarOp::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetDailyTaskVarOp::SetDailyTaskVarOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetDailyTaskVarOp)
}
SetDailyTaskVarOp::SetDailyTaskVarOp(const SetDailyTaskVarOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&task_id_, &from.task_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&task_id_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:proto.SetDailyTaskVarOp)
}

void SetDailyTaskVarOp::SharedCtor() {
  ::memset(&task_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&task_id_)) + sizeof(value_));
  _cached_size_ = 0;
}

SetDailyTaskVarOp::~SetDailyTaskVarOp() {
  // @@protoc_insertion_point(destructor:proto.SetDailyTaskVarOp)
  SharedDtor();
}

void SetDailyTaskVarOp::SharedDtor() {
}

void SetDailyTaskVarOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetDailyTaskVarOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetDailyTaskVarOp& SetDailyTaskVarOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetDailyTaskVarOp* SetDailyTaskVarOp::New(::google::protobuf::Arena* arena) const {
  SetDailyTaskVarOp* n = new SetDailyTaskVarOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetDailyTaskVarOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetDailyTaskVarOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&task_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&task_id_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

bool SetDailyTaskVarOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetDailyTaskVarOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 task_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetDailyTaskVarOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetDailyTaskVarOp)
  return false;
#undef DO_
}

void SetDailyTaskVarOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetDailyTaskVarOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 task_id = 1;
  if (this->task_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->task_id(), output);
  }

  // uint32 index = 2;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->index(), output);
  }

  // int32 value = 3;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetDailyTaskVarOp)
}

::google::protobuf::uint8* SetDailyTaskVarOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetDailyTaskVarOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 task_id = 1;
  if (this->task_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->task_id(), target);
  }

  // uint32 index = 2;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->index(), target);
  }

  // int32 value = 3;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetDailyTaskVarOp)
  return target;
}

size_t SetDailyTaskVarOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetDailyTaskVarOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 task_id = 1;
  if (this->task_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->task_id());
  }

  // uint32 index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  // int32 value = 3;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetDailyTaskVarOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetDailyTaskVarOp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetDailyTaskVarOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetDailyTaskVarOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetDailyTaskVarOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetDailyTaskVarOp)
    MergeFrom(*source);
  }
}

void SetDailyTaskVarOp::MergeFrom(const SetDailyTaskVarOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetDailyTaskVarOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.task_id() != 0) {
    set_task_id(from.task_id());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void SetDailyTaskVarOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetDailyTaskVarOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetDailyTaskVarOp::CopyFrom(const SetDailyTaskVarOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetDailyTaskVarOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetDailyTaskVarOp::IsInitialized() const {
  return true;
}

void SetDailyTaskVarOp::Swap(SetDailyTaskVarOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetDailyTaskVarOp::InternalSwap(SetDailyTaskVarOp* other) {
  using std::swap;
  swap(task_id_, other->task_id_);
  swap(index_, other->index_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetDailyTaskVarOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetDailyTaskVarOp

// uint32 task_id = 1;
void SetDailyTaskVarOp::clear_task_id() {
  task_id_ = 0u;
}
::google::protobuf::uint32 SetDailyTaskVarOp::task_id() const {
  // @@protoc_insertion_point(field_get:proto.SetDailyTaskVarOp.task_id)
  return task_id_;
}
void SetDailyTaskVarOp::set_task_id(::google::protobuf::uint32 value) {
  
  task_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetDailyTaskVarOp.task_id)
}

// uint32 index = 2;
void SetDailyTaskVarOp::clear_index() {
  index_ = 0u;
}
::google::protobuf::uint32 SetDailyTaskVarOp::index() const {
  // @@protoc_insertion_point(field_get:proto.SetDailyTaskVarOp.index)
  return index_;
}
void SetDailyTaskVarOp::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.SetDailyTaskVarOp.index)
}

// int32 value = 3;
void SetDailyTaskVarOp::clear_value() {
  value_ = 0;
}
::google::protobuf::int32 SetDailyTaskVarOp::value() const {
  // @@protoc_insertion_point(field_get:proto.SetDailyTaskVarOp.value)
  return value_;
}
void SetDailyTaskVarOp::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.SetDailyTaskVarOp.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarRenameAuditResultOp::kRenameIdFieldNumber;
const int AvatarRenameAuditResultOp::kTargetNameFieldNumber;
const int AvatarRenameAuditResultOp::kIsSuccFieldNumber;
const int AvatarRenameAuditResultOp::kSourceTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarRenameAuditResultOp::AvatarRenameAuditResultOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarRenameAuditResultOp)
}
AvatarRenameAuditResultOp::AvatarRenameAuditResultOp(const AvatarRenameAuditResultOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_name().size() > 0) {
    target_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_name_);
  }
  ::memcpy(&rename_id_, &from.rename_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&source_type_) -
    reinterpret_cast<char*>(&rename_id_)) + sizeof(source_type_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarRenameAuditResultOp)
}

void AvatarRenameAuditResultOp::SharedCtor() {
  target_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rename_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&source_type_) -
      reinterpret_cast<char*>(&rename_id_)) + sizeof(source_type_));
  _cached_size_ = 0;
}

AvatarRenameAuditResultOp::~AvatarRenameAuditResultOp() {
  // @@protoc_insertion_point(destructor:proto.AvatarRenameAuditResultOp)
  SharedDtor();
}

void AvatarRenameAuditResultOp::SharedDtor() {
  target_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AvatarRenameAuditResultOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarRenameAuditResultOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarRenameAuditResultOp& AvatarRenameAuditResultOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarRenameAuditResultOp* AvatarRenameAuditResultOp::New(::google::protobuf::Arena* arena) const {
  AvatarRenameAuditResultOp* n = new AvatarRenameAuditResultOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarRenameAuditResultOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarRenameAuditResultOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rename_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&source_type_) -
      reinterpret_cast<char*>(&rename_id_)) + sizeof(source_type_));
  _internal_metadata_.Clear();
}

bool AvatarRenameAuditResultOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarRenameAuditResultOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 rename_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rename_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string target_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_name().data(), static_cast<int>(this->target_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AvatarRenameAuditResultOp.target_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_succ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_succ_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 source_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarRenameAuditResultOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarRenameAuditResultOp)
  return false;
#undef DO_
}

void AvatarRenameAuditResultOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarRenameAuditResultOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rename_id = 1;
  if (this->rename_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rename_id(), output);
  }

  // string target_name = 2;
  if (this->target_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_name().data(), static_cast<int>(this->target_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AvatarRenameAuditResultOp.target_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->target_name(), output);
  }

  // bool is_succ = 3;
  if (this->is_succ() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_succ(), output);
  }

  // uint32 source_type = 4;
  if (this->source_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->source_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarRenameAuditResultOp)
}

::google::protobuf::uint8* AvatarRenameAuditResultOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarRenameAuditResultOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rename_id = 1;
  if (this->rename_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rename_id(), target);
  }

  // string target_name = 2;
  if (this->target_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_name().data(), static_cast<int>(this->target_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AvatarRenameAuditResultOp.target_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->target_name(), target);
  }

  // bool is_succ = 3;
  if (this->is_succ() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_succ(), target);
  }

  // uint32 source_type = 4;
  if (this->source_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->source_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarRenameAuditResultOp)
  return target;
}

size_t AvatarRenameAuditResultOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarRenameAuditResultOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string target_name = 2;
  if (this->target_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_name());
  }

  // uint32 rename_id = 1;
  if (this->rename_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rename_id());
  }

  // bool is_succ = 3;
  if (this->is_succ() != 0) {
    total_size += 1 + 1;
  }

  // uint32 source_type = 4;
  if (this->source_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->source_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarRenameAuditResultOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarRenameAuditResultOp)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarRenameAuditResultOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarRenameAuditResultOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarRenameAuditResultOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarRenameAuditResultOp)
    MergeFrom(*source);
  }
}

void AvatarRenameAuditResultOp::MergeFrom(const AvatarRenameAuditResultOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarRenameAuditResultOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_name().size() > 0) {

    target_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_name_);
  }
  if (from.rename_id() != 0) {
    set_rename_id(from.rename_id());
  }
  if (from.is_succ() != 0) {
    set_is_succ(from.is_succ());
  }
  if (from.source_type() != 0) {
    set_source_type(from.source_type());
  }
}

void AvatarRenameAuditResultOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarRenameAuditResultOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarRenameAuditResultOp::CopyFrom(const AvatarRenameAuditResultOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarRenameAuditResultOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarRenameAuditResultOp::IsInitialized() const {
  return true;
}

void AvatarRenameAuditResultOp::Swap(AvatarRenameAuditResultOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarRenameAuditResultOp::InternalSwap(AvatarRenameAuditResultOp* other) {
  using std::swap;
  target_name_.Swap(&other->target_name_);
  swap(rename_id_, other->rename_id_);
  swap(is_succ_, other->is_succ_);
  swap(source_type_, other->source_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarRenameAuditResultOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarRenameAuditResultOp

// uint32 rename_id = 1;
void AvatarRenameAuditResultOp::clear_rename_id() {
  rename_id_ = 0u;
}
::google::protobuf::uint32 AvatarRenameAuditResultOp::rename_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarRenameAuditResultOp.rename_id)
  return rename_id_;
}
void AvatarRenameAuditResultOp::set_rename_id(::google::protobuf::uint32 value) {
  
  rename_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarRenameAuditResultOp.rename_id)
}

// string target_name = 2;
void AvatarRenameAuditResultOp::clear_target_name() {
  target_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AvatarRenameAuditResultOp::target_name() const {
  // @@protoc_insertion_point(field_get:proto.AvatarRenameAuditResultOp.target_name)
  return target_name_.GetNoArena();
}
void AvatarRenameAuditResultOp::set_target_name(const ::std::string& value) {
  
  target_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AvatarRenameAuditResultOp.target_name)
}
#if LANG_CXX11
void AvatarRenameAuditResultOp::set_target_name(::std::string&& value) {
  
  target_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AvatarRenameAuditResultOp.target_name)
}
#endif
void AvatarRenameAuditResultOp::set_target_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  target_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AvatarRenameAuditResultOp.target_name)
}
void AvatarRenameAuditResultOp::set_target_name(const char* value, size_t size) {
  
  target_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AvatarRenameAuditResultOp.target_name)
}
::std::string* AvatarRenameAuditResultOp::mutable_target_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.AvatarRenameAuditResultOp.target_name)
  return target_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AvatarRenameAuditResultOp::release_target_name() {
  // @@protoc_insertion_point(field_release:proto.AvatarRenameAuditResultOp.target_name)
  
  return target_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvatarRenameAuditResultOp::set_allocated_target_name(::std::string* target_name) {
  if (target_name != NULL) {
    
  } else {
    
  }
  target_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_name);
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarRenameAuditResultOp.target_name)
}

// bool is_succ = 3;
void AvatarRenameAuditResultOp::clear_is_succ() {
  is_succ_ = false;
}
bool AvatarRenameAuditResultOp::is_succ() const {
  // @@protoc_insertion_point(field_get:proto.AvatarRenameAuditResultOp.is_succ)
  return is_succ_;
}
void AvatarRenameAuditResultOp::set_is_succ(bool value) {
  
  is_succ_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarRenameAuditResultOp.is_succ)
}

// uint32 source_type = 4;
void AvatarRenameAuditResultOp::clear_source_type() {
  source_type_ = 0u;
}
::google::protobuf::uint32 AvatarRenameAuditResultOp::source_type() const {
  // @@protoc_insertion_point(field_get:proto.AvatarRenameAuditResultOp.source_type)
  return source_type_;
}
void AvatarRenameAuditResultOp::set_source_type(::google::protobuf::uint32 value) {
  
  source_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarRenameAuditResultOp.source_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResetAvatarRenameOp::kAvatarIdFieldNumber;
const int ResetAvatarRenameOp::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResetAvatarRenameOp::ResetAvatarRenameOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ResetAvatarRenameOp)
}
ResetAvatarRenameOp::ResetAvatarRenameOp(const ResetAvatarRenameOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&avatar_id_, &from.avatar_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&avatar_id_)) + sizeof(reason_));
  // @@protoc_insertion_point(copy_constructor:proto.ResetAvatarRenameOp)
}

void ResetAvatarRenameOp::SharedCtor() {
  ::memset(&avatar_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&avatar_id_)) + sizeof(reason_));
  _cached_size_ = 0;
}

ResetAvatarRenameOp::~ResetAvatarRenameOp() {
  // @@protoc_insertion_point(destructor:proto.ResetAvatarRenameOp)
  SharedDtor();
}

void ResetAvatarRenameOp::SharedDtor() {
}

void ResetAvatarRenameOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResetAvatarRenameOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResetAvatarRenameOp& ResetAvatarRenameOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResetAvatarRenameOp* ResetAvatarRenameOp::New(::google::protobuf::Arena* arena) const {
  ResetAvatarRenameOp* n = new ResetAvatarRenameOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResetAvatarRenameOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ResetAvatarRenameOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&avatar_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&avatar_id_)) + sizeof(reason_));
  _internal_metadata_.Clear();
}

bool ResetAvatarRenameOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ResetAvatarRenameOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 avatar_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ResetAvatarRenameOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ResetAvatarRenameOp)
  return false;
#undef DO_
}

void ResetAvatarRenameOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ResetAvatarRenameOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->avatar_id(), output);
  }

  // uint32 reason = 2;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ResetAvatarRenameOp)
}

::google::protobuf::uint8* ResetAvatarRenameOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ResetAvatarRenameOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->avatar_id(), target);
  }

  // uint32 reason = 2;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ResetAvatarRenameOp)
  return target;
}

size_t ResetAvatarRenameOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ResetAvatarRenameOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_id());
  }

  // uint32 reason = 2;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResetAvatarRenameOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ResetAvatarRenameOp)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetAvatarRenameOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResetAvatarRenameOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ResetAvatarRenameOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ResetAvatarRenameOp)
    MergeFrom(*source);
  }
}

void ResetAvatarRenameOp::MergeFrom(const ResetAvatarRenameOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ResetAvatarRenameOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_id() != 0) {
    set_avatar_id(from.avatar_id());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void ResetAvatarRenameOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ResetAvatarRenameOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetAvatarRenameOp::CopyFrom(const ResetAvatarRenameOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ResetAvatarRenameOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetAvatarRenameOp::IsInitialized() const {
  return true;
}

void ResetAvatarRenameOp::Swap(ResetAvatarRenameOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResetAvatarRenameOp::InternalSwap(ResetAvatarRenameOp* other) {
  using std::swap;
  swap(avatar_id_, other->avatar_id_);
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResetAvatarRenameOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResetAvatarRenameOp

// uint32 avatar_id = 1;
void ResetAvatarRenameOp::clear_avatar_id() {
  avatar_id_ = 0u;
}
::google::protobuf::uint32 ResetAvatarRenameOp::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.ResetAvatarRenameOp.avatar_id)
  return avatar_id_;
}
void ResetAvatarRenameOp::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ResetAvatarRenameOp.avatar_id)
}

// uint32 reason = 2;
void ResetAvatarRenameOp::clear_reason() {
  reason_ = 0u;
}
::google::protobuf::uint32 ResetAvatarRenameOp::reason() const {
  // @@protoc_insertion_point(field_get:proto.ResetAvatarRenameOp.reason)
  return reason_;
}
void ResetAvatarRenameOp::set_reason(::google::protobuf::uint32 value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.ResetAvatarRenameOp.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddFinishedTalkOp::kTalkIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddFinishedTalkOp::AddFinishedTalkOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddFinishedTalkOp)
}
AddFinishedTalkOp::AddFinishedTalkOp(const AddFinishedTalkOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  talk_id_ = from.talk_id_;
  // @@protoc_insertion_point(copy_constructor:proto.AddFinishedTalkOp)
}

void AddFinishedTalkOp::SharedCtor() {
  talk_id_ = 0u;
  _cached_size_ = 0;
}

AddFinishedTalkOp::~AddFinishedTalkOp() {
  // @@protoc_insertion_point(destructor:proto.AddFinishedTalkOp)
  SharedDtor();
}

void AddFinishedTalkOp::SharedDtor() {
}

void AddFinishedTalkOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddFinishedTalkOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddFinishedTalkOp& AddFinishedTalkOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddFinishedTalkOp* AddFinishedTalkOp::New(::google::protobuf::Arena* arena) const {
  AddFinishedTalkOp* n = new AddFinishedTalkOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddFinishedTalkOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddFinishedTalkOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  talk_id_ = 0u;
  _internal_metadata_.Clear();
}

bool AddFinishedTalkOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddFinishedTalkOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 talk_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &talk_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddFinishedTalkOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddFinishedTalkOp)
  return false;
#undef DO_
}

void AddFinishedTalkOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddFinishedTalkOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 talk_id = 1;
  if (this->talk_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->talk_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddFinishedTalkOp)
}

::google::protobuf::uint8* AddFinishedTalkOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddFinishedTalkOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 talk_id = 1;
  if (this->talk_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->talk_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddFinishedTalkOp)
  return target;
}

size_t AddFinishedTalkOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddFinishedTalkOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 talk_id = 1;
  if (this->talk_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->talk_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddFinishedTalkOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddFinishedTalkOp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddFinishedTalkOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddFinishedTalkOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddFinishedTalkOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddFinishedTalkOp)
    MergeFrom(*source);
  }
}

void AddFinishedTalkOp::MergeFrom(const AddFinishedTalkOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddFinishedTalkOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.talk_id() != 0) {
    set_talk_id(from.talk_id());
  }
}

void AddFinishedTalkOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddFinishedTalkOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddFinishedTalkOp::CopyFrom(const AddFinishedTalkOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddFinishedTalkOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddFinishedTalkOp::IsInitialized() const {
  return true;
}

void AddFinishedTalkOp::Swap(AddFinishedTalkOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddFinishedTalkOp::InternalSwap(AddFinishedTalkOp* other) {
  using std::swap;
  swap(talk_id_, other->talk_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddFinishedTalkOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddFinishedTalkOp

// uint32 talk_id = 1;
void AddFinishedTalkOp::clear_talk_id() {
  talk_id_ = 0u;
}
::google::protobuf::uint32 AddFinishedTalkOp::talk_id() const {
  // @@protoc_insertion_point(field_get:proto.AddFinishedTalkOp.talk_id)
  return talk_id_;
}
void AddFinishedTalkOp::set_talk_id(::google::protobuf::uint32 value) {
  
  talk_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddFinishedTalkOp.talk_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelFinishedTalkOp::kTalkIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelFinishedTalkOp::DelFinishedTalkOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DelFinishedTalkOp)
}
DelFinishedTalkOp::DelFinishedTalkOp(const DelFinishedTalkOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  talk_id_ = from.talk_id_;
  // @@protoc_insertion_point(copy_constructor:proto.DelFinishedTalkOp)
}

void DelFinishedTalkOp::SharedCtor() {
  talk_id_ = 0u;
  _cached_size_ = 0;
}

DelFinishedTalkOp::~DelFinishedTalkOp() {
  // @@protoc_insertion_point(destructor:proto.DelFinishedTalkOp)
  SharedDtor();
}

void DelFinishedTalkOp::SharedDtor() {
}

void DelFinishedTalkOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelFinishedTalkOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelFinishedTalkOp& DelFinishedTalkOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelFinishedTalkOp* DelFinishedTalkOp::New(::google::protobuf::Arena* arena) const {
  DelFinishedTalkOp* n = new DelFinishedTalkOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelFinishedTalkOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DelFinishedTalkOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  talk_id_ = 0u;
  _internal_metadata_.Clear();
}

bool DelFinishedTalkOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DelFinishedTalkOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 talk_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &talk_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DelFinishedTalkOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DelFinishedTalkOp)
  return false;
#undef DO_
}

void DelFinishedTalkOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DelFinishedTalkOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 talk_id = 1;
  if (this->talk_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->talk_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DelFinishedTalkOp)
}

::google::protobuf::uint8* DelFinishedTalkOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DelFinishedTalkOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 talk_id = 1;
  if (this->talk_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->talk_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DelFinishedTalkOp)
  return target;
}

size_t DelFinishedTalkOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DelFinishedTalkOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 talk_id = 1;
  if (this->talk_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->talk_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelFinishedTalkOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DelFinishedTalkOp)
  GOOGLE_DCHECK_NE(&from, this);
  const DelFinishedTalkOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelFinishedTalkOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DelFinishedTalkOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DelFinishedTalkOp)
    MergeFrom(*source);
  }
}

void DelFinishedTalkOp::MergeFrom(const DelFinishedTalkOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DelFinishedTalkOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.talk_id() != 0) {
    set_talk_id(from.talk_id());
  }
}

void DelFinishedTalkOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DelFinishedTalkOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelFinishedTalkOp::CopyFrom(const DelFinishedTalkOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DelFinishedTalkOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelFinishedTalkOp::IsInitialized() const {
  return true;
}

void DelFinishedTalkOp::Swap(DelFinishedTalkOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelFinishedTalkOp::InternalSwap(DelFinishedTalkOp* other) {
  using std::swap;
  swap(talk_id_, other->talk_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelFinishedTalkOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelFinishedTalkOp

// uint32 talk_id = 1;
void DelFinishedTalkOp::clear_talk_id() {
  talk_id_ = 0u;
}
::google::protobuf::uint32 DelFinishedTalkOp::talk_id() const {
  // @@protoc_insertion_point(field_get:proto.DelFinishedTalkOp.talk_id)
  return talk_id_;
}
void DelFinishedTalkOp::set_talk_id(::google::protobuf::uint32 value) {
  
  talk_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DelFinishedTalkOp.talk_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerGCGMatchScoreOp::kMatchIdFieldNumber;
const int SetPlayerGCGMatchScoreOp::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerGCGMatchScoreOp::SetPlayerGCGMatchScoreOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPlayerGCGMatchScoreOp)
}
SetPlayerGCGMatchScoreOp::SetPlayerGCGMatchScoreOp(const SetPlayerGCGMatchScoreOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&match_id_, &from.match_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&match_id_)) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:proto.SetPlayerGCGMatchScoreOp)
}

void SetPlayerGCGMatchScoreOp::SharedCtor() {
  ::memset(&match_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&match_id_)) + sizeof(score_));
  _cached_size_ = 0;
}

SetPlayerGCGMatchScoreOp::~SetPlayerGCGMatchScoreOp() {
  // @@protoc_insertion_point(destructor:proto.SetPlayerGCGMatchScoreOp)
  SharedDtor();
}

void SetPlayerGCGMatchScoreOp::SharedDtor() {
}

void SetPlayerGCGMatchScoreOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerGCGMatchScoreOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPlayerGCGMatchScoreOp& SetPlayerGCGMatchScoreOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPlayerGCGMatchScoreOp* SetPlayerGCGMatchScoreOp::New(::google::protobuf::Arena* arena) const {
  SetPlayerGCGMatchScoreOp* n = new SetPlayerGCGMatchScoreOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerGCGMatchScoreOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPlayerGCGMatchScoreOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&match_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&match_id_)) + sizeof(score_));
  _internal_metadata_.Clear();
}

bool SetPlayerGCGMatchScoreOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPlayerGCGMatchScoreOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 match_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &match_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 score = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPlayerGCGMatchScoreOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPlayerGCGMatchScoreOp)
  return false;
#undef DO_
}

void SetPlayerGCGMatchScoreOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPlayerGCGMatchScoreOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 match_id = 1;
  if (this->match_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->match_id(), output);
  }

  // uint32 score = 2;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->score(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPlayerGCGMatchScoreOp)
}

::google::protobuf::uint8* SetPlayerGCGMatchScoreOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPlayerGCGMatchScoreOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 match_id = 1;
  if (this->match_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->match_id(), target);
  }

  // uint32 score = 2;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->score(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPlayerGCGMatchScoreOp)
  return target;
}

size_t SetPlayerGCGMatchScoreOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPlayerGCGMatchScoreOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 match_id = 1;
  if (this->match_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->match_id());
  }

  // uint32 score = 2;
  if (this->score() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->score());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerGCGMatchScoreOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPlayerGCGMatchScoreOp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPlayerGCGMatchScoreOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerGCGMatchScoreOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPlayerGCGMatchScoreOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPlayerGCGMatchScoreOp)
    MergeFrom(*source);
  }
}

void SetPlayerGCGMatchScoreOp::MergeFrom(const SetPlayerGCGMatchScoreOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPlayerGCGMatchScoreOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.match_id() != 0) {
    set_match_id(from.match_id());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
}

void SetPlayerGCGMatchScoreOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPlayerGCGMatchScoreOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerGCGMatchScoreOp::CopyFrom(const SetPlayerGCGMatchScoreOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPlayerGCGMatchScoreOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerGCGMatchScoreOp::IsInitialized() const {
  return true;
}

void SetPlayerGCGMatchScoreOp::Swap(SetPlayerGCGMatchScoreOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerGCGMatchScoreOp::InternalSwap(SetPlayerGCGMatchScoreOp* other) {
  using std::swap;
  swap(match_id_, other->match_id_);
  swap(score_, other->score_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerGCGMatchScoreOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerGCGMatchScoreOp

// uint32 match_id = 1;
void SetPlayerGCGMatchScoreOp::clear_match_id() {
  match_id_ = 0u;
}
::google::protobuf::uint32 SetPlayerGCGMatchScoreOp::match_id() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerGCGMatchScoreOp.match_id)
  return match_id_;
}
void SetPlayerGCGMatchScoreOp::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerGCGMatchScoreOp.match_id)
}

// uint32 score = 2;
void SetPlayerGCGMatchScoreOp::clear_score() {
  score_ = 0u;
}
::google::protobuf::uint32 SetPlayerGCGMatchScoreOp::score() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerGCGMatchScoreOp.score)
  return score_;
}
void SetPlayerGCGMatchScoreOp::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerGCGMatchScoreOp.score)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPushTipsStateOp::kPushTipsIdFieldNumber;
const int SetPushTipsStateOp::kPushTipsStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPushTipsStateOp::SetPushTipsStateOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPushTipsStateOp)
}
SetPushTipsStateOp::SetPushTipsStateOp(const SetPushTipsStateOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&push_tips_id_, &from.push_tips_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&push_tips_state_) -
    reinterpret_cast<char*>(&push_tips_id_)) + sizeof(push_tips_state_));
  // @@protoc_insertion_point(copy_constructor:proto.SetPushTipsStateOp)
}

void SetPushTipsStateOp::SharedCtor() {
  ::memset(&push_tips_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&push_tips_state_) -
      reinterpret_cast<char*>(&push_tips_id_)) + sizeof(push_tips_state_));
  _cached_size_ = 0;
}

SetPushTipsStateOp::~SetPushTipsStateOp() {
  // @@protoc_insertion_point(destructor:proto.SetPushTipsStateOp)
  SharedDtor();
}

void SetPushTipsStateOp::SharedDtor() {
}

void SetPushTipsStateOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPushTipsStateOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPushTipsStateOp& SetPushTipsStateOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPushTipsStateOp* SetPushTipsStateOp::New(::google::protobuf::Arena* arena) const {
  SetPushTipsStateOp* n = new SetPushTipsStateOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPushTipsStateOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPushTipsStateOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&push_tips_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&push_tips_state_) -
      reinterpret_cast<char*>(&push_tips_id_)) + sizeof(push_tips_state_));
  _internal_metadata_.Clear();
}

bool SetPushTipsStateOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPushTipsStateOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 push_tips_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &push_tips_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 push_tips_state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &push_tips_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPushTipsStateOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPushTipsStateOp)
  return false;
#undef DO_
}

void SetPushTipsStateOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPushTipsStateOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 push_tips_id = 1;
  if (this->push_tips_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->push_tips_id(), output);
  }

  // uint32 push_tips_state = 2;
  if (this->push_tips_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->push_tips_state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPushTipsStateOp)
}

::google::protobuf::uint8* SetPushTipsStateOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPushTipsStateOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 push_tips_id = 1;
  if (this->push_tips_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->push_tips_id(), target);
  }

  // uint32 push_tips_state = 2;
  if (this->push_tips_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->push_tips_state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPushTipsStateOp)
  return target;
}

size_t SetPushTipsStateOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPushTipsStateOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 push_tips_id = 1;
  if (this->push_tips_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->push_tips_id());
  }

  // uint32 push_tips_state = 2;
  if (this->push_tips_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->push_tips_state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPushTipsStateOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPushTipsStateOp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPushTipsStateOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPushTipsStateOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPushTipsStateOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPushTipsStateOp)
    MergeFrom(*source);
  }
}

void SetPushTipsStateOp::MergeFrom(const SetPushTipsStateOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPushTipsStateOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.push_tips_id() != 0) {
    set_push_tips_id(from.push_tips_id());
  }
  if (from.push_tips_state() != 0) {
    set_push_tips_state(from.push_tips_state());
  }
}

void SetPushTipsStateOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPushTipsStateOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPushTipsStateOp::CopyFrom(const SetPushTipsStateOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPushTipsStateOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPushTipsStateOp::IsInitialized() const {
  return true;
}

void SetPushTipsStateOp::Swap(SetPushTipsStateOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPushTipsStateOp::InternalSwap(SetPushTipsStateOp* other) {
  using std::swap;
  swap(push_tips_id_, other->push_tips_id_);
  swap(push_tips_state_, other->push_tips_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPushTipsStateOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPushTipsStateOp

// uint32 push_tips_id = 1;
void SetPushTipsStateOp::clear_push_tips_id() {
  push_tips_id_ = 0u;
}
::google::protobuf::uint32 SetPushTipsStateOp::push_tips_id() const {
  // @@protoc_insertion_point(field_get:proto.SetPushTipsStateOp.push_tips_id)
  return push_tips_id_;
}
void SetPushTipsStateOp::set_push_tips_id(::google::protobuf::uint32 value) {
  
  push_tips_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPushTipsStateOp.push_tips_id)
}

// uint32 push_tips_state = 2;
void SetPushTipsStateOp::clear_push_tips_state() {
  push_tips_state_ = 0u;
}
::google::protobuf::uint32 SetPushTipsStateOp::push_tips_state() const {
  // @@protoc_insertion_point(field_get:proto.SetPushTipsStateOp.push_tips_state)
  return push_tips_state_;
}
void SetPushTipsStateOp::set_push_tips_state(::google::protobuf::uint32 value) {
  
  push_tips_state_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPushTipsStateOp.push_tips_state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeletePlayerGCGCardOp::kCardIdFieldNumber;
const int DeletePlayerGCGCardOp::kDelNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeletePlayerGCGCardOp::DeletePlayerGCGCardOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DeletePlayerGCGCardOp)
}
DeletePlayerGCGCardOp::DeletePlayerGCGCardOp(const DeletePlayerGCGCardOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&card_id_, &from.card_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&del_num_) -
    reinterpret_cast<char*>(&card_id_)) + sizeof(del_num_));
  // @@protoc_insertion_point(copy_constructor:proto.DeletePlayerGCGCardOp)
}

void DeletePlayerGCGCardOp::SharedCtor() {
  ::memset(&card_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&del_num_) -
      reinterpret_cast<char*>(&card_id_)) + sizeof(del_num_));
  _cached_size_ = 0;
}

DeletePlayerGCGCardOp::~DeletePlayerGCGCardOp() {
  // @@protoc_insertion_point(destructor:proto.DeletePlayerGCGCardOp)
  SharedDtor();
}

void DeletePlayerGCGCardOp::SharedDtor() {
}

void DeletePlayerGCGCardOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeletePlayerGCGCardOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeletePlayerGCGCardOp& DeletePlayerGCGCardOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeletePlayerGCGCardOp* DeletePlayerGCGCardOp::New(::google::protobuf::Arena* arena) const {
  DeletePlayerGCGCardOp* n = new DeletePlayerGCGCardOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeletePlayerGCGCardOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeletePlayerGCGCardOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&card_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&del_num_) -
      reinterpret_cast<char*>(&card_id_)) + sizeof(del_num_));
  _internal_metadata_.Clear();
}

bool DeletePlayerGCGCardOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DeletePlayerGCGCardOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 card_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &card_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 del_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &del_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DeletePlayerGCGCardOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DeletePlayerGCGCardOp)
  return false;
#undef DO_
}

void DeletePlayerGCGCardOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DeletePlayerGCGCardOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 card_id = 1;
  if (this->card_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->card_id(), output);
  }

  // uint32 del_num = 2;
  if (this->del_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->del_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DeletePlayerGCGCardOp)
}

::google::protobuf::uint8* DeletePlayerGCGCardOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeletePlayerGCGCardOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 card_id = 1;
  if (this->card_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->card_id(), target);
  }

  // uint32 del_num = 2;
  if (this->del_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->del_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeletePlayerGCGCardOp)
  return target;
}

size_t DeletePlayerGCGCardOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeletePlayerGCGCardOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 card_id = 1;
  if (this->card_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->card_id());
  }

  // uint32 del_num = 2;
  if (this->del_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->del_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeletePlayerGCGCardOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DeletePlayerGCGCardOp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeletePlayerGCGCardOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeletePlayerGCGCardOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DeletePlayerGCGCardOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DeletePlayerGCGCardOp)
    MergeFrom(*source);
  }
}

void DeletePlayerGCGCardOp::MergeFrom(const DeletePlayerGCGCardOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DeletePlayerGCGCardOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.card_id() != 0) {
    set_card_id(from.card_id());
  }
  if (from.del_num() != 0) {
    set_del_num(from.del_num());
  }
}

void DeletePlayerGCGCardOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DeletePlayerGCGCardOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeletePlayerGCGCardOp::CopyFrom(const DeletePlayerGCGCardOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeletePlayerGCGCardOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePlayerGCGCardOp::IsInitialized() const {
  return true;
}

void DeletePlayerGCGCardOp::Swap(DeletePlayerGCGCardOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeletePlayerGCGCardOp::InternalSwap(DeletePlayerGCGCardOp* other) {
  using std::swap;
  swap(card_id_, other->card_id_);
  swap(del_num_, other->del_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeletePlayerGCGCardOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeletePlayerGCGCardOp

// uint32 card_id = 1;
void DeletePlayerGCGCardOp::clear_card_id() {
  card_id_ = 0u;
}
::google::protobuf::uint32 DeletePlayerGCGCardOp::card_id() const {
  // @@protoc_insertion_point(field_get:proto.DeletePlayerGCGCardOp.card_id)
  return card_id_;
}
void DeletePlayerGCGCardOp::set_card_id(::google::protobuf::uint32 value) {
  
  card_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DeletePlayerGCGCardOp.card_id)
}

// uint32 del_num = 2;
void DeletePlayerGCGCardOp::clear_del_num() {
  del_num_ = 0u;
}
::google::protobuf::uint32 DeletePlayerGCGCardOp::del_num() const {
  // @@protoc_insertion_point(field_get:proto.DeletePlayerGCGCardOp.del_num)
  return del_num_;
}
void DeletePlayerGCGCardOp::set_del_num(::google::protobuf::uint32 value) {
  
  del_num_ = value;
  // @@protoc_insertion_point(field_set:proto.DeletePlayerGCGCardOp.del_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeletePlayerGCGCardFaceOp::kCardFaceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeletePlayerGCGCardFaceOp::DeletePlayerGCGCardFaceOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DeletePlayerGCGCardFaceOp)
}
DeletePlayerGCGCardFaceOp::DeletePlayerGCGCardFaceOp(const DeletePlayerGCGCardFaceOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  card_face_id_ = from.card_face_id_;
  // @@protoc_insertion_point(copy_constructor:proto.DeletePlayerGCGCardFaceOp)
}

void DeletePlayerGCGCardFaceOp::SharedCtor() {
  card_face_id_ = 0u;
  _cached_size_ = 0;
}

DeletePlayerGCGCardFaceOp::~DeletePlayerGCGCardFaceOp() {
  // @@protoc_insertion_point(destructor:proto.DeletePlayerGCGCardFaceOp)
  SharedDtor();
}

void DeletePlayerGCGCardFaceOp::SharedDtor() {
}

void DeletePlayerGCGCardFaceOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeletePlayerGCGCardFaceOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeletePlayerGCGCardFaceOp& DeletePlayerGCGCardFaceOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeletePlayerGCGCardFaceOp* DeletePlayerGCGCardFaceOp::New(::google::protobuf::Arena* arena) const {
  DeletePlayerGCGCardFaceOp* n = new DeletePlayerGCGCardFaceOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeletePlayerGCGCardFaceOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeletePlayerGCGCardFaceOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  card_face_id_ = 0u;
  _internal_metadata_.Clear();
}

bool DeletePlayerGCGCardFaceOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DeletePlayerGCGCardFaceOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 card_face_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &card_face_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DeletePlayerGCGCardFaceOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DeletePlayerGCGCardFaceOp)
  return false;
#undef DO_
}

void DeletePlayerGCGCardFaceOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DeletePlayerGCGCardFaceOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 card_face_id = 1;
  if (this->card_face_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->card_face_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DeletePlayerGCGCardFaceOp)
}

::google::protobuf::uint8* DeletePlayerGCGCardFaceOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeletePlayerGCGCardFaceOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 card_face_id = 1;
  if (this->card_face_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->card_face_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeletePlayerGCGCardFaceOp)
  return target;
}

size_t DeletePlayerGCGCardFaceOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeletePlayerGCGCardFaceOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 card_face_id = 1;
  if (this->card_face_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->card_face_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeletePlayerGCGCardFaceOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DeletePlayerGCGCardFaceOp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeletePlayerGCGCardFaceOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeletePlayerGCGCardFaceOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DeletePlayerGCGCardFaceOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DeletePlayerGCGCardFaceOp)
    MergeFrom(*source);
  }
}

void DeletePlayerGCGCardFaceOp::MergeFrom(const DeletePlayerGCGCardFaceOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DeletePlayerGCGCardFaceOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.card_face_id() != 0) {
    set_card_face_id(from.card_face_id());
  }
}

void DeletePlayerGCGCardFaceOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DeletePlayerGCGCardFaceOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeletePlayerGCGCardFaceOp::CopyFrom(const DeletePlayerGCGCardFaceOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeletePlayerGCGCardFaceOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePlayerGCGCardFaceOp::IsInitialized() const {
  return true;
}

void DeletePlayerGCGCardFaceOp::Swap(DeletePlayerGCGCardFaceOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeletePlayerGCGCardFaceOp::InternalSwap(DeletePlayerGCGCardFaceOp* other) {
  using std::swap;
  swap(card_face_id_, other->card_face_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeletePlayerGCGCardFaceOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeletePlayerGCGCardFaceOp

// uint32 card_face_id = 1;
void DeletePlayerGCGCardFaceOp::clear_card_face_id() {
  card_face_id_ = 0u;
}
::google::protobuf::uint32 DeletePlayerGCGCardFaceOp::card_face_id() const {
  // @@protoc_insertion_point(field_get:proto.DeletePlayerGCGCardFaceOp.card_face_id)
  return card_face_id_;
}
void DeletePlayerGCGCardFaceOp::set_card_face_id(::google::protobuf::uint32 value) {
  
  card_face_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DeletePlayerGCGCardFaceOp.card_face_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeletePlayerGCGCardBackOp::kCardBackIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeletePlayerGCGCardBackOp::DeletePlayerGCGCardBackOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DeletePlayerGCGCardBackOp)
}
DeletePlayerGCGCardBackOp::DeletePlayerGCGCardBackOp(const DeletePlayerGCGCardBackOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  card_back_id_ = from.card_back_id_;
  // @@protoc_insertion_point(copy_constructor:proto.DeletePlayerGCGCardBackOp)
}

void DeletePlayerGCGCardBackOp::SharedCtor() {
  card_back_id_ = 0u;
  _cached_size_ = 0;
}

DeletePlayerGCGCardBackOp::~DeletePlayerGCGCardBackOp() {
  // @@protoc_insertion_point(destructor:proto.DeletePlayerGCGCardBackOp)
  SharedDtor();
}

void DeletePlayerGCGCardBackOp::SharedDtor() {
}

void DeletePlayerGCGCardBackOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeletePlayerGCGCardBackOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeletePlayerGCGCardBackOp& DeletePlayerGCGCardBackOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeletePlayerGCGCardBackOp* DeletePlayerGCGCardBackOp::New(::google::protobuf::Arena* arena) const {
  DeletePlayerGCGCardBackOp* n = new DeletePlayerGCGCardBackOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeletePlayerGCGCardBackOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeletePlayerGCGCardBackOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  card_back_id_ = 0u;
  _internal_metadata_.Clear();
}

bool DeletePlayerGCGCardBackOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DeletePlayerGCGCardBackOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 card_back_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &card_back_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DeletePlayerGCGCardBackOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DeletePlayerGCGCardBackOp)
  return false;
#undef DO_
}

void DeletePlayerGCGCardBackOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DeletePlayerGCGCardBackOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 card_back_id = 1;
  if (this->card_back_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->card_back_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DeletePlayerGCGCardBackOp)
}

::google::protobuf::uint8* DeletePlayerGCGCardBackOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeletePlayerGCGCardBackOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 card_back_id = 1;
  if (this->card_back_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->card_back_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeletePlayerGCGCardBackOp)
  return target;
}

size_t DeletePlayerGCGCardBackOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeletePlayerGCGCardBackOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 card_back_id = 1;
  if (this->card_back_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->card_back_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeletePlayerGCGCardBackOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DeletePlayerGCGCardBackOp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeletePlayerGCGCardBackOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeletePlayerGCGCardBackOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DeletePlayerGCGCardBackOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DeletePlayerGCGCardBackOp)
    MergeFrom(*source);
  }
}

void DeletePlayerGCGCardBackOp::MergeFrom(const DeletePlayerGCGCardBackOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DeletePlayerGCGCardBackOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.card_back_id() != 0) {
    set_card_back_id(from.card_back_id());
  }
}

void DeletePlayerGCGCardBackOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DeletePlayerGCGCardBackOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeletePlayerGCGCardBackOp::CopyFrom(const DeletePlayerGCGCardBackOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeletePlayerGCGCardBackOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePlayerGCGCardBackOp::IsInitialized() const {
  return true;
}

void DeletePlayerGCGCardBackOp::Swap(DeletePlayerGCGCardBackOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeletePlayerGCGCardBackOp::InternalSwap(DeletePlayerGCGCardBackOp* other) {
  using std::swap;
  swap(card_back_id_, other->card_back_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeletePlayerGCGCardBackOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeletePlayerGCGCardBackOp

// uint32 card_back_id = 1;
void DeletePlayerGCGCardBackOp::clear_card_back_id() {
  card_back_id_ = 0u;
}
::google::protobuf::uint32 DeletePlayerGCGCardBackOp::card_back_id() const {
  // @@protoc_insertion_point(field_get:proto.DeletePlayerGCGCardBackOp.card_back_id)
  return card_back_id_;
}
void DeletePlayerGCGCardBackOp::set_card_back_id(::google::protobuf::uint32 value) {
  
  card_back_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DeletePlayerGCGCardBackOp.card_back_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeletePlayerGCGDeckFieldOp::kDeckFieldIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeletePlayerGCGDeckFieldOp::DeletePlayerGCGDeckFieldOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DeletePlayerGCGDeckFieldOp)
}
DeletePlayerGCGDeckFieldOp::DeletePlayerGCGDeckFieldOp(const DeletePlayerGCGDeckFieldOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deck_field_id_ = from.deck_field_id_;
  // @@protoc_insertion_point(copy_constructor:proto.DeletePlayerGCGDeckFieldOp)
}

void DeletePlayerGCGDeckFieldOp::SharedCtor() {
  deck_field_id_ = 0u;
  _cached_size_ = 0;
}

DeletePlayerGCGDeckFieldOp::~DeletePlayerGCGDeckFieldOp() {
  // @@protoc_insertion_point(destructor:proto.DeletePlayerGCGDeckFieldOp)
  SharedDtor();
}

void DeletePlayerGCGDeckFieldOp::SharedDtor() {
}

void DeletePlayerGCGDeckFieldOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeletePlayerGCGDeckFieldOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeletePlayerGCGDeckFieldOp& DeletePlayerGCGDeckFieldOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeletePlayerGCGDeckFieldOp* DeletePlayerGCGDeckFieldOp::New(::google::protobuf::Arena* arena) const {
  DeletePlayerGCGDeckFieldOp* n = new DeletePlayerGCGDeckFieldOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeletePlayerGCGDeckFieldOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeletePlayerGCGDeckFieldOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deck_field_id_ = 0u;
  _internal_metadata_.Clear();
}

bool DeletePlayerGCGDeckFieldOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DeletePlayerGCGDeckFieldOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 deck_field_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &deck_field_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DeletePlayerGCGDeckFieldOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DeletePlayerGCGDeckFieldOp)
  return false;
#undef DO_
}

void DeletePlayerGCGDeckFieldOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DeletePlayerGCGDeckFieldOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 deck_field_id = 1;
  if (this->deck_field_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->deck_field_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DeletePlayerGCGDeckFieldOp)
}

::google::protobuf::uint8* DeletePlayerGCGDeckFieldOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeletePlayerGCGDeckFieldOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 deck_field_id = 1;
  if (this->deck_field_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->deck_field_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeletePlayerGCGDeckFieldOp)
  return target;
}

size_t DeletePlayerGCGDeckFieldOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeletePlayerGCGDeckFieldOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 deck_field_id = 1;
  if (this->deck_field_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->deck_field_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeletePlayerGCGDeckFieldOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DeletePlayerGCGDeckFieldOp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeletePlayerGCGDeckFieldOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeletePlayerGCGDeckFieldOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DeletePlayerGCGDeckFieldOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DeletePlayerGCGDeckFieldOp)
    MergeFrom(*source);
  }
}

void DeletePlayerGCGDeckFieldOp::MergeFrom(const DeletePlayerGCGDeckFieldOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DeletePlayerGCGDeckFieldOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.deck_field_id() != 0) {
    set_deck_field_id(from.deck_field_id());
  }
}

void DeletePlayerGCGDeckFieldOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DeletePlayerGCGDeckFieldOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeletePlayerGCGDeckFieldOp::CopyFrom(const DeletePlayerGCGDeckFieldOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeletePlayerGCGDeckFieldOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePlayerGCGDeckFieldOp::IsInitialized() const {
  return true;
}

void DeletePlayerGCGDeckFieldOp::Swap(DeletePlayerGCGDeckFieldOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeletePlayerGCGDeckFieldOp::InternalSwap(DeletePlayerGCGDeckFieldOp* other) {
  using std::swap;
  swap(deck_field_id_, other->deck_field_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeletePlayerGCGDeckFieldOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeletePlayerGCGDeckFieldOp

// uint32 deck_field_id = 1;
void DeletePlayerGCGDeckFieldOp::clear_deck_field_id() {
  deck_field_id_ = 0u;
}
::google::protobuf::uint32 DeletePlayerGCGDeckFieldOp::deck_field_id() const {
  // @@protoc_insertion_point(field_get:proto.DeletePlayerGCGDeckFieldOp.deck_field_id)
  return deck_field_id_;
}
void DeletePlayerGCGDeckFieldOp::set_deck_field_id(::google::protobuf::uint32 value) {
  
  deck_field_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DeletePlayerGCGDeckFieldOp.deck_field_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BanPlayerGCGMatchOp::kExpireTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BanPlayerGCGMatchOp::BanPlayerGCGMatchOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BanPlayerGCGMatchOp)
}
BanPlayerGCGMatchOp::BanPlayerGCGMatchOp(const BanPlayerGCGMatchOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  expire_time_ = from.expire_time_;
  // @@protoc_insertion_point(copy_constructor:proto.BanPlayerGCGMatchOp)
}

void BanPlayerGCGMatchOp::SharedCtor() {
  expire_time_ = 0u;
  _cached_size_ = 0;
}

BanPlayerGCGMatchOp::~BanPlayerGCGMatchOp() {
  // @@protoc_insertion_point(destructor:proto.BanPlayerGCGMatchOp)
  SharedDtor();
}

void BanPlayerGCGMatchOp::SharedDtor() {
}

void BanPlayerGCGMatchOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BanPlayerGCGMatchOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BanPlayerGCGMatchOp& BanPlayerGCGMatchOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

BanPlayerGCGMatchOp* BanPlayerGCGMatchOp::New(::google::protobuf::Arena* arena) const {
  BanPlayerGCGMatchOp* n = new BanPlayerGCGMatchOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BanPlayerGCGMatchOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BanPlayerGCGMatchOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  expire_time_ = 0u;
  _internal_metadata_.Clear();
}

bool BanPlayerGCGMatchOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BanPlayerGCGMatchOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 expire_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expire_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BanPlayerGCGMatchOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BanPlayerGCGMatchOp)
  return false;
#undef DO_
}

void BanPlayerGCGMatchOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BanPlayerGCGMatchOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 expire_time = 1;
  if (this->expire_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->expire_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BanPlayerGCGMatchOp)
}

::google::protobuf::uint8* BanPlayerGCGMatchOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BanPlayerGCGMatchOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 expire_time = 1;
  if (this->expire_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->expire_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BanPlayerGCGMatchOp)
  return target;
}

size_t BanPlayerGCGMatchOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BanPlayerGCGMatchOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 expire_time = 1;
  if (this->expire_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->expire_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BanPlayerGCGMatchOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BanPlayerGCGMatchOp)
  GOOGLE_DCHECK_NE(&from, this);
  const BanPlayerGCGMatchOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BanPlayerGCGMatchOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BanPlayerGCGMatchOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BanPlayerGCGMatchOp)
    MergeFrom(*source);
  }
}

void BanPlayerGCGMatchOp::MergeFrom(const BanPlayerGCGMatchOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BanPlayerGCGMatchOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.expire_time() != 0) {
    set_expire_time(from.expire_time());
  }
}

void BanPlayerGCGMatchOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BanPlayerGCGMatchOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BanPlayerGCGMatchOp::CopyFrom(const BanPlayerGCGMatchOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BanPlayerGCGMatchOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BanPlayerGCGMatchOp::IsInitialized() const {
  return true;
}

void BanPlayerGCGMatchOp::Swap(BanPlayerGCGMatchOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BanPlayerGCGMatchOp::InternalSwap(BanPlayerGCGMatchOp* other) {
  using std::swap;
  swap(expire_time_, other->expire_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BanPlayerGCGMatchOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BanPlayerGCGMatchOp

// uint32 expire_time = 1;
void BanPlayerGCGMatchOp::clear_expire_time() {
  expire_time_ = 0u;
}
::google::protobuf::uint32 BanPlayerGCGMatchOp::expire_time() const {
  // @@protoc_insertion_point(field_get:proto.BanPlayerGCGMatchOp.expire_time)
  return expire_time_;
}
void BanPlayerGCGMatchOp::set_expire_time(::google::protobuf::uint32 value) {
  
  expire_time_ = value;
  // @@protoc_insertion_point(field_set:proto.BanPlayerGCGMatchOp.expire_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BanPlayerGCGPVPOp::kExpireTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BanPlayerGCGPVPOp::BanPlayerGCGPVPOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BanPlayerGCGPVPOp)
}
BanPlayerGCGPVPOp::BanPlayerGCGPVPOp(const BanPlayerGCGPVPOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  expire_time_ = from.expire_time_;
  // @@protoc_insertion_point(copy_constructor:proto.BanPlayerGCGPVPOp)
}

void BanPlayerGCGPVPOp::SharedCtor() {
  expire_time_ = 0u;
  _cached_size_ = 0;
}

BanPlayerGCGPVPOp::~BanPlayerGCGPVPOp() {
  // @@protoc_insertion_point(destructor:proto.BanPlayerGCGPVPOp)
  SharedDtor();
}

void BanPlayerGCGPVPOp::SharedDtor() {
}

void BanPlayerGCGPVPOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BanPlayerGCGPVPOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BanPlayerGCGPVPOp& BanPlayerGCGPVPOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

BanPlayerGCGPVPOp* BanPlayerGCGPVPOp::New(::google::protobuf::Arena* arena) const {
  BanPlayerGCGPVPOp* n = new BanPlayerGCGPVPOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BanPlayerGCGPVPOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BanPlayerGCGPVPOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  expire_time_ = 0u;
  _internal_metadata_.Clear();
}

bool BanPlayerGCGPVPOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BanPlayerGCGPVPOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 expire_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expire_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BanPlayerGCGPVPOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BanPlayerGCGPVPOp)
  return false;
#undef DO_
}

void BanPlayerGCGPVPOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BanPlayerGCGPVPOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 expire_time = 1;
  if (this->expire_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->expire_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BanPlayerGCGPVPOp)
}

::google::protobuf::uint8* BanPlayerGCGPVPOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BanPlayerGCGPVPOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 expire_time = 1;
  if (this->expire_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->expire_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BanPlayerGCGPVPOp)
  return target;
}

size_t BanPlayerGCGPVPOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BanPlayerGCGPVPOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 expire_time = 1;
  if (this->expire_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->expire_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BanPlayerGCGPVPOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BanPlayerGCGPVPOp)
  GOOGLE_DCHECK_NE(&from, this);
  const BanPlayerGCGPVPOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BanPlayerGCGPVPOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BanPlayerGCGPVPOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BanPlayerGCGPVPOp)
    MergeFrom(*source);
  }
}

void BanPlayerGCGPVPOp::MergeFrom(const BanPlayerGCGPVPOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BanPlayerGCGPVPOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.expire_time() != 0) {
    set_expire_time(from.expire_time());
  }
}

void BanPlayerGCGPVPOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BanPlayerGCGPVPOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BanPlayerGCGPVPOp::CopyFrom(const BanPlayerGCGPVPOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BanPlayerGCGPVPOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BanPlayerGCGPVPOp::IsInitialized() const {
  return true;
}

void BanPlayerGCGPVPOp::Swap(BanPlayerGCGPVPOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BanPlayerGCGPVPOp::InternalSwap(BanPlayerGCGPVPOp* other) {
  using std::swap;
  swap(expire_time_, other->expire_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BanPlayerGCGPVPOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BanPlayerGCGPVPOp

// uint32 expire_time = 1;
void BanPlayerGCGPVPOp::clear_expire_time() {
  expire_time_ = 0u;
}
::google::protobuf::uint32 BanPlayerGCGPVPOp::expire_time() const {
  // @@protoc_insertion_point(field_get:proto.BanPlayerGCGPVPOp.expire_time)
  return expire_time_;
}
void BanPlayerGCGPVPOp::set_expire_time(::google::protobuf::uint32 value) {
  
  expire_time_ = value;
  // @@protoc_insertion_point(field_set:proto.BanPlayerGCGPVPOp.expire_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineMsgBin::kEnqueTimeFieldNumber;
const int OfflineMsgBin::kTicketFieldNumber;
const int OfflineMsgBin::kIndexFieldNumber;
const int OfflineMsgBin::kDelItemOpFieldNumber;
const int OfflineMsgBin::kGotoOpFieldNumber;
const int OfflineMsgBin::kResetParentQuestOpFieldNumber;
const int OfflineMsgBin::kRefreshGroupOpFieldNumber;
const int OfflineMsgBin::kSetScenePointLockStatusOpFieldNumber;
const int OfflineMsgBin::kSetNickNameOpFieldNumber;
const int OfflineMsgBin::kRefreshShopOpFieldNumber;
const int OfflineMsgBin::kUnlockTalentOpFieldNumber;
const int OfflineMsgBin::kTakeOffEquipOpFieldNumber;
const int OfflineMsgBin::kDelMailOpFieldNumber;
const int OfflineMsgBin::kFinishDailyTaskOpFieldNumber;
const int OfflineMsgBin::kUnlockAreaOpFieldNumber;
const int OfflineMsgBin::kDelItemNegativeOpFieldNumber;
const int OfflineMsgBin::kDelEquipOpFieldNumber;
const int OfflineMsgBin::kAddItemOpFieldNumber;
const int OfflineMsgBin::kModifyBornPosOpFieldNumber;
const int OfflineMsgBin::kSubCoinNegativeOpFieldNumber;
const int OfflineMsgBin::kSetQuestContentProgressOpFieldNumber;
const int OfflineMsgBin::kFinishOrderOpFieldNumber;
const int OfflineMsgBin::kAddOrModifyWatcherOpFieldNumber;
const int OfflineMsgBin::kDelWatcherOpFieldNumber;
const int OfflineMsgBin::kSetSignatureOpFieldNumber;
const int OfflineMsgBin::kAddOrSubResinOpFieldNumber;
const int OfflineMsgBin::kSetQuestGlobalVarValueOpFieldNumber;
const int OfflineMsgBin::kAddMcoinOpFieldNumber;
const int OfflineMsgBin::kGroupBinOpFieldNumber;
const int OfflineMsgBin::kDelOneOffOpFieldNumber;
const int OfflineMsgBin::kFinishRoutineOpFieldNumber;
const int OfflineMsgBin::kFinishDailyTaskGroupOpFieldNumber;
const int OfflineMsgBin::kRefreshBlossomCircleCampOpFieldNumber;
const int OfflineMsgBin::kBlessingGivePicOpFieldNumber;
const int OfflineMsgBin::kExpeditionAssistOpFieldNumber;
const int OfflineMsgBin::kRecoverWorldLevelOpFieldNumber;
const int OfflineMsgBin::kForceAcceptQuestOpFieldNumber;
const int OfflineMsgBin::kSetMainCoopConfidenceOpFieldNumber;
const int OfflineMsgBin::kAddCoopPointSavePointListOpFieldNumber;
const int OfflineMsgBin::kAddRegionSearchProgressOpFieldNumber;
const int OfflineMsgBin::kSetMatchPunishTimesOpFieldNumber;
const int OfflineMsgBin::kResetChannellerSlabCampGroupOpFieldNumber;
const int OfflineMsgBin::kProcSceneTagOpFieldNumber;
const int OfflineMsgBin::kSetClimateAreaTypeOpFieldNumber;
const int OfflineMsgBin::kExchangeMcoinOpFieldNumber;
const int OfflineMsgBin::kSetFinishedParentQuestChildStateOpFieldNumber;
const int OfflineMsgBin::kSetLevel1AreaExplorePointOpFieldNumber;
const int OfflineMsgBin::kSetCodexOpenOrCloseOpFieldNumber;
const int OfflineMsgBin::kChangeMapAreaInfoOpFieldNumber;
const int OfflineMsgBin::kGroupLinkOpFieldNumber;
const int OfflineMsgBin::kSetWatcherCompRecordValueOpFieldNumber;
const int OfflineMsgBin::kAddFriendOpFieldNumber;
const int OfflineMsgBin::kDelFriendOpFieldNumber;
const int OfflineMsgBin::kAddFriendAskOpFieldNumber;
const int OfflineMsgBin::kDelFriendAskOpFieldNumber;
const int OfflineMsgBin::kBanCustomDungeonOpFieldNumber;
const int OfflineMsgBin::kRemoveInvalidMapMarksOpFieldNumber;
const int OfflineMsgBin::kRecalculateAreaExplorePointOpFieldNumber;
const int OfflineMsgBin::kNicknameAuditResultOpFieldNumber;
const int OfflineMsgBin::kSignatureAuditResultOpFieldNumber;
const int OfflineMsgBin::kPassHomeSceneArrangementAuditOpFieldNumber;
const int OfflineMsgBin::kFailHomeSceneArrangementAuditOpFieldNumber;
const int OfflineMsgBin::kFailHomeModulesArrangementAuditOpFieldNumber;
const int OfflineMsgBin::kBanUgcPublishOpFieldNumber;
const int OfflineMsgBin::kResetPlayerPersistentDungeonOpFieldNumber;
const int OfflineMsgBin::kResetPlayerPosInPersistentDungeonOpFieldNumber;
const int OfflineMsgBin::kLevelTagChangeOpFieldNumber;
const int OfflineMsgBin::kResetPlayerWayPointInPersistentDungeonOpFieldNumber;
const int OfflineMsgBin::kExhibitionSetOpFieldNumber;
const int OfflineMsgBin::kSetAvatarExtraPropOpFieldNumber;
const int OfflineMsgBin::kAddItemWithLimitOpFieldNumber;
const int OfflineMsgBin::kSetGadgetChainLevelOpFieldNumber;
const int OfflineMsgBin::kSetDailyTaskVarOpFieldNumber;
const int OfflineMsgBin::kAvatarRenameAuditResultOpFieldNumber;
const int OfflineMsgBin::kResetAvatarRenameOpFieldNumber;
const int OfflineMsgBin::kAddFinishedTalkOpFieldNumber;
const int OfflineMsgBin::kDelFinishedTalkOpFieldNumber;
const int OfflineMsgBin::kSetPlayerGcgMatchScoreOpFieldNumber;
const int OfflineMsgBin::kSetPushTipsStateOpFieldNumber;
const int OfflineMsgBin::kDeletePlayerGcgCardOpFieldNumber;
const int OfflineMsgBin::kDeletePlayerGcgCardFaceOpFieldNumber;
const int OfflineMsgBin::kDeletePlayerGcgCardBackOpFieldNumber;
const int OfflineMsgBin::kDeletePlayerGcgDeckFieldOpFieldNumber;
const int OfflineMsgBin::kBanPlayerGcgMatchOpFieldNumber;
const int OfflineMsgBin::kBanPlayerGcgPvpOpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineMsgBin::OfflineMsgBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.OfflineMsgBin)
}
OfflineMsgBin::OfflineMsgBin(const OfflineMsgBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ticket().size() > 0) {
    ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticket_);
  }
  ::memcpy(&enque_time_, &from.enque_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&enque_time_)) + sizeof(index_));
  clear_has_detail();
  switch (from.detail_case()) {
    case kDelItemOp: {
      mutable_del_item_op()->::proto::DelItemOp::MergeFrom(from.del_item_op());
      break;
    }
    case kGotoOp: {
      mutable_goto_op()->::proto::PlayerGotoOp::MergeFrom(from.goto_op());
      break;
    }
    case kResetParentQuestOp: {
      mutable_reset_parent_quest_op()->::proto::ResetParentQuestOp::MergeFrom(from.reset_parent_quest_op());
      break;
    }
    case kRefreshGroupOp: {
      mutable_refresh_group_op()->::proto::RefreshGroupOp::MergeFrom(from.refresh_group_op());
      break;
    }
    case kSetScenePointLockStatusOp: {
      mutable_set_scene_point_lock_status_op()->::proto::SetScenePointLockStatusOp::MergeFrom(from.set_scene_point_lock_status_op());
      break;
    }
    case kSetNickNameOp: {
      mutable_set_nick_name_op()->::proto::SetPlayerNickNameOp::MergeFrom(from.set_nick_name_op());
      break;
    }
    case kRefreshShopOp: {
      mutable_refresh_shop_op()->::proto::RefreshShopOp::MergeFrom(from.refresh_shop_op());
      break;
    }
    case kUnlockTalentOp: {
      mutable_unlock_talent_op()->::proto::UnlockTalentOp::MergeFrom(from.unlock_talent_op());
      break;
    }
    case kTakeOffEquipOp: {
      mutable_take_off_equip_op()->::proto::TakeOffEquipOp::MergeFrom(from.take_off_equip_op());
      break;
    }
    case kDelMailOp: {
      mutable_del_mail_op()->::proto::DelMailOp::MergeFrom(from.del_mail_op());
      break;
    }
    case kFinishDailyTaskOp: {
      mutable_finish_daily_task_op()->::proto::FinishDailyTaskOp::MergeFrom(from.finish_daily_task_op());
      break;
    }
    case kUnlockAreaOp: {
      mutable_unlock_area_op()->::proto::UnlockAreaOp::MergeFrom(from.unlock_area_op());
      break;
    }
    case kDelItemNegativeOp: {
      mutable_del_item_negative_op()->::proto::DelItemNegativeOp::MergeFrom(from.del_item_negative_op());
      break;
    }
    case kDelEquipOp: {
      mutable_del_equip_op()->::proto::DelEquipOp::MergeFrom(from.del_equip_op());
      break;
    }
    case kAddItemOp: {
      mutable_add_item_op()->::proto::AddItemOp::MergeFrom(from.add_item_op());
      break;
    }
    case kModifyBornPosOp: {
      mutable_modify_born_pos_op()->::proto::ModifyBornPosOp::MergeFrom(from.modify_born_pos_op());
      break;
    }
    case kSubCoinNegativeOp: {
      mutable_sub_coin_negative_op()->::proto::SubCoinNegativeOp::MergeFrom(from.sub_coin_negative_op());
      break;
    }
    case kSetQuestContentProgressOp: {
      mutable_set_quest_content_progress_op()->::proto::SetQuestContentProgressOp::MergeFrom(from.set_quest_content_progress_op());
      break;
    }
    case kFinishOrderOp: {
      mutable_finish_order_op()->::proto::FinishOrderOp::MergeFrom(from.finish_order_op());
      break;
    }
    case kAddOrModifyWatcherOp: {
      mutable_add_or_modify_watcher_op()->::proto::AddOrModifyWatcherOp::MergeFrom(from.add_or_modify_watcher_op());
      break;
    }
    case kDelWatcherOp: {
      mutable_del_watcher_op()->::proto::DelWatcherOp::MergeFrom(from.del_watcher_op());
      break;
    }
    case kSetSignatureOp: {
      mutable_set_signature_op()->::proto::SetSignatureOp::MergeFrom(from.set_signature_op());
      break;
    }
    case kAddOrSubResinOp: {
      mutable_add_or_sub_resin_op()->::proto::AddOrSubResinOp::MergeFrom(from.add_or_sub_resin_op());
      break;
    }
    case kSetQuestGlobalVarValueOp: {
      mutable_set_quest_global_var_value_op()->::proto::SetQuestGlobalVarValueOp::MergeFrom(from.set_quest_global_var_value_op());
      break;
    }
    case kAddMcoinOp: {
      mutable_add_mcoin_op()->::proto::AddMcoinVipPointOp::MergeFrom(from.add_mcoin_op());
      break;
    }
    case kGroupBinOp: {
      mutable_group_bin_op()->::proto::GroupBinOp::MergeFrom(from.group_bin_op());
      break;
    }
    case kDelOneOffOp: {
      mutable_del_one_off_op()->::proto::DelOneOffOp::MergeFrom(from.del_one_off_op());
      break;
    }
    case kFinishRoutineOp: {
      mutable_finish_routine_op()->::proto::FinishRoutineOp::MergeFrom(from.finish_routine_op());
      break;
    }
    case kFinishDailyTaskGroupOp: {
      mutable_finish_daily_task_group_op()->::proto::FinishDailyTaskUnloadGroupOp::MergeFrom(from.finish_daily_task_group_op());
      break;
    }
    case kRefreshBlossomCircleCampOp: {
      mutable_refresh_blossom_circle_camp_op()->::proto::RefreshBlossomCircleCampOp::MergeFrom(from.refresh_blossom_circle_camp_op());
      break;
    }
    case kBlessingGivePicOp: {
      mutable_blessing_give_pic_op()->::proto::BlessingActivityGivePicOp::MergeFrom(from.blessing_give_pic_op());
      break;
    }
    case kExpeditionAssistOp: {
      mutable_expedition_assist_op()->::proto::ExpeditionActivityAssistOp::MergeFrom(from.expedition_assist_op());
      break;
    }
    case kRecoverWorldLevelOp: {
      mutable_recover_world_level_op()->::proto::RecoverWorldLevelOp::MergeFrom(from.recover_world_level_op());
      break;
    }
    case kForceAcceptQuestOp: {
      mutable_force_accept_quest_op()->::proto::ForceAcceptQuestOp::MergeFrom(from.force_accept_quest_op());
      break;
    }
    case kSetMainCoopConfidenceOp: {
      mutable_set_main_coop_confidence_op()->::proto::SetMainCoopConfidenceOp::MergeFrom(from.set_main_coop_confidence_op());
      break;
    }
    case kAddCoopPointSavePointListOp: {
      mutable_add_coop_point_save_point_list_op()->::proto::AddCoopPointSavePointListOp::MergeFrom(from.add_coop_point_save_point_list_op());
      break;
    }
    case kAddRegionSearchProgressOp: {
      mutable_add_region_search_progress_op()->::proto::AddRegionSearchProgressOp::MergeFrom(from.add_region_search_progress_op());
      break;
    }
    case kSetMatchPunishTimesOp: {
      mutable_set_match_punish_times_op()->::proto::SetMatchPunishTimesOp::MergeFrom(from.set_match_punish_times_op());
      break;
    }
    case kResetChannellerSlabCampGroupOp: {
      mutable_reset_channeller_slab_camp_group_op()->::proto::ResetChannellerSlabCampGroupOp::MergeFrom(from.reset_channeller_slab_camp_group_op());
      break;
    }
    case kProcSceneTagOp: {
      mutable_proc_scene_tag_op()->::proto::ProcSceneTagOp::MergeFrom(from.proc_scene_tag_op());
      break;
    }
    case kSetClimateAreaTypeOp: {
      mutable_set_climate_area_type_op()->::proto::SetClimateAreaTypeOp::MergeFrom(from.set_climate_area_type_op());
      break;
    }
    case kExchangeMcoinOp: {
      mutable_exchange_mcoin_op()->::proto::ExchangeMcoinOp::MergeFrom(from.exchange_mcoin_op());
      break;
    }
    case kSetFinishedParentQuestChildStateOp: {
      mutable_set_finished_parent_quest_child_state_op()->::proto::SetFinishedParentQuestChildStateOp::MergeFrom(from.set_finished_parent_quest_child_state_op());
      break;
    }
    case kSetLevel1AreaExplorePointOp: {
      mutable_set_level1_area_explore_point_op()->::proto::SetLevel1AreaExplorePointOp::MergeFrom(from.set_level1_area_explore_point_op());
      break;
    }
    case kSetCodexOpenOrCloseOp: {
      mutable_set_codex_open_or_close_op()->::proto::SetCodexOpenOrCloseOp::MergeFrom(from.set_codex_open_or_close_op());
      break;
    }
    case kChangeMapAreaInfoOp: {
      mutable_change_map_area_info_op()->::proto::ChangeMapAreaInfoOp::MergeFrom(from.change_map_area_info_op());
      break;
    }
    case kGroupLinkOp: {
      mutable_group_link_op()->::proto::GroupLinkOp::MergeFrom(from.group_link_op());
      break;
    }
    case kSetWatcherCompRecordValueOp: {
      mutable_set_watcher_comp_record_value_op()->::proto::SetWatcherCompRecordValueOp::MergeFrom(from.set_watcher_comp_record_value_op());
      break;
    }
    case kAddFriendOp: {
      mutable_add_friend_op()->::proto::AddFriendOp::MergeFrom(from.add_friend_op());
      break;
    }
    case kDelFriendOp: {
      mutable_del_friend_op()->::proto::DelFriendOp::MergeFrom(from.del_friend_op());
      break;
    }
    case kAddFriendAskOp: {
      mutable_add_friend_ask_op()->::proto::AddFriendAskOp::MergeFrom(from.add_friend_ask_op());
      break;
    }
    case kDelFriendAskOp: {
      mutable_del_friend_ask_op()->::proto::DelFriendAskOp::MergeFrom(from.del_friend_ask_op());
      break;
    }
    case kBanCustomDungeonOp: {
      mutable_ban_custom_dungeon_op()->::proto::BanCustomDungeonOp::MergeFrom(from.ban_custom_dungeon_op());
      break;
    }
    case kRemoveInvalidMapMarksOp: {
      mutable_remove_invalid_map_marks_op()->::proto::RemoveInvalidMapMarksOp::MergeFrom(from.remove_invalid_map_marks_op());
      break;
    }
    case kRecalculateAreaExplorePointOp: {
      mutable_recalculate_area_explore_point_op()->::proto::RecalculateAreaExplorePointOp::MergeFrom(from.recalculate_area_explore_point_op());
      break;
    }
    case kNicknameAuditResultOp: {
      mutable_nickname_audit_result_op()->::proto::NicknameAuditResultOp::MergeFrom(from.nickname_audit_result_op());
      break;
    }
    case kSignatureAuditResultOp: {
      mutable_signature_audit_result_op()->::proto::SignatureAuditResultOp::MergeFrom(from.signature_audit_result_op());
      break;
    }
    case kPassHomeSceneArrangementAuditOp: {
      mutable_pass_home_scene_arrangement_audit_op()->::proto::PassHomeSceneArrangementAuditOp::MergeFrom(from.pass_home_scene_arrangement_audit_op());
      break;
    }
    case kFailHomeSceneArrangementAuditOp: {
      mutable_fail_home_scene_arrangement_audit_op()->::proto::FailHomeSceneArrangementAuditOp::MergeFrom(from.fail_home_scene_arrangement_audit_op());
      break;
    }
    case kFailHomeModulesArrangementAuditOp: {
      mutable_fail_home_modules_arrangement_audit_op()->::proto::FailHomeModulesArrangementAuditOp::MergeFrom(from.fail_home_modules_arrangement_audit_op());
      break;
    }
    case kBanUgcPublishOp: {
      mutable_ban_ugc_publish_op()->::proto::BanUgcPublishOp::MergeFrom(from.ban_ugc_publish_op());
      break;
    }
    case kResetPlayerPersistentDungeonOp: {
      mutable_reset_player_persistent_dungeon_op()->::proto::ResetPlayerPersistentDungeonOp::MergeFrom(from.reset_player_persistent_dungeon_op());
      break;
    }
    case kResetPlayerPosInPersistentDungeonOp: {
      mutable_reset_player_pos_in_persistent_dungeon_op()->::proto::ResetPlayerPosInPersistentDungeonOp::MergeFrom(from.reset_player_pos_in_persistent_dungeon_op());
      break;
    }
    case kLevelTagChangeOp: {
      mutable_level_tag_change_op()->::proto::LevelTagChangeOp::MergeFrom(from.level_tag_change_op());
      break;
    }
    case kResetPlayerWayPointInPersistentDungeonOp: {
      mutable_reset_player_way_point_in_persistent_dungeon_op()->::proto::ResetPlayerWayPointInPersistentDungeonOp::MergeFrom(from.reset_player_way_point_in_persistent_dungeon_op());
      break;
    }
    case kExhibitionSetOp: {
      mutable_exhibition_set_op()->::proto::ExhibitionSetOp::MergeFrom(from.exhibition_set_op());
      break;
    }
    case kSetAvatarExtraPropOp: {
      mutable_set_avatar_extra_prop_op()->::proto::SetAvatarExtraPropOp::MergeFrom(from.set_avatar_extra_prop_op());
      break;
    }
    case kAddItemWithLimitOp: {
      mutable_add_item_with_limit_op()->::proto::AddItemWithLimitOp::MergeFrom(from.add_item_with_limit_op());
      break;
    }
    case kSetGadgetChainLevelOp: {
      mutable_set_gadget_chain_level_op()->::proto::SetGadgetChainLevelOp::MergeFrom(from.set_gadget_chain_level_op());
      break;
    }
    case kSetDailyTaskVarOp: {
      mutable_set_daily_task_var_op()->::proto::SetDailyTaskVarOp::MergeFrom(from.set_daily_task_var_op());
      break;
    }
    case kAvatarRenameAuditResultOp: {
      mutable_avatar_rename_audit_result_op()->::proto::AvatarRenameAuditResultOp::MergeFrom(from.avatar_rename_audit_result_op());
      break;
    }
    case kResetAvatarRenameOp: {
      mutable_reset_avatar_rename_op()->::proto::ResetAvatarRenameOp::MergeFrom(from.reset_avatar_rename_op());
      break;
    }
    case kAddFinishedTalkOp: {
      mutable_add_finished_talk_op()->::proto::AddFinishedTalkOp::MergeFrom(from.add_finished_talk_op());
      break;
    }
    case kDelFinishedTalkOp: {
      mutable_del_finished_talk_op()->::proto::DelFinishedTalkOp::MergeFrom(from.del_finished_talk_op());
      break;
    }
    case kSetPlayerGcgMatchScoreOp: {
      mutable_set_player_gcg_match_score_op()->::proto::SetPlayerGCGMatchScoreOp::MergeFrom(from.set_player_gcg_match_score_op());
      break;
    }
    case kSetPushTipsStateOp: {
      mutable_set_push_tips_state_op()->::proto::SetPushTipsStateOp::MergeFrom(from.set_push_tips_state_op());
      break;
    }
    case kDeletePlayerGcgCardOp: {
      mutable_delete_player_gcg_card_op()->::proto::DeletePlayerGCGCardOp::MergeFrom(from.delete_player_gcg_card_op());
      break;
    }
    case kDeletePlayerGcgCardFaceOp: {
      mutable_delete_player_gcg_card_face_op()->::proto::DeletePlayerGCGCardFaceOp::MergeFrom(from.delete_player_gcg_card_face_op());
      break;
    }
    case kDeletePlayerGcgCardBackOp: {
      mutable_delete_player_gcg_card_back_op()->::proto::DeletePlayerGCGCardBackOp::MergeFrom(from.delete_player_gcg_card_back_op());
      break;
    }
    case kDeletePlayerGcgDeckFieldOp: {
      mutable_delete_player_gcg_deck_field_op()->::proto::DeletePlayerGCGDeckFieldOp::MergeFrom(from.delete_player_gcg_deck_field_op());
      break;
    }
    case kBanPlayerGcgMatchOp: {
      mutable_ban_player_gcg_match_op()->::proto::BanPlayerGCGMatchOp::MergeFrom(from.ban_player_gcg_match_op());
      break;
    }
    case kBanPlayerGcgPvpOp: {
      mutable_ban_player_gcg_pvp_op()->::proto::BanPlayerGCGPVPOp::MergeFrom(from.ban_player_gcg_pvp_op());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.OfflineMsgBin)
}

void OfflineMsgBin::SharedCtor() {
  ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&enque_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&enque_time_)) + sizeof(index_));
  clear_has_detail();
  _cached_size_ = 0;
}

OfflineMsgBin::~OfflineMsgBin() {
  // @@protoc_insertion_point(destructor:proto.OfflineMsgBin)
  SharedDtor();
}

void OfflineMsgBin::SharedDtor() {
  ticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_detail()) {
    clear_detail();
  }
}

void OfflineMsgBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OfflineMsgBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OfflineMsgBin& OfflineMsgBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

OfflineMsgBin* OfflineMsgBin::New(::google::protobuf::Arena* arena) const {
  OfflineMsgBin* n = new OfflineMsgBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OfflineMsgBin::clear_detail() {
// @@protoc_insertion_point(one_of_clear_start:proto.OfflineMsgBin)
  switch (detail_case()) {
    case kDelItemOp: {
      delete detail_.del_item_op_;
      break;
    }
    case kGotoOp: {
      delete detail_.goto_op_;
      break;
    }
    case kResetParentQuestOp: {
      delete detail_.reset_parent_quest_op_;
      break;
    }
    case kRefreshGroupOp: {
      delete detail_.refresh_group_op_;
      break;
    }
    case kSetScenePointLockStatusOp: {
      delete detail_.set_scene_point_lock_status_op_;
      break;
    }
    case kSetNickNameOp: {
      delete detail_.set_nick_name_op_;
      break;
    }
    case kRefreshShopOp: {
      delete detail_.refresh_shop_op_;
      break;
    }
    case kUnlockTalentOp: {
      delete detail_.unlock_talent_op_;
      break;
    }
    case kTakeOffEquipOp: {
      delete detail_.take_off_equip_op_;
      break;
    }
    case kDelMailOp: {
      delete detail_.del_mail_op_;
      break;
    }
    case kFinishDailyTaskOp: {
      delete detail_.finish_daily_task_op_;
      break;
    }
    case kUnlockAreaOp: {
      delete detail_.unlock_area_op_;
      break;
    }
    case kDelItemNegativeOp: {
      delete detail_.del_item_negative_op_;
      break;
    }
    case kDelEquipOp: {
      delete detail_.del_equip_op_;
      break;
    }
    case kAddItemOp: {
      delete detail_.add_item_op_;
      break;
    }
    case kModifyBornPosOp: {
      delete detail_.modify_born_pos_op_;
      break;
    }
    case kSubCoinNegativeOp: {
      delete detail_.sub_coin_negative_op_;
      break;
    }
    case kSetQuestContentProgressOp: {
      delete detail_.set_quest_content_progress_op_;
      break;
    }
    case kFinishOrderOp: {
      delete detail_.finish_order_op_;
      break;
    }
    case kAddOrModifyWatcherOp: {
      delete detail_.add_or_modify_watcher_op_;
      break;
    }
    case kDelWatcherOp: {
      delete detail_.del_watcher_op_;
      break;
    }
    case kSetSignatureOp: {
      delete detail_.set_signature_op_;
      break;
    }
    case kAddOrSubResinOp: {
      delete detail_.add_or_sub_resin_op_;
      break;
    }
    case kSetQuestGlobalVarValueOp: {
      delete detail_.set_quest_global_var_value_op_;
      break;
    }
    case kAddMcoinOp: {
      delete detail_.add_mcoin_op_;
      break;
    }
    case kGroupBinOp: {
      delete detail_.group_bin_op_;
      break;
    }
    case kDelOneOffOp: {
      delete detail_.del_one_off_op_;
      break;
    }
    case kFinishRoutineOp: {
      delete detail_.finish_routine_op_;
      break;
    }
    case kFinishDailyTaskGroupOp: {
      delete detail_.finish_daily_task_group_op_;
      break;
    }
    case kRefreshBlossomCircleCampOp: {
      delete detail_.refresh_blossom_circle_camp_op_;
      break;
    }
    case kBlessingGivePicOp: {
      delete detail_.blessing_give_pic_op_;
      break;
    }
    case kExpeditionAssistOp: {
      delete detail_.expedition_assist_op_;
      break;
    }
    case kRecoverWorldLevelOp: {
      delete detail_.recover_world_level_op_;
      break;
    }
    case kForceAcceptQuestOp: {
      delete detail_.force_accept_quest_op_;
      break;
    }
    case kSetMainCoopConfidenceOp: {
      delete detail_.set_main_coop_confidence_op_;
      break;
    }
    case kAddCoopPointSavePointListOp: {
      delete detail_.add_coop_point_save_point_list_op_;
      break;
    }
    case kAddRegionSearchProgressOp: {
      delete detail_.add_region_search_progress_op_;
      break;
    }
    case kSetMatchPunishTimesOp: {
      delete detail_.set_match_punish_times_op_;
      break;
    }
    case kResetChannellerSlabCampGroupOp: {
      delete detail_.reset_channeller_slab_camp_group_op_;
      break;
    }
    case kProcSceneTagOp: {
      delete detail_.proc_scene_tag_op_;
      break;
    }
    case kSetClimateAreaTypeOp: {
      delete detail_.set_climate_area_type_op_;
      break;
    }
    case kExchangeMcoinOp: {
      delete detail_.exchange_mcoin_op_;
      break;
    }
    case kSetFinishedParentQuestChildStateOp: {
      delete detail_.set_finished_parent_quest_child_state_op_;
      break;
    }
    case kSetLevel1AreaExplorePointOp: {
      delete detail_.set_level1_area_explore_point_op_;
      break;
    }
    case kSetCodexOpenOrCloseOp: {
      delete detail_.set_codex_open_or_close_op_;
      break;
    }
    case kChangeMapAreaInfoOp: {
      delete detail_.change_map_area_info_op_;
      break;
    }
    case kGroupLinkOp: {
      delete detail_.group_link_op_;
      break;
    }
    case kSetWatcherCompRecordValueOp: {
      delete detail_.set_watcher_comp_record_value_op_;
      break;
    }
    case kAddFriendOp: {
      delete detail_.add_friend_op_;
      break;
    }
    case kDelFriendOp: {
      delete detail_.del_friend_op_;
      break;
    }
    case kAddFriendAskOp: {
      delete detail_.add_friend_ask_op_;
      break;
    }
    case kDelFriendAskOp: {
      delete detail_.del_friend_ask_op_;
      break;
    }
    case kBanCustomDungeonOp: {
      delete detail_.ban_custom_dungeon_op_;
      break;
    }
    case kRemoveInvalidMapMarksOp: {
      delete detail_.remove_invalid_map_marks_op_;
      break;
    }
    case kRecalculateAreaExplorePointOp: {
      delete detail_.recalculate_area_explore_point_op_;
      break;
    }
    case kNicknameAuditResultOp: {
      delete detail_.nickname_audit_result_op_;
      break;
    }
    case kSignatureAuditResultOp: {
      delete detail_.signature_audit_result_op_;
      break;
    }
    case kPassHomeSceneArrangementAuditOp: {
      delete detail_.pass_home_scene_arrangement_audit_op_;
      break;
    }
    case kFailHomeSceneArrangementAuditOp: {
      delete detail_.fail_home_scene_arrangement_audit_op_;
      break;
    }
    case kFailHomeModulesArrangementAuditOp: {
      delete detail_.fail_home_modules_arrangement_audit_op_;
      break;
    }
    case kBanUgcPublishOp: {
      delete detail_.ban_ugc_publish_op_;
      break;
    }
    case kResetPlayerPersistentDungeonOp: {
      delete detail_.reset_player_persistent_dungeon_op_;
      break;
    }
    case kResetPlayerPosInPersistentDungeonOp: {
      delete detail_.reset_player_pos_in_persistent_dungeon_op_;
      break;
    }
    case kLevelTagChangeOp: {
      delete detail_.level_tag_change_op_;
      break;
    }
    case kResetPlayerWayPointInPersistentDungeonOp: {
      delete detail_.reset_player_way_point_in_persistent_dungeon_op_;
      break;
    }
    case kExhibitionSetOp: {
      delete detail_.exhibition_set_op_;
      break;
    }
    case kSetAvatarExtraPropOp: {
      delete detail_.set_avatar_extra_prop_op_;
      break;
    }
    case kAddItemWithLimitOp: {
      delete detail_.add_item_with_limit_op_;
      break;
    }
    case kSetGadgetChainLevelOp: {
      delete detail_.set_gadget_chain_level_op_;
      break;
    }
    case kSetDailyTaskVarOp: {
      delete detail_.set_daily_task_var_op_;
      break;
    }
    case kAvatarRenameAuditResultOp: {
      delete detail_.avatar_rename_audit_result_op_;
      break;
    }
    case kResetAvatarRenameOp: {
      delete detail_.reset_avatar_rename_op_;
      break;
    }
    case kAddFinishedTalkOp: {
      delete detail_.add_finished_talk_op_;
      break;
    }
    case kDelFinishedTalkOp: {
      delete detail_.del_finished_talk_op_;
      break;
    }
    case kSetPlayerGcgMatchScoreOp: {
      delete detail_.set_player_gcg_match_score_op_;
      break;
    }
    case kSetPushTipsStateOp: {
      delete detail_.set_push_tips_state_op_;
      break;
    }
    case kDeletePlayerGcgCardOp: {
      delete detail_.delete_player_gcg_card_op_;
      break;
    }
    case kDeletePlayerGcgCardFaceOp: {
      delete detail_.delete_player_gcg_card_face_op_;
      break;
    }
    case kDeletePlayerGcgCardBackOp: {
      delete detail_.delete_player_gcg_card_back_op_;
      break;
    }
    case kDeletePlayerGcgDeckFieldOp: {
      delete detail_.delete_player_gcg_deck_field_op_;
      break;
    }
    case kBanPlayerGcgMatchOp: {
      delete detail_.ban_player_gcg_match_op_;
      break;
    }
    case kBanPlayerGcgPvpOp: {
      delete detail_.ban_player_gcg_pvp_op_;
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DETAIL_NOT_SET;
}


void OfflineMsgBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.OfflineMsgBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&enque_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&enque_time_)) + sizeof(index_));
  clear_detail();
  _internal_metadata_.Clear();
}

bool OfflineMsgBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.OfflineMsgBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(264098u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 enque_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &enque_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ticket = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ticket()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ticket().data(), static_cast<int>(this->ticket().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.OfflineMsgBin.ticket"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.DelItemOp del_item_op = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_del_item_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PlayerGotoOp goto_op = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_goto_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ResetParentQuestOp reset_parent_quest_op = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reset_parent_quest_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.RefreshGroupOp refresh_group_op = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_refresh_group_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SetScenePointLockStatusOp set_scene_point_lock_status_op = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_scene_point_lock_status_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SetPlayerNickNameOp set_nick_name_op = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_nick_name_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.RefreshShopOp refresh_shop_op = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_refresh_shop_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.UnlockTalentOp unlock_talent_op = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_unlock_talent_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.TakeOffEquipOp take_off_equip_op = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_take_off_equip_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.DelMailOp del_mail_op = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_del_mail_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FinishDailyTaskOp finish_daily_task_op = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_finish_daily_task_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.UnlockAreaOp unlock_area_op = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_unlock_area_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.DelItemNegativeOp del_item_negative_op = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_del_item_negative_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.DelEquipOp del_equip_op = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_del_equip_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AddItemOp add_item_op = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_add_item_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ModifyBornPosOp modify_born_pos_op = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_modify_born_pos_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SubCoinNegativeOp sub_coin_negative_op = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sub_coin_negative_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SetQuestContentProgressOp set_quest_content_progress_op = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_quest_content_progress_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FinishOrderOp finish_order_op = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_finish_order_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AddOrModifyWatcherOp add_or_modify_watcher_op = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_add_or_modify_watcher_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.DelWatcherOp del_watcher_op = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_del_watcher_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SetSignatureOp set_signature_op = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_signature_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AddOrSubResinOp add_or_sub_resin_op = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_add_or_sub_resin_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SetQuestGlobalVarValueOp set_quest_global_var_value_op = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_quest_global_var_value_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AddMcoinVipPointOp add_mcoin_op = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_add_mcoin_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.GroupBinOp group_bin_op = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_group_bin_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.DelOneOffOp del_one_off_op = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_del_one_off_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FinishRoutineOp finish_routine_op = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_finish_routine_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FinishDailyTaskUnloadGroupOp finish_daily_task_group_op = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_finish_daily_task_group_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.RefreshBlossomCircleCampOp refresh_blossom_circle_camp_op = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_refresh_blossom_circle_camp_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.BlessingActivityGivePicOp blessing_give_pic_op = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_blessing_give_pic_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ExpeditionActivityAssistOp expedition_assist_op = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_expedition_assist_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.RecoverWorldLevelOp recover_world_level_op = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 290 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_recover_world_level_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ForceAcceptQuestOp force_accept_quest_op = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_force_accept_quest_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SetMainCoopConfidenceOp set_main_coop_confidence_op = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 306 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_main_coop_confidence_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AddCoopPointSavePointListOp add_coop_point_save_point_list_op = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 314 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_add_coop_point_save_point_list_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AddRegionSearchProgressOp add_region_search_progress_op = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_add_region_search_progress_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SetMatchPunishTimesOp set_match_punish_times_op = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 330 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_match_punish_times_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ResetChannellerSlabCampGroupOp reset_channeller_slab_camp_group_op = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 338 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reset_channeller_slab_camp_group_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ProcSceneTagOp proc_scene_tag_op = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 346 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_proc_scene_tag_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SetClimateAreaTypeOp set_climate_area_type_op = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 354 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_climate_area_type_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ExchangeMcoinOp exchange_mcoin_op = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 362 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_exchange_mcoin_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SetFinishedParentQuestChildStateOp set_finished_parent_quest_child_state_op = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 370 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_finished_parent_quest_child_state_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SetLevel1AreaExplorePointOp set_level1_area_explore_point_op = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 378 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_level1_area_explore_point_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SetCodexOpenOrCloseOp set_codex_open_or_close_op = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_codex_open_or_close_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ChangeMapAreaInfoOp change_map_area_info_op = 49;
      case 49: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 394 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_change_map_area_info_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.GroupLinkOp group_link_op = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_group_link_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SetWatcherCompRecordValueOp set_watcher_comp_record_value_op = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_watcher_comp_record_value_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AddFriendOp add_friend_op = 52;
      case 52: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 418 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_add_friend_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.DelFriendOp del_friend_op = 53;
      case 53: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 426 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_del_friend_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AddFriendAskOp add_friend_ask_op = 54;
      case 54: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 434 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_add_friend_ask_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.DelFriendAskOp del_friend_ask_op = 55;
      case 55: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 442 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_del_friend_ask_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.BanCustomDungeonOp ban_custom_dungeon_op = 56;
      case 56: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 450 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ban_custom_dungeon_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.RemoveInvalidMapMarksOp remove_invalid_map_marks_op = 57;
      case 57: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 458 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_remove_invalid_map_marks_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.RecalculateAreaExplorePointOp recalculate_area_explore_point_op = 58;
      case 58: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 466 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_recalculate_area_explore_point_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.NicknameAuditResultOp nickname_audit_result_op = 59;
      case 59: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 474 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nickname_audit_result_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SignatureAuditResultOp signature_audit_result_op = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_signature_audit_result_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PassHomeSceneArrangementAuditOp pass_home_scene_arrangement_audit_op = 61;
      case 61: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 490 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pass_home_scene_arrangement_audit_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FailHomeSceneArrangementAuditOp fail_home_scene_arrangement_audit_op = 62;
      case 62: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 498 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fail_home_scene_arrangement_audit_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FailHomeModulesArrangementAuditOp fail_home_modules_arrangement_audit_op = 63;
      case 63: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 506 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fail_home_modules_arrangement_audit_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.BanUgcPublishOp ban_ugc_publish_op = 64;
      case 64: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 514 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ban_ugc_publish_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ResetPlayerPersistentDungeonOp reset_player_persistent_dungeon_op = 28001;
      case 28001: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 224010 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reset_player_persistent_dungeon_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ResetPlayerPosInPersistentDungeonOp reset_player_pos_in_persistent_dungeon_op = 28002;
      case 28002: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 224018 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reset_player_pos_in_persistent_dungeon_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.LevelTagChangeOp level_tag_change_op = 28003;
      case 28003: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 224026 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_level_tag_change_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ResetPlayerWayPointInPersistentDungeonOp reset_player_way_point_in_persistent_dungeon_op = 28004;
      case 28004: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 224034 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reset_player_way_point_in_persistent_dungeon_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ExhibitionSetOp exhibition_set_op = 30000;
      case 30000: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 240002 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_exhibition_set_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SetAvatarExtraPropOp set_avatar_extra_prop_op = 30001;
      case 30001: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 240010 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_avatar_extra_prop_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AddItemWithLimitOp add_item_with_limit_op = 30002;
      case 30002: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 240018 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_add_item_with_limit_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SetGadgetChainLevelOp set_gadget_chain_level_op = 31001;
      case 31001: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 248010 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_gadget_chain_level_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SetDailyTaskVarOp set_daily_task_var_op = 32001;
      case 32001: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 256010 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_daily_task_var_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AvatarRenameAuditResultOp avatar_rename_audit_result_op = 33001;
      case 33001: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 264010 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_avatar_rename_audit_result_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ResetAvatarRenameOp reset_avatar_rename_op = 33002;
      case 33002: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 264018 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reset_avatar_rename_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AddFinishedTalkOp add_finished_talk_op = 33003;
      case 33003: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 264026 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_add_finished_talk_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.DelFinishedTalkOp del_finished_talk_op = 33004;
      case 33004: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 264034 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_del_finished_talk_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SetPlayerGCGMatchScoreOp set_player_gcg_match_score_op = 33005;
      case 33005: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 264042 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_player_gcg_match_score_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SetPushTipsStateOp set_push_tips_state_op = 33006;
      case 33006: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 264050 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_push_tips_state_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.DeletePlayerGCGCardOp delete_player_gcg_card_op = 33007;
      case 33007: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 264058 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_delete_player_gcg_card_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.DeletePlayerGCGCardFaceOp delete_player_gcg_card_face_op = 33008;
      case 33008: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 264066 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_delete_player_gcg_card_face_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.DeletePlayerGCGCardBackOp delete_player_gcg_card_back_op = 33009;
      case 33009: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 264074 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_delete_player_gcg_card_back_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.DeletePlayerGCGDeckFieldOp delete_player_gcg_deck_field_op = 33010;
      case 33010: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 264082 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_delete_player_gcg_deck_field_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.BanPlayerGCGMatchOp ban_player_gcg_match_op = 33011;
      case 33011: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 264090 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ban_player_gcg_match_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.BanPlayerGCGPVPOp ban_player_gcg_pvp_op = 33012;
      case 33012: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 264098 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ban_player_gcg_pvp_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.OfflineMsgBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.OfflineMsgBin)
  return false;
#undef DO_
}

void OfflineMsgBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.OfflineMsgBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 enque_time = 1;
  if (this->enque_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->enque_time(), output);
  }

  // string ticket = 2;
  if (this->ticket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ticket().data(), static_cast<int>(this->ticket().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.OfflineMsgBin.ticket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ticket(), output);
  }

  // uint32 index = 3;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->index(), output);
  }

  // .proto.DelItemOp del_item_op = 4;
  if (has_del_item_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *detail_.del_item_op_, output);
  }

  // .proto.PlayerGotoOp goto_op = 5;
  if (has_goto_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *detail_.goto_op_, output);
  }

  // .proto.ResetParentQuestOp reset_parent_quest_op = 6;
  if (has_reset_parent_quest_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *detail_.reset_parent_quest_op_, output);
  }

  // .proto.RefreshGroupOp refresh_group_op = 7;
  if (has_refresh_group_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *detail_.refresh_group_op_, output);
  }

  // .proto.SetScenePointLockStatusOp set_scene_point_lock_status_op = 8;
  if (has_set_scene_point_lock_status_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *detail_.set_scene_point_lock_status_op_, output);
  }

  // .proto.SetPlayerNickNameOp set_nick_name_op = 9;
  if (has_set_nick_name_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *detail_.set_nick_name_op_, output);
  }

  // .proto.RefreshShopOp refresh_shop_op = 10;
  if (has_refresh_shop_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *detail_.refresh_shop_op_, output);
  }

  // .proto.UnlockTalentOp unlock_talent_op = 11;
  if (has_unlock_talent_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *detail_.unlock_talent_op_, output);
  }

  // .proto.TakeOffEquipOp take_off_equip_op = 12;
  if (has_take_off_equip_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *detail_.take_off_equip_op_, output);
  }

  // .proto.DelMailOp del_mail_op = 13;
  if (has_del_mail_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *detail_.del_mail_op_, output);
  }

  // .proto.FinishDailyTaskOp finish_daily_task_op = 14;
  if (has_finish_daily_task_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *detail_.finish_daily_task_op_, output);
  }

  // .proto.UnlockAreaOp unlock_area_op = 15;
  if (has_unlock_area_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *detail_.unlock_area_op_, output);
  }

  // .proto.DelItemNegativeOp del_item_negative_op = 16;
  if (has_del_item_negative_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *detail_.del_item_negative_op_, output);
  }

  // .proto.DelEquipOp del_equip_op = 17;
  if (has_del_equip_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *detail_.del_equip_op_, output);
  }

  // .proto.AddItemOp add_item_op = 18;
  if (has_add_item_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *detail_.add_item_op_, output);
  }

  // .proto.ModifyBornPosOp modify_born_pos_op = 19;
  if (has_modify_born_pos_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, *detail_.modify_born_pos_op_, output);
  }

  // .proto.SubCoinNegativeOp sub_coin_negative_op = 20;
  if (has_sub_coin_negative_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *detail_.sub_coin_negative_op_, output);
  }

  // .proto.SetQuestContentProgressOp set_quest_content_progress_op = 21;
  if (has_set_quest_content_progress_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, *detail_.set_quest_content_progress_op_, output);
  }

  // .proto.FinishOrderOp finish_order_op = 22;
  if (has_finish_order_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, *detail_.finish_order_op_, output);
  }

  // .proto.AddOrModifyWatcherOp add_or_modify_watcher_op = 23;
  if (has_add_or_modify_watcher_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, *detail_.add_or_modify_watcher_op_, output);
  }

  // .proto.DelWatcherOp del_watcher_op = 24;
  if (has_del_watcher_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, *detail_.del_watcher_op_, output);
  }

  // .proto.SetSignatureOp set_signature_op = 25;
  if (has_set_signature_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, *detail_.set_signature_op_, output);
  }

  // .proto.AddOrSubResinOp add_or_sub_resin_op = 26;
  if (has_add_or_sub_resin_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, *detail_.add_or_sub_resin_op_, output);
  }

  // .proto.SetQuestGlobalVarValueOp set_quest_global_var_value_op = 27;
  if (has_set_quest_global_var_value_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, *detail_.set_quest_global_var_value_op_, output);
  }

  // .proto.AddMcoinVipPointOp add_mcoin_op = 28;
  if (has_add_mcoin_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, *detail_.add_mcoin_op_, output);
  }

  // .proto.GroupBinOp group_bin_op = 29;
  if (has_group_bin_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, *detail_.group_bin_op_, output);
  }

  // .proto.DelOneOffOp del_one_off_op = 30;
  if (has_del_one_off_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, *detail_.del_one_off_op_, output);
  }

  // .proto.FinishRoutineOp finish_routine_op = 31;
  if (has_finish_routine_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, *detail_.finish_routine_op_, output);
  }

  // .proto.FinishDailyTaskUnloadGroupOp finish_daily_task_group_op = 32;
  if (has_finish_daily_task_group_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, *detail_.finish_daily_task_group_op_, output);
  }

  // .proto.RefreshBlossomCircleCampOp refresh_blossom_circle_camp_op = 33;
  if (has_refresh_blossom_circle_camp_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, *detail_.refresh_blossom_circle_camp_op_, output);
  }

  // .proto.BlessingActivityGivePicOp blessing_give_pic_op = 34;
  if (has_blessing_give_pic_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34, *detail_.blessing_give_pic_op_, output);
  }

  // .proto.ExpeditionActivityAssistOp expedition_assist_op = 35;
  if (has_expedition_assist_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      35, *detail_.expedition_assist_op_, output);
  }

  // .proto.RecoverWorldLevelOp recover_world_level_op = 36;
  if (has_recover_world_level_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      36, *detail_.recover_world_level_op_, output);
  }

  // .proto.ForceAcceptQuestOp force_accept_quest_op = 37;
  if (has_force_accept_quest_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      37, *detail_.force_accept_quest_op_, output);
  }

  // .proto.SetMainCoopConfidenceOp set_main_coop_confidence_op = 38;
  if (has_set_main_coop_confidence_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      38, *detail_.set_main_coop_confidence_op_, output);
  }

  // .proto.AddCoopPointSavePointListOp add_coop_point_save_point_list_op = 39;
  if (has_add_coop_point_save_point_list_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      39, *detail_.add_coop_point_save_point_list_op_, output);
  }

  // .proto.AddRegionSearchProgressOp add_region_search_progress_op = 40;
  if (has_add_region_search_progress_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40, *detail_.add_region_search_progress_op_, output);
  }

  // .proto.SetMatchPunishTimesOp set_match_punish_times_op = 41;
  if (has_set_match_punish_times_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      41, *detail_.set_match_punish_times_op_, output);
  }

  // .proto.ResetChannellerSlabCampGroupOp reset_channeller_slab_camp_group_op = 42;
  if (has_reset_channeller_slab_camp_group_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      42, *detail_.reset_channeller_slab_camp_group_op_, output);
  }

  // .proto.ProcSceneTagOp proc_scene_tag_op = 43;
  if (has_proc_scene_tag_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      43, *detail_.proc_scene_tag_op_, output);
  }

  // .proto.SetClimateAreaTypeOp set_climate_area_type_op = 44;
  if (has_set_climate_area_type_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      44, *detail_.set_climate_area_type_op_, output);
  }

  // .proto.ExchangeMcoinOp exchange_mcoin_op = 45;
  if (has_exchange_mcoin_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      45, *detail_.exchange_mcoin_op_, output);
  }

  // .proto.SetFinishedParentQuestChildStateOp set_finished_parent_quest_child_state_op = 46;
  if (has_set_finished_parent_quest_child_state_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      46, *detail_.set_finished_parent_quest_child_state_op_, output);
  }

  // .proto.SetLevel1AreaExplorePointOp set_level1_area_explore_point_op = 47;
  if (has_set_level1_area_explore_point_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      47, *detail_.set_level1_area_explore_point_op_, output);
  }

  // .proto.SetCodexOpenOrCloseOp set_codex_open_or_close_op = 48;
  if (has_set_codex_open_or_close_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      48, *detail_.set_codex_open_or_close_op_, output);
  }

  // .proto.ChangeMapAreaInfoOp change_map_area_info_op = 49;
  if (has_change_map_area_info_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      49, *detail_.change_map_area_info_op_, output);
  }

  // .proto.GroupLinkOp group_link_op = 50;
  if (has_group_link_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, *detail_.group_link_op_, output);
  }

  // .proto.SetWatcherCompRecordValueOp set_watcher_comp_record_value_op = 51;
  if (has_set_watcher_comp_record_value_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      51, *detail_.set_watcher_comp_record_value_op_, output);
  }

  // .proto.AddFriendOp add_friend_op = 52;
  if (has_add_friend_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      52, *detail_.add_friend_op_, output);
  }

  // .proto.DelFriendOp del_friend_op = 53;
  if (has_del_friend_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      53, *detail_.del_friend_op_, output);
  }

  // .proto.AddFriendAskOp add_friend_ask_op = 54;
  if (has_add_friend_ask_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      54, *detail_.add_friend_ask_op_, output);
  }

  // .proto.DelFriendAskOp del_friend_ask_op = 55;
  if (has_del_friend_ask_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      55, *detail_.del_friend_ask_op_, output);
  }

  // .proto.BanCustomDungeonOp ban_custom_dungeon_op = 56;
  if (has_ban_custom_dungeon_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      56, *detail_.ban_custom_dungeon_op_, output);
  }

  // .proto.RemoveInvalidMapMarksOp remove_invalid_map_marks_op = 57;
  if (has_remove_invalid_map_marks_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      57, *detail_.remove_invalid_map_marks_op_, output);
  }

  // .proto.RecalculateAreaExplorePointOp recalculate_area_explore_point_op = 58;
  if (has_recalculate_area_explore_point_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      58, *detail_.recalculate_area_explore_point_op_, output);
  }

  // .proto.NicknameAuditResultOp nickname_audit_result_op = 59;
  if (has_nickname_audit_result_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      59, *detail_.nickname_audit_result_op_, output);
  }

  // .proto.SignatureAuditResultOp signature_audit_result_op = 60;
  if (has_signature_audit_result_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      60, *detail_.signature_audit_result_op_, output);
  }

  // .proto.PassHomeSceneArrangementAuditOp pass_home_scene_arrangement_audit_op = 61;
  if (has_pass_home_scene_arrangement_audit_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      61, *detail_.pass_home_scene_arrangement_audit_op_, output);
  }

  // .proto.FailHomeSceneArrangementAuditOp fail_home_scene_arrangement_audit_op = 62;
  if (has_fail_home_scene_arrangement_audit_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      62, *detail_.fail_home_scene_arrangement_audit_op_, output);
  }

  // .proto.FailHomeModulesArrangementAuditOp fail_home_modules_arrangement_audit_op = 63;
  if (has_fail_home_modules_arrangement_audit_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      63, *detail_.fail_home_modules_arrangement_audit_op_, output);
  }

  // .proto.BanUgcPublishOp ban_ugc_publish_op = 64;
  if (has_ban_ugc_publish_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      64, *detail_.ban_ugc_publish_op_, output);
  }

  // .proto.ResetPlayerPersistentDungeonOp reset_player_persistent_dungeon_op = 28001;
  if (has_reset_player_persistent_dungeon_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28001, *detail_.reset_player_persistent_dungeon_op_, output);
  }

  // .proto.ResetPlayerPosInPersistentDungeonOp reset_player_pos_in_persistent_dungeon_op = 28002;
  if (has_reset_player_pos_in_persistent_dungeon_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28002, *detail_.reset_player_pos_in_persistent_dungeon_op_, output);
  }

  // .proto.LevelTagChangeOp level_tag_change_op = 28003;
  if (has_level_tag_change_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28003, *detail_.level_tag_change_op_, output);
  }

  // .proto.ResetPlayerWayPointInPersistentDungeonOp reset_player_way_point_in_persistent_dungeon_op = 28004;
  if (has_reset_player_way_point_in_persistent_dungeon_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28004, *detail_.reset_player_way_point_in_persistent_dungeon_op_, output);
  }

  // .proto.ExhibitionSetOp exhibition_set_op = 30000;
  if (has_exhibition_set_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30000, *detail_.exhibition_set_op_, output);
  }

  // .proto.SetAvatarExtraPropOp set_avatar_extra_prop_op = 30001;
  if (has_set_avatar_extra_prop_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30001, *detail_.set_avatar_extra_prop_op_, output);
  }

  // .proto.AddItemWithLimitOp add_item_with_limit_op = 30002;
  if (has_add_item_with_limit_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30002, *detail_.add_item_with_limit_op_, output);
  }

  // .proto.SetGadgetChainLevelOp set_gadget_chain_level_op = 31001;
  if (has_set_gadget_chain_level_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31001, *detail_.set_gadget_chain_level_op_, output);
  }

  // .proto.SetDailyTaskVarOp set_daily_task_var_op = 32001;
  if (has_set_daily_task_var_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32001, *detail_.set_daily_task_var_op_, output);
  }

  // .proto.AvatarRenameAuditResultOp avatar_rename_audit_result_op = 33001;
  if (has_avatar_rename_audit_result_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33001, *detail_.avatar_rename_audit_result_op_, output);
  }

  // .proto.ResetAvatarRenameOp reset_avatar_rename_op = 33002;
  if (has_reset_avatar_rename_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33002, *detail_.reset_avatar_rename_op_, output);
  }

  // .proto.AddFinishedTalkOp add_finished_talk_op = 33003;
  if (has_add_finished_talk_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33003, *detail_.add_finished_talk_op_, output);
  }

  // .proto.DelFinishedTalkOp del_finished_talk_op = 33004;
  if (has_del_finished_talk_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33004, *detail_.del_finished_talk_op_, output);
  }

  // .proto.SetPlayerGCGMatchScoreOp set_player_gcg_match_score_op = 33005;
  if (has_set_player_gcg_match_score_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33005, *detail_.set_player_gcg_match_score_op_, output);
  }

  // .proto.SetPushTipsStateOp set_push_tips_state_op = 33006;
  if (has_set_push_tips_state_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33006, *detail_.set_push_tips_state_op_, output);
  }

  // .proto.DeletePlayerGCGCardOp delete_player_gcg_card_op = 33007;
  if (has_delete_player_gcg_card_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33007, *detail_.delete_player_gcg_card_op_, output);
  }

  // .proto.DeletePlayerGCGCardFaceOp delete_player_gcg_card_face_op = 33008;
  if (has_delete_player_gcg_card_face_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33008, *detail_.delete_player_gcg_card_face_op_, output);
  }

  // .proto.DeletePlayerGCGCardBackOp delete_player_gcg_card_back_op = 33009;
  if (has_delete_player_gcg_card_back_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33009, *detail_.delete_player_gcg_card_back_op_, output);
  }

  // .proto.DeletePlayerGCGDeckFieldOp delete_player_gcg_deck_field_op = 33010;
  if (has_delete_player_gcg_deck_field_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33010, *detail_.delete_player_gcg_deck_field_op_, output);
  }

  // .proto.BanPlayerGCGMatchOp ban_player_gcg_match_op = 33011;
  if (has_ban_player_gcg_match_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33011, *detail_.ban_player_gcg_match_op_, output);
  }

  // .proto.BanPlayerGCGPVPOp ban_player_gcg_pvp_op = 33012;
  if (has_ban_player_gcg_pvp_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33012, *detail_.ban_player_gcg_pvp_op_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.OfflineMsgBin)
}

::google::protobuf::uint8* OfflineMsgBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.OfflineMsgBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 enque_time = 1;
  if (this->enque_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->enque_time(), target);
  }

  // string ticket = 2;
  if (this->ticket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ticket().data(), static_cast<int>(this->ticket().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.OfflineMsgBin.ticket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ticket(), target);
  }

  // uint32 index = 3;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->index(), target);
  }

  // .proto.DelItemOp del_item_op = 4;
  if (has_del_item_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *detail_.del_item_op_, deterministic, target);
  }

  // .proto.PlayerGotoOp goto_op = 5;
  if (has_goto_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *detail_.goto_op_, deterministic, target);
  }

  // .proto.ResetParentQuestOp reset_parent_quest_op = 6;
  if (has_reset_parent_quest_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *detail_.reset_parent_quest_op_, deterministic, target);
  }

  // .proto.RefreshGroupOp refresh_group_op = 7;
  if (has_refresh_group_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *detail_.refresh_group_op_, deterministic, target);
  }

  // .proto.SetScenePointLockStatusOp set_scene_point_lock_status_op = 8;
  if (has_set_scene_point_lock_status_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *detail_.set_scene_point_lock_status_op_, deterministic, target);
  }

  // .proto.SetPlayerNickNameOp set_nick_name_op = 9;
  if (has_set_nick_name_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *detail_.set_nick_name_op_, deterministic, target);
  }

  // .proto.RefreshShopOp refresh_shop_op = 10;
  if (has_refresh_shop_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *detail_.refresh_shop_op_, deterministic, target);
  }

  // .proto.UnlockTalentOp unlock_talent_op = 11;
  if (has_unlock_talent_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *detail_.unlock_talent_op_, deterministic, target);
  }

  // .proto.TakeOffEquipOp take_off_equip_op = 12;
  if (has_take_off_equip_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *detail_.take_off_equip_op_, deterministic, target);
  }

  // .proto.DelMailOp del_mail_op = 13;
  if (has_del_mail_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *detail_.del_mail_op_, deterministic, target);
  }

  // .proto.FinishDailyTaskOp finish_daily_task_op = 14;
  if (has_finish_daily_task_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *detail_.finish_daily_task_op_, deterministic, target);
  }

  // .proto.UnlockAreaOp unlock_area_op = 15;
  if (has_unlock_area_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *detail_.unlock_area_op_, deterministic, target);
  }

  // .proto.DelItemNegativeOp del_item_negative_op = 16;
  if (has_del_item_negative_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, *detail_.del_item_negative_op_, deterministic, target);
  }

  // .proto.DelEquipOp del_equip_op = 17;
  if (has_del_equip_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        17, *detail_.del_equip_op_, deterministic, target);
  }

  // .proto.AddItemOp add_item_op = 18;
  if (has_add_item_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        18, *detail_.add_item_op_, deterministic, target);
  }

  // .proto.ModifyBornPosOp modify_born_pos_op = 19;
  if (has_modify_born_pos_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        19, *detail_.modify_born_pos_op_, deterministic, target);
  }

  // .proto.SubCoinNegativeOp sub_coin_negative_op = 20;
  if (has_sub_coin_negative_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, *detail_.sub_coin_negative_op_, deterministic, target);
  }

  // .proto.SetQuestContentProgressOp set_quest_content_progress_op = 21;
  if (has_set_quest_content_progress_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        21, *detail_.set_quest_content_progress_op_, deterministic, target);
  }

  // .proto.FinishOrderOp finish_order_op = 22;
  if (has_finish_order_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        22, *detail_.finish_order_op_, deterministic, target);
  }

  // .proto.AddOrModifyWatcherOp add_or_modify_watcher_op = 23;
  if (has_add_or_modify_watcher_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        23, *detail_.add_or_modify_watcher_op_, deterministic, target);
  }

  // .proto.DelWatcherOp del_watcher_op = 24;
  if (has_del_watcher_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        24, *detail_.del_watcher_op_, deterministic, target);
  }

  // .proto.SetSignatureOp set_signature_op = 25;
  if (has_set_signature_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        25, *detail_.set_signature_op_, deterministic, target);
  }

  // .proto.AddOrSubResinOp add_or_sub_resin_op = 26;
  if (has_add_or_sub_resin_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        26, *detail_.add_or_sub_resin_op_, deterministic, target);
  }

  // .proto.SetQuestGlobalVarValueOp set_quest_global_var_value_op = 27;
  if (has_set_quest_global_var_value_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        27, *detail_.set_quest_global_var_value_op_, deterministic, target);
  }

  // .proto.AddMcoinVipPointOp add_mcoin_op = 28;
  if (has_add_mcoin_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        28, *detail_.add_mcoin_op_, deterministic, target);
  }

  // .proto.GroupBinOp group_bin_op = 29;
  if (has_group_bin_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        29, *detail_.group_bin_op_, deterministic, target);
  }

  // .proto.DelOneOffOp del_one_off_op = 30;
  if (has_del_one_off_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        30, *detail_.del_one_off_op_, deterministic, target);
  }

  // .proto.FinishRoutineOp finish_routine_op = 31;
  if (has_finish_routine_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        31, *detail_.finish_routine_op_, deterministic, target);
  }

  // .proto.FinishDailyTaskUnloadGroupOp finish_daily_task_group_op = 32;
  if (has_finish_daily_task_group_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        32, *detail_.finish_daily_task_group_op_, deterministic, target);
  }

  // .proto.RefreshBlossomCircleCampOp refresh_blossom_circle_camp_op = 33;
  if (has_refresh_blossom_circle_camp_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        33, *detail_.refresh_blossom_circle_camp_op_, deterministic, target);
  }

  // .proto.BlessingActivityGivePicOp blessing_give_pic_op = 34;
  if (has_blessing_give_pic_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        34, *detail_.blessing_give_pic_op_, deterministic, target);
  }

  // .proto.ExpeditionActivityAssistOp expedition_assist_op = 35;
  if (has_expedition_assist_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        35, *detail_.expedition_assist_op_, deterministic, target);
  }

  // .proto.RecoverWorldLevelOp recover_world_level_op = 36;
  if (has_recover_world_level_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        36, *detail_.recover_world_level_op_, deterministic, target);
  }

  // .proto.ForceAcceptQuestOp force_accept_quest_op = 37;
  if (has_force_accept_quest_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        37, *detail_.force_accept_quest_op_, deterministic, target);
  }

  // .proto.SetMainCoopConfidenceOp set_main_coop_confidence_op = 38;
  if (has_set_main_coop_confidence_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        38, *detail_.set_main_coop_confidence_op_, deterministic, target);
  }

  // .proto.AddCoopPointSavePointListOp add_coop_point_save_point_list_op = 39;
  if (has_add_coop_point_save_point_list_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        39, *detail_.add_coop_point_save_point_list_op_, deterministic, target);
  }

  // .proto.AddRegionSearchProgressOp add_region_search_progress_op = 40;
  if (has_add_region_search_progress_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        40, *detail_.add_region_search_progress_op_, deterministic, target);
  }

  // .proto.SetMatchPunishTimesOp set_match_punish_times_op = 41;
  if (has_set_match_punish_times_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        41, *detail_.set_match_punish_times_op_, deterministic, target);
  }

  // .proto.ResetChannellerSlabCampGroupOp reset_channeller_slab_camp_group_op = 42;
  if (has_reset_channeller_slab_camp_group_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        42, *detail_.reset_channeller_slab_camp_group_op_, deterministic, target);
  }

  // .proto.ProcSceneTagOp proc_scene_tag_op = 43;
  if (has_proc_scene_tag_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        43, *detail_.proc_scene_tag_op_, deterministic, target);
  }

  // .proto.SetClimateAreaTypeOp set_climate_area_type_op = 44;
  if (has_set_climate_area_type_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        44, *detail_.set_climate_area_type_op_, deterministic, target);
  }

  // .proto.ExchangeMcoinOp exchange_mcoin_op = 45;
  if (has_exchange_mcoin_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        45, *detail_.exchange_mcoin_op_, deterministic, target);
  }

  // .proto.SetFinishedParentQuestChildStateOp set_finished_parent_quest_child_state_op = 46;
  if (has_set_finished_parent_quest_child_state_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        46, *detail_.set_finished_parent_quest_child_state_op_, deterministic, target);
  }

  // .proto.SetLevel1AreaExplorePointOp set_level1_area_explore_point_op = 47;
  if (has_set_level1_area_explore_point_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        47, *detail_.set_level1_area_explore_point_op_, deterministic, target);
  }

  // .proto.SetCodexOpenOrCloseOp set_codex_open_or_close_op = 48;
  if (has_set_codex_open_or_close_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        48, *detail_.set_codex_open_or_close_op_, deterministic, target);
  }

  // .proto.ChangeMapAreaInfoOp change_map_area_info_op = 49;
  if (has_change_map_area_info_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        49, *detail_.change_map_area_info_op_, deterministic, target);
  }

  // .proto.GroupLinkOp group_link_op = 50;
  if (has_group_link_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        50, *detail_.group_link_op_, deterministic, target);
  }

  // .proto.SetWatcherCompRecordValueOp set_watcher_comp_record_value_op = 51;
  if (has_set_watcher_comp_record_value_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        51, *detail_.set_watcher_comp_record_value_op_, deterministic, target);
  }

  // .proto.AddFriendOp add_friend_op = 52;
  if (has_add_friend_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        52, *detail_.add_friend_op_, deterministic, target);
  }

  // .proto.DelFriendOp del_friend_op = 53;
  if (has_del_friend_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        53, *detail_.del_friend_op_, deterministic, target);
  }

  // .proto.AddFriendAskOp add_friend_ask_op = 54;
  if (has_add_friend_ask_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        54, *detail_.add_friend_ask_op_, deterministic, target);
  }

  // .proto.DelFriendAskOp del_friend_ask_op = 55;
  if (has_del_friend_ask_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        55, *detail_.del_friend_ask_op_, deterministic, target);
  }

  // .proto.BanCustomDungeonOp ban_custom_dungeon_op = 56;
  if (has_ban_custom_dungeon_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        56, *detail_.ban_custom_dungeon_op_, deterministic, target);
  }

  // .proto.RemoveInvalidMapMarksOp remove_invalid_map_marks_op = 57;
  if (has_remove_invalid_map_marks_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        57, *detail_.remove_invalid_map_marks_op_, deterministic, target);
  }

  // .proto.RecalculateAreaExplorePointOp recalculate_area_explore_point_op = 58;
  if (has_recalculate_area_explore_point_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        58, *detail_.recalculate_area_explore_point_op_, deterministic, target);
  }

  // .proto.NicknameAuditResultOp nickname_audit_result_op = 59;
  if (has_nickname_audit_result_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        59, *detail_.nickname_audit_result_op_, deterministic, target);
  }

  // .proto.SignatureAuditResultOp signature_audit_result_op = 60;
  if (has_signature_audit_result_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        60, *detail_.signature_audit_result_op_, deterministic, target);
  }

  // .proto.PassHomeSceneArrangementAuditOp pass_home_scene_arrangement_audit_op = 61;
  if (has_pass_home_scene_arrangement_audit_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        61, *detail_.pass_home_scene_arrangement_audit_op_, deterministic, target);
  }

  // .proto.FailHomeSceneArrangementAuditOp fail_home_scene_arrangement_audit_op = 62;
  if (has_fail_home_scene_arrangement_audit_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        62, *detail_.fail_home_scene_arrangement_audit_op_, deterministic, target);
  }

  // .proto.FailHomeModulesArrangementAuditOp fail_home_modules_arrangement_audit_op = 63;
  if (has_fail_home_modules_arrangement_audit_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        63, *detail_.fail_home_modules_arrangement_audit_op_, deterministic, target);
  }

  // .proto.BanUgcPublishOp ban_ugc_publish_op = 64;
  if (has_ban_ugc_publish_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        64, *detail_.ban_ugc_publish_op_, deterministic, target);
  }

  // .proto.ResetPlayerPersistentDungeonOp reset_player_persistent_dungeon_op = 28001;
  if (has_reset_player_persistent_dungeon_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        28001, *detail_.reset_player_persistent_dungeon_op_, deterministic, target);
  }

  // .proto.ResetPlayerPosInPersistentDungeonOp reset_player_pos_in_persistent_dungeon_op = 28002;
  if (has_reset_player_pos_in_persistent_dungeon_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        28002, *detail_.reset_player_pos_in_persistent_dungeon_op_, deterministic, target);
  }

  // .proto.LevelTagChangeOp level_tag_change_op = 28003;
  if (has_level_tag_change_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        28003, *detail_.level_tag_change_op_, deterministic, target);
  }

  // .proto.ResetPlayerWayPointInPersistentDungeonOp reset_player_way_point_in_persistent_dungeon_op = 28004;
  if (has_reset_player_way_point_in_persistent_dungeon_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        28004, *detail_.reset_player_way_point_in_persistent_dungeon_op_, deterministic, target);
  }

  // .proto.ExhibitionSetOp exhibition_set_op = 30000;
  if (has_exhibition_set_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        30000, *detail_.exhibition_set_op_, deterministic, target);
  }

  // .proto.SetAvatarExtraPropOp set_avatar_extra_prop_op = 30001;
  if (has_set_avatar_extra_prop_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        30001, *detail_.set_avatar_extra_prop_op_, deterministic, target);
  }

  // .proto.AddItemWithLimitOp add_item_with_limit_op = 30002;
  if (has_add_item_with_limit_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        30002, *detail_.add_item_with_limit_op_, deterministic, target);
  }

  // .proto.SetGadgetChainLevelOp set_gadget_chain_level_op = 31001;
  if (has_set_gadget_chain_level_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        31001, *detail_.set_gadget_chain_level_op_, deterministic, target);
  }

  // .proto.SetDailyTaskVarOp set_daily_task_var_op = 32001;
  if (has_set_daily_task_var_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        32001, *detail_.set_daily_task_var_op_, deterministic, target);
  }

  // .proto.AvatarRenameAuditResultOp avatar_rename_audit_result_op = 33001;
  if (has_avatar_rename_audit_result_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        33001, *detail_.avatar_rename_audit_result_op_, deterministic, target);
  }

  // .proto.ResetAvatarRenameOp reset_avatar_rename_op = 33002;
  if (has_reset_avatar_rename_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        33002, *detail_.reset_avatar_rename_op_, deterministic, target);
  }

  // .proto.AddFinishedTalkOp add_finished_talk_op = 33003;
  if (has_add_finished_talk_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        33003, *detail_.add_finished_talk_op_, deterministic, target);
  }

  // .proto.DelFinishedTalkOp del_finished_talk_op = 33004;
  if (has_del_finished_talk_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        33004, *detail_.del_finished_talk_op_, deterministic, target);
  }

  // .proto.SetPlayerGCGMatchScoreOp set_player_gcg_match_score_op = 33005;
  if (has_set_player_gcg_match_score_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        33005, *detail_.set_player_gcg_match_score_op_, deterministic, target);
  }

  // .proto.SetPushTipsStateOp set_push_tips_state_op = 33006;
  if (has_set_push_tips_state_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        33006, *detail_.set_push_tips_state_op_, deterministic, target);
  }

  // .proto.DeletePlayerGCGCardOp delete_player_gcg_card_op = 33007;
  if (has_delete_player_gcg_card_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        33007, *detail_.delete_player_gcg_card_op_, deterministic, target);
  }

  // .proto.DeletePlayerGCGCardFaceOp delete_player_gcg_card_face_op = 33008;
  if (has_delete_player_gcg_card_face_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        33008, *detail_.delete_player_gcg_card_face_op_, deterministic, target);
  }

  // .proto.DeletePlayerGCGCardBackOp delete_player_gcg_card_back_op = 33009;
  if (has_delete_player_gcg_card_back_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        33009, *detail_.delete_player_gcg_card_back_op_, deterministic, target);
  }

  // .proto.DeletePlayerGCGDeckFieldOp delete_player_gcg_deck_field_op = 33010;
  if (has_delete_player_gcg_deck_field_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        33010, *detail_.delete_player_gcg_deck_field_op_, deterministic, target);
  }

  // .proto.BanPlayerGCGMatchOp ban_player_gcg_match_op = 33011;
  if (has_ban_player_gcg_match_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        33011, *detail_.ban_player_gcg_match_op_, deterministic, target);
  }

  // .proto.BanPlayerGCGPVPOp ban_player_gcg_pvp_op = 33012;
  if (has_ban_player_gcg_pvp_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        33012, *detail_.ban_player_gcg_pvp_op_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.OfflineMsgBin)
  return target;
}

size_t OfflineMsgBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.OfflineMsgBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ticket = 2;
  if (this->ticket().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ticket());
  }

  // fixed32 enque_time = 1;
  if (this->enque_time() != 0) {
    total_size += 1 + 4;
  }

  // uint32 index = 3;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  switch (detail_case()) {
    // .proto.DelItemOp del_item_op = 4;
    case kDelItemOp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.del_item_op_);
      break;
    }
    // .proto.PlayerGotoOp goto_op = 5;
    case kGotoOp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.goto_op_);
      break;
    }
    // .proto.ResetParentQuestOp reset_parent_quest_op = 6;
    case kResetParentQuestOp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.reset_parent_quest_op_);
      break;
    }
    // .proto.RefreshGroupOp refresh_group_op = 7;
    case kRefreshGroupOp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.refresh_group_op_);
      break;
    }
    // .proto.SetScenePointLockStatusOp set_scene_point_lock_status_op = 8;
    case kSetScenePointLockStatusOp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.set_scene_point_lock_status_op_);
      break;
    }
    // .proto.SetPlayerNickNameOp set_nick_name_op = 9;
    case kSetNickNameOp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.set_nick_name_op_);
      break;
    }
    // .proto.RefreshShopOp refresh_shop_op = 10;
    case kRefreshShopOp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.refresh_shop_op_);
      break;
    }
    // .proto.UnlockTalentOp unlock_talent_op = 11;
    case kUnlockTalentOp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.unlock_talent_op_);
      break;
    }
    // .proto.TakeOffEquipOp take_off_equip_op = 12;
    case kTakeOffEquipOp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.take_off_equip_op_);
      break;
    }
    // .proto.DelMailOp del_mail_op = 13;
    case kDelMailOp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.del_mail_op_);
      break;
    }
    // .proto.FinishDailyTaskOp finish_daily_task_op = 14;
    case kFinishDailyTaskOp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.finish_daily_task_op_);
      break;
    }
    // .proto.UnlockAreaOp unlock_area_op = 15;
    case kUnlockAreaOp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.unlock_area_op_);
      break;
    }
    // .proto.DelItemNegativeOp del_item_negative_op = 16;
    case kDelItemNegativeOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.del_item_negative_op_);
      break;
    }
    // .proto.DelEquipOp del_equip_op = 17;
    case kDelEquipOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.del_equip_op_);
      break;
    }
    // .proto.AddItemOp add_item_op = 18;
    case kAddItemOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.add_item_op_);
      break;
    }
    // .proto.ModifyBornPosOp modify_born_pos_op = 19;
    case kModifyBornPosOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.modify_born_pos_op_);
      break;
    }
    // .proto.SubCoinNegativeOp sub_coin_negative_op = 20;
    case kSubCoinNegativeOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.sub_coin_negative_op_);
      break;
    }
    // .proto.SetQuestContentProgressOp set_quest_content_progress_op = 21;
    case kSetQuestContentProgressOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.set_quest_content_progress_op_);
      break;
    }
    // .proto.FinishOrderOp finish_order_op = 22;
    case kFinishOrderOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.finish_order_op_);
      break;
    }
    // .proto.AddOrModifyWatcherOp add_or_modify_watcher_op = 23;
    case kAddOrModifyWatcherOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.add_or_modify_watcher_op_);
      break;
    }
    // .proto.DelWatcherOp del_watcher_op = 24;
    case kDelWatcherOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.del_watcher_op_);
      break;
    }
    // .proto.SetSignatureOp set_signature_op = 25;
    case kSetSignatureOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.set_signature_op_);
      break;
    }
    // .proto.AddOrSubResinOp add_or_sub_resin_op = 26;
    case kAddOrSubResinOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.add_or_sub_resin_op_);
      break;
    }
    // .proto.SetQuestGlobalVarValueOp set_quest_global_var_value_op = 27;
    case kSetQuestGlobalVarValueOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.set_quest_global_var_value_op_);
      break;
    }
    // .proto.AddMcoinVipPointOp add_mcoin_op = 28;
    case kAddMcoinOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.add_mcoin_op_);
      break;
    }
    // .proto.GroupBinOp group_bin_op = 29;
    case kGroupBinOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.group_bin_op_);
      break;
    }
    // .proto.DelOneOffOp del_one_off_op = 30;
    case kDelOneOffOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.del_one_off_op_);
      break;
    }
    // .proto.FinishRoutineOp finish_routine_op = 31;
    case kFinishRoutineOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.finish_routine_op_);
      break;
    }
    // .proto.FinishDailyTaskUnloadGroupOp finish_daily_task_group_op = 32;
    case kFinishDailyTaskGroupOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.finish_daily_task_group_op_);
      break;
    }
    // .proto.RefreshBlossomCircleCampOp refresh_blossom_circle_camp_op = 33;
    case kRefreshBlossomCircleCampOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.refresh_blossom_circle_camp_op_);
      break;
    }
    // .proto.BlessingActivityGivePicOp blessing_give_pic_op = 34;
    case kBlessingGivePicOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.blessing_give_pic_op_);
      break;
    }
    // .proto.ExpeditionActivityAssistOp expedition_assist_op = 35;
    case kExpeditionAssistOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.expedition_assist_op_);
      break;
    }
    // .proto.RecoverWorldLevelOp recover_world_level_op = 36;
    case kRecoverWorldLevelOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.recover_world_level_op_);
      break;
    }
    // .proto.ForceAcceptQuestOp force_accept_quest_op = 37;
    case kForceAcceptQuestOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.force_accept_quest_op_);
      break;
    }
    // .proto.SetMainCoopConfidenceOp set_main_coop_confidence_op = 38;
    case kSetMainCoopConfidenceOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.set_main_coop_confidence_op_);
      break;
    }
    // .proto.AddCoopPointSavePointListOp add_coop_point_save_point_list_op = 39;
    case kAddCoopPointSavePointListOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.add_coop_point_save_point_list_op_);
      break;
    }
    // .proto.AddRegionSearchProgressOp add_region_search_progress_op = 40;
    case kAddRegionSearchProgressOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.add_region_search_progress_op_);
      break;
    }
    // .proto.SetMatchPunishTimesOp set_match_punish_times_op = 41;
    case kSetMatchPunishTimesOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.set_match_punish_times_op_);
      break;
    }
    // .proto.ResetChannellerSlabCampGroupOp reset_channeller_slab_camp_group_op = 42;
    case kResetChannellerSlabCampGroupOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.reset_channeller_slab_camp_group_op_);
      break;
    }
    // .proto.ProcSceneTagOp proc_scene_tag_op = 43;
    case kProcSceneTagOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.proc_scene_tag_op_);
      break;
    }
    // .proto.SetClimateAreaTypeOp set_climate_area_type_op = 44;
    case kSetClimateAreaTypeOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.set_climate_area_type_op_);
      break;
    }
    // .proto.ExchangeMcoinOp exchange_mcoin_op = 45;
    case kExchangeMcoinOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.exchange_mcoin_op_);
      break;
    }
    // .proto.SetFinishedParentQuestChildStateOp set_finished_parent_quest_child_state_op = 46;
    case kSetFinishedParentQuestChildStateOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.set_finished_parent_quest_child_state_op_);
      break;
    }
    // .proto.SetLevel1AreaExplorePointOp set_level1_area_explore_point_op = 47;
    case kSetLevel1AreaExplorePointOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.set_level1_area_explore_point_op_);
      break;
    }
    // .proto.SetCodexOpenOrCloseOp set_codex_open_or_close_op = 48;
    case kSetCodexOpenOrCloseOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.set_codex_open_or_close_op_);
      break;
    }
    // .proto.ChangeMapAreaInfoOp change_map_area_info_op = 49;
    case kChangeMapAreaInfoOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.change_map_area_info_op_);
      break;
    }
    // .proto.GroupLinkOp group_link_op = 50;
    case kGroupLinkOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.group_link_op_);
      break;
    }
    // .proto.SetWatcherCompRecordValueOp set_watcher_comp_record_value_op = 51;
    case kSetWatcherCompRecordValueOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.set_watcher_comp_record_value_op_);
      break;
    }
    // .proto.AddFriendOp add_friend_op = 52;
    case kAddFriendOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.add_friend_op_);
      break;
    }
    // .proto.DelFriendOp del_friend_op = 53;
    case kDelFriendOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.del_friend_op_);
      break;
    }
    // .proto.AddFriendAskOp add_friend_ask_op = 54;
    case kAddFriendAskOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.add_friend_ask_op_);
      break;
    }
    // .proto.DelFriendAskOp del_friend_ask_op = 55;
    case kDelFriendAskOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.del_friend_ask_op_);
      break;
    }
    // .proto.BanCustomDungeonOp ban_custom_dungeon_op = 56;
    case kBanCustomDungeonOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.ban_custom_dungeon_op_);
      break;
    }
    // .proto.RemoveInvalidMapMarksOp remove_invalid_map_marks_op = 57;
    case kRemoveInvalidMapMarksOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.remove_invalid_map_marks_op_);
      break;
    }
    // .proto.RecalculateAreaExplorePointOp recalculate_area_explore_point_op = 58;
    case kRecalculateAreaExplorePointOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.recalculate_area_explore_point_op_);
      break;
    }
    // .proto.NicknameAuditResultOp nickname_audit_result_op = 59;
    case kNicknameAuditResultOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.nickname_audit_result_op_);
      break;
    }
    // .proto.SignatureAuditResultOp signature_audit_result_op = 60;
    case kSignatureAuditResultOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.signature_audit_result_op_);
      break;
    }
    // .proto.PassHomeSceneArrangementAuditOp pass_home_scene_arrangement_audit_op = 61;
    case kPassHomeSceneArrangementAuditOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.pass_home_scene_arrangement_audit_op_);
      break;
    }
    // .proto.FailHomeSceneArrangementAuditOp fail_home_scene_arrangement_audit_op = 62;
    case kFailHomeSceneArrangementAuditOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.fail_home_scene_arrangement_audit_op_);
      break;
    }
    // .proto.FailHomeModulesArrangementAuditOp fail_home_modules_arrangement_audit_op = 63;
    case kFailHomeModulesArrangementAuditOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.fail_home_modules_arrangement_audit_op_);
      break;
    }
    // .proto.BanUgcPublishOp ban_ugc_publish_op = 64;
    case kBanUgcPublishOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.ban_ugc_publish_op_);
      break;
    }
    // .proto.ResetPlayerPersistentDungeonOp reset_player_persistent_dungeon_op = 28001;
    case kResetPlayerPersistentDungeonOp: {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.reset_player_persistent_dungeon_op_);
      break;
    }
    // .proto.ResetPlayerPosInPersistentDungeonOp reset_player_pos_in_persistent_dungeon_op = 28002;
    case kResetPlayerPosInPersistentDungeonOp: {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.reset_player_pos_in_persistent_dungeon_op_);
      break;
    }
    // .proto.LevelTagChangeOp level_tag_change_op = 28003;
    case kLevelTagChangeOp: {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.level_tag_change_op_);
      break;
    }
    // .proto.ResetPlayerWayPointInPersistentDungeonOp reset_player_way_point_in_persistent_dungeon_op = 28004;
    case kResetPlayerWayPointInPersistentDungeonOp: {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.reset_player_way_point_in_persistent_dungeon_op_);
      break;
    }
    // .proto.ExhibitionSetOp exhibition_set_op = 30000;
    case kExhibitionSetOp: {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.exhibition_set_op_);
      break;
    }
    // .proto.SetAvatarExtraPropOp set_avatar_extra_prop_op = 30001;
    case kSetAvatarExtraPropOp: {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.set_avatar_extra_prop_op_);
      break;
    }
    // .proto.AddItemWithLimitOp add_item_with_limit_op = 30002;
    case kAddItemWithLimitOp: {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.add_item_with_limit_op_);
      break;
    }
    // .proto.SetGadgetChainLevelOp set_gadget_chain_level_op = 31001;
    case kSetGadgetChainLevelOp: {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.set_gadget_chain_level_op_);
      break;
    }
    // .proto.SetDailyTaskVarOp set_daily_task_var_op = 32001;
    case kSetDailyTaskVarOp: {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.set_daily_task_var_op_);
      break;
    }
    // .proto.AvatarRenameAuditResultOp avatar_rename_audit_result_op = 33001;
    case kAvatarRenameAuditResultOp: {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.avatar_rename_audit_result_op_);
      break;
    }
    // .proto.ResetAvatarRenameOp reset_avatar_rename_op = 33002;
    case kResetAvatarRenameOp: {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.reset_avatar_rename_op_);
      break;
    }
    // .proto.AddFinishedTalkOp add_finished_talk_op = 33003;
    case kAddFinishedTalkOp: {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.add_finished_talk_op_);
      break;
    }
    // .proto.DelFinishedTalkOp del_finished_talk_op = 33004;
    case kDelFinishedTalkOp: {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.del_finished_talk_op_);
      break;
    }
    // .proto.SetPlayerGCGMatchScoreOp set_player_gcg_match_score_op = 33005;
    case kSetPlayerGcgMatchScoreOp: {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.set_player_gcg_match_score_op_);
      break;
    }
    // .proto.SetPushTipsStateOp set_push_tips_state_op = 33006;
    case kSetPushTipsStateOp: {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.set_push_tips_state_op_);
      break;
    }
    // .proto.DeletePlayerGCGCardOp delete_player_gcg_card_op = 33007;
    case kDeletePlayerGcgCardOp: {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.delete_player_gcg_card_op_);
      break;
    }
    // .proto.DeletePlayerGCGCardFaceOp delete_player_gcg_card_face_op = 33008;
    case kDeletePlayerGcgCardFaceOp: {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.delete_player_gcg_card_face_op_);
      break;
    }
    // .proto.DeletePlayerGCGCardBackOp delete_player_gcg_card_back_op = 33009;
    case kDeletePlayerGcgCardBackOp: {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.delete_player_gcg_card_back_op_);
      break;
    }
    // .proto.DeletePlayerGCGDeckFieldOp delete_player_gcg_deck_field_op = 33010;
    case kDeletePlayerGcgDeckFieldOp: {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.delete_player_gcg_deck_field_op_);
      break;
    }
    // .proto.BanPlayerGCGMatchOp ban_player_gcg_match_op = 33011;
    case kBanPlayerGcgMatchOp: {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.ban_player_gcg_match_op_);
      break;
    }
    // .proto.BanPlayerGCGPVPOp ban_player_gcg_pvp_op = 33012;
    case kBanPlayerGcgPvpOp: {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.ban_player_gcg_pvp_op_);
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OfflineMsgBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.OfflineMsgBin)
  GOOGLE_DCHECK_NE(&from, this);
  const OfflineMsgBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OfflineMsgBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.OfflineMsgBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.OfflineMsgBin)
    MergeFrom(*source);
  }
}

void OfflineMsgBin::MergeFrom(const OfflineMsgBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.OfflineMsgBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ticket().size() > 0) {

    ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticket_);
  }
  if (from.enque_time() != 0) {
    set_enque_time(from.enque_time());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  switch (from.detail_case()) {
    case kDelItemOp: {
      mutable_del_item_op()->::proto::DelItemOp::MergeFrom(from.del_item_op());
      break;
    }
    case kGotoOp: {
      mutable_goto_op()->::proto::PlayerGotoOp::MergeFrom(from.goto_op());
      break;
    }
    case kResetParentQuestOp: {
      mutable_reset_parent_quest_op()->::proto::ResetParentQuestOp::MergeFrom(from.reset_parent_quest_op());
      break;
    }
    case kRefreshGroupOp: {
      mutable_refresh_group_op()->::proto::RefreshGroupOp::MergeFrom(from.refresh_group_op());
      break;
    }
    case kSetScenePointLockStatusOp: {
      mutable_set_scene_point_lock_status_op()->::proto::SetScenePointLockStatusOp::MergeFrom(from.set_scene_point_lock_status_op());
      break;
    }
    case kSetNickNameOp: {
      mutable_set_nick_name_op()->::proto::SetPlayerNickNameOp::MergeFrom(from.set_nick_name_op());
      break;
    }
    case kRefreshShopOp: {
      mutable_refresh_shop_op()->::proto::RefreshShopOp::MergeFrom(from.refresh_shop_op());
      break;
    }
    case kUnlockTalentOp: {
      mutable_unlock_talent_op()->::proto::UnlockTalentOp::MergeFrom(from.unlock_talent_op());
      break;
    }
    case kTakeOffEquipOp: {
      mutable_take_off_equip_op()->::proto::TakeOffEquipOp::MergeFrom(from.take_off_equip_op());
      break;
    }
    case kDelMailOp: {
      mutable_del_mail_op()->::proto::DelMailOp::MergeFrom(from.del_mail_op());
      break;
    }
    case kFinishDailyTaskOp: {
      mutable_finish_daily_task_op()->::proto::FinishDailyTaskOp::MergeFrom(from.finish_daily_task_op());
      break;
    }
    case kUnlockAreaOp: {
      mutable_unlock_area_op()->::proto::UnlockAreaOp::MergeFrom(from.unlock_area_op());
      break;
    }
    case kDelItemNegativeOp: {
      mutable_del_item_negative_op()->::proto::DelItemNegativeOp::MergeFrom(from.del_item_negative_op());
      break;
    }
    case kDelEquipOp: {
      mutable_del_equip_op()->::proto::DelEquipOp::MergeFrom(from.del_equip_op());
      break;
    }
    case kAddItemOp: {
      mutable_add_item_op()->::proto::AddItemOp::MergeFrom(from.add_item_op());
      break;
    }
    case kModifyBornPosOp: {
      mutable_modify_born_pos_op()->::proto::ModifyBornPosOp::MergeFrom(from.modify_born_pos_op());
      break;
    }
    case kSubCoinNegativeOp: {
      mutable_sub_coin_negative_op()->::proto::SubCoinNegativeOp::MergeFrom(from.sub_coin_negative_op());
      break;
    }
    case kSetQuestContentProgressOp: {
      mutable_set_quest_content_progress_op()->::proto::SetQuestContentProgressOp::MergeFrom(from.set_quest_content_progress_op());
      break;
    }
    case kFinishOrderOp: {
      mutable_finish_order_op()->::proto::FinishOrderOp::MergeFrom(from.finish_order_op());
      break;
    }
    case kAddOrModifyWatcherOp: {
      mutable_add_or_modify_watcher_op()->::proto::AddOrModifyWatcherOp::MergeFrom(from.add_or_modify_watcher_op());
      break;
    }
    case kDelWatcherOp: {
      mutable_del_watcher_op()->::proto::DelWatcherOp::MergeFrom(from.del_watcher_op());
      break;
    }
    case kSetSignatureOp: {
      mutable_set_signature_op()->::proto::SetSignatureOp::MergeFrom(from.set_signature_op());
      break;
    }
    case kAddOrSubResinOp: {
      mutable_add_or_sub_resin_op()->::proto::AddOrSubResinOp::MergeFrom(from.add_or_sub_resin_op());
      break;
    }
    case kSetQuestGlobalVarValueOp: {
      mutable_set_quest_global_var_value_op()->::proto::SetQuestGlobalVarValueOp::MergeFrom(from.set_quest_global_var_value_op());
      break;
    }
    case kAddMcoinOp: {
      mutable_add_mcoin_op()->::proto::AddMcoinVipPointOp::MergeFrom(from.add_mcoin_op());
      break;
    }
    case kGroupBinOp: {
      mutable_group_bin_op()->::proto::GroupBinOp::MergeFrom(from.group_bin_op());
      break;
    }
    case kDelOneOffOp: {
      mutable_del_one_off_op()->::proto::DelOneOffOp::MergeFrom(from.del_one_off_op());
      break;
    }
    case kFinishRoutineOp: {
      mutable_finish_routine_op()->::proto::FinishRoutineOp::MergeFrom(from.finish_routine_op());
      break;
    }
    case kFinishDailyTaskGroupOp: {
      mutable_finish_daily_task_group_op()->::proto::FinishDailyTaskUnloadGroupOp::MergeFrom(from.finish_daily_task_group_op());
      break;
    }
    case kRefreshBlossomCircleCampOp: {
      mutable_refresh_blossom_circle_camp_op()->::proto::RefreshBlossomCircleCampOp::MergeFrom(from.refresh_blossom_circle_camp_op());
      break;
    }
    case kBlessingGivePicOp: {
      mutable_blessing_give_pic_op()->::proto::BlessingActivityGivePicOp::MergeFrom(from.blessing_give_pic_op());
      break;
    }
    case kExpeditionAssistOp: {
      mutable_expedition_assist_op()->::proto::ExpeditionActivityAssistOp::MergeFrom(from.expedition_assist_op());
      break;
    }
    case kRecoverWorldLevelOp: {
      mutable_recover_world_level_op()->::proto::RecoverWorldLevelOp::MergeFrom(from.recover_world_level_op());
      break;
    }
    case kForceAcceptQuestOp: {
      mutable_force_accept_quest_op()->::proto::ForceAcceptQuestOp::MergeFrom(from.force_accept_quest_op());
      break;
    }
    case kSetMainCoopConfidenceOp: {
      mutable_set_main_coop_confidence_op()->::proto::SetMainCoopConfidenceOp::MergeFrom(from.set_main_coop_confidence_op());
      break;
    }
    case kAddCoopPointSavePointListOp: {
      mutable_add_coop_point_save_point_list_op()->::proto::AddCoopPointSavePointListOp::MergeFrom(from.add_coop_point_save_point_list_op());
      break;
    }
    case kAddRegionSearchProgressOp: {
      mutable_add_region_search_progress_op()->::proto::AddRegionSearchProgressOp::MergeFrom(from.add_region_search_progress_op());
      break;
    }
    case kSetMatchPunishTimesOp: {
      mutable_set_match_punish_times_op()->::proto::SetMatchPunishTimesOp::MergeFrom(from.set_match_punish_times_op());
      break;
    }
    case kResetChannellerSlabCampGroupOp: {
      mutable_reset_channeller_slab_camp_group_op()->::proto::ResetChannellerSlabCampGroupOp::MergeFrom(from.reset_channeller_slab_camp_group_op());
      break;
    }
    case kProcSceneTagOp: {
      mutable_proc_scene_tag_op()->::proto::ProcSceneTagOp::MergeFrom(from.proc_scene_tag_op());
      break;
    }
    case kSetClimateAreaTypeOp: {
      mutable_set_climate_area_type_op()->::proto::SetClimateAreaTypeOp::MergeFrom(from.set_climate_area_type_op());
      break;
    }
    case kExchangeMcoinOp: {
      mutable_exchange_mcoin_op()->::proto::ExchangeMcoinOp::MergeFrom(from.exchange_mcoin_op());
      break;
    }
    case kSetFinishedParentQuestChildStateOp: {
      mutable_set_finished_parent_quest_child_state_op()->::proto::SetFinishedParentQuestChildStateOp::MergeFrom(from.set_finished_parent_quest_child_state_op());
      break;
    }
    case kSetLevel1AreaExplorePointOp: {
      mutable_set_level1_area_explore_point_op()->::proto::SetLevel1AreaExplorePointOp::MergeFrom(from.set_level1_area_explore_point_op());
      break;
    }
    case kSetCodexOpenOrCloseOp: {
      mutable_set_codex_open_or_close_op()->::proto::SetCodexOpenOrCloseOp::MergeFrom(from.set_codex_open_or_close_op());
      break;
    }
    case kChangeMapAreaInfoOp: {
      mutable_change_map_area_info_op()->::proto::ChangeMapAreaInfoOp::MergeFrom(from.change_map_area_info_op());
      break;
    }
    case kGroupLinkOp: {
      mutable_group_link_op()->::proto::GroupLinkOp::MergeFrom(from.group_link_op());
      break;
    }
    case kSetWatcherCompRecordValueOp: {
      mutable_set_watcher_comp_record_value_op()->::proto::SetWatcherCompRecordValueOp::MergeFrom(from.set_watcher_comp_record_value_op());
      break;
    }
    case kAddFriendOp: {
      mutable_add_friend_op()->::proto::AddFriendOp::MergeFrom(from.add_friend_op());
      break;
    }
    case kDelFriendOp: {
      mutable_del_friend_op()->::proto::DelFriendOp::MergeFrom(from.del_friend_op());
      break;
    }
    case kAddFriendAskOp: {
      mutable_add_friend_ask_op()->::proto::AddFriendAskOp::MergeFrom(from.add_friend_ask_op());
      break;
    }
    case kDelFriendAskOp: {
      mutable_del_friend_ask_op()->::proto::DelFriendAskOp::MergeFrom(from.del_friend_ask_op());
      break;
    }
    case kBanCustomDungeonOp: {
      mutable_ban_custom_dungeon_op()->::proto::BanCustomDungeonOp::MergeFrom(from.ban_custom_dungeon_op());
      break;
    }
    case kRemoveInvalidMapMarksOp: {
      mutable_remove_invalid_map_marks_op()->::proto::RemoveInvalidMapMarksOp::MergeFrom(from.remove_invalid_map_marks_op());
      break;
    }
    case kRecalculateAreaExplorePointOp: {
      mutable_recalculate_area_explore_point_op()->::proto::RecalculateAreaExplorePointOp::MergeFrom(from.recalculate_area_explore_point_op());
      break;
    }
    case kNicknameAuditResultOp: {
      mutable_nickname_audit_result_op()->::proto::NicknameAuditResultOp::MergeFrom(from.nickname_audit_result_op());
      break;
    }
    case kSignatureAuditResultOp: {
      mutable_signature_audit_result_op()->::proto::SignatureAuditResultOp::MergeFrom(from.signature_audit_result_op());
      break;
    }
    case kPassHomeSceneArrangementAuditOp: {
      mutable_pass_home_scene_arrangement_audit_op()->::proto::PassHomeSceneArrangementAuditOp::MergeFrom(from.pass_home_scene_arrangement_audit_op());
      break;
    }
    case kFailHomeSceneArrangementAuditOp: {
      mutable_fail_home_scene_arrangement_audit_op()->::proto::FailHomeSceneArrangementAuditOp::MergeFrom(from.fail_home_scene_arrangement_audit_op());
      break;
    }
    case kFailHomeModulesArrangementAuditOp: {
      mutable_fail_home_modules_arrangement_audit_op()->::proto::FailHomeModulesArrangementAuditOp::MergeFrom(from.fail_home_modules_arrangement_audit_op());
      break;
    }
    case kBanUgcPublishOp: {
      mutable_ban_ugc_publish_op()->::proto::BanUgcPublishOp::MergeFrom(from.ban_ugc_publish_op());
      break;
    }
    case kResetPlayerPersistentDungeonOp: {
      mutable_reset_player_persistent_dungeon_op()->::proto::ResetPlayerPersistentDungeonOp::MergeFrom(from.reset_player_persistent_dungeon_op());
      break;
    }
    case kResetPlayerPosInPersistentDungeonOp: {
      mutable_reset_player_pos_in_persistent_dungeon_op()->::proto::ResetPlayerPosInPersistentDungeonOp::MergeFrom(from.reset_player_pos_in_persistent_dungeon_op());
      break;
    }
    case kLevelTagChangeOp: {
      mutable_level_tag_change_op()->::proto::LevelTagChangeOp::MergeFrom(from.level_tag_change_op());
      break;
    }
    case kResetPlayerWayPointInPersistentDungeonOp: {
      mutable_reset_player_way_point_in_persistent_dungeon_op()->::proto::ResetPlayerWayPointInPersistentDungeonOp::MergeFrom(from.reset_player_way_point_in_persistent_dungeon_op());
      break;
    }
    case kExhibitionSetOp: {
      mutable_exhibition_set_op()->::proto::ExhibitionSetOp::MergeFrom(from.exhibition_set_op());
      break;
    }
    case kSetAvatarExtraPropOp: {
      mutable_set_avatar_extra_prop_op()->::proto::SetAvatarExtraPropOp::MergeFrom(from.set_avatar_extra_prop_op());
      break;
    }
    case kAddItemWithLimitOp: {
      mutable_add_item_with_limit_op()->::proto::AddItemWithLimitOp::MergeFrom(from.add_item_with_limit_op());
      break;
    }
    case kSetGadgetChainLevelOp: {
      mutable_set_gadget_chain_level_op()->::proto::SetGadgetChainLevelOp::MergeFrom(from.set_gadget_chain_level_op());
      break;
    }
    case kSetDailyTaskVarOp: {
      mutable_set_daily_task_var_op()->::proto::SetDailyTaskVarOp::MergeFrom(from.set_daily_task_var_op());
      break;
    }
    case kAvatarRenameAuditResultOp: {
      mutable_avatar_rename_audit_result_op()->::proto::AvatarRenameAuditResultOp::MergeFrom(from.avatar_rename_audit_result_op());
      break;
    }
    case kResetAvatarRenameOp: {
      mutable_reset_avatar_rename_op()->::proto::ResetAvatarRenameOp::MergeFrom(from.reset_avatar_rename_op());
      break;
    }
    case kAddFinishedTalkOp: {
      mutable_add_finished_talk_op()->::proto::AddFinishedTalkOp::MergeFrom(from.add_finished_talk_op());
      break;
    }
    case kDelFinishedTalkOp: {
      mutable_del_finished_talk_op()->::proto::DelFinishedTalkOp::MergeFrom(from.del_finished_talk_op());
      break;
    }
    case kSetPlayerGcgMatchScoreOp: {
      mutable_set_player_gcg_match_score_op()->::proto::SetPlayerGCGMatchScoreOp::MergeFrom(from.set_player_gcg_match_score_op());
      break;
    }
    case kSetPushTipsStateOp: {
      mutable_set_push_tips_state_op()->::proto::SetPushTipsStateOp::MergeFrom(from.set_push_tips_state_op());
      break;
    }
    case kDeletePlayerGcgCardOp: {
      mutable_delete_player_gcg_card_op()->::proto::DeletePlayerGCGCardOp::MergeFrom(from.delete_player_gcg_card_op());
      break;
    }
    case kDeletePlayerGcgCardFaceOp: {
      mutable_delete_player_gcg_card_face_op()->::proto::DeletePlayerGCGCardFaceOp::MergeFrom(from.delete_player_gcg_card_face_op());
      break;
    }
    case kDeletePlayerGcgCardBackOp: {
      mutable_delete_player_gcg_card_back_op()->::proto::DeletePlayerGCGCardBackOp::MergeFrom(from.delete_player_gcg_card_back_op());
      break;
    }
    case kDeletePlayerGcgDeckFieldOp: {
      mutable_delete_player_gcg_deck_field_op()->::proto::DeletePlayerGCGDeckFieldOp::MergeFrom(from.delete_player_gcg_deck_field_op());
      break;
    }
    case kBanPlayerGcgMatchOp: {
      mutable_ban_player_gcg_match_op()->::proto::BanPlayerGCGMatchOp::MergeFrom(from.ban_player_gcg_match_op());
      break;
    }
    case kBanPlayerGcgPvpOp: {
      mutable_ban_player_gcg_pvp_op()->::proto::BanPlayerGCGPVPOp::MergeFrom(from.ban_player_gcg_pvp_op());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
}

void OfflineMsgBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.OfflineMsgBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfflineMsgBin::CopyFrom(const OfflineMsgBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.OfflineMsgBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineMsgBin::IsInitialized() const {
  return true;
}

void OfflineMsgBin::Swap(OfflineMsgBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineMsgBin::InternalSwap(OfflineMsgBin* other) {
  using std::swap;
  ticket_.Swap(&other->ticket_);
  swap(enque_time_, other->enque_time_);
  swap(index_, other->index_);
  swap(detail_, other->detail_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OfflineMsgBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OfflineMsgBin

// fixed32 enque_time = 1;
void OfflineMsgBin::clear_enque_time() {
  enque_time_ = 0u;
}
::google::protobuf::uint32 OfflineMsgBin::enque_time() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.enque_time)
  return enque_time_;
}
void OfflineMsgBin::set_enque_time(::google::protobuf::uint32 value) {
  
  enque_time_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineMsgBin.enque_time)
}

// string ticket = 2;
void OfflineMsgBin::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OfflineMsgBin::ticket() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.ticket)
  return ticket_.GetNoArena();
}
void OfflineMsgBin::set_ticket(const ::std::string& value) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.OfflineMsgBin.ticket)
}
#if LANG_CXX11
void OfflineMsgBin::set_ticket(::std::string&& value) {
  
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.OfflineMsgBin.ticket)
}
#endif
void OfflineMsgBin::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.OfflineMsgBin.ticket)
}
void OfflineMsgBin::set_ticket(const char* value, size_t size) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.OfflineMsgBin.ticket)
}
::std::string* OfflineMsgBin::mutable_ticket() {
  
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OfflineMsgBin::release_ticket() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.ticket)
  
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OfflineMsgBin::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    
  } else {
    
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.ticket)
}

// uint32 index = 3;
void OfflineMsgBin::clear_index() {
  index_ = 0u;
}
::google::protobuf::uint32 OfflineMsgBin::index() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.index)
  return index_;
}
void OfflineMsgBin::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineMsgBin.index)
}

// .proto.DelItemOp del_item_op = 4;
bool OfflineMsgBin::has_del_item_op() const {
  return detail_case() == kDelItemOp;
}
void OfflineMsgBin::set_has_del_item_op() {
  _oneof_case_[0] = kDelItemOp;
}
void OfflineMsgBin::clear_del_item_op() {
  if (has_del_item_op()) {
    delete detail_.del_item_op_;
    clear_has_detail();
  }
}
 const ::proto::DelItemOp& OfflineMsgBin::del_item_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.del_item_op)
  return has_del_item_op()
      ? *detail_.del_item_op_
      : ::proto::DelItemOp::default_instance();
}
::proto::DelItemOp* OfflineMsgBin::mutable_del_item_op() {
  if (!has_del_item_op()) {
    clear_detail();
    set_has_del_item_op();
    detail_.del_item_op_ = new ::proto::DelItemOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.del_item_op)
  return detail_.del_item_op_;
}
::proto::DelItemOp* OfflineMsgBin::release_del_item_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.del_item_op)
  if (has_del_item_op()) {
    clear_has_detail();
    ::proto::DelItemOp* temp = detail_.del_item_op_;
    detail_.del_item_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_del_item_op(::proto::DelItemOp* del_item_op) {
  clear_detail();
  if (del_item_op) {
    set_has_del_item_op();
    detail_.del_item_op_ = del_item_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.del_item_op)
}

// .proto.PlayerGotoOp goto_op = 5;
bool OfflineMsgBin::has_goto_op() const {
  return detail_case() == kGotoOp;
}
void OfflineMsgBin::set_has_goto_op() {
  _oneof_case_[0] = kGotoOp;
}
void OfflineMsgBin::clear_goto_op() {
  if (has_goto_op()) {
    delete detail_.goto_op_;
    clear_has_detail();
  }
}
 const ::proto::PlayerGotoOp& OfflineMsgBin::goto_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.goto_op)
  return has_goto_op()
      ? *detail_.goto_op_
      : ::proto::PlayerGotoOp::default_instance();
}
::proto::PlayerGotoOp* OfflineMsgBin::mutable_goto_op() {
  if (!has_goto_op()) {
    clear_detail();
    set_has_goto_op();
    detail_.goto_op_ = new ::proto::PlayerGotoOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.goto_op)
  return detail_.goto_op_;
}
::proto::PlayerGotoOp* OfflineMsgBin::release_goto_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.goto_op)
  if (has_goto_op()) {
    clear_has_detail();
    ::proto::PlayerGotoOp* temp = detail_.goto_op_;
    detail_.goto_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_goto_op(::proto::PlayerGotoOp* goto_op) {
  clear_detail();
  if (goto_op) {
    set_has_goto_op();
    detail_.goto_op_ = goto_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.goto_op)
}

// .proto.ResetParentQuestOp reset_parent_quest_op = 6;
bool OfflineMsgBin::has_reset_parent_quest_op() const {
  return detail_case() == kResetParentQuestOp;
}
void OfflineMsgBin::set_has_reset_parent_quest_op() {
  _oneof_case_[0] = kResetParentQuestOp;
}
void OfflineMsgBin::clear_reset_parent_quest_op() {
  if (has_reset_parent_quest_op()) {
    delete detail_.reset_parent_quest_op_;
    clear_has_detail();
  }
}
 const ::proto::ResetParentQuestOp& OfflineMsgBin::reset_parent_quest_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.reset_parent_quest_op)
  return has_reset_parent_quest_op()
      ? *detail_.reset_parent_quest_op_
      : ::proto::ResetParentQuestOp::default_instance();
}
::proto::ResetParentQuestOp* OfflineMsgBin::mutable_reset_parent_quest_op() {
  if (!has_reset_parent_quest_op()) {
    clear_detail();
    set_has_reset_parent_quest_op();
    detail_.reset_parent_quest_op_ = new ::proto::ResetParentQuestOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.reset_parent_quest_op)
  return detail_.reset_parent_quest_op_;
}
::proto::ResetParentQuestOp* OfflineMsgBin::release_reset_parent_quest_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.reset_parent_quest_op)
  if (has_reset_parent_quest_op()) {
    clear_has_detail();
    ::proto::ResetParentQuestOp* temp = detail_.reset_parent_quest_op_;
    detail_.reset_parent_quest_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_reset_parent_quest_op(::proto::ResetParentQuestOp* reset_parent_quest_op) {
  clear_detail();
  if (reset_parent_quest_op) {
    set_has_reset_parent_quest_op();
    detail_.reset_parent_quest_op_ = reset_parent_quest_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.reset_parent_quest_op)
}

// .proto.RefreshGroupOp refresh_group_op = 7;
bool OfflineMsgBin::has_refresh_group_op() const {
  return detail_case() == kRefreshGroupOp;
}
void OfflineMsgBin::set_has_refresh_group_op() {
  _oneof_case_[0] = kRefreshGroupOp;
}
void OfflineMsgBin::clear_refresh_group_op() {
  if (has_refresh_group_op()) {
    delete detail_.refresh_group_op_;
    clear_has_detail();
  }
}
 const ::proto::RefreshGroupOp& OfflineMsgBin::refresh_group_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.refresh_group_op)
  return has_refresh_group_op()
      ? *detail_.refresh_group_op_
      : ::proto::RefreshGroupOp::default_instance();
}
::proto::RefreshGroupOp* OfflineMsgBin::mutable_refresh_group_op() {
  if (!has_refresh_group_op()) {
    clear_detail();
    set_has_refresh_group_op();
    detail_.refresh_group_op_ = new ::proto::RefreshGroupOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.refresh_group_op)
  return detail_.refresh_group_op_;
}
::proto::RefreshGroupOp* OfflineMsgBin::release_refresh_group_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.refresh_group_op)
  if (has_refresh_group_op()) {
    clear_has_detail();
    ::proto::RefreshGroupOp* temp = detail_.refresh_group_op_;
    detail_.refresh_group_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_refresh_group_op(::proto::RefreshGroupOp* refresh_group_op) {
  clear_detail();
  if (refresh_group_op) {
    set_has_refresh_group_op();
    detail_.refresh_group_op_ = refresh_group_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.refresh_group_op)
}

// .proto.SetScenePointLockStatusOp set_scene_point_lock_status_op = 8;
bool OfflineMsgBin::has_set_scene_point_lock_status_op() const {
  return detail_case() == kSetScenePointLockStatusOp;
}
void OfflineMsgBin::set_has_set_scene_point_lock_status_op() {
  _oneof_case_[0] = kSetScenePointLockStatusOp;
}
void OfflineMsgBin::clear_set_scene_point_lock_status_op() {
  if (has_set_scene_point_lock_status_op()) {
    delete detail_.set_scene_point_lock_status_op_;
    clear_has_detail();
  }
}
 const ::proto::SetScenePointLockStatusOp& OfflineMsgBin::set_scene_point_lock_status_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_scene_point_lock_status_op)
  return has_set_scene_point_lock_status_op()
      ? *detail_.set_scene_point_lock_status_op_
      : ::proto::SetScenePointLockStatusOp::default_instance();
}
::proto::SetScenePointLockStatusOp* OfflineMsgBin::mutable_set_scene_point_lock_status_op() {
  if (!has_set_scene_point_lock_status_op()) {
    clear_detail();
    set_has_set_scene_point_lock_status_op();
    detail_.set_scene_point_lock_status_op_ = new ::proto::SetScenePointLockStatusOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_scene_point_lock_status_op)
  return detail_.set_scene_point_lock_status_op_;
}
::proto::SetScenePointLockStatusOp* OfflineMsgBin::release_set_scene_point_lock_status_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_scene_point_lock_status_op)
  if (has_set_scene_point_lock_status_op()) {
    clear_has_detail();
    ::proto::SetScenePointLockStatusOp* temp = detail_.set_scene_point_lock_status_op_;
    detail_.set_scene_point_lock_status_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_set_scene_point_lock_status_op(::proto::SetScenePointLockStatusOp* set_scene_point_lock_status_op) {
  clear_detail();
  if (set_scene_point_lock_status_op) {
    set_has_set_scene_point_lock_status_op();
    detail_.set_scene_point_lock_status_op_ = set_scene_point_lock_status_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_scene_point_lock_status_op)
}

// .proto.SetPlayerNickNameOp set_nick_name_op = 9;
bool OfflineMsgBin::has_set_nick_name_op() const {
  return detail_case() == kSetNickNameOp;
}
void OfflineMsgBin::set_has_set_nick_name_op() {
  _oneof_case_[0] = kSetNickNameOp;
}
void OfflineMsgBin::clear_set_nick_name_op() {
  if (has_set_nick_name_op()) {
    delete detail_.set_nick_name_op_;
    clear_has_detail();
  }
}
 const ::proto::SetPlayerNickNameOp& OfflineMsgBin::set_nick_name_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_nick_name_op)
  return has_set_nick_name_op()
      ? *detail_.set_nick_name_op_
      : ::proto::SetPlayerNickNameOp::default_instance();
}
::proto::SetPlayerNickNameOp* OfflineMsgBin::mutable_set_nick_name_op() {
  if (!has_set_nick_name_op()) {
    clear_detail();
    set_has_set_nick_name_op();
    detail_.set_nick_name_op_ = new ::proto::SetPlayerNickNameOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_nick_name_op)
  return detail_.set_nick_name_op_;
}
::proto::SetPlayerNickNameOp* OfflineMsgBin::release_set_nick_name_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_nick_name_op)
  if (has_set_nick_name_op()) {
    clear_has_detail();
    ::proto::SetPlayerNickNameOp* temp = detail_.set_nick_name_op_;
    detail_.set_nick_name_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_set_nick_name_op(::proto::SetPlayerNickNameOp* set_nick_name_op) {
  clear_detail();
  if (set_nick_name_op) {
    set_has_set_nick_name_op();
    detail_.set_nick_name_op_ = set_nick_name_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_nick_name_op)
}

// .proto.RefreshShopOp refresh_shop_op = 10;
bool OfflineMsgBin::has_refresh_shop_op() const {
  return detail_case() == kRefreshShopOp;
}
void OfflineMsgBin::set_has_refresh_shop_op() {
  _oneof_case_[0] = kRefreshShopOp;
}
void OfflineMsgBin::clear_refresh_shop_op() {
  if (has_refresh_shop_op()) {
    delete detail_.refresh_shop_op_;
    clear_has_detail();
  }
}
 const ::proto::RefreshShopOp& OfflineMsgBin::refresh_shop_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.refresh_shop_op)
  return has_refresh_shop_op()
      ? *detail_.refresh_shop_op_
      : ::proto::RefreshShopOp::default_instance();
}
::proto::RefreshShopOp* OfflineMsgBin::mutable_refresh_shop_op() {
  if (!has_refresh_shop_op()) {
    clear_detail();
    set_has_refresh_shop_op();
    detail_.refresh_shop_op_ = new ::proto::RefreshShopOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.refresh_shop_op)
  return detail_.refresh_shop_op_;
}
::proto::RefreshShopOp* OfflineMsgBin::release_refresh_shop_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.refresh_shop_op)
  if (has_refresh_shop_op()) {
    clear_has_detail();
    ::proto::RefreshShopOp* temp = detail_.refresh_shop_op_;
    detail_.refresh_shop_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_refresh_shop_op(::proto::RefreshShopOp* refresh_shop_op) {
  clear_detail();
  if (refresh_shop_op) {
    set_has_refresh_shop_op();
    detail_.refresh_shop_op_ = refresh_shop_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.refresh_shop_op)
}

// .proto.UnlockTalentOp unlock_talent_op = 11;
bool OfflineMsgBin::has_unlock_talent_op() const {
  return detail_case() == kUnlockTalentOp;
}
void OfflineMsgBin::set_has_unlock_talent_op() {
  _oneof_case_[0] = kUnlockTalentOp;
}
void OfflineMsgBin::clear_unlock_talent_op() {
  if (has_unlock_talent_op()) {
    delete detail_.unlock_talent_op_;
    clear_has_detail();
  }
}
 const ::proto::UnlockTalentOp& OfflineMsgBin::unlock_talent_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.unlock_talent_op)
  return has_unlock_talent_op()
      ? *detail_.unlock_talent_op_
      : ::proto::UnlockTalentOp::default_instance();
}
::proto::UnlockTalentOp* OfflineMsgBin::mutable_unlock_talent_op() {
  if (!has_unlock_talent_op()) {
    clear_detail();
    set_has_unlock_talent_op();
    detail_.unlock_talent_op_ = new ::proto::UnlockTalentOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.unlock_talent_op)
  return detail_.unlock_talent_op_;
}
::proto::UnlockTalentOp* OfflineMsgBin::release_unlock_talent_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.unlock_talent_op)
  if (has_unlock_talent_op()) {
    clear_has_detail();
    ::proto::UnlockTalentOp* temp = detail_.unlock_talent_op_;
    detail_.unlock_talent_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_unlock_talent_op(::proto::UnlockTalentOp* unlock_talent_op) {
  clear_detail();
  if (unlock_talent_op) {
    set_has_unlock_talent_op();
    detail_.unlock_talent_op_ = unlock_talent_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.unlock_talent_op)
}

// .proto.TakeOffEquipOp take_off_equip_op = 12;
bool OfflineMsgBin::has_take_off_equip_op() const {
  return detail_case() == kTakeOffEquipOp;
}
void OfflineMsgBin::set_has_take_off_equip_op() {
  _oneof_case_[0] = kTakeOffEquipOp;
}
void OfflineMsgBin::clear_take_off_equip_op() {
  if (has_take_off_equip_op()) {
    delete detail_.take_off_equip_op_;
    clear_has_detail();
  }
}
 const ::proto::TakeOffEquipOp& OfflineMsgBin::take_off_equip_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.take_off_equip_op)
  return has_take_off_equip_op()
      ? *detail_.take_off_equip_op_
      : ::proto::TakeOffEquipOp::default_instance();
}
::proto::TakeOffEquipOp* OfflineMsgBin::mutable_take_off_equip_op() {
  if (!has_take_off_equip_op()) {
    clear_detail();
    set_has_take_off_equip_op();
    detail_.take_off_equip_op_ = new ::proto::TakeOffEquipOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.take_off_equip_op)
  return detail_.take_off_equip_op_;
}
::proto::TakeOffEquipOp* OfflineMsgBin::release_take_off_equip_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.take_off_equip_op)
  if (has_take_off_equip_op()) {
    clear_has_detail();
    ::proto::TakeOffEquipOp* temp = detail_.take_off_equip_op_;
    detail_.take_off_equip_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_take_off_equip_op(::proto::TakeOffEquipOp* take_off_equip_op) {
  clear_detail();
  if (take_off_equip_op) {
    set_has_take_off_equip_op();
    detail_.take_off_equip_op_ = take_off_equip_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.take_off_equip_op)
}

// .proto.DelMailOp del_mail_op = 13;
bool OfflineMsgBin::has_del_mail_op() const {
  return detail_case() == kDelMailOp;
}
void OfflineMsgBin::set_has_del_mail_op() {
  _oneof_case_[0] = kDelMailOp;
}
void OfflineMsgBin::clear_del_mail_op() {
  if (has_del_mail_op()) {
    delete detail_.del_mail_op_;
    clear_has_detail();
  }
}
 const ::proto::DelMailOp& OfflineMsgBin::del_mail_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.del_mail_op)
  return has_del_mail_op()
      ? *detail_.del_mail_op_
      : ::proto::DelMailOp::default_instance();
}
::proto::DelMailOp* OfflineMsgBin::mutable_del_mail_op() {
  if (!has_del_mail_op()) {
    clear_detail();
    set_has_del_mail_op();
    detail_.del_mail_op_ = new ::proto::DelMailOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.del_mail_op)
  return detail_.del_mail_op_;
}
::proto::DelMailOp* OfflineMsgBin::release_del_mail_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.del_mail_op)
  if (has_del_mail_op()) {
    clear_has_detail();
    ::proto::DelMailOp* temp = detail_.del_mail_op_;
    detail_.del_mail_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_del_mail_op(::proto::DelMailOp* del_mail_op) {
  clear_detail();
  if (del_mail_op) {
    set_has_del_mail_op();
    detail_.del_mail_op_ = del_mail_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.del_mail_op)
}

// .proto.FinishDailyTaskOp finish_daily_task_op = 14;
bool OfflineMsgBin::has_finish_daily_task_op() const {
  return detail_case() == kFinishDailyTaskOp;
}
void OfflineMsgBin::set_has_finish_daily_task_op() {
  _oneof_case_[0] = kFinishDailyTaskOp;
}
void OfflineMsgBin::clear_finish_daily_task_op() {
  if (has_finish_daily_task_op()) {
    delete detail_.finish_daily_task_op_;
    clear_has_detail();
  }
}
 const ::proto::FinishDailyTaskOp& OfflineMsgBin::finish_daily_task_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.finish_daily_task_op)
  return has_finish_daily_task_op()
      ? *detail_.finish_daily_task_op_
      : ::proto::FinishDailyTaskOp::default_instance();
}
::proto::FinishDailyTaskOp* OfflineMsgBin::mutable_finish_daily_task_op() {
  if (!has_finish_daily_task_op()) {
    clear_detail();
    set_has_finish_daily_task_op();
    detail_.finish_daily_task_op_ = new ::proto::FinishDailyTaskOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.finish_daily_task_op)
  return detail_.finish_daily_task_op_;
}
::proto::FinishDailyTaskOp* OfflineMsgBin::release_finish_daily_task_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.finish_daily_task_op)
  if (has_finish_daily_task_op()) {
    clear_has_detail();
    ::proto::FinishDailyTaskOp* temp = detail_.finish_daily_task_op_;
    detail_.finish_daily_task_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_finish_daily_task_op(::proto::FinishDailyTaskOp* finish_daily_task_op) {
  clear_detail();
  if (finish_daily_task_op) {
    set_has_finish_daily_task_op();
    detail_.finish_daily_task_op_ = finish_daily_task_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.finish_daily_task_op)
}

// .proto.UnlockAreaOp unlock_area_op = 15;
bool OfflineMsgBin::has_unlock_area_op() const {
  return detail_case() == kUnlockAreaOp;
}
void OfflineMsgBin::set_has_unlock_area_op() {
  _oneof_case_[0] = kUnlockAreaOp;
}
void OfflineMsgBin::clear_unlock_area_op() {
  if (has_unlock_area_op()) {
    delete detail_.unlock_area_op_;
    clear_has_detail();
  }
}
 const ::proto::UnlockAreaOp& OfflineMsgBin::unlock_area_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.unlock_area_op)
  return has_unlock_area_op()
      ? *detail_.unlock_area_op_
      : ::proto::UnlockAreaOp::default_instance();
}
::proto::UnlockAreaOp* OfflineMsgBin::mutable_unlock_area_op() {
  if (!has_unlock_area_op()) {
    clear_detail();
    set_has_unlock_area_op();
    detail_.unlock_area_op_ = new ::proto::UnlockAreaOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.unlock_area_op)
  return detail_.unlock_area_op_;
}
::proto::UnlockAreaOp* OfflineMsgBin::release_unlock_area_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.unlock_area_op)
  if (has_unlock_area_op()) {
    clear_has_detail();
    ::proto::UnlockAreaOp* temp = detail_.unlock_area_op_;
    detail_.unlock_area_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_unlock_area_op(::proto::UnlockAreaOp* unlock_area_op) {
  clear_detail();
  if (unlock_area_op) {
    set_has_unlock_area_op();
    detail_.unlock_area_op_ = unlock_area_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.unlock_area_op)
}

// .proto.DelItemNegativeOp del_item_negative_op = 16;
bool OfflineMsgBin::has_del_item_negative_op() const {
  return detail_case() == kDelItemNegativeOp;
}
void OfflineMsgBin::set_has_del_item_negative_op() {
  _oneof_case_[0] = kDelItemNegativeOp;
}
void OfflineMsgBin::clear_del_item_negative_op() {
  if (has_del_item_negative_op()) {
    delete detail_.del_item_negative_op_;
    clear_has_detail();
  }
}
 const ::proto::DelItemNegativeOp& OfflineMsgBin::del_item_negative_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.del_item_negative_op)
  return has_del_item_negative_op()
      ? *detail_.del_item_negative_op_
      : ::proto::DelItemNegativeOp::default_instance();
}
::proto::DelItemNegativeOp* OfflineMsgBin::mutable_del_item_negative_op() {
  if (!has_del_item_negative_op()) {
    clear_detail();
    set_has_del_item_negative_op();
    detail_.del_item_negative_op_ = new ::proto::DelItemNegativeOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.del_item_negative_op)
  return detail_.del_item_negative_op_;
}
::proto::DelItemNegativeOp* OfflineMsgBin::release_del_item_negative_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.del_item_negative_op)
  if (has_del_item_negative_op()) {
    clear_has_detail();
    ::proto::DelItemNegativeOp* temp = detail_.del_item_negative_op_;
    detail_.del_item_negative_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_del_item_negative_op(::proto::DelItemNegativeOp* del_item_negative_op) {
  clear_detail();
  if (del_item_negative_op) {
    set_has_del_item_negative_op();
    detail_.del_item_negative_op_ = del_item_negative_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.del_item_negative_op)
}

// .proto.DelEquipOp del_equip_op = 17;
bool OfflineMsgBin::has_del_equip_op() const {
  return detail_case() == kDelEquipOp;
}
void OfflineMsgBin::set_has_del_equip_op() {
  _oneof_case_[0] = kDelEquipOp;
}
void OfflineMsgBin::clear_del_equip_op() {
  if (has_del_equip_op()) {
    delete detail_.del_equip_op_;
    clear_has_detail();
  }
}
 const ::proto::DelEquipOp& OfflineMsgBin::del_equip_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.del_equip_op)
  return has_del_equip_op()
      ? *detail_.del_equip_op_
      : ::proto::DelEquipOp::default_instance();
}
::proto::DelEquipOp* OfflineMsgBin::mutable_del_equip_op() {
  if (!has_del_equip_op()) {
    clear_detail();
    set_has_del_equip_op();
    detail_.del_equip_op_ = new ::proto::DelEquipOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.del_equip_op)
  return detail_.del_equip_op_;
}
::proto::DelEquipOp* OfflineMsgBin::release_del_equip_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.del_equip_op)
  if (has_del_equip_op()) {
    clear_has_detail();
    ::proto::DelEquipOp* temp = detail_.del_equip_op_;
    detail_.del_equip_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_del_equip_op(::proto::DelEquipOp* del_equip_op) {
  clear_detail();
  if (del_equip_op) {
    set_has_del_equip_op();
    detail_.del_equip_op_ = del_equip_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.del_equip_op)
}

// .proto.AddItemOp add_item_op = 18;
bool OfflineMsgBin::has_add_item_op() const {
  return detail_case() == kAddItemOp;
}
void OfflineMsgBin::set_has_add_item_op() {
  _oneof_case_[0] = kAddItemOp;
}
void OfflineMsgBin::clear_add_item_op() {
  if (has_add_item_op()) {
    delete detail_.add_item_op_;
    clear_has_detail();
  }
}
 const ::proto::AddItemOp& OfflineMsgBin::add_item_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.add_item_op)
  return has_add_item_op()
      ? *detail_.add_item_op_
      : ::proto::AddItemOp::default_instance();
}
::proto::AddItemOp* OfflineMsgBin::mutable_add_item_op() {
  if (!has_add_item_op()) {
    clear_detail();
    set_has_add_item_op();
    detail_.add_item_op_ = new ::proto::AddItemOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.add_item_op)
  return detail_.add_item_op_;
}
::proto::AddItemOp* OfflineMsgBin::release_add_item_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.add_item_op)
  if (has_add_item_op()) {
    clear_has_detail();
    ::proto::AddItemOp* temp = detail_.add_item_op_;
    detail_.add_item_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_add_item_op(::proto::AddItemOp* add_item_op) {
  clear_detail();
  if (add_item_op) {
    set_has_add_item_op();
    detail_.add_item_op_ = add_item_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.add_item_op)
}

// .proto.ModifyBornPosOp modify_born_pos_op = 19;
bool OfflineMsgBin::has_modify_born_pos_op() const {
  return detail_case() == kModifyBornPosOp;
}
void OfflineMsgBin::set_has_modify_born_pos_op() {
  _oneof_case_[0] = kModifyBornPosOp;
}
void OfflineMsgBin::clear_modify_born_pos_op() {
  if (has_modify_born_pos_op()) {
    delete detail_.modify_born_pos_op_;
    clear_has_detail();
  }
}
 const ::proto::ModifyBornPosOp& OfflineMsgBin::modify_born_pos_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.modify_born_pos_op)
  return has_modify_born_pos_op()
      ? *detail_.modify_born_pos_op_
      : ::proto::ModifyBornPosOp::default_instance();
}
::proto::ModifyBornPosOp* OfflineMsgBin::mutable_modify_born_pos_op() {
  if (!has_modify_born_pos_op()) {
    clear_detail();
    set_has_modify_born_pos_op();
    detail_.modify_born_pos_op_ = new ::proto::ModifyBornPosOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.modify_born_pos_op)
  return detail_.modify_born_pos_op_;
}
::proto::ModifyBornPosOp* OfflineMsgBin::release_modify_born_pos_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.modify_born_pos_op)
  if (has_modify_born_pos_op()) {
    clear_has_detail();
    ::proto::ModifyBornPosOp* temp = detail_.modify_born_pos_op_;
    detail_.modify_born_pos_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_modify_born_pos_op(::proto::ModifyBornPosOp* modify_born_pos_op) {
  clear_detail();
  if (modify_born_pos_op) {
    set_has_modify_born_pos_op();
    detail_.modify_born_pos_op_ = modify_born_pos_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.modify_born_pos_op)
}

// .proto.SubCoinNegativeOp sub_coin_negative_op = 20;
bool OfflineMsgBin::has_sub_coin_negative_op() const {
  return detail_case() == kSubCoinNegativeOp;
}
void OfflineMsgBin::set_has_sub_coin_negative_op() {
  _oneof_case_[0] = kSubCoinNegativeOp;
}
void OfflineMsgBin::clear_sub_coin_negative_op() {
  if (has_sub_coin_negative_op()) {
    delete detail_.sub_coin_negative_op_;
    clear_has_detail();
  }
}
 const ::proto::SubCoinNegativeOp& OfflineMsgBin::sub_coin_negative_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.sub_coin_negative_op)
  return has_sub_coin_negative_op()
      ? *detail_.sub_coin_negative_op_
      : ::proto::SubCoinNegativeOp::default_instance();
}
::proto::SubCoinNegativeOp* OfflineMsgBin::mutable_sub_coin_negative_op() {
  if (!has_sub_coin_negative_op()) {
    clear_detail();
    set_has_sub_coin_negative_op();
    detail_.sub_coin_negative_op_ = new ::proto::SubCoinNegativeOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.sub_coin_negative_op)
  return detail_.sub_coin_negative_op_;
}
::proto::SubCoinNegativeOp* OfflineMsgBin::release_sub_coin_negative_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.sub_coin_negative_op)
  if (has_sub_coin_negative_op()) {
    clear_has_detail();
    ::proto::SubCoinNegativeOp* temp = detail_.sub_coin_negative_op_;
    detail_.sub_coin_negative_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_sub_coin_negative_op(::proto::SubCoinNegativeOp* sub_coin_negative_op) {
  clear_detail();
  if (sub_coin_negative_op) {
    set_has_sub_coin_negative_op();
    detail_.sub_coin_negative_op_ = sub_coin_negative_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.sub_coin_negative_op)
}

// .proto.SetQuestContentProgressOp set_quest_content_progress_op = 21;
bool OfflineMsgBin::has_set_quest_content_progress_op() const {
  return detail_case() == kSetQuestContentProgressOp;
}
void OfflineMsgBin::set_has_set_quest_content_progress_op() {
  _oneof_case_[0] = kSetQuestContentProgressOp;
}
void OfflineMsgBin::clear_set_quest_content_progress_op() {
  if (has_set_quest_content_progress_op()) {
    delete detail_.set_quest_content_progress_op_;
    clear_has_detail();
  }
}
 const ::proto::SetQuestContentProgressOp& OfflineMsgBin::set_quest_content_progress_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_quest_content_progress_op)
  return has_set_quest_content_progress_op()
      ? *detail_.set_quest_content_progress_op_
      : ::proto::SetQuestContentProgressOp::default_instance();
}
::proto::SetQuestContentProgressOp* OfflineMsgBin::mutable_set_quest_content_progress_op() {
  if (!has_set_quest_content_progress_op()) {
    clear_detail();
    set_has_set_quest_content_progress_op();
    detail_.set_quest_content_progress_op_ = new ::proto::SetQuestContentProgressOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_quest_content_progress_op)
  return detail_.set_quest_content_progress_op_;
}
::proto::SetQuestContentProgressOp* OfflineMsgBin::release_set_quest_content_progress_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_quest_content_progress_op)
  if (has_set_quest_content_progress_op()) {
    clear_has_detail();
    ::proto::SetQuestContentProgressOp* temp = detail_.set_quest_content_progress_op_;
    detail_.set_quest_content_progress_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_set_quest_content_progress_op(::proto::SetQuestContentProgressOp* set_quest_content_progress_op) {
  clear_detail();
  if (set_quest_content_progress_op) {
    set_has_set_quest_content_progress_op();
    detail_.set_quest_content_progress_op_ = set_quest_content_progress_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_quest_content_progress_op)
}

// .proto.FinishOrderOp finish_order_op = 22;
bool OfflineMsgBin::has_finish_order_op() const {
  return detail_case() == kFinishOrderOp;
}
void OfflineMsgBin::set_has_finish_order_op() {
  _oneof_case_[0] = kFinishOrderOp;
}
void OfflineMsgBin::clear_finish_order_op() {
  if (has_finish_order_op()) {
    delete detail_.finish_order_op_;
    clear_has_detail();
  }
}
 const ::proto::FinishOrderOp& OfflineMsgBin::finish_order_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.finish_order_op)
  return has_finish_order_op()
      ? *detail_.finish_order_op_
      : ::proto::FinishOrderOp::default_instance();
}
::proto::FinishOrderOp* OfflineMsgBin::mutable_finish_order_op() {
  if (!has_finish_order_op()) {
    clear_detail();
    set_has_finish_order_op();
    detail_.finish_order_op_ = new ::proto::FinishOrderOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.finish_order_op)
  return detail_.finish_order_op_;
}
::proto::FinishOrderOp* OfflineMsgBin::release_finish_order_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.finish_order_op)
  if (has_finish_order_op()) {
    clear_has_detail();
    ::proto::FinishOrderOp* temp = detail_.finish_order_op_;
    detail_.finish_order_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_finish_order_op(::proto::FinishOrderOp* finish_order_op) {
  clear_detail();
  if (finish_order_op) {
    set_has_finish_order_op();
    detail_.finish_order_op_ = finish_order_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.finish_order_op)
}

// .proto.AddOrModifyWatcherOp add_or_modify_watcher_op = 23;
bool OfflineMsgBin::has_add_or_modify_watcher_op() const {
  return detail_case() == kAddOrModifyWatcherOp;
}
void OfflineMsgBin::set_has_add_or_modify_watcher_op() {
  _oneof_case_[0] = kAddOrModifyWatcherOp;
}
void OfflineMsgBin::clear_add_or_modify_watcher_op() {
  if (has_add_or_modify_watcher_op()) {
    delete detail_.add_or_modify_watcher_op_;
    clear_has_detail();
  }
}
 const ::proto::AddOrModifyWatcherOp& OfflineMsgBin::add_or_modify_watcher_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.add_or_modify_watcher_op)
  return has_add_or_modify_watcher_op()
      ? *detail_.add_or_modify_watcher_op_
      : ::proto::AddOrModifyWatcherOp::default_instance();
}
::proto::AddOrModifyWatcherOp* OfflineMsgBin::mutable_add_or_modify_watcher_op() {
  if (!has_add_or_modify_watcher_op()) {
    clear_detail();
    set_has_add_or_modify_watcher_op();
    detail_.add_or_modify_watcher_op_ = new ::proto::AddOrModifyWatcherOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.add_or_modify_watcher_op)
  return detail_.add_or_modify_watcher_op_;
}
::proto::AddOrModifyWatcherOp* OfflineMsgBin::release_add_or_modify_watcher_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.add_or_modify_watcher_op)
  if (has_add_or_modify_watcher_op()) {
    clear_has_detail();
    ::proto::AddOrModifyWatcherOp* temp = detail_.add_or_modify_watcher_op_;
    detail_.add_or_modify_watcher_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_add_or_modify_watcher_op(::proto::AddOrModifyWatcherOp* add_or_modify_watcher_op) {
  clear_detail();
  if (add_or_modify_watcher_op) {
    set_has_add_or_modify_watcher_op();
    detail_.add_or_modify_watcher_op_ = add_or_modify_watcher_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.add_or_modify_watcher_op)
}

// .proto.DelWatcherOp del_watcher_op = 24;
bool OfflineMsgBin::has_del_watcher_op() const {
  return detail_case() == kDelWatcherOp;
}
void OfflineMsgBin::set_has_del_watcher_op() {
  _oneof_case_[0] = kDelWatcherOp;
}
void OfflineMsgBin::clear_del_watcher_op() {
  if (has_del_watcher_op()) {
    delete detail_.del_watcher_op_;
    clear_has_detail();
  }
}
 const ::proto::DelWatcherOp& OfflineMsgBin::del_watcher_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.del_watcher_op)
  return has_del_watcher_op()
      ? *detail_.del_watcher_op_
      : ::proto::DelWatcherOp::default_instance();
}
::proto::DelWatcherOp* OfflineMsgBin::mutable_del_watcher_op() {
  if (!has_del_watcher_op()) {
    clear_detail();
    set_has_del_watcher_op();
    detail_.del_watcher_op_ = new ::proto::DelWatcherOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.del_watcher_op)
  return detail_.del_watcher_op_;
}
::proto::DelWatcherOp* OfflineMsgBin::release_del_watcher_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.del_watcher_op)
  if (has_del_watcher_op()) {
    clear_has_detail();
    ::proto::DelWatcherOp* temp = detail_.del_watcher_op_;
    detail_.del_watcher_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_del_watcher_op(::proto::DelWatcherOp* del_watcher_op) {
  clear_detail();
  if (del_watcher_op) {
    set_has_del_watcher_op();
    detail_.del_watcher_op_ = del_watcher_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.del_watcher_op)
}

// .proto.SetSignatureOp set_signature_op = 25;
bool OfflineMsgBin::has_set_signature_op() const {
  return detail_case() == kSetSignatureOp;
}
void OfflineMsgBin::set_has_set_signature_op() {
  _oneof_case_[0] = kSetSignatureOp;
}
void OfflineMsgBin::clear_set_signature_op() {
  if (has_set_signature_op()) {
    delete detail_.set_signature_op_;
    clear_has_detail();
  }
}
 const ::proto::SetSignatureOp& OfflineMsgBin::set_signature_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_signature_op)
  return has_set_signature_op()
      ? *detail_.set_signature_op_
      : ::proto::SetSignatureOp::default_instance();
}
::proto::SetSignatureOp* OfflineMsgBin::mutable_set_signature_op() {
  if (!has_set_signature_op()) {
    clear_detail();
    set_has_set_signature_op();
    detail_.set_signature_op_ = new ::proto::SetSignatureOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_signature_op)
  return detail_.set_signature_op_;
}
::proto::SetSignatureOp* OfflineMsgBin::release_set_signature_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_signature_op)
  if (has_set_signature_op()) {
    clear_has_detail();
    ::proto::SetSignatureOp* temp = detail_.set_signature_op_;
    detail_.set_signature_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_set_signature_op(::proto::SetSignatureOp* set_signature_op) {
  clear_detail();
  if (set_signature_op) {
    set_has_set_signature_op();
    detail_.set_signature_op_ = set_signature_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_signature_op)
}

// .proto.AddOrSubResinOp add_or_sub_resin_op = 26;
bool OfflineMsgBin::has_add_or_sub_resin_op() const {
  return detail_case() == kAddOrSubResinOp;
}
void OfflineMsgBin::set_has_add_or_sub_resin_op() {
  _oneof_case_[0] = kAddOrSubResinOp;
}
void OfflineMsgBin::clear_add_or_sub_resin_op() {
  if (has_add_or_sub_resin_op()) {
    delete detail_.add_or_sub_resin_op_;
    clear_has_detail();
  }
}
 const ::proto::AddOrSubResinOp& OfflineMsgBin::add_or_sub_resin_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.add_or_sub_resin_op)
  return has_add_or_sub_resin_op()
      ? *detail_.add_or_sub_resin_op_
      : ::proto::AddOrSubResinOp::default_instance();
}
::proto::AddOrSubResinOp* OfflineMsgBin::mutable_add_or_sub_resin_op() {
  if (!has_add_or_sub_resin_op()) {
    clear_detail();
    set_has_add_or_sub_resin_op();
    detail_.add_or_sub_resin_op_ = new ::proto::AddOrSubResinOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.add_or_sub_resin_op)
  return detail_.add_or_sub_resin_op_;
}
::proto::AddOrSubResinOp* OfflineMsgBin::release_add_or_sub_resin_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.add_or_sub_resin_op)
  if (has_add_or_sub_resin_op()) {
    clear_has_detail();
    ::proto::AddOrSubResinOp* temp = detail_.add_or_sub_resin_op_;
    detail_.add_or_sub_resin_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_add_or_sub_resin_op(::proto::AddOrSubResinOp* add_or_sub_resin_op) {
  clear_detail();
  if (add_or_sub_resin_op) {
    set_has_add_or_sub_resin_op();
    detail_.add_or_sub_resin_op_ = add_or_sub_resin_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.add_or_sub_resin_op)
}

// .proto.SetQuestGlobalVarValueOp set_quest_global_var_value_op = 27;
bool OfflineMsgBin::has_set_quest_global_var_value_op() const {
  return detail_case() == kSetQuestGlobalVarValueOp;
}
void OfflineMsgBin::set_has_set_quest_global_var_value_op() {
  _oneof_case_[0] = kSetQuestGlobalVarValueOp;
}
void OfflineMsgBin::clear_set_quest_global_var_value_op() {
  if (has_set_quest_global_var_value_op()) {
    delete detail_.set_quest_global_var_value_op_;
    clear_has_detail();
  }
}
 const ::proto::SetQuestGlobalVarValueOp& OfflineMsgBin::set_quest_global_var_value_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_quest_global_var_value_op)
  return has_set_quest_global_var_value_op()
      ? *detail_.set_quest_global_var_value_op_
      : ::proto::SetQuestGlobalVarValueOp::default_instance();
}
::proto::SetQuestGlobalVarValueOp* OfflineMsgBin::mutable_set_quest_global_var_value_op() {
  if (!has_set_quest_global_var_value_op()) {
    clear_detail();
    set_has_set_quest_global_var_value_op();
    detail_.set_quest_global_var_value_op_ = new ::proto::SetQuestGlobalVarValueOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_quest_global_var_value_op)
  return detail_.set_quest_global_var_value_op_;
}
::proto::SetQuestGlobalVarValueOp* OfflineMsgBin::release_set_quest_global_var_value_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_quest_global_var_value_op)
  if (has_set_quest_global_var_value_op()) {
    clear_has_detail();
    ::proto::SetQuestGlobalVarValueOp* temp = detail_.set_quest_global_var_value_op_;
    detail_.set_quest_global_var_value_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_set_quest_global_var_value_op(::proto::SetQuestGlobalVarValueOp* set_quest_global_var_value_op) {
  clear_detail();
  if (set_quest_global_var_value_op) {
    set_has_set_quest_global_var_value_op();
    detail_.set_quest_global_var_value_op_ = set_quest_global_var_value_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_quest_global_var_value_op)
}

// .proto.AddMcoinVipPointOp add_mcoin_op = 28;
bool OfflineMsgBin::has_add_mcoin_op() const {
  return detail_case() == kAddMcoinOp;
}
void OfflineMsgBin::set_has_add_mcoin_op() {
  _oneof_case_[0] = kAddMcoinOp;
}
void OfflineMsgBin::clear_add_mcoin_op() {
  if (has_add_mcoin_op()) {
    delete detail_.add_mcoin_op_;
    clear_has_detail();
  }
}
 const ::proto::AddMcoinVipPointOp& OfflineMsgBin::add_mcoin_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.add_mcoin_op)
  return has_add_mcoin_op()
      ? *detail_.add_mcoin_op_
      : ::proto::AddMcoinVipPointOp::default_instance();
}
::proto::AddMcoinVipPointOp* OfflineMsgBin::mutable_add_mcoin_op() {
  if (!has_add_mcoin_op()) {
    clear_detail();
    set_has_add_mcoin_op();
    detail_.add_mcoin_op_ = new ::proto::AddMcoinVipPointOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.add_mcoin_op)
  return detail_.add_mcoin_op_;
}
::proto::AddMcoinVipPointOp* OfflineMsgBin::release_add_mcoin_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.add_mcoin_op)
  if (has_add_mcoin_op()) {
    clear_has_detail();
    ::proto::AddMcoinVipPointOp* temp = detail_.add_mcoin_op_;
    detail_.add_mcoin_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_add_mcoin_op(::proto::AddMcoinVipPointOp* add_mcoin_op) {
  clear_detail();
  if (add_mcoin_op) {
    set_has_add_mcoin_op();
    detail_.add_mcoin_op_ = add_mcoin_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.add_mcoin_op)
}

// .proto.GroupBinOp group_bin_op = 29;
bool OfflineMsgBin::has_group_bin_op() const {
  return detail_case() == kGroupBinOp;
}
void OfflineMsgBin::set_has_group_bin_op() {
  _oneof_case_[0] = kGroupBinOp;
}
void OfflineMsgBin::clear_group_bin_op() {
  if (has_group_bin_op()) {
    delete detail_.group_bin_op_;
    clear_has_detail();
  }
}
 const ::proto::GroupBinOp& OfflineMsgBin::group_bin_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.group_bin_op)
  return has_group_bin_op()
      ? *detail_.group_bin_op_
      : ::proto::GroupBinOp::default_instance();
}
::proto::GroupBinOp* OfflineMsgBin::mutable_group_bin_op() {
  if (!has_group_bin_op()) {
    clear_detail();
    set_has_group_bin_op();
    detail_.group_bin_op_ = new ::proto::GroupBinOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.group_bin_op)
  return detail_.group_bin_op_;
}
::proto::GroupBinOp* OfflineMsgBin::release_group_bin_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.group_bin_op)
  if (has_group_bin_op()) {
    clear_has_detail();
    ::proto::GroupBinOp* temp = detail_.group_bin_op_;
    detail_.group_bin_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_group_bin_op(::proto::GroupBinOp* group_bin_op) {
  clear_detail();
  if (group_bin_op) {
    set_has_group_bin_op();
    detail_.group_bin_op_ = group_bin_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.group_bin_op)
}

// .proto.DelOneOffOp del_one_off_op = 30;
bool OfflineMsgBin::has_del_one_off_op() const {
  return detail_case() == kDelOneOffOp;
}
void OfflineMsgBin::set_has_del_one_off_op() {
  _oneof_case_[0] = kDelOneOffOp;
}
void OfflineMsgBin::clear_del_one_off_op() {
  if (has_del_one_off_op()) {
    delete detail_.del_one_off_op_;
    clear_has_detail();
  }
}
 const ::proto::DelOneOffOp& OfflineMsgBin::del_one_off_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.del_one_off_op)
  return has_del_one_off_op()
      ? *detail_.del_one_off_op_
      : ::proto::DelOneOffOp::default_instance();
}
::proto::DelOneOffOp* OfflineMsgBin::mutable_del_one_off_op() {
  if (!has_del_one_off_op()) {
    clear_detail();
    set_has_del_one_off_op();
    detail_.del_one_off_op_ = new ::proto::DelOneOffOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.del_one_off_op)
  return detail_.del_one_off_op_;
}
::proto::DelOneOffOp* OfflineMsgBin::release_del_one_off_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.del_one_off_op)
  if (has_del_one_off_op()) {
    clear_has_detail();
    ::proto::DelOneOffOp* temp = detail_.del_one_off_op_;
    detail_.del_one_off_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_del_one_off_op(::proto::DelOneOffOp* del_one_off_op) {
  clear_detail();
  if (del_one_off_op) {
    set_has_del_one_off_op();
    detail_.del_one_off_op_ = del_one_off_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.del_one_off_op)
}

// .proto.FinishRoutineOp finish_routine_op = 31;
bool OfflineMsgBin::has_finish_routine_op() const {
  return detail_case() == kFinishRoutineOp;
}
void OfflineMsgBin::set_has_finish_routine_op() {
  _oneof_case_[0] = kFinishRoutineOp;
}
void OfflineMsgBin::clear_finish_routine_op() {
  if (has_finish_routine_op()) {
    delete detail_.finish_routine_op_;
    clear_has_detail();
  }
}
 const ::proto::FinishRoutineOp& OfflineMsgBin::finish_routine_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.finish_routine_op)
  return has_finish_routine_op()
      ? *detail_.finish_routine_op_
      : ::proto::FinishRoutineOp::default_instance();
}
::proto::FinishRoutineOp* OfflineMsgBin::mutable_finish_routine_op() {
  if (!has_finish_routine_op()) {
    clear_detail();
    set_has_finish_routine_op();
    detail_.finish_routine_op_ = new ::proto::FinishRoutineOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.finish_routine_op)
  return detail_.finish_routine_op_;
}
::proto::FinishRoutineOp* OfflineMsgBin::release_finish_routine_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.finish_routine_op)
  if (has_finish_routine_op()) {
    clear_has_detail();
    ::proto::FinishRoutineOp* temp = detail_.finish_routine_op_;
    detail_.finish_routine_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_finish_routine_op(::proto::FinishRoutineOp* finish_routine_op) {
  clear_detail();
  if (finish_routine_op) {
    set_has_finish_routine_op();
    detail_.finish_routine_op_ = finish_routine_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.finish_routine_op)
}

// .proto.FinishDailyTaskUnloadGroupOp finish_daily_task_group_op = 32;
bool OfflineMsgBin::has_finish_daily_task_group_op() const {
  return detail_case() == kFinishDailyTaskGroupOp;
}
void OfflineMsgBin::set_has_finish_daily_task_group_op() {
  _oneof_case_[0] = kFinishDailyTaskGroupOp;
}
void OfflineMsgBin::clear_finish_daily_task_group_op() {
  if (has_finish_daily_task_group_op()) {
    delete detail_.finish_daily_task_group_op_;
    clear_has_detail();
  }
}
 const ::proto::FinishDailyTaskUnloadGroupOp& OfflineMsgBin::finish_daily_task_group_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.finish_daily_task_group_op)
  return has_finish_daily_task_group_op()
      ? *detail_.finish_daily_task_group_op_
      : ::proto::FinishDailyTaskUnloadGroupOp::default_instance();
}
::proto::FinishDailyTaskUnloadGroupOp* OfflineMsgBin::mutable_finish_daily_task_group_op() {
  if (!has_finish_daily_task_group_op()) {
    clear_detail();
    set_has_finish_daily_task_group_op();
    detail_.finish_daily_task_group_op_ = new ::proto::FinishDailyTaskUnloadGroupOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.finish_daily_task_group_op)
  return detail_.finish_daily_task_group_op_;
}
::proto::FinishDailyTaskUnloadGroupOp* OfflineMsgBin::release_finish_daily_task_group_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.finish_daily_task_group_op)
  if (has_finish_daily_task_group_op()) {
    clear_has_detail();
    ::proto::FinishDailyTaskUnloadGroupOp* temp = detail_.finish_daily_task_group_op_;
    detail_.finish_daily_task_group_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_finish_daily_task_group_op(::proto::FinishDailyTaskUnloadGroupOp* finish_daily_task_group_op) {
  clear_detail();
  if (finish_daily_task_group_op) {
    set_has_finish_daily_task_group_op();
    detail_.finish_daily_task_group_op_ = finish_daily_task_group_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.finish_daily_task_group_op)
}

// .proto.RefreshBlossomCircleCampOp refresh_blossom_circle_camp_op = 33;
bool OfflineMsgBin::has_refresh_blossom_circle_camp_op() const {
  return detail_case() == kRefreshBlossomCircleCampOp;
}
void OfflineMsgBin::set_has_refresh_blossom_circle_camp_op() {
  _oneof_case_[0] = kRefreshBlossomCircleCampOp;
}
void OfflineMsgBin::clear_refresh_blossom_circle_camp_op() {
  if (has_refresh_blossom_circle_camp_op()) {
    delete detail_.refresh_blossom_circle_camp_op_;
    clear_has_detail();
  }
}
 const ::proto::RefreshBlossomCircleCampOp& OfflineMsgBin::refresh_blossom_circle_camp_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.refresh_blossom_circle_camp_op)
  return has_refresh_blossom_circle_camp_op()
      ? *detail_.refresh_blossom_circle_camp_op_
      : ::proto::RefreshBlossomCircleCampOp::default_instance();
}
::proto::RefreshBlossomCircleCampOp* OfflineMsgBin::mutable_refresh_blossom_circle_camp_op() {
  if (!has_refresh_blossom_circle_camp_op()) {
    clear_detail();
    set_has_refresh_blossom_circle_camp_op();
    detail_.refresh_blossom_circle_camp_op_ = new ::proto::RefreshBlossomCircleCampOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.refresh_blossom_circle_camp_op)
  return detail_.refresh_blossom_circle_camp_op_;
}
::proto::RefreshBlossomCircleCampOp* OfflineMsgBin::release_refresh_blossom_circle_camp_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.refresh_blossom_circle_camp_op)
  if (has_refresh_blossom_circle_camp_op()) {
    clear_has_detail();
    ::proto::RefreshBlossomCircleCampOp* temp = detail_.refresh_blossom_circle_camp_op_;
    detail_.refresh_blossom_circle_camp_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_refresh_blossom_circle_camp_op(::proto::RefreshBlossomCircleCampOp* refresh_blossom_circle_camp_op) {
  clear_detail();
  if (refresh_blossom_circle_camp_op) {
    set_has_refresh_blossom_circle_camp_op();
    detail_.refresh_blossom_circle_camp_op_ = refresh_blossom_circle_camp_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.refresh_blossom_circle_camp_op)
}

// .proto.BlessingActivityGivePicOp blessing_give_pic_op = 34;
bool OfflineMsgBin::has_blessing_give_pic_op() const {
  return detail_case() == kBlessingGivePicOp;
}
void OfflineMsgBin::set_has_blessing_give_pic_op() {
  _oneof_case_[0] = kBlessingGivePicOp;
}
void OfflineMsgBin::clear_blessing_give_pic_op() {
  if (has_blessing_give_pic_op()) {
    delete detail_.blessing_give_pic_op_;
    clear_has_detail();
  }
}
 const ::proto::BlessingActivityGivePicOp& OfflineMsgBin::blessing_give_pic_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.blessing_give_pic_op)
  return has_blessing_give_pic_op()
      ? *detail_.blessing_give_pic_op_
      : ::proto::BlessingActivityGivePicOp::default_instance();
}
::proto::BlessingActivityGivePicOp* OfflineMsgBin::mutable_blessing_give_pic_op() {
  if (!has_blessing_give_pic_op()) {
    clear_detail();
    set_has_blessing_give_pic_op();
    detail_.blessing_give_pic_op_ = new ::proto::BlessingActivityGivePicOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.blessing_give_pic_op)
  return detail_.blessing_give_pic_op_;
}
::proto::BlessingActivityGivePicOp* OfflineMsgBin::release_blessing_give_pic_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.blessing_give_pic_op)
  if (has_blessing_give_pic_op()) {
    clear_has_detail();
    ::proto::BlessingActivityGivePicOp* temp = detail_.blessing_give_pic_op_;
    detail_.blessing_give_pic_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_blessing_give_pic_op(::proto::BlessingActivityGivePicOp* blessing_give_pic_op) {
  clear_detail();
  if (blessing_give_pic_op) {
    set_has_blessing_give_pic_op();
    detail_.blessing_give_pic_op_ = blessing_give_pic_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.blessing_give_pic_op)
}

// .proto.ExpeditionActivityAssistOp expedition_assist_op = 35;
bool OfflineMsgBin::has_expedition_assist_op() const {
  return detail_case() == kExpeditionAssistOp;
}
void OfflineMsgBin::set_has_expedition_assist_op() {
  _oneof_case_[0] = kExpeditionAssistOp;
}
void OfflineMsgBin::clear_expedition_assist_op() {
  if (has_expedition_assist_op()) {
    delete detail_.expedition_assist_op_;
    clear_has_detail();
  }
}
 const ::proto::ExpeditionActivityAssistOp& OfflineMsgBin::expedition_assist_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.expedition_assist_op)
  return has_expedition_assist_op()
      ? *detail_.expedition_assist_op_
      : ::proto::ExpeditionActivityAssistOp::default_instance();
}
::proto::ExpeditionActivityAssistOp* OfflineMsgBin::mutable_expedition_assist_op() {
  if (!has_expedition_assist_op()) {
    clear_detail();
    set_has_expedition_assist_op();
    detail_.expedition_assist_op_ = new ::proto::ExpeditionActivityAssistOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.expedition_assist_op)
  return detail_.expedition_assist_op_;
}
::proto::ExpeditionActivityAssistOp* OfflineMsgBin::release_expedition_assist_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.expedition_assist_op)
  if (has_expedition_assist_op()) {
    clear_has_detail();
    ::proto::ExpeditionActivityAssistOp* temp = detail_.expedition_assist_op_;
    detail_.expedition_assist_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_expedition_assist_op(::proto::ExpeditionActivityAssistOp* expedition_assist_op) {
  clear_detail();
  if (expedition_assist_op) {
    set_has_expedition_assist_op();
    detail_.expedition_assist_op_ = expedition_assist_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.expedition_assist_op)
}

// .proto.RecoverWorldLevelOp recover_world_level_op = 36;
bool OfflineMsgBin::has_recover_world_level_op() const {
  return detail_case() == kRecoverWorldLevelOp;
}
void OfflineMsgBin::set_has_recover_world_level_op() {
  _oneof_case_[0] = kRecoverWorldLevelOp;
}
void OfflineMsgBin::clear_recover_world_level_op() {
  if (has_recover_world_level_op()) {
    delete detail_.recover_world_level_op_;
    clear_has_detail();
  }
}
 const ::proto::RecoverWorldLevelOp& OfflineMsgBin::recover_world_level_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.recover_world_level_op)
  return has_recover_world_level_op()
      ? *detail_.recover_world_level_op_
      : ::proto::RecoverWorldLevelOp::default_instance();
}
::proto::RecoverWorldLevelOp* OfflineMsgBin::mutable_recover_world_level_op() {
  if (!has_recover_world_level_op()) {
    clear_detail();
    set_has_recover_world_level_op();
    detail_.recover_world_level_op_ = new ::proto::RecoverWorldLevelOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.recover_world_level_op)
  return detail_.recover_world_level_op_;
}
::proto::RecoverWorldLevelOp* OfflineMsgBin::release_recover_world_level_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.recover_world_level_op)
  if (has_recover_world_level_op()) {
    clear_has_detail();
    ::proto::RecoverWorldLevelOp* temp = detail_.recover_world_level_op_;
    detail_.recover_world_level_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_recover_world_level_op(::proto::RecoverWorldLevelOp* recover_world_level_op) {
  clear_detail();
  if (recover_world_level_op) {
    set_has_recover_world_level_op();
    detail_.recover_world_level_op_ = recover_world_level_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.recover_world_level_op)
}

// .proto.ForceAcceptQuestOp force_accept_quest_op = 37;
bool OfflineMsgBin::has_force_accept_quest_op() const {
  return detail_case() == kForceAcceptQuestOp;
}
void OfflineMsgBin::set_has_force_accept_quest_op() {
  _oneof_case_[0] = kForceAcceptQuestOp;
}
void OfflineMsgBin::clear_force_accept_quest_op() {
  if (has_force_accept_quest_op()) {
    delete detail_.force_accept_quest_op_;
    clear_has_detail();
  }
}
 const ::proto::ForceAcceptQuestOp& OfflineMsgBin::force_accept_quest_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.force_accept_quest_op)
  return has_force_accept_quest_op()
      ? *detail_.force_accept_quest_op_
      : ::proto::ForceAcceptQuestOp::default_instance();
}
::proto::ForceAcceptQuestOp* OfflineMsgBin::mutable_force_accept_quest_op() {
  if (!has_force_accept_quest_op()) {
    clear_detail();
    set_has_force_accept_quest_op();
    detail_.force_accept_quest_op_ = new ::proto::ForceAcceptQuestOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.force_accept_quest_op)
  return detail_.force_accept_quest_op_;
}
::proto::ForceAcceptQuestOp* OfflineMsgBin::release_force_accept_quest_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.force_accept_quest_op)
  if (has_force_accept_quest_op()) {
    clear_has_detail();
    ::proto::ForceAcceptQuestOp* temp = detail_.force_accept_quest_op_;
    detail_.force_accept_quest_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_force_accept_quest_op(::proto::ForceAcceptQuestOp* force_accept_quest_op) {
  clear_detail();
  if (force_accept_quest_op) {
    set_has_force_accept_quest_op();
    detail_.force_accept_quest_op_ = force_accept_quest_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.force_accept_quest_op)
}

// .proto.SetMainCoopConfidenceOp set_main_coop_confidence_op = 38;
bool OfflineMsgBin::has_set_main_coop_confidence_op() const {
  return detail_case() == kSetMainCoopConfidenceOp;
}
void OfflineMsgBin::set_has_set_main_coop_confidence_op() {
  _oneof_case_[0] = kSetMainCoopConfidenceOp;
}
void OfflineMsgBin::clear_set_main_coop_confidence_op() {
  if (has_set_main_coop_confidence_op()) {
    delete detail_.set_main_coop_confidence_op_;
    clear_has_detail();
  }
}
 const ::proto::SetMainCoopConfidenceOp& OfflineMsgBin::set_main_coop_confidence_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_main_coop_confidence_op)
  return has_set_main_coop_confidence_op()
      ? *detail_.set_main_coop_confidence_op_
      : ::proto::SetMainCoopConfidenceOp::default_instance();
}
::proto::SetMainCoopConfidenceOp* OfflineMsgBin::mutable_set_main_coop_confidence_op() {
  if (!has_set_main_coop_confidence_op()) {
    clear_detail();
    set_has_set_main_coop_confidence_op();
    detail_.set_main_coop_confidence_op_ = new ::proto::SetMainCoopConfidenceOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_main_coop_confidence_op)
  return detail_.set_main_coop_confidence_op_;
}
::proto::SetMainCoopConfidenceOp* OfflineMsgBin::release_set_main_coop_confidence_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_main_coop_confidence_op)
  if (has_set_main_coop_confidence_op()) {
    clear_has_detail();
    ::proto::SetMainCoopConfidenceOp* temp = detail_.set_main_coop_confidence_op_;
    detail_.set_main_coop_confidence_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_set_main_coop_confidence_op(::proto::SetMainCoopConfidenceOp* set_main_coop_confidence_op) {
  clear_detail();
  if (set_main_coop_confidence_op) {
    set_has_set_main_coop_confidence_op();
    detail_.set_main_coop_confidence_op_ = set_main_coop_confidence_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_main_coop_confidence_op)
}

// .proto.AddCoopPointSavePointListOp add_coop_point_save_point_list_op = 39;
bool OfflineMsgBin::has_add_coop_point_save_point_list_op() const {
  return detail_case() == kAddCoopPointSavePointListOp;
}
void OfflineMsgBin::set_has_add_coop_point_save_point_list_op() {
  _oneof_case_[0] = kAddCoopPointSavePointListOp;
}
void OfflineMsgBin::clear_add_coop_point_save_point_list_op() {
  if (has_add_coop_point_save_point_list_op()) {
    delete detail_.add_coop_point_save_point_list_op_;
    clear_has_detail();
  }
}
 const ::proto::AddCoopPointSavePointListOp& OfflineMsgBin::add_coop_point_save_point_list_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.add_coop_point_save_point_list_op)
  return has_add_coop_point_save_point_list_op()
      ? *detail_.add_coop_point_save_point_list_op_
      : ::proto::AddCoopPointSavePointListOp::default_instance();
}
::proto::AddCoopPointSavePointListOp* OfflineMsgBin::mutable_add_coop_point_save_point_list_op() {
  if (!has_add_coop_point_save_point_list_op()) {
    clear_detail();
    set_has_add_coop_point_save_point_list_op();
    detail_.add_coop_point_save_point_list_op_ = new ::proto::AddCoopPointSavePointListOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.add_coop_point_save_point_list_op)
  return detail_.add_coop_point_save_point_list_op_;
}
::proto::AddCoopPointSavePointListOp* OfflineMsgBin::release_add_coop_point_save_point_list_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.add_coop_point_save_point_list_op)
  if (has_add_coop_point_save_point_list_op()) {
    clear_has_detail();
    ::proto::AddCoopPointSavePointListOp* temp = detail_.add_coop_point_save_point_list_op_;
    detail_.add_coop_point_save_point_list_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_add_coop_point_save_point_list_op(::proto::AddCoopPointSavePointListOp* add_coop_point_save_point_list_op) {
  clear_detail();
  if (add_coop_point_save_point_list_op) {
    set_has_add_coop_point_save_point_list_op();
    detail_.add_coop_point_save_point_list_op_ = add_coop_point_save_point_list_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.add_coop_point_save_point_list_op)
}

// .proto.AddRegionSearchProgressOp add_region_search_progress_op = 40;
bool OfflineMsgBin::has_add_region_search_progress_op() const {
  return detail_case() == kAddRegionSearchProgressOp;
}
void OfflineMsgBin::set_has_add_region_search_progress_op() {
  _oneof_case_[0] = kAddRegionSearchProgressOp;
}
void OfflineMsgBin::clear_add_region_search_progress_op() {
  if (has_add_region_search_progress_op()) {
    delete detail_.add_region_search_progress_op_;
    clear_has_detail();
  }
}
 const ::proto::AddRegionSearchProgressOp& OfflineMsgBin::add_region_search_progress_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.add_region_search_progress_op)
  return has_add_region_search_progress_op()
      ? *detail_.add_region_search_progress_op_
      : ::proto::AddRegionSearchProgressOp::default_instance();
}
::proto::AddRegionSearchProgressOp* OfflineMsgBin::mutable_add_region_search_progress_op() {
  if (!has_add_region_search_progress_op()) {
    clear_detail();
    set_has_add_region_search_progress_op();
    detail_.add_region_search_progress_op_ = new ::proto::AddRegionSearchProgressOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.add_region_search_progress_op)
  return detail_.add_region_search_progress_op_;
}
::proto::AddRegionSearchProgressOp* OfflineMsgBin::release_add_region_search_progress_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.add_region_search_progress_op)
  if (has_add_region_search_progress_op()) {
    clear_has_detail();
    ::proto::AddRegionSearchProgressOp* temp = detail_.add_region_search_progress_op_;
    detail_.add_region_search_progress_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_add_region_search_progress_op(::proto::AddRegionSearchProgressOp* add_region_search_progress_op) {
  clear_detail();
  if (add_region_search_progress_op) {
    set_has_add_region_search_progress_op();
    detail_.add_region_search_progress_op_ = add_region_search_progress_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.add_region_search_progress_op)
}

// .proto.SetMatchPunishTimesOp set_match_punish_times_op = 41;
bool OfflineMsgBin::has_set_match_punish_times_op() const {
  return detail_case() == kSetMatchPunishTimesOp;
}
void OfflineMsgBin::set_has_set_match_punish_times_op() {
  _oneof_case_[0] = kSetMatchPunishTimesOp;
}
void OfflineMsgBin::clear_set_match_punish_times_op() {
  if (has_set_match_punish_times_op()) {
    delete detail_.set_match_punish_times_op_;
    clear_has_detail();
  }
}
 const ::proto::SetMatchPunishTimesOp& OfflineMsgBin::set_match_punish_times_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_match_punish_times_op)
  return has_set_match_punish_times_op()
      ? *detail_.set_match_punish_times_op_
      : ::proto::SetMatchPunishTimesOp::default_instance();
}
::proto::SetMatchPunishTimesOp* OfflineMsgBin::mutable_set_match_punish_times_op() {
  if (!has_set_match_punish_times_op()) {
    clear_detail();
    set_has_set_match_punish_times_op();
    detail_.set_match_punish_times_op_ = new ::proto::SetMatchPunishTimesOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_match_punish_times_op)
  return detail_.set_match_punish_times_op_;
}
::proto::SetMatchPunishTimesOp* OfflineMsgBin::release_set_match_punish_times_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_match_punish_times_op)
  if (has_set_match_punish_times_op()) {
    clear_has_detail();
    ::proto::SetMatchPunishTimesOp* temp = detail_.set_match_punish_times_op_;
    detail_.set_match_punish_times_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_set_match_punish_times_op(::proto::SetMatchPunishTimesOp* set_match_punish_times_op) {
  clear_detail();
  if (set_match_punish_times_op) {
    set_has_set_match_punish_times_op();
    detail_.set_match_punish_times_op_ = set_match_punish_times_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_match_punish_times_op)
}

// .proto.ResetChannellerSlabCampGroupOp reset_channeller_slab_camp_group_op = 42;
bool OfflineMsgBin::has_reset_channeller_slab_camp_group_op() const {
  return detail_case() == kResetChannellerSlabCampGroupOp;
}
void OfflineMsgBin::set_has_reset_channeller_slab_camp_group_op() {
  _oneof_case_[0] = kResetChannellerSlabCampGroupOp;
}
void OfflineMsgBin::clear_reset_channeller_slab_camp_group_op() {
  if (has_reset_channeller_slab_camp_group_op()) {
    delete detail_.reset_channeller_slab_camp_group_op_;
    clear_has_detail();
  }
}
 const ::proto::ResetChannellerSlabCampGroupOp& OfflineMsgBin::reset_channeller_slab_camp_group_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.reset_channeller_slab_camp_group_op)
  return has_reset_channeller_slab_camp_group_op()
      ? *detail_.reset_channeller_slab_camp_group_op_
      : ::proto::ResetChannellerSlabCampGroupOp::default_instance();
}
::proto::ResetChannellerSlabCampGroupOp* OfflineMsgBin::mutable_reset_channeller_slab_camp_group_op() {
  if (!has_reset_channeller_slab_camp_group_op()) {
    clear_detail();
    set_has_reset_channeller_slab_camp_group_op();
    detail_.reset_channeller_slab_camp_group_op_ = new ::proto::ResetChannellerSlabCampGroupOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.reset_channeller_slab_camp_group_op)
  return detail_.reset_channeller_slab_camp_group_op_;
}
::proto::ResetChannellerSlabCampGroupOp* OfflineMsgBin::release_reset_channeller_slab_camp_group_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.reset_channeller_slab_camp_group_op)
  if (has_reset_channeller_slab_camp_group_op()) {
    clear_has_detail();
    ::proto::ResetChannellerSlabCampGroupOp* temp = detail_.reset_channeller_slab_camp_group_op_;
    detail_.reset_channeller_slab_camp_group_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_reset_channeller_slab_camp_group_op(::proto::ResetChannellerSlabCampGroupOp* reset_channeller_slab_camp_group_op) {
  clear_detail();
  if (reset_channeller_slab_camp_group_op) {
    set_has_reset_channeller_slab_camp_group_op();
    detail_.reset_channeller_slab_camp_group_op_ = reset_channeller_slab_camp_group_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.reset_channeller_slab_camp_group_op)
}

// .proto.ProcSceneTagOp proc_scene_tag_op = 43;
bool OfflineMsgBin::has_proc_scene_tag_op() const {
  return detail_case() == kProcSceneTagOp;
}
void OfflineMsgBin::set_has_proc_scene_tag_op() {
  _oneof_case_[0] = kProcSceneTagOp;
}
void OfflineMsgBin::clear_proc_scene_tag_op() {
  if (has_proc_scene_tag_op()) {
    delete detail_.proc_scene_tag_op_;
    clear_has_detail();
  }
}
 const ::proto::ProcSceneTagOp& OfflineMsgBin::proc_scene_tag_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.proc_scene_tag_op)
  return has_proc_scene_tag_op()
      ? *detail_.proc_scene_tag_op_
      : ::proto::ProcSceneTagOp::default_instance();
}
::proto::ProcSceneTagOp* OfflineMsgBin::mutable_proc_scene_tag_op() {
  if (!has_proc_scene_tag_op()) {
    clear_detail();
    set_has_proc_scene_tag_op();
    detail_.proc_scene_tag_op_ = new ::proto::ProcSceneTagOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.proc_scene_tag_op)
  return detail_.proc_scene_tag_op_;
}
::proto::ProcSceneTagOp* OfflineMsgBin::release_proc_scene_tag_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.proc_scene_tag_op)
  if (has_proc_scene_tag_op()) {
    clear_has_detail();
    ::proto::ProcSceneTagOp* temp = detail_.proc_scene_tag_op_;
    detail_.proc_scene_tag_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_proc_scene_tag_op(::proto::ProcSceneTagOp* proc_scene_tag_op) {
  clear_detail();
  if (proc_scene_tag_op) {
    set_has_proc_scene_tag_op();
    detail_.proc_scene_tag_op_ = proc_scene_tag_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.proc_scene_tag_op)
}

// .proto.SetClimateAreaTypeOp set_climate_area_type_op = 44;
bool OfflineMsgBin::has_set_climate_area_type_op() const {
  return detail_case() == kSetClimateAreaTypeOp;
}
void OfflineMsgBin::set_has_set_climate_area_type_op() {
  _oneof_case_[0] = kSetClimateAreaTypeOp;
}
void OfflineMsgBin::clear_set_climate_area_type_op() {
  if (has_set_climate_area_type_op()) {
    delete detail_.set_climate_area_type_op_;
    clear_has_detail();
  }
}
 const ::proto::SetClimateAreaTypeOp& OfflineMsgBin::set_climate_area_type_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_climate_area_type_op)
  return has_set_climate_area_type_op()
      ? *detail_.set_climate_area_type_op_
      : ::proto::SetClimateAreaTypeOp::default_instance();
}
::proto::SetClimateAreaTypeOp* OfflineMsgBin::mutable_set_climate_area_type_op() {
  if (!has_set_climate_area_type_op()) {
    clear_detail();
    set_has_set_climate_area_type_op();
    detail_.set_climate_area_type_op_ = new ::proto::SetClimateAreaTypeOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_climate_area_type_op)
  return detail_.set_climate_area_type_op_;
}
::proto::SetClimateAreaTypeOp* OfflineMsgBin::release_set_climate_area_type_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_climate_area_type_op)
  if (has_set_climate_area_type_op()) {
    clear_has_detail();
    ::proto::SetClimateAreaTypeOp* temp = detail_.set_climate_area_type_op_;
    detail_.set_climate_area_type_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_set_climate_area_type_op(::proto::SetClimateAreaTypeOp* set_climate_area_type_op) {
  clear_detail();
  if (set_climate_area_type_op) {
    set_has_set_climate_area_type_op();
    detail_.set_climate_area_type_op_ = set_climate_area_type_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_climate_area_type_op)
}

// .proto.ExchangeMcoinOp exchange_mcoin_op = 45;
bool OfflineMsgBin::has_exchange_mcoin_op() const {
  return detail_case() == kExchangeMcoinOp;
}
void OfflineMsgBin::set_has_exchange_mcoin_op() {
  _oneof_case_[0] = kExchangeMcoinOp;
}
void OfflineMsgBin::clear_exchange_mcoin_op() {
  if (has_exchange_mcoin_op()) {
    delete detail_.exchange_mcoin_op_;
    clear_has_detail();
  }
}
 const ::proto::ExchangeMcoinOp& OfflineMsgBin::exchange_mcoin_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.exchange_mcoin_op)
  return has_exchange_mcoin_op()
      ? *detail_.exchange_mcoin_op_
      : ::proto::ExchangeMcoinOp::default_instance();
}
::proto::ExchangeMcoinOp* OfflineMsgBin::mutable_exchange_mcoin_op() {
  if (!has_exchange_mcoin_op()) {
    clear_detail();
    set_has_exchange_mcoin_op();
    detail_.exchange_mcoin_op_ = new ::proto::ExchangeMcoinOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.exchange_mcoin_op)
  return detail_.exchange_mcoin_op_;
}
::proto::ExchangeMcoinOp* OfflineMsgBin::release_exchange_mcoin_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.exchange_mcoin_op)
  if (has_exchange_mcoin_op()) {
    clear_has_detail();
    ::proto::ExchangeMcoinOp* temp = detail_.exchange_mcoin_op_;
    detail_.exchange_mcoin_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_exchange_mcoin_op(::proto::ExchangeMcoinOp* exchange_mcoin_op) {
  clear_detail();
  if (exchange_mcoin_op) {
    set_has_exchange_mcoin_op();
    detail_.exchange_mcoin_op_ = exchange_mcoin_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.exchange_mcoin_op)
}

// .proto.SetFinishedParentQuestChildStateOp set_finished_parent_quest_child_state_op = 46;
bool OfflineMsgBin::has_set_finished_parent_quest_child_state_op() const {
  return detail_case() == kSetFinishedParentQuestChildStateOp;
}
void OfflineMsgBin::set_has_set_finished_parent_quest_child_state_op() {
  _oneof_case_[0] = kSetFinishedParentQuestChildStateOp;
}
void OfflineMsgBin::clear_set_finished_parent_quest_child_state_op() {
  if (has_set_finished_parent_quest_child_state_op()) {
    delete detail_.set_finished_parent_quest_child_state_op_;
    clear_has_detail();
  }
}
 const ::proto::SetFinishedParentQuestChildStateOp& OfflineMsgBin::set_finished_parent_quest_child_state_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_finished_parent_quest_child_state_op)
  return has_set_finished_parent_quest_child_state_op()
      ? *detail_.set_finished_parent_quest_child_state_op_
      : ::proto::SetFinishedParentQuestChildStateOp::default_instance();
}
::proto::SetFinishedParentQuestChildStateOp* OfflineMsgBin::mutable_set_finished_parent_quest_child_state_op() {
  if (!has_set_finished_parent_quest_child_state_op()) {
    clear_detail();
    set_has_set_finished_parent_quest_child_state_op();
    detail_.set_finished_parent_quest_child_state_op_ = new ::proto::SetFinishedParentQuestChildStateOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_finished_parent_quest_child_state_op)
  return detail_.set_finished_parent_quest_child_state_op_;
}
::proto::SetFinishedParentQuestChildStateOp* OfflineMsgBin::release_set_finished_parent_quest_child_state_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_finished_parent_quest_child_state_op)
  if (has_set_finished_parent_quest_child_state_op()) {
    clear_has_detail();
    ::proto::SetFinishedParentQuestChildStateOp* temp = detail_.set_finished_parent_quest_child_state_op_;
    detail_.set_finished_parent_quest_child_state_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_set_finished_parent_quest_child_state_op(::proto::SetFinishedParentQuestChildStateOp* set_finished_parent_quest_child_state_op) {
  clear_detail();
  if (set_finished_parent_quest_child_state_op) {
    set_has_set_finished_parent_quest_child_state_op();
    detail_.set_finished_parent_quest_child_state_op_ = set_finished_parent_quest_child_state_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_finished_parent_quest_child_state_op)
}

// .proto.SetLevel1AreaExplorePointOp set_level1_area_explore_point_op = 47;
bool OfflineMsgBin::has_set_level1_area_explore_point_op() const {
  return detail_case() == kSetLevel1AreaExplorePointOp;
}
void OfflineMsgBin::set_has_set_level1_area_explore_point_op() {
  _oneof_case_[0] = kSetLevel1AreaExplorePointOp;
}
void OfflineMsgBin::clear_set_level1_area_explore_point_op() {
  if (has_set_level1_area_explore_point_op()) {
    delete detail_.set_level1_area_explore_point_op_;
    clear_has_detail();
  }
}
 const ::proto::SetLevel1AreaExplorePointOp& OfflineMsgBin::set_level1_area_explore_point_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_level1_area_explore_point_op)
  return has_set_level1_area_explore_point_op()
      ? *detail_.set_level1_area_explore_point_op_
      : ::proto::SetLevel1AreaExplorePointOp::default_instance();
}
::proto::SetLevel1AreaExplorePointOp* OfflineMsgBin::mutable_set_level1_area_explore_point_op() {
  if (!has_set_level1_area_explore_point_op()) {
    clear_detail();
    set_has_set_level1_area_explore_point_op();
    detail_.set_level1_area_explore_point_op_ = new ::proto::SetLevel1AreaExplorePointOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_level1_area_explore_point_op)
  return detail_.set_level1_area_explore_point_op_;
}
::proto::SetLevel1AreaExplorePointOp* OfflineMsgBin::release_set_level1_area_explore_point_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_level1_area_explore_point_op)
  if (has_set_level1_area_explore_point_op()) {
    clear_has_detail();
    ::proto::SetLevel1AreaExplorePointOp* temp = detail_.set_level1_area_explore_point_op_;
    detail_.set_level1_area_explore_point_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_set_level1_area_explore_point_op(::proto::SetLevel1AreaExplorePointOp* set_level1_area_explore_point_op) {
  clear_detail();
  if (set_level1_area_explore_point_op) {
    set_has_set_level1_area_explore_point_op();
    detail_.set_level1_area_explore_point_op_ = set_level1_area_explore_point_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_level1_area_explore_point_op)
}

// .proto.SetCodexOpenOrCloseOp set_codex_open_or_close_op = 48;
bool OfflineMsgBin::has_set_codex_open_or_close_op() const {
  return detail_case() == kSetCodexOpenOrCloseOp;
}
void OfflineMsgBin::set_has_set_codex_open_or_close_op() {
  _oneof_case_[0] = kSetCodexOpenOrCloseOp;
}
void OfflineMsgBin::clear_set_codex_open_or_close_op() {
  if (has_set_codex_open_or_close_op()) {
    delete detail_.set_codex_open_or_close_op_;
    clear_has_detail();
  }
}
 const ::proto::SetCodexOpenOrCloseOp& OfflineMsgBin::set_codex_open_or_close_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_codex_open_or_close_op)
  return has_set_codex_open_or_close_op()
      ? *detail_.set_codex_open_or_close_op_
      : ::proto::SetCodexOpenOrCloseOp::default_instance();
}
::proto::SetCodexOpenOrCloseOp* OfflineMsgBin::mutable_set_codex_open_or_close_op() {
  if (!has_set_codex_open_or_close_op()) {
    clear_detail();
    set_has_set_codex_open_or_close_op();
    detail_.set_codex_open_or_close_op_ = new ::proto::SetCodexOpenOrCloseOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_codex_open_or_close_op)
  return detail_.set_codex_open_or_close_op_;
}
::proto::SetCodexOpenOrCloseOp* OfflineMsgBin::release_set_codex_open_or_close_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_codex_open_or_close_op)
  if (has_set_codex_open_or_close_op()) {
    clear_has_detail();
    ::proto::SetCodexOpenOrCloseOp* temp = detail_.set_codex_open_or_close_op_;
    detail_.set_codex_open_or_close_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_set_codex_open_or_close_op(::proto::SetCodexOpenOrCloseOp* set_codex_open_or_close_op) {
  clear_detail();
  if (set_codex_open_or_close_op) {
    set_has_set_codex_open_or_close_op();
    detail_.set_codex_open_or_close_op_ = set_codex_open_or_close_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_codex_open_or_close_op)
}

// .proto.ChangeMapAreaInfoOp change_map_area_info_op = 49;
bool OfflineMsgBin::has_change_map_area_info_op() const {
  return detail_case() == kChangeMapAreaInfoOp;
}
void OfflineMsgBin::set_has_change_map_area_info_op() {
  _oneof_case_[0] = kChangeMapAreaInfoOp;
}
void OfflineMsgBin::clear_change_map_area_info_op() {
  if (has_change_map_area_info_op()) {
    delete detail_.change_map_area_info_op_;
    clear_has_detail();
  }
}
 const ::proto::ChangeMapAreaInfoOp& OfflineMsgBin::change_map_area_info_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.change_map_area_info_op)
  return has_change_map_area_info_op()
      ? *detail_.change_map_area_info_op_
      : ::proto::ChangeMapAreaInfoOp::default_instance();
}
::proto::ChangeMapAreaInfoOp* OfflineMsgBin::mutable_change_map_area_info_op() {
  if (!has_change_map_area_info_op()) {
    clear_detail();
    set_has_change_map_area_info_op();
    detail_.change_map_area_info_op_ = new ::proto::ChangeMapAreaInfoOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.change_map_area_info_op)
  return detail_.change_map_area_info_op_;
}
::proto::ChangeMapAreaInfoOp* OfflineMsgBin::release_change_map_area_info_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.change_map_area_info_op)
  if (has_change_map_area_info_op()) {
    clear_has_detail();
    ::proto::ChangeMapAreaInfoOp* temp = detail_.change_map_area_info_op_;
    detail_.change_map_area_info_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_change_map_area_info_op(::proto::ChangeMapAreaInfoOp* change_map_area_info_op) {
  clear_detail();
  if (change_map_area_info_op) {
    set_has_change_map_area_info_op();
    detail_.change_map_area_info_op_ = change_map_area_info_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.change_map_area_info_op)
}

// .proto.GroupLinkOp group_link_op = 50;
bool OfflineMsgBin::has_group_link_op() const {
  return detail_case() == kGroupLinkOp;
}
void OfflineMsgBin::set_has_group_link_op() {
  _oneof_case_[0] = kGroupLinkOp;
}
void OfflineMsgBin::clear_group_link_op() {
  if (has_group_link_op()) {
    delete detail_.group_link_op_;
    clear_has_detail();
  }
}
 const ::proto::GroupLinkOp& OfflineMsgBin::group_link_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.group_link_op)
  return has_group_link_op()
      ? *detail_.group_link_op_
      : ::proto::GroupLinkOp::default_instance();
}
::proto::GroupLinkOp* OfflineMsgBin::mutable_group_link_op() {
  if (!has_group_link_op()) {
    clear_detail();
    set_has_group_link_op();
    detail_.group_link_op_ = new ::proto::GroupLinkOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.group_link_op)
  return detail_.group_link_op_;
}
::proto::GroupLinkOp* OfflineMsgBin::release_group_link_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.group_link_op)
  if (has_group_link_op()) {
    clear_has_detail();
    ::proto::GroupLinkOp* temp = detail_.group_link_op_;
    detail_.group_link_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_group_link_op(::proto::GroupLinkOp* group_link_op) {
  clear_detail();
  if (group_link_op) {
    set_has_group_link_op();
    detail_.group_link_op_ = group_link_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.group_link_op)
}

// .proto.SetWatcherCompRecordValueOp set_watcher_comp_record_value_op = 51;
bool OfflineMsgBin::has_set_watcher_comp_record_value_op() const {
  return detail_case() == kSetWatcherCompRecordValueOp;
}
void OfflineMsgBin::set_has_set_watcher_comp_record_value_op() {
  _oneof_case_[0] = kSetWatcherCompRecordValueOp;
}
void OfflineMsgBin::clear_set_watcher_comp_record_value_op() {
  if (has_set_watcher_comp_record_value_op()) {
    delete detail_.set_watcher_comp_record_value_op_;
    clear_has_detail();
  }
}
 const ::proto::SetWatcherCompRecordValueOp& OfflineMsgBin::set_watcher_comp_record_value_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_watcher_comp_record_value_op)
  return has_set_watcher_comp_record_value_op()
      ? *detail_.set_watcher_comp_record_value_op_
      : ::proto::SetWatcherCompRecordValueOp::default_instance();
}
::proto::SetWatcherCompRecordValueOp* OfflineMsgBin::mutable_set_watcher_comp_record_value_op() {
  if (!has_set_watcher_comp_record_value_op()) {
    clear_detail();
    set_has_set_watcher_comp_record_value_op();
    detail_.set_watcher_comp_record_value_op_ = new ::proto::SetWatcherCompRecordValueOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_watcher_comp_record_value_op)
  return detail_.set_watcher_comp_record_value_op_;
}
::proto::SetWatcherCompRecordValueOp* OfflineMsgBin::release_set_watcher_comp_record_value_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_watcher_comp_record_value_op)
  if (has_set_watcher_comp_record_value_op()) {
    clear_has_detail();
    ::proto::SetWatcherCompRecordValueOp* temp = detail_.set_watcher_comp_record_value_op_;
    detail_.set_watcher_comp_record_value_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_set_watcher_comp_record_value_op(::proto::SetWatcherCompRecordValueOp* set_watcher_comp_record_value_op) {
  clear_detail();
  if (set_watcher_comp_record_value_op) {
    set_has_set_watcher_comp_record_value_op();
    detail_.set_watcher_comp_record_value_op_ = set_watcher_comp_record_value_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_watcher_comp_record_value_op)
}

// .proto.AddFriendOp add_friend_op = 52;
bool OfflineMsgBin::has_add_friend_op() const {
  return detail_case() == kAddFriendOp;
}
void OfflineMsgBin::set_has_add_friend_op() {
  _oneof_case_[0] = kAddFriendOp;
}
void OfflineMsgBin::clear_add_friend_op() {
  if (has_add_friend_op()) {
    delete detail_.add_friend_op_;
    clear_has_detail();
  }
}
 const ::proto::AddFriendOp& OfflineMsgBin::add_friend_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.add_friend_op)
  return has_add_friend_op()
      ? *detail_.add_friend_op_
      : ::proto::AddFriendOp::default_instance();
}
::proto::AddFriendOp* OfflineMsgBin::mutable_add_friend_op() {
  if (!has_add_friend_op()) {
    clear_detail();
    set_has_add_friend_op();
    detail_.add_friend_op_ = new ::proto::AddFriendOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.add_friend_op)
  return detail_.add_friend_op_;
}
::proto::AddFriendOp* OfflineMsgBin::release_add_friend_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.add_friend_op)
  if (has_add_friend_op()) {
    clear_has_detail();
    ::proto::AddFriendOp* temp = detail_.add_friend_op_;
    detail_.add_friend_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_add_friend_op(::proto::AddFriendOp* add_friend_op) {
  clear_detail();
  if (add_friend_op) {
    set_has_add_friend_op();
    detail_.add_friend_op_ = add_friend_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.add_friend_op)
}

// .proto.DelFriendOp del_friend_op = 53;
bool OfflineMsgBin::has_del_friend_op() const {
  return detail_case() == kDelFriendOp;
}
void OfflineMsgBin::set_has_del_friend_op() {
  _oneof_case_[0] = kDelFriendOp;
}
void OfflineMsgBin::clear_del_friend_op() {
  if (has_del_friend_op()) {
    delete detail_.del_friend_op_;
    clear_has_detail();
  }
}
 const ::proto::DelFriendOp& OfflineMsgBin::del_friend_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.del_friend_op)
  return has_del_friend_op()
      ? *detail_.del_friend_op_
      : ::proto::DelFriendOp::default_instance();
}
::proto::DelFriendOp* OfflineMsgBin::mutable_del_friend_op() {
  if (!has_del_friend_op()) {
    clear_detail();
    set_has_del_friend_op();
    detail_.del_friend_op_ = new ::proto::DelFriendOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.del_friend_op)
  return detail_.del_friend_op_;
}
::proto::DelFriendOp* OfflineMsgBin::release_del_friend_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.del_friend_op)
  if (has_del_friend_op()) {
    clear_has_detail();
    ::proto::DelFriendOp* temp = detail_.del_friend_op_;
    detail_.del_friend_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_del_friend_op(::proto::DelFriendOp* del_friend_op) {
  clear_detail();
  if (del_friend_op) {
    set_has_del_friend_op();
    detail_.del_friend_op_ = del_friend_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.del_friend_op)
}

// .proto.AddFriendAskOp add_friend_ask_op = 54;
bool OfflineMsgBin::has_add_friend_ask_op() const {
  return detail_case() == kAddFriendAskOp;
}
void OfflineMsgBin::set_has_add_friend_ask_op() {
  _oneof_case_[0] = kAddFriendAskOp;
}
void OfflineMsgBin::clear_add_friend_ask_op() {
  if (has_add_friend_ask_op()) {
    delete detail_.add_friend_ask_op_;
    clear_has_detail();
  }
}
 const ::proto::AddFriendAskOp& OfflineMsgBin::add_friend_ask_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.add_friend_ask_op)
  return has_add_friend_ask_op()
      ? *detail_.add_friend_ask_op_
      : ::proto::AddFriendAskOp::default_instance();
}
::proto::AddFriendAskOp* OfflineMsgBin::mutable_add_friend_ask_op() {
  if (!has_add_friend_ask_op()) {
    clear_detail();
    set_has_add_friend_ask_op();
    detail_.add_friend_ask_op_ = new ::proto::AddFriendAskOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.add_friend_ask_op)
  return detail_.add_friend_ask_op_;
}
::proto::AddFriendAskOp* OfflineMsgBin::release_add_friend_ask_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.add_friend_ask_op)
  if (has_add_friend_ask_op()) {
    clear_has_detail();
    ::proto::AddFriendAskOp* temp = detail_.add_friend_ask_op_;
    detail_.add_friend_ask_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_add_friend_ask_op(::proto::AddFriendAskOp* add_friend_ask_op) {
  clear_detail();
  if (add_friend_ask_op) {
    set_has_add_friend_ask_op();
    detail_.add_friend_ask_op_ = add_friend_ask_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.add_friend_ask_op)
}

// .proto.DelFriendAskOp del_friend_ask_op = 55;
bool OfflineMsgBin::has_del_friend_ask_op() const {
  return detail_case() == kDelFriendAskOp;
}
void OfflineMsgBin::set_has_del_friend_ask_op() {
  _oneof_case_[0] = kDelFriendAskOp;
}
void OfflineMsgBin::clear_del_friend_ask_op() {
  if (has_del_friend_ask_op()) {
    delete detail_.del_friend_ask_op_;
    clear_has_detail();
  }
}
 const ::proto::DelFriendAskOp& OfflineMsgBin::del_friend_ask_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.del_friend_ask_op)
  return has_del_friend_ask_op()
      ? *detail_.del_friend_ask_op_
      : ::proto::DelFriendAskOp::default_instance();
}
::proto::DelFriendAskOp* OfflineMsgBin::mutable_del_friend_ask_op() {
  if (!has_del_friend_ask_op()) {
    clear_detail();
    set_has_del_friend_ask_op();
    detail_.del_friend_ask_op_ = new ::proto::DelFriendAskOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.del_friend_ask_op)
  return detail_.del_friend_ask_op_;
}
::proto::DelFriendAskOp* OfflineMsgBin::release_del_friend_ask_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.del_friend_ask_op)
  if (has_del_friend_ask_op()) {
    clear_has_detail();
    ::proto::DelFriendAskOp* temp = detail_.del_friend_ask_op_;
    detail_.del_friend_ask_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_del_friend_ask_op(::proto::DelFriendAskOp* del_friend_ask_op) {
  clear_detail();
  if (del_friend_ask_op) {
    set_has_del_friend_ask_op();
    detail_.del_friend_ask_op_ = del_friend_ask_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.del_friend_ask_op)
}

// .proto.BanCustomDungeonOp ban_custom_dungeon_op = 56;
bool OfflineMsgBin::has_ban_custom_dungeon_op() const {
  return detail_case() == kBanCustomDungeonOp;
}
void OfflineMsgBin::set_has_ban_custom_dungeon_op() {
  _oneof_case_[0] = kBanCustomDungeonOp;
}
void OfflineMsgBin::clear_ban_custom_dungeon_op() {
  if (has_ban_custom_dungeon_op()) {
    delete detail_.ban_custom_dungeon_op_;
    clear_has_detail();
  }
}
 const ::proto::BanCustomDungeonOp& OfflineMsgBin::ban_custom_dungeon_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.ban_custom_dungeon_op)
  return has_ban_custom_dungeon_op()
      ? *detail_.ban_custom_dungeon_op_
      : ::proto::BanCustomDungeonOp::default_instance();
}
::proto::BanCustomDungeonOp* OfflineMsgBin::mutable_ban_custom_dungeon_op() {
  if (!has_ban_custom_dungeon_op()) {
    clear_detail();
    set_has_ban_custom_dungeon_op();
    detail_.ban_custom_dungeon_op_ = new ::proto::BanCustomDungeonOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.ban_custom_dungeon_op)
  return detail_.ban_custom_dungeon_op_;
}
::proto::BanCustomDungeonOp* OfflineMsgBin::release_ban_custom_dungeon_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.ban_custom_dungeon_op)
  if (has_ban_custom_dungeon_op()) {
    clear_has_detail();
    ::proto::BanCustomDungeonOp* temp = detail_.ban_custom_dungeon_op_;
    detail_.ban_custom_dungeon_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_ban_custom_dungeon_op(::proto::BanCustomDungeonOp* ban_custom_dungeon_op) {
  clear_detail();
  if (ban_custom_dungeon_op) {
    set_has_ban_custom_dungeon_op();
    detail_.ban_custom_dungeon_op_ = ban_custom_dungeon_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.ban_custom_dungeon_op)
}

// .proto.RemoveInvalidMapMarksOp remove_invalid_map_marks_op = 57;
bool OfflineMsgBin::has_remove_invalid_map_marks_op() const {
  return detail_case() == kRemoveInvalidMapMarksOp;
}
void OfflineMsgBin::set_has_remove_invalid_map_marks_op() {
  _oneof_case_[0] = kRemoveInvalidMapMarksOp;
}
void OfflineMsgBin::clear_remove_invalid_map_marks_op() {
  if (has_remove_invalid_map_marks_op()) {
    delete detail_.remove_invalid_map_marks_op_;
    clear_has_detail();
  }
}
 const ::proto::RemoveInvalidMapMarksOp& OfflineMsgBin::remove_invalid_map_marks_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.remove_invalid_map_marks_op)
  return has_remove_invalid_map_marks_op()
      ? *detail_.remove_invalid_map_marks_op_
      : ::proto::RemoveInvalidMapMarksOp::default_instance();
}
::proto::RemoveInvalidMapMarksOp* OfflineMsgBin::mutable_remove_invalid_map_marks_op() {
  if (!has_remove_invalid_map_marks_op()) {
    clear_detail();
    set_has_remove_invalid_map_marks_op();
    detail_.remove_invalid_map_marks_op_ = new ::proto::RemoveInvalidMapMarksOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.remove_invalid_map_marks_op)
  return detail_.remove_invalid_map_marks_op_;
}
::proto::RemoveInvalidMapMarksOp* OfflineMsgBin::release_remove_invalid_map_marks_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.remove_invalid_map_marks_op)
  if (has_remove_invalid_map_marks_op()) {
    clear_has_detail();
    ::proto::RemoveInvalidMapMarksOp* temp = detail_.remove_invalid_map_marks_op_;
    detail_.remove_invalid_map_marks_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_remove_invalid_map_marks_op(::proto::RemoveInvalidMapMarksOp* remove_invalid_map_marks_op) {
  clear_detail();
  if (remove_invalid_map_marks_op) {
    set_has_remove_invalid_map_marks_op();
    detail_.remove_invalid_map_marks_op_ = remove_invalid_map_marks_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.remove_invalid_map_marks_op)
}

// .proto.RecalculateAreaExplorePointOp recalculate_area_explore_point_op = 58;
bool OfflineMsgBin::has_recalculate_area_explore_point_op() const {
  return detail_case() == kRecalculateAreaExplorePointOp;
}
void OfflineMsgBin::set_has_recalculate_area_explore_point_op() {
  _oneof_case_[0] = kRecalculateAreaExplorePointOp;
}
void OfflineMsgBin::clear_recalculate_area_explore_point_op() {
  if (has_recalculate_area_explore_point_op()) {
    delete detail_.recalculate_area_explore_point_op_;
    clear_has_detail();
  }
}
 const ::proto::RecalculateAreaExplorePointOp& OfflineMsgBin::recalculate_area_explore_point_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.recalculate_area_explore_point_op)
  return has_recalculate_area_explore_point_op()
      ? *detail_.recalculate_area_explore_point_op_
      : ::proto::RecalculateAreaExplorePointOp::default_instance();
}
::proto::RecalculateAreaExplorePointOp* OfflineMsgBin::mutable_recalculate_area_explore_point_op() {
  if (!has_recalculate_area_explore_point_op()) {
    clear_detail();
    set_has_recalculate_area_explore_point_op();
    detail_.recalculate_area_explore_point_op_ = new ::proto::RecalculateAreaExplorePointOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.recalculate_area_explore_point_op)
  return detail_.recalculate_area_explore_point_op_;
}
::proto::RecalculateAreaExplorePointOp* OfflineMsgBin::release_recalculate_area_explore_point_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.recalculate_area_explore_point_op)
  if (has_recalculate_area_explore_point_op()) {
    clear_has_detail();
    ::proto::RecalculateAreaExplorePointOp* temp = detail_.recalculate_area_explore_point_op_;
    detail_.recalculate_area_explore_point_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_recalculate_area_explore_point_op(::proto::RecalculateAreaExplorePointOp* recalculate_area_explore_point_op) {
  clear_detail();
  if (recalculate_area_explore_point_op) {
    set_has_recalculate_area_explore_point_op();
    detail_.recalculate_area_explore_point_op_ = recalculate_area_explore_point_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.recalculate_area_explore_point_op)
}

// .proto.NicknameAuditResultOp nickname_audit_result_op = 59;
bool OfflineMsgBin::has_nickname_audit_result_op() const {
  return detail_case() == kNicknameAuditResultOp;
}
void OfflineMsgBin::set_has_nickname_audit_result_op() {
  _oneof_case_[0] = kNicknameAuditResultOp;
}
void OfflineMsgBin::clear_nickname_audit_result_op() {
  if (has_nickname_audit_result_op()) {
    delete detail_.nickname_audit_result_op_;
    clear_has_detail();
  }
}
 const ::proto::NicknameAuditResultOp& OfflineMsgBin::nickname_audit_result_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.nickname_audit_result_op)
  return has_nickname_audit_result_op()
      ? *detail_.nickname_audit_result_op_
      : ::proto::NicknameAuditResultOp::default_instance();
}
::proto::NicknameAuditResultOp* OfflineMsgBin::mutable_nickname_audit_result_op() {
  if (!has_nickname_audit_result_op()) {
    clear_detail();
    set_has_nickname_audit_result_op();
    detail_.nickname_audit_result_op_ = new ::proto::NicknameAuditResultOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.nickname_audit_result_op)
  return detail_.nickname_audit_result_op_;
}
::proto::NicknameAuditResultOp* OfflineMsgBin::release_nickname_audit_result_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.nickname_audit_result_op)
  if (has_nickname_audit_result_op()) {
    clear_has_detail();
    ::proto::NicknameAuditResultOp* temp = detail_.nickname_audit_result_op_;
    detail_.nickname_audit_result_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_nickname_audit_result_op(::proto::NicknameAuditResultOp* nickname_audit_result_op) {
  clear_detail();
  if (nickname_audit_result_op) {
    set_has_nickname_audit_result_op();
    detail_.nickname_audit_result_op_ = nickname_audit_result_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.nickname_audit_result_op)
}

// .proto.SignatureAuditResultOp signature_audit_result_op = 60;
bool OfflineMsgBin::has_signature_audit_result_op() const {
  return detail_case() == kSignatureAuditResultOp;
}
void OfflineMsgBin::set_has_signature_audit_result_op() {
  _oneof_case_[0] = kSignatureAuditResultOp;
}
void OfflineMsgBin::clear_signature_audit_result_op() {
  if (has_signature_audit_result_op()) {
    delete detail_.signature_audit_result_op_;
    clear_has_detail();
  }
}
 const ::proto::SignatureAuditResultOp& OfflineMsgBin::signature_audit_result_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.signature_audit_result_op)
  return has_signature_audit_result_op()
      ? *detail_.signature_audit_result_op_
      : ::proto::SignatureAuditResultOp::default_instance();
}
::proto::SignatureAuditResultOp* OfflineMsgBin::mutable_signature_audit_result_op() {
  if (!has_signature_audit_result_op()) {
    clear_detail();
    set_has_signature_audit_result_op();
    detail_.signature_audit_result_op_ = new ::proto::SignatureAuditResultOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.signature_audit_result_op)
  return detail_.signature_audit_result_op_;
}
::proto::SignatureAuditResultOp* OfflineMsgBin::release_signature_audit_result_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.signature_audit_result_op)
  if (has_signature_audit_result_op()) {
    clear_has_detail();
    ::proto::SignatureAuditResultOp* temp = detail_.signature_audit_result_op_;
    detail_.signature_audit_result_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_signature_audit_result_op(::proto::SignatureAuditResultOp* signature_audit_result_op) {
  clear_detail();
  if (signature_audit_result_op) {
    set_has_signature_audit_result_op();
    detail_.signature_audit_result_op_ = signature_audit_result_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.signature_audit_result_op)
}

// .proto.PassHomeSceneArrangementAuditOp pass_home_scene_arrangement_audit_op = 61;
bool OfflineMsgBin::has_pass_home_scene_arrangement_audit_op() const {
  return detail_case() == kPassHomeSceneArrangementAuditOp;
}
void OfflineMsgBin::set_has_pass_home_scene_arrangement_audit_op() {
  _oneof_case_[0] = kPassHomeSceneArrangementAuditOp;
}
void OfflineMsgBin::clear_pass_home_scene_arrangement_audit_op() {
  if (has_pass_home_scene_arrangement_audit_op()) {
    delete detail_.pass_home_scene_arrangement_audit_op_;
    clear_has_detail();
  }
}
 const ::proto::PassHomeSceneArrangementAuditOp& OfflineMsgBin::pass_home_scene_arrangement_audit_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.pass_home_scene_arrangement_audit_op)
  return has_pass_home_scene_arrangement_audit_op()
      ? *detail_.pass_home_scene_arrangement_audit_op_
      : ::proto::PassHomeSceneArrangementAuditOp::default_instance();
}
::proto::PassHomeSceneArrangementAuditOp* OfflineMsgBin::mutable_pass_home_scene_arrangement_audit_op() {
  if (!has_pass_home_scene_arrangement_audit_op()) {
    clear_detail();
    set_has_pass_home_scene_arrangement_audit_op();
    detail_.pass_home_scene_arrangement_audit_op_ = new ::proto::PassHomeSceneArrangementAuditOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.pass_home_scene_arrangement_audit_op)
  return detail_.pass_home_scene_arrangement_audit_op_;
}
::proto::PassHomeSceneArrangementAuditOp* OfflineMsgBin::release_pass_home_scene_arrangement_audit_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.pass_home_scene_arrangement_audit_op)
  if (has_pass_home_scene_arrangement_audit_op()) {
    clear_has_detail();
    ::proto::PassHomeSceneArrangementAuditOp* temp = detail_.pass_home_scene_arrangement_audit_op_;
    detail_.pass_home_scene_arrangement_audit_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_pass_home_scene_arrangement_audit_op(::proto::PassHomeSceneArrangementAuditOp* pass_home_scene_arrangement_audit_op) {
  clear_detail();
  if (pass_home_scene_arrangement_audit_op) {
    set_has_pass_home_scene_arrangement_audit_op();
    detail_.pass_home_scene_arrangement_audit_op_ = pass_home_scene_arrangement_audit_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.pass_home_scene_arrangement_audit_op)
}

// .proto.FailHomeSceneArrangementAuditOp fail_home_scene_arrangement_audit_op = 62;
bool OfflineMsgBin::has_fail_home_scene_arrangement_audit_op() const {
  return detail_case() == kFailHomeSceneArrangementAuditOp;
}
void OfflineMsgBin::set_has_fail_home_scene_arrangement_audit_op() {
  _oneof_case_[0] = kFailHomeSceneArrangementAuditOp;
}
void OfflineMsgBin::clear_fail_home_scene_arrangement_audit_op() {
  if (has_fail_home_scene_arrangement_audit_op()) {
    delete detail_.fail_home_scene_arrangement_audit_op_;
    clear_has_detail();
  }
}
 const ::proto::FailHomeSceneArrangementAuditOp& OfflineMsgBin::fail_home_scene_arrangement_audit_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.fail_home_scene_arrangement_audit_op)
  return has_fail_home_scene_arrangement_audit_op()
      ? *detail_.fail_home_scene_arrangement_audit_op_
      : ::proto::FailHomeSceneArrangementAuditOp::default_instance();
}
::proto::FailHomeSceneArrangementAuditOp* OfflineMsgBin::mutable_fail_home_scene_arrangement_audit_op() {
  if (!has_fail_home_scene_arrangement_audit_op()) {
    clear_detail();
    set_has_fail_home_scene_arrangement_audit_op();
    detail_.fail_home_scene_arrangement_audit_op_ = new ::proto::FailHomeSceneArrangementAuditOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.fail_home_scene_arrangement_audit_op)
  return detail_.fail_home_scene_arrangement_audit_op_;
}
::proto::FailHomeSceneArrangementAuditOp* OfflineMsgBin::release_fail_home_scene_arrangement_audit_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.fail_home_scene_arrangement_audit_op)
  if (has_fail_home_scene_arrangement_audit_op()) {
    clear_has_detail();
    ::proto::FailHomeSceneArrangementAuditOp* temp = detail_.fail_home_scene_arrangement_audit_op_;
    detail_.fail_home_scene_arrangement_audit_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_fail_home_scene_arrangement_audit_op(::proto::FailHomeSceneArrangementAuditOp* fail_home_scene_arrangement_audit_op) {
  clear_detail();
  if (fail_home_scene_arrangement_audit_op) {
    set_has_fail_home_scene_arrangement_audit_op();
    detail_.fail_home_scene_arrangement_audit_op_ = fail_home_scene_arrangement_audit_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.fail_home_scene_arrangement_audit_op)
}

// .proto.FailHomeModulesArrangementAuditOp fail_home_modules_arrangement_audit_op = 63;
bool OfflineMsgBin::has_fail_home_modules_arrangement_audit_op() const {
  return detail_case() == kFailHomeModulesArrangementAuditOp;
}
void OfflineMsgBin::set_has_fail_home_modules_arrangement_audit_op() {
  _oneof_case_[0] = kFailHomeModulesArrangementAuditOp;
}
void OfflineMsgBin::clear_fail_home_modules_arrangement_audit_op() {
  if (has_fail_home_modules_arrangement_audit_op()) {
    delete detail_.fail_home_modules_arrangement_audit_op_;
    clear_has_detail();
  }
}
 const ::proto::FailHomeModulesArrangementAuditOp& OfflineMsgBin::fail_home_modules_arrangement_audit_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.fail_home_modules_arrangement_audit_op)
  return has_fail_home_modules_arrangement_audit_op()
      ? *detail_.fail_home_modules_arrangement_audit_op_
      : ::proto::FailHomeModulesArrangementAuditOp::default_instance();
}
::proto::FailHomeModulesArrangementAuditOp* OfflineMsgBin::mutable_fail_home_modules_arrangement_audit_op() {
  if (!has_fail_home_modules_arrangement_audit_op()) {
    clear_detail();
    set_has_fail_home_modules_arrangement_audit_op();
    detail_.fail_home_modules_arrangement_audit_op_ = new ::proto::FailHomeModulesArrangementAuditOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.fail_home_modules_arrangement_audit_op)
  return detail_.fail_home_modules_arrangement_audit_op_;
}
::proto::FailHomeModulesArrangementAuditOp* OfflineMsgBin::release_fail_home_modules_arrangement_audit_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.fail_home_modules_arrangement_audit_op)
  if (has_fail_home_modules_arrangement_audit_op()) {
    clear_has_detail();
    ::proto::FailHomeModulesArrangementAuditOp* temp = detail_.fail_home_modules_arrangement_audit_op_;
    detail_.fail_home_modules_arrangement_audit_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_fail_home_modules_arrangement_audit_op(::proto::FailHomeModulesArrangementAuditOp* fail_home_modules_arrangement_audit_op) {
  clear_detail();
  if (fail_home_modules_arrangement_audit_op) {
    set_has_fail_home_modules_arrangement_audit_op();
    detail_.fail_home_modules_arrangement_audit_op_ = fail_home_modules_arrangement_audit_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.fail_home_modules_arrangement_audit_op)
}

// .proto.BanUgcPublishOp ban_ugc_publish_op = 64;
bool OfflineMsgBin::has_ban_ugc_publish_op() const {
  return detail_case() == kBanUgcPublishOp;
}
void OfflineMsgBin::set_has_ban_ugc_publish_op() {
  _oneof_case_[0] = kBanUgcPublishOp;
}
void OfflineMsgBin::clear_ban_ugc_publish_op() {
  if (has_ban_ugc_publish_op()) {
    delete detail_.ban_ugc_publish_op_;
    clear_has_detail();
  }
}
 const ::proto::BanUgcPublishOp& OfflineMsgBin::ban_ugc_publish_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.ban_ugc_publish_op)
  return has_ban_ugc_publish_op()
      ? *detail_.ban_ugc_publish_op_
      : ::proto::BanUgcPublishOp::default_instance();
}
::proto::BanUgcPublishOp* OfflineMsgBin::mutable_ban_ugc_publish_op() {
  if (!has_ban_ugc_publish_op()) {
    clear_detail();
    set_has_ban_ugc_publish_op();
    detail_.ban_ugc_publish_op_ = new ::proto::BanUgcPublishOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.ban_ugc_publish_op)
  return detail_.ban_ugc_publish_op_;
}
::proto::BanUgcPublishOp* OfflineMsgBin::release_ban_ugc_publish_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.ban_ugc_publish_op)
  if (has_ban_ugc_publish_op()) {
    clear_has_detail();
    ::proto::BanUgcPublishOp* temp = detail_.ban_ugc_publish_op_;
    detail_.ban_ugc_publish_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_ban_ugc_publish_op(::proto::BanUgcPublishOp* ban_ugc_publish_op) {
  clear_detail();
  if (ban_ugc_publish_op) {
    set_has_ban_ugc_publish_op();
    detail_.ban_ugc_publish_op_ = ban_ugc_publish_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.ban_ugc_publish_op)
}

// .proto.ResetPlayerPersistentDungeonOp reset_player_persistent_dungeon_op = 28001;
bool OfflineMsgBin::has_reset_player_persistent_dungeon_op() const {
  return detail_case() == kResetPlayerPersistentDungeonOp;
}
void OfflineMsgBin::set_has_reset_player_persistent_dungeon_op() {
  _oneof_case_[0] = kResetPlayerPersistentDungeonOp;
}
void OfflineMsgBin::clear_reset_player_persistent_dungeon_op() {
  if (has_reset_player_persistent_dungeon_op()) {
    delete detail_.reset_player_persistent_dungeon_op_;
    clear_has_detail();
  }
}
 const ::proto::ResetPlayerPersistentDungeonOp& OfflineMsgBin::reset_player_persistent_dungeon_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.reset_player_persistent_dungeon_op)
  return has_reset_player_persistent_dungeon_op()
      ? *detail_.reset_player_persistent_dungeon_op_
      : ::proto::ResetPlayerPersistentDungeonOp::default_instance();
}
::proto::ResetPlayerPersistentDungeonOp* OfflineMsgBin::mutable_reset_player_persistent_dungeon_op() {
  if (!has_reset_player_persistent_dungeon_op()) {
    clear_detail();
    set_has_reset_player_persistent_dungeon_op();
    detail_.reset_player_persistent_dungeon_op_ = new ::proto::ResetPlayerPersistentDungeonOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.reset_player_persistent_dungeon_op)
  return detail_.reset_player_persistent_dungeon_op_;
}
::proto::ResetPlayerPersistentDungeonOp* OfflineMsgBin::release_reset_player_persistent_dungeon_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.reset_player_persistent_dungeon_op)
  if (has_reset_player_persistent_dungeon_op()) {
    clear_has_detail();
    ::proto::ResetPlayerPersistentDungeonOp* temp = detail_.reset_player_persistent_dungeon_op_;
    detail_.reset_player_persistent_dungeon_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_reset_player_persistent_dungeon_op(::proto::ResetPlayerPersistentDungeonOp* reset_player_persistent_dungeon_op) {
  clear_detail();
  if (reset_player_persistent_dungeon_op) {
    set_has_reset_player_persistent_dungeon_op();
    detail_.reset_player_persistent_dungeon_op_ = reset_player_persistent_dungeon_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.reset_player_persistent_dungeon_op)
}

// .proto.ResetPlayerPosInPersistentDungeonOp reset_player_pos_in_persistent_dungeon_op = 28002;
bool OfflineMsgBin::has_reset_player_pos_in_persistent_dungeon_op() const {
  return detail_case() == kResetPlayerPosInPersistentDungeonOp;
}
void OfflineMsgBin::set_has_reset_player_pos_in_persistent_dungeon_op() {
  _oneof_case_[0] = kResetPlayerPosInPersistentDungeonOp;
}
void OfflineMsgBin::clear_reset_player_pos_in_persistent_dungeon_op() {
  if (has_reset_player_pos_in_persistent_dungeon_op()) {
    delete detail_.reset_player_pos_in_persistent_dungeon_op_;
    clear_has_detail();
  }
}
 const ::proto::ResetPlayerPosInPersistentDungeonOp& OfflineMsgBin::reset_player_pos_in_persistent_dungeon_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.reset_player_pos_in_persistent_dungeon_op)
  return has_reset_player_pos_in_persistent_dungeon_op()
      ? *detail_.reset_player_pos_in_persistent_dungeon_op_
      : ::proto::ResetPlayerPosInPersistentDungeonOp::default_instance();
}
::proto::ResetPlayerPosInPersistentDungeonOp* OfflineMsgBin::mutable_reset_player_pos_in_persistent_dungeon_op() {
  if (!has_reset_player_pos_in_persistent_dungeon_op()) {
    clear_detail();
    set_has_reset_player_pos_in_persistent_dungeon_op();
    detail_.reset_player_pos_in_persistent_dungeon_op_ = new ::proto::ResetPlayerPosInPersistentDungeonOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.reset_player_pos_in_persistent_dungeon_op)
  return detail_.reset_player_pos_in_persistent_dungeon_op_;
}
::proto::ResetPlayerPosInPersistentDungeonOp* OfflineMsgBin::release_reset_player_pos_in_persistent_dungeon_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.reset_player_pos_in_persistent_dungeon_op)
  if (has_reset_player_pos_in_persistent_dungeon_op()) {
    clear_has_detail();
    ::proto::ResetPlayerPosInPersistentDungeonOp* temp = detail_.reset_player_pos_in_persistent_dungeon_op_;
    detail_.reset_player_pos_in_persistent_dungeon_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_reset_player_pos_in_persistent_dungeon_op(::proto::ResetPlayerPosInPersistentDungeonOp* reset_player_pos_in_persistent_dungeon_op) {
  clear_detail();
  if (reset_player_pos_in_persistent_dungeon_op) {
    set_has_reset_player_pos_in_persistent_dungeon_op();
    detail_.reset_player_pos_in_persistent_dungeon_op_ = reset_player_pos_in_persistent_dungeon_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.reset_player_pos_in_persistent_dungeon_op)
}

// .proto.LevelTagChangeOp level_tag_change_op = 28003;
bool OfflineMsgBin::has_level_tag_change_op() const {
  return detail_case() == kLevelTagChangeOp;
}
void OfflineMsgBin::set_has_level_tag_change_op() {
  _oneof_case_[0] = kLevelTagChangeOp;
}
void OfflineMsgBin::clear_level_tag_change_op() {
  if (has_level_tag_change_op()) {
    delete detail_.level_tag_change_op_;
    clear_has_detail();
  }
}
 const ::proto::LevelTagChangeOp& OfflineMsgBin::level_tag_change_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.level_tag_change_op)
  return has_level_tag_change_op()
      ? *detail_.level_tag_change_op_
      : ::proto::LevelTagChangeOp::default_instance();
}
::proto::LevelTagChangeOp* OfflineMsgBin::mutable_level_tag_change_op() {
  if (!has_level_tag_change_op()) {
    clear_detail();
    set_has_level_tag_change_op();
    detail_.level_tag_change_op_ = new ::proto::LevelTagChangeOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.level_tag_change_op)
  return detail_.level_tag_change_op_;
}
::proto::LevelTagChangeOp* OfflineMsgBin::release_level_tag_change_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.level_tag_change_op)
  if (has_level_tag_change_op()) {
    clear_has_detail();
    ::proto::LevelTagChangeOp* temp = detail_.level_tag_change_op_;
    detail_.level_tag_change_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_level_tag_change_op(::proto::LevelTagChangeOp* level_tag_change_op) {
  clear_detail();
  if (level_tag_change_op) {
    set_has_level_tag_change_op();
    detail_.level_tag_change_op_ = level_tag_change_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.level_tag_change_op)
}

// .proto.ResetPlayerWayPointInPersistentDungeonOp reset_player_way_point_in_persistent_dungeon_op = 28004;
bool OfflineMsgBin::has_reset_player_way_point_in_persistent_dungeon_op() const {
  return detail_case() == kResetPlayerWayPointInPersistentDungeonOp;
}
void OfflineMsgBin::set_has_reset_player_way_point_in_persistent_dungeon_op() {
  _oneof_case_[0] = kResetPlayerWayPointInPersistentDungeonOp;
}
void OfflineMsgBin::clear_reset_player_way_point_in_persistent_dungeon_op() {
  if (has_reset_player_way_point_in_persistent_dungeon_op()) {
    delete detail_.reset_player_way_point_in_persistent_dungeon_op_;
    clear_has_detail();
  }
}
 const ::proto::ResetPlayerWayPointInPersistentDungeonOp& OfflineMsgBin::reset_player_way_point_in_persistent_dungeon_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.reset_player_way_point_in_persistent_dungeon_op)
  return has_reset_player_way_point_in_persistent_dungeon_op()
      ? *detail_.reset_player_way_point_in_persistent_dungeon_op_
      : ::proto::ResetPlayerWayPointInPersistentDungeonOp::default_instance();
}
::proto::ResetPlayerWayPointInPersistentDungeonOp* OfflineMsgBin::mutable_reset_player_way_point_in_persistent_dungeon_op() {
  if (!has_reset_player_way_point_in_persistent_dungeon_op()) {
    clear_detail();
    set_has_reset_player_way_point_in_persistent_dungeon_op();
    detail_.reset_player_way_point_in_persistent_dungeon_op_ = new ::proto::ResetPlayerWayPointInPersistentDungeonOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.reset_player_way_point_in_persistent_dungeon_op)
  return detail_.reset_player_way_point_in_persistent_dungeon_op_;
}
::proto::ResetPlayerWayPointInPersistentDungeonOp* OfflineMsgBin::release_reset_player_way_point_in_persistent_dungeon_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.reset_player_way_point_in_persistent_dungeon_op)
  if (has_reset_player_way_point_in_persistent_dungeon_op()) {
    clear_has_detail();
    ::proto::ResetPlayerWayPointInPersistentDungeonOp* temp = detail_.reset_player_way_point_in_persistent_dungeon_op_;
    detail_.reset_player_way_point_in_persistent_dungeon_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_reset_player_way_point_in_persistent_dungeon_op(::proto::ResetPlayerWayPointInPersistentDungeonOp* reset_player_way_point_in_persistent_dungeon_op) {
  clear_detail();
  if (reset_player_way_point_in_persistent_dungeon_op) {
    set_has_reset_player_way_point_in_persistent_dungeon_op();
    detail_.reset_player_way_point_in_persistent_dungeon_op_ = reset_player_way_point_in_persistent_dungeon_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.reset_player_way_point_in_persistent_dungeon_op)
}

// .proto.ExhibitionSetOp exhibition_set_op = 30000;
bool OfflineMsgBin::has_exhibition_set_op() const {
  return detail_case() == kExhibitionSetOp;
}
void OfflineMsgBin::set_has_exhibition_set_op() {
  _oneof_case_[0] = kExhibitionSetOp;
}
void OfflineMsgBin::clear_exhibition_set_op() {
  if (has_exhibition_set_op()) {
    delete detail_.exhibition_set_op_;
    clear_has_detail();
  }
}
 const ::proto::ExhibitionSetOp& OfflineMsgBin::exhibition_set_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.exhibition_set_op)
  return has_exhibition_set_op()
      ? *detail_.exhibition_set_op_
      : ::proto::ExhibitionSetOp::default_instance();
}
::proto::ExhibitionSetOp* OfflineMsgBin::mutable_exhibition_set_op() {
  if (!has_exhibition_set_op()) {
    clear_detail();
    set_has_exhibition_set_op();
    detail_.exhibition_set_op_ = new ::proto::ExhibitionSetOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.exhibition_set_op)
  return detail_.exhibition_set_op_;
}
::proto::ExhibitionSetOp* OfflineMsgBin::release_exhibition_set_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.exhibition_set_op)
  if (has_exhibition_set_op()) {
    clear_has_detail();
    ::proto::ExhibitionSetOp* temp = detail_.exhibition_set_op_;
    detail_.exhibition_set_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_exhibition_set_op(::proto::ExhibitionSetOp* exhibition_set_op) {
  clear_detail();
  if (exhibition_set_op) {
    set_has_exhibition_set_op();
    detail_.exhibition_set_op_ = exhibition_set_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.exhibition_set_op)
}

// .proto.SetAvatarExtraPropOp set_avatar_extra_prop_op = 30001;
bool OfflineMsgBin::has_set_avatar_extra_prop_op() const {
  return detail_case() == kSetAvatarExtraPropOp;
}
void OfflineMsgBin::set_has_set_avatar_extra_prop_op() {
  _oneof_case_[0] = kSetAvatarExtraPropOp;
}
void OfflineMsgBin::clear_set_avatar_extra_prop_op() {
  if (has_set_avatar_extra_prop_op()) {
    delete detail_.set_avatar_extra_prop_op_;
    clear_has_detail();
  }
}
 const ::proto::SetAvatarExtraPropOp& OfflineMsgBin::set_avatar_extra_prop_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_avatar_extra_prop_op)
  return has_set_avatar_extra_prop_op()
      ? *detail_.set_avatar_extra_prop_op_
      : ::proto::SetAvatarExtraPropOp::default_instance();
}
::proto::SetAvatarExtraPropOp* OfflineMsgBin::mutable_set_avatar_extra_prop_op() {
  if (!has_set_avatar_extra_prop_op()) {
    clear_detail();
    set_has_set_avatar_extra_prop_op();
    detail_.set_avatar_extra_prop_op_ = new ::proto::SetAvatarExtraPropOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_avatar_extra_prop_op)
  return detail_.set_avatar_extra_prop_op_;
}
::proto::SetAvatarExtraPropOp* OfflineMsgBin::release_set_avatar_extra_prop_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_avatar_extra_prop_op)
  if (has_set_avatar_extra_prop_op()) {
    clear_has_detail();
    ::proto::SetAvatarExtraPropOp* temp = detail_.set_avatar_extra_prop_op_;
    detail_.set_avatar_extra_prop_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_set_avatar_extra_prop_op(::proto::SetAvatarExtraPropOp* set_avatar_extra_prop_op) {
  clear_detail();
  if (set_avatar_extra_prop_op) {
    set_has_set_avatar_extra_prop_op();
    detail_.set_avatar_extra_prop_op_ = set_avatar_extra_prop_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_avatar_extra_prop_op)
}

// .proto.AddItemWithLimitOp add_item_with_limit_op = 30002;
bool OfflineMsgBin::has_add_item_with_limit_op() const {
  return detail_case() == kAddItemWithLimitOp;
}
void OfflineMsgBin::set_has_add_item_with_limit_op() {
  _oneof_case_[0] = kAddItemWithLimitOp;
}
void OfflineMsgBin::clear_add_item_with_limit_op() {
  if (has_add_item_with_limit_op()) {
    delete detail_.add_item_with_limit_op_;
    clear_has_detail();
  }
}
 const ::proto::AddItemWithLimitOp& OfflineMsgBin::add_item_with_limit_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.add_item_with_limit_op)
  return has_add_item_with_limit_op()
      ? *detail_.add_item_with_limit_op_
      : ::proto::AddItemWithLimitOp::default_instance();
}
::proto::AddItemWithLimitOp* OfflineMsgBin::mutable_add_item_with_limit_op() {
  if (!has_add_item_with_limit_op()) {
    clear_detail();
    set_has_add_item_with_limit_op();
    detail_.add_item_with_limit_op_ = new ::proto::AddItemWithLimitOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.add_item_with_limit_op)
  return detail_.add_item_with_limit_op_;
}
::proto::AddItemWithLimitOp* OfflineMsgBin::release_add_item_with_limit_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.add_item_with_limit_op)
  if (has_add_item_with_limit_op()) {
    clear_has_detail();
    ::proto::AddItemWithLimitOp* temp = detail_.add_item_with_limit_op_;
    detail_.add_item_with_limit_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_add_item_with_limit_op(::proto::AddItemWithLimitOp* add_item_with_limit_op) {
  clear_detail();
  if (add_item_with_limit_op) {
    set_has_add_item_with_limit_op();
    detail_.add_item_with_limit_op_ = add_item_with_limit_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.add_item_with_limit_op)
}

// .proto.SetGadgetChainLevelOp set_gadget_chain_level_op = 31001;
bool OfflineMsgBin::has_set_gadget_chain_level_op() const {
  return detail_case() == kSetGadgetChainLevelOp;
}
void OfflineMsgBin::set_has_set_gadget_chain_level_op() {
  _oneof_case_[0] = kSetGadgetChainLevelOp;
}
void OfflineMsgBin::clear_set_gadget_chain_level_op() {
  if (has_set_gadget_chain_level_op()) {
    delete detail_.set_gadget_chain_level_op_;
    clear_has_detail();
  }
}
 const ::proto::SetGadgetChainLevelOp& OfflineMsgBin::set_gadget_chain_level_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_gadget_chain_level_op)
  return has_set_gadget_chain_level_op()
      ? *detail_.set_gadget_chain_level_op_
      : ::proto::SetGadgetChainLevelOp::default_instance();
}
::proto::SetGadgetChainLevelOp* OfflineMsgBin::mutable_set_gadget_chain_level_op() {
  if (!has_set_gadget_chain_level_op()) {
    clear_detail();
    set_has_set_gadget_chain_level_op();
    detail_.set_gadget_chain_level_op_ = new ::proto::SetGadgetChainLevelOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_gadget_chain_level_op)
  return detail_.set_gadget_chain_level_op_;
}
::proto::SetGadgetChainLevelOp* OfflineMsgBin::release_set_gadget_chain_level_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_gadget_chain_level_op)
  if (has_set_gadget_chain_level_op()) {
    clear_has_detail();
    ::proto::SetGadgetChainLevelOp* temp = detail_.set_gadget_chain_level_op_;
    detail_.set_gadget_chain_level_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_set_gadget_chain_level_op(::proto::SetGadgetChainLevelOp* set_gadget_chain_level_op) {
  clear_detail();
  if (set_gadget_chain_level_op) {
    set_has_set_gadget_chain_level_op();
    detail_.set_gadget_chain_level_op_ = set_gadget_chain_level_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_gadget_chain_level_op)
}

// .proto.SetDailyTaskVarOp set_daily_task_var_op = 32001;
bool OfflineMsgBin::has_set_daily_task_var_op() const {
  return detail_case() == kSetDailyTaskVarOp;
}
void OfflineMsgBin::set_has_set_daily_task_var_op() {
  _oneof_case_[0] = kSetDailyTaskVarOp;
}
void OfflineMsgBin::clear_set_daily_task_var_op() {
  if (has_set_daily_task_var_op()) {
    delete detail_.set_daily_task_var_op_;
    clear_has_detail();
  }
}
 const ::proto::SetDailyTaskVarOp& OfflineMsgBin::set_daily_task_var_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_daily_task_var_op)
  return has_set_daily_task_var_op()
      ? *detail_.set_daily_task_var_op_
      : ::proto::SetDailyTaskVarOp::default_instance();
}
::proto::SetDailyTaskVarOp* OfflineMsgBin::mutable_set_daily_task_var_op() {
  if (!has_set_daily_task_var_op()) {
    clear_detail();
    set_has_set_daily_task_var_op();
    detail_.set_daily_task_var_op_ = new ::proto::SetDailyTaskVarOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_daily_task_var_op)
  return detail_.set_daily_task_var_op_;
}
::proto::SetDailyTaskVarOp* OfflineMsgBin::release_set_daily_task_var_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_daily_task_var_op)
  if (has_set_daily_task_var_op()) {
    clear_has_detail();
    ::proto::SetDailyTaskVarOp* temp = detail_.set_daily_task_var_op_;
    detail_.set_daily_task_var_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_set_daily_task_var_op(::proto::SetDailyTaskVarOp* set_daily_task_var_op) {
  clear_detail();
  if (set_daily_task_var_op) {
    set_has_set_daily_task_var_op();
    detail_.set_daily_task_var_op_ = set_daily_task_var_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_daily_task_var_op)
}

// .proto.AvatarRenameAuditResultOp avatar_rename_audit_result_op = 33001;
bool OfflineMsgBin::has_avatar_rename_audit_result_op() const {
  return detail_case() == kAvatarRenameAuditResultOp;
}
void OfflineMsgBin::set_has_avatar_rename_audit_result_op() {
  _oneof_case_[0] = kAvatarRenameAuditResultOp;
}
void OfflineMsgBin::clear_avatar_rename_audit_result_op() {
  if (has_avatar_rename_audit_result_op()) {
    delete detail_.avatar_rename_audit_result_op_;
    clear_has_detail();
  }
}
 const ::proto::AvatarRenameAuditResultOp& OfflineMsgBin::avatar_rename_audit_result_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.avatar_rename_audit_result_op)
  return has_avatar_rename_audit_result_op()
      ? *detail_.avatar_rename_audit_result_op_
      : ::proto::AvatarRenameAuditResultOp::default_instance();
}
::proto::AvatarRenameAuditResultOp* OfflineMsgBin::mutable_avatar_rename_audit_result_op() {
  if (!has_avatar_rename_audit_result_op()) {
    clear_detail();
    set_has_avatar_rename_audit_result_op();
    detail_.avatar_rename_audit_result_op_ = new ::proto::AvatarRenameAuditResultOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.avatar_rename_audit_result_op)
  return detail_.avatar_rename_audit_result_op_;
}
::proto::AvatarRenameAuditResultOp* OfflineMsgBin::release_avatar_rename_audit_result_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.avatar_rename_audit_result_op)
  if (has_avatar_rename_audit_result_op()) {
    clear_has_detail();
    ::proto::AvatarRenameAuditResultOp* temp = detail_.avatar_rename_audit_result_op_;
    detail_.avatar_rename_audit_result_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_avatar_rename_audit_result_op(::proto::AvatarRenameAuditResultOp* avatar_rename_audit_result_op) {
  clear_detail();
  if (avatar_rename_audit_result_op) {
    set_has_avatar_rename_audit_result_op();
    detail_.avatar_rename_audit_result_op_ = avatar_rename_audit_result_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.avatar_rename_audit_result_op)
}

// .proto.ResetAvatarRenameOp reset_avatar_rename_op = 33002;
bool OfflineMsgBin::has_reset_avatar_rename_op() const {
  return detail_case() == kResetAvatarRenameOp;
}
void OfflineMsgBin::set_has_reset_avatar_rename_op() {
  _oneof_case_[0] = kResetAvatarRenameOp;
}
void OfflineMsgBin::clear_reset_avatar_rename_op() {
  if (has_reset_avatar_rename_op()) {
    delete detail_.reset_avatar_rename_op_;
    clear_has_detail();
  }
}
 const ::proto::ResetAvatarRenameOp& OfflineMsgBin::reset_avatar_rename_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.reset_avatar_rename_op)
  return has_reset_avatar_rename_op()
      ? *detail_.reset_avatar_rename_op_
      : ::proto::ResetAvatarRenameOp::default_instance();
}
::proto::ResetAvatarRenameOp* OfflineMsgBin::mutable_reset_avatar_rename_op() {
  if (!has_reset_avatar_rename_op()) {
    clear_detail();
    set_has_reset_avatar_rename_op();
    detail_.reset_avatar_rename_op_ = new ::proto::ResetAvatarRenameOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.reset_avatar_rename_op)
  return detail_.reset_avatar_rename_op_;
}
::proto::ResetAvatarRenameOp* OfflineMsgBin::release_reset_avatar_rename_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.reset_avatar_rename_op)
  if (has_reset_avatar_rename_op()) {
    clear_has_detail();
    ::proto::ResetAvatarRenameOp* temp = detail_.reset_avatar_rename_op_;
    detail_.reset_avatar_rename_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_reset_avatar_rename_op(::proto::ResetAvatarRenameOp* reset_avatar_rename_op) {
  clear_detail();
  if (reset_avatar_rename_op) {
    set_has_reset_avatar_rename_op();
    detail_.reset_avatar_rename_op_ = reset_avatar_rename_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.reset_avatar_rename_op)
}

// .proto.AddFinishedTalkOp add_finished_talk_op = 33003;
bool OfflineMsgBin::has_add_finished_talk_op() const {
  return detail_case() == kAddFinishedTalkOp;
}
void OfflineMsgBin::set_has_add_finished_talk_op() {
  _oneof_case_[0] = kAddFinishedTalkOp;
}
void OfflineMsgBin::clear_add_finished_talk_op() {
  if (has_add_finished_talk_op()) {
    delete detail_.add_finished_talk_op_;
    clear_has_detail();
  }
}
 const ::proto::AddFinishedTalkOp& OfflineMsgBin::add_finished_talk_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.add_finished_talk_op)
  return has_add_finished_talk_op()
      ? *detail_.add_finished_talk_op_
      : ::proto::AddFinishedTalkOp::default_instance();
}
::proto::AddFinishedTalkOp* OfflineMsgBin::mutable_add_finished_talk_op() {
  if (!has_add_finished_talk_op()) {
    clear_detail();
    set_has_add_finished_talk_op();
    detail_.add_finished_talk_op_ = new ::proto::AddFinishedTalkOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.add_finished_talk_op)
  return detail_.add_finished_talk_op_;
}
::proto::AddFinishedTalkOp* OfflineMsgBin::release_add_finished_talk_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.add_finished_talk_op)
  if (has_add_finished_talk_op()) {
    clear_has_detail();
    ::proto::AddFinishedTalkOp* temp = detail_.add_finished_talk_op_;
    detail_.add_finished_talk_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_add_finished_talk_op(::proto::AddFinishedTalkOp* add_finished_talk_op) {
  clear_detail();
  if (add_finished_talk_op) {
    set_has_add_finished_talk_op();
    detail_.add_finished_talk_op_ = add_finished_talk_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.add_finished_talk_op)
}

// .proto.DelFinishedTalkOp del_finished_talk_op = 33004;
bool OfflineMsgBin::has_del_finished_talk_op() const {
  return detail_case() == kDelFinishedTalkOp;
}
void OfflineMsgBin::set_has_del_finished_talk_op() {
  _oneof_case_[0] = kDelFinishedTalkOp;
}
void OfflineMsgBin::clear_del_finished_talk_op() {
  if (has_del_finished_talk_op()) {
    delete detail_.del_finished_talk_op_;
    clear_has_detail();
  }
}
 const ::proto::DelFinishedTalkOp& OfflineMsgBin::del_finished_talk_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.del_finished_talk_op)
  return has_del_finished_talk_op()
      ? *detail_.del_finished_talk_op_
      : ::proto::DelFinishedTalkOp::default_instance();
}
::proto::DelFinishedTalkOp* OfflineMsgBin::mutable_del_finished_talk_op() {
  if (!has_del_finished_talk_op()) {
    clear_detail();
    set_has_del_finished_talk_op();
    detail_.del_finished_talk_op_ = new ::proto::DelFinishedTalkOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.del_finished_talk_op)
  return detail_.del_finished_talk_op_;
}
::proto::DelFinishedTalkOp* OfflineMsgBin::release_del_finished_talk_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.del_finished_talk_op)
  if (has_del_finished_talk_op()) {
    clear_has_detail();
    ::proto::DelFinishedTalkOp* temp = detail_.del_finished_talk_op_;
    detail_.del_finished_talk_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_del_finished_talk_op(::proto::DelFinishedTalkOp* del_finished_talk_op) {
  clear_detail();
  if (del_finished_talk_op) {
    set_has_del_finished_talk_op();
    detail_.del_finished_talk_op_ = del_finished_talk_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.del_finished_talk_op)
}

// .proto.SetPlayerGCGMatchScoreOp set_player_gcg_match_score_op = 33005;
bool OfflineMsgBin::has_set_player_gcg_match_score_op() const {
  return detail_case() == kSetPlayerGcgMatchScoreOp;
}
void OfflineMsgBin::set_has_set_player_gcg_match_score_op() {
  _oneof_case_[0] = kSetPlayerGcgMatchScoreOp;
}
void OfflineMsgBin::clear_set_player_gcg_match_score_op() {
  if (has_set_player_gcg_match_score_op()) {
    delete detail_.set_player_gcg_match_score_op_;
    clear_has_detail();
  }
}
 const ::proto::SetPlayerGCGMatchScoreOp& OfflineMsgBin::set_player_gcg_match_score_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_player_gcg_match_score_op)
  return has_set_player_gcg_match_score_op()
      ? *detail_.set_player_gcg_match_score_op_
      : ::proto::SetPlayerGCGMatchScoreOp::default_instance();
}
::proto::SetPlayerGCGMatchScoreOp* OfflineMsgBin::mutable_set_player_gcg_match_score_op() {
  if (!has_set_player_gcg_match_score_op()) {
    clear_detail();
    set_has_set_player_gcg_match_score_op();
    detail_.set_player_gcg_match_score_op_ = new ::proto::SetPlayerGCGMatchScoreOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_player_gcg_match_score_op)
  return detail_.set_player_gcg_match_score_op_;
}
::proto::SetPlayerGCGMatchScoreOp* OfflineMsgBin::release_set_player_gcg_match_score_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_player_gcg_match_score_op)
  if (has_set_player_gcg_match_score_op()) {
    clear_has_detail();
    ::proto::SetPlayerGCGMatchScoreOp* temp = detail_.set_player_gcg_match_score_op_;
    detail_.set_player_gcg_match_score_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_set_player_gcg_match_score_op(::proto::SetPlayerGCGMatchScoreOp* set_player_gcg_match_score_op) {
  clear_detail();
  if (set_player_gcg_match_score_op) {
    set_has_set_player_gcg_match_score_op();
    detail_.set_player_gcg_match_score_op_ = set_player_gcg_match_score_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_player_gcg_match_score_op)
}

// .proto.SetPushTipsStateOp set_push_tips_state_op = 33006;
bool OfflineMsgBin::has_set_push_tips_state_op() const {
  return detail_case() == kSetPushTipsStateOp;
}
void OfflineMsgBin::set_has_set_push_tips_state_op() {
  _oneof_case_[0] = kSetPushTipsStateOp;
}
void OfflineMsgBin::clear_set_push_tips_state_op() {
  if (has_set_push_tips_state_op()) {
    delete detail_.set_push_tips_state_op_;
    clear_has_detail();
  }
}
 const ::proto::SetPushTipsStateOp& OfflineMsgBin::set_push_tips_state_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_push_tips_state_op)
  return has_set_push_tips_state_op()
      ? *detail_.set_push_tips_state_op_
      : ::proto::SetPushTipsStateOp::default_instance();
}
::proto::SetPushTipsStateOp* OfflineMsgBin::mutable_set_push_tips_state_op() {
  if (!has_set_push_tips_state_op()) {
    clear_detail();
    set_has_set_push_tips_state_op();
    detail_.set_push_tips_state_op_ = new ::proto::SetPushTipsStateOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_push_tips_state_op)
  return detail_.set_push_tips_state_op_;
}
::proto::SetPushTipsStateOp* OfflineMsgBin::release_set_push_tips_state_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_push_tips_state_op)
  if (has_set_push_tips_state_op()) {
    clear_has_detail();
    ::proto::SetPushTipsStateOp* temp = detail_.set_push_tips_state_op_;
    detail_.set_push_tips_state_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_set_push_tips_state_op(::proto::SetPushTipsStateOp* set_push_tips_state_op) {
  clear_detail();
  if (set_push_tips_state_op) {
    set_has_set_push_tips_state_op();
    detail_.set_push_tips_state_op_ = set_push_tips_state_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_push_tips_state_op)
}

// .proto.DeletePlayerGCGCardOp delete_player_gcg_card_op = 33007;
bool OfflineMsgBin::has_delete_player_gcg_card_op() const {
  return detail_case() == kDeletePlayerGcgCardOp;
}
void OfflineMsgBin::set_has_delete_player_gcg_card_op() {
  _oneof_case_[0] = kDeletePlayerGcgCardOp;
}
void OfflineMsgBin::clear_delete_player_gcg_card_op() {
  if (has_delete_player_gcg_card_op()) {
    delete detail_.delete_player_gcg_card_op_;
    clear_has_detail();
  }
}
 const ::proto::DeletePlayerGCGCardOp& OfflineMsgBin::delete_player_gcg_card_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.delete_player_gcg_card_op)
  return has_delete_player_gcg_card_op()
      ? *detail_.delete_player_gcg_card_op_
      : ::proto::DeletePlayerGCGCardOp::default_instance();
}
::proto::DeletePlayerGCGCardOp* OfflineMsgBin::mutable_delete_player_gcg_card_op() {
  if (!has_delete_player_gcg_card_op()) {
    clear_detail();
    set_has_delete_player_gcg_card_op();
    detail_.delete_player_gcg_card_op_ = new ::proto::DeletePlayerGCGCardOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.delete_player_gcg_card_op)
  return detail_.delete_player_gcg_card_op_;
}
::proto::DeletePlayerGCGCardOp* OfflineMsgBin::release_delete_player_gcg_card_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.delete_player_gcg_card_op)
  if (has_delete_player_gcg_card_op()) {
    clear_has_detail();
    ::proto::DeletePlayerGCGCardOp* temp = detail_.delete_player_gcg_card_op_;
    detail_.delete_player_gcg_card_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_delete_player_gcg_card_op(::proto::DeletePlayerGCGCardOp* delete_player_gcg_card_op) {
  clear_detail();
  if (delete_player_gcg_card_op) {
    set_has_delete_player_gcg_card_op();
    detail_.delete_player_gcg_card_op_ = delete_player_gcg_card_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.delete_player_gcg_card_op)
}

// .proto.DeletePlayerGCGCardFaceOp delete_player_gcg_card_face_op = 33008;
bool OfflineMsgBin::has_delete_player_gcg_card_face_op() const {
  return detail_case() == kDeletePlayerGcgCardFaceOp;
}
void OfflineMsgBin::set_has_delete_player_gcg_card_face_op() {
  _oneof_case_[0] = kDeletePlayerGcgCardFaceOp;
}
void OfflineMsgBin::clear_delete_player_gcg_card_face_op() {
  if (has_delete_player_gcg_card_face_op()) {
    delete detail_.delete_player_gcg_card_face_op_;
    clear_has_detail();
  }
}
 const ::proto::DeletePlayerGCGCardFaceOp& OfflineMsgBin::delete_player_gcg_card_face_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.delete_player_gcg_card_face_op)
  return has_delete_player_gcg_card_face_op()
      ? *detail_.delete_player_gcg_card_face_op_
      : ::proto::DeletePlayerGCGCardFaceOp::default_instance();
}
::proto::DeletePlayerGCGCardFaceOp* OfflineMsgBin::mutable_delete_player_gcg_card_face_op() {
  if (!has_delete_player_gcg_card_face_op()) {
    clear_detail();
    set_has_delete_player_gcg_card_face_op();
    detail_.delete_player_gcg_card_face_op_ = new ::proto::DeletePlayerGCGCardFaceOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.delete_player_gcg_card_face_op)
  return detail_.delete_player_gcg_card_face_op_;
}
::proto::DeletePlayerGCGCardFaceOp* OfflineMsgBin::release_delete_player_gcg_card_face_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.delete_player_gcg_card_face_op)
  if (has_delete_player_gcg_card_face_op()) {
    clear_has_detail();
    ::proto::DeletePlayerGCGCardFaceOp* temp = detail_.delete_player_gcg_card_face_op_;
    detail_.delete_player_gcg_card_face_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_delete_player_gcg_card_face_op(::proto::DeletePlayerGCGCardFaceOp* delete_player_gcg_card_face_op) {
  clear_detail();
  if (delete_player_gcg_card_face_op) {
    set_has_delete_player_gcg_card_face_op();
    detail_.delete_player_gcg_card_face_op_ = delete_player_gcg_card_face_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.delete_player_gcg_card_face_op)
}

// .proto.DeletePlayerGCGCardBackOp delete_player_gcg_card_back_op = 33009;
bool OfflineMsgBin::has_delete_player_gcg_card_back_op() const {
  return detail_case() == kDeletePlayerGcgCardBackOp;
}
void OfflineMsgBin::set_has_delete_player_gcg_card_back_op() {
  _oneof_case_[0] = kDeletePlayerGcgCardBackOp;
}
void OfflineMsgBin::clear_delete_player_gcg_card_back_op() {
  if (has_delete_player_gcg_card_back_op()) {
    delete detail_.delete_player_gcg_card_back_op_;
    clear_has_detail();
  }
}
 const ::proto::DeletePlayerGCGCardBackOp& OfflineMsgBin::delete_player_gcg_card_back_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.delete_player_gcg_card_back_op)
  return has_delete_player_gcg_card_back_op()
      ? *detail_.delete_player_gcg_card_back_op_
      : ::proto::DeletePlayerGCGCardBackOp::default_instance();
}
::proto::DeletePlayerGCGCardBackOp* OfflineMsgBin::mutable_delete_player_gcg_card_back_op() {
  if (!has_delete_player_gcg_card_back_op()) {
    clear_detail();
    set_has_delete_player_gcg_card_back_op();
    detail_.delete_player_gcg_card_back_op_ = new ::proto::DeletePlayerGCGCardBackOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.delete_player_gcg_card_back_op)
  return detail_.delete_player_gcg_card_back_op_;
}
::proto::DeletePlayerGCGCardBackOp* OfflineMsgBin::release_delete_player_gcg_card_back_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.delete_player_gcg_card_back_op)
  if (has_delete_player_gcg_card_back_op()) {
    clear_has_detail();
    ::proto::DeletePlayerGCGCardBackOp* temp = detail_.delete_player_gcg_card_back_op_;
    detail_.delete_player_gcg_card_back_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_delete_player_gcg_card_back_op(::proto::DeletePlayerGCGCardBackOp* delete_player_gcg_card_back_op) {
  clear_detail();
  if (delete_player_gcg_card_back_op) {
    set_has_delete_player_gcg_card_back_op();
    detail_.delete_player_gcg_card_back_op_ = delete_player_gcg_card_back_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.delete_player_gcg_card_back_op)
}

// .proto.DeletePlayerGCGDeckFieldOp delete_player_gcg_deck_field_op = 33010;
bool OfflineMsgBin::has_delete_player_gcg_deck_field_op() const {
  return detail_case() == kDeletePlayerGcgDeckFieldOp;
}
void OfflineMsgBin::set_has_delete_player_gcg_deck_field_op() {
  _oneof_case_[0] = kDeletePlayerGcgDeckFieldOp;
}
void OfflineMsgBin::clear_delete_player_gcg_deck_field_op() {
  if (has_delete_player_gcg_deck_field_op()) {
    delete detail_.delete_player_gcg_deck_field_op_;
    clear_has_detail();
  }
}
 const ::proto::DeletePlayerGCGDeckFieldOp& OfflineMsgBin::delete_player_gcg_deck_field_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.delete_player_gcg_deck_field_op)
  return has_delete_player_gcg_deck_field_op()
      ? *detail_.delete_player_gcg_deck_field_op_
      : ::proto::DeletePlayerGCGDeckFieldOp::default_instance();
}
::proto::DeletePlayerGCGDeckFieldOp* OfflineMsgBin::mutable_delete_player_gcg_deck_field_op() {
  if (!has_delete_player_gcg_deck_field_op()) {
    clear_detail();
    set_has_delete_player_gcg_deck_field_op();
    detail_.delete_player_gcg_deck_field_op_ = new ::proto::DeletePlayerGCGDeckFieldOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.delete_player_gcg_deck_field_op)
  return detail_.delete_player_gcg_deck_field_op_;
}
::proto::DeletePlayerGCGDeckFieldOp* OfflineMsgBin::release_delete_player_gcg_deck_field_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.delete_player_gcg_deck_field_op)
  if (has_delete_player_gcg_deck_field_op()) {
    clear_has_detail();
    ::proto::DeletePlayerGCGDeckFieldOp* temp = detail_.delete_player_gcg_deck_field_op_;
    detail_.delete_player_gcg_deck_field_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_delete_player_gcg_deck_field_op(::proto::DeletePlayerGCGDeckFieldOp* delete_player_gcg_deck_field_op) {
  clear_detail();
  if (delete_player_gcg_deck_field_op) {
    set_has_delete_player_gcg_deck_field_op();
    detail_.delete_player_gcg_deck_field_op_ = delete_player_gcg_deck_field_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.delete_player_gcg_deck_field_op)
}

// .proto.BanPlayerGCGMatchOp ban_player_gcg_match_op = 33011;
bool OfflineMsgBin::has_ban_player_gcg_match_op() const {
  return detail_case() == kBanPlayerGcgMatchOp;
}
void OfflineMsgBin::set_has_ban_player_gcg_match_op() {
  _oneof_case_[0] = kBanPlayerGcgMatchOp;
}
void OfflineMsgBin::clear_ban_player_gcg_match_op() {
  if (has_ban_player_gcg_match_op()) {
    delete detail_.ban_player_gcg_match_op_;
    clear_has_detail();
  }
}
 const ::proto::BanPlayerGCGMatchOp& OfflineMsgBin::ban_player_gcg_match_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.ban_player_gcg_match_op)
  return has_ban_player_gcg_match_op()
      ? *detail_.ban_player_gcg_match_op_
      : ::proto::BanPlayerGCGMatchOp::default_instance();
}
::proto::BanPlayerGCGMatchOp* OfflineMsgBin::mutable_ban_player_gcg_match_op() {
  if (!has_ban_player_gcg_match_op()) {
    clear_detail();
    set_has_ban_player_gcg_match_op();
    detail_.ban_player_gcg_match_op_ = new ::proto::BanPlayerGCGMatchOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.ban_player_gcg_match_op)
  return detail_.ban_player_gcg_match_op_;
}
::proto::BanPlayerGCGMatchOp* OfflineMsgBin::release_ban_player_gcg_match_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.ban_player_gcg_match_op)
  if (has_ban_player_gcg_match_op()) {
    clear_has_detail();
    ::proto::BanPlayerGCGMatchOp* temp = detail_.ban_player_gcg_match_op_;
    detail_.ban_player_gcg_match_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_ban_player_gcg_match_op(::proto::BanPlayerGCGMatchOp* ban_player_gcg_match_op) {
  clear_detail();
  if (ban_player_gcg_match_op) {
    set_has_ban_player_gcg_match_op();
    detail_.ban_player_gcg_match_op_ = ban_player_gcg_match_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.ban_player_gcg_match_op)
}

// .proto.BanPlayerGCGPVPOp ban_player_gcg_pvp_op = 33012;
bool OfflineMsgBin::has_ban_player_gcg_pvp_op() const {
  return detail_case() == kBanPlayerGcgPvpOp;
}
void OfflineMsgBin::set_has_ban_player_gcg_pvp_op() {
  _oneof_case_[0] = kBanPlayerGcgPvpOp;
}
void OfflineMsgBin::clear_ban_player_gcg_pvp_op() {
  if (has_ban_player_gcg_pvp_op()) {
    delete detail_.ban_player_gcg_pvp_op_;
    clear_has_detail();
  }
}
 const ::proto::BanPlayerGCGPVPOp& OfflineMsgBin::ban_player_gcg_pvp_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.ban_player_gcg_pvp_op)
  return has_ban_player_gcg_pvp_op()
      ? *detail_.ban_player_gcg_pvp_op_
      : ::proto::BanPlayerGCGPVPOp::default_instance();
}
::proto::BanPlayerGCGPVPOp* OfflineMsgBin::mutable_ban_player_gcg_pvp_op() {
  if (!has_ban_player_gcg_pvp_op()) {
    clear_detail();
    set_has_ban_player_gcg_pvp_op();
    detail_.ban_player_gcg_pvp_op_ = new ::proto::BanPlayerGCGPVPOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.ban_player_gcg_pvp_op)
  return detail_.ban_player_gcg_pvp_op_;
}
::proto::BanPlayerGCGPVPOp* OfflineMsgBin::release_ban_player_gcg_pvp_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.ban_player_gcg_pvp_op)
  if (has_ban_player_gcg_pvp_op()) {
    clear_has_detail();
    ::proto::BanPlayerGCGPVPOp* temp = detail_.ban_player_gcg_pvp_op_;
    detail_.ban_player_gcg_pvp_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineMsgBin::set_allocated_ban_player_gcg_pvp_op(::proto::BanPlayerGCGPVPOp* ban_player_gcg_pvp_op) {
  clear_detail();
  if (ban_player_gcg_pvp_op) {
    set_has_ban_player_gcg_pvp_op();
    detail_.ban_player_gcg_pvp_op_ = ban_player_gcg_pvp_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.ban_player_gcg_pvp_op)
}

bool OfflineMsgBin::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
void OfflineMsgBin::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
OfflineMsgBin::DetailCase OfflineMsgBin::detail_case() const {
  return OfflineMsgBin::DetailCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeTestOp::kValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeTestOp::HomeTestOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeTestOp)
}
HomeTestOp::HomeTestOp(const HomeTestOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  val_ = from.val_;
  // @@protoc_insertion_point(copy_constructor:proto.HomeTestOp)
}

void HomeTestOp::SharedCtor() {
  val_ = 0u;
  _cached_size_ = 0;
}

HomeTestOp::~HomeTestOp() {
  // @@protoc_insertion_point(destructor:proto.HomeTestOp)
  SharedDtor();
}

void HomeTestOp::SharedDtor() {
}

void HomeTestOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeTestOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeTestOp& HomeTestOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeTestOp* HomeTestOp::New(::google::protobuf::Arena* arena) const {
  HomeTestOp* n = new HomeTestOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeTestOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeTestOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  val_ = 0u;
  _internal_metadata_.Clear();
}

bool HomeTestOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeTestOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 val = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &val_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeTestOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeTestOp)
  return false;
#undef DO_
}

void HomeTestOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeTestOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 val = 1;
  if (this->val() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->val(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeTestOp)
}

::google::protobuf::uint8* HomeTestOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeTestOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 val = 1;
  if (this->val() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->val(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeTestOp)
  return target;
}

size_t HomeTestOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeTestOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 val = 1;
  if (this->val() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->val());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeTestOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeTestOp)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeTestOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeTestOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeTestOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeTestOp)
    MergeFrom(*source);
  }
}

void HomeTestOp::MergeFrom(const HomeTestOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeTestOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.val() != 0) {
    set_val(from.val());
  }
}

void HomeTestOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeTestOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeTestOp::CopyFrom(const HomeTestOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeTestOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeTestOp::IsInitialized() const {
  return true;
}

void HomeTestOp::Swap(HomeTestOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeTestOp::InternalSwap(HomeTestOp* other) {
  using std::swap;
  swap(val_, other->val_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeTestOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeTestOp

// uint32 val = 1;
void HomeTestOp::clear_val() {
  val_ = 0u;
}
::google::protobuf::uint32 HomeTestOp::val() const {
  // @@protoc_insertion_point(field_get:proto.HomeTestOp.val)
  return val_;
}
void HomeTestOp::set_val(::google::protobuf::uint32 value) {
  
  val_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeTestOp.val)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeRestoreDefaultsArrangementOp::kIsAllModuleFieldNumber;
const int HomeRestoreDefaultsArrangementOp::kModuleIdListFieldNumber;
const int HomeRestoreDefaultsArrangementOp::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeRestoreDefaultsArrangementOp::HomeRestoreDefaultsArrangementOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeRestoreDefaultsArrangementOp)
}
HomeRestoreDefaultsArrangementOp::HomeRestoreDefaultsArrangementOp(const HomeRestoreDefaultsArrangementOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      module_id_list_(from.module_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_all_module_, &from.is_all_module_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&is_all_module_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:proto.HomeRestoreDefaultsArrangementOp)
}

void HomeRestoreDefaultsArrangementOp::SharedCtor() {
  ::memset(&is_all_module_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&is_all_module_)) + sizeof(version_));
  _cached_size_ = 0;
}

HomeRestoreDefaultsArrangementOp::~HomeRestoreDefaultsArrangementOp() {
  // @@protoc_insertion_point(destructor:proto.HomeRestoreDefaultsArrangementOp)
  SharedDtor();
}

void HomeRestoreDefaultsArrangementOp::SharedDtor() {
}

void HomeRestoreDefaultsArrangementOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeRestoreDefaultsArrangementOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeRestoreDefaultsArrangementOp& HomeRestoreDefaultsArrangementOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeRestoreDefaultsArrangementOp* HomeRestoreDefaultsArrangementOp::New(::google::protobuf::Arena* arena) const {
  HomeRestoreDefaultsArrangementOp* n = new HomeRestoreDefaultsArrangementOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeRestoreDefaultsArrangementOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeRestoreDefaultsArrangementOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  module_id_list_.Clear();
  ::memset(&is_all_module_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&is_all_module_)) + sizeof(version_));
  _internal_metadata_.Clear();
}

bool HomeRestoreDefaultsArrangementOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeRestoreDefaultsArrangementOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_all_module = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_all_module_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 module_id_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_module_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_module_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeRestoreDefaultsArrangementOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeRestoreDefaultsArrangementOp)
  return false;
#undef DO_
}

void HomeRestoreDefaultsArrangementOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeRestoreDefaultsArrangementOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_all_module = 1;
  if (this->is_all_module() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_all_module(), output);
  }

  // repeated uint32 module_id_list = 2;
  if (this->module_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _module_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->module_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->module_id_list(i), output);
  }

  // uint32 version = 3;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeRestoreDefaultsArrangementOp)
}

::google::protobuf::uint8* HomeRestoreDefaultsArrangementOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeRestoreDefaultsArrangementOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_all_module = 1;
  if (this->is_all_module() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_all_module(), target);
  }

  // repeated uint32 module_id_list = 2;
  if (this->module_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _module_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->module_id_list_, target);
  }

  // uint32 version = 3;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeRestoreDefaultsArrangementOp)
  return target;
}

size_t HomeRestoreDefaultsArrangementOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeRestoreDefaultsArrangementOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 module_id_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->module_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _module_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bool is_all_module = 1;
  if (this->is_all_module() != 0) {
    total_size += 1 + 1;
  }

  // uint32 version = 3;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeRestoreDefaultsArrangementOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeRestoreDefaultsArrangementOp)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeRestoreDefaultsArrangementOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeRestoreDefaultsArrangementOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeRestoreDefaultsArrangementOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeRestoreDefaultsArrangementOp)
    MergeFrom(*source);
  }
}

void HomeRestoreDefaultsArrangementOp::MergeFrom(const HomeRestoreDefaultsArrangementOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeRestoreDefaultsArrangementOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  module_id_list_.MergeFrom(from.module_id_list_);
  if (from.is_all_module() != 0) {
    set_is_all_module(from.is_all_module());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void HomeRestoreDefaultsArrangementOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeRestoreDefaultsArrangementOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeRestoreDefaultsArrangementOp::CopyFrom(const HomeRestoreDefaultsArrangementOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeRestoreDefaultsArrangementOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeRestoreDefaultsArrangementOp::IsInitialized() const {
  return true;
}

void HomeRestoreDefaultsArrangementOp::Swap(HomeRestoreDefaultsArrangementOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeRestoreDefaultsArrangementOp::InternalSwap(HomeRestoreDefaultsArrangementOp* other) {
  using std::swap;
  module_id_list_.InternalSwap(&other->module_id_list_);
  swap(is_all_module_, other->is_all_module_);
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeRestoreDefaultsArrangementOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeRestoreDefaultsArrangementOp

// bool is_all_module = 1;
void HomeRestoreDefaultsArrangementOp::clear_is_all_module() {
  is_all_module_ = false;
}
bool HomeRestoreDefaultsArrangementOp::is_all_module() const {
  // @@protoc_insertion_point(field_get:proto.HomeRestoreDefaultsArrangementOp.is_all_module)
  return is_all_module_;
}
void HomeRestoreDefaultsArrangementOp::set_is_all_module(bool value) {
  
  is_all_module_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeRestoreDefaultsArrangementOp.is_all_module)
}

// repeated uint32 module_id_list = 2;
int HomeRestoreDefaultsArrangementOp::module_id_list_size() const {
  return module_id_list_.size();
}
void HomeRestoreDefaultsArrangementOp::clear_module_id_list() {
  module_id_list_.Clear();
}
::google::protobuf::uint32 HomeRestoreDefaultsArrangementOp::module_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeRestoreDefaultsArrangementOp.module_id_list)
  return module_id_list_.Get(index);
}
void HomeRestoreDefaultsArrangementOp::set_module_id_list(int index, ::google::protobuf::uint32 value) {
  module_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.HomeRestoreDefaultsArrangementOp.module_id_list)
}
void HomeRestoreDefaultsArrangementOp::add_module_id_list(::google::protobuf::uint32 value) {
  module_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.HomeRestoreDefaultsArrangementOp.module_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
HomeRestoreDefaultsArrangementOp::module_id_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeRestoreDefaultsArrangementOp.module_id_list)
  return module_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
HomeRestoreDefaultsArrangementOp::mutable_module_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeRestoreDefaultsArrangementOp.module_id_list)
  return &module_id_list_;
}

// uint32 version = 3;
void HomeRestoreDefaultsArrangementOp::clear_version() {
  version_ = 0u;
}
::google::protobuf::uint32 HomeRestoreDefaultsArrangementOp::version() const {
  // @@protoc_insertion_point(field_get:proto.HomeRestoreDefaultsArrangementOp.version)
  return version_;
}
void HomeRestoreDefaultsArrangementOp::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeRestoreDefaultsArrangementOp.version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeRestoreDefaultsSceneArrangementOp::kModuleIdFieldNumber;
const int HomeRestoreDefaultsSceneArrangementOp::kSceneIdFieldNumber;
const int HomeRestoreDefaultsSceneArrangementOp::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeRestoreDefaultsSceneArrangementOp::HomeRestoreDefaultsSceneArrangementOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeRestoreDefaultsSceneArrangementOp)
}
HomeRestoreDefaultsSceneArrangementOp::HomeRestoreDefaultsSceneArrangementOp(const HomeRestoreDefaultsSceneArrangementOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&module_id_, &from.module_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&module_id_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:proto.HomeRestoreDefaultsSceneArrangementOp)
}

void HomeRestoreDefaultsSceneArrangementOp::SharedCtor() {
  ::memset(&module_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&module_id_)) + sizeof(version_));
  _cached_size_ = 0;
}

HomeRestoreDefaultsSceneArrangementOp::~HomeRestoreDefaultsSceneArrangementOp() {
  // @@protoc_insertion_point(destructor:proto.HomeRestoreDefaultsSceneArrangementOp)
  SharedDtor();
}

void HomeRestoreDefaultsSceneArrangementOp::SharedDtor() {
}

void HomeRestoreDefaultsSceneArrangementOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeRestoreDefaultsSceneArrangementOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeRestoreDefaultsSceneArrangementOp& HomeRestoreDefaultsSceneArrangementOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeRestoreDefaultsSceneArrangementOp* HomeRestoreDefaultsSceneArrangementOp::New(::google::protobuf::Arena* arena) const {
  HomeRestoreDefaultsSceneArrangementOp* n = new HomeRestoreDefaultsSceneArrangementOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeRestoreDefaultsSceneArrangementOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeRestoreDefaultsSceneArrangementOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&module_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&module_id_)) + sizeof(version_));
  _internal_metadata_.Clear();
}

bool HomeRestoreDefaultsSceneArrangementOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeRestoreDefaultsSceneArrangementOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 module_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &module_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeRestoreDefaultsSceneArrangementOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeRestoreDefaultsSceneArrangementOp)
  return false;
#undef DO_
}

void HomeRestoreDefaultsSceneArrangementOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeRestoreDefaultsSceneArrangementOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->module_id(), output);
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->scene_id(), output);
  }

  // uint32 version = 3;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeRestoreDefaultsSceneArrangementOp)
}

::google::protobuf::uint8* HomeRestoreDefaultsSceneArrangementOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeRestoreDefaultsSceneArrangementOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->module_id(), target);
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->scene_id(), target);
  }

  // uint32 version = 3;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeRestoreDefaultsSceneArrangementOp)
  return target;
}

size_t HomeRestoreDefaultsSceneArrangementOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeRestoreDefaultsSceneArrangementOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->module_id());
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 version = 3;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeRestoreDefaultsSceneArrangementOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeRestoreDefaultsSceneArrangementOp)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeRestoreDefaultsSceneArrangementOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeRestoreDefaultsSceneArrangementOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeRestoreDefaultsSceneArrangementOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeRestoreDefaultsSceneArrangementOp)
    MergeFrom(*source);
  }
}

void HomeRestoreDefaultsSceneArrangementOp::MergeFrom(const HomeRestoreDefaultsSceneArrangementOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeRestoreDefaultsSceneArrangementOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.module_id() != 0) {
    set_module_id(from.module_id());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void HomeRestoreDefaultsSceneArrangementOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeRestoreDefaultsSceneArrangementOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeRestoreDefaultsSceneArrangementOp::CopyFrom(const HomeRestoreDefaultsSceneArrangementOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeRestoreDefaultsSceneArrangementOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeRestoreDefaultsSceneArrangementOp::IsInitialized() const {
  return true;
}

void HomeRestoreDefaultsSceneArrangementOp::Swap(HomeRestoreDefaultsSceneArrangementOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeRestoreDefaultsSceneArrangementOp::InternalSwap(HomeRestoreDefaultsSceneArrangementOp* other) {
  using std::swap;
  swap(module_id_, other->module_id_);
  swap(scene_id_, other->scene_id_);
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeRestoreDefaultsSceneArrangementOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeRestoreDefaultsSceneArrangementOp

// uint32 module_id = 1;
void HomeRestoreDefaultsSceneArrangementOp::clear_module_id() {
  module_id_ = 0u;
}
::google::protobuf::uint32 HomeRestoreDefaultsSceneArrangementOp::module_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeRestoreDefaultsSceneArrangementOp.module_id)
  return module_id_;
}
void HomeRestoreDefaultsSceneArrangementOp::set_module_id(::google::protobuf::uint32 value) {
  
  module_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeRestoreDefaultsSceneArrangementOp.module_id)
}

// uint32 scene_id = 2;
void HomeRestoreDefaultsSceneArrangementOp::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 HomeRestoreDefaultsSceneArrangementOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeRestoreDefaultsSceneArrangementOp.scene_id)
  return scene_id_;
}
void HomeRestoreDefaultsSceneArrangementOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeRestoreDefaultsSceneArrangementOp.scene_id)
}

// uint32 version = 3;
void HomeRestoreDefaultsSceneArrangementOp::clear_version() {
  version_ = 0u;
}
::google::protobuf::uint32 HomeRestoreDefaultsSceneArrangementOp::version() const {
  // @@protoc_insertion_point(field_get:proto.HomeRestoreDefaultsSceneArrangementOp.version)
  return version_;
}
void HomeRestoreDefaultsSceneArrangementOp::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeRestoreDefaultsSceneArrangementOp.version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeOfflineMsgBin::kEnqueTimeFieldNumber;
const int HomeOfflineMsgBin::kTicketFieldNumber;
const int HomeOfflineMsgBin::kIndexFieldNumber;
const int HomeOfflineMsgBin::kTestOpFieldNumber;
const int HomeOfflineMsgBin::kRestoreDefaultsArrangementOpFieldNumber;
const int HomeOfflineMsgBin::kRestoreDefaultsSceneArrangementOpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeOfflineMsgBin::HomeOfflineMsgBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeOfflineMsgBin)
}
HomeOfflineMsgBin::HomeOfflineMsgBin(const HomeOfflineMsgBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ticket().size() > 0) {
    ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticket_);
  }
  ::memcpy(&enque_time_, &from.enque_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&enque_time_)) + sizeof(index_));
  clear_has_detail();
  switch (from.detail_case()) {
    case kTestOp: {
      mutable_test_op()->::proto::HomeTestOp::MergeFrom(from.test_op());
      break;
    }
    case kRestoreDefaultsArrangementOp: {
      mutable_restore_defaults_arrangement_op()->::proto::HomeRestoreDefaultsArrangementOp::MergeFrom(from.restore_defaults_arrangement_op());
      break;
    }
    case kRestoreDefaultsSceneArrangementOp: {
      mutable_restore_defaults_scene_arrangement_op()->::proto::HomeRestoreDefaultsSceneArrangementOp::MergeFrom(from.restore_defaults_scene_arrangement_op());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.HomeOfflineMsgBin)
}

void HomeOfflineMsgBin::SharedCtor() {
  ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&enque_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&enque_time_)) + sizeof(index_));
  clear_has_detail();
  _cached_size_ = 0;
}

HomeOfflineMsgBin::~HomeOfflineMsgBin() {
  // @@protoc_insertion_point(destructor:proto.HomeOfflineMsgBin)
  SharedDtor();
}

void HomeOfflineMsgBin::SharedDtor() {
  ticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_detail()) {
    clear_detail();
  }
}

void HomeOfflineMsgBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeOfflineMsgBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeOfflineMsgBin& HomeOfflineMsgBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeOfflineMsgBin* HomeOfflineMsgBin::New(::google::protobuf::Arena* arena) const {
  HomeOfflineMsgBin* n = new HomeOfflineMsgBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeOfflineMsgBin::clear_detail() {
// @@protoc_insertion_point(one_of_clear_start:proto.HomeOfflineMsgBin)
  switch (detail_case()) {
    case kTestOp: {
      delete detail_.test_op_;
      break;
    }
    case kRestoreDefaultsArrangementOp: {
      delete detail_.restore_defaults_arrangement_op_;
      break;
    }
    case kRestoreDefaultsSceneArrangementOp: {
      delete detail_.restore_defaults_scene_arrangement_op_;
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DETAIL_NOT_SET;
}


void HomeOfflineMsgBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeOfflineMsgBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&enque_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&enque_time_)) + sizeof(index_));
  clear_detail();
  _internal_metadata_.Clear();
}

bool HomeOfflineMsgBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeOfflineMsgBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 enque_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &enque_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ticket = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ticket()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ticket().data(), static_cast<int>(this->ticket().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.HomeOfflineMsgBin.ticket"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.HomeTestOp test_op = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_test_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.HomeRestoreDefaultsArrangementOp restore_defaults_arrangement_op = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 818 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_restore_defaults_arrangement_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.HomeRestoreDefaultsSceneArrangementOp restore_defaults_scene_arrangement_op = 103;
      case 103: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 826 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_restore_defaults_scene_arrangement_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeOfflineMsgBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeOfflineMsgBin)
  return false;
#undef DO_
}

void HomeOfflineMsgBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeOfflineMsgBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 enque_time = 1;
  if (this->enque_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->enque_time(), output);
  }

  // string ticket = 2;
  if (this->ticket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ticket().data(), static_cast<int>(this->ticket().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.HomeOfflineMsgBin.ticket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ticket(), output);
  }

  // uint32 index = 3;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->index(), output);
  }

  // .proto.HomeTestOp test_op = 101;
  if (has_test_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101, *detail_.test_op_, output);
  }

  // .proto.HomeRestoreDefaultsArrangementOp restore_defaults_arrangement_op = 102;
  if (has_restore_defaults_arrangement_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      102, *detail_.restore_defaults_arrangement_op_, output);
  }

  // .proto.HomeRestoreDefaultsSceneArrangementOp restore_defaults_scene_arrangement_op = 103;
  if (has_restore_defaults_scene_arrangement_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      103, *detail_.restore_defaults_scene_arrangement_op_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeOfflineMsgBin)
}

::google::protobuf::uint8* HomeOfflineMsgBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeOfflineMsgBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 enque_time = 1;
  if (this->enque_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->enque_time(), target);
  }

  // string ticket = 2;
  if (this->ticket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ticket().data(), static_cast<int>(this->ticket().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.HomeOfflineMsgBin.ticket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ticket(), target);
  }

  // uint32 index = 3;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->index(), target);
  }

  // .proto.HomeTestOp test_op = 101;
  if (has_test_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        101, *detail_.test_op_, deterministic, target);
  }

  // .proto.HomeRestoreDefaultsArrangementOp restore_defaults_arrangement_op = 102;
  if (has_restore_defaults_arrangement_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        102, *detail_.restore_defaults_arrangement_op_, deterministic, target);
  }

  // .proto.HomeRestoreDefaultsSceneArrangementOp restore_defaults_scene_arrangement_op = 103;
  if (has_restore_defaults_scene_arrangement_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        103, *detail_.restore_defaults_scene_arrangement_op_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeOfflineMsgBin)
  return target;
}

size_t HomeOfflineMsgBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeOfflineMsgBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ticket = 2;
  if (this->ticket().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ticket());
  }

  // fixed32 enque_time = 1;
  if (this->enque_time() != 0) {
    total_size += 1 + 4;
  }

  // uint32 index = 3;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  switch (detail_case()) {
    // .proto.HomeTestOp test_op = 101;
    case kTestOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.test_op_);
      break;
    }
    // .proto.HomeRestoreDefaultsArrangementOp restore_defaults_arrangement_op = 102;
    case kRestoreDefaultsArrangementOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.restore_defaults_arrangement_op_);
      break;
    }
    // .proto.HomeRestoreDefaultsSceneArrangementOp restore_defaults_scene_arrangement_op = 103;
    case kRestoreDefaultsSceneArrangementOp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.restore_defaults_scene_arrangement_op_);
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeOfflineMsgBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeOfflineMsgBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeOfflineMsgBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeOfflineMsgBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeOfflineMsgBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeOfflineMsgBin)
    MergeFrom(*source);
  }
}

void HomeOfflineMsgBin::MergeFrom(const HomeOfflineMsgBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeOfflineMsgBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ticket().size() > 0) {

    ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticket_);
  }
  if (from.enque_time() != 0) {
    set_enque_time(from.enque_time());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  switch (from.detail_case()) {
    case kTestOp: {
      mutable_test_op()->::proto::HomeTestOp::MergeFrom(from.test_op());
      break;
    }
    case kRestoreDefaultsArrangementOp: {
      mutable_restore_defaults_arrangement_op()->::proto::HomeRestoreDefaultsArrangementOp::MergeFrom(from.restore_defaults_arrangement_op());
      break;
    }
    case kRestoreDefaultsSceneArrangementOp: {
      mutable_restore_defaults_scene_arrangement_op()->::proto::HomeRestoreDefaultsSceneArrangementOp::MergeFrom(from.restore_defaults_scene_arrangement_op());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
}

void HomeOfflineMsgBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeOfflineMsgBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeOfflineMsgBin::CopyFrom(const HomeOfflineMsgBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeOfflineMsgBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeOfflineMsgBin::IsInitialized() const {
  return true;
}

void HomeOfflineMsgBin::Swap(HomeOfflineMsgBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeOfflineMsgBin::InternalSwap(HomeOfflineMsgBin* other) {
  using std::swap;
  ticket_.Swap(&other->ticket_);
  swap(enque_time_, other->enque_time_);
  swap(index_, other->index_);
  swap(detail_, other->detail_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeOfflineMsgBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeOfflineMsgBin

// fixed32 enque_time = 1;
void HomeOfflineMsgBin::clear_enque_time() {
  enque_time_ = 0u;
}
::google::protobuf::uint32 HomeOfflineMsgBin::enque_time() const {
  // @@protoc_insertion_point(field_get:proto.HomeOfflineMsgBin.enque_time)
  return enque_time_;
}
void HomeOfflineMsgBin::set_enque_time(::google::protobuf::uint32 value) {
  
  enque_time_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeOfflineMsgBin.enque_time)
}

// string ticket = 2;
void HomeOfflineMsgBin::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HomeOfflineMsgBin::ticket() const {
  // @@protoc_insertion_point(field_get:proto.HomeOfflineMsgBin.ticket)
  return ticket_.GetNoArena();
}
void HomeOfflineMsgBin::set_ticket(const ::std::string& value) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.HomeOfflineMsgBin.ticket)
}
#if LANG_CXX11
void HomeOfflineMsgBin::set_ticket(::std::string&& value) {
  
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.HomeOfflineMsgBin.ticket)
}
#endif
void HomeOfflineMsgBin::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.HomeOfflineMsgBin.ticket)
}
void HomeOfflineMsgBin::set_ticket(const char* value, size_t size) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.HomeOfflineMsgBin.ticket)
}
::std::string* HomeOfflineMsgBin::mutable_ticket() {
  
  // @@protoc_insertion_point(field_mutable:proto.HomeOfflineMsgBin.ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HomeOfflineMsgBin::release_ticket() {
  // @@protoc_insertion_point(field_release:proto.HomeOfflineMsgBin.ticket)
  
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HomeOfflineMsgBin::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    
  } else {
    
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:proto.HomeOfflineMsgBin.ticket)
}

// uint32 index = 3;
void HomeOfflineMsgBin::clear_index() {
  index_ = 0u;
}
::google::protobuf::uint32 HomeOfflineMsgBin::index() const {
  // @@protoc_insertion_point(field_get:proto.HomeOfflineMsgBin.index)
  return index_;
}
void HomeOfflineMsgBin::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeOfflineMsgBin.index)
}

// .proto.HomeTestOp test_op = 101;
bool HomeOfflineMsgBin::has_test_op() const {
  return detail_case() == kTestOp;
}
void HomeOfflineMsgBin::set_has_test_op() {
  _oneof_case_[0] = kTestOp;
}
void HomeOfflineMsgBin::clear_test_op() {
  if (has_test_op()) {
    delete detail_.test_op_;
    clear_has_detail();
  }
}
 const ::proto::HomeTestOp& HomeOfflineMsgBin::test_op() const {
  // @@protoc_insertion_point(field_get:proto.HomeOfflineMsgBin.test_op)
  return has_test_op()
      ? *detail_.test_op_
      : ::proto::HomeTestOp::default_instance();
}
::proto::HomeTestOp* HomeOfflineMsgBin::mutable_test_op() {
  if (!has_test_op()) {
    clear_detail();
    set_has_test_op();
    detail_.test_op_ = new ::proto::HomeTestOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeOfflineMsgBin.test_op)
  return detail_.test_op_;
}
::proto::HomeTestOp* HomeOfflineMsgBin::release_test_op() {
  // @@protoc_insertion_point(field_release:proto.HomeOfflineMsgBin.test_op)
  if (has_test_op()) {
    clear_has_detail();
    ::proto::HomeTestOp* temp = detail_.test_op_;
    detail_.test_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void HomeOfflineMsgBin::set_allocated_test_op(::proto::HomeTestOp* test_op) {
  clear_detail();
  if (test_op) {
    set_has_test_op();
    detail_.test_op_ = test_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeOfflineMsgBin.test_op)
}

// .proto.HomeRestoreDefaultsArrangementOp restore_defaults_arrangement_op = 102;
bool HomeOfflineMsgBin::has_restore_defaults_arrangement_op() const {
  return detail_case() == kRestoreDefaultsArrangementOp;
}
void HomeOfflineMsgBin::set_has_restore_defaults_arrangement_op() {
  _oneof_case_[0] = kRestoreDefaultsArrangementOp;
}
void HomeOfflineMsgBin::clear_restore_defaults_arrangement_op() {
  if (has_restore_defaults_arrangement_op()) {
    delete detail_.restore_defaults_arrangement_op_;
    clear_has_detail();
  }
}
 const ::proto::HomeRestoreDefaultsArrangementOp& HomeOfflineMsgBin::restore_defaults_arrangement_op() const {
  // @@protoc_insertion_point(field_get:proto.HomeOfflineMsgBin.restore_defaults_arrangement_op)
  return has_restore_defaults_arrangement_op()
      ? *detail_.restore_defaults_arrangement_op_
      : ::proto::HomeRestoreDefaultsArrangementOp::default_instance();
}
::proto::HomeRestoreDefaultsArrangementOp* HomeOfflineMsgBin::mutable_restore_defaults_arrangement_op() {
  if (!has_restore_defaults_arrangement_op()) {
    clear_detail();
    set_has_restore_defaults_arrangement_op();
    detail_.restore_defaults_arrangement_op_ = new ::proto::HomeRestoreDefaultsArrangementOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeOfflineMsgBin.restore_defaults_arrangement_op)
  return detail_.restore_defaults_arrangement_op_;
}
::proto::HomeRestoreDefaultsArrangementOp* HomeOfflineMsgBin::release_restore_defaults_arrangement_op() {
  // @@protoc_insertion_point(field_release:proto.HomeOfflineMsgBin.restore_defaults_arrangement_op)
  if (has_restore_defaults_arrangement_op()) {
    clear_has_detail();
    ::proto::HomeRestoreDefaultsArrangementOp* temp = detail_.restore_defaults_arrangement_op_;
    detail_.restore_defaults_arrangement_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void HomeOfflineMsgBin::set_allocated_restore_defaults_arrangement_op(::proto::HomeRestoreDefaultsArrangementOp* restore_defaults_arrangement_op) {
  clear_detail();
  if (restore_defaults_arrangement_op) {
    set_has_restore_defaults_arrangement_op();
    detail_.restore_defaults_arrangement_op_ = restore_defaults_arrangement_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeOfflineMsgBin.restore_defaults_arrangement_op)
}

// .proto.HomeRestoreDefaultsSceneArrangementOp restore_defaults_scene_arrangement_op = 103;
bool HomeOfflineMsgBin::has_restore_defaults_scene_arrangement_op() const {
  return detail_case() == kRestoreDefaultsSceneArrangementOp;
}
void HomeOfflineMsgBin::set_has_restore_defaults_scene_arrangement_op() {
  _oneof_case_[0] = kRestoreDefaultsSceneArrangementOp;
}
void HomeOfflineMsgBin::clear_restore_defaults_scene_arrangement_op() {
  if (has_restore_defaults_scene_arrangement_op()) {
    delete detail_.restore_defaults_scene_arrangement_op_;
    clear_has_detail();
  }
}
 const ::proto::HomeRestoreDefaultsSceneArrangementOp& HomeOfflineMsgBin::restore_defaults_scene_arrangement_op() const {
  // @@protoc_insertion_point(field_get:proto.HomeOfflineMsgBin.restore_defaults_scene_arrangement_op)
  return has_restore_defaults_scene_arrangement_op()
      ? *detail_.restore_defaults_scene_arrangement_op_
      : ::proto::HomeRestoreDefaultsSceneArrangementOp::default_instance();
}
::proto::HomeRestoreDefaultsSceneArrangementOp* HomeOfflineMsgBin::mutable_restore_defaults_scene_arrangement_op() {
  if (!has_restore_defaults_scene_arrangement_op()) {
    clear_detail();
    set_has_restore_defaults_scene_arrangement_op();
    detail_.restore_defaults_scene_arrangement_op_ = new ::proto::HomeRestoreDefaultsSceneArrangementOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeOfflineMsgBin.restore_defaults_scene_arrangement_op)
  return detail_.restore_defaults_scene_arrangement_op_;
}
::proto::HomeRestoreDefaultsSceneArrangementOp* HomeOfflineMsgBin::release_restore_defaults_scene_arrangement_op() {
  // @@protoc_insertion_point(field_release:proto.HomeOfflineMsgBin.restore_defaults_scene_arrangement_op)
  if (has_restore_defaults_scene_arrangement_op()) {
    clear_has_detail();
    ::proto::HomeRestoreDefaultsSceneArrangementOp* temp = detail_.restore_defaults_scene_arrangement_op_;
    detail_.restore_defaults_scene_arrangement_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void HomeOfflineMsgBin::set_allocated_restore_defaults_scene_arrangement_op(::proto::HomeRestoreDefaultsSceneArrangementOp* restore_defaults_scene_arrangement_op) {
  clear_detail();
  if (restore_defaults_scene_arrangement_op) {
    set_has_restore_defaults_scene_arrangement_op();
    detail_.restore_defaults_scene_arrangement_op_ = restore_defaults_scene_arrangement_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeOfflineMsgBin.restore_defaults_scene_arrangement_op)
}

bool HomeOfflineMsgBin::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
void HomeOfflineMsgBin::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
HomeOfflineMsgBin::DetailCase HomeOfflineMsgBin::detail_case() const {
  return HomeOfflineMsgBin::DetailCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupVariableBin::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupVariableBin::GroupVariableBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GroupVariableBin)
}
GroupVariableBin::GroupVariableBin(const GroupVariableBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:proto.GroupVariableBin)
}

void GroupVariableBin::SharedCtor() {
  value_ = 0;
  _cached_size_ = 0;
}

GroupVariableBin::~GroupVariableBin() {
  // @@protoc_insertion_point(destructor:proto.GroupVariableBin)
  SharedDtor();
}

void GroupVariableBin::SharedDtor() {
}

void GroupVariableBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroupVariableBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GroupVariableBin& GroupVariableBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

GroupVariableBin* GroupVariableBin::New(::google::protobuf::Arena* arena) const {
  GroupVariableBin* n = new GroupVariableBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GroupVariableBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GroupVariableBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

bool GroupVariableBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GroupVariableBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GroupVariableBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GroupVariableBin)
  return false;
#undef DO_
}

void GroupVariableBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GroupVariableBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GroupVariableBin)
}

::google::protobuf::uint8* GroupVariableBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GroupVariableBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GroupVariableBin)
  return target;
}

size_t GroupVariableBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GroupVariableBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroupVariableBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GroupVariableBin)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupVariableBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupVariableBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GroupVariableBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GroupVariableBin)
    MergeFrom(*source);
  }
}

void GroupVariableBin::MergeFrom(const GroupVariableBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GroupVariableBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void GroupVariableBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GroupVariableBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupVariableBin::CopyFrom(const GroupVariableBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GroupVariableBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupVariableBin::IsInitialized() const {
  return true;
}

void GroupVariableBin::Swap(GroupVariableBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupVariableBin::InternalSwap(GroupVariableBin* other) {
  using std::swap;
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GroupVariableBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GroupVariableBin

// int32 value = 2;
void GroupVariableBin::clear_value() {
  value_ = 0;
}
::google::protobuf::int32 GroupVariableBin::value() const {
  // @@protoc_insertion_point(field_get:proto.GroupVariableBin.value)
  return value_;
}
void GroupVariableBin::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupVariableBin.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupVariableConfigIdBin::kConfigIdFieldNumber;
const int GroupVariableConfigIdBin::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupVariableConfigIdBin::GroupVariableConfigIdBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GroupVariableConfigIdBin)
}
GroupVariableConfigIdBin::GroupVariableConfigIdBin(const GroupVariableConfigIdBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&config_id_, &from.config_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&config_id_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:proto.GroupVariableConfigIdBin)
}

void GroupVariableConfigIdBin::SharedCtor() {
  ::memset(&config_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&config_id_)) + sizeof(value_));
  _cached_size_ = 0;
}

GroupVariableConfigIdBin::~GroupVariableConfigIdBin() {
  // @@protoc_insertion_point(destructor:proto.GroupVariableConfigIdBin)
  SharedDtor();
}

void GroupVariableConfigIdBin::SharedDtor() {
}

void GroupVariableConfigIdBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroupVariableConfigIdBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GroupVariableConfigIdBin& GroupVariableConfigIdBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

GroupVariableConfigIdBin* GroupVariableConfigIdBin::New(::google::protobuf::Arena* arena) const {
  GroupVariableConfigIdBin* n = new GroupVariableConfigIdBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GroupVariableConfigIdBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GroupVariableConfigIdBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&config_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&config_id_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

bool GroupVariableConfigIdBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GroupVariableConfigIdBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 config_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GroupVariableConfigIdBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GroupVariableConfigIdBin)
  return false;
#undef DO_
}

void GroupVariableConfigIdBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GroupVariableConfigIdBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 config_id = 1;
  if (this->config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->config_id(), output);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GroupVariableConfigIdBin)
}

::google::protobuf::uint8* GroupVariableConfigIdBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GroupVariableConfigIdBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 config_id = 1;
  if (this->config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->config_id(), target);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GroupVariableConfigIdBin)
  return target;
}

size_t GroupVariableConfigIdBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GroupVariableConfigIdBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 config_id = 1;
  if (this->config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_id());
  }

  // int32 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroupVariableConfigIdBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GroupVariableConfigIdBin)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupVariableConfigIdBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupVariableConfigIdBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GroupVariableConfigIdBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GroupVariableConfigIdBin)
    MergeFrom(*source);
  }
}

void GroupVariableConfigIdBin::MergeFrom(const GroupVariableConfigIdBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GroupVariableConfigIdBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.config_id() != 0) {
    set_config_id(from.config_id());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void GroupVariableConfigIdBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GroupVariableConfigIdBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupVariableConfigIdBin::CopyFrom(const GroupVariableConfigIdBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GroupVariableConfigIdBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupVariableConfigIdBin::IsInitialized() const {
  return true;
}

void GroupVariableConfigIdBin::Swap(GroupVariableConfigIdBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupVariableConfigIdBin::InternalSwap(GroupVariableConfigIdBin* other) {
  using std::swap;
  swap(config_id_, other->config_id_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GroupVariableConfigIdBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GroupVariableConfigIdBin

// uint32 config_id = 1;
void GroupVariableConfigIdBin::clear_config_id() {
  config_id_ = 0u;
}
::google::protobuf::uint32 GroupVariableConfigIdBin::config_id() const {
  // @@protoc_insertion_point(field_get:proto.GroupVariableConfigIdBin.config_id)
  return config_id_;
}
void GroupVariableConfigIdBin::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupVariableConfigIdBin.config_id)
}

// int32 value = 2;
void GroupVariableConfigIdBin::clear_value() {
  value_ = 0;
}
::google::protobuf::int32 GroupVariableConfigIdBin::value() const {
  // @@protoc_insertion_point(field_get:proto.GroupVariableConfigIdBin.value)
  return value_;
}
void GroupVariableConfigIdBin::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupVariableConfigIdBin.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

GroupProductBin::GroupProductBin_GadgetOneOffMapEntry::GroupProductBin_GadgetOneOffMapEntry() {}
GroupProductBin::GroupProductBin_GadgetOneOffMapEntry::GroupProductBin_GadgetOneOffMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata GroupProductBin::GroupProductBin_GadgetOneOffMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[102];
}
void GroupProductBin::GroupProductBin_GadgetOneOffMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void GroupProductBin::GroupProductBin_GadgetOneOffMapEntry::MergeFrom(const GroupProductBin_GadgetOneOffMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

GroupProductBin::GroupProductBin_MonsterOneOffMapEntry::GroupProductBin_MonsterOneOffMapEntry() {}
GroupProductBin::GroupProductBin_MonsterOneOffMapEntry::GroupProductBin_MonsterOneOffMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata GroupProductBin::GroupProductBin_MonsterOneOffMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[103];
}
void GroupProductBin::GroupProductBin_MonsterOneOffMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void GroupProductBin::GroupProductBin_MonsterOneOffMapEntry::MergeFrom(const GroupProductBin_MonsterOneOffMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupProductBin::kGadgetOneOffMapFieldNumber;
const int GroupProductBin::kMonsterOneOffMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupProductBin::GroupProductBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GroupProductBin)
}
GroupProductBin::GroupProductBin(const GroupProductBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gadget_one_off_map_.MergeFrom(from.gadget_one_off_map_);
  monster_one_off_map_.MergeFrom(from.monster_one_off_map_);
  // @@protoc_insertion_point(copy_constructor:proto.GroupProductBin)
}

void GroupProductBin::SharedCtor() {
  _cached_size_ = 0;
}

GroupProductBin::~GroupProductBin() {
  // @@protoc_insertion_point(destructor:proto.GroupProductBin)
  SharedDtor();
}

void GroupProductBin::SharedDtor() {
}

void GroupProductBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroupProductBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GroupProductBin& GroupProductBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

GroupProductBin* GroupProductBin::New(::google::protobuf::Arena* arena) const {
  GroupProductBin* n = new GroupProductBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GroupProductBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GroupProductBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gadget_one_off_map_.Clear();
  monster_one_off_map_.Clear();
  _internal_metadata_.Clear();
}

bool GroupProductBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GroupProductBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, uint32> gadget_one_off_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          GroupProductBin_GadgetOneOffMapEntry::Parser< ::google::protobuf::internal::MapField<
              GroupProductBin_GadgetOneOffMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&gadget_one_off_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> monster_one_off_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          GroupProductBin_MonsterOneOffMapEntry::Parser< ::google::protobuf::internal::MapField<
              GroupProductBin_MonsterOneOffMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&monster_one_off_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GroupProductBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GroupProductBin)
  return false;
#undef DO_
}

void GroupProductBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GroupProductBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> gadget_one_off_map = 1;
  if (!this->gadget_one_off_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->gadget_one_off_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->gadget_one_off_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->gadget_one_off_map().begin();
          it != this->gadget_one_off_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GroupProductBin_GadgetOneOffMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(gadget_one_off_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<GroupProductBin_GadgetOneOffMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->gadget_one_off_map().begin();
          it != this->gadget_one_off_map().end(); ++it) {
        entry.reset(gadget_one_off_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  // map<uint32, uint32> monster_one_off_map = 2;
  if (!this->monster_one_off_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->monster_one_off_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->monster_one_off_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->monster_one_off_map().begin();
          it != this->monster_one_off_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GroupProductBin_MonsterOneOffMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(monster_one_off_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<GroupProductBin_MonsterOneOffMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->monster_one_off_map().begin();
          it != this->monster_one_off_map().end(); ++it) {
        entry.reset(monster_one_off_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GroupProductBin)
}

::google::protobuf::uint8* GroupProductBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GroupProductBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> gadget_one_off_map = 1;
  if (!this->gadget_one_off_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->gadget_one_off_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->gadget_one_off_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->gadget_one_off_map().begin();
          it != this->gadget_one_off_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GroupProductBin_GadgetOneOffMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(gadget_one_off_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<GroupProductBin_GadgetOneOffMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->gadget_one_off_map().begin();
          it != this->gadget_one_off_map().end(); ++it) {
        entry.reset(gadget_one_off_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  // map<uint32, uint32> monster_one_off_map = 2;
  if (!this->monster_one_off_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->monster_one_off_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->monster_one_off_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->monster_one_off_map().begin();
          it != this->monster_one_off_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GroupProductBin_MonsterOneOffMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(monster_one_off_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<GroupProductBin_MonsterOneOffMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->monster_one_off_map().begin();
          it != this->monster_one_off_map().end(); ++it) {
        entry.reset(monster_one_off_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GroupProductBin)
  return target;
}

size_t GroupProductBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GroupProductBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> gadget_one_off_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->gadget_one_off_map_size());
  {
    ::google::protobuf::scoped_ptr<GroupProductBin_GadgetOneOffMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->gadget_one_off_map().begin();
        it != this->gadget_one_off_map().end(); ++it) {
      entry.reset(gadget_one_off_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<uint32, uint32> monster_one_off_map = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->monster_one_off_map_size());
  {
    ::google::protobuf::scoped_ptr<GroupProductBin_MonsterOneOffMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->monster_one_off_map().begin();
        it != this->monster_one_off_map().end(); ++it) {
      entry.reset(monster_one_off_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroupProductBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GroupProductBin)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupProductBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupProductBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GroupProductBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GroupProductBin)
    MergeFrom(*source);
  }
}

void GroupProductBin::MergeFrom(const GroupProductBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GroupProductBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gadget_one_off_map_.MergeFrom(from.gadget_one_off_map_);
  monster_one_off_map_.MergeFrom(from.monster_one_off_map_);
}

void GroupProductBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GroupProductBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupProductBin::CopyFrom(const GroupProductBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GroupProductBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupProductBin::IsInitialized() const {
  return true;
}

void GroupProductBin::Swap(GroupProductBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupProductBin::InternalSwap(GroupProductBin* other) {
  using std::swap;
  gadget_one_off_map_.Swap(&other->gadget_one_off_map_);
  monster_one_off_map_.Swap(&other->monster_one_off_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GroupProductBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GroupProductBin

// map<uint32, uint32> gadget_one_off_map = 1;
int GroupProductBin::gadget_one_off_map_size() const {
  return gadget_one_off_map_.size();
}
void GroupProductBin::clear_gadget_one_off_map() {
  gadget_one_off_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
GroupProductBin::gadget_one_off_map() const {
  // @@protoc_insertion_point(field_map:proto.GroupProductBin.gadget_one_off_map)
  return gadget_one_off_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
GroupProductBin::mutable_gadget_one_off_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GroupProductBin.gadget_one_off_map)
  return gadget_one_off_map_.MutableMap();
}

// map<uint32, uint32> monster_one_off_map = 2;
int GroupProductBin::monster_one_off_map_size() const {
  return monster_one_off_map_.size();
}
void GroupProductBin::clear_monster_one_off_map() {
  monster_one_off_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
GroupProductBin::monster_one_off_map() const {
  // @@protoc_insertion_point(field_map:proto.GroupProductBin.monster_one_off_map)
  return monster_one_off_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
GroupProductBin::mutable_monster_one_off_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GroupProductBin.monster_one_off_map)
  return monster_one_off_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InteractGadget::kGroupIdFieldNumber;
const int InteractGadget::kConfigIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InteractGadget::InteractGadget()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.InteractGadget)
}
InteractGadget::InteractGadget(const InteractGadget& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&config_id_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(config_id_));
  // @@protoc_insertion_point(copy_constructor:proto.InteractGadget)
}

void InteractGadget::SharedCtor() {
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(config_id_));
  _cached_size_ = 0;
}

InteractGadget::~InteractGadget() {
  // @@protoc_insertion_point(destructor:proto.InteractGadget)
  SharedDtor();
}

void InteractGadget::SharedDtor() {
}

void InteractGadget::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InteractGadget::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InteractGadget& InteractGadget::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

InteractGadget* InteractGadget::New(::google::protobuf::Arena* arena) const {
  InteractGadget* n = new InteractGadget;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InteractGadget::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.InteractGadget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(config_id_));
  _internal_metadata_.Clear();
}

bool InteractGadget::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.InteractGadget)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 config_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.InteractGadget)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.InteractGadget)
  return false;
#undef DO_
}

void InteractGadget::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.InteractGadget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->group_id(), output);
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->config_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.InteractGadget)
}

::google::protobuf::uint8* InteractGadget::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.InteractGadget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->group_id(), target);
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->config_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.InteractGadget)
  return target;
}

size_t InteractGadget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.InteractGadget)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InteractGadget::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.InteractGadget)
  GOOGLE_DCHECK_NE(&from, this);
  const InteractGadget* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InteractGadget>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.InteractGadget)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.InteractGadget)
    MergeFrom(*source);
  }
}

void InteractGadget::MergeFrom(const InteractGadget& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.InteractGadget)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.config_id() != 0) {
    set_config_id(from.config_id());
  }
}

void InteractGadget::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.InteractGadget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InteractGadget::CopyFrom(const InteractGadget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.InteractGadget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InteractGadget::IsInitialized() const {
  return true;
}

void InteractGadget::Swap(InteractGadget* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InteractGadget::InternalSwap(InteractGadget* other) {
  using std::swap;
  swap(group_id_, other->group_id_);
  swap(config_id_, other->config_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InteractGadget::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InteractGadget

// uint32 group_id = 1;
void InteractGadget::clear_group_id() {
  group_id_ = 0u;
}
::google::protobuf::uint32 InteractGadget::group_id() const {
  // @@protoc_insertion_point(field_get:proto.InteractGadget.group_id)
  return group_id_;
}
void InteractGadget::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.InteractGadget.group_id)
}

// uint32 config_id = 2;
void InteractGadget::clear_config_id() {
  config_id_ = 0u;
}
::google::protobuf::uint32 InteractGadget::config_id() const {
  // @@protoc_insertion_point(field_get:proto.InteractGadget.config_id)
  return config_id_;
}
void InteractGadget::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.InteractGadget.config_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AreaBin::kExploreNumFieldNumber;
const int AreaBin::kExplorePointFieldNumber;
const int AreaBin::kUnlockPointListFieldNumber;
const int AreaBin::kInteractGadgetListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AreaBin::AreaBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AreaBin)
}
AreaBin::AreaBin(const AreaBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      unlock_point_list_(from.unlock_point_list_),
      interact_gadget_list_(from.interact_gadget_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&explore_num_, &from.explore_num_,
    static_cast<size_t>(reinterpret_cast<char*>(&explore_point_) -
    reinterpret_cast<char*>(&explore_num_)) + sizeof(explore_point_));
  // @@protoc_insertion_point(copy_constructor:proto.AreaBin)
}

void AreaBin::SharedCtor() {
  ::memset(&explore_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&explore_point_) -
      reinterpret_cast<char*>(&explore_num_)) + sizeof(explore_point_));
  _cached_size_ = 0;
}

AreaBin::~AreaBin() {
  // @@protoc_insertion_point(destructor:proto.AreaBin)
  SharedDtor();
}

void AreaBin::SharedDtor() {
}

void AreaBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AreaBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AreaBin& AreaBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

AreaBin* AreaBin::New(::google::protobuf::Arena* arena) const {
  AreaBin* n = new AreaBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AreaBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AreaBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unlock_point_list_.Clear();
  interact_gadget_list_.Clear();
  ::memset(&explore_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&explore_point_) -
      reinterpret_cast<char*>(&explore_num_)) + sizeof(explore_point_));
  _internal_metadata_.Clear();
}

bool AreaBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AreaBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 explore_num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &explore_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 explore_point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &explore_point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 unlock_point_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_unlock_point_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_unlock_point_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.InteractGadget interact_gadget_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_interact_gadget_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AreaBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AreaBin)
  return false;
#undef DO_
}

void AreaBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AreaBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 explore_num = 1;
  if (this->explore_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->explore_num(), output);
  }

  // uint32 explore_point = 2;
  if (this->explore_point() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->explore_point(), output);
  }

  // repeated uint32 unlock_point_list = 3;
  if (this->unlock_point_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _unlock_point_list_cached_byte_size_));
  }
  for (int i = 0, n = this->unlock_point_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->unlock_point_list(i), output);
  }

  // repeated .proto.InteractGadget interact_gadget_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interact_gadget_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->interact_gadget_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AreaBin)
}

::google::protobuf::uint8* AreaBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AreaBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 explore_num = 1;
  if (this->explore_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->explore_num(), target);
  }

  // uint32 explore_point = 2;
  if (this->explore_point() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->explore_point(), target);
  }

  // repeated uint32 unlock_point_list = 3;
  if (this->unlock_point_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _unlock_point_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->unlock_point_list_, target);
  }

  // repeated .proto.InteractGadget interact_gadget_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interact_gadget_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->interact_gadget_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AreaBin)
  return target;
}

size_t AreaBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AreaBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 unlock_point_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->unlock_point_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unlock_point_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.InteractGadget interact_gadget_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->interact_gadget_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->interact_gadget_list(static_cast<int>(i)));
    }
  }

  // uint32 explore_num = 1;
  if (this->explore_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->explore_num());
  }

  // uint32 explore_point = 2;
  if (this->explore_point() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->explore_point());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AreaBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AreaBin)
  GOOGLE_DCHECK_NE(&from, this);
  const AreaBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AreaBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AreaBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AreaBin)
    MergeFrom(*source);
  }
}

void AreaBin::MergeFrom(const AreaBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AreaBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  unlock_point_list_.MergeFrom(from.unlock_point_list_);
  interact_gadget_list_.MergeFrom(from.interact_gadget_list_);
  if (from.explore_num() != 0) {
    set_explore_num(from.explore_num());
  }
  if (from.explore_point() != 0) {
    set_explore_point(from.explore_point());
  }
}

void AreaBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AreaBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AreaBin::CopyFrom(const AreaBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AreaBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AreaBin::IsInitialized() const {
  return true;
}

void AreaBin::Swap(AreaBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AreaBin::InternalSwap(AreaBin* other) {
  using std::swap;
  unlock_point_list_.InternalSwap(&other->unlock_point_list_);
  interact_gadget_list_.InternalSwap(&other->interact_gadget_list_);
  swap(explore_num_, other->explore_num_);
  swap(explore_point_, other->explore_point_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AreaBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AreaBin

// uint32 explore_num = 1;
void AreaBin::clear_explore_num() {
  explore_num_ = 0u;
}
::google::protobuf::uint32 AreaBin::explore_num() const {
  // @@protoc_insertion_point(field_get:proto.AreaBin.explore_num)
  return explore_num_;
}
void AreaBin::set_explore_num(::google::protobuf::uint32 value) {
  
  explore_num_ = value;
  // @@protoc_insertion_point(field_set:proto.AreaBin.explore_num)
}

// uint32 explore_point = 2;
void AreaBin::clear_explore_point() {
  explore_point_ = 0u;
}
::google::protobuf::uint32 AreaBin::explore_point() const {
  // @@protoc_insertion_point(field_get:proto.AreaBin.explore_point)
  return explore_point_;
}
void AreaBin::set_explore_point(::google::protobuf::uint32 value) {
  
  explore_point_ = value;
  // @@protoc_insertion_point(field_set:proto.AreaBin.explore_point)
}

// repeated uint32 unlock_point_list = 3;
int AreaBin::unlock_point_list_size() const {
  return unlock_point_list_.size();
}
void AreaBin::clear_unlock_point_list() {
  unlock_point_list_.Clear();
}
::google::protobuf::uint32 AreaBin::unlock_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AreaBin.unlock_point_list)
  return unlock_point_list_.Get(index);
}
void AreaBin::set_unlock_point_list(int index, ::google::protobuf::uint32 value) {
  unlock_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AreaBin.unlock_point_list)
}
void AreaBin::add_unlock_point_list(::google::protobuf::uint32 value) {
  unlock_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AreaBin.unlock_point_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AreaBin::unlock_point_list() const {
  // @@protoc_insertion_point(field_list:proto.AreaBin.unlock_point_list)
  return unlock_point_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AreaBin::mutable_unlock_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AreaBin.unlock_point_list)
  return &unlock_point_list_;
}

// repeated .proto.InteractGadget interact_gadget_list = 4;
int AreaBin::interact_gadget_list_size() const {
  return interact_gadget_list_.size();
}
void AreaBin::clear_interact_gadget_list() {
  interact_gadget_list_.Clear();
}
const ::proto::InteractGadget& AreaBin::interact_gadget_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AreaBin.interact_gadget_list)
  return interact_gadget_list_.Get(index);
}
::proto::InteractGadget* AreaBin::mutable_interact_gadget_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AreaBin.interact_gadget_list)
  return interact_gadget_list_.Mutable(index);
}
::proto::InteractGadget* AreaBin::add_interact_gadget_list() {
  // @@protoc_insertion_point(field_add:proto.AreaBin.interact_gadget_list)
  return interact_gadget_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::InteractGadget >*
AreaBin::mutable_interact_gadget_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AreaBin.interact_gadget_list)
  return &interact_gadget_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::InteractGadget >&
AreaBin::interact_gadget_list() const {
  // @@protoc_insertion_point(field_list:proto.AreaBin.interact_gadget_list)
  return interact_gadget_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CityBin::kLevelFieldNumber;
const int CityBin::kCrystalNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CityBin::CityBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CityBin)
}
CityBin::CityBin(const CityBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&crystal_num_) -
    reinterpret_cast<char*>(&level_)) + sizeof(crystal_num_));
  // @@protoc_insertion_point(copy_constructor:proto.CityBin)
}

void CityBin::SharedCtor() {
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&crystal_num_) -
      reinterpret_cast<char*>(&level_)) + sizeof(crystal_num_));
  _cached_size_ = 0;
}

CityBin::~CityBin() {
  // @@protoc_insertion_point(destructor:proto.CityBin)
  SharedDtor();
}

void CityBin::SharedDtor() {
}

void CityBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CityBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CityBin& CityBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

CityBin* CityBin::New(::google::protobuf::Arena* arena) const {
  CityBin* n = new CityBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CityBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CityBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&crystal_num_) -
      reinterpret_cast<char*>(&level_)) + sizeof(crystal_num_));
  _internal_metadata_.Clear();
}

bool CityBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CityBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 crystal_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &crystal_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CityBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CityBin)
  return false;
#undef DO_
}

void CityBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CityBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level = 1;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // uint32 crystal_num = 2;
  if (this->crystal_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->crystal_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CityBin)
}

::google::protobuf::uint8* CityBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CityBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level = 1;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // uint32 crystal_num = 2;
  if (this->crystal_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->crystal_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CityBin)
  return target;
}

size_t CityBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CityBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 crystal_num = 2;
  if (this->crystal_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->crystal_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CityBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CityBin)
  GOOGLE_DCHECK_NE(&from, this);
  const CityBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CityBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CityBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CityBin)
    MergeFrom(*source);
  }
}

void CityBin::MergeFrom(const CityBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CityBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.crystal_num() != 0) {
    set_crystal_num(from.crystal_num());
  }
}

void CityBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CityBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CityBin::CopyFrom(const CityBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CityBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CityBin::IsInitialized() const {
  return true;
}

void CityBin::Swap(CityBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CityBin::InternalSwap(CityBin* other) {
  using std::swap;
  swap(level_, other->level_);
  swap(crystal_num_, other->crystal_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CityBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CityBin

// uint32 level = 1;
void CityBin::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 CityBin::level() const {
  // @@protoc_insertion_point(field_get:proto.CityBin.level)
  return level_;
}
void CityBin::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.CityBin.level)
}

// uint32 crystal_num = 2;
void CityBin::clear_crystal_num() {
  crystal_num_ = 0u;
}
::google::protobuf::uint32 CityBin::crystal_num() const {
  // @@protoc_insertion_point(field_get:proto.CityBin.crystal_num)
  return crystal_num_;
}
void CityBin::set_crystal_num(::google::protobuf::uint32 value) {
  
  crystal_num_ = value;
  // @@protoc_insertion_point(field_set:proto.CityBin.crystal_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScenePlayerLocationBin::kCurPosFieldNumber;
const int ScenePlayerLocationBin::kCurRotFieldNumber;
const int ScenePlayerLocationBin::kLastValidPosFieldNumber;
const int ScenePlayerLocationBin::kLastValidRotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScenePlayerLocationBin::ScenePlayerLocationBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ScenePlayerLocationBin)
}
ScenePlayerLocationBin::ScenePlayerLocationBin(const ScenePlayerLocationBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cur_pos()) {
    cur_pos_ = new ::proto::VectorBin(*from.cur_pos_);
  } else {
    cur_pos_ = NULL;
  }
  if (from.has_cur_rot()) {
    cur_rot_ = new ::proto::VectorBin(*from.cur_rot_);
  } else {
    cur_rot_ = NULL;
  }
  if (from.has_last_valid_pos()) {
    last_valid_pos_ = new ::proto::VectorBin(*from.last_valid_pos_);
  } else {
    last_valid_pos_ = NULL;
  }
  if (from.has_last_valid_rot()) {
    last_valid_rot_ = new ::proto::VectorBin(*from.last_valid_rot_);
  } else {
    last_valid_rot_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.ScenePlayerLocationBin)
}

void ScenePlayerLocationBin::SharedCtor() {
  ::memset(&cur_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_valid_rot_) -
      reinterpret_cast<char*>(&cur_pos_)) + sizeof(last_valid_rot_));
  _cached_size_ = 0;
}

ScenePlayerLocationBin::~ScenePlayerLocationBin() {
  // @@protoc_insertion_point(destructor:proto.ScenePlayerLocationBin)
  SharedDtor();
}

void ScenePlayerLocationBin::SharedDtor() {
  if (this != internal_default_instance()) delete cur_pos_;
  if (this != internal_default_instance()) delete cur_rot_;
  if (this != internal_default_instance()) delete last_valid_pos_;
  if (this != internal_default_instance()) delete last_valid_rot_;
}

void ScenePlayerLocationBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScenePlayerLocationBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScenePlayerLocationBin& ScenePlayerLocationBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ScenePlayerLocationBin* ScenePlayerLocationBin::New(::google::protobuf::Arena* arena) const {
  ScenePlayerLocationBin* n = new ScenePlayerLocationBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScenePlayerLocationBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ScenePlayerLocationBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && cur_pos_ != NULL) {
    delete cur_pos_;
  }
  cur_pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && cur_rot_ != NULL) {
    delete cur_rot_;
  }
  cur_rot_ = NULL;
  if (GetArenaNoVirtual() == NULL && last_valid_pos_ != NULL) {
    delete last_valid_pos_;
  }
  last_valid_pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && last_valid_rot_ != NULL) {
    delete last_valid_rot_;
  }
  last_valid_rot_ = NULL;
  _internal_metadata_.Clear();
}

bool ScenePlayerLocationBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ScenePlayerLocationBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.VectorBin cur_pos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cur_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.VectorBin cur_rot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cur_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.VectorBin last_valid_pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_last_valid_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.VectorBin last_valid_rot = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_last_valid_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ScenePlayerLocationBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ScenePlayerLocationBin)
  return false;
#undef DO_
}

void ScenePlayerLocationBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ScenePlayerLocationBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.VectorBin cur_pos = 1;
  if (this->has_cur_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->cur_pos_, output);
  }

  // .proto.VectorBin cur_rot = 2;
  if (this->has_cur_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->cur_rot_, output);
  }

  // .proto.VectorBin last_valid_pos = 3;
  if (this->has_last_valid_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->last_valid_pos_, output);
  }

  // .proto.VectorBin last_valid_rot = 4;
  if (this->has_last_valid_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->last_valid_rot_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ScenePlayerLocationBin)
}

::google::protobuf::uint8* ScenePlayerLocationBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ScenePlayerLocationBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.VectorBin cur_pos = 1;
  if (this->has_cur_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->cur_pos_, deterministic, target);
  }

  // .proto.VectorBin cur_rot = 2;
  if (this->has_cur_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->cur_rot_, deterministic, target);
  }

  // .proto.VectorBin last_valid_pos = 3;
  if (this->has_last_valid_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->last_valid_pos_, deterministic, target);
  }

  // .proto.VectorBin last_valid_rot = 4;
  if (this->has_last_valid_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->last_valid_rot_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ScenePlayerLocationBin)
  return target;
}

size_t ScenePlayerLocationBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ScenePlayerLocationBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.VectorBin cur_pos = 1;
  if (this->has_cur_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cur_pos_);
  }

  // .proto.VectorBin cur_rot = 2;
  if (this->has_cur_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cur_rot_);
  }

  // .proto.VectorBin last_valid_pos = 3;
  if (this->has_last_valid_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->last_valid_pos_);
  }

  // .proto.VectorBin last_valid_rot = 4;
  if (this->has_last_valid_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->last_valid_rot_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScenePlayerLocationBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ScenePlayerLocationBin)
  GOOGLE_DCHECK_NE(&from, this);
  const ScenePlayerLocationBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScenePlayerLocationBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ScenePlayerLocationBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ScenePlayerLocationBin)
    MergeFrom(*source);
  }
}

void ScenePlayerLocationBin::MergeFrom(const ScenePlayerLocationBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ScenePlayerLocationBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cur_pos()) {
    mutable_cur_pos()->::proto::VectorBin::MergeFrom(from.cur_pos());
  }
  if (from.has_cur_rot()) {
    mutable_cur_rot()->::proto::VectorBin::MergeFrom(from.cur_rot());
  }
  if (from.has_last_valid_pos()) {
    mutable_last_valid_pos()->::proto::VectorBin::MergeFrom(from.last_valid_pos());
  }
  if (from.has_last_valid_rot()) {
    mutable_last_valid_rot()->::proto::VectorBin::MergeFrom(from.last_valid_rot());
  }
}

void ScenePlayerLocationBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ScenePlayerLocationBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScenePlayerLocationBin::CopyFrom(const ScenePlayerLocationBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ScenePlayerLocationBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScenePlayerLocationBin::IsInitialized() const {
  return true;
}

void ScenePlayerLocationBin::Swap(ScenePlayerLocationBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScenePlayerLocationBin::InternalSwap(ScenePlayerLocationBin* other) {
  using std::swap;
  swap(cur_pos_, other->cur_pos_);
  swap(cur_rot_, other->cur_rot_);
  swap(last_valid_pos_, other->last_valid_pos_);
  swap(last_valid_rot_, other->last_valid_rot_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScenePlayerLocationBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ScenePlayerLocationBin

// .proto.VectorBin cur_pos = 1;
bool ScenePlayerLocationBin::has_cur_pos() const {
  return this != internal_default_instance() && cur_pos_ != NULL;
}
void ScenePlayerLocationBin::clear_cur_pos() {
  if (GetArenaNoVirtual() == NULL && cur_pos_ != NULL) delete cur_pos_;
  cur_pos_ = NULL;
}
const ::proto::VectorBin& ScenePlayerLocationBin::cur_pos() const {
  const ::proto::VectorBin* p = cur_pos_;
  // @@protoc_insertion_point(field_get:proto.ScenePlayerLocationBin.cur_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
::proto::VectorBin* ScenePlayerLocationBin::mutable_cur_pos() {
  
  if (cur_pos_ == NULL) {
    cur_pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerLocationBin.cur_pos)
  return cur_pos_;
}
::proto::VectorBin* ScenePlayerLocationBin::release_cur_pos() {
  // @@protoc_insertion_point(field_release:proto.ScenePlayerLocationBin.cur_pos)
  
  ::proto::VectorBin* temp = cur_pos_;
  cur_pos_ = NULL;
  return temp;
}
void ScenePlayerLocationBin::set_allocated_cur_pos(::proto::VectorBin* cur_pos) {
  delete cur_pos_;
  cur_pos_ = cur_pos;
  if (cur_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ScenePlayerLocationBin.cur_pos)
}

// .proto.VectorBin cur_rot = 2;
bool ScenePlayerLocationBin::has_cur_rot() const {
  return this != internal_default_instance() && cur_rot_ != NULL;
}
void ScenePlayerLocationBin::clear_cur_rot() {
  if (GetArenaNoVirtual() == NULL && cur_rot_ != NULL) delete cur_rot_;
  cur_rot_ = NULL;
}
const ::proto::VectorBin& ScenePlayerLocationBin::cur_rot() const {
  const ::proto::VectorBin* p = cur_rot_;
  // @@protoc_insertion_point(field_get:proto.ScenePlayerLocationBin.cur_rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
::proto::VectorBin* ScenePlayerLocationBin::mutable_cur_rot() {
  
  if (cur_rot_ == NULL) {
    cur_rot_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerLocationBin.cur_rot)
  return cur_rot_;
}
::proto::VectorBin* ScenePlayerLocationBin::release_cur_rot() {
  // @@protoc_insertion_point(field_release:proto.ScenePlayerLocationBin.cur_rot)
  
  ::proto::VectorBin* temp = cur_rot_;
  cur_rot_ = NULL;
  return temp;
}
void ScenePlayerLocationBin::set_allocated_cur_rot(::proto::VectorBin* cur_rot) {
  delete cur_rot_;
  cur_rot_ = cur_rot;
  if (cur_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ScenePlayerLocationBin.cur_rot)
}

// .proto.VectorBin last_valid_pos = 3;
bool ScenePlayerLocationBin::has_last_valid_pos() const {
  return this != internal_default_instance() && last_valid_pos_ != NULL;
}
void ScenePlayerLocationBin::clear_last_valid_pos() {
  if (GetArenaNoVirtual() == NULL && last_valid_pos_ != NULL) delete last_valid_pos_;
  last_valid_pos_ = NULL;
}
const ::proto::VectorBin& ScenePlayerLocationBin::last_valid_pos() const {
  const ::proto::VectorBin* p = last_valid_pos_;
  // @@protoc_insertion_point(field_get:proto.ScenePlayerLocationBin.last_valid_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
::proto::VectorBin* ScenePlayerLocationBin::mutable_last_valid_pos() {
  
  if (last_valid_pos_ == NULL) {
    last_valid_pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerLocationBin.last_valid_pos)
  return last_valid_pos_;
}
::proto::VectorBin* ScenePlayerLocationBin::release_last_valid_pos() {
  // @@protoc_insertion_point(field_release:proto.ScenePlayerLocationBin.last_valid_pos)
  
  ::proto::VectorBin* temp = last_valid_pos_;
  last_valid_pos_ = NULL;
  return temp;
}
void ScenePlayerLocationBin::set_allocated_last_valid_pos(::proto::VectorBin* last_valid_pos) {
  delete last_valid_pos_;
  last_valid_pos_ = last_valid_pos;
  if (last_valid_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ScenePlayerLocationBin.last_valid_pos)
}

// .proto.VectorBin last_valid_rot = 4;
bool ScenePlayerLocationBin::has_last_valid_rot() const {
  return this != internal_default_instance() && last_valid_rot_ != NULL;
}
void ScenePlayerLocationBin::clear_last_valid_rot() {
  if (GetArenaNoVirtual() == NULL && last_valid_rot_ != NULL) delete last_valid_rot_;
  last_valid_rot_ = NULL;
}
const ::proto::VectorBin& ScenePlayerLocationBin::last_valid_rot() const {
  const ::proto::VectorBin* p = last_valid_rot_;
  // @@protoc_insertion_point(field_get:proto.ScenePlayerLocationBin.last_valid_rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
::proto::VectorBin* ScenePlayerLocationBin::mutable_last_valid_rot() {
  
  if (last_valid_rot_ == NULL) {
    last_valid_rot_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerLocationBin.last_valid_rot)
  return last_valid_rot_;
}
::proto::VectorBin* ScenePlayerLocationBin::release_last_valid_rot() {
  // @@protoc_insertion_point(field_release:proto.ScenePlayerLocationBin.last_valid_rot)
  
  ::proto::VectorBin* temp = last_valid_rot_;
  last_valid_rot_ = NULL;
  return temp;
}
void ScenePlayerLocationBin::set_allocated_last_valid_rot(::proto::VectorBin* last_valid_rot) {
  delete last_valid_rot_;
  last_valid_rot_ = last_valid_rot;
  if (last_valid_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ScenePlayerLocationBin.last_valid_rot)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnvZoneInfoBin::kLastRefreshTimeFieldNumber;
const int EnvZoneInfoBin::kAnimalNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnvZoneInfoBin::EnvZoneInfoBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EnvZoneInfoBin)
}
EnvZoneInfoBin::EnvZoneInfoBin(const EnvZoneInfoBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&last_refresh_time_, &from.last_refresh_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&animal_num_) -
    reinterpret_cast<char*>(&last_refresh_time_)) + sizeof(animal_num_));
  // @@protoc_insertion_point(copy_constructor:proto.EnvZoneInfoBin)
}

void EnvZoneInfoBin::SharedCtor() {
  ::memset(&last_refresh_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&animal_num_) -
      reinterpret_cast<char*>(&last_refresh_time_)) + sizeof(animal_num_));
  _cached_size_ = 0;
}

EnvZoneInfoBin::~EnvZoneInfoBin() {
  // @@protoc_insertion_point(destructor:proto.EnvZoneInfoBin)
  SharedDtor();
}

void EnvZoneInfoBin::SharedDtor() {
}

void EnvZoneInfoBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnvZoneInfoBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnvZoneInfoBin& EnvZoneInfoBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnvZoneInfoBin* EnvZoneInfoBin::New(::google::protobuf::Arena* arena) const {
  EnvZoneInfoBin* n = new EnvZoneInfoBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnvZoneInfoBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EnvZoneInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&last_refresh_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&animal_num_) -
      reinterpret_cast<char*>(&last_refresh_time_)) + sizeof(animal_num_));
  _internal_metadata_.Clear();
}

bool EnvZoneInfoBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EnvZoneInfoBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 last_refresh_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &last_refresh_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 animal_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &animal_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EnvZoneInfoBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EnvZoneInfoBin)
  return false;
#undef DO_
}

void EnvZoneInfoBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EnvZoneInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 last_refresh_time = 1;
  if (this->last_refresh_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->last_refresh_time(), output);
  }

  // uint32 animal_num = 2;
  if (this->animal_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->animal_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EnvZoneInfoBin)
}

::google::protobuf::uint8* EnvZoneInfoBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EnvZoneInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 last_refresh_time = 1;
  if (this->last_refresh_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->last_refresh_time(), target);
  }

  // uint32 animal_num = 2;
  if (this->animal_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->animal_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EnvZoneInfoBin)
  return target;
}

size_t EnvZoneInfoBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EnvZoneInfoBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed32 last_refresh_time = 1;
  if (this->last_refresh_time() != 0) {
    total_size += 1 + 4;
  }

  // uint32 animal_num = 2;
  if (this->animal_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->animal_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnvZoneInfoBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EnvZoneInfoBin)
  GOOGLE_DCHECK_NE(&from, this);
  const EnvZoneInfoBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnvZoneInfoBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EnvZoneInfoBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EnvZoneInfoBin)
    MergeFrom(*source);
  }
}

void EnvZoneInfoBin::MergeFrom(const EnvZoneInfoBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EnvZoneInfoBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.last_refresh_time() != 0) {
    set_last_refresh_time(from.last_refresh_time());
  }
  if (from.animal_num() != 0) {
    set_animal_num(from.animal_num());
  }
}

void EnvZoneInfoBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EnvZoneInfoBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnvZoneInfoBin::CopyFrom(const EnvZoneInfoBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EnvZoneInfoBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnvZoneInfoBin::IsInitialized() const {
  return true;
}

void EnvZoneInfoBin::Swap(EnvZoneInfoBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnvZoneInfoBin::InternalSwap(EnvZoneInfoBin* other) {
  using std::swap;
  swap(last_refresh_time_, other->last_refresh_time_);
  swap(animal_num_, other->animal_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnvZoneInfoBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnvZoneInfoBin

// fixed32 last_refresh_time = 1;
void EnvZoneInfoBin::clear_last_refresh_time() {
  last_refresh_time_ = 0u;
}
::google::protobuf::uint32 EnvZoneInfoBin::last_refresh_time() const {
  // @@protoc_insertion_point(field_get:proto.EnvZoneInfoBin.last_refresh_time)
  return last_refresh_time_;
}
void EnvZoneInfoBin::set_last_refresh_time(::google::protobuf::uint32 value) {
  
  last_refresh_time_ = value;
  // @@protoc_insertion_point(field_set:proto.EnvZoneInfoBin.last_refresh_time)
}

// uint32 animal_num = 2;
void EnvZoneInfoBin::clear_animal_num() {
  animal_num_ = 0u;
}
::google::protobuf::uint32 EnvZoneInfoBin::animal_num() const {
  // @@protoc_insertion_point(field_get:proto.EnvZoneInfoBin.animal_num)
  return animal_num_;
}
void EnvZoneInfoBin::set_animal_num(::google::protobuf::uint32 value) {
  
  animal_num_ = value;
  // @@protoc_insertion_point(field_set:proto.EnvZoneInfoBin.animal_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

SceneEnvAnimalCompBin::SceneEnvAnimalCompBin_ZoneInfoMapEntry::SceneEnvAnimalCompBin_ZoneInfoMapEntry() {}
SceneEnvAnimalCompBin::SceneEnvAnimalCompBin_ZoneInfoMapEntry::SceneEnvAnimalCompBin_ZoneInfoMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata SceneEnvAnimalCompBin::SceneEnvAnimalCompBin_ZoneInfoMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[110];
}
void SceneEnvAnimalCompBin::SceneEnvAnimalCompBin_ZoneInfoMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void SceneEnvAnimalCompBin::SceneEnvAnimalCompBin_ZoneInfoMapEntry::MergeFrom(const SceneEnvAnimalCompBin_ZoneInfoMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneEnvAnimalCompBin::kZoneInfoMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneEnvAnimalCompBin::SceneEnvAnimalCompBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneEnvAnimalCompBin)
}
SceneEnvAnimalCompBin::SceneEnvAnimalCompBin(const SceneEnvAnimalCompBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  zone_info_map_.MergeFrom(from.zone_info_map_);
  // @@protoc_insertion_point(copy_constructor:proto.SceneEnvAnimalCompBin)
}

void SceneEnvAnimalCompBin::SharedCtor() {
  _cached_size_ = 0;
}

SceneEnvAnimalCompBin::~SceneEnvAnimalCompBin() {
  // @@protoc_insertion_point(destructor:proto.SceneEnvAnimalCompBin)
  SharedDtor();
}

void SceneEnvAnimalCompBin::SharedDtor() {
}

void SceneEnvAnimalCompBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneEnvAnimalCompBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneEnvAnimalCompBin& SceneEnvAnimalCompBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneEnvAnimalCompBin* SceneEnvAnimalCompBin::New(::google::protobuf::Arena* arena) const {
  SceneEnvAnimalCompBin* n = new SceneEnvAnimalCompBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneEnvAnimalCompBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneEnvAnimalCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  zone_info_map_.Clear();
  _internal_metadata_.Clear();
}

bool SceneEnvAnimalCompBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneEnvAnimalCompBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, .proto.EnvZoneInfoBin> zone_info_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          SceneEnvAnimalCompBin_ZoneInfoMapEntry::Parser< ::google::protobuf::internal::MapField<
              SceneEnvAnimalCompBin_ZoneInfoMapEntry,
              ::google::protobuf::uint32, ::proto::EnvZoneInfoBin,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::EnvZoneInfoBin > > parser(&zone_info_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneEnvAnimalCompBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneEnvAnimalCompBin)
  return false;
#undef DO_
}

void SceneEnvAnimalCompBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneEnvAnimalCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .proto.EnvZoneInfoBin> zone_info_map = 1;
  if (!this->zone_info_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::EnvZoneInfoBin >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->zone_info_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->zone_info_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::EnvZoneInfoBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::EnvZoneInfoBin >::const_iterator
          it = this->zone_info_map().begin();
          it != this->zone_info_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneEnvAnimalCompBin_ZoneInfoMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(zone_info_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneEnvAnimalCompBin_ZoneInfoMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::EnvZoneInfoBin >::const_iterator
          it = this->zone_info_map().begin();
          it != this->zone_info_map().end(); ++it) {
        entry.reset(zone_info_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneEnvAnimalCompBin)
}

::google::protobuf::uint8* SceneEnvAnimalCompBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneEnvAnimalCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .proto.EnvZoneInfoBin> zone_info_map = 1;
  if (!this->zone_info_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::EnvZoneInfoBin >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->zone_info_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->zone_info_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::EnvZoneInfoBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::EnvZoneInfoBin >::const_iterator
          it = this->zone_info_map().begin();
          it != this->zone_info_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneEnvAnimalCompBin_ZoneInfoMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(zone_info_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneEnvAnimalCompBin_ZoneInfoMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::EnvZoneInfoBin >::const_iterator
          it = this->zone_info_map().begin();
          it != this->zone_info_map().end(); ++it) {
        entry.reset(zone_info_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneEnvAnimalCompBin)
  return target;
}

size_t SceneEnvAnimalCompBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneEnvAnimalCompBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, .proto.EnvZoneInfoBin> zone_info_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->zone_info_map_size());
  {
    ::google::protobuf::scoped_ptr<SceneEnvAnimalCompBin_ZoneInfoMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::EnvZoneInfoBin >::const_iterator
        it = this->zone_info_map().begin();
        it != this->zone_info_map().end(); ++it) {
      entry.reset(zone_info_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneEnvAnimalCompBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneEnvAnimalCompBin)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneEnvAnimalCompBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneEnvAnimalCompBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneEnvAnimalCompBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneEnvAnimalCompBin)
    MergeFrom(*source);
  }
}

void SceneEnvAnimalCompBin::MergeFrom(const SceneEnvAnimalCompBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneEnvAnimalCompBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  zone_info_map_.MergeFrom(from.zone_info_map_);
}

void SceneEnvAnimalCompBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneEnvAnimalCompBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneEnvAnimalCompBin::CopyFrom(const SceneEnvAnimalCompBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneEnvAnimalCompBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneEnvAnimalCompBin::IsInitialized() const {
  return true;
}

void SceneEnvAnimalCompBin::Swap(SceneEnvAnimalCompBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneEnvAnimalCompBin::InternalSwap(SceneEnvAnimalCompBin* other) {
  using std::swap;
  zone_info_map_.Swap(&other->zone_info_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneEnvAnimalCompBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneEnvAnimalCompBin

// map<uint32, .proto.EnvZoneInfoBin> zone_info_map = 1;
int SceneEnvAnimalCompBin::zone_info_map_size() const {
  return zone_info_map_.size();
}
void SceneEnvAnimalCompBin::clear_zone_info_map() {
  zone_info_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::EnvZoneInfoBin >&
SceneEnvAnimalCompBin::zone_info_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneEnvAnimalCompBin.zone_info_map)
  return zone_info_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::EnvZoneInfoBin >*
SceneEnvAnimalCompBin::mutable_zone_info_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneEnvAnimalCompBin.zone_info_map)
  return zone_info_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneWeatherInfoBin::kHeightAreaIdFieldNumber;
const int SceneWeatherInfoBin::kClimateTypeFieldNumber;
const int SceneWeatherInfoBin::kNextClimateTimeFieldNumber;
const int SceneWeatherInfoBin::kForcastClimateListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneWeatherInfoBin::SceneWeatherInfoBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneWeatherInfoBin)
}
SceneWeatherInfoBin::SceneWeatherInfoBin(const SceneWeatherInfoBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      forcast_climate_list_(from.forcast_climate_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&height_area_id_, &from.height_area_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&next_climate_time_) -
    reinterpret_cast<char*>(&height_area_id_)) + sizeof(next_climate_time_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneWeatherInfoBin)
}

void SceneWeatherInfoBin::SharedCtor() {
  ::memset(&height_area_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&next_climate_time_) -
      reinterpret_cast<char*>(&height_area_id_)) + sizeof(next_climate_time_));
  _cached_size_ = 0;
}

SceneWeatherInfoBin::~SceneWeatherInfoBin() {
  // @@protoc_insertion_point(destructor:proto.SceneWeatherInfoBin)
  SharedDtor();
}

void SceneWeatherInfoBin::SharedDtor() {
}

void SceneWeatherInfoBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneWeatherInfoBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneWeatherInfoBin& SceneWeatherInfoBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneWeatherInfoBin* SceneWeatherInfoBin::New(::google::protobuf::Arena* arena) const {
  SceneWeatherInfoBin* n = new SceneWeatherInfoBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneWeatherInfoBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneWeatherInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  forcast_climate_list_.Clear();
  ::memset(&height_area_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&next_climate_time_) -
      reinterpret_cast<char*>(&height_area_id_)) + sizeof(next_climate_time_));
  _internal_metadata_.Clear();
}

bool SceneWeatherInfoBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneWeatherInfoBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 height_area_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_area_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 climate_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &climate_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 next_climate_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &next_climate_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 forcast_climate_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_forcast_climate_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_forcast_climate_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneWeatherInfoBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneWeatherInfoBin)
  return false;
#undef DO_
}

void SceneWeatherInfoBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneWeatherInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 height_area_id = 1;
  if (this->height_area_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->height_area_id(), output);
  }

  // uint32 climate_type = 2;
  if (this->climate_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->climate_type(), output);
  }

  // uint64 next_climate_time = 3;
  if (this->next_climate_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->next_climate_time(), output);
  }

  // repeated uint32 forcast_climate_list = 4;
  if (this->forcast_climate_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _forcast_climate_list_cached_byte_size_));
  }
  for (int i = 0, n = this->forcast_climate_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->forcast_climate_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneWeatherInfoBin)
}

::google::protobuf::uint8* SceneWeatherInfoBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneWeatherInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 height_area_id = 1;
  if (this->height_area_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->height_area_id(), target);
  }

  // uint32 climate_type = 2;
  if (this->climate_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->climate_type(), target);
  }

  // uint64 next_climate_time = 3;
  if (this->next_climate_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->next_climate_time(), target);
  }

  // repeated uint32 forcast_climate_list = 4;
  if (this->forcast_climate_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _forcast_climate_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->forcast_climate_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneWeatherInfoBin)
  return target;
}

size_t SceneWeatherInfoBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneWeatherInfoBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 forcast_climate_list = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->forcast_climate_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _forcast_climate_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 height_area_id = 1;
  if (this->height_area_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->height_area_id());
  }

  // uint32 climate_type = 2;
  if (this->climate_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->climate_type());
  }

  // uint64 next_climate_time = 3;
  if (this->next_climate_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->next_climate_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneWeatherInfoBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneWeatherInfoBin)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneWeatherInfoBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneWeatherInfoBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneWeatherInfoBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneWeatherInfoBin)
    MergeFrom(*source);
  }
}

void SceneWeatherInfoBin::MergeFrom(const SceneWeatherInfoBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneWeatherInfoBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  forcast_climate_list_.MergeFrom(from.forcast_climate_list_);
  if (from.height_area_id() != 0) {
    set_height_area_id(from.height_area_id());
  }
  if (from.climate_type() != 0) {
    set_climate_type(from.climate_type());
  }
  if (from.next_climate_time() != 0) {
    set_next_climate_time(from.next_climate_time());
  }
}

void SceneWeatherInfoBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneWeatherInfoBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneWeatherInfoBin::CopyFrom(const SceneWeatherInfoBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneWeatherInfoBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneWeatherInfoBin::IsInitialized() const {
  return true;
}

void SceneWeatherInfoBin::Swap(SceneWeatherInfoBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneWeatherInfoBin::InternalSwap(SceneWeatherInfoBin* other) {
  using std::swap;
  forcast_climate_list_.InternalSwap(&other->forcast_climate_list_);
  swap(height_area_id_, other->height_area_id_);
  swap(climate_type_, other->climate_type_);
  swap(next_climate_time_, other->next_climate_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneWeatherInfoBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneWeatherInfoBin

// uint32 height_area_id = 1;
void SceneWeatherInfoBin::clear_height_area_id() {
  height_area_id_ = 0u;
}
::google::protobuf::uint32 SceneWeatherInfoBin::height_area_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeatherInfoBin.height_area_id)
  return height_area_id_;
}
void SceneWeatherInfoBin::set_height_area_id(::google::protobuf::uint32 value) {
  
  height_area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeatherInfoBin.height_area_id)
}

// uint32 climate_type = 2;
void SceneWeatherInfoBin::clear_climate_type() {
  climate_type_ = 0u;
}
::google::protobuf::uint32 SceneWeatherInfoBin::climate_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeatherInfoBin.climate_type)
  return climate_type_;
}
void SceneWeatherInfoBin::set_climate_type(::google::protobuf::uint32 value) {
  
  climate_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeatherInfoBin.climate_type)
}

// uint64 next_climate_time = 3;
void SceneWeatherInfoBin::clear_next_climate_time() {
  next_climate_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SceneWeatherInfoBin::next_climate_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeatherInfoBin.next_climate_time)
  return next_climate_time_;
}
void SceneWeatherInfoBin::set_next_climate_time(::google::protobuf::uint64 value) {
  
  next_climate_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeatherInfoBin.next_climate_time)
}

// repeated uint32 forcast_climate_list = 4;
int SceneWeatherInfoBin::forcast_climate_list_size() const {
  return forcast_climate_list_.size();
}
void SceneWeatherInfoBin::clear_forcast_climate_list() {
  forcast_climate_list_.Clear();
}
::google::protobuf::uint32 SceneWeatherInfoBin::forcast_climate_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneWeatherInfoBin.forcast_climate_list)
  return forcast_climate_list_.Get(index);
}
void SceneWeatherInfoBin::set_forcast_climate_list(int index, ::google::protobuf::uint32 value) {
  forcast_climate_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneWeatherInfoBin.forcast_climate_list)
}
void SceneWeatherInfoBin::add_forcast_climate_list(::google::protobuf::uint32 value) {
  forcast_climate_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneWeatherInfoBin.forcast_climate_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneWeatherInfoBin::forcast_climate_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneWeatherInfoBin.forcast_climate_list)
  return forcast_climate_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneWeatherInfoBin::mutable_forcast_climate_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneWeatherInfoBin.forcast_climate_list)
  return &forcast_climate_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneClimateAreaInfoBin::kClimateAreaIdFieldNumber;
const int SceneClimateAreaInfoBin::kJsonClimateTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneClimateAreaInfoBin::SceneClimateAreaInfoBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneClimateAreaInfoBin)
}
SceneClimateAreaInfoBin::SceneClimateAreaInfoBin(const SceneClimateAreaInfoBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&climate_area_id_, &from.climate_area_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&json_climate_type_) -
    reinterpret_cast<char*>(&climate_area_id_)) + sizeof(json_climate_type_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneClimateAreaInfoBin)
}

void SceneClimateAreaInfoBin::SharedCtor() {
  ::memset(&climate_area_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&json_climate_type_) -
      reinterpret_cast<char*>(&climate_area_id_)) + sizeof(json_climate_type_));
  _cached_size_ = 0;
}

SceneClimateAreaInfoBin::~SceneClimateAreaInfoBin() {
  // @@protoc_insertion_point(destructor:proto.SceneClimateAreaInfoBin)
  SharedDtor();
}

void SceneClimateAreaInfoBin::SharedDtor() {
}

void SceneClimateAreaInfoBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneClimateAreaInfoBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneClimateAreaInfoBin& SceneClimateAreaInfoBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneClimateAreaInfoBin* SceneClimateAreaInfoBin::New(::google::protobuf::Arena* arena) const {
  SceneClimateAreaInfoBin* n = new SceneClimateAreaInfoBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneClimateAreaInfoBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneClimateAreaInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&climate_area_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&json_climate_type_) -
      reinterpret_cast<char*>(&climate_area_id_)) + sizeof(json_climate_type_));
  _internal_metadata_.Clear();
}

bool SceneClimateAreaInfoBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneClimateAreaInfoBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 climate_area_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &climate_area_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 json_climate_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &json_climate_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneClimateAreaInfoBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneClimateAreaInfoBin)
  return false;
#undef DO_
}

void SceneClimateAreaInfoBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneClimateAreaInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 climate_area_id = 1;
  if (this->climate_area_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->climate_area_id(), output);
  }

  // uint32 json_climate_type = 2;
  if (this->json_climate_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->json_climate_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneClimateAreaInfoBin)
}

::google::protobuf::uint8* SceneClimateAreaInfoBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneClimateAreaInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 climate_area_id = 1;
  if (this->climate_area_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->climate_area_id(), target);
  }

  // uint32 json_climate_type = 2;
  if (this->json_climate_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->json_climate_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneClimateAreaInfoBin)
  return target;
}

size_t SceneClimateAreaInfoBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneClimateAreaInfoBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 climate_area_id = 1;
  if (this->climate_area_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->climate_area_id());
  }

  // uint32 json_climate_type = 2;
  if (this->json_climate_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->json_climate_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneClimateAreaInfoBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneClimateAreaInfoBin)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneClimateAreaInfoBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneClimateAreaInfoBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneClimateAreaInfoBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneClimateAreaInfoBin)
    MergeFrom(*source);
  }
}

void SceneClimateAreaInfoBin::MergeFrom(const SceneClimateAreaInfoBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneClimateAreaInfoBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.climate_area_id() != 0) {
    set_climate_area_id(from.climate_area_id());
  }
  if (from.json_climate_type() != 0) {
    set_json_climate_type(from.json_climate_type());
  }
}

void SceneClimateAreaInfoBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneClimateAreaInfoBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneClimateAreaInfoBin::CopyFrom(const SceneClimateAreaInfoBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneClimateAreaInfoBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneClimateAreaInfoBin::IsInitialized() const {
  return true;
}

void SceneClimateAreaInfoBin::Swap(SceneClimateAreaInfoBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneClimateAreaInfoBin::InternalSwap(SceneClimateAreaInfoBin* other) {
  using std::swap;
  swap(climate_area_id_, other->climate_area_id_);
  swap(json_climate_type_, other->json_climate_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneClimateAreaInfoBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneClimateAreaInfoBin

// uint32 climate_area_id = 1;
void SceneClimateAreaInfoBin::clear_climate_area_id() {
  climate_area_id_ = 0u;
}
::google::protobuf::uint32 SceneClimateAreaInfoBin::climate_area_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneClimateAreaInfoBin.climate_area_id)
  return climate_area_id_;
}
void SceneClimateAreaInfoBin::set_climate_area_id(::google::protobuf::uint32 value) {
  
  climate_area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneClimateAreaInfoBin.climate_area_id)
}

// uint32 json_climate_type = 2;
void SceneClimateAreaInfoBin::clear_json_climate_type() {
  json_climate_type_ = 0u;
}
::google::protobuf::uint32 SceneClimateAreaInfoBin::json_climate_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneClimateAreaInfoBin.json_climate_type)
  return json_climate_type_;
}
void SceneClimateAreaInfoBin::set_json_climate_type(::google::protobuf::uint32 value) {
  
  json_climate_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneClimateAreaInfoBin.json_climate_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneAllWeatherInfoBin::kWeatherInfoListFieldNumber;
const int SceneAllWeatherInfoBin::kClosedWeatherAreaListFieldNumber;
const int SceneAllWeatherInfoBin::kClimateAreaInfoListFieldNumber;
const int SceneAllWeatherInfoBin::kClosedClimateAreaListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneAllWeatherInfoBin::SceneAllWeatherInfoBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneAllWeatherInfoBin)
}
SceneAllWeatherInfoBin::SceneAllWeatherInfoBin(const SceneAllWeatherInfoBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      weather_info_list_(from.weather_info_list_),
      closed_weather_area_list_(from.closed_weather_area_list_),
      climate_area_info_list_(from.climate_area_info_list_),
      closed_climate_area_list_(from.closed_climate_area_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.SceneAllWeatherInfoBin)
}

void SceneAllWeatherInfoBin::SharedCtor() {
  _cached_size_ = 0;
}

SceneAllWeatherInfoBin::~SceneAllWeatherInfoBin() {
  // @@protoc_insertion_point(destructor:proto.SceneAllWeatherInfoBin)
  SharedDtor();
}

void SceneAllWeatherInfoBin::SharedDtor() {
}

void SceneAllWeatherInfoBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneAllWeatherInfoBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneAllWeatherInfoBin& SceneAllWeatherInfoBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneAllWeatherInfoBin* SceneAllWeatherInfoBin::New(::google::protobuf::Arena* arena) const {
  SceneAllWeatherInfoBin* n = new SceneAllWeatherInfoBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneAllWeatherInfoBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneAllWeatherInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  weather_info_list_.Clear();
  closed_weather_area_list_.Clear();
  climate_area_info_list_.Clear();
  closed_climate_area_list_.Clear();
  _internal_metadata_.Clear();
}

bool SceneAllWeatherInfoBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneAllWeatherInfoBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.SceneWeatherInfoBin weather_info_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_weather_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 closed_weather_area_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_closed_weather_area_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_closed_weather_area_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.SceneClimateAreaInfoBin climate_area_info_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_climate_area_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 closed_climate_area_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_closed_climate_area_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_closed_climate_area_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneAllWeatherInfoBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneAllWeatherInfoBin)
  return false;
#undef DO_
}

void SceneAllWeatherInfoBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneAllWeatherInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.SceneWeatherInfoBin weather_info_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->weather_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->weather_info_list(static_cast<int>(i)), output);
  }

  // repeated uint32 closed_weather_area_list = 2;
  if (this->closed_weather_area_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _closed_weather_area_list_cached_byte_size_));
  }
  for (int i = 0, n = this->closed_weather_area_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->closed_weather_area_list(i), output);
  }

  // repeated .proto.SceneClimateAreaInfoBin climate_area_info_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->climate_area_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->climate_area_info_list(static_cast<int>(i)), output);
  }

  // repeated uint32 closed_climate_area_list = 4;
  if (this->closed_climate_area_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _closed_climate_area_list_cached_byte_size_));
  }
  for (int i = 0, n = this->closed_climate_area_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->closed_climate_area_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneAllWeatherInfoBin)
}

::google::protobuf::uint8* SceneAllWeatherInfoBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneAllWeatherInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.SceneWeatherInfoBin weather_info_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->weather_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->weather_info_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 closed_weather_area_list = 2;
  if (this->closed_weather_area_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _closed_weather_area_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->closed_weather_area_list_, target);
  }

  // repeated .proto.SceneClimateAreaInfoBin climate_area_info_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->climate_area_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->climate_area_info_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 closed_climate_area_list = 4;
  if (this->closed_climate_area_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _closed_climate_area_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->closed_climate_area_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneAllWeatherInfoBin)
  return target;
}

size_t SceneAllWeatherInfoBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneAllWeatherInfoBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.SceneWeatherInfoBin weather_info_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->weather_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->weather_info_list(static_cast<int>(i)));
    }
  }

  // repeated uint32 closed_weather_area_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->closed_weather_area_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _closed_weather_area_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.SceneClimateAreaInfoBin climate_area_info_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->climate_area_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->climate_area_info_list(static_cast<int>(i)));
    }
  }

  // repeated uint32 closed_climate_area_list = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->closed_climate_area_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _closed_climate_area_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneAllWeatherInfoBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneAllWeatherInfoBin)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneAllWeatherInfoBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneAllWeatherInfoBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneAllWeatherInfoBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneAllWeatherInfoBin)
    MergeFrom(*source);
  }
}

void SceneAllWeatherInfoBin::MergeFrom(const SceneAllWeatherInfoBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneAllWeatherInfoBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  weather_info_list_.MergeFrom(from.weather_info_list_);
  closed_weather_area_list_.MergeFrom(from.closed_weather_area_list_);
  climate_area_info_list_.MergeFrom(from.climate_area_info_list_);
  closed_climate_area_list_.MergeFrom(from.closed_climate_area_list_);
}

void SceneAllWeatherInfoBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneAllWeatherInfoBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneAllWeatherInfoBin::CopyFrom(const SceneAllWeatherInfoBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneAllWeatherInfoBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneAllWeatherInfoBin::IsInitialized() const {
  return true;
}

void SceneAllWeatherInfoBin::Swap(SceneAllWeatherInfoBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneAllWeatherInfoBin::InternalSwap(SceneAllWeatherInfoBin* other) {
  using std::swap;
  weather_info_list_.InternalSwap(&other->weather_info_list_);
  closed_weather_area_list_.InternalSwap(&other->closed_weather_area_list_);
  climate_area_info_list_.InternalSwap(&other->climate_area_info_list_);
  closed_climate_area_list_.InternalSwap(&other->closed_climate_area_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneAllWeatherInfoBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneAllWeatherInfoBin

// repeated .proto.SceneWeatherInfoBin weather_info_list = 1;
int SceneAllWeatherInfoBin::weather_info_list_size() const {
  return weather_info_list_.size();
}
void SceneAllWeatherInfoBin::clear_weather_info_list() {
  weather_info_list_.Clear();
}
const ::proto::SceneWeatherInfoBin& SceneAllWeatherInfoBin::weather_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAllWeatherInfoBin.weather_info_list)
  return weather_info_list_.Get(index);
}
::proto::SceneWeatherInfoBin* SceneAllWeatherInfoBin::mutable_weather_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneAllWeatherInfoBin.weather_info_list)
  return weather_info_list_.Mutable(index);
}
::proto::SceneWeatherInfoBin* SceneAllWeatherInfoBin::add_weather_info_list() {
  // @@protoc_insertion_point(field_add:proto.SceneAllWeatherInfoBin.weather_info_list)
  return weather_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::SceneWeatherInfoBin >*
SceneAllWeatherInfoBin::mutable_weather_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAllWeatherInfoBin.weather_info_list)
  return &weather_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::SceneWeatherInfoBin >&
SceneAllWeatherInfoBin::weather_info_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAllWeatherInfoBin.weather_info_list)
  return weather_info_list_;
}

// repeated uint32 closed_weather_area_list = 2;
int SceneAllWeatherInfoBin::closed_weather_area_list_size() const {
  return closed_weather_area_list_.size();
}
void SceneAllWeatherInfoBin::clear_closed_weather_area_list() {
  closed_weather_area_list_.Clear();
}
::google::protobuf::uint32 SceneAllWeatherInfoBin::closed_weather_area_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAllWeatherInfoBin.closed_weather_area_list)
  return closed_weather_area_list_.Get(index);
}
void SceneAllWeatherInfoBin::set_closed_weather_area_list(int index, ::google::protobuf::uint32 value) {
  closed_weather_area_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneAllWeatherInfoBin.closed_weather_area_list)
}
void SceneAllWeatherInfoBin::add_closed_weather_area_list(::google::protobuf::uint32 value) {
  closed_weather_area_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneAllWeatherInfoBin.closed_weather_area_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneAllWeatherInfoBin::closed_weather_area_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAllWeatherInfoBin.closed_weather_area_list)
  return closed_weather_area_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneAllWeatherInfoBin::mutable_closed_weather_area_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAllWeatherInfoBin.closed_weather_area_list)
  return &closed_weather_area_list_;
}

// repeated .proto.SceneClimateAreaInfoBin climate_area_info_list = 3;
int SceneAllWeatherInfoBin::climate_area_info_list_size() const {
  return climate_area_info_list_.size();
}
void SceneAllWeatherInfoBin::clear_climate_area_info_list() {
  climate_area_info_list_.Clear();
}
const ::proto::SceneClimateAreaInfoBin& SceneAllWeatherInfoBin::climate_area_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAllWeatherInfoBin.climate_area_info_list)
  return climate_area_info_list_.Get(index);
}
::proto::SceneClimateAreaInfoBin* SceneAllWeatherInfoBin::mutable_climate_area_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneAllWeatherInfoBin.climate_area_info_list)
  return climate_area_info_list_.Mutable(index);
}
::proto::SceneClimateAreaInfoBin* SceneAllWeatherInfoBin::add_climate_area_info_list() {
  // @@protoc_insertion_point(field_add:proto.SceneAllWeatherInfoBin.climate_area_info_list)
  return climate_area_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::SceneClimateAreaInfoBin >*
SceneAllWeatherInfoBin::mutable_climate_area_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAllWeatherInfoBin.climate_area_info_list)
  return &climate_area_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::SceneClimateAreaInfoBin >&
SceneAllWeatherInfoBin::climate_area_info_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAllWeatherInfoBin.climate_area_info_list)
  return climate_area_info_list_;
}

// repeated uint32 closed_climate_area_list = 4;
int SceneAllWeatherInfoBin::closed_climate_area_list_size() const {
  return closed_climate_area_list_.size();
}
void SceneAllWeatherInfoBin::clear_closed_climate_area_list() {
  closed_climate_area_list_.Clear();
}
::google::protobuf::uint32 SceneAllWeatherInfoBin::closed_climate_area_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAllWeatherInfoBin.closed_climate_area_list)
  return closed_climate_area_list_.Get(index);
}
void SceneAllWeatherInfoBin::set_closed_climate_area_list(int index, ::google::protobuf::uint32 value) {
  closed_climate_area_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneAllWeatherInfoBin.closed_climate_area_list)
}
void SceneAllWeatherInfoBin::add_closed_climate_area_list(::google::protobuf::uint32 value) {
  closed_climate_area_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneAllWeatherInfoBin.closed_climate_area_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneAllWeatherInfoBin::closed_climate_area_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAllWeatherInfoBin.closed_climate_area_list)
  return closed_climate_area_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneAllWeatherInfoBin::mutable_closed_climate_area_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAllWeatherInfoBin.closed_climate_area_list)
  return &closed_climate_area_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

BackupGroupBin::BackupGroupBin_VariableMapEntry::BackupGroupBin_VariableMapEntry() {}
BackupGroupBin::BackupGroupBin_VariableMapEntry::BackupGroupBin_VariableMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata BackupGroupBin::BackupGroupBin_VariableMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[115];
}
void BackupGroupBin::BackupGroupBin_VariableMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void BackupGroupBin::BackupGroupBin_VariableMapEntry::MergeFrom(const BackupGroupBin_VariableMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BackupGroupBin::kDelMonsterListFieldNumber;
const int BackupGroupBin::kVariableMapFieldNumber;
const int BackupGroupBin::kReviseLevelFieldNumber;
const int BackupGroupBin::kLastRefreshTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BackupGroupBin::BackupGroupBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BackupGroupBin)
}
BackupGroupBin::BackupGroupBin(const BackupGroupBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      del_monster_list_(from.del_monster_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  variable_map_.MergeFrom(from.variable_map_);
  ::memcpy(&revise_level_, &from.revise_level_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_refresh_time_) -
    reinterpret_cast<char*>(&revise_level_)) + sizeof(last_refresh_time_));
  // @@protoc_insertion_point(copy_constructor:proto.BackupGroupBin)
}

void BackupGroupBin::SharedCtor() {
  ::memset(&revise_level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_refresh_time_) -
      reinterpret_cast<char*>(&revise_level_)) + sizeof(last_refresh_time_));
  _cached_size_ = 0;
}

BackupGroupBin::~BackupGroupBin() {
  // @@protoc_insertion_point(destructor:proto.BackupGroupBin)
  SharedDtor();
}

void BackupGroupBin::SharedDtor() {
}

void BackupGroupBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BackupGroupBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BackupGroupBin& BackupGroupBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

BackupGroupBin* BackupGroupBin::New(::google::protobuf::Arena* arena) const {
  BackupGroupBin* n = new BackupGroupBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BackupGroupBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BackupGroupBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  del_monster_list_.Clear();
  variable_map_.Clear();
  ::memset(&revise_level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_refresh_time_) -
      reinterpret_cast<char*>(&revise_level_)) + sizeof(last_refresh_time_));
  _internal_metadata_.Clear();
}

bool BackupGroupBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BackupGroupBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 del_monster_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_del_monster_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_del_monster_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .proto.GroupVariableBin> variable_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          BackupGroupBin_VariableMapEntry::Parser< ::google::protobuf::internal::MapField<
              BackupGroupBin_VariableMapEntry,
              ::std::string, ::proto::GroupVariableBin,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin > > parser(&variable_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.BackupGroupBin.VariableMapEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 revise_level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &revise_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 last_refresh_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &last_refresh_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BackupGroupBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BackupGroupBin)
  return false;
#undef DO_
}

void BackupGroupBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BackupGroupBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 del_monster_list = 1;
  if (this->del_monster_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _del_monster_list_cached_byte_size_));
  }
  for (int i = 0, n = this->del_monster_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->del_monster_list(i), output);
  }

  // map<string, .proto.GroupVariableBin> variable_map = 2;
  if (!this->variable_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.BackupGroupBin.VariableMapEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->variable_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->variable_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >::const_iterator
          it = this->variable_map().begin();
          it != this->variable_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<BackupGroupBin_VariableMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(variable_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<BackupGroupBin_VariableMapEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >::const_iterator
          it = this->variable_map().begin();
          it != this->variable_map().end(); ++it) {
        entry.reset(variable_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // uint32 revise_level = 3;
  if (this->revise_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->revise_level(), output);
  }

  // fixed32 last_refresh_time = 4;
  if (this->last_refresh_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(4, this->last_refresh_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BackupGroupBin)
}

::google::protobuf::uint8* BackupGroupBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BackupGroupBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 del_monster_list = 1;
  if (this->del_monster_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _del_monster_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->del_monster_list_, target);
  }

  // map<string, .proto.GroupVariableBin> variable_map = 2;
  if (!this->variable_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.BackupGroupBin.VariableMapEntry.key");
      }
    };

    if (deterministic &&
        this->variable_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->variable_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >::const_iterator
          it = this->variable_map().begin();
          it != this->variable_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<BackupGroupBin_VariableMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(variable_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<BackupGroupBin_VariableMapEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >::const_iterator
          it = this->variable_map().begin();
          it != this->variable_map().end(); ++it) {
        entry.reset(variable_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // uint32 revise_level = 3;
  if (this->revise_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->revise_level(), target);
  }

  // fixed32 last_refresh_time = 4;
  if (this->last_refresh_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(4, this->last_refresh_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BackupGroupBin)
  return target;
}

size_t BackupGroupBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BackupGroupBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 del_monster_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->del_monster_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _del_monster_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // map<string, .proto.GroupVariableBin> variable_map = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->variable_map_size());
  {
    ::google::protobuf::scoped_ptr<BackupGroupBin_VariableMapEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >::const_iterator
        it = this->variable_map().begin();
        it != this->variable_map().end(); ++it) {
      entry.reset(variable_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint32 revise_level = 3;
  if (this->revise_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->revise_level());
  }

  // fixed32 last_refresh_time = 4;
  if (this->last_refresh_time() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BackupGroupBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BackupGroupBin)
  GOOGLE_DCHECK_NE(&from, this);
  const BackupGroupBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BackupGroupBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BackupGroupBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BackupGroupBin)
    MergeFrom(*source);
  }
}

void BackupGroupBin::MergeFrom(const BackupGroupBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BackupGroupBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  del_monster_list_.MergeFrom(from.del_monster_list_);
  variable_map_.MergeFrom(from.variable_map_);
  if (from.revise_level() != 0) {
    set_revise_level(from.revise_level());
  }
  if (from.last_refresh_time() != 0) {
    set_last_refresh_time(from.last_refresh_time());
  }
}

void BackupGroupBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BackupGroupBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BackupGroupBin::CopyFrom(const BackupGroupBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BackupGroupBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BackupGroupBin::IsInitialized() const {
  return true;
}

void BackupGroupBin::Swap(BackupGroupBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BackupGroupBin::InternalSwap(BackupGroupBin* other) {
  using std::swap;
  del_monster_list_.InternalSwap(&other->del_monster_list_);
  variable_map_.Swap(&other->variable_map_);
  swap(revise_level_, other->revise_level_);
  swap(last_refresh_time_, other->last_refresh_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BackupGroupBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BackupGroupBin

// repeated uint32 del_monster_list = 1;
int BackupGroupBin::del_monster_list_size() const {
  return del_monster_list_.size();
}
void BackupGroupBin::clear_del_monster_list() {
  del_monster_list_.Clear();
}
::google::protobuf::uint32 BackupGroupBin::del_monster_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BackupGroupBin.del_monster_list)
  return del_monster_list_.Get(index);
}
void BackupGroupBin::set_del_monster_list(int index, ::google::protobuf::uint32 value) {
  del_monster_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BackupGroupBin.del_monster_list)
}
void BackupGroupBin::add_del_monster_list(::google::protobuf::uint32 value) {
  del_monster_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BackupGroupBin.del_monster_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BackupGroupBin::del_monster_list() const {
  // @@protoc_insertion_point(field_list:proto.BackupGroupBin.del_monster_list)
  return del_monster_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BackupGroupBin::mutable_del_monster_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BackupGroupBin.del_monster_list)
  return &del_monster_list_;
}

// map<string, .proto.GroupVariableBin> variable_map = 2;
int BackupGroupBin::variable_map_size() const {
  return variable_map_.size();
}
void BackupGroupBin::clear_variable_map() {
  variable_map_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >&
BackupGroupBin::variable_map() const {
  // @@protoc_insertion_point(field_map:proto.BackupGroupBin.variable_map)
  return variable_map_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >*
BackupGroupBin::mutable_variable_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.BackupGroupBin.variable_map)
  return variable_map_.MutableMap();
}

// uint32 revise_level = 3;
void BackupGroupBin::clear_revise_level() {
  revise_level_ = 0u;
}
::google::protobuf::uint32 BackupGroupBin::revise_level() const {
  // @@protoc_insertion_point(field_get:proto.BackupGroupBin.revise_level)
  return revise_level_;
}
void BackupGroupBin::set_revise_level(::google::protobuf::uint32 value) {
  
  revise_level_ = value;
  // @@protoc_insertion_point(field_set:proto.BackupGroupBin.revise_level)
}

// fixed32 last_refresh_time = 4;
void BackupGroupBin::clear_last_refresh_time() {
  last_refresh_time_ = 0u;
}
::google::protobuf::uint32 BackupGroupBin::last_refresh_time() const {
  // @@protoc_insertion_point(field_get:proto.BackupGroupBin.last_refresh_time)
  return last_refresh_time_;
}
void BackupGroupBin::set_last_refresh_time(::google::protobuf::uint32 value) {
  
  last_refresh_time_ = value;
  // @@protoc_insertion_point(field_set:proto.BackupGroupBin.last_refresh_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

SceneBlockGroupCompBin::SceneBlockGroupCompBin_BackupGroupMapEntry::SceneBlockGroupCompBin_BackupGroupMapEntry() {}
SceneBlockGroupCompBin::SceneBlockGroupCompBin_BackupGroupMapEntry::SceneBlockGroupCompBin_BackupGroupMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata SceneBlockGroupCompBin::SceneBlockGroupCompBin_BackupGroupMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[117];
}
void SceneBlockGroupCompBin::SceneBlockGroupCompBin_BackupGroupMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void SceneBlockGroupCompBin::SceneBlockGroupCompBin_BackupGroupMapEntry::MergeFrom(const SceneBlockGroupCompBin_BackupGroupMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneBlockGroupCompBin::kDeadGroupListFieldNumber;
const int SceneBlockGroupCompBin::kBackupGroupMapFieldNumber;
const int SceneBlockGroupCompBin::kIsSceneGroupAllDeadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneBlockGroupCompBin::SceneBlockGroupCompBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneBlockGroupCompBin)
}
SceneBlockGroupCompBin::SceneBlockGroupCompBin(const SceneBlockGroupCompBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dead_group_list_(from.dead_group_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  backup_group_map_.MergeFrom(from.backup_group_map_);
  is_scene_group_all_dead_ = from.is_scene_group_all_dead_;
  // @@protoc_insertion_point(copy_constructor:proto.SceneBlockGroupCompBin)
}

void SceneBlockGroupCompBin::SharedCtor() {
  is_scene_group_all_dead_ = false;
  _cached_size_ = 0;
}

SceneBlockGroupCompBin::~SceneBlockGroupCompBin() {
  // @@protoc_insertion_point(destructor:proto.SceneBlockGroupCompBin)
  SharedDtor();
}

void SceneBlockGroupCompBin::SharedDtor() {
}

void SceneBlockGroupCompBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneBlockGroupCompBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneBlockGroupCompBin& SceneBlockGroupCompBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneBlockGroupCompBin* SceneBlockGroupCompBin::New(::google::protobuf::Arena* arena) const {
  SceneBlockGroupCompBin* n = new SceneBlockGroupCompBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneBlockGroupCompBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneBlockGroupCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dead_group_list_.Clear();
  backup_group_map_.Clear();
  is_scene_group_all_dead_ = false;
  _internal_metadata_.Clear();
}

bool SceneBlockGroupCompBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneBlockGroupCompBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 dead_group_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_dead_group_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_dead_group_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .proto.BackupGroupBin> backup_group_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          SceneBlockGroupCompBin_BackupGroupMapEntry::Parser< ::google::protobuf::internal::MapField<
              SceneBlockGroupCompBin_BackupGroupMapEntry,
              ::google::protobuf::uint32, ::proto::BackupGroupBin,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BackupGroupBin > > parser(&backup_group_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_scene_group_all_dead = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_scene_group_all_dead_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneBlockGroupCompBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneBlockGroupCompBin)
  return false;
#undef DO_
}

void SceneBlockGroupCompBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneBlockGroupCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 dead_group_list = 1;
  if (this->dead_group_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _dead_group_list_cached_byte_size_));
  }
  for (int i = 0, n = this->dead_group_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->dead_group_list(i), output);
  }

  // map<uint32, .proto.BackupGroupBin> backup_group_map = 2;
  if (!this->backup_group_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BackupGroupBin >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->backup_group_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->backup_group_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BackupGroupBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BackupGroupBin >::const_iterator
          it = this->backup_group_map().begin();
          it != this->backup_group_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneBlockGroupCompBin_BackupGroupMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(backup_group_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneBlockGroupCompBin_BackupGroupMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BackupGroupBin >::const_iterator
          it = this->backup_group_map().begin();
          it != this->backup_group_map().end(); ++it) {
        entry.reset(backup_group_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    }
  }

  // bool is_scene_group_all_dead = 3;
  if (this->is_scene_group_all_dead() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_scene_group_all_dead(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneBlockGroupCompBin)
}

::google::protobuf::uint8* SceneBlockGroupCompBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneBlockGroupCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 dead_group_list = 1;
  if (this->dead_group_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _dead_group_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->dead_group_list_, target);
  }

  // map<uint32, .proto.BackupGroupBin> backup_group_map = 2;
  if (!this->backup_group_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BackupGroupBin >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->backup_group_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->backup_group_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BackupGroupBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BackupGroupBin >::const_iterator
          it = this->backup_group_map().begin();
          it != this->backup_group_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneBlockGroupCompBin_BackupGroupMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(backup_group_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneBlockGroupCompBin_BackupGroupMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BackupGroupBin >::const_iterator
          it = this->backup_group_map().begin();
          it != this->backup_group_map().end(); ++it) {
        entry.reset(backup_group_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    }
  }

  // bool is_scene_group_all_dead = 3;
  if (this->is_scene_group_all_dead() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_scene_group_all_dead(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneBlockGroupCompBin)
  return target;
}

size_t SceneBlockGroupCompBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneBlockGroupCompBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 dead_group_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->dead_group_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _dead_group_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // map<uint32, .proto.BackupGroupBin> backup_group_map = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->backup_group_map_size());
  {
    ::google::protobuf::scoped_ptr<SceneBlockGroupCompBin_BackupGroupMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BackupGroupBin >::const_iterator
        it = this->backup_group_map().begin();
        it != this->backup_group_map().end(); ++it) {
      entry.reset(backup_group_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bool is_scene_group_all_dead = 3;
  if (this->is_scene_group_all_dead() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneBlockGroupCompBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneBlockGroupCompBin)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneBlockGroupCompBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneBlockGroupCompBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneBlockGroupCompBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneBlockGroupCompBin)
    MergeFrom(*source);
  }
}

void SceneBlockGroupCompBin::MergeFrom(const SceneBlockGroupCompBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneBlockGroupCompBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dead_group_list_.MergeFrom(from.dead_group_list_);
  backup_group_map_.MergeFrom(from.backup_group_map_);
  if (from.is_scene_group_all_dead() != 0) {
    set_is_scene_group_all_dead(from.is_scene_group_all_dead());
  }
}

void SceneBlockGroupCompBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneBlockGroupCompBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneBlockGroupCompBin::CopyFrom(const SceneBlockGroupCompBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneBlockGroupCompBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneBlockGroupCompBin::IsInitialized() const {
  return true;
}

void SceneBlockGroupCompBin::Swap(SceneBlockGroupCompBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneBlockGroupCompBin::InternalSwap(SceneBlockGroupCompBin* other) {
  using std::swap;
  dead_group_list_.InternalSwap(&other->dead_group_list_);
  backup_group_map_.Swap(&other->backup_group_map_);
  swap(is_scene_group_all_dead_, other->is_scene_group_all_dead_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneBlockGroupCompBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneBlockGroupCompBin

// repeated uint32 dead_group_list = 1;
int SceneBlockGroupCompBin::dead_group_list_size() const {
  return dead_group_list_.size();
}
void SceneBlockGroupCompBin::clear_dead_group_list() {
  dead_group_list_.Clear();
}
::google::protobuf::uint32 SceneBlockGroupCompBin::dead_group_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneBlockGroupCompBin.dead_group_list)
  return dead_group_list_.Get(index);
}
void SceneBlockGroupCompBin::set_dead_group_list(int index, ::google::protobuf::uint32 value) {
  dead_group_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneBlockGroupCompBin.dead_group_list)
}
void SceneBlockGroupCompBin::add_dead_group_list(::google::protobuf::uint32 value) {
  dead_group_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneBlockGroupCompBin.dead_group_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneBlockGroupCompBin::dead_group_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneBlockGroupCompBin.dead_group_list)
  return dead_group_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneBlockGroupCompBin::mutable_dead_group_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneBlockGroupCompBin.dead_group_list)
  return &dead_group_list_;
}

// map<uint32, .proto.BackupGroupBin> backup_group_map = 2;
int SceneBlockGroupCompBin::backup_group_map_size() const {
  return backup_group_map_.size();
}
void SceneBlockGroupCompBin::clear_backup_group_map() {
  backup_group_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BackupGroupBin >&
SceneBlockGroupCompBin::backup_group_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneBlockGroupCompBin.backup_group_map)
  return backup_group_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BackupGroupBin >*
SceneBlockGroupCompBin::mutable_backup_group_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneBlockGroupCompBin.backup_group_map)
  return backup_group_map_.MutableMap();
}

// bool is_scene_group_all_dead = 3;
void SceneBlockGroupCompBin::clear_is_scene_group_all_dead() {
  is_scene_group_all_dead_ = false;
}
bool SceneBlockGroupCompBin::is_scene_group_all_dead() const {
  // @@protoc_insertion_point(field_get:proto.SceneBlockGroupCompBin.is_scene_group_all_dead)
  return is_scene_group_all_dead_;
}
void SceneBlockGroupCompBin::set_is_scene_group_all_dead(bool value) {
  
  is_scene_group_all_dead_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneBlockGroupCompBin.is_scene_group_all_dead)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

SceneAreaCompBin::SceneAreaCompBin_AreaMapEntry::SceneAreaCompBin_AreaMapEntry() {}
SceneAreaCompBin::SceneAreaCompBin_AreaMapEntry::SceneAreaCompBin_AreaMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata SceneAreaCompBin::SceneAreaCompBin_AreaMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[119];
}
void SceneAreaCompBin::SceneAreaCompBin_AreaMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void SceneAreaCompBin::SceneAreaCompBin_AreaMapEntry::MergeFrom(const SceneAreaCompBin_AreaMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

SceneAreaCompBin::SceneAreaCompBin_CityMapEntry::SceneAreaCompBin_CityMapEntry() {}
SceneAreaCompBin::SceneAreaCompBin_CityMapEntry::SceneAreaCompBin_CityMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata SceneAreaCompBin::SceneAreaCompBin_CityMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[120];
}
void SceneAreaCompBin::SceneAreaCompBin_CityMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void SceneAreaCompBin::SceneAreaCompBin_CityMapEntry::MergeFrom(const SceneAreaCompBin_CityMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneAreaCompBin::kUnlockedAreaListFieldNumber;
const int SceneAreaCompBin::kAreaMapFieldNumber;
const int SceneAreaCompBin::kCityMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneAreaCompBin::SceneAreaCompBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneAreaCompBin)
}
SceneAreaCompBin::SceneAreaCompBin(const SceneAreaCompBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      unlocked_area_list_(from.unlocked_area_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  area_map_.MergeFrom(from.area_map_);
  city_map_.MergeFrom(from.city_map_);
  // @@protoc_insertion_point(copy_constructor:proto.SceneAreaCompBin)
}

void SceneAreaCompBin::SharedCtor() {
  _cached_size_ = 0;
}

SceneAreaCompBin::~SceneAreaCompBin() {
  // @@protoc_insertion_point(destructor:proto.SceneAreaCompBin)
  SharedDtor();
}

void SceneAreaCompBin::SharedDtor() {
}

void SceneAreaCompBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneAreaCompBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneAreaCompBin& SceneAreaCompBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneAreaCompBin* SceneAreaCompBin::New(::google::protobuf::Arena* arena) const {
  SceneAreaCompBin* n = new SceneAreaCompBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneAreaCompBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneAreaCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unlocked_area_list_.Clear();
  area_map_.Clear();
  city_map_.Clear();
  _internal_metadata_.Clear();
}

bool SceneAreaCompBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneAreaCompBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 unlocked_area_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_unlocked_area_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_unlocked_area_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .proto.AreaBin> area_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          SceneAreaCompBin_AreaMapEntry::Parser< ::google::protobuf::internal::MapField<
              SceneAreaCompBin_AreaMapEntry,
              ::google::protobuf::uint32, ::proto::AreaBin,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AreaBin > > parser(&area_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .proto.CityBin> city_map = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          SceneAreaCompBin_CityMapEntry::Parser< ::google::protobuf::internal::MapField<
              SceneAreaCompBin_CityMapEntry,
              ::google::protobuf::uint32, ::proto::CityBin,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CityBin > > parser(&city_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneAreaCompBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneAreaCompBin)
  return false;
#undef DO_
}

void SceneAreaCompBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneAreaCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 unlocked_area_list = 1;
  if (this->unlocked_area_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _unlocked_area_list_cached_byte_size_));
  }
  for (int i = 0, n = this->unlocked_area_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->unlocked_area_list(i), output);
  }

  // map<uint32, .proto.AreaBin> area_map = 2;
  if (!this->area_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AreaBin >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->area_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->area_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AreaBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AreaBin >::const_iterator
          it = this->area_map().begin();
          it != this->area_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneAreaCompBin_AreaMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(area_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneAreaCompBin_AreaMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AreaBin >::const_iterator
          it = this->area_map().begin();
          it != this->area_map().end(); ++it) {
        entry.reset(area_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    }
  }

  // map<uint32, .proto.CityBin> city_map = 3;
  if (!this->city_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CityBin >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->city_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->city_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CityBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CityBin >::const_iterator
          it = this->city_map().begin();
          it != this->city_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneAreaCompBin_CityMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(city_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneAreaCompBin_CityMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CityBin >::const_iterator
          it = this->city_map().begin();
          it != this->city_map().end(); ++it) {
        entry.reset(city_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneAreaCompBin)
}

::google::protobuf::uint8* SceneAreaCompBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneAreaCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 unlocked_area_list = 1;
  if (this->unlocked_area_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _unlocked_area_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->unlocked_area_list_, target);
  }

  // map<uint32, .proto.AreaBin> area_map = 2;
  if (!this->area_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AreaBin >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->area_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->area_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AreaBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AreaBin >::const_iterator
          it = this->area_map().begin();
          it != this->area_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneAreaCompBin_AreaMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(area_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneAreaCompBin_AreaMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AreaBin >::const_iterator
          it = this->area_map().begin();
          it != this->area_map().end(); ++it) {
        entry.reset(area_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    }
  }

  // map<uint32, .proto.CityBin> city_map = 3;
  if (!this->city_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CityBin >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->city_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->city_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CityBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CityBin >::const_iterator
          it = this->city_map().begin();
          it != this->city_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneAreaCompBin_CityMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(city_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneAreaCompBin_CityMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CityBin >::const_iterator
          it = this->city_map().begin();
          it != this->city_map().end(); ++it) {
        entry.reset(city_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneAreaCompBin)
  return target;
}

size_t SceneAreaCompBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneAreaCompBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 unlocked_area_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->unlocked_area_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unlocked_area_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // map<uint32, .proto.AreaBin> area_map = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->area_map_size());
  {
    ::google::protobuf::scoped_ptr<SceneAreaCompBin_AreaMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AreaBin >::const_iterator
        it = this->area_map().begin();
        it != this->area_map().end(); ++it) {
      entry.reset(area_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<uint32, .proto.CityBin> city_map = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->city_map_size());
  {
    ::google::protobuf::scoped_ptr<SceneAreaCompBin_CityMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CityBin >::const_iterator
        it = this->city_map().begin();
        it != this->city_map().end(); ++it) {
      entry.reset(city_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneAreaCompBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneAreaCompBin)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneAreaCompBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneAreaCompBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneAreaCompBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneAreaCompBin)
    MergeFrom(*source);
  }
}

void SceneAreaCompBin::MergeFrom(const SceneAreaCompBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneAreaCompBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  unlocked_area_list_.MergeFrom(from.unlocked_area_list_);
  area_map_.MergeFrom(from.area_map_);
  city_map_.MergeFrom(from.city_map_);
}

void SceneAreaCompBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneAreaCompBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneAreaCompBin::CopyFrom(const SceneAreaCompBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneAreaCompBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneAreaCompBin::IsInitialized() const {
  return true;
}

void SceneAreaCompBin::Swap(SceneAreaCompBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneAreaCompBin::InternalSwap(SceneAreaCompBin* other) {
  using std::swap;
  unlocked_area_list_.InternalSwap(&other->unlocked_area_list_);
  area_map_.Swap(&other->area_map_);
  city_map_.Swap(&other->city_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneAreaCompBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneAreaCompBin

// repeated uint32 unlocked_area_list = 1;
int SceneAreaCompBin::unlocked_area_list_size() const {
  return unlocked_area_list_.size();
}
void SceneAreaCompBin::clear_unlocked_area_list() {
  unlocked_area_list_.Clear();
}
::google::protobuf::uint32 SceneAreaCompBin::unlocked_area_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAreaCompBin.unlocked_area_list)
  return unlocked_area_list_.Get(index);
}
void SceneAreaCompBin::set_unlocked_area_list(int index, ::google::protobuf::uint32 value) {
  unlocked_area_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneAreaCompBin.unlocked_area_list)
}
void SceneAreaCompBin::add_unlocked_area_list(::google::protobuf::uint32 value) {
  unlocked_area_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneAreaCompBin.unlocked_area_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneAreaCompBin::unlocked_area_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAreaCompBin.unlocked_area_list)
  return unlocked_area_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneAreaCompBin::mutable_unlocked_area_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAreaCompBin.unlocked_area_list)
  return &unlocked_area_list_;
}

// map<uint32, .proto.AreaBin> area_map = 2;
int SceneAreaCompBin::area_map_size() const {
  return area_map_.size();
}
void SceneAreaCompBin::clear_area_map() {
  area_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AreaBin >&
SceneAreaCompBin::area_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneAreaCompBin.area_map)
  return area_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AreaBin >*
SceneAreaCompBin::mutable_area_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneAreaCompBin.area_map)
  return area_map_.MutableMap();
}

// map<uint32, .proto.CityBin> city_map = 3;
int SceneAreaCompBin::city_map_size() const {
  return city_map_.size();
}
void SceneAreaCompBin::clear_city_map() {
  city_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CityBin >&
SceneAreaCompBin::city_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneAreaCompBin.city_map)
  return city_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CityBin >*
SceneAreaCompBin::mutable_city_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneAreaCompBin.city_map)
  return city_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneEncounterCompBin::kParentQuestIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneEncounterCompBin::SceneEncounterCompBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneEncounterCompBin)
}
SceneEncounterCompBin::SceneEncounterCompBin(const SceneEncounterCompBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      parent_quest_id_list_(from.parent_quest_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.SceneEncounterCompBin)
}

void SceneEncounterCompBin::SharedCtor() {
  _cached_size_ = 0;
}

SceneEncounterCompBin::~SceneEncounterCompBin() {
  // @@protoc_insertion_point(destructor:proto.SceneEncounterCompBin)
  SharedDtor();
}

void SceneEncounterCompBin::SharedDtor() {
}

void SceneEncounterCompBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneEncounterCompBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneEncounterCompBin& SceneEncounterCompBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneEncounterCompBin* SceneEncounterCompBin::New(::google::protobuf::Arena* arena) const {
  SceneEncounterCompBin* n = new SceneEncounterCompBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneEncounterCompBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneEncounterCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_quest_id_list_.Clear();
  _internal_metadata_.Clear();
}

bool SceneEncounterCompBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneEncounterCompBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 parent_quest_id_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_parent_quest_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_parent_quest_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneEncounterCompBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneEncounterCompBin)
  return false;
#undef DO_
}

void SceneEncounterCompBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneEncounterCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 parent_quest_id_list = 1;
  if (this->parent_quest_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _parent_quest_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->parent_quest_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->parent_quest_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneEncounterCompBin)
}

::google::protobuf::uint8* SceneEncounterCompBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneEncounterCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 parent_quest_id_list = 1;
  if (this->parent_quest_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _parent_quest_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->parent_quest_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneEncounterCompBin)
  return target;
}

size_t SceneEncounterCompBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneEncounterCompBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 parent_quest_id_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->parent_quest_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _parent_quest_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneEncounterCompBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneEncounterCompBin)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneEncounterCompBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneEncounterCompBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneEncounterCompBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneEncounterCompBin)
    MergeFrom(*source);
  }
}

void SceneEncounterCompBin::MergeFrom(const SceneEncounterCompBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneEncounterCompBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parent_quest_id_list_.MergeFrom(from.parent_quest_id_list_);
}

void SceneEncounterCompBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneEncounterCompBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneEncounterCompBin::CopyFrom(const SceneEncounterCompBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneEncounterCompBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneEncounterCompBin::IsInitialized() const {
  return true;
}

void SceneEncounterCompBin::Swap(SceneEncounterCompBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneEncounterCompBin::InternalSwap(SceneEncounterCompBin* other) {
  using std::swap;
  parent_quest_id_list_.InternalSwap(&other->parent_quest_id_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneEncounterCompBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneEncounterCompBin

// repeated uint32 parent_quest_id_list = 1;
int SceneEncounterCompBin::parent_quest_id_list_size() const {
  return parent_quest_id_list_.size();
}
void SceneEncounterCompBin::clear_parent_quest_id_list() {
  parent_quest_id_list_.Clear();
}
::google::protobuf::uint32 SceneEncounterCompBin::parent_quest_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneEncounterCompBin.parent_quest_id_list)
  return parent_quest_id_list_.Get(index);
}
void SceneEncounterCompBin::set_parent_quest_id_list(int index, ::google::protobuf::uint32 value) {
  parent_quest_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneEncounterCompBin.parent_quest_id_list)
}
void SceneEncounterCompBin::add_parent_quest_id_list(::google::protobuf::uint32 value) {
  parent_quest_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneEncounterCompBin.parent_quest_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneEncounterCompBin::parent_quest_id_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneEncounterCompBin.parent_quest_id_list)
  return parent_quest_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneEncounterCompBin::mutable_parent_quest_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneEncounterCompBin.parent_quest_id_list)
  return &parent_quest_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivitySceneBin::kIsOpenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivitySceneBin::ActivitySceneBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ActivitySceneBin)
}
ActivitySceneBin::ActivitySceneBin(const ActivitySceneBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_open_ = from.is_open_;
  // @@protoc_insertion_point(copy_constructor:proto.ActivitySceneBin)
}

void ActivitySceneBin::SharedCtor() {
  is_open_ = false;
  _cached_size_ = 0;
}

ActivitySceneBin::~ActivitySceneBin() {
  // @@protoc_insertion_point(destructor:proto.ActivitySceneBin)
  SharedDtor();
}

void ActivitySceneBin::SharedDtor() {
}

void ActivitySceneBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivitySceneBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivitySceneBin& ActivitySceneBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivitySceneBin* ActivitySceneBin::New(::google::protobuf::Arena* arena) const {
  ActivitySceneBin* n = new ActivitySceneBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivitySceneBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ActivitySceneBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_open_ = false;
  _internal_metadata_.Clear();
}

bool ActivitySceneBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ActivitySceneBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_open = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_open_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ActivitySceneBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ActivitySceneBin)
  return false;
#undef DO_
}

void ActivitySceneBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ActivitySceneBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_open = 1;
  if (this->is_open() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_open(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ActivitySceneBin)
}

::google::protobuf::uint8* ActivitySceneBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ActivitySceneBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_open = 1;
  if (this->is_open() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_open(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ActivitySceneBin)
  return target;
}

size_t ActivitySceneBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ActivitySceneBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_open = 1;
  if (this->is_open() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivitySceneBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ActivitySceneBin)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivitySceneBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivitySceneBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ActivitySceneBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ActivitySceneBin)
    MergeFrom(*source);
  }
}

void ActivitySceneBin::MergeFrom(const ActivitySceneBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ActivitySceneBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_open() != 0) {
    set_is_open(from.is_open());
  }
}

void ActivitySceneBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ActivitySceneBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivitySceneBin::CopyFrom(const ActivitySceneBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ActivitySceneBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivitySceneBin::IsInitialized() const {
  return true;
}

void ActivitySceneBin::Swap(ActivitySceneBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivitySceneBin::InternalSwap(ActivitySceneBin* other) {
  using std::swap;
  swap(is_open_, other->is_open_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivitySceneBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivitySceneBin

// bool is_open = 1;
void ActivitySceneBin::clear_is_open() {
  is_open_ = false;
}
bool ActivitySceneBin::is_open() const {
  // @@protoc_insertion_point(field_get:proto.ActivitySceneBin.is_open)
  return is_open_;
}
void ActivitySceneBin::set_is_open(bool value) {
  
  is_open_ = value;
  // @@protoc_insertion_point(field_set:proto.ActivitySceneBin.is_open)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneVehicleBin::kConfigIdFieldNumber;
const int SceneVehicleBin::kCurPosFieldNumber;
const int SceneVehicleBin::kCurRotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneVehicleBin::SceneVehicleBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneVehicleBin)
}
SceneVehicleBin::SceneVehicleBin(const SceneVehicleBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cur_pos()) {
    cur_pos_ = new ::proto::VectorBin(*from.cur_pos_);
  } else {
    cur_pos_ = NULL;
  }
  if (from.has_cur_rot()) {
    cur_rot_ = new ::proto::VectorBin(*from.cur_rot_);
  } else {
    cur_rot_ = NULL;
  }
  config_id_ = from.config_id_;
  // @@protoc_insertion_point(copy_constructor:proto.SceneVehicleBin)
}

void SceneVehicleBin::SharedCtor() {
  ::memset(&cur_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_id_) -
      reinterpret_cast<char*>(&cur_pos_)) + sizeof(config_id_));
  _cached_size_ = 0;
}

SceneVehicleBin::~SceneVehicleBin() {
  // @@protoc_insertion_point(destructor:proto.SceneVehicleBin)
  SharedDtor();
}

void SceneVehicleBin::SharedDtor() {
  if (this != internal_default_instance()) delete cur_pos_;
  if (this != internal_default_instance()) delete cur_rot_;
}

void SceneVehicleBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneVehicleBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneVehicleBin& SceneVehicleBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneVehicleBin* SceneVehicleBin::New(::google::protobuf::Arena* arena) const {
  SceneVehicleBin* n = new SceneVehicleBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneVehicleBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneVehicleBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && cur_pos_ != NULL) {
    delete cur_pos_;
  }
  cur_pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && cur_rot_ != NULL) {
    delete cur_rot_;
  }
  cur_rot_ = NULL;
  config_id_ = 0u;
  _internal_metadata_.Clear();
}

bool SceneVehicleBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneVehicleBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 config_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.VectorBin cur_pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cur_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.VectorBin cur_rot = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cur_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneVehicleBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneVehicleBin)
  return false;
#undef DO_
}

void SceneVehicleBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneVehicleBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 config_id = 1;
  if (this->config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->config_id(), output);
  }

  // .proto.VectorBin cur_pos = 2;
  if (this->has_cur_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->cur_pos_, output);
  }

  // .proto.VectorBin cur_rot = 3;
  if (this->has_cur_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->cur_rot_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneVehicleBin)
}

::google::protobuf::uint8* SceneVehicleBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneVehicleBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 config_id = 1;
  if (this->config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->config_id(), target);
  }

  // .proto.VectorBin cur_pos = 2;
  if (this->has_cur_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->cur_pos_, deterministic, target);
  }

  // .proto.VectorBin cur_rot = 3;
  if (this->has_cur_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->cur_rot_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneVehicleBin)
  return target;
}

size_t SceneVehicleBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneVehicleBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.VectorBin cur_pos = 2;
  if (this->has_cur_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cur_pos_);
  }

  // .proto.VectorBin cur_rot = 3;
  if (this->has_cur_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cur_rot_);
  }

  // uint32 config_id = 1;
  if (this->config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneVehicleBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneVehicleBin)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneVehicleBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneVehicleBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneVehicleBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneVehicleBin)
    MergeFrom(*source);
  }
}

void SceneVehicleBin::MergeFrom(const SceneVehicleBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneVehicleBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cur_pos()) {
    mutable_cur_pos()->::proto::VectorBin::MergeFrom(from.cur_pos());
  }
  if (from.has_cur_rot()) {
    mutable_cur_rot()->::proto::VectorBin::MergeFrom(from.cur_rot());
  }
  if (from.config_id() != 0) {
    set_config_id(from.config_id());
  }
}

void SceneVehicleBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneVehicleBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneVehicleBin::CopyFrom(const SceneVehicleBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneVehicleBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneVehicleBin::IsInitialized() const {
  return true;
}

void SceneVehicleBin::Swap(SceneVehicleBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneVehicleBin::InternalSwap(SceneVehicleBin* other) {
  using std::swap;
  swap(cur_pos_, other->cur_pos_);
  swap(cur_rot_, other->cur_rot_);
  swap(config_id_, other->config_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneVehicleBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneVehicleBin

// uint32 config_id = 1;
void SceneVehicleBin::clear_config_id() {
  config_id_ = 0u;
}
::google::protobuf::uint32 SceneVehicleBin::config_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneVehicleBin.config_id)
  return config_id_;
}
void SceneVehicleBin::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneVehicleBin.config_id)
}

// .proto.VectorBin cur_pos = 2;
bool SceneVehicleBin::has_cur_pos() const {
  return this != internal_default_instance() && cur_pos_ != NULL;
}
void SceneVehicleBin::clear_cur_pos() {
  if (GetArenaNoVirtual() == NULL && cur_pos_ != NULL) delete cur_pos_;
  cur_pos_ = NULL;
}
const ::proto::VectorBin& SceneVehicleBin::cur_pos() const {
  const ::proto::VectorBin* p = cur_pos_;
  // @@protoc_insertion_point(field_get:proto.SceneVehicleBin.cur_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
::proto::VectorBin* SceneVehicleBin::mutable_cur_pos() {
  
  if (cur_pos_ == NULL) {
    cur_pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneVehicleBin.cur_pos)
  return cur_pos_;
}
::proto::VectorBin* SceneVehicleBin::release_cur_pos() {
  // @@protoc_insertion_point(field_release:proto.SceneVehicleBin.cur_pos)
  
  ::proto::VectorBin* temp = cur_pos_;
  cur_pos_ = NULL;
  return temp;
}
void SceneVehicleBin::set_allocated_cur_pos(::proto::VectorBin* cur_pos) {
  delete cur_pos_;
  cur_pos_ = cur_pos;
  if (cur_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneVehicleBin.cur_pos)
}

// .proto.VectorBin cur_rot = 3;
bool SceneVehicleBin::has_cur_rot() const {
  return this != internal_default_instance() && cur_rot_ != NULL;
}
void SceneVehicleBin::clear_cur_rot() {
  if (GetArenaNoVirtual() == NULL && cur_rot_ != NULL) delete cur_rot_;
  cur_rot_ = NULL;
}
const ::proto::VectorBin& SceneVehicleBin::cur_rot() const {
  const ::proto::VectorBin* p = cur_rot_;
  // @@protoc_insertion_point(field_get:proto.SceneVehicleBin.cur_rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
::proto::VectorBin* SceneVehicleBin::mutable_cur_rot() {
  
  if (cur_rot_ == NULL) {
    cur_rot_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneVehicleBin.cur_rot)
  return cur_rot_;
}
::proto::VectorBin* SceneVehicleBin::release_cur_rot() {
  // @@protoc_insertion_point(field_release:proto.SceneVehicleBin.cur_rot)
  
  ::proto::VectorBin* temp = cur_rot_;
  cur_rot_ = NULL;
  return temp;
}
void SceneVehicleBin::set_allocated_cur_rot(::proto::VectorBin* cur_rot) {
  delete cur_rot_;
  cur_rot_ = cur_rot;
  if (cur_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneVehicleBin.cur_rot)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneTagOp::kIdFieldNumber;
const int SceneTagOp::kOpTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneTagOp::SceneTagOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneTagOp)
}
SceneTagOp::SceneTagOp(const SceneTagOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&op_type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(op_type_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneTagOp)
}

void SceneTagOp::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(op_type_));
  _cached_size_ = 0;
}

SceneTagOp::~SceneTagOp() {
  // @@protoc_insertion_point(destructor:proto.SceneTagOp)
  SharedDtor();
}

void SceneTagOp::SharedDtor() {
}

void SceneTagOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneTagOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneTagOp& SceneTagOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneTagOp* SceneTagOp::New(::google::protobuf::Arena* arena) const {
  SceneTagOp* n = new SceneTagOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneTagOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneTagOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(op_type_));
  _internal_metadata_.Clear();
}

bool SceneTagOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneTagOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SceneTagOpType op_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::proto::SceneTagOpType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneTagOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneTagOp)
  return false;
#undef DO_
}

void SceneTagOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneTagOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // .proto.SceneTagOpType op_type = 2;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->op_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneTagOp)
}

::google::protobuf::uint8* SceneTagOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneTagOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // .proto.SceneTagOpType op_type = 2;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->op_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneTagOp)
  return target;
}

size_t SceneTagOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneTagOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // .proto.SceneTagOpType op_type = 2;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneTagOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneTagOp)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneTagOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneTagOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneTagOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneTagOp)
    MergeFrom(*source);
  }
}

void SceneTagOp::MergeFrom(const SceneTagOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneTagOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
}

void SceneTagOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneTagOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneTagOp::CopyFrom(const SceneTagOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneTagOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneTagOp::IsInitialized() const {
  return true;
}

void SceneTagOp::Swap(SceneTagOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneTagOp::InternalSwap(SceneTagOp* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(op_type_, other->op_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneTagOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneTagOp

// uint32 id = 1;
void SceneTagOp::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 SceneTagOp::id() const {
  // @@protoc_insertion_point(field_get:proto.SceneTagOp.id)
  return id_;
}
void SceneTagOp::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTagOp.id)
}

// .proto.SceneTagOpType op_type = 2;
void SceneTagOp::clear_op_type() {
  op_type_ = 0;
}
::proto::SceneTagOpType SceneTagOp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneTagOp.op_type)
  return static_cast< ::proto::SceneTagOpType >(op_type_);
}
void SceneTagOp::set_op_type(::proto::SceneTagOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTagOp.op_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WayPoint::kPointIdFieldNumber;
const int WayPoint::kActivateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WayPoint::WayPoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WayPoint)
}
WayPoint::WayPoint(const WayPoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&point_id_, &from.point_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&activate_time_) -
    reinterpret_cast<char*>(&point_id_)) + sizeof(activate_time_));
  // @@protoc_insertion_point(copy_constructor:proto.WayPoint)
}

void WayPoint::SharedCtor() {
  ::memset(&point_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&activate_time_) -
      reinterpret_cast<char*>(&point_id_)) + sizeof(activate_time_));
  _cached_size_ = 0;
}

WayPoint::~WayPoint() {
  // @@protoc_insertion_point(destructor:proto.WayPoint)
  SharedDtor();
}

void WayPoint::SharedDtor() {
}

void WayPoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WayPoint::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WayPoint& WayPoint::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

WayPoint* WayPoint::New(::google::protobuf::Arena* arena) const {
  WayPoint* n = new WayPoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WayPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WayPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&point_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&activate_time_) -
      reinterpret_cast<char*>(&point_id_)) + sizeof(activate_time_));
  _internal_metadata_.Clear();
}

bool WayPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WayPoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 point_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &point_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 activate_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &activate_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WayPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WayPoint)
  return false;
#undef DO_
}

void WayPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WayPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 point_id = 1;
  if (this->point_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->point_id(), output);
  }

  // uint32 activate_time = 2;
  if (this->activate_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->activate_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WayPoint)
}

::google::protobuf::uint8* WayPoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WayPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 point_id = 1;
  if (this->point_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->point_id(), target);
  }

  // uint32 activate_time = 2;
  if (this->activate_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->activate_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WayPoint)
  return target;
}

size_t WayPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WayPoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 point_id = 1;
  if (this->point_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->point_id());
  }

  // uint32 activate_time = 2;
  if (this->activate_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->activate_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WayPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WayPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const WayPoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WayPoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WayPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WayPoint)
    MergeFrom(*source);
  }
}

void WayPoint::MergeFrom(const WayPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WayPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.point_id() != 0) {
    set_point_id(from.point_id());
  }
  if (from.activate_time() != 0) {
    set_activate_time(from.activate_time());
  }
}

void WayPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WayPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WayPoint::CopyFrom(const WayPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WayPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WayPoint::IsInitialized() const {
  return true;
}

void WayPoint::Swap(WayPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WayPoint::InternalSwap(WayPoint* other) {
  using std::swap;
  swap(point_id_, other->point_id_);
  swap(activate_time_, other->activate_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WayPoint::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WayPoint

// uint32 point_id = 1;
void WayPoint::clear_point_id() {
  point_id_ = 0u;
}
::google::protobuf::uint32 WayPoint::point_id() const {
  // @@protoc_insertion_point(field_get:proto.WayPoint.point_id)
  return point_id_;
}
void WayPoint::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WayPoint.point_id)
}

// uint32 activate_time = 2;
void WayPoint::clear_activate_time() {
  activate_time_ = 0u;
}
::google::protobuf::uint32 WayPoint::activate_time() const {
  // @@protoc_insertion_point(field_get:proto.WayPoint.activate_time)
  return activate_time_;
}
void WayPoint::set_activate_time(::google::protobuf::uint32 value) {
  
  activate_time_ = value;
  // @@protoc_insertion_point(field_set:proto.WayPoint.activate_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DungeonSceneBin::kActivatedWayPointListFieldNumber;
const int DungeonSceneBin::kActivatedSlipReviveListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DungeonSceneBin::DungeonSceneBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DungeonSceneBin)
}
DungeonSceneBin::DungeonSceneBin(const DungeonSceneBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      activated_way_point_list_(from.activated_way_point_list_),
      activated_slip_revive_list_(from.activated_slip_revive_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.DungeonSceneBin)
}

void DungeonSceneBin::SharedCtor() {
  _cached_size_ = 0;
}

DungeonSceneBin::~DungeonSceneBin() {
  // @@protoc_insertion_point(destructor:proto.DungeonSceneBin)
  SharedDtor();
}

void DungeonSceneBin::SharedDtor() {
}

void DungeonSceneBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DungeonSceneBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DungeonSceneBin& DungeonSceneBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

DungeonSceneBin* DungeonSceneBin::New(::google::protobuf::Arena* arena) const {
  DungeonSceneBin* n = new DungeonSceneBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DungeonSceneBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DungeonSceneBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  activated_way_point_list_.Clear();
  activated_slip_revive_list_.Clear();
  _internal_metadata_.Clear();
}

bool DungeonSceneBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DungeonSceneBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.WayPoint activated_way_point_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_activated_way_point_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.WayPoint activated_slip_revive_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_activated_slip_revive_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DungeonSceneBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DungeonSceneBin)
  return false;
#undef DO_
}

void DungeonSceneBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DungeonSceneBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.WayPoint activated_way_point_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->activated_way_point_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->activated_way_point_list(static_cast<int>(i)), output);
  }

  // repeated .proto.WayPoint activated_slip_revive_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->activated_slip_revive_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->activated_slip_revive_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DungeonSceneBin)
}

::google::protobuf::uint8* DungeonSceneBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DungeonSceneBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.WayPoint activated_way_point_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->activated_way_point_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->activated_way_point_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.WayPoint activated_slip_revive_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->activated_slip_revive_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->activated_slip_revive_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DungeonSceneBin)
  return target;
}

size_t DungeonSceneBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DungeonSceneBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.WayPoint activated_way_point_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->activated_way_point_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->activated_way_point_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.WayPoint activated_slip_revive_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->activated_slip_revive_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->activated_slip_revive_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DungeonSceneBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DungeonSceneBin)
  GOOGLE_DCHECK_NE(&from, this);
  const DungeonSceneBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DungeonSceneBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DungeonSceneBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DungeonSceneBin)
    MergeFrom(*source);
  }
}

void DungeonSceneBin::MergeFrom(const DungeonSceneBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DungeonSceneBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  activated_way_point_list_.MergeFrom(from.activated_way_point_list_);
  activated_slip_revive_list_.MergeFrom(from.activated_slip_revive_list_);
}

void DungeonSceneBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DungeonSceneBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DungeonSceneBin::CopyFrom(const DungeonSceneBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DungeonSceneBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DungeonSceneBin::IsInitialized() const {
  return true;
}

void DungeonSceneBin::Swap(DungeonSceneBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DungeonSceneBin::InternalSwap(DungeonSceneBin* other) {
  using std::swap;
  activated_way_point_list_.InternalSwap(&other->activated_way_point_list_);
  activated_slip_revive_list_.InternalSwap(&other->activated_slip_revive_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DungeonSceneBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DungeonSceneBin

// repeated .proto.WayPoint activated_way_point_list = 1;
int DungeonSceneBin::activated_way_point_list_size() const {
  return activated_way_point_list_.size();
}
void DungeonSceneBin::clear_activated_way_point_list() {
  activated_way_point_list_.Clear();
}
const ::proto::WayPoint& DungeonSceneBin::activated_way_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.DungeonSceneBin.activated_way_point_list)
  return activated_way_point_list_.Get(index);
}
::proto::WayPoint* DungeonSceneBin::mutable_activated_way_point_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.DungeonSceneBin.activated_way_point_list)
  return activated_way_point_list_.Mutable(index);
}
::proto::WayPoint* DungeonSceneBin::add_activated_way_point_list() {
  // @@protoc_insertion_point(field_add:proto.DungeonSceneBin.activated_way_point_list)
  return activated_way_point_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::WayPoint >*
DungeonSceneBin::mutable_activated_way_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.DungeonSceneBin.activated_way_point_list)
  return &activated_way_point_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::WayPoint >&
DungeonSceneBin::activated_way_point_list() const {
  // @@protoc_insertion_point(field_list:proto.DungeonSceneBin.activated_way_point_list)
  return activated_way_point_list_;
}

// repeated .proto.WayPoint activated_slip_revive_list = 2;
int DungeonSceneBin::activated_slip_revive_list_size() const {
  return activated_slip_revive_list_.size();
}
void DungeonSceneBin::clear_activated_slip_revive_list() {
  activated_slip_revive_list_.Clear();
}
const ::proto::WayPoint& DungeonSceneBin::activated_slip_revive_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.DungeonSceneBin.activated_slip_revive_list)
  return activated_slip_revive_list_.Get(index);
}
::proto::WayPoint* DungeonSceneBin::mutable_activated_slip_revive_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.DungeonSceneBin.activated_slip_revive_list)
  return activated_slip_revive_list_.Mutable(index);
}
::proto::WayPoint* DungeonSceneBin::add_activated_slip_revive_list() {
  // @@protoc_insertion_point(field_add:proto.DungeonSceneBin.activated_slip_revive_list)
  return activated_slip_revive_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::WayPoint >*
DungeonSceneBin::mutable_activated_slip_revive_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.DungeonSceneBin.activated_slip_revive_list)
  return &activated_slip_revive_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::WayPoint >&
DungeonSceneBin::activated_slip_revive_list() const {
  // @@protoc_insertion_point(field_list:proto.DungeonSceneBin.activated_slip_revive_list)
  return activated_slip_revive_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneBin::kUnlockedPointListFieldNumber;
const int SceneBin::kUnlockedForceListFieldNumber;
const int SceneBin::kLockedPointListFieldNumber;
const int SceneBin::kAllWeatherInfoFieldNumber;
const int SceneBin::kOwnerPlayerLocationFieldNumber;
const int SceneBin::kBlockGroupBinFieldNumber;
const int SceneBin::kEnvAnimalBinFieldNumber;
const int SceneBin::kAreaCompBinFieldNumber;
const int SceneBin::kEncounterCompBinFieldNumber;
const int SceneBin::kLastSpringRecoverTimeMsFieldNumber;
const int SceneBin::kGroupUnlimitPointListFieldNumber;
const int SceneBin::kInteractedToBeExploredPointListFieldNumber;
const int SceneBin::kCurSpringVolumeFieldNumber;
const int SceneBin::kIsLockedFieldNumber;
const int SceneBin::kVehicleListFieldNumber;
const int SceneBin::kSceneTagOpListFieldNumber;
const int SceneBin::kHidePointListFieldNumber;
const int SceneBin::kUnhidePointListFieldNumber;
const int SceneBin::kActivitySceneBinFieldNumber;
const int SceneBin::kDungeonSceneBinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneBin::SceneBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneBin)
}
SceneBin::SceneBin(const SceneBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      unlocked_point_list_(from.unlocked_point_list_),
      unlocked_force_list_(from.unlocked_force_list_),
      locked_point_list_(from.locked_point_list_),
      group_unlimit_point_list_(from.group_unlimit_point_list_),
      interacted_to_be_explored_point_list_(from.interacted_to_be_explored_point_list_),
      vehicle_list_(from.vehicle_list_),
      scene_tag_op_list_(from.scene_tag_op_list_),
      hide_point_list_(from.hide_point_list_),
      unhide_point_list_(from.unhide_point_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_all_weather_info()) {
    all_weather_info_ = new ::proto::SceneAllWeatherInfoBin(*from.all_weather_info_);
  } else {
    all_weather_info_ = NULL;
  }
  if (from.has_owner_player_location()) {
    owner_player_location_ = new ::proto::ScenePlayerLocationBin(*from.owner_player_location_);
  } else {
    owner_player_location_ = NULL;
  }
  if (from.has_block_group_bin()) {
    block_group_bin_ = new ::proto::SceneBlockGroupCompBin(*from.block_group_bin_);
  } else {
    block_group_bin_ = NULL;
  }
  if (from.has_env_animal_bin()) {
    env_animal_bin_ = new ::proto::SceneEnvAnimalCompBin(*from.env_animal_bin_);
  } else {
    env_animal_bin_ = NULL;
  }
  if (from.has_area_comp_bin()) {
    area_comp_bin_ = new ::proto::SceneAreaCompBin(*from.area_comp_bin_);
  } else {
    area_comp_bin_ = NULL;
  }
  if (from.has_encounter_comp_bin()) {
    encounter_comp_bin_ = new ::proto::SceneEncounterCompBin(*from.encounter_comp_bin_);
  } else {
    encounter_comp_bin_ = NULL;
  }
  ::memcpy(&last_spring_recover_time_ms_, &from.last_spring_recover_time_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_locked_) -
    reinterpret_cast<char*>(&last_spring_recover_time_ms_)) + sizeof(is_locked_));
  clear_has_detail();
  switch (from.detail_case()) {
    case kActivitySceneBin: {
      mutable_activity_scene_bin()->::proto::ActivitySceneBin::MergeFrom(from.activity_scene_bin());
      break;
    }
    case kDungeonSceneBin: {
      mutable_dungeon_scene_bin()->::proto::DungeonSceneBin::MergeFrom(from.dungeon_scene_bin());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.SceneBin)
}

void SceneBin::SharedCtor() {
  ::memset(&all_weather_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_locked_) -
      reinterpret_cast<char*>(&all_weather_info_)) + sizeof(is_locked_));
  clear_has_detail();
  _cached_size_ = 0;
}

SceneBin::~SceneBin() {
  // @@protoc_insertion_point(destructor:proto.SceneBin)
  SharedDtor();
}

void SceneBin::SharedDtor() {
  if (this != internal_default_instance()) delete all_weather_info_;
  if (this != internal_default_instance()) delete owner_player_location_;
  if (this != internal_default_instance()) delete block_group_bin_;
  if (this != internal_default_instance()) delete env_animal_bin_;
  if (this != internal_default_instance()) delete area_comp_bin_;
  if (this != internal_default_instance()) delete encounter_comp_bin_;
  if (has_detail()) {
    clear_detail();
  }
}

void SceneBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneBin& SceneBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneBin* SceneBin::New(::google::protobuf::Arena* arena) const {
  SceneBin* n = new SceneBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneBin::clear_detail() {
// @@protoc_insertion_point(one_of_clear_start:proto.SceneBin)
  switch (detail_case()) {
    case kActivitySceneBin: {
      delete detail_.activity_scene_bin_;
      break;
    }
    case kDungeonSceneBin: {
      delete detail_.dungeon_scene_bin_;
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DETAIL_NOT_SET;
}


void SceneBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unlocked_point_list_.Clear();
  unlocked_force_list_.Clear();
  locked_point_list_.Clear();
  group_unlimit_point_list_.Clear();
  interacted_to_be_explored_point_list_.Clear();
  vehicle_list_.Clear();
  scene_tag_op_list_.Clear();
  hide_point_list_.Clear();
  unhide_point_list_.Clear();
  if (GetArenaNoVirtual() == NULL && all_weather_info_ != NULL) {
    delete all_weather_info_;
  }
  all_weather_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && owner_player_location_ != NULL) {
    delete owner_player_location_;
  }
  owner_player_location_ = NULL;
  if (GetArenaNoVirtual() == NULL && block_group_bin_ != NULL) {
    delete block_group_bin_;
  }
  block_group_bin_ = NULL;
  if (GetArenaNoVirtual() == NULL && env_animal_bin_ != NULL) {
    delete env_animal_bin_;
  }
  env_animal_bin_ = NULL;
  if (GetArenaNoVirtual() == NULL && area_comp_bin_ != NULL) {
    delete area_comp_bin_;
  }
  area_comp_bin_ = NULL;
  if (GetArenaNoVirtual() == NULL && encounter_comp_bin_ != NULL) {
    delete encounter_comp_bin_;
  }
  encounter_comp_bin_ = NULL;
  ::memset(&last_spring_recover_time_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_locked_) -
      reinterpret_cast<char*>(&last_spring_recover_time_ms_)) + sizeof(is_locked_));
  clear_detail();
  _internal_metadata_.Clear();
}

bool SceneBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 unlocked_point_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_unlocked_point_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_unlocked_point_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 unlocked_force_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_unlocked_force_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_unlocked_force_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 locked_point_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_locked_point_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_locked_point_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SceneAllWeatherInfoBin all_weather_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_all_weather_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ScenePlayerLocationBin owner_player_location = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_owner_player_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SceneBlockGroupCompBin block_group_bin = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_block_group_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SceneEnvAnimalCompBin env_animal_bin = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_env_animal_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SceneAreaCompBin area_comp_bin = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_area_comp_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SceneEncounterCompBin encounter_comp_bin = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_encounter_comp_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 last_spring_recover_time_ms = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &last_spring_recover_time_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 group_unlimit_point_list = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_group_unlimit_point_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 90u, input, this->mutable_group_unlimit_point_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 interacted_to_be_explored_point_list = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_interacted_to_be_explored_point_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 98u, input, this->mutable_interacted_to_be_explored_point_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float cur_spring_volume = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cur_spring_volume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_locked = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_locked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.SceneVehicleBin vehicle_list = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_vehicle_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.SceneTagOp scene_tag_op_list = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_scene_tag_op_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 hide_point_list = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_hide_point_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 138u, input, this->mutable_hide_point_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 unhide_point_list = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_unhide_point_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 146u, input, this->mutable_unhide_point_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ActivitySceneBin activity_scene_bin = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_activity_scene_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.DungeonSceneBin dungeon_scene_bin = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 818 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dungeon_scene_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneBin)
  return false;
#undef DO_
}

void SceneBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 unlocked_point_list = 1;
  if (this->unlocked_point_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _unlocked_point_list_cached_byte_size_));
  }
  for (int i = 0, n = this->unlocked_point_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->unlocked_point_list(i), output);
  }

  // repeated uint32 unlocked_force_list = 2;
  if (this->unlocked_force_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _unlocked_force_list_cached_byte_size_));
  }
  for (int i = 0, n = this->unlocked_force_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->unlocked_force_list(i), output);
  }

  // repeated uint32 locked_point_list = 3;
  if (this->locked_point_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _locked_point_list_cached_byte_size_));
  }
  for (int i = 0, n = this->locked_point_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->locked_point_list(i), output);
  }

  // .proto.SceneAllWeatherInfoBin all_weather_info = 4;
  if (this->has_all_weather_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->all_weather_info_, output);
  }

  // .proto.ScenePlayerLocationBin owner_player_location = 5;
  if (this->has_owner_player_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->owner_player_location_, output);
  }

  // .proto.SceneBlockGroupCompBin block_group_bin = 6;
  if (this->has_block_group_bin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->block_group_bin_, output);
  }

  // .proto.SceneEnvAnimalCompBin env_animal_bin = 7;
  if (this->has_env_animal_bin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->env_animal_bin_, output);
  }

  // .proto.SceneAreaCompBin area_comp_bin = 8;
  if (this->has_area_comp_bin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->area_comp_bin_, output);
  }

  // .proto.SceneEncounterCompBin encounter_comp_bin = 9;
  if (this->has_encounter_comp_bin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->encounter_comp_bin_, output);
  }

  // uint64 last_spring_recover_time_ms = 10;
  if (this->last_spring_recover_time_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->last_spring_recover_time_ms(), output);
  }

  // repeated uint32 group_unlimit_point_list = 11;
  if (this->group_unlimit_point_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _group_unlimit_point_list_cached_byte_size_));
  }
  for (int i = 0, n = this->group_unlimit_point_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->group_unlimit_point_list(i), output);
  }

  // repeated uint32 interacted_to_be_explored_point_list = 12;
  if (this->interacted_to_be_explored_point_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _interacted_to_be_explored_point_list_cached_byte_size_));
  }
  for (int i = 0, n = this->interacted_to_be_explored_point_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->interacted_to_be_explored_point_list(i), output);
  }

  // float cur_spring_volume = 13;
  if (this->cur_spring_volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->cur_spring_volume(), output);
  }

  // bool is_locked = 14;
  if (this->is_locked() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->is_locked(), output);
  }

  // repeated .proto.SceneVehicleBin vehicle_list = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vehicle_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->vehicle_list(static_cast<int>(i)), output);
  }

  // repeated .proto.SceneTagOp scene_tag_op_list = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->scene_tag_op_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->scene_tag_op_list(static_cast<int>(i)), output);
  }

  // repeated uint32 hide_point_list = 17;
  if (this->hide_point_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(17, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _hide_point_list_cached_byte_size_));
  }
  for (int i = 0, n = this->hide_point_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->hide_point_list(i), output);
  }

  // repeated uint32 unhide_point_list = 18;
  if (this->unhide_point_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(18, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _unhide_point_list_cached_byte_size_));
  }
  for (int i = 0, n = this->unhide_point_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->unhide_point_list(i), output);
  }

  // .proto.ActivitySceneBin activity_scene_bin = 101;
  if (has_activity_scene_bin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101, *detail_.activity_scene_bin_, output);
  }

  // .proto.DungeonSceneBin dungeon_scene_bin = 102;
  if (has_dungeon_scene_bin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      102, *detail_.dungeon_scene_bin_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneBin)
}

::google::protobuf::uint8* SceneBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 unlocked_point_list = 1;
  if (this->unlocked_point_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _unlocked_point_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->unlocked_point_list_, target);
  }

  // repeated uint32 unlocked_force_list = 2;
  if (this->unlocked_force_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _unlocked_force_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->unlocked_force_list_, target);
  }

  // repeated uint32 locked_point_list = 3;
  if (this->locked_point_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _locked_point_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->locked_point_list_, target);
  }

  // .proto.SceneAllWeatherInfoBin all_weather_info = 4;
  if (this->has_all_weather_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->all_weather_info_, deterministic, target);
  }

  // .proto.ScenePlayerLocationBin owner_player_location = 5;
  if (this->has_owner_player_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->owner_player_location_, deterministic, target);
  }

  // .proto.SceneBlockGroupCompBin block_group_bin = 6;
  if (this->has_block_group_bin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->block_group_bin_, deterministic, target);
  }

  // .proto.SceneEnvAnimalCompBin env_animal_bin = 7;
  if (this->has_env_animal_bin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->env_animal_bin_, deterministic, target);
  }

  // .proto.SceneAreaCompBin area_comp_bin = 8;
  if (this->has_area_comp_bin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->area_comp_bin_, deterministic, target);
  }

  // .proto.SceneEncounterCompBin encounter_comp_bin = 9;
  if (this->has_encounter_comp_bin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->encounter_comp_bin_, deterministic, target);
  }

  // uint64 last_spring_recover_time_ms = 10;
  if (this->last_spring_recover_time_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->last_spring_recover_time_ms(), target);
  }

  // repeated uint32 group_unlimit_point_list = 11;
  if (this->group_unlimit_point_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _group_unlimit_point_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->group_unlimit_point_list_, target);
  }

  // repeated uint32 interacted_to_be_explored_point_list = 12;
  if (this->interacted_to_be_explored_point_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _interacted_to_be_explored_point_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->interacted_to_be_explored_point_list_, target);
  }

  // float cur_spring_volume = 13;
  if (this->cur_spring_volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->cur_spring_volume(), target);
  }

  // bool is_locked = 14;
  if (this->is_locked() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->is_locked(), target);
  }

  // repeated .proto.SceneVehicleBin vehicle_list = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vehicle_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, this->vehicle_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.SceneTagOp scene_tag_op_list = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->scene_tag_op_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, this->scene_tag_op_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 hide_point_list = 17;
  if (this->hide_point_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      17,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _hide_point_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->hide_point_list_, target);
  }

  // repeated uint32 unhide_point_list = 18;
  if (this->unhide_point_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      18,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _unhide_point_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->unhide_point_list_, target);
  }

  // .proto.ActivitySceneBin activity_scene_bin = 101;
  if (has_activity_scene_bin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        101, *detail_.activity_scene_bin_, deterministic, target);
  }

  // .proto.DungeonSceneBin dungeon_scene_bin = 102;
  if (has_dungeon_scene_bin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        102, *detail_.dungeon_scene_bin_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneBin)
  return target;
}

size_t SceneBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 unlocked_point_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->unlocked_point_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unlocked_point_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 unlocked_force_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->unlocked_force_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unlocked_force_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 locked_point_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->locked_point_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _locked_point_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 group_unlimit_point_list = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->group_unlimit_point_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _group_unlimit_point_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 interacted_to_be_explored_point_list = 12;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->interacted_to_be_explored_point_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _interacted_to_be_explored_point_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.SceneVehicleBin vehicle_list = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->vehicle_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->vehicle_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.SceneTagOp scene_tag_op_list = 16;
  {
    unsigned int count = static_cast<unsigned int>(this->scene_tag_op_list_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->scene_tag_op_list(static_cast<int>(i)));
    }
  }

  // repeated uint32 hide_point_list = 17;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->hide_point_list_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _hide_point_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 unhide_point_list = 18;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->unhide_point_list_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unhide_point_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .proto.SceneAllWeatherInfoBin all_weather_info = 4;
  if (this->has_all_weather_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->all_weather_info_);
  }

  // .proto.ScenePlayerLocationBin owner_player_location = 5;
  if (this->has_owner_player_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->owner_player_location_);
  }

  // .proto.SceneBlockGroupCompBin block_group_bin = 6;
  if (this->has_block_group_bin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->block_group_bin_);
  }

  // .proto.SceneEnvAnimalCompBin env_animal_bin = 7;
  if (this->has_env_animal_bin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->env_animal_bin_);
  }

  // .proto.SceneAreaCompBin area_comp_bin = 8;
  if (this->has_area_comp_bin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->area_comp_bin_);
  }

  // .proto.SceneEncounterCompBin encounter_comp_bin = 9;
  if (this->has_encounter_comp_bin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->encounter_comp_bin_);
  }

  // uint64 last_spring_recover_time_ms = 10;
  if (this->last_spring_recover_time_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->last_spring_recover_time_ms());
  }

  // float cur_spring_volume = 13;
  if (this->cur_spring_volume() != 0) {
    total_size += 1 + 4;
  }

  // bool is_locked = 14;
  if (this->is_locked() != 0) {
    total_size += 1 + 1;
  }

  switch (detail_case()) {
    // .proto.ActivitySceneBin activity_scene_bin = 101;
    case kActivitySceneBin: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.activity_scene_bin_);
      break;
    }
    // .proto.DungeonSceneBin dungeon_scene_bin = 102;
    case kDungeonSceneBin: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.dungeon_scene_bin_);
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneBin)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneBin)
    MergeFrom(*source);
  }
}

void SceneBin::MergeFrom(const SceneBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  unlocked_point_list_.MergeFrom(from.unlocked_point_list_);
  unlocked_force_list_.MergeFrom(from.unlocked_force_list_);
  locked_point_list_.MergeFrom(from.locked_point_list_);
  group_unlimit_point_list_.MergeFrom(from.group_unlimit_point_list_);
  interacted_to_be_explored_point_list_.MergeFrom(from.interacted_to_be_explored_point_list_);
  vehicle_list_.MergeFrom(from.vehicle_list_);
  scene_tag_op_list_.MergeFrom(from.scene_tag_op_list_);
  hide_point_list_.MergeFrom(from.hide_point_list_);
  unhide_point_list_.MergeFrom(from.unhide_point_list_);
  if (from.has_all_weather_info()) {
    mutable_all_weather_info()->::proto::SceneAllWeatherInfoBin::MergeFrom(from.all_weather_info());
  }
  if (from.has_owner_player_location()) {
    mutable_owner_player_location()->::proto::ScenePlayerLocationBin::MergeFrom(from.owner_player_location());
  }
  if (from.has_block_group_bin()) {
    mutable_block_group_bin()->::proto::SceneBlockGroupCompBin::MergeFrom(from.block_group_bin());
  }
  if (from.has_env_animal_bin()) {
    mutable_env_animal_bin()->::proto::SceneEnvAnimalCompBin::MergeFrom(from.env_animal_bin());
  }
  if (from.has_area_comp_bin()) {
    mutable_area_comp_bin()->::proto::SceneAreaCompBin::MergeFrom(from.area_comp_bin());
  }
  if (from.has_encounter_comp_bin()) {
    mutable_encounter_comp_bin()->::proto::SceneEncounterCompBin::MergeFrom(from.encounter_comp_bin());
  }
  if (from.last_spring_recover_time_ms() != 0) {
    set_last_spring_recover_time_ms(from.last_spring_recover_time_ms());
  }
  if (from.cur_spring_volume() != 0) {
    set_cur_spring_volume(from.cur_spring_volume());
  }
  if (from.is_locked() != 0) {
    set_is_locked(from.is_locked());
  }
  switch (from.detail_case()) {
    case kActivitySceneBin: {
      mutable_activity_scene_bin()->::proto::ActivitySceneBin::MergeFrom(from.activity_scene_bin());
      break;
    }
    case kDungeonSceneBin: {
      mutable_dungeon_scene_bin()->::proto::DungeonSceneBin::MergeFrom(from.dungeon_scene_bin());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
}

void SceneBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneBin::CopyFrom(const SceneBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneBin::IsInitialized() const {
  return true;
}

void SceneBin::Swap(SceneBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneBin::InternalSwap(SceneBin* other) {
  using std::swap;
  unlocked_point_list_.InternalSwap(&other->unlocked_point_list_);
  unlocked_force_list_.InternalSwap(&other->unlocked_force_list_);
  locked_point_list_.InternalSwap(&other->locked_point_list_);
  group_unlimit_point_list_.InternalSwap(&other->group_unlimit_point_list_);
  interacted_to_be_explored_point_list_.InternalSwap(&other->interacted_to_be_explored_point_list_);
  vehicle_list_.InternalSwap(&other->vehicle_list_);
  scene_tag_op_list_.InternalSwap(&other->scene_tag_op_list_);
  hide_point_list_.InternalSwap(&other->hide_point_list_);
  unhide_point_list_.InternalSwap(&other->unhide_point_list_);
  swap(all_weather_info_, other->all_weather_info_);
  swap(owner_player_location_, other->owner_player_location_);
  swap(block_group_bin_, other->block_group_bin_);
  swap(env_animal_bin_, other->env_animal_bin_);
  swap(area_comp_bin_, other->area_comp_bin_);
  swap(encounter_comp_bin_, other->encounter_comp_bin_);
  swap(last_spring_recover_time_ms_, other->last_spring_recover_time_ms_);
  swap(cur_spring_volume_, other->cur_spring_volume_);
  swap(is_locked_, other->is_locked_);
  swap(detail_, other->detail_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneBin

// repeated uint32 unlocked_point_list = 1;
int SceneBin::unlocked_point_list_size() const {
  return unlocked_point_list_.size();
}
void SceneBin::clear_unlocked_point_list() {
  unlocked_point_list_.Clear();
}
::google::protobuf::uint32 SceneBin::unlocked_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.unlocked_point_list)
  return unlocked_point_list_.Get(index);
}
void SceneBin::set_unlocked_point_list(int index, ::google::protobuf::uint32 value) {
  unlocked_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneBin.unlocked_point_list)
}
void SceneBin::add_unlocked_point_list(::google::protobuf::uint32 value) {
  unlocked_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneBin.unlocked_point_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneBin::unlocked_point_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneBin.unlocked_point_list)
  return unlocked_point_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneBin::mutable_unlocked_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneBin.unlocked_point_list)
  return &unlocked_point_list_;
}

// repeated uint32 unlocked_force_list = 2;
int SceneBin::unlocked_force_list_size() const {
  return unlocked_force_list_.size();
}
void SceneBin::clear_unlocked_force_list() {
  unlocked_force_list_.Clear();
}
::google::protobuf::uint32 SceneBin::unlocked_force_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.unlocked_force_list)
  return unlocked_force_list_.Get(index);
}
void SceneBin::set_unlocked_force_list(int index, ::google::protobuf::uint32 value) {
  unlocked_force_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneBin.unlocked_force_list)
}
void SceneBin::add_unlocked_force_list(::google::protobuf::uint32 value) {
  unlocked_force_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneBin.unlocked_force_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneBin::unlocked_force_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneBin.unlocked_force_list)
  return unlocked_force_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneBin::mutable_unlocked_force_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneBin.unlocked_force_list)
  return &unlocked_force_list_;
}

// repeated uint32 locked_point_list = 3;
int SceneBin::locked_point_list_size() const {
  return locked_point_list_.size();
}
void SceneBin::clear_locked_point_list() {
  locked_point_list_.Clear();
}
::google::protobuf::uint32 SceneBin::locked_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.locked_point_list)
  return locked_point_list_.Get(index);
}
void SceneBin::set_locked_point_list(int index, ::google::protobuf::uint32 value) {
  locked_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneBin.locked_point_list)
}
void SceneBin::add_locked_point_list(::google::protobuf::uint32 value) {
  locked_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneBin.locked_point_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneBin::locked_point_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneBin.locked_point_list)
  return locked_point_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneBin::mutable_locked_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneBin.locked_point_list)
  return &locked_point_list_;
}

// .proto.SceneAllWeatherInfoBin all_weather_info = 4;
bool SceneBin::has_all_weather_info() const {
  return this != internal_default_instance() && all_weather_info_ != NULL;
}
void SceneBin::clear_all_weather_info() {
  if (GetArenaNoVirtual() == NULL && all_weather_info_ != NULL) delete all_weather_info_;
  all_weather_info_ = NULL;
}
const ::proto::SceneAllWeatherInfoBin& SceneBin::all_weather_info() const {
  const ::proto::SceneAllWeatherInfoBin* p = all_weather_info_;
  // @@protoc_insertion_point(field_get:proto.SceneBin.all_weather_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SceneAllWeatherInfoBin*>(
      &::proto::_SceneAllWeatherInfoBin_default_instance_);
}
::proto::SceneAllWeatherInfoBin* SceneBin::mutable_all_weather_info() {
  
  if (all_weather_info_ == NULL) {
    all_weather_info_ = new ::proto::SceneAllWeatherInfoBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneBin.all_weather_info)
  return all_weather_info_;
}
::proto::SceneAllWeatherInfoBin* SceneBin::release_all_weather_info() {
  // @@protoc_insertion_point(field_release:proto.SceneBin.all_weather_info)
  
  ::proto::SceneAllWeatherInfoBin* temp = all_weather_info_;
  all_weather_info_ = NULL;
  return temp;
}
void SceneBin::set_allocated_all_weather_info(::proto::SceneAllWeatherInfoBin* all_weather_info) {
  delete all_weather_info_;
  all_weather_info_ = all_weather_info;
  if (all_weather_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneBin.all_weather_info)
}

// .proto.ScenePlayerLocationBin owner_player_location = 5;
bool SceneBin::has_owner_player_location() const {
  return this != internal_default_instance() && owner_player_location_ != NULL;
}
void SceneBin::clear_owner_player_location() {
  if (GetArenaNoVirtual() == NULL && owner_player_location_ != NULL) delete owner_player_location_;
  owner_player_location_ = NULL;
}
const ::proto::ScenePlayerLocationBin& SceneBin::owner_player_location() const {
  const ::proto::ScenePlayerLocationBin* p = owner_player_location_;
  // @@protoc_insertion_point(field_get:proto.SceneBin.owner_player_location)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ScenePlayerLocationBin*>(
      &::proto::_ScenePlayerLocationBin_default_instance_);
}
::proto::ScenePlayerLocationBin* SceneBin::mutable_owner_player_location() {
  
  if (owner_player_location_ == NULL) {
    owner_player_location_ = new ::proto::ScenePlayerLocationBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneBin.owner_player_location)
  return owner_player_location_;
}
::proto::ScenePlayerLocationBin* SceneBin::release_owner_player_location() {
  // @@protoc_insertion_point(field_release:proto.SceneBin.owner_player_location)
  
  ::proto::ScenePlayerLocationBin* temp = owner_player_location_;
  owner_player_location_ = NULL;
  return temp;
}
void SceneBin::set_allocated_owner_player_location(::proto::ScenePlayerLocationBin* owner_player_location) {
  delete owner_player_location_;
  owner_player_location_ = owner_player_location;
  if (owner_player_location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneBin.owner_player_location)
}

// .proto.SceneBlockGroupCompBin block_group_bin = 6;
bool SceneBin::has_block_group_bin() const {
  return this != internal_default_instance() && block_group_bin_ != NULL;
}
void SceneBin::clear_block_group_bin() {
  if (GetArenaNoVirtual() == NULL && block_group_bin_ != NULL) delete block_group_bin_;
  block_group_bin_ = NULL;
}
const ::proto::SceneBlockGroupCompBin& SceneBin::block_group_bin() const {
  const ::proto::SceneBlockGroupCompBin* p = block_group_bin_;
  // @@protoc_insertion_point(field_get:proto.SceneBin.block_group_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SceneBlockGroupCompBin*>(
      &::proto::_SceneBlockGroupCompBin_default_instance_);
}
::proto::SceneBlockGroupCompBin* SceneBin::mutable_block_group_bin() {
  
  if (block_group_bin_ == NULL) {
    block_group_bin_ = new ::proto::SceneBlockGroupCompBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneBin.block_group_bin)
  return block_group_bin_;
}
::proto::SceneBlockGroupCompBin* SceneBin::release_block_group_bin() {
  // @@protoc_insertion_point(field_release:proto.SceneBin.block_group_bin)
  
  ::proto::SceneBlockGroupCompBin* temp = block_group_bin_;
  block_group_bin_ = NULL;
  return temp;
}
void SceneBin::set_allocated_block_group_bin(::proto::SceneBlockGroupCompBin* block_group_bin) {
  delete block_group_bin_;
  block_group_bin_ = block_group_bin;
  if (block_group_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneBin.block_group_bin)
}

// .proto.SceneEnvAnimalCompBin env_animal_bin = 7;
bool SceneBin::has_env_animal_bin() const {
  return this != internal_default_instance() && env_animal_bin_ != NULL;
}
void SceneBin::clear_env_animal_bin() {
  if (GetArenaNoVirtual() == NULL && env_animal_bin_ != NULL) delete env_animal_bin_;
  env_animal_bin_ = NULL;
}
const ::proto::SceneEnvAnimalCompBin& SceneBin::env_animal_bin() const {
  const ::proto::SceneEnvAnimalCompBin* p = env_animal_bin_;
  // @@protoc_insertion_point(field_get:proto.SceneBin.env_animal_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SceneEnvAnimalCompBin*>(
      &::proto::_SceneEnvAnimalCompBin_default_instance_);
}
::proto::SceneEnvAnimalCompBin* SceneBin::mutable_env_animal_bin() {
  
  if (env_animal_bin_ == NULL) {
    env_animal_bin_ = new ::proto::SceneEnvAnimalCompBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneBin.env_animal_bin)
  return env_animal_bin_;
}
::proto::SceneEnvAnimalCompBin* SceneBin::release_env_animal_bin() {
  // @@protoc_insertion_point(field_release:proto.SceneBin.env_animal_bin)
  
  ::proto::SceneEnvAnimalCompBin* temp = env_animal_bin_;
  env_animal_bin_ = NULL;
  return temp;
}
void SceneBin::set_allocated_env_animal_bin(::proto::SceneEnvAnimalCompBin* env_animal_bin) {
  delete env_animal_bin_;
  env_animal_bin_ = env_animal_bin;
  if (env_animal_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneBin.env_animal_bin)
}

// .proto.SceneAreaCompBin area_comp_bin = 8;
bool SceneBin::has_area_comp_bin() const {
  return this != internal_default_instance() && area_comp_bin_ != NULL;
}
void SceneBin::clear_area_comp_bin() {
  if (GetArenaNoVirtual() == NULL && area_comp_bin_ != NULL) delete area_comp_bin_;
  area_comp_bin_ = NULL;
}
const ::proto::SceneAreaCompBin& SceneBin::area_comp_bin() const {
  const ::proto::SceneAreaCompBin* p = area_comp_bin_;
  // @@protoc_insertion_point(field_get:proto.SceneBin.area_comp_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SceneAreaCompBin*>(
      &::proto::_SceneAreaCompBin_default_instance_);
}
::proto::SceneAreaCompBin* SceneBin::mutable_area_comp_bin() {
  
  if (area_comp_bin_ == NULL) {
    area_comp_bin_ = new ::proto::SceneAreaCompBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneBin.area_comp_bin)
  return area_comp_bin_;
}
::proto::SceneAreaCompBin* SceneBin::release_area_comp_bin() {
  // @@protoc_insertion_point(field_release:proto.SceneBin.area_comp_bin)
  
  ::proto::SceneAreaCompBin* temp = area_comp_bin_;
  area_comp_bin_ = NULL;
  return temp;
}
void SceneBin::set_allocated_area_comp_bin(::proto::SceneAreaCompBin* area_comp_bin) {
  delete area_comp_bin_;
  area_comp_bin_ = area_comp_bin;
  if (area_comp_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneBin.area_comp_bin)
}

// .proto.SceneEncounterCompBin encounter_comp_bin = 9;
bool SceneBin::has_encounter_comp_bin() const {
  return this != internal_default_instance() && encounter_comp_bin_ != NULL;
}
void SceneBin::clear_encounter_comp_bin() {
  if (GetArenaNoVirtual() == NULL && encounter_comp_bin_ != NULL) delete encounter_comp_bin_;
  encounter_comp_bin_ = NULL;
}
const ::proto::SceneEncounterCompBin& SceneBin::encounter_comp_bin() const {
  const ::proto::SceneEncounterCompBin* p = encounter_comp_bin_;
  // @@protoc_insertion_point(field_get:proto.SceneBin.encounter_comp_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SceneEncounterCompBin*>(
      &::proto::_SceneEncounterCompBin_default_instance_);
}
::proto::SceneEncounterCompBin* SceneBin::mutable_encounter_comp_bin() {
  
  if (encounter_comp_bin_ == NULL) {
    encounter_comp_bin_ = new ::proto::SceneEncounterCompBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneBin.encounter_comp_bin)
  return encounter_comp_bin_;
}
::proto::SceneEncounterCompBin* SceneBin::release_encounter_comp_bin() {
  // @@protoc_insertion_point(field_release:proto.SceneBin.encounter_comp_bin)
  
  ::proto::SceneEncounterCompBin* temp = encounter_comp_bin_;
  encounter_comp_bin_ = NULL;
  return temp;
}
void SceneBin::set_allocated_encounter_comp_bin(::proto::SceneEncounterCompBin* encounter_comp_bin) {
  delete encounter_comp_bin_;
  encounter_comp_bin_ = encounter_comp_bin;
  if (encounter_comp_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneBin.encounter_comp_bin)
}

// uint64 last_spring_recover_time_ms = 10;
void SceneBin::clear_last_spring_recover_time_ms() {
  last_spring_recover_time_ms_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SceneBin::last_spring_recover_time_ms() const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.last_spring_recover_time_ms)
  return last_spring_recover_time_ms_;
}
void SceneBin::set_last_spring_recover_time_ms(::google::protobuf::uint64 value) {
  
  last_spring_recover_time_ms_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneBin.last_spring_recover_time_ms)
}

// repeated uint32 group_unlimit_point_list = 11;
int SceneBin::group_unlimit_point_list_size() const {
  return group_unlimit_point_list_.size();
}
void SceneBin::clear_group_unlimit_point_list() {
  group_unlimit_point_list_.Clear();
}
::google::protobuf::uint32 SceneBin::group_unlimit_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.group_unlimit_point_list)
  return group_unlimit_point_list_.Get(index);
}
void SceneBin::set_group_unlimit_point_list(int index, ::google::protobuf::uint32 value) {
  group_unlimit_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneBin.group_unlimit_point_list)
}
void SceneBin::add_group_unlimit_point_list(::google::protobuf::uint32 value) {
  group_unlimit_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneBin.group_unlimit_point_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneBin::group_unlimit_point_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneBin.group_unlimit_point_list)
  return group_unlimit_point_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneBin::mutable_group_unlimit_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneBin.group_unlimit_point_list)
  return &group_unlimit_point_list_;
}

// repeated uint32 interacted_to_be_explored_point_list = 12;
int SceneBin::interacted_to_be_explored_point_list_size() const {
  return interacted_to_be_explored_point_list_.size();
}
void SceneBin::clear_interacted_to_be_explored_point_list() {
  interacted_to_be_explored_point_list_.Clear();
}
::google::protobuf::uint32 SceneBin::interacted_to_be_explored_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.interacted_to_be_explored_point_list)
  return interacted_to_be_explored_point_list_.Get(index);
}
void SceneBin::set_interacted_to_be_explored_point_list(int index, ::google::protobuf::uint32 value) {
  interacted_to_be_explored_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneBin.interacted_to_be_explored_point_list)
}
void SceneBin::add_interacted_to_be_explored_point_list(::google::protobuf::uint32 value) {
  interacted_to_be_explored_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneBin.interacted_to_be_explored_point_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneBin::interacted_to_be_explored_point_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneBin.interacted_to_be_explored_point_list)
  return interacted_to_be_explored_point_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneBin::mutable_interacted_to_be_explored_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneBin.interacted_to_be_explored_point_list)
  return &interacted_to_be_explored_point_list_;
}

// float cur_spring_volume = 13;
void SceneBin::clear_cur_spring_volume() {
  cur_spring_volume_ = 0;
}
float SceneBin::cur_spring_volume() const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.cur_spring_volume)
  return cur_spring_volume_;
}
void SceneBin::set_cur_spring_volume(float value) {
  
  cur_spring_volume_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneBin.cur_spring_volume)
}

// bool is_locked = 14;
void SceneBin::clear_is_locked() {
  is_locked_ = false;
}
bool SceneBin::is_locked() const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.is_locked)
  return is_locked_;
}
void SceneBin::set_is_locked(bool value) {
  
  is_locked_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneBin.is_locked)
}

// repeated .proto.SceneVehicleBin vehicle_list = 15;
int SceneBin::vehicle_list_size() const {
  return vehicle_list_.size();
}
void SceneBin::clear_vehicle_list() {
  vehicle_list_.Clear();
}
const ::proto::SceneVehicleBin& SceneBin::vehicle_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.vehicle_list)
  return vehicle_list_.Get(index);
}
::proto::SceneVehicleBin* SceneBin::mutable_vehicle_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneBin.vehicle_list)
  return vehicle_list_.Mutable(index);
}
::proto::SceneVehicleBin* SceneBin::add_vehicle_list() {
  // @@protoc_insertion_point(field_add:proto.SceneBin.vehicle_list)
  return vehicle_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::SceneVehicleBin >*
SceneBin::mutable_vehicle_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneBin.vehicle_list)
  return &vehicle_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::SceneVehicleBin >&
SceneBin::vehicle_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneBin.vehicle_list)
  return vehicle_list_;
}

// repeated .proto.SceneTagOp scene_tag_op_list = 16;
int SceneBin::scene_tag_op_list_size() const {
  return scene_tag_op_list_.size();
}
void SceneBin::clear_scene_tag_op_list() {
  scene_tag_op_list_.Clear();
}
const ::proto::SceneTagOp& SceneBin::scene_tag_op_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.scene_tag_op_list)
  return scene_tag_op_list_.Get(index);
}
::proto::SceneTagOp* SceneBin::mutable_scene_tag_op_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneBin.scene_tag_op_list)
  return scene_tag_op_list_.Mutable(index);
}
::proto::SceneTagOp* SceneBin::add_scene_tag_op_list() {
  // @@protoc_insertion_point(field_add:proto.SceneBin.scene_tag_op_list)
  return scene_tag_op_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::SceneTagOp >*
SceneBin::mutable_scene_tag_op_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneBin.scene_tag_op_list)
  return &scene_tag_op_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::SceneTagOp >&
SceneBin::scene_tag_op_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneBin.scene_tag_op_list)
  return scene_tag_op_list_;
}

// repeated uint32 hide_point_list = 17;
int SceneBin::hide_point_list_size() const {
  return hide_point_list_.size();
}
void SceneBin::clear_hide_point_list() {
  hide_point_list_.Clear();
}
::google::protobuf::uint32 SceneBin::hide_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.hide_point_list)
  return hide_point_list_.Get(index);
}
void SceneBin::set_hide_point_list(int index, ::google::protobuf::uint32 value) {
  hide_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneBin.hide_point_list)
}
void SceneBin::add_hide_point_list(::google::protobuf::uint32 value) {
  hide_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneBin.hide_point_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneBin::hide_point_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneBin.hide_point_list)
  return hide_point_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneBin::mutable_hide_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneBin.hide_point_list)
  return &hide_point_list_;
}

// repeated uint32 unhide_point_list = 18;
int SceneBin::unhide_point_list_size() const {
  return unhide_point_list_.size();
}
void SceneBin::clear_unhide_point_list() {
  unhide_point_list_.Clear();
}
::google::protobuf::uint32 SceneBin::unhide_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.unhide_point_list)
  return unhide_point_list_.Get(index);
}
void SceneBin::set_unhide_point_list(int index, ::google::protobuf::uint32 value) {
  unhide_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneBin.unhide_point_list)
}
void SceneBin::add_unhide_point_list(::google::protobuf::uint32 value) {
  unhide_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneBin.unhide_point_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneBin::unhide_point_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneBin.unhide_point_list)
  return unhide_point_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneBin::mutable_unhide_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneBin.unhide_point_list)
  return &unhide_point_list_;
}

// .proto.ActivitySceneBin activity_scene_bin = 101;
bool SceneBin::has_activity_scene_bin() const {
  return detail_case() == kActivitySceneBin;
}
void SceneBin::set_has_activity_scene_bin() {
  _oneof_case_[0] = kActivitySceneBin;
}
void SceneBin::clear_activity_scene_bin() {
  if (has_activity_scene_bin()) {
    delete detail_.activity_scene_bin_;
    clear_has_detail();
  }
}
 const ::proto::ActivitySceneBin& SceneBin::activity_scene_bin() const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.activity_scene_bin)
  return has_activity_scene_bin()
      ? *detail_.activity_scene_bin_
      : ::proto::ActivitySceneBin::default_instance();
}
::proto::ActivitySceneBin* SceneBin::mutable_activity_scene_bin() {
  if (!has_activity_scene_bin()) {
    clear_detail();
    set_has_activity_scene_bin();
    detail_.activity_scene_bin_ = new ::proto::ActivitySceneBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneBin.activity_scene_bin)
  return detail_.activity_scene_bin_;
}
::proto::ActivitySceneBin* SceneBin::release_activity_scene_bin() {
  // @@protoc_insertion_point(field_release:proto.SceneBin.activity_scene_bin)
  if (has_activity_scene_bin()) {
    clear_has_detail();
    ::proto::ActivitySceneBin* temp = detail_.activity_scene_bin_;
    detail_.activity_scene_bin_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SceneBin::set_allocated_activity_scene_bin(::proto::ActivitySceneBin* activity_scene_bin) {
  clear_detail();
  if (activity_scene_bin) {
    set_has_activity_scene_bin();
    detail_.activity_scene_bin_ = activity_scene_bin;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneBin.activity_scene_bin)
}

// .proto.DungeonSceneBin dungeon_scene_bin = 102;
bool SceneBin::has_dungeon_scene_bin() const {
  return detail_case() == kDungeonSceneBin;
}
void SceneBin::set_has_dungeon_scene_bin() {
  _oneof_case_[0] = kDungeonSceneBin;
}
void SceneBin::clear_dungeon_scene_bin() {
  if (has_dungeon_scene_bin()) {
    delete detail_.dungeon_scene_bin_;
    clear_has_detail();
  }
}
 const ::proto::DungeonSceneBin& SceneBin::dungeon_scene_bin() const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.dungeon_scene_bin)
  return has_dungeon_scene_bin()
      ? *detail_.dungeon_scene_bin_
      : ::proto::DungeonSceneBin::default_instance();
}
::proto::DungeonSceneBin* SceneBin::mutable_dungeon_scene_bin() {
  if (!has_dungeon_scene_bin()) {
    clear_detail();
    set_has_dungeon_scene_bin();
    detail_.dungeon_scene_bin_ = new ::proto::DungeonSceneBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneBin.dungeon_scene_bin)
  return detail_.dungeon_scene_bin_;
}
::proto::DungeonSceneBin* SceneBin::release_dungeon_scene_bin() {
  // @@protoc_insertion_point(field_release:proto.SceneBin.dungeon_scene_bin)
  if (has_dungeon_scene_bin()) {
    clear_has_detail();
    ::proto::DungeonSceneBin* temp = detail_.dungeon_scene_bin_;
    detail_.dungeon_scene_bin_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SceneBin::set_allocated_dungeon_scene_bin(::proto::DungeonSceneBin* dungeon_scene_bin) {
  clear_detail();
  if (dungeon_scene_bin) {
    set_has_dungeon_scene_bin();
    detail_.dungeon_scene_bin_ = dungeon_scene_bin;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneBin.dungeon_scene_bin)
}

bool SceneBin::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
void SceneBin::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
SceneBin::DetailCase SceneBin::detail_case() const {
  return SceneBin::DetailCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

GCGSettleData::GCGSettleData_UidMapEntry::GCGSettleData_UidMapEntry() {}
GCGSettleData::GCGSettleData_UidMapEntry::GCGSettleData_UidMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata GCGSettleData::GCGSettleData_UidMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[129];
}
void GCGSettleData::GCGSettleData_UidMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void GCGSettleData::GCGSettleData_UidMapEntry::MergeFrom(const GCGSettleData_UidMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

GCGSettleData::GCGSettleData_ChallengeProgressMapEntry::GCGSettleData_ChallengeProgressMapEntry() {}
GCGSettleData::GCGSettleData_ChallengeProgressMapEntry::GCGSettleData_ChallengeProgressMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata GCGSettleData::GCGSettleData_ChallengeProgressMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[130];
}
void GCGSettleData::GCGSettleData_ChallengeProgressMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void GCGSettleData::GCGSettleData_ChallengeProgressMapEntry::MergeFrom(const GCGSettleData_ChallengeProgressMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

GCGSettleData::GCGSettleData_ScoreMapEntry::GCGSettleData_ScoreMapEntry() {}
GCGSettleData::GCGSettleData_ScoreMapEntry::GCGSettleData_ScoreMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata GCGSettleData::GCGSettleData_ScoreMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[131];
}
void GCGSettleData::GCGSettleData_ScoreMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void GCGSettleData::GCGSettleData_ScoreMapEntry::MergeFrom(const GCGSettleData_ScoreMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GCGSettleData::kAppIdFieldNumber;
const int GCGSettleData::kThreadIndexFieldNumber;
const int GCGSettleData::kGameIdFieldNumber;
const int GCGSettleData::kGameUidFieldNumber;
const int GCGSettleData::kVerifyCodeFieldNumber;
const int GCGSettleData::kReasonFieldNumber;
const int GCGSettleData::kBusinessTypeFieldNumber;
const int GCGSettleData::kUidMapFieldNumber;
const int GCGSettleData::kWinnerControllerFieldNumber;
const int GCGSettleData::kChallengeProgressMapFieldNumber;
const int GCGSettleData::kCardIdListFieldNumber;
const int GCGSettleData::kCardGroupIdFieldNumber;
const int GCGSettleData::kScoreMapFieldNumber;
const int GCGSettleData::kMatchIdFieldNumber;
const int GCGSettleData::kCustomParamListFieldNumber;
const int GCGSettleData::kForbidFinishChallengeListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GCGSettleData::GCGSettleData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GCGSettleData)
}
GCGSettleData::GCGSettleData(const GCGSettleData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      card_id_list_(from.card_id_list_),
      custom_param_list_(from.custom_param_list_),
      forbid_finish_challenge_list_(from.forbid_finish_challenge_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_map_.MergeFrom(from.uid_map_);
  challenge_progress_map_.MergeFrom(from.challenge_progress_map_);
  score_map_.MergeFrom(from.score_map_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&match_id_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(match_id_));
  // @@protoc_insertion_point(copy_constructor:proto.GCGSettleData)
}

void GCGSettleData::SharedCtor() {
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&match_id_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(match_id_));
  _cached_size_ = 0;
}

GCGSettleData::~GCGSettleData() {
  // @@protoc_insertion_point(destructor:proto.GCGSettleData)
  SharedDtor();
}

void GCGSettleData::SharedDtor() {
}

void GCGSettleData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GCGSettleData::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GCGSettleData& GCGSettleData::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

GCGSettleData* GCGSettleData::New(::google::protobuf::Arena* arena) const {
  GCGSettleData* n = new GCGSettleData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GCGSettleData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GCGSettleData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_map_.Clear();
  challenge_progress_map_.Clear();
  card_id_list_.Clear();
  score_map_.Clear();
  custom_param_list_.Clear();
  forbid_finish_challenge_list_.Clear();
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&match_id_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(match_id_));
  _internal_metadata_.Clear();
}

bool GCGSettleData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GCGSettleData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 thread_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &thread_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 game_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 game_uid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 verify_code = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &verify_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reason = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 business_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &business_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> uid_map = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          GCGSettleData_UidMapEntry::Parser< ::google::protobuf::internal::MapField<
              GCGSettleData_UidMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&uid_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 winner_controller = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &winner_controller_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> challenge_progress_map = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          GCGSettleData_ChallengeProgressMapEntry::Parser< ::google::protobuf::internal::MapField<
              GCGSettleData_ChallengeProgressMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&challenge_progress_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 card_id_list = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_card_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 90u, input, this->mutable_card_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 card_group_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &card_group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> score_map = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          GCGSettleData_ScoreMapEntry::Parser< ::google::protobuf::internal::MapField<
              GCGSettleData_ScoreMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&score_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 match_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &match_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 custom_param_list = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_custom_param_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 122u, input, this->mutable_custom_param_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 forbid_finish_challenge_list = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_forbid_finish_challenge_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 130u, input, this->mutable_forbid_finish_challenge_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GCGSettleData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GCGSettleData)
  return false;
#undef DO_
}

void GCGSettleData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GCGSettleData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 app_id = 1;
  if (this->app_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // uint32 thread_index = 2;
  if (this->thread_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->thread_index(), output);
  }

  // uint32 game_id = 3;
  if (this->game_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->game_id(), output);
  }

  // uint32 game_uid = 4;
  if (this->game_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->game_uid(), output);
  }

  // uint32 verify_code = 5;
  if (this->verify_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->verify_code(), output);
  }

  // uint32 reason = 6;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->reason(), output);
  }

  // uint32 business_type = 7;
  if (this->business_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->business_type(), output);
  }

  // map<uint32, uint32> uid_map = 8;
  if (!this->uid_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->uid_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->uid_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->uid_map().begin();
          it != this->uid_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GCGSettleData_UidMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(uid_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<GCGSettleData_UidMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->uid_map().begin();
          it != this->uid_map().end(); ++it) {
        entry.reset(uid_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
      }
    }
  }

  // uint32 winner_controller = 9;
  if (this->winner_controller() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->winner_controller(), output);
  }

  // map<uint32, uint32> challenge_progress_map = 10;
  if (!this->challenge_progress_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->challenge_progress_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->challenge_progress_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->challenge_progress_map().begin();
          it != this->challenge_progress_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GCGSettleData_ChallengeProgressMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(challenge_progress_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            10, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<GCGSettleData_ChallengeProgressMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->challenge_progress_map().begin();
          it != this->challenge_progress_map().end(); ++it) {
        entry.reset(challenge_progress_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            10, *entry, output);
      }
    }
  }

  // repeated uint32 card_id_list = 11;
  if (this->card_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _card_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->card_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->card_id_list(i), output);
  }

  // uint32 card_group_id = 12;
  if (this->card_group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->card_group_id(), output);
  }

  // map<uint32, uint32> score_map = 13;
  if (!this->score_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->score_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->score_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->score_map().begin();
          it != this->score_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GCGSettleData_ScoreMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(score_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            13, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<GCGSettleData_ScoreMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->score_map().begin();
          it != this->score_map().end(); ++it) {
        entry.reset(score_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            13, *entry, output);
      }
    }
  }

  // uint32 match_id = 14;
  if (this->match_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->match_id(), output);
  }

  // repeated uint32 custom_param_list = 15;
  if (this->custom_param_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(15, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _custom_param_list_cached_byte_size_));
  }
  for (int i = 0, n = this->custom_param_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->custom_param_list(i), output);
  }

  // repeated uint32 forbid_finish_challenge_list = 16;
  if (this->forbid_finish_challenge_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(16, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _forbid_finish_challenge_list_cached_byte_size_));
  }
  for (int i = 0, n = this->forbid_finish_challenge_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->forbid_finish_challenge_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GCGSettleData)
}

::google::protobuf::uint8* GCGSettleData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GCGSettleData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 app_id = 1;
  if (this->app_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // uint32 thread_index = 2;
  if (this->thread_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->thread_index(), target);
  }

  // uint32 game_id = 3;
  if (this->game_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->game_id(), target);
  }

  // uint32 game_uid = 4;
  if (this->game_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->game_uid(), target);
  }

  // uint32 verify_code = 5;
  if (this->verify_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->verify_code(), target);
  }

  // uint32 reason = 6;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->reason(), target);
  }

  // uint32 business_type = 7;
  if (this->business_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->business_type(), target);
  }

  // map<uint32, uint32> uid_map = 8;
  if (!this->uid_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->uid_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->uid_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->uid_map().begin();
          it != this->uid_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GCGSettleData_UidMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(uid_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<GCGSettleData_UidMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->uid_map().begin();
          it != this->uid_map().end(); ++it) {
        entry.reset(uid_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
      }
    }
  }

  // uint32 winner_controller = 9;
  if (this->winner_controller() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->winner_controller(), target);
  }

  // map<uint32, uint32> challenge_progress_map = 10;
  if (!this->challenge_progress_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->challenge_progress_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->challenge_progress_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->challenge_progress_map().begin();
          it != this->challenge_progress_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GCGSettleData_ChallengeProgressMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(challenge_progress_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       10, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<GCGSettleData_ChallengeProgressMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->challenge_progress_map().begin();
          it != this->challenge_progress_map().end(); ++it) {
        entry.reset(challenge_progress_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       10, *entry, deterministic, target);
;
      }
    }
  }

  // repeated uint32 card_id_list = 11;
  if (this->card_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _card_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->card_id_list_, target);
  }

  // uint32 card_group_id = 12;
  if (this->card_group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->card_group_id(), target);
  }

  // map<uint32, uint32> score_map = 13;
  if (!this->score_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->score_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->score_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->score_map().begin();
          it != this->score_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GCGSettleData_ScoreMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(score_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       13, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<GCGSettleData_ScoreMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->score_map().begin();
          it != this->score_map().end(); ++it) {
        entry.reset(score_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       13, *entry, deterministic, target);
;
      }
    }
  }

  // uint32 match_id = 14;
  if (this->match_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->match_id(), target);
  }

  // repeated uint32 custom_param_list = 15;
  if (this->custom_param_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      15,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _custom_param_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->custom_param_list_, target);
  }

  // repeated uint32 forbid_finish_challenge_list = 16;
  if (this->forbid_finish_challenge_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      16,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _forbid_finish_challenge_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->forbid_finish_challenge_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GCGSettleData)
  return target;
}

size_t GCGSettleData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GCGSettleData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> uid_map = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->uid_map_size());
  {
    ::google::protobuf::scoped_ptr<GCGSettleData_UidMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->uid_map().begin();
        it != this->uid_map().end(); ++it) {
      entry.reset(uid_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<uint32, uint32> challenge_progress_map = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->challenge_progress_map_size());
  {
    ::google::protobuf::scoped_ptr<GCGSettleData_ChallengeProgressMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->challenge_progress_map().begin();
        it != this->challenge_progress_map().end(); ++it) {
      entry.reset(challenge_progress_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated uint32 card_id_list = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->card_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _card_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // map<uint32, uint32> score_map = 13;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->score_map_size());
  {
    ::google::protobuf::scoped_ptr<GCGSettleData_ScoreMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->score_map().begin();
        it != this->score_map().end(); ++it) {
      entry.reset(score_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated uint32 custom_param_list = 15;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->custom_param_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _custom_param_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 forbid_finish_challenge_list = 16;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->forbid_finish_challenge_list_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _forbid_finish_challenge_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 app_id = 1;
  if (this->app_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->app_id());
  }

  // uint32 thread_index = 2;
  if (this->thread_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->thread_index());
  }

  // uint32 game_id = 3;
  if (this->game_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->game_id());
  }

  // uint32 game_uid = 4;
  if (this->game_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->game_uid());
  }

  // uint32 verify_code = 5;
  if (this->verify_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->verify_code());
  }

  // uint32 reason = 6;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reason());
  }

  // uint32 business_type = 7;
  if (this->business_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->business_type());
  }

  // uint32 winner_controller = 9;
  if (this->winner_controller() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->winner_controller());
  }

  // uint32 card_group_id = 12;
  if (this->card_group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->card_group_id());
  }

  // uint32 match_id = 14;
  if (this->match_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->match_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GCGSettleData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GCGSettleData)
  GOOGLE_DCHECK_NE(&from, this);
  const GCGSettleData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GCGSettleData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GCGSettleData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GCGSettleData)
    MergeFrom(*source);
  }
}

void GCGSettleData::MergeFrom(const GCGSettleData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GCGSettleData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  uid_map_.MergeFrom(from.uid_map_);
  challenge_progress_map_.MergeFrom(from.challenge_progress_map_);
  card_id_list_.MergeFrom(from.card_id_list_);
  score_map_.MergeFrom(from.score_map_);
  custom_param_list_.MergeFrom(from.custom_param_list_);
  forbid_finish_challenge_list_.MergeFrom(from.forbid_finish_challenge_list_);
  if (from.app_id() != 0) {
    set_app_id(from.app_id());
  }
  if (from.thread_index() != 0) {
    set_thread_index(from.thread_index());
  }
  if (from.game_id() != 0) {
    set_game_id(from.game_id());
  }
  if (from.game_uid() != 0) {
    set_game_uid(from.game_uid());
  }
  if (from.verify_code() != 0) {
    set_verify_code(from.verify_code());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
  if (from.business_type() != 0) {
    set_business_type(from.business_type());
  }
  if (from.winner_controller() != 0) {
    set_winner_controller(from.winner_controller());
  }
  if (from.card_group_id() != 0) {
    set_card_group_id(from.card_group_id());
  }
  if (from.match_id() != 0) {
    set_match_id(from.match_id());
  }
}

void GCGSettleData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GCGSettleData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCGSettleData::CopyFrom(const GCGSettleData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GCGSettleData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCGSettleData::IsInitialized() const {
  return true;
}

void GCGSettleData::Swap(GCGSettleData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GCGSettleData::InternalSwap(GCGSettleData* other) {
  using std::swap;
  uid_map_.Swap(&other->uid_map_);
  challenge_progress_map_.Swap(&other->challenge_progress_map_);
  card_id_list_.InternalSwap(&other->card_id_list_);
  score_map_.Swap(&other->score_map_);
  custom_param_list_.InternalSwap(&other->custom_param_list_);
  forbid_finish_challenge_list_.InternalSwap(&other->forbid_finish_challenge_list_);
  swap(app_id_, other->app_id_);
  swap(thread_index_, other->thread_index_);
  swap(game_id_, other->game_id_);
  swap(game_uid_, other->game_uid_);
  swap(verify_code_, other->verify_code_);
  swap(reason_, other->reason_);
  swap(business_type_, other->business_type_);
  swap(winner_controller_, other->winner_controller_);
  swap(card_group_id_, other->card_group_id_);
  swap(match_id_, other->match_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GCGSettleData::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GCGSettleData

// uint32 app_id = 1;
void GCGSettleData::clear_app_id() {
  app_id_ = 0u;
}
::google::protobuf::uint32 GCGSettleData::app_id() const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleData.app_id)
  return app_id_;
}
void GCGSettleData::set_app_id(::google::protobuf::uint32 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGSettleData.app_id)
}

// uint32 thread_index = 2;
void GCGSettleData::clear_thread_index() {
  thread_index_ = 0u;
}
::google::protobuf::uint32 GCGSettleData::thread_index() const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleData.thread_index)
  return thread_index_;
}
void GCGSettleData::set_thread_index(::google::protobuf::uint32 value) {
  
  thread_index_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGSettleData.thread_index)
}

// uint32 game_id = 3;
void GCGSettleData::clear_game_id() {
  game_id_ = 0u;
}
::google::protobuf::uint32 GCGSettleData::game_id() const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleData.game_id)
  return game_id_;
}
void GCGSettleData::set_game_id(::google::protobuf::uint32 value) {
  
  game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGSettleData.game_id)
}

// uint32 game_uid = 4;
void GCGSettleData::clear_game_uid() {
  game_uid_ = 0u;
}
::google::protobuf::uint32 GCGSettleData::game_uid() const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleData.game_uid)
  return game_uid_;
}
void GCGSettleData::set_game_uid(::google::protobuf::uint32 value) {
  
  game_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGSettleData.game_uid)
}

// uint32 verify_code = 5;
void GCGSettleData::clear_verify_code() {
  verify_code_ = 0u;
}
::google::protobuf::uint32 GCGSettleData::verify_code() const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleData.verify_code)
  return verify_code_;
}
void GCGSettleData::set_verify_code(::google::protobuf::uint32 value) {
  
  verify_code_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGSettleData.verify_code)
}

// uint32 reason = 6;
void GCGSettleData::clear_reason() {
  reason_ = 0u;
}
::google::protobuf::uint32 GCGSettleData::reason() const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleData.reason)
  return reason_;
}
void GCGSettleData::set_reason(::google::protobuf::uint32 value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGSettleData.reason)
}

// uint32 business_type = 7;
void GCGSettleData::clear_business_type() {
  business_type_ = 0u;
}
::google::protobuf::uint32 GCGSettleData::business_type() const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleData.business_type)
  return business_type_;
}
void GCGSettleData::set_business_type(::google::protobuf::uint32 value) {
  
  business_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGSettleData.business_type)
}

// map<uint32, uint32> uid_map = 8;
int GCGSettleData::uid_map_size() const {
  return uid_map_.size();
}
void GCGSettleData::clear_uid_map() {
  uid_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
GCGSettleData::uid_map() const {
  // @@protoc_insertion_point(field_map:proto.GCGSettleData.uid_map)
  return uid_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
GCGSettleData::mutable_uid_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GCGSettleData.uid_map)
  return uid_map_.MutableMap();
}

// uint32 winner_controller = 9;
void GCGSettleData::clear_winner_controller() {
  winner_controller_ = 0u;
}
::google::protobuf::uint32 GCGSettleData::winner_controller() const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleData.winner_controller)
  return winner_controller_;
}
void GCGSettleData::set_winner_controller(::google::protobuf::uint32 value) {
  
  winner_controller_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGSettleData.winner_controller)
}

// map<uint32, uint32> challenge_progress_map = 10;
int GCGSettleData::challenge_progress_map_size() const {
  return challenge_progress_map_.size();
}
void GCGSettleData::clear_challenge_progress_map() {
  challenge_progress_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
GCGSettleData::challenge_progress_map() const {
  // @@protoc_insertion_point(field_map:proto.GCGSettleData.challenge_progress_map)
  return challenge_progress_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
GCGSettleData::mutable_challenge_progress_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GCGSettleData.challenge_progress_map)
  return challenge_progress_map_.MutableMap();
}

// repeated uint32 card_id_list = 11;
int GCGSettleData::card_id_list_size() const {
  return card_id_list_.size();
}
void GCGSettleData::clear_card_id_list() {
  card_id_list_.Clear();
}
::google::protobuf::uint32 GCGSettleData::card_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleData.card_id_list)
  return card_id_list_.Get(index);
}
void GCGSettleData::set_card_id_list(int index, ::google::protobuf::uint32 value) {
  card_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GCGSettleData.card_id_list)
}
void GCGSettleData::add_card_id_list(::google::protobuf::uint32 value) {
  card_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GCGSettleData.card_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GCGSettleData::card_id_list() const {
  // @@protoc_insertion_point(field_list:proto.GCGSettleData.card_id_list)
  return card_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GCGSettleData::mutable_card_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GCGSettleData.card_id_list)
  return &card_id_list_;
}

// uint32 card_group_id = 12;
void GCGSettleData::clear_card_group_id() {
  card_group_id_ = 0u;
}
::google::protobuf::uint32 GCGSettleData::card_group_id() const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleData.card_group_id)
  return card_group_id_;
}
void GCGSettleData::set_card_group_id(::google::protobuf::uint32 value) {
  
  card_group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGSettleData.card_group_id)
}

// map<uint32, uint32> score_map = 13;
int GCGSettleData::score_map_size() const {
  return score_map_.size();
}
void GCGSettleData::clear_score_map() {
  score_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
GCGSettleData::score_map() const {
  // @@protoc_insertion_point(field_map:proto.GCGSettleData.score_map)
  return score_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
GCGSettleData::mutable_score_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GCGSettleData.score_map)
  return score_map_.MutableMap();
}

// uint32 match_id = 14;
void GCGSettleData::clear_match_id() {
  match_id_ = 0u;
}
::google::protobuf::uint32 GCGSettleData::match_id() const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleData.match_id)
  return match_id_;
}
void GCGSettleData::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGSettleData.match_id)
}

// repeated uint32 custom_param_list = 15;
int GCGSettleData::custom_param_list_size() const {
  return custom_param_list_.size();
}
void GCGSettleData::clear_custom_param_list() {
  custom_param_list_.Clear();
}
::google::protobuf::uint32 GCGSettleData::custom_param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleData.custom_param_list)
  return custom_param_list_.Get(index);
}
void GCGSettleData::set_custom_param_list(int index, ::google::protobuf::uint32 value) {
  custom_param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GCGSettleData.custom_param_list)
}
void GCGSettleData::add_custom_param_list(::google::protobuf::uint32 value) {
  custom_param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GCGSettleData.custom_param_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GCGSettleData::custom_param_list() const {
  // @@protoc_insertion_point(field_list:proto.GCGSettleData.custom_param_list)
  return custom_param_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GCGSettleData::mutable_custom_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GCGSettleData.custom_param_list)
  return &custom_param_list_;
}

// repeated uint32 forbid_finish_challenge_list = 16;
int GCGSettleData::forbid_finish_challenge_list_size() const {
  return forbid_finish_challenge_list_.size();
}
void GCGSettleData::clear_forbid_finish_challenge_list() {
  forbid_finish_challenge_list_.Clear();
}
::google::protobuf::uint32 GCGSettleData::forbid_finish_challenge_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleData.forbid_finish_challenge_list)
  return forbid_finish_challenge_list_.Get(index);
}
void GCGSettleData::set_forbid_finish_challenge_list(int index, ::google::protobuf::uint32 value) {
  forbid_finish_challenge_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GCGSettleData.forbid_finish_challenge_list)
}
void GCGSettleData::add_forbid_finish_challenge_list(::google::protobuf::uint32 value) {
  forbid_finish_challenge_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GCGSettleData.forbid_finish_challenge_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GCGSettleData::forbid_finish_challenge_list() const {
  // @@protoc_insertion_point(field_list:proto.GCGSettleData.forbid_finish_challenge_list)
  return forbid_finish_challenge_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GCGSettleData::mutable_forbid_finish_challenge_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GCGSettleData.forbid_finish_challenge_list)
  return &forbid_finish_challenge_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineOpTestOp::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineOpTestOp::OfflineOpTestOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.OfflineOpTestOp)
}
OfflineOpTestOp::OfflineOpTestOp(const OfflineOpTestOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.OfflineOpTestOp)
}

void OfflineOpTestOp::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

OfflineOpTestOp::~OfflineOpTestOp() {
  // @@protoc_insertion_point(destructor:proto.OfflineOpTestOp)
  SharedDtor();
}

void OfflineOpTestOp::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OfflineOpTestOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OfflineOpTestOp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OfflineOpTestOp& OfflineOpTestOp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

OfflineOpTestOp* OfflineOpTestOp::New(::google::protobuf::Arena* arena) const {
  OfflineOpTestOp* n = new OfflineOpTestOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OfflineOpTestOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.OfflineOpTestOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool OfflineOpTestOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.OfflineOpTestOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.OfflineOpTestOp.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.OfflineOpTestOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.OfflineOpTestOp)
  return false;
#undef DO_
}

void OfflineOpTestOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.OfflineOpTestOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.OfflineOpTestOp.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.OfflineOpTestOp)
}

::google::protobuf::uint8* OfflineOpTestOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.OfflineOpTestOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.OfflineOpTestOp.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.OfflineOpTestOp)
  return target;
}

size_t OfflineOpTestOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.OfflineOpTestOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 1;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OfflineOpTestOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.OfflineOpTestOp)
  GOOGLE_DCHECK_NE(&from, this);
  const OfflineOpTestOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OfflineOpTestOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.OfflineOpTestOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.OfflineOpTestOp)
    MergeFrom(*source);
  }
}

void OfflineOpTestOp::MergeFrom(const OfflineOpTestOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.OfflineOpTestOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void OfflineOpTestOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.OfflineOpTestOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfflineOpTestOp::CopyFrom(const OfflineOpTestOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.OfflineOpTestOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineOpTestOp::IsInitialized() const {
  return true;
}

void OfflineOpTestOp::Swap(OfflineOpTestOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineOpTestOp::InternalSwap(OfflineOpTestOp* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OfflineOpTestOp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OfflineOpTestOp

// string msg = 1;
void OfflineOpTestOp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OfflineOpTestOp::msg() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpTestOp.msg)
  return msg_.GetNoArena();
}
void OfflineOpTestOp::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.OfflineOpTestOp.msg)
}
#if LANG_CXX11
void OfflineOpTestOp::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.OfflineOpTestOp.msg)
}
#endif
void OfflineOpTestOp::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.OfflineOpTestOp.msg)
}
void OfflineOpTestOp::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.OfflineOpTestOp.msg)
}
::std::string* OfflineOpTestOp::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpTestOp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OfflineOpTestOp::release_msg() {
  // @@protoc_insertion_point(field_release:proto.OfflineOpTestOp.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OfflineOpTestOp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineOpTestOp.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineOpFurnitureMakeHelp::kPlayerNameFieldNumber;
const int OfflineOpFurnitureMakeHelp::kTimeFieldNumber;
const int OfflineOpFurnitureMakeHelp::kUidFieldNumber;
const int OfflineOpFurnitureMakeHelp::kIconFieldNumber;
const int OfflineOpFurnitureMakeHelp::kProfilePictureBinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineOpFurnitureMakeHelp::OfflineOpFurnitureMakeHelp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.OfflineOpFurnitureMakeHelp)
}
OfflineOpFurnitureMakeHelp::OfflineOpFurnitureMakeHelp(const OfflineOpFurnitureMakeHelp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  player_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.player_name().size() > 0) {
    player_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.player_name_);
  }
  if (from.has_profile_picture_bin()) {
    profile_picture_bin_ = new ::proto::ProfilePictureBin(*from.profile_picture_bin_);
  } else {
    profile_picture_bin_ = NULL;
  }
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&icon_) -
    reinterpret_cast<char*>(&time_)) + sizeof(icon_));
  // @@protoc_insertion_point(copy_constructor:proto.OfflineOpFurnitureMakeHelp)
}

void OfflineOpFurnitureMakeHelp::SharedCtor() {
  player_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&profile_picture_bin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&icon_) -
      reinterpret_cast<char*>(&profile_picture_bin_)) + sizeof(icon_));
  _cached_size_ = 0;
}

OfflineOpFurnitureMakeHelp::~OfflineOpFurnitureMakeHelp() {
  // @@protoc_insertion_point(destructor:proto.OfflineOpFurnitureMakeHelp)
  SharedDtor();
}

void OfflineOpFurnitureMakeHelp::SharedDtor() {
  player_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete profile_picture_bin_;
}

void OfflineOpFurnitureMakeHelp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OfflineOpFurnitureMakeHelp::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OfflineOpFurnitureMakeHelp& OfflineOpFurnitureMakeHelp::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

OfflineOpFurnitureMakeHelp* OfflineOpFurnitureMakeHelp::New(::google::protobuf::Arena* arena) const {
  OfflineOpFurnitureMakeHelp* n = new OfflineOpFurnitureMakeHelp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OfflineOpFurnitureMakeHelp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.OfflineOpFurnitureMakeHelp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && profile_picture_bin_ != NULL) {
    delete profile_picture_bin_;
  }
  profile_picture_bin_ = NULL;
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&icon_) -
      reinterpret_cast<char*>(&time_)) + sizeof(icon_));
  _internal_metadata_.Clear();
}

bool OfflineOpFurnitureMakeHelp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.OfflineOpFurnitureMakeHelp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string player_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_player_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->player_name().data(), static_cast<int>(this->player_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.OfflineOpFurnitureMakeHelp.player_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 icon = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &icon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ProfilePictureBin profile_picture_bin = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_profile_picture_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.OfflineOpFurnitureMakeHelp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.OfflineOpFurnitureMakeHelp)
  return false;
#undef DO_
}

void OfflineOpFurnitureMakeHelp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.OfflineOpFurnitureMakeHelp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string player_name = 1;
  if (this->player_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->player_name().data(), static_cast<int>(this->player_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.OfflineOpFurnitureMakeHelp.player_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->player_name(), output);
  }

  // fixed32 time = 2;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->time(), output);
  }

  // uint32 uid = 3;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uid(), output);
  }

  // uint32 icon = 4;
  if (this->icon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->icon(), output);
  }

  // .proto.ProfilePictureBin profile_picture_bin = 5;
  if (this->has_profile_picture_bin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->profile_picture_bin_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.OfflineOpFurnitureMakeHelp)
}

::google::protobuf::uint8* OfflineOpFurnitureMakeHelp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.OfflineOpFurnitureMakeHelp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string player_name = 1;
  if (this->player_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->player_name().data(), static_cast<int>(this->player_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.OfflineOpFurnitureMakeHelp.player_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->player_name(), target);
  }

  // fixed32 time = 2;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->time(), target);
  }

  // uint32 uid = 3;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uid(), target);
  }

  // uint32 icon = 4;
  if (this->icon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->icon(), target);
  }

  // .proto.ProfilePictureBin profile_picture_bin = 5;
  if (this->has_profile_picture_bin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->profile_picture_bin_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.OfflineOpFurnitureMakeHelp)
  return target;
}

size_t OfflineOpFurnitureMakeHelp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.OfflineOpFurnitureMakeHelp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string player_name = 1;
  if (this->player_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->player_name());
  }

  // .proto.ProfilePictureBin profile_picture_bin = 5;
  if (this->has_profile_picture_bin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->profile_picture_bin_);
  }

  // fixed32 time = 2;
  if (this->time() != 0) {
    total_size += 1 + 4;
  }

  // uint32 uid = 3;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 icon = 4;
  if (this->icon() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->icon());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OfflineOpFurnitureMakeHelp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.OfflineOpFurnitureMakeHelp)
  GOOGLE_DCHECK_NE(&from, this);
  const OfflineOpFurnitureMakeHelp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OfflineOpFurnitureMakeHelp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.OfflineOpFurnitureMakeHelp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.OfflineOpFurnitureMakeHelp)
    MergeFrom(*source);
  }
}

void OfflineOpFurnitureMakeHelp::MergeFrom(const OfflineOpFurnitureMakeHelp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.OfflineOpFurnitureMakeHelp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.player_name().size() > 0) {

    player_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.player_name_);
  }
  if (from.has_profile_picture_bin()) {
    mutable_profile_picture_bin()->::proto::ProfilePictureBin::MergeFrom(from.profile_picture_bin());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.icon() != 0) {
    set_icon(from.icon());
  }
}

void OfflineOpFurnitureMakeHelp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.OfflineOpFurnitureMakeHelp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfflineOpFurnitureMakeHelp::CopyFrom(const OfflineOpFurnitureMakeHelp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.OfflineOpFurnitureMakeHelp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineOpFurnitureMakeHelp::IsInitialized() const {
  return true;
}

void OfflineOpFurnitureMakeHelp::Swap(OfflineOpFurnitureMakeHelp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineOpFurnitureMakeHelp::InternalSwap(OfflineOpFurnitureMakeHelp* other) {
  using std::swap;
  player_name_.Swap(&other->player_name_);
  swap(profile_picture_bin_, other->profile_picture_bin_);
  swap(time_, other->time_);
  swap(uid_, other->uid_);
  swap(icon_, other->icon_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OfflineOpFurnitureMakeHelp::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OfflineOpFurnitureMakeHelp

// string player_name = 1;
void OfflineOpFurnitureMakeHelp::clear_player_name() {
  player_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OfflineOpFurnitureMakeHelp::player_name() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpFurnitureMakeHelp.player_name)
  return player_name_.GetNoArena();
}
void OfflineOpFurnitureMakeHelp::set_player_name(const ::std::string& value) {
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.OfflineOpFurnitureMakeHelp.player_name)
}
#if LANG_CXX11
void OfflineOpFurnitureMakeHelp::set_player_name(::std::string&& value) {
  
  player_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.OfflineOpFurnitureMakeHelp.player_name)
}
#endif
void OfflineOpFurnitureMakeHelp::set_player_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.OfflineOpFurnitureMakeHelp.player_name)
}
void OfflineOpFurnitureMakeHelp::set_player_name(const char* value, size_t size) {
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.OfflineOpFurnitureMakeHelp.player_name)
}
::std::string* OfflineOpFurnitureMakeHelp::mutable_player_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpFurnitureMakeHelp.player_name)
  return player_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OfflineOpFurnitureMakeHelp::release_player_name() {
  // @@protoc_insertion_point(field_release:proto.OfflineOpFurnitureMakeHelp.player_name)
  
  return player_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OfflineOpFurnitureMakeHelp::set_allocated_player_name(::std::string* player_name) {
  if (player_name != NULL) {
    
  } else {
    
  }
  player_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_name);
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineOpFurnitureMakeHelp.player_name)
}

// fixed32 time = 2;
void OfflineOpFurnitureMakeHelp::clear_time() {
  time_ = 0u;
}
::google::protobuf::uint32 OfflineOpFurnitureMakeHelp::time() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpFurnitureMakeHelp.time)
  return time_;
}
void OfflineOpFurnitureMakeHelp::set_time(::google::protobuf::uint32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineOpFurnitureMakeHelp.time)
}

// uint32 uid = 3;
void OfflineOpFurnitureMakeHelp::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 OfflineOpFurnitureMakeHelp::uid() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpFurnitureMakeHelp.uid)
  return uid_;
}
void OfflineOpFurnitureMakeHelp::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineOpFurnitureMakeHelp.uid)
}

// uint32 icon = 4;
void OfflineOpFurnitureMakeHelp::clear_icon() {
  icon_ = 0u;
}
::google::protobuf::uint32 OfflineOpFurnitureMakeHelp::icon() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpFurnitureMakeHelp.icon)
  return icon_;
}
void OfflineOpFurnitureMakeHelp::set_icon(::google::protobuf::uint32 value) {
  
  icon_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineOpFurnitureMakeHelp.icon)
}

// .proto.ProfilePictureBin profile_picture_bin = 5;
bool OfflineOpFurnitureMakeHelp::has_profile_picture_bin() const {
  return this != internal_default_instance() && profile_picture_bin_ != NULL;
}
void OfflineOpFurnitureMakeHelp::clear_profile_picture_bin() {
  if (GetArenaNoVirtual() == NULL && profile_picture_bin_ != NULL) delete profile_picture_bin_;
  profile_picture_bin_ = NULL;
}
const ::proto::ProfilePictureBin& OfflineOpFurnitureMakeHelp::profile_picture_bin() const {
  const ::proto::ProfilePictureBin* p = profile_picture_bin_;
  // @@protoc_insertion_point(field_get:proto.OfflineOpFurnitureMakeHelp.profile_picture_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ProfilePictureBin*>(
      &::proto::_ProfilePictureBin_default_instance_);
}
::proto::ProfilePictureBin* OfflineOpFurnitureMakeHelp::mutable_profile_picture_bin() {
  
  if (profile_picture_bin_ == NULL) {
    profile_picture_bin_ = new ::proto::ProfilePictureBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpFurnitureMakeHelp.profile_picture_bin)
  return profile_picture_bin_;
}
::proto::ProfilePictureBin* OfflineOpFurnitureMakeHelp::release_profile_picture_bin() {
  // @@protoc_insertion_point(field_release:proto.OfflineOpFurnitureMakeHelp.profile_picture_bin)
  
  ::proto::ProfilePictureBin* temp = profile_picture_bin_;
  profile_picture_bin_ = NULL;
  return temp;
}
void OfflineOpFurnitureMakeHelp::set_allocated_profile_picture_bin(::proto::ProfilePictureBin* profile_picture_bin) {
  delete profile_picture_bin_;
  profile_picture_bin_ = profile_picture_bin;
  if (profile_picture_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineOpFurnitureMakeHelp.profile_picture_bin)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

OfflineOpPlantFlowerActivityGiveFlower::OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry::OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry() {}
OfflineOpPlantFlowerActivityGiveFlower::OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry::OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata OfflineOpPlantFlowerActivityGiveFlower::OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[135];
}
void OfflineOpPlantFlowerActivityGiveFlower::OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void OfflineOpPlantFlowerActivityGiveFlower::OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry::MergeFrom(const OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineOpPlantFlowerActivityGiveFlower::kUidFieldNumber;
const int OfflineOpPlantFlowerActivityGiveFlower::kFlowerNumMapFieldNumber;
const int OfflineOpPlantFlowerActivityGiveFlower::kScheduleIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineOpPlantFlowerActivityGiveFlower::OfflineOpPlantFlowerActivityGiveFlower()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.OfflineOpPlantFlowerActivityGiveFlower)
}
OfflineOpPlantFlowerActivityGiveFlower::OfflineOpPlantFlowerActivityGiveFlower(const OfflineOpPlantFlowerActivityGiveFlower& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  flower_num_map_.MergeFrom(from.flower_num_map_);
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&schedule_id_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(schedule_id_));
  // @@protoc_insertion_point(copy_constructor:proto.OfflineOpPlantFlowerActivityGiveFlower)
}

void OfflineOpPlantFlowerActivityGiveFlower::SharedCtor() {
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&schedule_id_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(schedule_id_));
  _cached_size_ = 0;
}

OfflineOpPlantFlowerActivityGiveFlower::~OfflineOpPlantFlowerActivityGiveFlower() {
  // @@protoc_insertion_point(destructor:proto.OfflineOpPlantFlowerActivityGiveFlower)
  SharedDtor();
}

void OfflineOpPlantFlowerActivityGiveFlower::SharedDtor() {
}

void OfflineOpPlantFlowerActivityGiveFlower::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OfflineOpPlantFlowerActivityGiveFlower::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OfflineOpPlantFlowerActivityGiveFlower& OfflineOpPlantFlowerActivityGiveFlower::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

OfflineOpPlantFlowerActivityGiveFlower* OfflineOpPlantFlowerActivityGiveFlower::New(::google::protobuf::Arena* arena) const {
  OfflineOpPlantFlowerActivityGiveFlower* n = new OfflineOpPlantFlowerActivityGiveFlower;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OfflineOpPlantFlowerActivityGiveFlower::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.OfflineOpPlantFlowerActivityGiveFlower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  flower_num_map_.Clear();
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&schedule_id_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(schedule_id_));
  _internal_metadata_.Clear();
}

bool OfflineOpPlantFlowerActivityGiveFlower::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.OfflineOpPlantFlowerActivityGiveFlower)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> flower_num_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry::Parser< ::google::protobuf::internal::MapField<
              OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&flower_num_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 schedule_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &schedule_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.OfflineOpPlantFlowerActivityGiveFlower)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.OfflineOpPlantFlowerActivityGiveFlower)
  return false;
#undef DO_
}

void OfflineOpPlantFlowerActivityGiveFlower::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.OfflineOpPlantFlowerActivityGiveFlower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // map<uint32, uint32> flower_num_map = 2;
  if (!this->flower_num_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->flower_num_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->flower_num_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->flower_num_map().begin();
          it != this->flower_num_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(flower_num_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->flower_num_map().begin();
          it != this->flower_num_map().end(); ++it) {
        entry.reset(flower_num_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    }
  }

  // uint32 schedule_id = 3;
  if (this->schedule_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->schedule_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.OfflineOpPlantFlowerActivityGiveFlower)
}

::google::protobuf::uint8* OfflineOpPlantFlowerActivityGiveFlower::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.OfflineOpPlantFlowerActivityGiveFlower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // map<uint32, uint32> flower_num_map = 2;
  if (!this->flower_num_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->flower_num_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->flower_num_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->flower_num_map().begin();
          it != this->flower_num_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(flower_num_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->flower_num_map().begin();
          it != this->flower_num_map().end(); ++it) {
        entry.reset(flower_num_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    }
  }

  // uint32 schedule_id = 3;
  if (this->schedule_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->schedule_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.OfflineOpPlantFlowerActivityGiveFlower)
  return target;
}

size_t OfflineOpPlantFlowerActivityGiveFlower::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.OfflineOpPlantFlowerActivityGiveFlower)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> flower_num_map = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->flower_num_map_size());
  {
    ::google::protobuf::scoped_ptr<OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->flower_num_map().begin();
        it != this->flower_num_map().end(); ++it) {
      entry.reset(flower_num_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 schedule_id = 3;
  if (this->schedule_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->schedule_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OfflineOpPlantFlowerActivityGiveFlower::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.OfflineOpPlantFlowerActivityGiveFlower)
  GOOGLE_DCHECK_NE(&from, this);
  const OfflineOpPlantFlowerActivityGiveFlower* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OfflineOpPlantFlowerActivityGiveFlower>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.OfflineOpPlantFlowerActivityGiveFlower)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.OfflineOpPlantFlowerActivityGiveFlower)
    MergeFrom(*source);
  }
}

void OfflineOpPlantFlowerActivityGiveFlower::MergeFrom(const OfflineOpPlantFlowerActivityGiveFlower& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.OfflineOpPlantFlowerActivityGiveFlower)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  flower_num_map_.MergeFrom(from.flower_num_map_);
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.schedule_id() != 0) {
    set_schedule_id(from.schedule_id());
  }
}

void OfflineOpPlantFlowerActivityGiveFlower::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.OfflineOpPlantFlowerActivityGiveFlower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfflineOpPlantFlowerActivityGiveFlower::CopyFrom(const OfflineOpPlantFlowerActivityGiveFlower& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.OfflineOpPlantFlowerActivityGiveFlower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineOpPlantFlowerActivityGiveFlower::IsInitialized() const {
  return true;
}

void OfflineOpPlantFlowerActivityGiveFlower::Swap(OfflineOpPlantFlowerActivityGiveFlower* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineOpPlantFlowerActivityGiveFlower::InternalSwap(OfflineOpPlantFlowerActivityGiveFlower* other) {
  using std::swap;
  flower_num_map_.Swap(&other->flower_num_map_);
  swap(uid_, other->uid_);
  swap(schedule_id_, other->schedule_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OfflineOpPlantFlowerActivityGiveFlower::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OfflineOpPlantFlowerActivityGiveFlower

// uint32 uid = 1;
void OfflineOpPlantFlowerActivityGiveFlower::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 OfflineOpPlantFlowerActivityGiveFlower::uid() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpPlantFlowerActivityGiveFlower.uid)
  return uid_;
}
void OfflineOpPlantFlowerActivityGiveFlower::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineOpPlantFlowerActivityGiveFlower.uid)
}

// map<uint32, uint32> flower_num_map = 2;
int OfflineOpPlantFlowerActivityGiveFlower::flower_num_map_size() const {
  return flower_num_map_.size();
}
void OfflineOpPlantFlowerActivityGiveFlower::clear_flower_num_map() {
  flower_num_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
OfflineOpPlantFlowerActivityGiveFlower::flower_num_map() const {
  // @@protoc_insertion_point(field_map:proto.OfflineOpPlantFlowerActivityGiveFlower.flower_num_map)
  return flower_num_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
OfflineOpPlantFlowerActivityGiveFlower::mutable_flower_num_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.OfflineOpPlantFlowerActivityGiveFlower.flower_num_map)
  return flower_num_map_.MutableMap();
}

// uint32 schedule_id = 3;
void OfflineOpPlantFlowerActivityGiveFlower::clear_schedule_id() {
  schedule_id_ = 0u;
}
::google::protobuf::uint32 OfflineOpPlantFlowerActivityGiveFlower::schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpPlantFlowerActivityGiveFlower.schedule_id)
  return schedule_id_;
}
void OfflineOpPlantFlowerActivityGiveFlower::set_schedule_id(::google::protobuf::uint32 value) {
  
  schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineOpPlantFlowerActivityGiveFlower.schedule_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineOpWinterCampActivityGiveItem::kUidFieldNumber;
const int OfflineOpWinterCampActivityGiveItem::kItemBinListFieldNumber;
const int OfflineOpWinterCampActivityGiveItem::kScheduleIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineOpWinterCampActivityGiveItem::OfflineOpWinterCampActivityGiveItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.OfflineOpWinterCampActivityGiveItem)
}
OfflineOpWinterCampActivityGiveItem::OfflineOpWinterCampActivityGiveItem(const OfflineOpWinterCampActivityGiveItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_bin_list_(from.item_bin_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&schedule_id_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(schedule_id_));
  // @@protoc_insertion_point(copy_constructor:proto.OfflineOpWinterCampActivityGiveItem)
}

void OfflineOpWinterCampActivityGiveItem::SharedCtor() {
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&schedule_id_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(schedule_id_));
  _cached_size_ = 0;
}

OfflineOpWinterCampActivityGiveItem::~OfflineOpWinterCampActivityGiveItem() {
  // @@protoc_insertion_point(destructor:proto.OfflineOpWinterCampActivityGiveItem)
  SharedDtor();
}

void OfflineOpWinterCampActivityGiveItem::SharedDtor() {
}

void OfflineOpWinterCampActivityGiveItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OfflineOpWinterCampActivityGiveItem::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OfflineOpWinterCampActivityGiveItem& OfflineOpWinterCampActivityGiveItem::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

OfflineOpWinterCampActivityGiveItem* OfflineOpWinterCampActivityGiveItem::New(::google::protobuf::Arena* arena) const {
  OfflineOpWinterCampActivityGiveItem* n = new OfflineOpWinterCampActivityGiveItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OfflineOpWinterCampActivityGiveItem::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.OfflineOpWinterCampActivityGiveItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_bin_list_.Clear();
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&schedule_id_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(schedule_id_));
  _internal_metadata_.Clear();
}

bool OfflineOpWinterCampActivityGiveItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.OfflineOpWinterCampActivityGiveItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ItemParamBin item_bin_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_bin_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 schedule_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &schedule_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.OfflineOpWinterCampActivityGiveItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.OfflineOpWinterCampActivityGiveItem)
  return false;
#undef DO_
}

void OfflineOpWinterCampActivityGiveItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.OfflineOpWinterCampActivityGiveItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // repeated .proto.ItemParamBin item_bin_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_bin_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->item_bin_list(static_cast<int>(i)), output);
  }

  // uint32 schedule_id = 3;
  if (this->schedule_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->schedule_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.OfflineOpWinterCampActivityGiveItem)
}

::google::protobuf::uint8* OfflineOpWinterCampActivityGiveItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.OfflineOpWinterCampActivityGiveItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // repeated .proto.ItemParamBin item_bin_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_bin_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->item_bin_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 schedule_id = 3;
  if (this->schedule_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->schedule_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.OfflineOpWinterCampActivityGiveItem)
  return target;
}

size_t OfflineOpWinterCampActivityGiveItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.OfflineOpWinterCampActivityGiveItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ItemParamBin item_bin_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->item_bin_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item_bin_list(static_cast<int>(i)));
    }
  }

  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 schedule_id = 3;
  if (this->schedule_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->schedule_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OfflineOpWinterCampActivityGiveItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.OfflineOpWinterCampActivityGiveItem)
  GOOGLE_DCHECK_NE(&from, this);
  const OfflineOpWinterCampActivityGiveItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OfflineOpWinterCampActivityGiveItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.OfflineOpWinterCampActivityGiveItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.OfflineOpWinterCampActivityGiveItem)
    MergeFrom(*source);
  }
}

void OfflineOpWinterCampActivityGiveItem::MergeFrom(const OfflineOpWinterCampActivityGiveItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.OfflineOpWinterCampActivityGiveItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_bin_list_.MergeFrom(from.item_bin_list_);
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.schedule_id() != 0) {
    set_schedule_id(from.schedule_id());
  }
}

void OfflineOpWinterCampActivityGiveItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.OfflineOpWinterCampActivityGiveItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfflineOpWinterCampActivityGiveItem::CopyFrom(const OfflineOpWinterCampActivityGiveItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.OfflineOpWinterCampActivityGiveItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineOpWinterCampActivityGiveItem::IsInitialized() const {
  return true;
}

void OfflineOpWinterCampActivityGiveItem::Swap(OfflineOpWinterCampActivityGiveItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineOpWinterCampActivityGiveItem::InternalSwap(OfflineOpWinterCampActivityGiveItem* other) {
  using std::swap;
  item_bin_list_.InternalSwap(&other->item_bin_list_);
  swap(uid_, other->uid_);
  swap(schedule_id_, other->schedule_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OfflineOpWinterCampActivityGiveItem::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OfflineOpWinterCampActivityGiveItem

// uint32 uid = 1;
void OfflineOpWinterCampActivityGiveItem::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 OfflineOpWinterCampActivityGiveItem::uid() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpWinterCampActivityGiveItem.uid)
  return uid_;
}
void OfflineOpWinterCampActivityGiveItem::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineOpWinterCampActivityGiveItem.uid)
}

// repeated .proto.ItemParamBin item_bin_list = 2;
int OfflineOpWinterCampActivityGiveItem::item_bin_list_size() const {
  return item_bin_list_.size();
}
void OfflineOpWinterCampActivityGiveItem::clear_item_bin_list() {
  item_bin_list_.Clear();
}
const ::proto::ItemParamBin& OfflineOpWinterCampActivityGiveItem::item_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpWinterCampActivityGiveItem.item_bin_list)
  return item_bin_list_.Get(index);
}
::proto::ItemParamBin* OfflineOpWinterCampActivityGiveItem::mutable_item_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpWinterCampActivityGiveItem.item_bin_list)
  return item_bin_list_.Mutable(index);
}
::proto::ItemParamBin* OfflineOpWinterCampActivityGiveItem::add_item_bin_list() {
  // @@protoc_insertion_point(field_add:proto.OfflineOpWinterCampActivityGiveItem.item_bin_list)
  return item_bin_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ItemParamBin >*
OfflineOpWinterCampActivityGiveItem::mutable_item_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.OfflineOpWinterCampActivityGiveItem.item_bin_list)
  return &item_bin_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ItemParamBin >&
OfflineOpWinterCampActivityGiveItem::item_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.OfflineOpWinterCampActivityGiveItem.item_bin_list)
  return item_bin_list_;
}

// uint32 schedule_id = 3;
void OfflineOpWinterCampActivityGiveItem::clear_schedule_id() {
  schedule_id_ = 0u;
}
::google::protobuf::uint32 OfflineOpWinterCampActivityGiveItem::schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpWinterCampActivityGiveItem.schedule_id)
  return schedule_id_;
}
void OfflineOpWinterCampActivityGiveItem::set_schedule_id(::google::protobuf::uint32 value) {
  
  schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineOpWinterCampActivityGiveItem.schedule_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineOpGCGSettle::kSettleDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineOpGCGSettle::OfflineOpGCGSettle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.OfflineOpGCGSettle)
}
OfflineOpGCGSettle::OfflineOpGCGSettle(const OfflineOpGCGSettle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_settle_data()) {
    settle_data_ = new ::proto::GCGSettleData(*from.settle_data_);
  } else {
    settle_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.OfflineOpGCGSettle)
}

void OfflineOpGCGSettle::SharedCtor() {
  settle_data_ = NULL;
  _cached_size_ = 0;
}

OfflineOpGCGSettle::~OfflineOpGCGSettle() {
  // @@protoc_insertion_point(destructor:proto.OfflineOpGCGSettle)
  SharedDtor();
}

void OfflineOpGCGSettle::SharedDtor() {
  if (this != internal_default_instance()) delete settle_data_;
}

void OfflineOpGCGSettle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OfflineOpGCGSettle::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OfflineOpGCGSettle& OfflineOpGCGSettle::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

OfflineOpGCGSettle* OfflineOpGCGSettle::New(::google::protobuf::Arena* arena) const {
  OfflineOpGCGSettle* n = new OfflineOpGCGSettle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OfflineOpGCGSettle::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.OfflineOpGCGSettle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && settle_data_ != NULL) {
    delete settle_data_;
  }
  settle_data_ = NULL;
  _internal_metadata_.Clear();
}

bool OfflineOpGCGSettle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.OfflineOpGCGSettle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.GCGSettleData settle_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_settle_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.OfflineOpGCGSettle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.OfflineOpGCGSettle)
  return false;
#undef DO_
}

void OfflineOpGCGSettle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.OfflineOpGCGSettle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.GCGSettleData settle_data = 1;
  if (this->has_settle_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->settle_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.OfflineOpGCGSettle)
}

::google::protobuf::uint8* OfflineOpGCGSettle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.OfflineOpGCGSettle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.GCGSettleData settle_data = 1;
  if (this->has_settle_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->settle_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.OfflineOpGCGSettle)
  return target;
}

size_t OfflineOpGCGSettle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.OfflineOpGCGSettle)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.GCGSettleData settle_data = 1;
  if (this->has_settle_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->settle_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OfflineOpGCGSettle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.OfflineOpGCGSettle)
  GOOGLE_DCHECK_NE(&from, this);
  const OfflineOpGCGSettle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OfflineOpGCGSettle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.OfflineOpGCGSettle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.OfflineOpGCGSettle)
    MergeFrom(*source);
  }
}

void OfflineOpGCGSettle::MergeFrom(const OfflineOpGCGSettle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.OfflineOpGCGSettle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_settle_data()) {
    mutable_settle_data()->::proto::GCGSettleData::MergeFrom(from.settle_data());
  }
}

void OfflineOpGCGSettle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.OfflineOpGCGSettle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfflineOpGCGSettle::CopyFrom(const OfflineOpGCGSettle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.OfflineOpGCGSettle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineOpGCGSettle::IsInitialized() const {
  return true;
}

void OfflineOpGCGSettle::Swap(OfflineOpGCGSettle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineOpGCGSettle::InternalSwap(OfflineOpGCGSettle* other) {
  using std::swap;
  swap(settle_data_, other->settle_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OfflineOpGCGSettle::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OfflineOpGCGSettle

// .proto.GCGSettleData settle_data = 1;
bool OfflineOpGCGSettle::has_settle_data() const {
  return this != internal_default_instance() && settle_data_ != NULL;
}
void OfflineOpGCGSettle::clear_settle_data() {
  if (GetArenaNoVirtual() == NULL && settle_data_ != NULL) delete settle_data_;
  settle_data_ = NULL;
}
const ::proto::GCGSettleData& OfflineOpGCGSettle::settle_data() const {
  const ::proto::GCGSettleData* p = settle_data_;
  // @@protoc_insertion_point(field_get:proto.OfflineOpGCGSettle.settle_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::GCGSettleData*>(
      &::proto::_GCGSettleData_default_instance_);
}
::proto::GCGSettleData* OfflineOpGCGSettle::mutable_settle_data() {
  
  if (settle_data_ == NULL) {
    settle_data_ = new ::proto::GCGSettleData;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpGCGSettle.settle_data)
  return settle_data_;
}
::proto::GCGSettleData* OfflineOpGCGSettle::release_settle_data() {
  // @@protoc_insertion_point(field_release:proto.OfflineOpGCGSettle.settle_data)
  
  ::proto::GCGSettleData* temp = settle_data_;
  settle_data_ = NULL;
  return temp;
}
void OfflineOpGCGSettle::set_allocated_settle_data(::proto::GCGSettleData* settle_data) {
  delete settle_data_;
  settle_data_ = settle_data;
  if (settle_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineOpGCGSettle.settle_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

OfflineOpActivityGiveGift::OfflineOpActivityGiveGift_GiftNumMapEntry::OfflineOpActivityGiveGift_GiftNumMapEntry() {}
OfflineOpActivityGiveGift::OfflineOpActivityGiveGift_GiftNumMapEntry::OfflineOpActivityGiveGift_GiftNumMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata OfflineOpActivityGiveGift::OfflineOpActivityGiveGift_GiftNumMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[139];
}
void OfflineOpActivityGiveGift::OfflineOpActivityGiveGift_GiftNumMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void OfflineOpActivityGiveGift::OfflineOpActivityGiveGift_GiftNumMapEntry::MergeFrom(const OfflineOpActivityGiveGift_GiftNumMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineOpActivityGiveGift::kUidFieldNumber;
const int OfflineOpActivityGiveGift::kGiftNumMapFieldNumber;
const int OfflineOpActivityGiveGift::kScheduleIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineOpActivityGiveGift::OfflineOpActivityGiveGift()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.OfflineOpActivityGiveGift)
}
OfflineOpActivityGiveGift::OfflineOpActivityGiveGift(const OfflineOpActivityGiveGift& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gift_num_map_.MergeFrom(from.gift_num_map_);
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&schedule_id_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(schedule_id_));
  // @@protoc_insertion_point(copy_constructor:proto.OfflineOpActivityGiveGift)
}

void OfflineOpActivityGiveGift::SharedCtor() {
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&schedule_id_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(schedule_id_));
  _cached_size_ = 0;
}

OfflineOpActivityGiveGift::~OfflineOpActivityGiveGift() {
  // @@protoc_insertion_point(destructor:proto.OfflineOpActivityGiveGift)
  SharedDtor();
}

void OfflineOpActivityGiveGift::SharedDtor() {
}

void OfflineOpActivityGiveGift::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OfflineOpActivityGiveGift::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OfflineOpActivityGiveGift& OfflineOpActivityGiveGift::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

OfflineOpActivityGiveGift* OfflineOpActivityGiveGift::New(::google::protobuf::Arena* arena) const {
  OfflineOpActivityGiveGift* n = new OfflineOpActivityGiveGift;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OfflineOpActivityGiveGift::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.OfflineOpActivityGiveGift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gift_num_map_.Clear();
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&schedule_id_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(schedule_id_));
  _internal_metadata_.Clear();
}

bool OfflineOpActivityGiveGift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.OfflineOpActivityGiveGift)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> gift_num_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          OfflineOpActivityGiveGift_GiftNumMapEntry::Parser< ::google::protobuf::internal::MapField<
              OfflineOpActivityGiveGift_GiftNumMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&gift_num_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 schedule_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &schedule_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.OfflineOpActivityGiveGift)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.OfflineOpActivityGiveGift)
  return false;
#undef DO_
}

void OfflineOpActivityGiveGift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.OfflineOpActivityGiveGift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // map<uint32, uint32> gift_num_map = 2;
  if (!this->gift_num_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->gift_num_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->gift_num_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->gift_num_map().begin();
          it != this->gift_num_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<OfflineOpActivityGiveGift_GiftNumMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(gift_num_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<OfflineOpActivityGiveGift_GiftNumMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->gift_num_map().begin();
          it != this->gift_num_map().end(); ++it) {
        entry.reset(gift_num_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    }
  }

  // uint32 schedule_id = 3;
  if (this->schedule_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->schedule_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.OfflineOpActivityGiveGift)
}

::google::protobuf::uint8* OfflineOpActivityGiveGift::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.OfflineOpActivityGiveGift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // map<uint32, uint32> gift_num_map = 2;
  if (!this->gift_num_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->gift_num_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->gift_num_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->gift_num_map().begin();
          it != this->gift_num_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<OfflineOpActivityGiveGift_GiftNumMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(gift_num_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<OfflineOpActivityGiveGift_GiftNumMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->gift_num_map().begin();
          it != this->gift_num_map().end(); ++it) {
        entry.reset(gift_num_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    }
  }

  // uint32 schedule_id = 3;
  if (this->schedule_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->schedule_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.OfflineOpActivityGiveGift)
  return target;
}

size_t OfflineOpActivityGiveGift::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.OfflineOpActivityGiveGift)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> gift_num_map = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->gift_num_map_size());
  {
    ::google::protobuf::scoped_ptr<OfflineOpActivityGiveGift_GiftNumMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->gift_num_map().begin();
        it != this->gift_num_map().end(); ++it) {
      entry.reset(gift_num_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 schedule_id = 3;
  if (this->schedule_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->schedule_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OfflineOpActivityGiveGift::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.OfflineOpActivityGiveGift)
  GOOGLE_DCHECK_NE(&from, this);
  const OfflineOpActivityGiveGift* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OfflineOpActivityGiveGift>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.OfflineOpActivityGiveGift)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.OfflineOpActivityGiveGift)
    MergeFrom(*source);
  }
}

void OfflineOpActivityGiveGift::MergeFrom(const OfflineOpActivityGiveGift& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.OfflineOpActivityGiveGift)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gift_num_map_.MergeFrom(from.gift_num_map_);
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.schedule_id() != 0) {
    set_schedule_id(from.schedule_id());
  }
}

void OfflineOpActivityGiveGift::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.OfflineOpActivityGiveGift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfflineOpActivityGiveGift::CopyFrom(const OfflineOpActivityGiveGift& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.OfflineOpActivityGiveGift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineOpActivityGiveGift::IsInitialized() const {
  return true;
}

void OfflineOpActivityGiveGift::Swap(OfflineOpActivityGiveGift* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineOpActivityGiveGift::InternalSwap(OfflineOpActivityGiveGift* other) {
  using std::swap;
  gift_num_map_.Swap(&other->gift_num_map_);
  swap(uid_, other->uid_);
  swap(schedule_id_, other->schedule_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OfflineOpActivityGiveGift::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OfflineOpActivityGiveGift

// uint32 uid = 1;
void OfflineOpActivityGiveGift::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 OfflineOpActivityGiveGift::uid() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpActivityGiveGift.uid)
  return uid_;
}
void OfflineOpActivityGiveGift::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineOpActivityGiveGift.uid)
}

// map<uint32, uint32> gift_num_map = 2;
int OfflineOpActivityGiveGift::gift_num_map_size() const {
  return gift_num_map_.size();
}
void OfflineOpActivityGiveGift::clear_gift_num_map() {
  gift_num_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
OfflineOpActivityGiveGift::gift_num_map() const {
  // @@protoc_insertion_point(field_map:proto.OfflineOpActivityGiveGift.gift_num_map)
  return gift_num_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
OfflineOpActivityGiveGift::mutable_gift_num_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.OfflineOpActivityGiveGift.gift_num_map)
  return gift_num_map_.MutableMap();
}

// uint32 schedule_id = 3;
void OfflineOpActivityGiveGift::clear_schedule_id() {
  schedule_id_ = 0u;
}
::google::protobuf::uint32 OfflineOpActivityGiveGift::schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpActivityGiveGift.schedule_id)
  return schedule_id_;
}
void OfflineOpActivityGiveGift::set_schedule_id(::google::protobuf::uint32 value) {
  
  schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineOpActivityGiveGift.schedule_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineOpVintageActivityDividend::kUidFieldNumber;
const int OfflineOpVintageActivityDividend::kScheduleIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineOpVintageActivityDividend::OfflineOpVintageActivityDividend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.OfflineOpVintageActivityDividend)
}
OfflineOpVintageActivityDividend::OfflineOpVintageActivityDividend(const OfflineOpVintageActivityDividend& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&schedule_id_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(schedule_id_));
  // @@protoc_insertion_point(copy_constructor:proto.OfflineOpVintageActivityDividend)
}

void OfflineOpVintageActivityDividend::SharedCtor() {
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&schedule_id_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(schedule_id_));
  _cached_size_ = 0;
}

OfflineOpVintageActivityDividend::~OfflineOpVintageActivityDividend() {
  // @@protoc_insertion_point(destructor:proto.OfflineOpVintageActivityDividend)
  SharedDtor();
}

void OfflineOpVintageActivityDividend::SharedDtor() {
}

void OfflineOpVintageActivityDividend::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OfflineOpVintageActivityDividend::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OfflineOpVintageActivityDividend& OfflineOpVintageActivityDividend::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

OfflineOpVintageActivityDividend* OfflineOpVintageActivityDividend::New(::google::protobuf::Arena* arena) const {
  OfflineOpVintageActivityDividend* n = new OfflineOpVintageActivityDividend;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OfflineOpVintageActivityDividend::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.OfflineOpVintageActivityDividend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&schedule_id_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(schedule_id_));
  _internal_metadata_.Clear();
}

bool OfflineOpVintageActivityDividend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.OfflineOpVintageActivityDividend)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 schedule_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &schedule_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.OfflineOpVintageActivityDividend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.OfflineOpVintageActivityDividend)
  return false;
#undef DO_
}

void OfflineOpVintageActivityDividend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.OfflineOpVintageActivityDividend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // uint32 schedule_id = 2;
  if (this->schedule_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->schedule_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.OfflineOpVintageActivityDividend)
}

::google::protobuf::uint8* OfflineOpVintageActivityDividend::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.OfflineOpVintageActivityDividend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // uint32 schedule_id = 2;
  if (this->schedule_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->schedule_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.OfflineOpVintageActivityDividend)
  return target;
}

size_t OfflineOpVintageActivityDividend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.OfflineOpVintageActivityDividend)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 schedule_id = 2;
  if (this->schedule_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->schedule_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OfflineOpVintageActivityDividend::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.OfflineOpVintageActivityDividend)
  GOOGLE_DCHECK_NE(&from, this);
  const OfflineOpVintageActivityDividend* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OfflineOpVintageActivityDividend>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.OfflineOpVintageActivityDividend)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.OfflineOpVintageActivityDividend)
    MergeFrom(*source);
  }
}

void OfflineOpVintageActivityDividend::MergeFrom(const OfflineOpVintageActivityDividend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.OfflineOpVintageActivityDividend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.schedule_id() != 0) {
    set_schedule_id(from.schedule_id());
  }
}

void OfflineOpVintageActivityDividend::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.OfflineOpVintageActivityDividend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfflineOpVintageActivityDividend::CopyFrom(const OfflineOpVintageActivityDividend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.OfflineOpVintageActivityDividend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineOpVintageActivityDividend::IsInitialized() const {
  return true;
}

void OfflineOpVintageActivityDividend::Swap(OfflineOpVintageActivityDividend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineOpVintageActivityDividend::InternalSwap(OfflineOpVintageActivityDividend* other) {
  using std::swap;
  swap(uid_, other->uid_);
  swap(schedule_id_, other->schedule_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OfflineOpVintageActivityDividend::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OfflineOpVintageActivityDividend

// uint32 uid = 1;
void OfflineOpVintageActivityDividend::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 OfflineOpVintageActivityDividend::uid() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpVintageActivityDividend.uid)
  return uid_;
}
void OfflineOpVintageActivityDividend::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineOpVintageActivityDividend.uid)
}

// uint32 schedule_id = 2;
void OfflineOpVintageActivityDividend::clear_schedule_id() {
  schedule_id_ = 0u;
}
::google::protobuf::uint32 OfflineOpVintageActivityDividend::schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpVintageActivityDividend.schedule_id)
  return schedule_id_;
}
void OfflineOpVintageActivityDividend::set_schedule_id(::google::protobuf::uint32 value) {
  
  schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineOpVintageActivityDividend.schedule_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineOpBin::kTestOpFieldNumber;
const int OfflineOpBin::kFurnitureMakeHelpOpFieldNumber;
const int OfflineOpBin::kPlantFlowerGiveFlowerOpFieldNumber;
const int OfflineOpBin::kWinterCampGiveItemOpFieldNumber;
const int OfflineOpBin::kActivityGiveGiftOpFieldNumber;
const int OfflineOpBin::kVintageDividendOpFieldNumber;
const int OfflineOpBin::kGcgSettleOpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineOpBin::OfflineOpBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.OfflineOpBin)
}
OfflineOpBin::OfflineOpBin(const OfflineOpBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_detail();
  switch (from.detail_case()) {
    case kTestOp: {
      mutable_test_op()->::proto::OfflineOpTestOp::MergeFrom(from.test_op());
      break;
    }
    case kFurnitureMakeHelpOp: {
      mutable_furniture_make_help_op()->::proto::OfflineOpFurnitureMakeHelp::MergeFrom(from.furniture_make_help_op());
      break;
    }
    case kPlantFlowerGiveFlowerOp: {
      mutable_plant_flower_give_flower_op()->::proto::OfflineOpPlantFlowerActivityGiveFlower::MergeFrom(from.plant_flower_give_flower_op());
      break;
    }
    case kWinterCampGiveItemOp: {
      mutable_winter_camp_give_item_op()->::proto::OfflineOpWinterCampActivityGiveItem::MergeFrom(from.winter_camp_give_item_op());
      break;
    }
    case kActivityGiveGiftOp: {
      mutable_activity_give_gift_op()->::proto::OfflineOpActivityGiveGift::MergeFrom(from.activity_give_gift_op());
      break;
    }
    case kVintageDividendOp: {
      mutable_vintage_dividend_op()->::proto::OfflineOpVintageActivityDividend::MergeFrom(from.vintage_dividend_op());
      break;
    }
    case kGcgSettleOp: {
      mutable_gcg_settle_op()->::proto::OfflineOpGCGSettle::MergeFrom(from.gcg_settle_op());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.OfflineOpBin)
}

void OfflineOpBin::SharedCtor() {
  clear_has_detail();
  _cached_size_ = 0;
}

OfflineOpBin::~OfflineOpBin() {
  // @@protoc_insertion_point(destructor:proto.OfflineOpBin)
  SharedDtor();
}

void OfflineOpBin::SharedDtor() {
  if (has_detail()) {
    clear_detail();
  }
}

void OfflineOpBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OfflineOpBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OfflineOpBin& OfflineOpBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

OfflineOpBin* OfflineOpBin::New(::google::protobuf::Arena* arena) const {
  OfflineOpBin* n = new OfflineOpBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OfflineOpBin::clear_detail() {
// @@protoc_insertion_point(one_of_clear_start:proto.OfflineOpBin)
  switch (detail_case()) {
    case kTestOp: {
      delete detail_.test_op_;
      break;
    }
    case kFurnitureMakeHelpOp: {
      delete detail_.furniture_make_help_op_;
      break;
    }
    case kPlantFlowerGiveFlowerOp: {
      delete detail_.plant_flower_give_flower_op_;
      break;
    }
    case kWinterCampGiveItemOp: {
      delete detail_.winter_camp_give_item_op_;
      break;
    }
    case kActivityGiveGiftOp: {
      delete detail_.activity_give_gift_op_;
      break;
    }
    case kVintageDividendOp: {
      delete detail_.vintage_dividend_op_;
      break;
    }
    case kGcgSettleOp: {
      delete detail_.gcg_settle_op_;
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DETAIL_NOT_SET;
}


void OfflineOpBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.OfflineOpBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_detail();
  _internal_metadata_.Clear();
}

bool OfflineOpBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.OfflineOpBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.OfflineOpTestOp test_op = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_test_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.OfflineOpFurnitureMakeHelp furniture_make_help_op = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_furniture_make_help_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.OfflineOpPlantFlowerActivityGiveFlower plant_flower_give_flower_op = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_plant_flower_give_flower_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.OfflineOpWinterCampActivityGiveItem winter_camp_give_item_op = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_winter_camp_give_item_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.OfflineOpActivityGiveGift activity_give_gift_op = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_activity_give_gift_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.OfflineOpVintageActivityDividend vintage_dividend_op = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vintage_dividend_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.OfflineOpGCGSettle gcg_settle_op = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gcg_settle_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.OfflineOpBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.OfflineOpBin)
  return false;
#undef DO_
}

void OfflineOpBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.OfflineOpBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.OfflineOpTestOp test_op = 1;
  if (has_test_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *detail_.test_op_, output);
  }

  // .proto.OfflineOpFurnitureMakeHelp furniture_make_help_op = 2;
  if (has_furniture_make_help_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *detail_.furniture_make_help_op_, output);
  }

  // .proto.OfflineOpPlantFlowerActivityGiveFlower plant_flower_give_flower_op = 3;
  if (has_plant_flower_give_flower_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *detail_.plant_flower_give_flower_op_, output);
  }

  // .proto.OfflineOpWinterCampActivityGiveItem winter_camp_give_item_op = 4;
  if (has_winter_camp_give_item_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *detail_.winter_camp_give_item_op_, output);
  }

  // .proto.OfflineOpActivityGiveGift activity_give_gift_op = 5;
  if (has_activity_give_gift_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *detail_.activity_give_gift_op_, output);
  }

  // .proto.OfflineOpVintageActivityDividend vintage_dividend_op = 6;
  if (has_vintage_dividend_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *detail_.vintage_dividend_op_, output);
  }

  // .proto.OfflineOpGCGSettle gcg_settle_op = 7;
  if (has_gcg_settle_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *detail_.gcg_settle_op_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.OfflineOpBin)
}

::google::protobuf::uint8* OfflineOpBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.OfflineOpBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.OfflineOpTestOp test_op = 1;
  if (has_test_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *detail_.test_op_, deterministic, target);
  }

  // .proto.OfflineOpFurnitureMakeHelp furniture_make_help_op = 2;
  if (has_furniture_make_help_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *detail_.furniture_make_help_op_, deterministic, target);
  }

  // .proto.OfflineOpPlantFlowerActivityGiveFlower plant_flower_give_flower_op = 3;
  if (has_plant_flower_give_flower_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *detail_.plant_flower_give_flower_op_, deterministic, target);
  }

  // .proto.OfflineOpWinterCampActivityGiveItem winter_camp_give_item_op = 4;
  if (has_winter_camp_give_item_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *detail_.winter_camp_give_item_op_, deterministic, target);
  }

  // .proto.OfflineOpActivityGiveGift activity_give_gift_op = 5;
  if (has_activity_give_gift_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *detail_.activity_give_gift_op_, deterministic, target);
  }

  // .proto.OfflineOpVintageActivityDividend vintage_dividend_op = 6;
  if (has_vintage_dividend_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *detail_.vintage_dividend_op_, deterministic, target);
  }

  // .proto.OfflineOpGCGSettle gcg_settle_op = 7;
  if (has_gcg_settle_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *detail_.gcg_settle_op_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.OfflineOpBin)
  return target;
}

size_t OfflineOpBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.OfflineOpBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (detail_case()) {
    // .proto.OfflineOpTestOp test_op = 1;
    case kTestOp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.test_op_);
      break;
    }
    // .proto.OfflineOpFurnitureMakeHelp furniture_make_help_op = 2;
    case kFurnitureMakeHelpOp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.furniture_make_help_op_);
      break;
    }
    // .proto.OfflineOpPlantFlowerActivityGiveFlower plant_flower_give_flower_op = 3;
    case kPlantFlowerGiveFlowerOp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.plant_flower_give_flower_op_);
      break;
    }
    // .proto.OfflineOpWinterCampActivityGiveItem winter_camp_give_item_op = 4;
    case kWinterCampGiveItemOp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.winter_camp_give_item_op_);
      break;
    }
    // .proto.OfflineOpActivityGiveGift activity_give_gift_op = 5;
    case kActivityGiveGiftOp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.activity_give_gift_op_);
      break;
    }
    // .proto.OfflineOpVintageActivityDividend vintage_dividend_op = 6;
    case kVintageDividendOp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.vintage_dividend_op_);
      break;
    }
    // .proto.OfflineOpGCGSettle gcg_settle_op = 7;
    case kGcgSettleOp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.gcg_settle_op_);
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OfflineOpBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.OfflineOpBin)
  GOOGLE_DCHECK_NE(&from, this);
  const OfflineOpBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OfflineOpBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.OfflineOpBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.OfflineOpBin)
    MergeFrom(*source);
  }
}

void OfflineOpBin::MergeFrom(const OfflineOpBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.OfflineOpBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.detail_case()) {
    case kTestOp: {
      mutable_test_op()->::proto::OfflineOpTestOp::MergeFrom(from.test_op());
      break;
    }
    case kFurnitureMakeHelpOp: {
      mutable_furniture_make_help_op()->::proto::OfflineOpFurnitureMakeHelp::MergeFrom(from.furniture_make_help_op());
      break;
    }
    case kPlantFlowerGiveFlowerOp: {
      mutable_plant_flower_give_flower_op()->::proto::OfflineOpPlantFlowerActivityGiveFlower::MergeFrom(from.plant_flower_give_flower_op());
      break;
    }
    case kWinterCampGiveItemOp: {
      mutable_winter_camp_give_item_op()->::proto::OfflineOpWinterCampActivityGiveItem::MergeFrom(from.winter_camp_give_item_op());
      break;
    }
    case kActivityGiveGiftOp: {
      mutable_activity_give_gift_op()->::proto::OfflineOpActivityGiveGift::MergeFrom(from.activity_give_gift_op());
      break;
    }
    case kVintageDividendOp: {
      mutable_vintage_dividend_op()->::proto::OfflineOpVintageActivityDividend::MergeFrom(from.vintage_dividend_op());
      break;
    }
    case kGcgSettleOp: {
      mutable_gcg_settle_op()->::proto::OfflineOpGCGSettle::MergeFrom(from.gcg_settle_op());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
}

void OfflineOpBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.OfflineOpBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfflineOpBin::CopyFrom(const OfflineOpBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.OfflineOpBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineOpBin::IsInitialized() const {
  return true;
}

void OfflineOpBin::Swap(OfflineOpBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineOpBin::InternalSwap(OfflineOpBin* other) {
  using std::swap;
  swap(detail_, other->detail_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OfflineOpBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OfflineOpBin

// .proto.OfflineOpTestOp test_op = 1;
bool OfflineOpBin::has_test_op() const {
  return detail_case() == kTestOp;
}
void OfflineOpBin::set_has_test_op() {
  _oneof_case_[0] = kTestOp;
}
void OfflineOpBin::clear_test_op() {
  if (has_test_op()) {
    delete detail_.test_op_;
    clear_has_detail();
  }
}
 const ::proto::OfflineOpTestOp& OfflineOpBin::test_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpBin.test_op)
  return has_test_op()
      ? *detail_.test_op_
      : ::proto::OfflineOpTestOp::default_instance();
}
::proto::OfflineOpTestOp* OfflineOpBin::mutable_test_op() {
  if (!has_test_op()) {
    clear_detail();
    set_has_test_op();
    detail_.test_op_ = new ::proto::OfflineOpTestOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpBin.test_op)
  return detail_.test_op_;
}
::proto::OfflineOpTestOp* OfflineOpBin::release_test_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineOpBin.test_op)
  if (has_test_op()) {
    clear_has_detail();
    ::proto::OfflineOpTestOp* temp = detail_.test_op_;
    detail_.test_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineOpBin::set_allocated_test_op(::proto::OfflineOpTestOp* test_op) {
  clear_detail();
  if (test_op) {
    set_has_test_op();
    detail_.test_op_ = test_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineOpBin.test_op)
}

// .proto.OfflineOpFurnitureMakeHelp furniture_make_help_op = 2;
bool OfflineOpBin::has_furniture_make_help_op() const {
  return detail_case() == kFurnitureMakeHelpOp;
}
void OfflineOpBin::set_has_furniture_make_help_op() {
  _oneof_case_[0] = kFurnitureMakeHelpOp;
}
void OfflineOpBin::clear_furniture_make_help_op() {
  if (has_furniture_make_help_op()) {
    delete detail_.furniture_make_help_op_;
    clear_has_detail();
  }
}
 const ::proto::OfflineOpFurnitureMakeHelp& OfflineOpBin::furniture_make_help_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpBin.furniture_make_help_op)
  return has_furniture_make_help_op()
      ? *detail_.furniture_make_help_op_
      : ::proto::OfflineOpFurnitureMakeHelp::default_instance();
}
::proto::OfflineOpFurnitureMakeHelp* OfflineOpBin::mutable_furniture_make_help_op() {
  if (!has_furniture_make_help_op()) {
    clear_detail();
    set_has_furniture_make_help_op();
    detail_.furniture_make_help_op_ = new ::proto::OfflineOpFurnitureMakeHelp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpBin.furniture_make_help_op)
  return detail_.furniture_make_help_op_;
}
::proto::OfflineOpFurnitureMakeHelp* OfflineOpBin::release_furniture_make_help_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineOpBin.furniture_make_help_op)
  if (has_furniture_make_help_op()) {
    clear_has_detail();
    ::proto::OfflineOpFurnitureMakeHelp* temp = detail_.furniture_make_help_op_;
    detail_.furniture_make_help_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineOpBin::set_allocated_furniture_make_help_op(::proto::OfflineOpFurnitureMakeHelp* furniture_make_help_op) {
  clear_detail();
  if (furniture_make_help_op) {
    set_has_furniture_make_help_op();
    detail_.furniture_make_help_op_ = furniture_make_help_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineOpBin.furniture_make_help_op)
}

// .proto.OfflineOpPlantFlowerActivityGiveFlower plant_flower_give_flower_op = 3;
bool OfflineOpBin::has_plant_flower_give_flower_op() const {
  return detail_case() == kPlantFlowerGiveFlowerOp;
}
void OfflineOpBin::set_has_plant_flower_give_flower_op() {
  _oneof_case_[0] = kPlantFlowerGiveFlowerOp;
}
void OfflineOpBin::clear_plant_flower_give_flower_op() {
  if (has_plant_flower_give_flower_op()) {
    delete detail_.plant_flower_give_flower_op_;
    clear_has_detail();
  }
}
 const ::proto::OfflineOpPlantFlowerActivityGiveFlower& OfflineOpBin::plant_flower_give_flower_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpBin.plant_flower_give_flower_op)
  return has_plant_flower_give_flower_op()
      ? *detail_.plant_flower_give_flower_op_
      : ::proto::OfflineOpPlantFlowerActivityGiveFlower::default_instance();
}
::proto::OfflineOpPlantFlowerActivityGiveFlower* OfflineOpBin::mutable_plant_flower_give_flower_op() {
  if (!has_plant_flower_give_flower_op()) {
    clear_detail();
    set_has_plant_flower_give_flower_op();
    detail_.plant_flower_give_flower_op_ = new ::proto::OfflineOpPlantFlowerActivityGiveFlower;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpBin.plant_flower_give_flower_op)
  return detail_.plant_flower_give_flower_op_;
}
::proto::OfflineOpPlantFlowerActivityGiveFlower* OfflineOpBin::release_plant_flower_give_flower_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineOpBin.plant_flower_give_flower_op)
  if (has_plant_flower_give_flower_op()) {
    clear_has_detail();
    ::proto::OfflineOpPlantFlowerActivityGiveFlower* temp = detail_.plant_flower_give_flower_op_;
    detail_.plant_flower_give_flower_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineOpBin::set_allocated_plant_flower_give_flower_op(::proto::OfflineOpPlantFlowerActivityGiveFlower* plant_flower_give_flower_op) {
  clear_detail();
  if (plant_flower_give_flower_op) {
    set_has_plant_flower_give_flower_op();
    detail_.plant_flower_give_flower_op_ = plant_flower_give_flower_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineOpBin.plant_flower_give_flower_op)
}

// .proto.OfflineOpWinterCampActivityGiveItem winter_camp_give_item_op = 4;
bool OfflineOpBin::has_winter_camp_give_item_op() const {
  return detail_case() == kWinterCampGiveItemOp;
}
void OfflineOpBin::set_has_winter_camp_give_item_op() {
  _oneof_case_[0] = kWinterCampGiveItemOp;
}
void OfflineOpBin::clear_winter_camp_give_item_op() {
  if (has_winter_camp_give_item_op()) {
    delete detail_.winter_camp_give_item_op_;
    clear_has_detail();
  }
}
 const ::proto::OfflineOpWinterCampActivityGiveItem& OfflineOpBin::winter_camp_give_item_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpBin.winter_camp_give_item_op)
  return has_winter_camp_give_item_op()
      ? *detail_.winter_camp_give_item_op_
      : ::proto::OfflineOpWinterCampActivityGiveItem::default_instance();
}
::proto::OfflineOpWinterCampActivityGiveItem* OfflineOpBin::mutable_winter_camp_give_item_op() {
  if (!has_winter_camp_give_item_op()) {
    clear_detail();
    set_has_winter_camp_give_item_op();
    detail_.winter_camp_give_item_op_ = new ::proto::OfflineOpWinterCampActivityGiveItem;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpBin.winter_camp_give_item_op)
  return detail_.winter_camp_give_item_op_;
}
::proto::OfflineOpWinterCampActivityGiveItem* OfflineOpBin::release_winter_camp_give_item_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineOpBin.winter_camp_give_item_op)
  if (has_winter_camp_give_item_op()) {
    clear_has_detail();
    ::proto::OfflineOpWinterCampActivityGiveItem* temp = detail_.winter_camp_give_item_op_;
    detail_.winter_camp_give_item_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineOpBin::set_allocated_winter_camp_give_item_op(::proto::OfflineOpWinterCampActivityGiveItem* winter_camp_give_item_op) {
  clear_detail();
  if (winter_camp_give_item_op) {
    set_has_winter_camp_give_item_op();
    detail_.winter_camp_give_item_op_ = winter_camp_give_item_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineOpBin.winter_camp_give_item_op)
}

// .proto.OfflineOpActivityGiveGift activity_give_gift_op = 5;
bool OfflineOpBin::has_activity_give_gift_op() const {
  return detail_case() == kActivityGiveGiftOp;
}
void OfflineOpBin::set_has_activity_give_gift_op() {
  _oneof_case_[0] = kActivityGiveGiftOp;
}
void OfflineOpBin::clear_activity_give_gift_op() {
  if (has_activity_give_gift_op()) {
    delete detail_.activity_give_gift_op_;
    clear_has_detail();
  }
}
 const ::proto::OfflineOpActivityGiveGift& OfflineOpBin::activity_give_gift_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpBin.activity_give_gift_op)
  return has_activity_give_gift_op()
      ? *detail_.activity_give_gift_op_
      : ::proto::OfflineOpActivityGiveGift::default_instance();
}
::proto::OfflineOpActivityGiveGift* OfflineOpBin::mutable_activity_give_gift_op() {
  if (!has_activity_give_gift_op()) {
    clear_detail();
    set_has_activity_give_gift_op();
    detail_.activity_give_gift_op_ = new ::proto::OfflineOpActivityGiveGift;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpBin.activity_give_gift_op)
  return detail_.activity_give_gift_op_;
}
::proto::OfflineOpActivityGiveGift* OfflineOpBin::release_activity_give_gift_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineOpBin.activity_give_gift_op)
  if (has_activity_give_gift_op()) {
    clear_has_detail();
    ::proto::OfflineOpActivityGiveGift* temp = detail_.activity_give_gift_op_;
    detail_.activity_give_gift_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineOpBin::set_allocated_activity_give_gift_op(::proto::OfflineOpActivityGiveGift* activity_give_gift_op) {
  clear_detail();
  if (activity_give_gift_op) {
    set_has_activity_give_gift_op();
    detail_.activity_give_gift_op_ = activity_give_gift_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineOpBin.activity_give_gift_op)
}

// .proto.OfflineOpVintageActivityDividend vintage_dividend_op = 6;
bool OfflineOpBin::has_vintage_dividend_op() const {
  return detail_case() == kVintageDividendOp;
}
void OfflineOpBin::set_has_vintage_dividend_op() {
  _oneof_case_[0] = kVintageDividendOp;
}
void OfflineOpBin::clear_vintage_dividend_op() {
  if (has_vintage_dividend_op()) {
    delete detail_.vintage_dividend_op_;
    clear_has_detail();
  }
}
 const ::proto::OfflineOpVintageActivityDividend& OfflineOpBin::vintage_dividend_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpBin.vintage_dividend_op)
  return has_vintage_dividend_op()
      ? *detail_.vintage_dividend_op_
      : ::proto::OfflineOpVintageActivityDividend::default_instance();
}
::proto::OfflineOpVintageActivityDividend* OfflineOpBin::mutable_vintage_dividend_op() {
  if (!has_vintage_dividend_op()) {
    clear_detail();
    set_has_vintage_dividend_op();
    detail_.vintage_dividend_op_ = new ::proto::OfflineOpVintageActivityDividend;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpBin.vintage_dividend_op)
  return detail_.vintage_dividend_op_;
}
::proto::OfflineOpVintageActivityDividend* OfflineOpBin::release_vintage_dividend_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineOpBin.vintage_dividend_op)
  if (has_vintage_dividend_op()) {
    clear_has_detail();
    ::proto::OfflineOpVintageActivityDividend* temp = detail_.vintage_dividend_op_;
    detail_.vintage_dividend_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineOpBin::set_allocated_vintage_dividend_op(::proto::OfflineOpVintageActivityDividend* vintage_dividend_op) {
  clear_detail();
  if (vintage_dividend_op) {
    set_has_vintage_dividend_op();
    detail_.vintage_dividend_op_ = vintage_dividend_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineOpBin.vintage_dividend_op)
}

// .proto.OfflineOpGCGSettle gcg_settle_op = 7;
bool OfflineOpBin::has_gcg_settle_op() const {
  return detail_case() == kGcgSettleOp;
}
void OfflineOpBin::set_has_gcg_settle_op() {
  _oneof_case_[0] = kGcgSettleOp;
}
void OfflineOpBin::clear_gcg_settle_op() {
  if (has_gcg_settle_op()) {
    delete detail_.gcg_settle_op_;
    clear_has_detail();
  }
}
 const ::proto::OfflineOpGCGSettle& OfflineOpBin::gcg_settle_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpBin.gcg_settle_op)
  return has_gcg_settle_op()
      ? *detail_.gcg_settle_op_
      : ::proto::OfflineOpGCGSettle::default_instance();
}
::proto::OfflineOpGCGSettle* OfflineOpBin::mutable_gcg_settle_op() {
  if (!has_gcg_settle_op()) {
    clear_detail();
    set_has_gcg_settle_op();
    detail_.gcg_settle_op_ = new ::proto::OfflineOpGCGSettle;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpBin.gcg_settle_op)
  return detail_.gcg_settle_op_;
}
::proto::OfflineOpGCGSettle* OfflineOpBin::release_gcg_settle_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineOpBin.gcg_settle_op)
  if (has_gcg_settle_op()) {
    clear_has_detail();
    ::proto::OfflineOpGCGSettle* temp = detail_.gcg_settle_op_;
    detail_.gcg_settle_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void OfflineOpBin::set_allocated_gcg_settle_op(::proto::OfflineOpGCGSettle* gcg_settle_op) {
  clear_detail();
  if (gcg_settle_op) {
    set_has_gcg_settle_op();
    detail_.gcg_settle_op_ = gcg_settle_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineOpBin.gcg_settle_op)
}

bool OfflineOpBin::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
void OfflineOpBin::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
OfflineOpBin::DetailCase OfflineOpBin::detail_case() const {
  return OfflineOpBin::DetailCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FurnitureMakeSlotsBin::kMakeIdFieldNumber;
const int FurnitureMakeSlotsBin::kBeginTimeFieldNumber;
const int FurnitureMakeSlotsBin::kDurTimeFieldNumber;
const int FurnitureMakeSlotsBin::kAccelerateTimeFieldNumber;
const int FurnitureMakeSlotsBin::kAccelerateCountFieldNumber;
const int FurnitureMakeSlotsBin::kAvatarIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FurnitureMakeSlotsBin::FurnitureMakeSlotsBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FurnitureMakeSlotsBin)
}
FurnitureMakeSlotsBin::FurnitureMakeSlotsBin(const FurnitureMakeSlotsBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&make_id_, &from.make_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&avatar_id_) -
    reinterpret_cast<char*>(&make_id_)) + sizeof(avatar_id_));
  // @@protoc_insertion_point(copy_constructor:proto.FurnitureMakeSlotsBin)
}

void FurnitureMakeSlotsBin::SharedCtor() {
  ::memset(&make_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avatar_id_) -
      reinterpret_cast<char*>(&make_id_)) + sizeof(avatar_id_));
  _cached_size_ = 0;
}

FurnitureMakeSlotsBin::~FurnitureMakeSlotsBin() {
  // @@protoc_insertion_point(destructor:proto.FurnitureMakeSlotsBin)
  SharedDtor();
}

void FurnitureMakeSlotsBin::SharedDtor() {
}

void FurnitureMakeSlotsBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FurnitureMakeSlotsBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FurnitureMakeSlotsBin& FurnitureMakeSlotsBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

FurnitureMakeSlotsBin* FurnitureMakeSlotsBin::New(::google::protobuf::Arena* arena) const {
  FurnitureMakeSlotsBin* n = new FurnitureMakeSlotsBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FurnitureMakeSlotsBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FurnitureMakeSlotsBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&make_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avatar_id_) -
      reinterpret_cast<char*>(&make_id_)) + sizeof(avatar_id_));
  _internal_metadata_.Clear();
}

bool FurnitureMakeSlotsBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FurnitureMakeSlotsBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 make_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &make_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 begin_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &begin_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dur_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dur_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 accelerate_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &accelerate_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 accelerate_count = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accelerate_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 avatar_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FurnitureMakeSlotsBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FurnitureMakeSlotsBin)
  return false;
#undef DO_
}

void FurnitureMakeSlotsBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FurnitureMakeSlotsBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 make_id = 1;
  if (this->make_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->make_id(), output);
  }

  // fixed32 begin_time = 2;
  if (this->begin_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->begin_time(), output);
  }

  // uint32 dur_time = 3;
  if (this->dur_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->dur_time(), output);
  }

  // fixed32 accelerate_time = 4;
  if (this->accelerate_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(4, this->accelerate_time(), output);
  }

  // uint32 accelerate_count = 6;
  if (this->accelerate_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->accelerate_count(), output);
  }

  // uint32 avatar_id = 7;
  if (this->avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->avatar_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FurnitureMakeSlotsBin)
}

::google::protobuf::uint8* FurnitureMakeSlotsBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FurnitureMakeSlotsBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 make_id = 1;
  if (this->make_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->make_id(), target);
  }

  // fixed32 begin_time = 2;
  if (this->begin_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->begin_time(), target);
  }

  // uint32 dur_time = 3;
  if (this->dur_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->dur_time(), target);
  }

  // fixed32 accelerate_time = 4;
  if (this->accelerate_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(4, this->accelerate_time(), target);
  }

  // uint32 accelerate_count = 6;
  if (this->accelerate_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->accelerate_count(), target);
  }

  // uint32 avatar_id = 7;
  if (this->avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->avatar_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FurnitureMakeSlotsBin)
  return target;
}

size_t FurnitureMakeSlotsBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FurnitureMakeSlotsBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 make_id = 1;
  if (this->make_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->make_id());
  }

  // fixed32 begin_time = 2;
  if (this->begin_time() != 0) {
    total_size += 1 + 4;
  }

  // uint32 dur_time = 3;
  if (this->dur_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dur_time());
  }

  // fixed32 accelerate_time = 4;
  if (this->accelerate_time() != 0) {
    total_size += 1 + 4;
  }

  // uint32 accelerate_count = 6;
  if (this->accelerate_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->accelerate_count());
  }

  // uint32 avatar_id = 7;
  if (this->avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FurnitureMakeSlotsBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FurnitureMakeSlotsBin)
  GOOGLE_DCHECK_NE(&from, this);
  const FurnitureMakeSlotsBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FurnitureMakeSlotsBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FurnitureMakeSlotsBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FurnitureMakeSlotsBin)
    MergeFrom(*source);
  }
}

void FurnitureMakeSlotsBin::MergeFrom(const FurnitureMakeSlotsBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FurnitureMakeSlotsBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.make_id() != 0) {
    set_make_id(from.make_id());
  }
  if (from.begin_time() != 0) {
    set_begin_time(from.begin_time());
  }
  if (from.dur_time() != 0) {
    set_dur_time(from.dur_time());
  }
  if (from.accelerate_time() != 0) {
    set_accelerate_time(from.accelerate_time());
  }
  if (from.accelerate_count() != 0) {
    set_accelerate_count(from.accelerate_count());
  }
  if (from.avatar_id() != 0) {
    set_avatar_id(from.avatar_id());
  }
}

void FurnitureMakeSlotsBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FurnitureMakeSlotsBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FurnitureMakeSlotsBin::CopyFrom(const FurnitureMakeSlotsBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FurnitureMakeSlotsBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FurnitureMakeSlotsBin::IsInitialized() const {
  return true;
}

void FurnitureMakeSlotsBin::Swap(FurnitureMakeSlotsBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FurnitureMakeSlotsBin::InternalSwap(FurnitureMakeSlotsBin* other) {
  using std::swap;
  swap(make_id_, other->make_id_);
  swap(begin_time_, other->begin_time_);
  swap(dur_time_, other->dur_time_);
  swap(accelerate_time_, other->accelerate_time_);
  swap(accelerate_count_, other->accelerate_count_);
  swap(avatar_id_, other->avatar_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FurnitureMakeSlotsBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FurnitureMakeSlotsBin

// uint32 make_id = 1;
void FurnitureMakeSlotsBin::clear_make_id() {
  make_id_ = 0u;
}
::google::protobuf::uint32 FurnitureMakeSlotsBin::make_id() const {
  // @@protoc_insertion_point(field_get:proto.FurnitureMakeSlotsBin.make_id)
  return make_id_;
}
void FurnitureMakeSlotsBin::set_make_id(::google::protobuf::uint32 value) {
  
  make_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FurnitureMakeSlotsBin.make_id)
}

// fixed32 begin_time = 2;
void FurnitureMakeSlotsBin::clear_begin_time() {
  begin_time_ = 0u;
}
::google::protobuf::uint32 FurnitureMakeSlotsBin::begin_time() const {
  // @@protoc_insertion_point(field_get:proto.FurnitureMakeSlotsBin.begin_time)
  return begin_time_;
}
void FurnitureMakeSlotsBin::set_begin_time(::google::protobuf::uint32 value) {
  
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:proto.FurnitureMakeSlotsBin.begin_time)
}

// uint32 dur_time = 3;
void FurnitureMakeSlotsBin::clear_dur_time() {
  dur_time_ = 0u;
}
::google::protobuf::uint32 FurnitureMakeSlotsBin::dur_time() const {
  // @@protoc_insertion_point(field_get:proto.FurnitureMakeSlotsBin.dur_time)
  return dur_time_;
}
void FurnitureMakeSlotsBin::set_dur_time(::google::protobuf::uint32 value) {
  
  dur_time_ = value;
  // @@protoc_insertion_point(field_set:proto.FurnitureMakeSlotsBin.dur_time)
}

// fixed32 accelerate_time = 4;
void FurnitureMakeSlotsBin::clear_accelerate_time() {
  accelerate_time_ = 0u;
}
::google::protobuf::uint32 FurnitureMakeSlotsBin::accelerate_time() const {
  // @@protoc_insertion_point(field_get:proto.FurnitureMakeSlotsBin.accelerate_time)
  return accelerate_time_;
}
void FurnitureMakeSlotsBin::set_accelerate_time(::google::protobuf::uint32 value) {
  
  accelerate_time_ = value;
  // @@protoc_insertion_point(field_set:proto.FurnitureMakeSlotsBin.accelerate_time)
}

// uint32 accelerate_count = 6;
void FurnitureMakeSlotsBin::clear_accelerate_count() {
  accelerate_count_ = 0u;
}
::google::protobuf::uint32 FurnitureMakeSlotsBin::accelerate_count() const {
  // @@protoc_insertion_point(field_get:proto.FurnitureMakeSlotsBin.accelerate_count)
  return accelerate_count_;
}
void FurnitureMakeSlotsBin::set_accelerate_count(::google::protobuf::uint32 value) {
  
  accelerate_count_ = value;
  // @@protoc_insertion_point(field_set:proto.FurnitureMakeSlotsBin.accelerate_count)
}

// uint32 avatar_id = 7;
void FurnitureMakeSlotsBin::clear_avatar_id() {
  avatar_id_ = 0u;
}
::google::protobuf::uint32 FurnitureMakeSlotsBin::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.FurnitureMakeSlotsBin.avatar_id)
  return avatar_id_;
}
void FurnitureMakeSlotsBin::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FurnitureMakeSlotsBin.avatar_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProfilePictureBin::kAvatarIdFieldNumber;
const int ProfilePictureBin::kCostumeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProfilePictureBin::ProfilePictureBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ProfilePictureBin)
}
ProfilePictureBin::ProfilePictureBin(const ProfilePictureBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&avatar_id_, &from.avatar_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&costume_id_) -
    reinterpret_cast<char*>(&avatar_id_)) + sizeof(costume_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ProfilePictureBin)
}

void ProfilePictureBin::SharedCtor() {
  ::memset(&avatar_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&costume_id_) -
      reinterpret_cast<char*>(&avatar_id_)) + sizeof(costume_id_));
  _cached_size_ = 0;
}

ProfilePictureBin::~ProfilePictureBin() {
  // @@protoc_insertion_point(destructor:proto.ProfilePictureBin)
  SharedDtor();
}

void ProfilePictureBin::SharedDtor() {
}

void ProfilePictureBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProfilePictureBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProfilePictureBin& ProfilePictureBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProfilePictureBin* ProfilePictureBin::New(::google::protobuf::Arena* arena) const {
  ProfilePictureBin* n = new ProfilePictureBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProfilePictureBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ProfilePictureBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&avatar_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&costume_id_) -
      reinterpret_cast<char*>(&avatar_id_)) + sizeof(costume_id_));
  _internal_metadata_.Clear();
}

bool ProfilePictureBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ProfilePictureBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 avatar_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 costume_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &costume_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ProfilePictureBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ProfilePictureBin)
  return false;
#undef DO_
}

void ProfilePictureBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ProfilePictureBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->avatar_id(), output);
  }

  // uint32 costume_id = 2;
  if (this->costume_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->costume_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ProfilePictureBin)
}

::google::protobuf::uint8* ProfilePictureBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ProfilePictureBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->avatar_id(), target);
  }

  // uint32 costume_id = 2;
  if (this->costume_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->costume_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ProfilePictureBin)
  return target;
}

size_t ProfilePictureBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ProfilePictureBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_id());
  }

  // uint32 costume_id = 2;
  if (this->costume_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->costume_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProfilePictureBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ProfilePictureBin)
  GOOGLE_DCHECK_NE(&from, this);
  const ProfilePictureBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProfilePictureBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ProfilePictureBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ProfilePictureBin)
    MergeFrom(*source);
  }
}

void ProfilePictureBin::MergeFrom(const ProfilePictureBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ProfilePictureBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_id() != 0) {
    set_avatar_id(from.avatar_id());
  }
  if (from.costume_id() != 0) {
    set_costume_id(from.costume_id());
  }
}

void ProfilePictureBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ProfilePictureBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProfilePictureBin::CopyFrom(const ProfilePictureBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ProfilePictureBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProfilePictureBin::IsInitialized() const {
  return true;
}

void ProfilePictureBin::Swap(ProfilePictureBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProfilePictureBin::InternalSwap(ProfilePictureBin* other) {
  using std::swap;
  swap(avatar_id_, other->avatar_id_);
  swap(costume_id_, other->costume_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProfilePictureBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProfilePictureBin

// uint32 avatar_id = 1;
void ProfilePictureBin::clear_avatar_id() {
  avatar_id_ = 0u;
}
::google::protobuf::uint32 ProfilePictureBin::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.ProfilePictureBin.avatar_id)
  return avatar_id_;
}
void ProfilePictureBin::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ProfilePictureBin.avatar_id)
}

// uint32 costume_id = 2;
void ProfilePictureBin::clear_costume_id() {
  costume_id_ = 0u;
}
::google::protobuf::uint32 ProfilePictureBin::costume_id() const {
  // @@protoc_insertion_point(field_get:proto.ProfilePictureBin.costume_id)
  return costume_id_;
}
void ProfilePictureBin::set_costume_id(::google::protobuf::uint32 value) {
  
  costume_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ProfilePictureBin.costume_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CustomDungeonSettingBin::kIsArriveFinishFieldNumber;
const int CustomDungeonSettingBin::kCoinLimitFieldNumber;
const int CustomDungeonSettingBin::kTimeLimitFieldNumber;
const int CustomDungeonSettingBin::kIsForbidSkillFieldNumber;
const int CustomDungeonSettingBin::kOpenRoomListFieldNumber;
const int CustomDungeonSettingBin::kStartRoomIdFieldNumber;
const int CustomDungeonSettingBin::kLifeNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CustomDungeonSettingBin::CustomDungeonSettingBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CustomDungeonSettingBin)
}
CustomDungeonSettingBin::CustomDungeonSettingBin(const CustomDungeonSettingBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      open_room_list_(from.open_room_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&coin_limit_, &from.coin_limit_,
    static_cast<size_t>(reinterpret_cast<char*>(&life_num_) -
    reinterpret_cast<char*>(&coin_limit_)) + sizeof(life_num_));
  // @@protoc_insertion_point(copy_constructor:proto.CustomDungeonSettingBin)
}

void CustomDungeonSettingBin::SharedCtor() {
  ::memset(&coin_limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&life_num_) -
      reinterpret_cast<char*>(&coin_limit_)) + sizeof(life_num_));
  _cached_size_ = 0;
}

CustomDungeonSettingBin::~CustomDungeonSettingBin() {
  // @@protoc_insertion_point(destructor:proto.CustomDungeonSettingBin)
  SharedDtor();
}

void CustomDungeonSettingBin::SharedDtor() {
}

void CustomDungeonSettingBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CustomDungeonSettingBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CustomDungeonSettingBin& CustomDungeonSettingBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

CustomDungeonSettingBin* CustomDungeonSettingBin::New(::google::protobuf::Arena* arena) const {
  CustomDungeonSettingBin* n = new CustomDungeonSettingBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CustomDungeonSettingBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CustomDungeonSettingBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  open_room_list_.Clear();
  ::memset(&coin_limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&life_num_) -
      reinterpret_cast<char*>(&coin_limit_)) + sizeof(life_num_));
  _internal_metadata_.Clear();
}

bool CustomDungeonSettingBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CustomDungeonSettingBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_arrive_finish = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_arrive_finish_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 coin_limit = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &coin_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 time_limit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_forbid_skill = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_forbid_skill_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 open_room_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_open_room_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_open_room_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 start_room_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 life_num = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &life_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CustomDungeonSettingBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CustomDungeonSettingBin)
  return false;
#undef DO_
}

void CustomDungeonSettingBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CustomDungeonSettingBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_arrive_finish = 1;
  if (this->is_arrive_finish() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_arrive_finish(), output);
  }

  // uint32 coin_limit = 2;
  if (this->coin_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->coin_limit(), output);
  }

  // uint32 time_limit = 3;
  if (this->time_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->time_limit(), output);
  }

  // bool is_forbid_skill = 4;
  if (this->is_forbid_skill() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_forbid_skill(), output);
  }

  // repeated uint32 open_room_list = 5;
  if (this->open_room_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _open_room_list_cached_byte_size_));
  }
  for (int i = 0, n = this->open_room_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->open_room_list(i), output);
  }

  // uint32 start_room_id = 6;
  if (this->start_room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->start_room_id(), output);
  }

  // uint32 life_num = 7;
  if (this->life_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->life_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CustomDungeonSettingBin)
}

::google::protobuf::uint8* CustomDungeonSettingBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CustomDungeonSettingBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_arrive_finish = 1;
  if (this->is_arrive_finish() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_arrive_finish(), target);
  }

  // uint32 coin_limit = 2;
  if (this->coin_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->coin_limit(), target);
  }

  // uint32 time_limit = 3;
  if (this->time_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->time_limit(), target);
  }

  // bool is_forbid_skill = 4;
  if (this->is_forbid_skill() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_forbid_skill(), target);
  }

  // repeated uint32 open_room_list = 5;
  if (this->open_room_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _open_room_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->open_room_list_, target);
  }

  // uint32 start_room_id = 6;
  if (this->start_room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->start_room_id(), target);
  }

  // uint32 life_num = 7;
  if (this->life_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->life_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CustomDungeonSettingBin)
  return target;
}

size_t CustomDungeonSettingBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CustomDungeonSettingBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 open_room_list = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->open_room_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _open_room_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 coin_limit = 2;
  if (this->coin_limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->coin_limit());
  }

  // bool is_arrive_finish = 1;
  if (this->is_arrive_finish() != 0) {
    total_size += 1 + 1;
  }

  // bool is_forbid_skill = 4;
  if (this->is_forbid_skill() != 0) {
    total_size += 1 + 1;
  }

  // uint32 time_limit = 3;
  if (this->time_limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->time_limit());
  }

  // uint32 start_room_id = 6;
  if (this->start_room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->start_room_id());
  }

  // uint32 life_num = 7;
  if (this->life_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->life_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CustomDungeonSettingBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CustomDungeonSettingBin)
  GOOGLE_DCHECK_NE(&from, this);
  const CustomDungeonSettingBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CustomDungeonSettingBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CustomDungeonSettingBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CustomDungeonSettingBin)
    MergeFrom(*source);
  }
}

void CustomDungeonSettingBin::MergeFrom(const CustomDungeonSettingBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CustomDungeonSettingBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  open_room_list_.MergeFrom(from.open_room_list_);
  if (from.coin_limit() != 0) {
    set_coin_limit(from.coin_limit());
  }
  if (from.is_arrive_finish() != 0) {
    set_is_arrive_finish(from.is_arrive_finish());
  }
  if (from.is_forbid_skill() != 0) {
    set_is_forbid_skill(from.is_forbid_skill());
  }
  if (from.time_limit() != 0) {
    set_time_limit(from.time_limit());
  }
  if (from.start_room_id() != 0) {
    set_start_room_id(from.start_room_id());
  }
  if (from.life_num() != 0) {
    set_life_num(from.life_num());
  }
}

void CustomDungeonSettingBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CustomDungeonSettingBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomDungeonSettingBin::CopyFrom(const CustomDungeonSettingBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CustomDungeonSettingBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomDungeonSettingBin::IsInitialized() const {
  return true;
}

void CustomDungeonSettingBin::Swap(CustomDungeonSettingBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CustomDungeonSettingBin::InternalSwap(CustomDungeonSettingBin* other) {
  using std::swap;
  open_room_list_.InternalSwap(&other->open_room_list_);
  swap(coin_limit_, other->coin_limit_);
  swap(is_arrive_finish_, other->is_arrive_finish_);
  swap(is_forbid_skill_, other->is_forbid_skill_);
  swap(time_limit_, other->time_limit_);
  swap(start_room_id_, other->start_room_id_);
  swap(life_num_, other->life_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CustomDungeonSettingBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CustomDungeonSettingBin

// bool is_arrive_finish = 1;
void CustomDungeonSettingBin::clear_is_arrive_finish() {
  is_arrive_finish_ = false;
}
bool CustomDungeonSettingBin::is_arrive_finish() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonSettingBin.is_arrive_finish)
  return is_arrive_finish_;
}
void CustomDungeonSettingBin::set_is_arrive_finish(bool value) {
  
  is_arrive_finish_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonSettingBin.is_arrive_finish)
}

// uint32 coin_limit = 2;
void CustomDungeonSettingBin::clear_coin_limit() {
  coin_limit_ = 0u;
}
::google::protobuf::uint32 CustomDungeonSettingBin::coin_limit() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonSettingBin.coin_limit)
  return coin_limit_;
}
void CustomDungeonSettingBin::set_coin_limit(::google::protobuf::uint32 value) {
  
  coin_limit_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonSettingBin.coin_limit)
}

// uint32 time_limit = 3;
void CustomDungeonSettingBin::clear_time_limit() {
  time_limit_ = 0u;
}
::google::protobuf::uint32 CustomDungeonSettingBin::time_limit() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonSettingBin.time_limit)
  return time_limit_;
}
void CustomDungeonSettingBin::set_time_limit(::google::protobuf::uint32 value) {
  
  time_limit_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonSettingBin.time_limit)
}

// bool is_forbid_skill = 4;
void CustomDungeonSettingBin::clear_is_forbid_skill() {
  is_forbid_skill_ = false;
}
bool CustomDungeonSettingBin::is_forbid_skill() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonSettingBin.is_forbid_skill)
  return is_forbid_skill_;
}
void CustomDungeonSettingBin::set_is_forbid_skill(bool value) {
  
  is_forbid_skill_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonSettingBin.is_forbid_skill)
}

// repeated uint32 open_room_list = 5;
int CustomDungeonSettingBin::open_room_list_size() const {
  return open_room_list_.size();
}
void CustomDungeonSettingBin::clear_open_room_list() {
  open_room_list_.Clear();
}
::google::protobuf::uint32 CustomDungeonSettingBin::open_room_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonSettingBin.open_room_list)
  return open_room_list_.Get(index);
}
void CustomDungeonSettingBin::set_open_room_list(int index, ::google::protobuf::uint32 value) {
  open_room_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.CustomDungeonSettingBin.open_room_list)
}
void CustomDungeonSettingBin::add_open_room_list(::google::protobuf::uint32 value) {
  open_room_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.CustomDungeonSettingBin.open_room_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CustomDungeonSettingBin::open_room_list() const {
  // @@protoc_insertion_point(field_list:proto.CustomDungeonSettingBin.open_room_list)
  return open_room_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CustomDungeonSettingBin::mutable_open_room_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CustomDungeonSettingBin.open_room_list)
  return &open_room_list_;
}

// uint32 start_room_id = 6;
void CustomDungeonSettingBin::clear_start_room_id() {
  start_room_id_ = 0u;
}
::google::protobuf::uint32 CustomDungeonSettingBin::start_room_id() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonSettingBin.start_room_id)
  return start_room_id_;
}
void CustomDungeonSettingBin::set_start_room_id(::google::protobuf::uint32 value) {
  
  start_room_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonSettingBin.start_room_id)
}

// uint32 life_num = 7;
void CustomDungeonSettingBin::clear_life_num() {
  life_num_ = 0u;
}
::google::protobuf::uint32 CustomDungeonSettingBin::life_num() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonSettingBin.life_num)
  return life_num_;
}
void CustomDungeonSettingBin::set_life_num(::google::protobuf::uint32 value) {
  
  life_num_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonSettingBin.life_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

CustomDungeonAbstractBin::CustomDungeonAbstractBin_BrickStatisticsMapEntry::CustomDungeonAbstractBin_BrickStatisticsMapEntry() {}
CustomDungeonAbstractBin::CustomDungeonAbstractBin_BrickStatisticsMapEntry::CustomDungeonAbstractBin_BrickStatisticsMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata CustomDungeonAbstractBin::CustomDungeonAbstractBin_BrickStatisticsMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[146];
}
void CustomDungeonAbstractBin::CustomDungeonAbstractBin_BrickStatisticsMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void CustomDungeonAbstractBin::CustomDungeonAbstractBin_BrickStatisticsMapEntry::MergeFrom(const CustomDungeonAbstractBin_BrickStatisticsMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CustomDungeonAbstractBin::kFinishRoomIdFieldNumber;
const int CustomDungeonAbstractBin::kTotalCoinNumFieldNumber;
const int CustomDungeonAbstractBin::kFirstPublishTimeFieldNumber;
const int CustomDungeonAbstractBin::kLastPublishTimeFieldNumber;
const int CustomDungeonAbstractBin::kBrickStatisticsMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CustomDungeonAbstractBin::CustomDungeonAbstractBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CustomDungeonAbstractBin)
}
CustomDungeonAbstractBin::CustomDungeonAbstractBin(const CustomDungeonAbstractBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  brick_statistics_map_.MergeFrom(from.brick_statistics_map_);
  ::memcpy(&finish_room_id_, &from.finish_room_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_publish_time_) -
    reinterpret_cast<char*>(&finish_room_id_)) + sizeof(last_publish_time_));
  // @@protoc_insertion_point(copy_constructor:proto.CustomDungeonAbstractBin)
}

void CustomDungeonAbstractBin::SharedCtor() {
  ::memset(&finish_room_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_publish_time_) -
      reinterpret_cast<char*>(&finish_room_id_)) + sizeof(last_publish_time_));
  _cached_size_ = 0;
}

CustomDungeonAbstractBin::~CustomDungeonAbstractBin() {
  // @@protoc_insertion_point(destructor:proto.CustomDungeonAbstractBin)
  SharedDtor();
}

void CustomDungeonAbstractBin::SharedDtor() {
}

void CustomDungeonAbstractBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CustomDungeonAbstractBin::descriptor() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CustomDungeonAbstractBin& CustomDungeonAbstractBin::default_instance() {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

CustomDungeonAbstractBin* CustomDungeonAbstractBin::New(::google::protobuf::Arena* arena) const {
  CustomDungeonAbstractBin* n = new CustomDungeonAbstractBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CustomDungeonAbstractBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CustomDungeonAbstractBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  brick_statistics_map_.Clear();
  ::memset(&finish_room_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_publish_time_) -
      reinterpret_cast<char*>(&finish_room_id_)) + sizeof(last_publish_time_));
  _internal_metadata_.Clear();
}

bool CustomDungeonAbstractBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CustomDungeonAbstractBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 finish_room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &finish_room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 total_coin_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_coin_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 first_publish_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &first_publish_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 last_publish_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_publish_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> brick_statistics_map = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          CustomDungeonAbstractBin_BrickStatisticsMapEntry::Parser< ::google::protobuf::internal::MapField<
              CustomDungeonAbstractBin_BrickStatisticsMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&brick_statistics_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CustomDungeonAbstractBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CustomDungeonAbstractBin)
  return false;
#undef DO_
}

void CustomDungeonAbstractBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CustomDungeonAbstractBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 finish_room_id = 1;
  if (this->finish_room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->finish_room_id(), output);
  }

  // uint32 total_coin_num = 2;
  if (this->total_coin_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->total_coin_num(), output);
  }

  // uint32 first_publish_time = 3;
  if (this->first_publish_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->first_publish_time(), output);
  }

  // uint32 last_publish_time = 4;
  if (this->last_publish_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->last_publish_time(), output);
  }

  // map<uint32, uint32> brick_statistics_map = 5;
  if (!this->brick_statistics_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->brick_statistics_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->brick_statistics_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->brick_statistics_map().begin();
          it != this->brick_statistics_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<CustomDungeonAbstractBin_BrickStatisticsMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(brick_statistics_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<CustomDungeonAbstractBin_BrickStatisticsMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->brick_statistics_map().begin();
          it != this->brick_statistics_map().end(); ++it) {
        entry.reset(brick_statistics_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CustomDungeonAbstractBin)
}

::google::protobuf::uint8* CustomDungeonAbstractBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CustomDungeonAbstractBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 finish_room_id = 1;
  if (this->finish_room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->finish_room_id(), target);
  }

  // uint32 total_coin_num = 2;
  if (this->total_coin_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->total_coin_num(), target);
  }

  // uint32 first_publish_time = 3;
  if (this->first_publish_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->first_publish_time(), target);
  }

  // uint32 last_publish_time = 4;
  if (this->last_publish_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->last_publish_time(), target);
  }

  // map<uint32, uint32> brick_statistics_map = 5;
  if (!this->brick_statistics_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->brick_statistics_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->brick_statistics_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->brick_statistics_map().begin();
          it != this->brick_statistics_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<CustomDungeonAbstractBin_BrickStatisticsMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(brick_statistics_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<CustomDungeonAbstractBin_BrickStatisticsMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->brick_statistics_map().begin();
          it != this->brick_statistics_map().end(); ++it) {
        entry.reset(brick_statistics_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CustomDungeonAbstractBin)
  return target;
}

size_t CustomDungeonAbstractBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CustomDungeonAbstractBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> brick_statistics_map = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->brick_statistics_map_size());
  {
    ::google::protobuf::scoped_ptr<CustomDungeonAbstractBin_BrickStatisticsMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->brick_statistics_map().begin();
        it != this->brick_statistics_map().end(); ++it) {
      entry.reset(brick_statistics_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint32 finish_room_id = 1;
  if (this->finish_room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->finish_room_id());
  }

  // uint32 total_coin_num = 2;
  if (this->total_coin_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->total_coin_num());
  }

  // uint32 first_publish_time = 3;
  if (this->first_publish_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->first_publish_time());
  }

  // uint32 last_publish_time = 4;
  if (this->last_publish_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_publish_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CustomDungeonAbstractBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CustomDungeonAbstractBin)
  GOOGLE_DCHECK_NE(&from, this);
  const CustomDungeonAbstractBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CustomDungeonAbstractBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CustomDungeonAbstractBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CustomDungeonAbstractBin)
    MergeFrom(*source);
  }
}

void CustomDungeonAbstractBin::MergeFrom(const CustomDungeonAbstractBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CustomDungeonAbstractBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  brick_statistics_map_.MergeFrom(from.brick_statistics_map_);
  if (from.finish_room_id() != 0) {
    set_finish_room_id(from.finish_room_id());
  }
  if (from.total_coin_num() != 0) {
    set_total_coin_num(from.total_coin_num());
  }
  if (from.first_publish_time() != 0) {
    set_first_publish_time(from.first_publish_time());
  }
  if (from.last_publish_time() != 0) {
    set_last_publish_time(from.last_publish_time());
  }
}

void CustomDungeonAbstractBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CustomDungeonAbstractBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomDungeonAbstractBin::CopyFrom(const CustomDungeonAbstractBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CustomDungeonAbstractBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomDungeonAbstractBin::IsInitialized() const {
  return true;
}

void CustomDungeonAbstractBin::Swap(CustomDungeonAbstractBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CustomDungeonAbstractBin::InternalSwap(CustomDungeonAbstractBin* other) {
  using std::swap;
  brick_statistics_map_.Swap(&other->brick_statistics_map_);
  swap(finish_room_id_, other->finish_room_id_);
  swap(total_coin_num_, other->total_coin_num_);
  swap(first_publish_time_, other->first_publish_time_);
  swap(last_publish_time_, other->last_publish_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CustomDungeonAbstractBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CustomDungeonAbstractBin

// uint32 finish_room_id = 1;
void CustomDungeonAbstractBin::clear_finish_room_id() {
  finish_room_id_ = 0u;
}
::google::protobuf::uint32 CustomDungeonAbstractBin::finish_room_id() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonAbstractBin.finish_room_id)
  return finish_room_id_;
}
void CustomDungeonAbstractBin::set_finish_room_id(::google::protobuf::uint32 value) {
  
  finish_room_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonAbstractBin.finish_room_id)
}

// uint32 total_coin_num = 2;
void CustomDungeonAbstractBin::clear_total_coin_num() {
  total_coin_num_ = 0u;
}
::google::protobuf::uint32 CustomDungeonAbstractBin::total_coin_num() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonAbstractBin.total_coin_num)
  return total_coin_num_;
}
void CustomDungeonAbstractBin::set_total_coin_num(::google::protobuf::uint32 value) {
  
  total_coin_num_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonAbstractBin.total_coin_num)
}

// uint32 first_publish_time = 3;
void CustomDungeonAbstractBin::clear_first_publish_time() {
  first_publish_time_ = 0u;
}
::google::protobuf::uint32 CustomDungeonAbstractBin::first_publish_time() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonAbstractBin.first_publish_time)
  return first_publish_time_;
}
void CustomDungeonAbstractBin::set_first_publish_time(::google::protobuf::uint32 value) {
  
  first_publish_time_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonAbstractBin.first_publish_time)
}

// uint32 last_publish_time = 4;
void CustomDungeonAbstractBin::clear_last_publish_time() {
  last_publish_time_ = 0u;
}
::google::protobuf::uint32 CustomDungeonAbstractBin::last_publish_time() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonAbstractBin.last_publish_time)
  return last_publish_time_;
}
void CustomDungeonAbstractBin::set_last_publish_time(::google::protobuf::uint32 value) {
  
  last_publish_time_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonAbstractBin.last_publish_time)
}

// map<uint32, uint32> brick_statistics_map = 5;
int CustomDungeonAbstractBin::brick_statistics_map_size() const {
  return brick_statistics_map_.size();
}
void CustomDungeonAbstractBin::clear_brick_statistics_map() {
  brick_statistics_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
CustomDungeonAbstractBin::brick_statistics_map() const {
  // @@protoc_insertion_point(field_map:proto.CustomDungeonAbstractBin.brick_statistics_map)
  return brick_statistics_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
CustomDungeonAbstractBin::mutable_brick_statistics_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.CustomDungeonAbstractBin.brick_statistics_map)
  return brick_statistics_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
