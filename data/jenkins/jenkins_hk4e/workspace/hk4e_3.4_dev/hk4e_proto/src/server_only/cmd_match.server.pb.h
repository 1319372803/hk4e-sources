// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_only/cmd_match.server.proto

#ifndef PROTOBUF_server_5fonly_2fcmd_5fmatch_2eserver_2eproto__INCLUDED
#define PROTOBUF_server_5fonly_2fcmd_5fmatch_2eserver_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
#include "server_only/enum.server.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class AddMatchUnitReq;
class AddMatchUnitReqDefaultTypeInternal;
extern AddMatchUnitReqDefaultTypeInternal _AddMatchUnitReq_default_instance_;
class AddMatchUnitRsp;
class AddMatchUnitRspDefaultTypeInternal;
extern AddMatchUnitRspDefaultTypeInternal _AddMatchUnitRsp_default_instance_;
class ConfirmGuestUnitReq;
class ConfirmGuestUnitReqDefaultTypeInternal;
extern ConfirmGuestUnitReqDefaultTypeInternal _ConfirmGuestUnitReq_default_instance_;
class ConfirmGuestUnitRsp;
class ConfirmGuestUnitRspDefaultTypeInternal;
extern ConfirmGuestUnitRspDefaultTypeInternal _ConfirmGuestUnitRsp_default_instance_;
class GeneralMatchFinishNotify;
class GeneralMatchFinishNotifyDefaultTypeInternal;
extern GeneralMatchFinishNotifyDefaultTypeInternal _GeneralMatchFinishNotify_default_instance_;
class GuestUnitAgreedResultNotify;
class GuestUnitAgreedResultNotifyDefaultTypeInternal;
extern GuestUnitAgreedResultNotifyDefaultTypeInternal _GuestUnitAgreedResultNotify_default_instance_;
class GuestUnitMatchSuccNotify;
class GuestUnitMatchSuccNotifyDefaultTypeInternal;
extern GuestUnitMatchSuccNotifyDefaultTypeInternal _GuestUnitMatchSuccNotify_default_instance_;
class HostUnitMatchSuccNotify;
class HostUnitMatchSuccNotifyDefaultTypeInternal;
extern HostUnitMatchSuccNotifyDefaultTypeInternal _HostUnitMatchSuccNotify_default_instance_;
class MatchIdentityNotify;
class MatchIdentityNotifyDefaultTypeInternal;
extern MatchIdentityNotifyDefaultTypeInternal _MatchIdentityNotify_default_instance_;
class MatchPlayer;
class MatchPlayerDefaultTypeInternal;
extern MatchPlayerDefaultTypeInternal _MatchPlayer_default_instance_;
class MatchPlayerJoinNotify;
class MatchPlayerJoinNotifyDefaultTypeInternal;
extern MatchPlayerJoinNotifyDefaultTypeInternal _MatchPlayerJoinNotify_default_instance_;
class MatchPlayerQuitNotify;
class MatchPlayerQuitNotifyDefaultTypeInternal;
extern MatchPlayerQuitNotifyDefaultTypeInternal _MatchPlayerQuitNotify_default_instance_;
class MatchPlayerUpdateNotify;
class MatchPlayerUpdateNotifyDefaultTypeInternal;
extern MatchPlayerUpdateNotifyDefaultTypeInternal _MatchPlayerUpdateNotify_default_instance_;
class MatchStartNotify;
class MatchStartNotifyDefaultTypeInternal;
extern MatchStartNotifyDefaultTypeInternal _MatchStartNotify_default_instance_;
class MatchUnit;
class MatchUnitDefaultTypeInternal;
extern MatchUnitDefaultTypeInternal _MatchUnit_default_instance_;
class MatchUnitRemovedNotify;
class MatchUnitRemovedNotifyDefaultTypeInternal;
extern MatchUnitRemovedNotifyDefaultTypeInternal _MatchUnitRemovedNotify_default_instance_;
class MatchserverWorkloadInfoNotify;
class MatchserverWorkloadInfoNotifyDefaultTypeInternal;
extern MatchserverWorkloadInfoNotifyDefaultTypeInternal _MatchserverWorkloadInfoNotify_default_instance_;
class MatchserverWorkloadInfoNotify_MatchUnitMapEntry;
class MatchserverWorkloadInfoNotify_MatchUnitMapEntryDefaultTypeInternal;
extern MatchserverWorkloadInfoNotify_MatchUnitMapEntryDefaultTypeInternal _MatchserverWorkloadInfoNotify_MatchUnitMapEntry_default_instance_;
class RemoveMatchUnitReq;
class RemoveMatchUnitReqDefaultTypeInternal;
extern RemoveMatchUnitReqDefaultTypeInternal _RemoveMatchUnitReq_default_instance_;
class RemoveMatchUnitRsp;
class RemoveMatchUnitRspDefaultTypeInternal;
extern RemoveMatchUnitRspDefaultTypeInternal _RemoveMatchUnitRsp_default_instance_;
class SyncMatchUnitReq;
class SyncMatchUnitReqDefaultTypeInternal;
extern SyncMatchUnitReqDefaultTypeInternal _SyncMatchUnitReq_default_instance_;
class SyncMatchUnitRsp;
class SyncMatchUnitRspDefaultTypeInternal;
extern SyncMatchUnitRspDefaultTypeInternal _SyncMatchUnitRsp_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto

enum GuestUnitAgreedResultNotify_Reason {
  GuestUnitAgreedResultNotify_Reason_SUCC = 0,
  GuestUnitAgreedResultNotify_Reason_HOST_UNIT_QUIT = 1,
  GuestUnitAgreedResultNotify_Reason_GuestUnitAgreedResultNotify_Reason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GuestUnitAgreedResultNotify_Reason_GuestUnitAgreedResultNotify_Reason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GuestUnitAgreedResultNotify_Reason_IsValid(int value);
const GuestUnitAgreedResultNotify_Reason GuestUnitAgreedResultNotify_Reason_Reason_MIN = GuestUnitAgreedResultNotify_Reason_SUCC;
const GuestUnitAgreedResultNotify_Reason GuestUnitAgreedResultNotify_Reason_Reason_MAX = GuestUnitAgreedResultNotify_Reason_HOST_UNIT_QUIT;
const int GuestUnitAgreedResultNotify_Reason_Reason_ARRAYSIZE = GuestUnitAgreedResultNotify_Reason_Reason_MAX + 1;

const ::google::protobuf::EnumDescriptor* GuestUnitAgreedResultNotify_Reason_descriptor();
inline const ::std::string& GuestUnitAgreedResultNotify_Reason_Name(GuestUnitAgreedResultNotify_Reason value) {
  return ::google::protobuf::internal::NameOfEnum(
    GuestUnitAgreedResultNotify_Reason_descriptor(), value);
}
inline bool GuestUnitAgreedResultNotify_Reason_Parse(
    const ::std::string& name, GuestUnitAgreedResultNotify_Reason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GuestUnitAgreedResultNotify_Reason>(
    GuestUnitAgreedResultNotify_Reason_descriptor(), name, value);
}
// ===================================================================

class MatchPlayer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MatchPlayer) */ {
 public:
  MatchPlayer();
  virtual ~MatchPlayer();

  MatchPlayer(const MatchPlayer& from);

  inline MatchPlayer& operator=(const MatchPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchPlayer(MatchPlayer&& from) noexcept
    : MatchPlayer() {
    *this = ::std::move(from);
  }

  inline MatchPlayer& operator=(MatchPlayer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchPlayer& default_instance();

  static inline const MatchPlayer* internal_default_instance() {
    return reinterpret_cast<const MatchPlayer*>(
               &_MatchPlayer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MatchPlayer* other);
  friend void swap(MatchPlayer& a, MatchPlayer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchPlayer* New() const PROTOBUF_FINAL { return New(NULL); }

  MatchPlayer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatchPlayer& from);
  void MergeFrom(const MatchPlayer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatchPlayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 blacklist_uid_list = 7;
  int blacklist_uid_list_size() const;
  void clear_blacklist_uid_list();
  static const int kBlacklistUidListFieldNumber = 7;
  ::google::protobuf::uint32 blacklist_uid_list(int index) const;
  void set_blacklist_uid_list(int index, ::google::protobuf::uint32 value);
  void add_blacklist_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      blacklist_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_blacklist_uid_list();

  // repeated uint32 hide_and_seek_chosen_map_list = 10;
  int hide_and_seek_chosen_map_list_size() const;
  void clear_hide_and_seek_chosen_map_list();
  static const int kHideAndSeekChosenMapListFieldNumber = 10;
  ::google::protobuf::uint32 hide_and_seek_chosen_map_list(int index) const;
  void set_hide_and_seek_chosen_map_list(int index, ::google::protobuf::uint32 value);
  void add_hide_and_seek_chosen_map_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hide_and_seek_chosen_map_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hide_and_seek_chosen_map_list();

  // string nickname = 2;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // .proto.OnlinePlayerInfo player_info = 8;
  bool has_player_info() const;
  void clear_player_info();
  static const int kPlayerInfoFieldNumber = 8;
  const ::proto::OnlinePlayerInfo& player_info() const;
  ::proto::OnlinePlayerInfo* mutable_player_info();
  ::proto::OnlinePlayerInfo* release_player_info();
  void set_allocated_player_info(::proto::OnlinePlayerInfo* player_info);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 player_level = 3;
  void clear_player_level();
  static const int kPlayerLevelFieldNumber = 3;
  ::google::protobuf::uint32 player_level() const;
  void set_player_level(::google::protobuf::uint32 value);

  // uint32 world_level = 4;
  void clear_world_level();
  static const int kWorldLevelFieldNumber = 4;
  ::google::protobuf::uint32 world_level() const;
  void set_world_level(::google::protobuf::uint32 value);

  // uint32 platform_type = 5;
  void clear_platform_type();
  static const int kPlatformTypeFieldNumber = 5;
  ::google::protobuf::uint32 platform_type() const;
  void set_platform_type(::google::protobuf::uint32 value);

  // bool is_only_match_with_ps_player = 6;
  void clear_is_only_match_with_ps_player();
  static const int kIsOnlyMatchWithPsPlayerFieldNumber = 6;
  bool is_only_match_with_ps_player() const;
  void set_is_only_match_with_ps_player(bool value);

  // uint32 hide_and_seek_hider_count = 9;
  void clear_hide_and_seek_hider_count();
  static const int kHideAndSeekHiderCountFieldNumber = 9;
  ::google::protobuf::uint32 hide_and_seek_hider_count() const;
  void set_hide_and_seek_hider_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MatchPlayer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > blacklist_uid_list_;
  mutable int _blacklist_uid_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hide_and_seek_chosen_map_list_;
  mutable int _hide_and_seek_chosen_map_list_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::proto::OnlinePlayerInfo* player_info_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 player_level_;
  ::google::protobuf::uint32 world_level_;
  ::google::protobuf::uint32 platform_type_;
  bool is_only_match_with_ps_player_;
  ::google::protobuf::uint32 hide_and_seek_hider_count_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MatchUnit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MatchUnit) */ {
 public:
  MatchUnit();
  virtual ~MatchUnit();

  MatchUnit(const MatchUnit& from);

  inline MatchUnit& operator=(const MatchUnit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchUnit(MatchUnit&& from) noexcept
    : MatchUnit() {
    *this = ::std::move(from);
  }

  inline MatchUnit& operator=(MatchUnit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchUnit& default_instance();

  static inline const MatchUnit* internal_default_instance() {
    return reinterpret_cast<const MatchUnit*>(
               &_MatchUnit_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(MatchUnit* other);
  friend void swap(MatchUnit& a, MatchUnit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchUnit* New() const PROTOBUF_FINAL { return New(NULL); }

  MatchUnit* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatchUnit& from);
  void MergeFrom(const MatchUnit& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatchUnit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.MatchPlayer match_player_list = 1;
  int match_player_list_size() const;
  void clear_match_player_list();
  static const int kMatchPlayerListFieldNumber = 1;
  const ::proto::MatchPlayer& match_player_list(int index) const;
  ::proto::MatchPlayer* mutable_match_player_list(int index);
  ::proto::MatchPlayer* add_match_player_list();
  ::google::protobuf::RepeatedPtrField< ::proto::MatchPlayer >*
      mutable_match_player_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::MatchPlayer >&
      match_player_list() const;

  // uint32 unit_id = 2;
  void clear_unit_id();
  static const int kUnitIdFieldNumber = 2;
  ::google::protobuf::uint32 unit_id() const;
  void set_unit_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MatchUnit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::MatchPlayer > match_player_list_;
  ::google::protobuf::uint32 unit_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddMatchUnitReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AddMatchUnitReq) */ {
 public:
  AddMatchUnitReq();
  virtual ~AddMatchUnitReq();

  AddMatchUnitReq(const AddMatchUnitReq& from);

  inline AddMatchUnitReq& operator=(const AddMatchUnitReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddMatchUnitReq(AddMatchUnitReq&& from) noexcept
    : AddMatchUnitReq() {
    *this = ::std::move(from);
  }

  inline AddMatchUnitReq& operator=(AddMatchUnitReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddMatchUnitReq& default_instance();

  enum DetailCase {
    kGcgDuelExtra = 21,
    DETAIL_NOT_SET = 0,
  };

  static inline const AddMatchUnitReq* internal_default_instance() {
    return reinterpret_cast<const AddMatchUnitReq*>(
               &_AddMatchUnitReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(AddMatchUnitReq* other);
  friend void swap(AddMatchUnitReq& a, AddMatchUnitReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddMatchUnitReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AddMatchUnitReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddMatchUnitReq& from);
  void MergeFrom(const AddMatchUnitReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddMatchUnitReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 match_param_list = 15;
  int match_param_list_size() const;
  void clear_match_param_list();
  static const int kMatchParamListFieldNumber = 15;
  ::google::protobuf::uint32 match_param_list(int index) const;
  void set_match_param_list(int index, ::google::protobuf::uint32 value);
  void add_match_param_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      match_param_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_match_param_list();

  // .proto.MatchUnit match_unit = 2;
  bool has_match_unit() const;
  void clear_match_unit();
  static const int kMatchUnitFieldNumber = 2;
  const ::proto::MatchUnit& match_unit() const;
  ::proto::MatchUnit* mutable_match_unit();
  ::proto::MatchUnit* release_match_unit();
  void set_allocated_match_unit(::proto::MatchUnit* match_unit);

  // .proto.MatchType match_type = 1;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 1;
  ::proto::MatchType match_type() const;
  void set_match_type(::proto::MatchType value);

  // .proto.MatchIdentity expect_identity = 3;
  void clear_expect_identity();
  static const int kExpectIdentityFieldNumber = 3;
  ::proto::MatchIdentity expect_identity() const;
  void set_expect_identity(::proto::MatchIdentity value);

  // uint32 dungeon_id = 11;
  void clear_dungeon_id();
  static const int kDungeonIdFieldNumber = 11;
  ::google::protobuf::uint32 dungeon_id() const;
  void set_dungeon_id(::google::protobuf::uint32 value);

  // uint32 mp_play_id = 12;
  void clear_mp_play_id();
  static const int kMpPlayIdFieldNumber = 12;
  ::google::protobuf::uint32 mp_play_id() const;
  void set_mp_play_id(::google::protobuf::uint32 value);

  // uint32 mechanicus_tag = 13;
  void clear_mechanicus_tag();
  static const int kMechanicusTagFieldNumber = 13;
  ::google::protobuf::uint32 mechanicus_tag() const;
  void set_mechanicus_tag(::google::protobuf::uint32 value);

  // uint32 match_id = 14;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 14;
  ::google::protobuf::uint32 match_id() const;
  void set_match_id(::google::protobuf::uint32 value);

  // .proto.GCGDuelExtra gcg_duel_extra = 21;
  bool has_gcg_duel_extra() const;
  void clear_gcg_duel_extra();
  static const int kGcgDuelExtraFieldNumber = 21;
  const ::proto::GCGDuelExtra& gcg_duel_extra() const;
  ::proto::GCGDuelExtra* mutable_gcg_duel_extra();
  ::proto::GCGDuelExtra* release_gcg_duel_extra();
  void set_allocated_gcg_duel_extra(::proto::GCGDuelExtra* gcg_duel_extra);

  DetailCase detail_case() const;
  // @@protoc_insertion_point(class_scope:proto.AddMatchUnitReq)
 private:
  void set_has_gcg_duel_extra();

  inline bool has_detail() const;
  void clear_detail();
  inline void clear_has_detail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > match_param_list_;
  mutable int _match_param_list_cached_byte_size_;
  ::proto::MatchUnit* match_unit_;
  int match_type_;
  int expect_identity_;
  ::google::protobuf::uint32 dungeon_id_;
  ::google::protobuf::uint32 mp_play_id_;
  ::google::protobuf::uint32 mechanicus_tag_;
  ::google::protobuf::uint32 match_id_;
  union DetailUnion {
    DetailUnion() {}
    ::proto::GCGDuelExtra* gcg_duel_extra_;
  } detail_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddMatchUnitRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AddMatchUnitRsp) */ {
 public:
  AddMatchUnitRsp();
  virtual ~AddMatchUnitRsp();

  AddMatchUnitRsp(const AddMatchUnitRsp& from);

  inline AddMatchUnitRsp& operator=(const AddMatchUnitRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddMatchUnitRsp(AddMatchUnitRsp&& from) noexcept
    : AddMatchUnitRsp() {
    *this = ::std::move(from);
  }

  inline AddMatchUnitRsp& operator=(AddMatchUnitRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddMatchUnitRsp& default_instance();

  static inline const AddMatchUnitRsp* internal_default_instance() {
    return reinterpret_cast<const AddMatchUnitRsp*>(
               &_AddMatchUnitRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(AddMatchUnitRsp* other);
  friend void swap(AddMatchUnitRsp& a, AddMatchUnitRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddMatchUnitRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddMatchUnitRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddMatchUnitRsp& from);
  void MergeFrom(const AddMatchUnitRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddMatchUnitRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.MatchUnit match_unit = 3;
  bool has_match_unit() const;
  void clear_match_unit();
  static const int kMatchUnitFieldNumber = 3;
  const ::proto::MatchUnit& match_unit() const;
  ::proto::MatchUnit* mutable_match_unit();
  ::proto::MatchUnit* release_match_unit();
  void set_allocated_match_unit(::proto::MatchUnit* match_unit);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // .proto.MatchType match_type = 2;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 2;
  ::proto::MatchType match_type() const;
  void set_match_type(::proto::MatchType value);

  // uint32 mechanicus_tag = 13;
  void clear_mechanicus_tag();
  static const int kMechanicusTagFieldNumber = 13;
  ::google::protobuf::uint32 mechanicus_tag() const;
  void set_mechanicus_tag(::google::protobuf::uint32 value);

  // uint32 dungeon_id = 11;
  void clear_dungeon_id();
  static const int kDungeonIdFieldNumber = 11;
  ::google::protobuf::uint32 dungeon_id() const;
  void set_dungeon_id(::google::protobuf::uint32 value);

  // uint32 mp_play_id = 12;
  void clear_mp_play_id();
  static const int kMpPlayIdFieldNumber = 12;
  ::google::protobuf::uint32 mp_play_id() const;
  void set_mp_play_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AddMatchUnitRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MatchUnit* match_unit_;
  ::google::protobuf::int32 retcode_;
  int match_type_;
  ::google::protobuf::uint32 mechanicus_tag_;
  ::google::protobuf::uint32 dungeon_id_;
  ::google::protobuf::uint32 mp_play_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MatchStartNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MatchStartNotify) */ {
 public:
  MatchStartNotify();
  virtual ~MatchStartNotify();

  MatchStartNotify(const MatchStartNotify& from);

  inline MatchStartNotify& operator=(const MatchStartNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchStartNotify(MatchStartNotify&& from) noexcept
    : MatchStartNotify() {
    *this = ::std::move(from);
  }

  inline MatchStartNotify& operator=(MatchStartNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchStartNotify& default_instance();

  static inline const MatchStartNotify* internal_default_instance() {
    return reinterpret_cast<const MatchStartNotify*>(
               &_MatchStartNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(MatchStartNotify* other);
  friend void swap(MatchStartNotify& a, MatchStartNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchStartNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MatchStartNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatchStartNotify& from);
  void MergeFrom(const MatchStartNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatchStartNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 match_param_list = 15;
  int match_param_list_size() const;
  void clear_match_param_list();
  static const int kMatchParamListFieldNumber = 15;
  ::google::protobuf::uint32 match_param_list(int index) const;
  void set_match_param_list(int index, ::google::protobuf::uint32 value);
  void add_match_param_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      match_param_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_match_param_list();

  // .proto.MatchType match_type = 1;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 1;
  ::proto::MatchType match_type() const;
  void set_match_type(::proto::MatchType value);

  // uint32 match_begin_time = 2;
  void clear_match_begin_time();
  static const int kMatchBeginTimeFieldNumber = 2;
  ::google::protobuf::uint32 match_begin_time() const;
  void set_match_begin_time(::google::protobuf::uint32 value);

  // uint32 estimate_match_cost_time = 3;
  void clear_estimate_match_cost_time();
  static const int kEstimateMatchCostTimeFieldNumber = 3;
  ::google::protobuf::uint32 estimate_match_cost_time() const;
  void set_estimate_match_cost_time(::google::protobuf::uint32 value);

  // bool is_rematch = 4;
  void clear_is_rematch();
  static const int kIsRematchFieldNumber = 4;
  bool is_rematch() const;
  void set_is_rematch(bool value);

  // uint32 dungeon_id = 11;
  void clear_dungeon_id();
  static const int kDungeonIdFieldNumber = 11;
  ::google::protobuf::uint32 dungeon_id() const;
  void set_dungeon_id(::google::protobuf::uint32 value);

  // uint32 mp_play_id = 12;
  void clear_mp_play_id();
  static const int kMpPlayIdFieldNumber = 12;
  ::google::protobuf::uint32 mp_play_id() const;
  void set_mp_play_id(::google::protobuf::uint32 value);

  // uint32 mechanicus_tag = 13;
  void clear_mechanicus_tag();
  static const int kMechanicusTagFieldNumber = 13;
  ::google::protobuf::uint32 mechanicus_tag() const;
  void set_mechanicus_tag(::google::protobuf::uint32 value);

  // uint32 match_id = 14;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 14;
  ::google::protobuf::uint32 match_id() const;
  void set_match_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MatchStartNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > match_param_list_;
  mutable int _match_param_list_cached_byte_size_;
  int match_type_;
  ::google::protobuf::uint32 match_begin_time_;
  ::google::protobuf::uint32 estimate_match_cost_time_;
  bool is_rematch_;
  ::google::protobuf::uint32 dungeon_id_;
  ::google::protobuf::uint32 mp_play_id_;
  ::google::protobuf::uint32 mechanicus_tag_;
  ::google::protobuf::uint32 match_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoveMatchUnitReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RemoveMatchUnitReq) */ {
 public:
  RemoveMatchUnitReq();
  virtual ~RemoveMatchUnitReq();

  RemoveMatchUnitReq(const RemoveMatchUnitReq& from);

  inline RemoveMatchUnitReq& operator=(const RemoveMatchUnitReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoveMatchUnitReq(RemoveMatchUnitReq&& from) noexcept
    : RemoveMatchUnitReq() {
    *this = ::std::move(from);
  }

  inline RemoveMatchUnitReq& operator=(RemoveMatchUnitReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveMatchUnitReq& default_instance();

  static inline const RemoveMatchUnitReq* internal_default_instance() {
    return reinterpret_cast<const RemoveMatchUnitReq*>(
               &_RemoveMatchUnitReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(RemoveMatchUnitReq* other);
  friend void swap(RemoveMatchUnitReq& a, RemoveMatchUnitReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoveMatchUnitReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoveMatchUnitReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoveMatchUnitReq& from);
  void MergeFrom(const RemoveMatchUnitReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoveMatchUnitReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.MatchType match_type = 1;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 1;
  ::proto::MatchType match_type() const;
  void set_match_type(::proto::MatchType value);

  // uint32 unit_id = 2;
  void clear_unit_id();
  static const int kUnitIdFieldNumber = 2;
  ::google::protobuf::uint32 unit_id() const;
  void set_unit_id(::google::protobuf::uint32 value);

  // .proto.MatchUnitRemoveOpType op_type = 3;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 3;
  ::proto::MatchUnitRemoveOpType op_type() const;
  void set_op_type(::proto::MatchUnitRemoveOpType value);

  // @@protoc_insertion_point(class_scope:proto.RemoveMatchUnitReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int match_type_;
  ::google::protobuf::uint32 unit_id_;
  int op_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoveMatchUnitRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RemoveMatchUnitRsp) */ {
 public:
  RemoveMatchUnitRsp();
  virtual ~RemoveMatchUnitRsp();

  RemoveMatchUnitRsp(const RemoveMatchUnitRsp& from);

  inline RemoveMatchUnitRsp& operator=(const RemoveMatchUnitRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoveMatchUnitRsp(RemoveMatchUnitRsp&& from) noexcept
    : RemoveMatchUnitRsp() {
    *this = ::std::move(from);
  }

  inline RemoveMatchUnitRsp& operator=(RemoveMatchUnitRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveMatchUnitRsp& default_instance();

  static inline const RemoveMatchUnitRsp* internal_default_instance() {
    return reinterpret_cast<const RemoveMatchUnitRsp*>(
               &_RemoveMatchUnitRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(RemoveMatchUnitRsp* other);
  friend void swap(RemoveMatchUnitRsp& a, RemoveMatchUnitRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoveMatchUnitRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoveMatchUnitRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoveMatchUnitRsp& from);
  void MergeFrom(const RemoveMatchUnitRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoveMatchUnitRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // .proto.MatchType match_type = 2;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 2;
  ::proto::MatchType match_type() const;
  void set_match_type(::proto::MatchType value);

  // uint32 unit_id = 3;
  void clear_unit_id();
  static const int kUnitIdFieldNumber = 3;
  ::google::protobuf::uint32 unit_id() const;
  void set_unit_id(::google::protobuf::uint32 value);

  // .proto.MatchUnitRemoveOpType op_type = 4;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 4;
  ::proto::MatchUnitRemoveOpType op_type() const;
  void set_op_type(::proto::MatchUnitRemoveOpType value);

  // @@protoc_insertion_point(class_scope:proto.RemoveMatchUnitRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  int match_type_;
  ::google::protobuf::uint32 unit_id_;
  int op_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MatchUnitRemovedNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MatchUnitRemovedNotify) */ {
 public:
  MatchUnitRemovedNotify();
  virtual ~MatchUnitRemovedNotify();

  MatchUnitRemovedNotify(const MatchUnitRemovedNotify& from);

  inline MatchUnitRemovedNotify& operator=(const MatchUnitRemovedNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchUnitRemovedNotify(MatchUnitRemovedNotify&& from) noexcept
    : MatchUnitRemovedNotify() {
    *this = ::std::move(from);
  }

  inline MatchUnitRemovedNotify& operator=(MatchUnitRemovedNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchUnitRemovedNotify& default_instance();

  static inline const MatchUnitRemovedNotify* internal_default_instance() {
    return reinterpret_cast<const MatchUnitRemovedNotify*>(
               &_MatchUnitRemovedNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(MatchUnitRemovedNotify* other);
  friend void swap(MatchUnitRemovedNotify& a, MatchUnitRemovedNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchUnitRemovedNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MatchUnitRemovedNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatchUnitRemovedNotify& from);
  void MergeFrom(const MatchUnitRemovedNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatchUnitRemovedNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.MatchType match_type = 1;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 1;
  ::proto::MatchType match_type() const;
  void set_match_type(::proto::MatchType value);

  // .proto.MatchReason reason = 2;
  void clear_reason();
  static const int kReasonFieldNumber = 2;
  ::proto::MatchReason reason() const;
  void set_reason(::proto::MatchReason value);

  // @@protoc_insertion_point(class_scope:proto.MatchUnitRemovedNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int match_type_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuestUnitMatchSuccNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GuestUnitMatchSuccNotify) */ {
 public:
  GuestUnitMatchSuccNotify();
  virtual ~GuestUnitMatchSuccNotify();

  GuestUnitMatchSuccNotify(const GuestUnitMatchSuccNotify& from);

  inline GuestUnitMatchSuccNotify& operator=(const GuestUnitMatchSuccNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuestUnitMatchSuccNotify(GuestUnitMatchSuccNotify&& from) noexcept
    : GuestUnitMatchSuccNotify() {
    *this = ::std::move(from);
  }

  inline GuestUnitMatchSuccNotify& operator=(GuestUnitMatchSuccNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GuestUnitMatchSuccNotify& default_instance();

  static inline const GuestUnitMatchSuccNotify* internal_default_instance() {
    return reinterpret_cast<const GuestUnitMatchSuccNotify*>(
               &_GuestUnitMatchSuccNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(GuestUnitMatchSuccNotify* other);
  friend void swap(GuestUnitMatchSuccNotify& a, GuestUnitMatchSuccNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuestUnitMatchSuccNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GuestUnitMatchSuccNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuestUnitMatchSuccNotify& from);
  void MergeFrom(const GuestUnitMatchSuccNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuestUnitMatchSuccNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 host_unit_id = 1;
  void clear_host_unit_id();
  static const int kHostUnitIdFieldNumber = 1;
  ::google::protobuf::uint32 host_unit_id() const;
  void set_host_unit_id(::google::protobuf::uint32 value);

  // uint32 confirm_end_time = 2;
  void clear_confirm_end_time();
  static const int kConfirmEndTimeFieldNumber = 2;
  ::google::protobuf::uint32 confirm_end_time() const;
  void set_confirm_end_time(::google::protobuf::uint32 value);

  // uint32 match_type = 3;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 3;
  ::google::protobuf::uint32 match_type() const;
  void set_match_type(::google::protobuf::uint32 value);

  // uint32 dungeon_id = 11;
  void clear_dungeon_id();
  static const int kDungeonIdFieldNumber = 11;
  ::google::protobuf::uint32 dungeon_id() const;
  void set_dungeon_id(::google::protobuf::uint32 value);

  // uint32 mp_play_id = 12;
  void clear_mp_play_id();
  static const int kMpPlayIdFieldNumber = 12;
  ::google::protobuf::uint32 mp_play_id() const;
  void set_mp_play_id(::google::protobuf::uint32 value);

  // uint32 mechanicus_tag = 13;
  void clear_mechanicus_tag();
  static const int kMechanicusTagFieldNumber = 13;
  ::google::protobuf::uint32 mechanicus_tag() const;
  void set_mechanicus_tag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GuestUnitMatchSuccNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 host_unit_id_;
  ::google::protobuf::uint32 confirm_end_time_;
  ::google::protobuf::uint32 match_type_;
  ::google::protobuf::uint32 dungeon_id_;
  ::google::protobuf::uint32 mp_play_id_;
  ::google::protobuf::uint32 mechanicus_tag_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfirmGuestUnitReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ConfirmGuestUnitReq) */ {
 public:
  ConfirmGuestUnitReq();
  virtual ~ConfirmGuestUnitReq();

  ConfirmGuestUnitReq(const ConfirmGuestUnitReq& from);

  inline ConfirmGuestUnitReq& operator=(const ConfirmGuestUnitReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfirmGuestUnitReq(ConfirmGuestUnitReq&& from) noexcept
    : ConfirmGuestUnitReq() {
    *this = ::std::move(from);
  }

  inline ConfirmGuestUnitReq& operator=(ConfirmGuestUnitReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfirmGuestUnitReq& default_instance();

  static inline const ConfirmGuestUnitReq* internal_default_instance() {
    return reinterpret_cast<const ConfirmGuestUnitReq*>(
               &_ConfirmGuestUnitReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ConfirmGuestUnitReq* other);
  friend void swap(ConfirmGuestUnitReq& a, ConfirmGuestUnitReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfirmGuestUnitReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ConfirmGuestUnitReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConfirmGuestUnitReq& from);
  void MergeFrom(const ConfirmGuestUnitReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConfirmGuestUnitReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.MatchType match_type = 1;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 1;
  ::proto::MatchType match_type() const;
  void set_match_type(::proto::MatchType value);

  // uint32 unit_id = 2;
  void clear_unit_id();
  static const int kUnitIdFieldNumber = 2;
  ::google::protobuf::uint32 unit_id() const;
  void set_unit_id(::google::protobuf::uint32 value);

  // bool is_agreed = 3;
  void clear_is_agreed();
  static const int kIsAgreedFieldNumber = 3;
  bool is_agreed() const;
  void set_is_agreed(bool value);

  // uint32 match_id = 4;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 4;
  ::google::protobuf::uint32 match_id() const;
  void set_match_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ConfirmGuestUnitReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int match_type_;
  ::google::protobuf::uint32 unit_id_;
  bool is_agreed_;
  ::google::protobuf::uint32 match_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfirmGuestUnitRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ConfirmGuestUnitRsp) */ {
 public:
  ConfirmGuestUnitRsp();
  virtual ~ConfirmGuestUnitRsp();

  ConfirmGuestUnitRsp(const ConfirmGuestUnitRsp& from);

  inline ConfirmGuestUnitRsp& operator=(const ConfirmGuestUnitRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfirmGuestUnitRsp(ConfirmGuestUnitRsp&& from) noexcept
    : ConfirmGuestUnitRsp() {
    *this = ::std::move(from);
  }

  inline ConfirmGuestUnitRsp& operator=(ConfirmGuestUnitRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfirmGuestUnitRsp& default_instance();

  static inline const ConfirmGuestUnitRsp* internal_default_instance() {
    return reinterpret_cast<const ConfirmGuestUnitRsp*>(
               &_ConfirmGuestUnitRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(ConfirmGuestUnitRsp* other);
  friend void swap(ConfirmGuestUnitRsp& a, ConfirmGuestUnitRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfirmGuestUnitRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ConfirmGuestUnitRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConfirmGuestUnitRsp& from);
  void MergeFrom(const ConfirmGuestUnitRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConfirmGuestUnitRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // .proto.MatchType match_type = 2;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 2;
  ::proto::MatchType match_type() const;
  void set_match_type(::proto::MatchType value);

  // uint32 unit_id = 3;
  void clear_unit_id();
  static const int kUnitIdFieldNumber = 3;
  ::google::protobuf::uint32 unit_id() const;
  void set_unit_id(::google::protobuf::uint32 value);

  // bool is_agreed = 4;
  void clear_is_agreed();
  static const int kIsAgreedFieldNumber = 4;
  bool is_agreed() const;
  void set_is_agreed(bool value);

  // uint32 match_id = 5;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 5;
  ::google::protobuf::uint32 match_id() const;
  void set_match_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ConfirmGuestUnitRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  int match_type_;
  ::google::protobuf::uint32 unit_id_;
  bool is_agreed_;
  ::google::protobuf::uint32 match_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MatchPlayerJoinNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MatchPlayerJoinNotify) */ {
 public:
  MatchPlayerJoinNotify();
  virtual ~MatchPlayerJoinNotify();

  MatchPlayerJoinNotify(const MatchPlayerJoinNotify& from);

  inline MatchPlayerJoinNotify& operator=(const MatchPlayerJoinNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchPlayerJoinNotify(MatchPlayerJoinNotify&& from) noexcept
    : MatchPlayerJoinNotify() {
    *this = ::std::move(from);
  }

  inline MatchPlayerJoinNotify& operator=(MatchPlayerJoinNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchPlayerJoinNotify& default_instance();

  static inline const MatchPlayerJoinNotify* internal_default_instance() {
    return reinterpret_cast<const MatchPlayerJoinNotify*>(
               &_MatchPlayerJoinNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(MatchPlayerJoinNotify* other);
  friend void swap(MatchPlayerJoinNotify& a, MatchPlayerJoinNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchPlayerJoinNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MatchPlayerJoinNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatchPlayerJoinNotify& from);
  void MergeFrom(const MatchPlayerJoinNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatchPlayerJoinNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.MatchPlayer match_player = 3;
  bool has_match_player() const;
  void clear_match_player();
  static const int kMatchPlayerFieldNumber = 3;
  const ::proto::MatchPlayer& match_player() const;
  ::proto::MatchPlayer* mutable_match_player();
  ::proto::MatchPlayer* release_match_player();
  void set_allocated_match_player(::proto::MatchPlayer* match_player);

  // .proto.MatchType match_type = 1;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 1;
  ::proto::MatchType match_type() const;
  void set_match_type(::proto::MatchType value);

  // uint32 unit_id = 2;
  void clear_unit_id();
  static const int kUnitIdFieldNumber = 2;
  ::google::protobuf::uint32 unit_id() const;
  void set_unit_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MatchPlayerJoinNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MatchPlayer* match_player_;
  int match_type_;
  ::google::protobuf::uint32 unit_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MatchPlayerQuitNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MatchPlayerQuitNotify) */ {
 public:
  MatchPlayerQuitNotify();
  virtual ~MatchPlayerQuitNotify();

  MatchPlayerQuitNotify(const MatchPlayerQuitNotify& from);

  inline MatchPlayerQuitNotify& operator=(const MatchPlayerQuitNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchPlayerQuitNotify(MatchPlayerQuitNotify&& from) noexcept
    : MatchPlayerQuitNotify() {
    *this = ::std::move(from);
  }

  inline MatchPlayerQuitNotify& operator=(MatchPlayerQuitNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchPlayerQuitNotify& default_instance();

  static inline const MatchPlayerQuitNotify* internal_default_instance() {
    return reinterpret_cast<const MatchPlayerQuitNotify*>(
               &_MatchPlayerQuitNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(MatchPlayerQuitNotify* other);
  friend void swap(MatchPlayerQuitNotify& a, MatchPlayerQuitNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchPlayerQuitNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MatchPlayerQuitNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatchPlayerQuitNotify& from);
  void MergeFrom(const MatchPlayerQuitNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatchPlayerQuitNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.MatchType match_type = 1;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 1;
  ::proto::MatchType match_type() const;
  void set_match_type(::proto::MatchType value);

  // uint32 unit_id = 2;
  void clear_unit_id();
  static const int kUnitIdFieldNumber = 2;
  ::google::protobuf::uint32 unit_id() const;
  void set_unit_id(::google::protobuf::uint32 value);

  // uint32 player_uid = 3;
  void clear_player_uid();
  static const int kPlayerUidFieldNumber = 3;
  ::google::protobuf::uint32 player_uid() const;
  void set_player_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MatchPlayerQuitNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int match_type_;
  ::google::protobuf::uint32 unit_id_;
  ::google::protobuf::uint32 player_uid_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuestUnitAgreedResultNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GuestUnitAgreedResultNotify) */ {
 public:
  GuestUnitAgreedResultNotify();
  virtual ~GuestUnitAgreedResultNotify();

  GuestUnitAgreedResultNotify(const GuestUnitAgreedResultNotify& from);

  inline GuestUnitAgreedResultNotify& operator=(const GuestUnitAgreedResultNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuestUnitAgreedResultNotify(GuestUnitAgreedResultNotify&& from) noexcept
    : GuestUnitAgreedResultNotify() {
    *this = ::std::move(from);
  }

  inline GuestUnitAgreedResultNotify& operator=(GuestUnitAgreedResultNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GuestUnitAgreedResultNotify& default_instance();

  static inline const GuestUnitAgreedResultNotify* internal_default_instance() {
    return reinterpret_cast<const GuestUnitAgreedResultNotify*>(
               &_GuestUnitAgreedResultNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(GuestUnitAgreedResultNotify* other);
  friend void swap(GuestUnitAgreedResultNotify& a, GuestUnitAgreedResultNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuestUnitAgreedResultNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GuestUnitAgreedResultNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuestUnitAgreedResultNotify& from);
  void MergeFrom(const GuestUnitAgreedResultNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuestUnitAgreedResultNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GuestUnitAgreedResultNotify_Reason Reason;
  static const Reason SUCC =
    GuestUnitAgreedResultNotify_Reason_SUCC;
  static const Reason HOST_UNIT_QUIT =
    GuestUnitAgreedResultNotify_Reason_HOST_UNIT_QUIT;
  static inline bool Reason_IsValid(int value) {
    return GuestUnitAgreedResultNotify_Reason_IsValid(value);
  }
  static const Reason Reason_MIN =
    GuestUnitAgreedResultNotify_Reason_Reason_MIN;
  static const Reason Reason_MAX =
    GuestUnitAgreedResultNotify_Reason_Reason_MAX;
  static const int Reason_ARRAYSIZE =
    GuestUnitAgreedResultNotify_Reason_Reason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Reason_descriptor() {
    return GuestUnitAgreedResultNotify_Reason_descriptor();
  }
  static inline const ::std::string& Reason_Name(Reason value) {
    return GuestUnitAgreedResultNotify_Reason_Name(value);
  }
  static inline bool Reason_Parse(const ::std::string& name,
      Reason* value) {
    return GuestUnitAgreedResultNotify_Reason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.MatchType match_type = 1;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 1;
  ::proto::MatchType match_type() const;
  void set_match_type(::proto::MatchType value);

  // uint32 host_unit_id = 2;
  void clear_host_unit_id();
  static const int kHostUnitIdFieldNumber = 2;
  ::google::protobuf::uint32 host_unit_id() const;
  void set_host_unit_id(::google::protobuf::uint32 value);

  // .proto.GuestUnitAgreedResultNotify.Reason reason = 3;
  void clear_reason();
  static const int kReasonFieldNumber = 3;
  ::proto::GuestUnitAgreedResultNotify_Reason reason() const;
  void set_reason(::proto::GuestUnitAgreedResultNotify_Reason value);

  // @@protoc_insertion_point(class_scope:proto.GuestUnitAgreedResultNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int match_type_;
  ::google::protobuf::uint32 host_unit_id_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HostUnitMatchSuccNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HostUnitMatchSuccNotify) */ {
 public:
  HostUnitMatchSuccNotify();
  virtual ~HostUnitMatchSuccNotify();

  HostUnitMatchSuccNotify(const HostUnitMatchSuccNotify& from);

  inline HostUnitMatchSuccNotify& operator=(const HostUnitMatchSuccNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HostUnitMatchSuccNotify(HostUnitMatchSuccNotify&& from) noexcept
    : HostUnitMatchSuccNotify() {
    *this = ::std::move(from);
  }

  inline HostUnitMatchSuccNotify& operator=(HostUnitMatchSuccNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HostUnitMatchSuccNotify& default_instance();

  static inline const HostUnitMatchSuccNotify* internal_default_instance() {
    return reinterpret_cast<const HostUnitMatchSuccNotify*>(
               &_HostUnitMatchSuccNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(HostUnitMatchSuccNotify* other);
  friend void swap(HostUnitMatchSuccNotify& a, HostUnitMatchSuccNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HostUnitMatchSuccNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  HostUnitMatchSuccNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HostUnitMatchSuccNotify& from);
  void MergeFrom(const HostUnitMatchSuccNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HostUnitMatchSuccNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 match_type = 1;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 1;
  ::google::protobuf::uint32 match_type() const;
  void set_match_type(::google::protobuf::uint32 value);

  // uint32 dungeon_id = 11;
  void clear_dungeon_id();
  static const int kDungeonIdFieldNumber = 11;
  ::google::protobuf::uint32 dungeon_id() const;
  void set_dungeon_id(::google::protobuf::uint32 value);

  // uint32 mp_play_id = 12;
  void clear_mp_play_id();
  static const int kMpPlayIdFieldNumber = 12;
  ::google::protobuf::uint32 mp_play_id() const;
  void set_mp_play_id(::google::protobuf::uint32 value);

  // uint32 mechanicus_difficult_level = 13;
  void clear_mechanicus_difficult_level();
  static const int kMechanicusDifficultLevelFieldNumber = 13;
  ::google::protobuf::uint32 mechanicus_difficult_level() const;
  void set_mechanicus_difficult_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HostUnitMatchSuccNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 match_type_;
  ::google::protobuf::uint32 dungeon_id_;
  ::google::protobuf::uint32 mp_play_id_;
  ::google::protobuf::uint32 mechanicus_difficult_level_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SyncMatchUnitReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SyncMatchUnitReq) */ {
 public:
  SyncMatchUnitReq();
  virtual ~SyncMatchUnitReq();

  SyncMatchUnitReq(const SyncMatchUnitReq& from);

  inline SyncMatchUnitReq& operator=(const SyncMatchUnitReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncMatchUnitReq(SyncMatchUnitReq&& from) noexcept
    : SyncMatchUnitReq() {
    *this = ::std::move(from);
  }

  inline SyncMatchUnitReq& operator=(SyncMatchUnitReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncMatchUnitReq& default_instance();

  static inline const SyncMatchUnitReq* internal_default_instance() {
    return reinterpret_cast<const SyncMatchUnitReq*>(
               &_SyncMatchUnitReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(SyncMatchUnitReq* other);
  friend void swap(SyncMatchUnitReq& a, SyncMatchUnitReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncMatchUnitReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncMatchUnitReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncMatchUnitReq& from);
  void MergeFrom(const SyncMatchUnitReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncMatchUnitReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.MatchUnit match_unit = 2;
  bool has_match_unit() const;
  void clear_match_unit();
  static const int kMatchUnitFieldNumber = 2;
  const ::proto::MatchUnit& match_unit() const;
  ::proto::MatchUnit* mutable_match_unit();
  ::proto::MatchUnit* release_match_unit();
  void set_allocated_match_unit(::proto::MatchUnit* match_unit);

  // .proto.MatchType match_type = 1;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 1;
  ::proto::MatchType match_type() const;
  void set_match_type(::proto::MatchType value);

  // @@protoc_insertion_point(class_scope:proto.SyncMatchUnitReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MatchUnit* match_unit_;
  int match_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SyncMatchUnitRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SyncMatchUnitRsp) */ {
 public:
  SyncMatchUnitRsp();
  virtual ~SyncMatchUnitRsp();

  SyncMatchUnitRsp(const SyncMatchUnitRsp& from);

  inline SyncMatchUnitRsp& operator=(const SyncMatchUnitRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncMatchUnitRsp(SyncMatchUnitRsp&& from) noexcept
    : SyncMatchUnitRsp() {
    *this = ::std::move(from);
  }

  inline SyncMatchUnitRsp& operator=(SyncMatchUnitRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncMatchUnitRsp& default_instance();

  static inline const SyncMatchUnitRsp* internal_default_instance() {
    return reinterpret_cast<const SyncMatchUnitRsp*>(
               &_SyncMatchUnitRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(SyncMatchUnitRsp* other);
  friend void swap(SyncMatchUnitRsp& a, SyncMatchUnitRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncMatchUnitRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncMatchUnitRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncMatchUnitRsp& from);
  void MergeFrom(const SyncMatchUnitRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncMatchUnitRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SyncMatchUnitRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class MatchserverWorkloadInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MatchserverWorkloadInfoNotify) */ {
 public:
  MatchserverWorkloadInfoNotify();
  virtual ~MatchserverWorkloadInfoNotify();

  MatchserverWorkloadInfoNotify(const MatchserverWorkloadInfoNotify& from);

  inline MatchserverWorkloadInfoNotify& operator=(const MatchserverWorkloadInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchserverWorkloadInfoNotify(MatchserverWorkloadInfoNotify&& from) noexcept
    : MatchserverWorkloadInfoNotify() {
    *this = ::std::move(from);
  }

  inline MatchserverWorkloadInfoNotify& operator=(MatchserverWorkloadInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchserverWorkloadInfoNotify& default_instance();

  static inline const MatchserverWorkloadInfoNotify* internal_default_instance() {
    return reinterpret_cast<const MatchserverWorkloadInfoNotify*>(
               &_MatchserverWorkloadInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(MatchserverWorkloadInfoNotify* other);
  friend void swap(MatchserverWorkloadInfoNotify& a, MatchserverWorkloadInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchserverWorkloadInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MatchserverWorkloadInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatchserverWorkloadInfoNotify& from);
  void MergeFrom(const MatchserverWorkloadInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatchserverWorkloadInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> match_unit_map = 2;
  int match_unit_map_size() const;
  void clear_match_unit_map();
  static const int kMatchUnitMapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      match_unit_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_match_unit_map();

  // uint32 match_unit_num = 1;
  void clear_match_unit_num();
  static const int kMatchUnitNumFieldNumber = 1;
  ::google::protobuf::uint32 match_unit_num() const;
  void set_match_unit_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MatchserverWorkloadInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class MatchserverWorkloadInfoNotify_MatchUnitMapEntry : public ::google::protobuf::internal::MapEntry<MatchserverWorkloadInfoNotify_MatchUnitMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<MatchserverWorkloadInfoNotify_MatchUnitMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    MatchserverWorkloadInfoNotify_MatchUnitMapEntry();
    MatchserverWorkloadInfoNotify_MatchUnitMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const MatchserverWorkloadInfoNotify_MatchUnitMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_MatchserverWorkloadInfoNotify_MatchUnitMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      MatchserverWorkloadInfoNotify_MatchUnitMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > match_unit_map_;
  private:
  ::google::protobuf::uint32 match_unit_num_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MatchPlayerUpdateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MatchPlayerUpdateNotify) */ {
 public:
  MatchPlayerUpdateNotify();
  virtual ~MatchPlayerUpdateNotify();

  MatchPlayerUpdateNotify(const MatchPlayerUpdateNotify& from);

  inline MatchPlayerUpdateNotify& operator=(const MatchPlayerUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchPlayerUpdateNotify(MatchPlayerUpdateNotify&& from) noexcept
    : MatchPlayerUpdateNotify() {
    *this = ::std::move(from);
  }

  inline MatchPlayerUpdateNotify& operator=(MatchPlayerUpdateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchPlayerUpdateNotify& default_instance();

  static inline const MatchPlayerUpdateNotify* internal_default_instance() {
    return reinterpret_cast<const MatchPlayerUpdateNotify*>(
               &_MatchPlayerUpdateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(MatchPlayerUpdateNotify* other);
  friend void swap(MatchPlayerUpdateNotify& a, MatchPlayerUpdateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchPlayerUpdateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MatchPlayerUpdateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatchPlayerUpdateNotify& from);
  void MergeFrom(const MatchPlayerUpdateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatchPlayerUpdateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.MatchPlayer match_player = 3;
  bool has_match_player() const;
  void clear_match_player();
  static const int kMatchPlayerFieldNumber = 3;
  const ::proto::MatchPlayer& match_player() const;
  ::proto::MatchPlayer* mutable_match_player();
  ::proto::MatchPlayer* release_match_player();
  void set_allocated_match_player(::proto::MatchPlayer* match_player);

  // .proto.MatchType match_type = 1;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 1;
  ::proto::MatchType match_type() const;
  void set_match_type(::proto::MatchType value);

  // uint32 unit_id = 2;
  void clear_unit_id();
  static const int kUnitIdFieldNumber = 2;
  ::google::protobuf::uint32 unit_id() const;
  void set_unit_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MatchPlayerUpdateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MatchPlayer* match_player_;
  int match_type_;
  ::google::protobuf::uint32 unit_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MatchIdentityNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MatchIdentityNotify) */ {
 public:
  MatchIdentityNotify();
  virtual ~MatchIdentityNotify();

  MatchIdentityNotify(const MatchIdentityNotify& from);

  inline MatchIdentityNotify& operator=(const MatchIdentityNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchIdentityNotify(MatchIdentityNotify&& from) noexcept
    : MatchIdentityNotify() {
    *this = ::std::move(from);
  }

  inline MatchIdentityNotify& operator=(MatchIdentityNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchIdentityNotify& default_instance();

  static inline const MatchIdentityNotify* internal_default_instance() {
    return reinterpret_cast<const MatchIdentityNotify*>(
               &_MatchIdentityNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(MatchIdentityNotify* other);
  friend void swap(MatchIdentityNotify& a, MatchIdentityNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchIdentityNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MatchIdentityNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatchIdentityNotify& from);
  void MergeFrom(const MatchIdentityNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatchIdentityNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.MatchType match_type = 1;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 1;
  ::proto::MatchType match_type() const;
  void set_match_type(::proto::MatchType value);

  // .proto.MatchIdentity match_identity = 2;
  void clear_match_identity();
  static const int kMatchIdentityFieldNumber = 2;
  ::proto::MatchIdentity match_identity() const;
  void set_match_identity(::proto::MatchIdentity value);

  // @@protoc_insertion_point(class_scope:proto.MatchIdentityNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int match_type_;
  int match_identity_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GeneralMatchFinishNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GeneralMatchFinishNotify) */ {
 public:
  GeneralMatchFinishNotify();
  virtual ~GeneralMatchFinishNotify();

  GeneralMatchFinishNotify(const GeneralMatchFinishNotify& from);

  inline GeneralMatchFinishNotify& operator=(const GeneralMatchFinishNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GeneralMatchFinishNotify(GeneralMatchFinishNotify&& from) noexcept
    : GeneralMatchFinishNotify() {
    *this = ::std::move(from);
  }

  inline GeneralMatchFinishNotify& operator=(GeneralMatchFinishNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GeneralMatchFinishNotify& default_instance();

  static inline const GeneralMatchFinishNotify* internal_default_instance() {
    return reinterpret_cast<const GeneralMatchFinishNotify*>(
               &_GeneralMatchFinishNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(GeneralMatchFinishNotify* other);
  friend void swap(GeneralMatchFinishNotify& a, GeneralMatchFinishNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GeneralMatchFinishNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GeneralMatchFinishNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GeneralMatchFinishNotify& from);
  void MergeFrom(const GeneralMatchFinishNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GeneralMatchFinishNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.MatchPlayer match_player_list = 4;
  int match_player_list_size() const;
  void clear_match_player_list();
  static const int kMatchPlayerListFieldNumber = 4;
  const ::proto::MatchPlayer& match_player_list(int index) const;
  ::proto::MatchPlayer* mutable_match_player_list(int index);
  ::proto::MatchPlayer* add_match_player_list();
  ::google::protobuf::RepeatedPtrField< ::proto::MatchPlayer >*
      mutable_match_player_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::MatchPlayer >&
      match_player_list() const;

  // .proto.MatchType match_type = 1;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 1;
  ::proto::MatchType match_type() const;
  void set_match_type(::proto::MatchType value);

  // uint32 match_id = 2;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  ::google::protobuf::uint32 match_id() const;
  void set_match_id(::google::protobuf::uint32 value);

  // uint32 match_param = 3;
  void clear_match_param();
  static const int kMatchParamFieldNumber = 3;
  ::google::protobuf::uint32 match_param() const;
  void set_match_param(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GeneralMatchFinishNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::MatchPlayer > match_player_list_;
  int match_type_;
  ::google::protobuf::uint32 match_id_;
  ::google::protobuf::uint32 match_param_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MatchPlayer

// uint32 uid = 1;
inline void MatchPlayer::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 MatchPlayer::uid() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayer.uid)
  return uid_;
}
inline void MatchPlayer::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayer.uid)
}

// string nickname = 2;
inline void MatchPlayer::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchPlayer::nickname() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayer.nickname)
  return nickname_.GetNoArena();
}
inline void MatchPlayer::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MatchPlayer.nickname)
}
#if LANG_CXX11
inline void MatchPlayer::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MatchPlayer.nickname)
}
#endif
inline void MatchPlayer::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MatchPlayer.nickname)
}
inline void MatchPlayer::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MatchPlayer.nickname)
}
inline ::std::string* MatchPlayer::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.MatchPlayer.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchPlayer::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.MatchPlayer.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchPlayer::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.MatchPlayer.nickname)
}

// uint32 player_level = 3;
inline void MatchPlayer::clear_player_level() {
  player_level_ = 0u;
}
inline ::google::protobuf::uint32 MatchPlayer::player_level() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayer.player_level)
  return player_level_;
}
inline void MatchPlayer::set_player_level(::google::protobuf::uint32 value) {
  
  player_level_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayer.player_level)
}

// uint32 world_level = 4;
inline void MatchPlayer::clear_world_level() {
  world_level_ = 0u;
}
inline ::google::protobuf::uint32 MatchPlayer::world_level() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayer.world_level)
  return world_level_;
}
inline void MatchPlayer::set_world_level(::google::protobuf::uint32 value) {
  
  world_level_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayer.world_level)
}

// uint32 platform_type = 5;
inline void MatchPlayer::clear_platform_type() {
  platform_type_ = 0u;
}
inline ::google::protobuf::uint32 MatchPlayer::platform_type() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayer.platform_type)
  return platform_type_;
}
inline void MatchPlayer::set_platform_type(::google::protobuf::uint32 value) {
  
  platform_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayer.platform_type)
}

// bool is_only_match_with_ps_player = 6;
inline void MatchPlayer::clear_is_only_match_with_ps_player() {
  is_only_match_with_ps_player_ = false;
}
inline bool MatchPlayer::is_only_match_with_ps_player() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayer.is_only_match_with_ps_player)
  return is_only_match_with_ps_player_;
}
inline void MatchPlayer::set_is_only_match_with_ps_player(bool value) {
  
  is_only_match_with_ps_player_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayer.is_only_match_with_ps_player)
}

// repeated uint32 blacklist_uid_list = 7;
inline int MatchPlayer::blacklist_uid_list_size() const {
  return blacklist_uid_list_.size();
}
inline void MatchPlayer::clear_blacklist_uid_list() {
  blacklist_uid_list_.Clear();
}
inline ::google::protobuf::uint32 MatchPlayer::blacklist_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayer.blacklist_uid_list)
  return blacklist_uid_list_.Get(index);
}
inline void MatchPlayer::set_blacklist_uid_list(int index, ::google::protobuf::uint32 value) {
  blacklist_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.MatchPlayer.blacklist_uid_list)
}
inline void MatchPlayer::add_blacklist_uid_list(::google::protobuf::uint32 value) {
  blacklist_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.MatchPlayer.blacklist_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MatchPlayer::blacklist_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.MatchPlayer.blacklist_uid_list)
  return blacklist_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MatchPlayer::mutable_blacklist_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MatchPlayer.blacklist_uid_list)
  return &blacklist_uid_list_;
}

// .proto.OnlinePlayerInfo player_info = 8;
inline bool MatchPlayer::has_player_info() const {
  return this != internal_default_instance() && player_info_ != NULL;
}
inline void MatchPlayer::clear_player_info() {
  if (GetArenaNoVirtual() == NULL && player_info_ != NULL) delete player_info_;
  player_info_ = NULL;
}
inline const ::proto::OnlinePlayerInfo& MatchPlayer::player_info() const {
  const ::proto::OnlinePlayerInfo* p = player_info_;
  // @@protoc_insertion_point(field_get:proto.MatchPlayer.player_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::OnlinePlayerInfo*>(
      &::proto::_OnlinePlayerInfo_default_instance_);
}
inline ::proto::OnlinePlayerInfo* MatchPlayer::mutable_player_info() {
  
  if (player_info_ == NULL) {
    player_info_ = new ::proto::OnlinePlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.MatchPlayer.player_info)
  return player_info_;
}
inline ::proto::OnlinePlayerInfo* MatchPlayer::release_player_info() {
  // @@protoc_insertion_point(field_release:proto.MatchPlayer.player_info)
  
  ::proto::OnlinePlayerInfo* temp = player_info_;
  player_info_ = NULL;
  return temp;
}
inline void MatchPlayer::set_allocated_player_info(::proto::OnlinePlayerInfo* player_info) {
  delete player_info_;
  player_info_ = player_info;
  if (player_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MatchPlayer.player_info)
}

// uint32 hide_and_seek_hider_count = 9;
inline void MatchPlayer::clear_hide_and_seek_hider_count() {
  hide_and_seek_hider_count_ = 0u;
}
inline ::google::protobuf::uint32 MatchPlayer::hide_and_seek_hider_count() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayer.hide_and_seek_hider_count)
  return hide_and_seek_hider_count_;
}
inline void MatchPlayer::set_hide_and_seek_hider_count(::google::protobuf::uint32 value) {
  
  hide_and_seek_hider_count_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayer.hide_and_seek_hider_count)
}

// repeated uint32 hide_and_seek_chosen_map_list = 10;
inline int MatchPlayer::hide_and_seek_chosen_map_list_size() const {
  return hide_and_seek_chosen_map_list_.size();
}
inline void MatchPlayer::clear_hide_and_seek_chosen_map_list() {
  hide_and_seek_chosen_map_list_.Clear();
}
inline ::google::protobuf::uint32 MatchPlayer::hide_and_seek_chosen_map_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayer.hide_and_seek_chosen_map_list)
  return hide_and_seek_chosen_map_list_.Get(index);
}
inline void MatchPlayer::set_hide_and_seek_chosen_map_list(int index, ::google::protobuf::uint32 value) {
  hide_and_seek_chosen_map_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.MatchPlayer.hide_and_seek_chosen_map_list)
}
inline void MatchPlayer::add_hide_and_seek_chosen_map_list(::google::protobuf::uint32 value) {
  hide_and_seek_chosen_map_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.MatchPlayer.hide_and_seek_chosen_map_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MatchPlayer::hide_and_seek_chosen_map_list() const {
  // @@protoc_insertion_point(field_list:proto.MatchPlayer.hide_and_seek_chosen_map_list)
  return hide_and_seek_chosen_map_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MatchPlayer::mutable_hide_and_seek_chosen_map_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MatchPlayer.hide_and_seek_chosen_map_list)
  return &hide_and_seek_chosen_map_list_;
}

// -------------------------------------------------------------------

// MatchUnit

// repeated .proto.MatchPlayer match_player_list = 1;
inline int MatchUnit::match_player_list_size() const {
  return match_player_list_.size();
}
inline void MatchUnit::clear_match_player_list() {
  match_player_list_.Clear();
}
inline const ::proto::MatchPlayer& MatchUnit::match_player_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MatchUnit.match_player_list)
  return match_player_list_.Get(index);
}
inline ::proto::MatchPlayer* MatchUnit::mutable_match_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MatchUnit.match_player_list)
  return match_player_list_.Mutable(index);
}
inline ::proto::MatchPlayer* MatchUnit::add_match_player_list() {
  // @@protoc_insertion_point(field_add:proto.MatchUnit.match_player_list)
  return match_player_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::MatchPlayer >*
MatchUnit::mutable_match_player_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MatchUnit.match_player_list)
  return &match_player_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::MatchPlayer >&
MatchUnit::match_player_list() const {
  // @@protoc_insertion_point(field_list:proto.MatchUnit.match_player_list)
  return match_player_list_;
}

// uint32 unit_id = 2;
inline void MatchUnit::clear_unit_id() {
  unit_id_ = 0u;
}
inline ::google::protobuf::uint32 MatchUnit::unit_id() const {
  // @@protoc_insertion_point(field_get:proto.MatchUnit.unit_id)
  return unit_id_;
}
inline void MatchUnit::set_unit_id(::google::protobuf::uint32 value) {
  
  unit_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchUnit.unit_id)
}

// -------------------------------------------------------------------

// AddMatchUnitReq

// .proto.MatchType match_type = 1;
inline void AddMatchUnitReq::clear_match_type() {
  match_type_ = 0;
}
inline ::proto::MatchType AddMatchUnitReq::match_type() const {
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitReq.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
inline void AddMatchUnitReq::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMatchUnitReq.match_type)
}

// .proto.MatchUnit match_unit = 2;
inline bool AddMatchUnitReq::has_match_unit() const {
  return this != internal_default_instance() && match_unit_ != NULL;
}
inline void AddMatchUnitReq::clear_match_unit() {
  if (GetArenaNoVirtual() == NULL && match_unit_ != NULL) delete match_unit_;
  match_unit_ = NULL;
}
inline const ::proto::MatchUnit& AddMatchUnitReq::match_unit() const {
  const ::proto::MatchUnit* p = match_unit_;
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitReq.match_unit)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MatchUnit*>(
      &::proto::_MatchUnit_default_instance_);
}
inline ::proto::MatchUnit* AddMatchUnitReq::mutable_match_unit() {
  
  if (match_unit_ == NULL) {
    match_unit_ = new ::proto::MatchUnit;
  }
  // @@protoc_insertion_point(field_mutable:proto.AddMatchUnitReq.match_unit)
  return match_unit_;
}
inline ::proto::MatchUnit* AddMatchUnitReq::release_match_unit() {
  // @@protoc_insertion_point(field_release:proto.AddMatchUnitReq.match_unit)
  
  ::proto::MatchUnit* temp = match_unit_;
  match_unit_ = NULL;
  return temp;
}
inline void AddMatchUnitReq::set_allocated_match_unit(::proto::MatchUnit* match_unit) {
  delete match_unit_;
  match_unit_ = match_unit;
  if (match_unit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AddMatchUnitReq.match_unit)
}

// .proto.MatchIdentity expect_identity = 3;
inline void AddMatchUnitReq::clear_expect_identity() {
  expect_identity_ = 0;
}
inline ::proto::MatchIdentity AddMatchUnitReq::expect_identity() const {
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitReq.expect_identity)
  return static_cast< ::proto::MatchIdentity >(expect_identity_);
}
inline void AddMatchUnitReq::set_expect_identity(::proto::MatchIdentity value) {
  
  expect_identity_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMatchUnitReq.expect_identity)
}

// uint32 dungeon_id = 11;
inline void AddMatchUnitReq::clear_dungeon_id() {
  dungeon_id_ = 0u;
}
inline ::google::protobuf::uint32 AddMatchUnitReq::dungeon_id() const {
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitReq.dungeon_id)
  return dungeon_id_;
}
inline void AddMatchUnitReq::set_dungeon_id(::google::protobuf::uint32 value) {
  
  dungeon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMatchUnitReq.dungeon_id)
}

// uint32 mp_play_id = 12;
inline void AddMatchUnitReq::clear_mp_play_id() {
  mp_play_id_ = 0u;
}
inline ::google::protobuf::uint32 AddMatchUnitReq::mp_play_id() const {
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitReq.mp_play_id)
  return mp_play_id_;
}
inline void AddMatchUnitReq::set_mp_play_id(::google::protobuf::uint32 value) {
  
  mp_play_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMatchUnitReq.mp_play_id)
}

// uint32 mechanicus_tag = 13;
inline void AddMatchUnitReq::clear_mechanicus_tag() {
  mechanicus_tag_ = 0u;
}
inline ::google::protobuf::uint32 AddMatchUnitReq::mechanicus_tag() const {
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitReq.mechanicus_tag)
  return mechanicus_tag_;
}
inline void AddMatchUnitReq::set_mechanicus_tag(::google::protobuf::uint32 value) {
  
  mechanicus_tag_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMatchUnitReq.mechanicus_tag)
}

// uint32 match_id = 14;
inline void AddMatchUnitReq::clear_match_id() {
  match_id_ = 0u;
}
inline ::google::protobuf::uint32 AddMatchUnitReq::match_id() const {
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitReq.match_id)
  return match_id_;
}
inline void AddMatchUnitReq::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMatchUnitReq.match_id)
}

// repeated uint32 match_param_list = 15;
inline int AddMatchUnitReq::match_param_list_size() const {
  return match_param_list_.size();
}
inline void AddMatchUnitReq::clear_match_param_list() {
  match_param_list_.Clear();
}
inline ::google::protobuf::uint32 AddMatchUnitReq::match_param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitReq.match_param_list)
  return match_param_list_.Get(index);
}
inline void AddMatchUnitReq::set_match_param_list(int index, ::google::protobuf::uint32 value) {
  match_param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AddMatchUnitReq.match_param_list)
}
inline void AddMatchUnitReq::add_match_param_list(::google::protobuf::uint32 value) {
  match_param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AddMatchUnitReq.match_param_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AddMatchUnitReq::match_param_list() const {
  // @@protoc_insertion_point(field_list:proto.AddMatchUnitReq.match_param_list)
  return match_param_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AddMatchUnitReq::mutable_match_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AddMatchUnitReq.match_param_list)
  return &match_param_list_;
}

// .proto.GCGDuelExtra gcg_duel_extra = 21;
inline bool AddMatchUnitReq::has_gcg_duel_extra() const {
  return detail_case() == kGcgDuelExtra;
}
inline void AddMatchUnitReq::set_has_gcg_duel_extra() {
  _oneof_case_[0] = kGcgDuelExtra;
}
inline void AddMatchUnitReq::clear_gcg_duel_extra() {
  if (has_gcg_duel_extra()) {
    delete detail_.gcg_duel_extra_;
    clear_has_detail();
  }
}
inline  const ::proto::GCGDuelExtra& AddMatchUnitReq::gcg_duel_extra() const {
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitReq.gcg_duel_extra)
  return has_gcg_duel_extra()
      ? *detail_.gcg_duel_extra_
      : ::proto::GCGDuelExtra::default_instance();
}
inline ::proto::GCGDuelExtra* AddMatchUnitReq::mutable_gcg_duel_extra() {
  if (!has_gcg_duel_extra()) {
    clear_detail();
    set_has_gcg_duel_extra();
    detail_.gcg_duel_extra_ = new ::proto::GCGDuelExtra;
  }
  // @@protoc_insertion_point(field_mutable:proto.AddMatchUnitReq.gcg_duel_extra)
  return detail_.gcg_duel_extra_;
}
inline ::proto::GCGDuelExtra* AddMatchUnitReq::release_gcg_duel_extra() {
  // @@protoc_insertion_point(field_release:proto.AddMatchUnitReq.gcg_duel_extra)
  if (has_gcg_duel_extra()) {
    clear_has_detail();
    ::proto::GCGDuelExtra* temp = detail_.gcg_duel_extra_;
    detail_.gcg_duel_extra_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void AddMatchUnitReq::set_allocated_gcg_duel_extra(::proto::GCGDuelExtra* gcg_duel_extra) {
  clear_detail();
  if (gcg_duel_extra) {
    set_has_gcg_duel_extra();
    detail_.gcg_duel_extra_ = gcg_duel_extra;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AddMatchUnitReq.gcg_duel_extra)
}

inline bool AddMatchUnitReq::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
inline void AddMatchUnitReq::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
inline AddMatchUnitReq::DetailCase AddMatchUnitReq::detail_case() const {
  return AddMatchUnitReq::DetailCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// AddMatchUnitRsp

// int32 retcode = 1;
inline void AddMatchUnitRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 AddMatchUnitRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitRsp.retcode)
  return retcode_;
}
inline void AddMatchUnitRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMatchUnitRsp.retcode)
}

// .proto.MatchType match_type = 2;
inline void AddMatchUnitRsp::clear_match_type() {
  match_type_ = 0;
}
inline ::proto::MatchType AddMatchUnitRsp::match_type() const {
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitRsp.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
inline void AddMatchUnitRsp::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMatchUnitRsp.match_type)
}

// .proto.MatchUnit match_unit = 3;
inline bool AddMatchUnitRsp::has_match_unit() const {
  return this != internal_default_instance() && match_unit_ != NULL;
}
inline void AddMatchUnitRsp::clear_match_unit() {
  if (GetArenaNoVirtual() == NULL && match_unit_ != NULL) delete match_unit_;
  match_unit_ = NULL;
}
inline const ::proto::MatchUnit& AddMatchUnitRsp::match_unit() const {
  const ::proto::MatchUnit* p = match_unit_;
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitRsp.match_unit)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MatchUnit*>(
      &::proto::_MatchUnit_default_instance_);
}
inline ::proto::MatchUnit* AddMatchUnitRsp::mutable_match_unit() {
  
  if (match_unit_ == NULL) {
    match_unit_ = new ::proto::MatchUnit;
  }
  // @@protoc_insertion_point(field_mutable:proto.AddMatchUnitRsp.match_unit)
  return match_unit_;
}
inline ::proto::MatchUnit* AddMatchUnitRsp::release_match_unit() {
  // @@protoc_insertion_point(field_release:proto.AddMatchUnitRsp.match_unit)
  
  ::proto::MatchUnit* temp = match_unit_;
  match_unit_ = NULL;
  return temp;
}
inline void AddMatchUnitRsp::set_allocated_match_unit(::proto::MatchUnit* match_unit) {
  delete match_unit_;
  match_unit_ = match_unit;
  if (match_unit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AddMatchUnitRsp.match_unit)
}

// uint32 dungeon_id = 11;
inline void AddMatchUnitRsp::clear_dungeon_id() {
  dungeon_id_ = 0u;
}
inline ::google::protobuf::uint32 AddMatchUnitRsp::dungeon_id() const {
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitRsp.dungeon_id)
  return dungeon_id_;
}
inline void AddMatchUnitRsp::set_dungeon_id(::google::protobuf::uint32 value) {
  
  dungeon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMatchUnitRsp.dungeon_id)
}

// uint32 mp_play_id = 12;
inline void AddMatchUnitRsp::clear_mp_play_id() {
  mp_play_id_ = 0u;
}
inline ::google::protobuf::uint32 AddMatchUnitRsp::mp_play_id() const {
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitRsp.mp_play_id)
  return mp_play_id_;
}
inline void AddMatchUnitRsp::set_mp_play_id(::google::protobuf::uint32 value) {
  
  mp_play_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMatchUnitRsp.mp_play_id)
}

// uint32 mechanicus_tag = 13;
inline void AddMatchUnitRsp::clear_mechanicus_tag() {
  mechanicus_tag_ = 0u;
}
inline ::google::protobuf::uint32 AddMatchUnitRsp::mechanicus_tag() const {
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitRsp.mechanicus_tag)
  return mechanicus_tag_;
}
inline void AddMatchUnitRsp::set_mechanicus_tag(::google::protobuf::uint32 value) {
  
  mechanicus_tag_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMatchUnitRsp.mechanicus_tag)
}

// -------------------------------------------------------------------

// MatchStartNotify

// .proto.MatchType match_type = 1;
inline void MatchStartNotify::clear_match_type() {
  match_type_ = 0;
}
inline ::proto::MatchType MatchStartNotify::match_type() const {
  // @@protoc_insertion_point(field_get:proto.MatchStartNotify.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
inline void MatchStartNotify::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchStartNotify.match_type)
}

// uint32 match_begin_time = 2;
inline void MatchStartNotify::clear_match_begin_time() {
  match_begin_time_ = 0u;
}
inline ::google::protobuf::uint32 MatchStartNotify::match_begin_time() const {
  // @@protoc_insertion_point(field_get:proto.MatchStartNotify.match_begin_time)
  return match_begin_time_;
}
inline void MatchStartNotify::set_match_begin_time(::google::protobuf::uint32 value) {
  
  match_begin_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchStartNotify.match_begin_time)
}

// uint32 estimate_match_cost_time = 3;
inline void MatchStartNotify::clear_estimate_match_cost_time() {
  estimate_match_cost_time_ = 0u;
}
inline ::google::protobuf::uint32 MatchStartNotify::estimate_match_cost_time() const {
  // @@protoc_insertion_point(field_get:proto.MatchStartNotify.estimate_match_cost_time)
  return estimate_match_cost_time_;
}
inline void MatchStartNotify::set_estimate_match_cost_time(::google::protobuf::uint32 value) {
  
  estimate_match_cost_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchStartNotify.estimate_match_cost_time)
}

// bool is_rematch = 4;
inline void MatchStartNotify::clear_is_rematch() {
  is_rematch_ = false;
}
inline bool MatchStartNotify::is_rematch() const {
  // @@protoc_insertion_point(field_get:proto.MatchStartNotify.is_rematch)
  return is_rematch_;
}
inline void MatchStartNotify::set_is_rematch(bool value) {
  
  is_rematch_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchStartNotify.is_rematch)
}

// uint32 dungeon_id = 11;
inline void MatchStartNotify::clear_dungeon_id() {
  dungeon_id_ = 0u;
}
inline ::google::protobuf::uint32 MatchStartNotify::dungeon_id() const {
  // @@protoc_insertion_point(field_get:proto.MatchStartNotify.dungeon_id)
  return dungeon_id_;
}
inline void MatchStartNotify::set_dungeon_id(::google::protobuf::uint32 value) {
  
  dungeon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchStartNotify.dungeon_id)
}

// uint32 mp_play_id = 12;
inline void MatchStartNotify::clear_mp_play_id() {
  mp_play_id_ = 0u;
}
inline ::google::protobuf::uint32 MatchStartNotify::mp_play_id() const {
  // @@protoc_insertion_point(field_get:proto.MatchStartNotify.mp_play_id)
  return mp_play_id_;
}
inline void MatchStartNotify::set_mp_play_id(::google::protobuf::uint32 value) {
  
  mp_play_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchStartNotify.mp_play_id)
}

// uint32 mechanicus_tag = 13;
inline void MatchStartNotify::clear_mechanicus_tag() {
  mechanicus_tag_ = 0u;
}
inline ::google::protobuf::uint32 MatchStartNotify::mechanicus_tag() const {
  // @@protoc_insertion_point(field_get:proto.MatchStartNotify.mechanicus_tag)
  return mechanicus_tag_;
}
inline void MatchStartNotify::set_mechanicus_tag(::google::protobuf::uint32 value) {
  
  mechanicus_tag_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchStartNotify.mechanicus_tag)
}

// uint32 match_id = 14;
inline void MatchStartNotify::clear_match_id() {
  match_id_ = 0u;
}
inline ::google::protobuf::uint32 MatchStartNotify::match_id() const {
  // @@protoc_insertion_point(field_get:proto.MatchStartNotify.match_id)
  return match_id_;
}
inline void MatchStartNotify::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchStartNotify.match_id)
}

// repeated uint32 match_param_list = 15;
inline int MatchStartNotify::match_param_list_size() const {
  return match_param_list_.size();
}
inline void MatchStartNotify::clear_match_param_list() {
  match_param_list_.Clear();
}
inline ::google::protobuf::uint32 MatchStartNotify::match_param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MatchStartNotify.match_param_list)
  return match_param_list_.Get(index);
}
inline void MatchStartNotify::set_match_param_list(int index, ::google::protobuf::uint32 value) {
  match_param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.MatchStartNotify.match_param_list)
}
inline void MatchStartNotify::add_match_param_list(::google::protobuf::uint32 value) {
  match_param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.MatchStartNotify.match_param_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MatchStartNotify::match_param_list() const {
  // @@protoc_insertion_point(field_list:proto.MatchStartNotify.match_param_list)
  return match_param_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MatchStartNotify::mutable_match_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MatchStartNotify.match_param_list)
  return &match_param_list_;
}

// -------------------------------------------------------------------

// RemoveMatchUnitReq

// .proto.MatchType match_type = 1;
inline void RemoveMatchUnitReq::clear_match_type() {
  match_type_ = 0;
}
inline ::proto::MatchType RemoveMatchUnitReq::match_type() const {
  // @@protoc_insertion_point(field_get:proto.RemoveMatchUnitReq.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
inline void RemoveMatchUnitReq::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveMatchUnitReq.match_type)
}

// uint32 unit_id = 2;
inline void RemoveMatchUnitReq::clear_unit_id() {
  unit_id_ = 0u;
}
inline ::google::protobuf::uint32 RemoveMatchUnitReq::unit_id() const {
  // @@protoc_insertion_point(field_get:proto.RemoveMatchUnitReq.unit_id)
  return unit_id_;
}
inline void RemoveMatchUnitReq::set_unit_id(::google::protobuf::uint32 value) {
  
  unit_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveMatchUnitReq.unit_id)
}

// .proto.MatchUnitRemoveOpType op_type = 3;
inline void RemoveMatchUnitReq::clear_op_type() {
  op_type_ = 0;
}
inline ::proto::MatchUnitRemoveOpType RemoveMatchUnitReq::op_type() const {
  // @@protoc_insertion_point(field_get:proto.RemoveMatchUnitReq.op_type)
  return static_cast< ::proto::MatchUnitRemoveOpType >(op_type_);
}
inline void RemoveMatchUnitReq::set_op_type(::proto::MatchUnitRemoveOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveMatchUnitReq.op_type)
}

// -------------------------------------------------------------------

// RemoveMatchUnitRsp

// int32 retcode = 1;
inline void RemoveMatchUnitRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 RemoveMatchUnitRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.RemoveMatchUnitRsp.retcode)
  return retcode_;
}
inline void RemoveMatchUnitRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveMatchUnitRsp.retcode)
}

// .proto.MatchType match_type = 2;
inline void RemoveMatchUnitRsp::clear_match_type() {
  match_type_ = 0;
}
inline ::proto::MatchType RemoveMatchUnitRsp::match_type() const {
  // @@protoc_insertion_point(field_get:proto.RemoveMatchUnitRsp.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
inline void RemoveMatchUnitRsp::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveMatchUnitRsp.match_type)
}

// uint32 unit_id = 3;
inline void RemoveMatchUnitRsp::clear_unit_id() {
  unit_id_ = 0u;
}
inline ::google::protobuf::uint32 RemoveMatchUnitRsp::unit_id() const {
  // @@protoc_insertion_point(field_get:proto.RemoveMatchUnitRsp.unit_id)
  return unit_id_;
}
inline void RemoveMatchUnitRsp::set_unit_id(::google::protobuf::uint32 value) {
  
  unit_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveMatchUnitRsp.unit_id)
}

// .proto.MatchUnitRemoveOpType op_type = 4;
inline void RemoveMatchUnitRsp::clear_op_type() {
  op_type_ = 0;
}
inline ::proto::MatchUnitRemoveOpType RemoveMatchUnitRsp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.RemoveMatchUnitRsp.op_type)
  return static_cast< ::proto::MatchUnitRemoveOpType >(op_type_);
}
inline void RemoveMatchUnitRsp::set_op_type(::proto::MatchUnitRemoveOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveMatchUnitRsp.op_type)
}

// -------------------------------------------------------------------

// MatchUnitRemovedNotify

// .proto.MatchType match_type = 1;
inline void MatchUnitRemovedNotify::clear_match_type() {
  match_type_ = 0;
}
inline ::proto::MatchType MatchUnitRemovedNotify::match_type() const {
  // @@protoc_insertion_point(field_get:proto.MatchUnitRemovedNotify.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
inline void MatchUnitRemovedNotify::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchUnitRemovedNotify.match_type)
}

// .proto.MatchReason reason = 2;
inline void MatchUnitRemovedNotify::clear_reason() {
  reason_ = 0;
}
inline ::proto::MatchReason MatchUnitRemovedNotify::reason() const {
  // @@protoc_insertion_point(field_get:proto.MatchUnitRemovedNotify.reason)
  return static_cast< ::proto::MatchReason >(reason_);
}
inline void MatchUnitRemovedNotify::set_reason(::proto::MatchReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchUnitRemovedNotify.reason)
}

// -------------------------------------------------------------------

// GuestUnitMatchSuccNotify

// uint32 host_unit_id = 1;
inline void GuestUnitMatchSuccNotify::clear_host_unit_id() {
  host_unit_id_ = 0u;
}
inline ::google::protobuf::uint32 GuestUnitMatchSuccNotify::host_unit_id() const {
  // @@protoc_insertion_point(field_get:proto.GuestUnitMatchSuccNotify.host_unit_id)
  return host_unit_id_;
}
inline void GuestUnitMatchSuccNotify::set_host_unit_id(::google::protobuf::uint32 value) {
  
  host_unit_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GuestUnitMatchSuccNotify.host_unit_id)
}

// uint32 confirm_end_time = 2;
inline void GuestUnitMatchSuccNotify::clear_confirm_end_time() {
  confirm_end_time_ = 0u;
}
inline ::google::protobuf::uint32 GuestUnitMatchSuccNotify::confirm_end_time() const {
  // @@protoc_insertion_point(field_get:proto.GuestUnitMatchSuccNotify.confirm_end_time)
  return confirm_end_time_;
}
inline void GuestUnitMatchSuccNotify::set_confirm_end_time(::google::protobuf::uint32 value) {
  
  confirm_end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GuestUnitMatchSuccNotify.confirm_end_time)
}

// uint32 match_type = 3;
inline void GuestUnitMatchSuccNotify::clear_match_type() {
  match_type_ = 0u;
}
inline ::google::protobuf::uint32 GuestUnitMatchSuccNotify::match_type() const {
  // @@protoc_insertion_point(field_get:proto.GuestUnitMatchSuccNotify.match_type)
  return match_type_;
}
inline void GuestUnitMatchSuccNotify::set_match_type(::google::protobuf::uint32 value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GuestUnitMatchSuccNotify.match_type)
}

// uint32 dungeon_id = 11;
inline void GuestUnitMatchSuccNotify::clear_dungeon_id() {
  dungeon_id_ = 0u;
}
inline ::google::protobuf::uint32 GuestUnitMatchSuccNotify::dungeon_id() const {
  // @@protoc_insertion_point(field_get:proto.GuestUnitMatchSuccNotify.dungeon_id)
  return dungeon_id_;
}
inline void GuestUnitMatchSuccNotify::set_dungeon_id(::google::protobuf::uint32 value) {
  
  dungeon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GuestUnitMatchSuccNotify.dungeon_id)
}

// uint32 mp_play_id = 12;
inline void GuestUnitMatchSuccNotify::clear_mp_play_id() {
  mp_play_id_ = 0u;
}
inline ::google::protobuf::uint32 GuestUnitMatchSuccNotify::mp_play_id() const {
  // @@protoc_insertion_point(field_get:proto.GuestUnitMatchSuccNotify.mp_play_id)
  return mp_play_id_;
}
inline void GuestUnitMatchSuccNotify::set_mp_play_id(::google::protobuf::uint32 value) {
  
  mp_play_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GuestUnitMatchSuccNotify.mp_play_id)
}

// uint32 mechanicus_tag = 13;
inline void GuestUnitMatchSuccNotify::clear_mechanicus_tag() {
  mechanicus_tag_ = 0u;
}
inline ::google::protobuf::uint32 GuestUnitMatchSuccNotify::mechanicus_tag() const {
  // @@protoc_insertion_point(field_get:proto.GuestUnitMatchSuccNotify.mechanicus_tag)
  return mechanicus_tag_;
}
inline void GuestUnitMatchSuccNotify::set_mechanicus_tag(::google::protobuf::uint32 value) {
  
  mechanicus_tag_ = value;
  // @@protoc_insertion_point(field_set:proto.GuestUnitMatchSuccNotify.mechanicus_tag)
}

// -------------------------------------------------------------------

// ConfirmGuestUnitReq

// .proto.MatchType match_type = 1;
inline void ConfirmGuestUnitReq::clear_match_type() {
  match_type_ = 0;
}
inline ::proto::MatchType ConfirmGuestUnitReq::match_type() const {
  // @@protoc_insertion_point(field_get:proto.ConfirmGuestUnitReq.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
inline void ConfirmGuestUnitReq::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ConfirmGuestUnitReq.match_type)
}

// uint32 unit_id = 2;
inline void ConfirmGuestUnitReq::clear_unit_id() {
  unit_id_ = 0u;
}
inline ::google::protobuf::uint32 ConfirmGuestUnitReq::unit_id() const {
  // @@protoc_insertion_point(field_get:proto.ConfirmGuestUnitReq.unit_id)
  return unit_id_;
}
inline void ConfirmGuestUnitReq::set_unit_id(::google::protobuf::uint32 value) {
  
  unit_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ConfirmGuestUnitReq.unit_id)
}

// bool is_agreed = 3;
inline void ConfirmGuestUnitReq::clear_is_agreed() {
  is_agreed_ = false;
}
inline bool ConfirmGuestUnitReq::is_agreed() const {
  // @@protoc_insertion_point(field_get:proto.ConfirmGuestUnitReq.is_agreed)
  return is_agreed_;
}
inline void ConfirmGuestUnitReq::set_is_agreed(bool value) {
  
  is_agreed_ = value;
  // @@protoc_insertion_point(field_set:proto.ConfirmGuestUnitReq.is_agreed)
}

// uint32 match_id = 4;
inline void ConfirmGuestUnitReq::clear_match_id() {
  match_id_ = 0u;
}
inline ::google::protobuf::uint32 ConfirmGuestUnitReq::match_id() const {
  // @@protoc_insertion_point(field_get:proto.ConfirmGuestUnitReq.match_id)
  return match_id_;
}
inline void ConfirmGuestUnitReq::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ConfirmGuestUnitReq.match_id)
}

// -------------------------------------------------------------------

// ConfirmGuestUnitRsp

// int32 retcode = 1;
inline void ConfirmGuestUnitRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ConfirmGuestUnitRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ConfirmGuestUnitRsp.retcode)
  return retcode_;
}
inline void ConfirmGuestUnitRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ConfirmGuestUnitRsp.retcode)
}

// .proto.MatchType match_type = 2;
inline void ConfirmGuestUnitRsp::clear_match_type() {
  match_type_ = 0;
}
inline ::proto::MatchType ConfirmGuestUnitRsp::match_type() const {
  // @@protoc_insertion_point(field_get:proto.ConfirmGuestUnitRsp.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
inline void ConfirmGuestUnitRsp::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ConfirmGuestUnitRsp.match_type)
}

// uint32 unit_id = 3;
inline void ConfirmGuestUnitRsp::clear_unit_id() {
  unit_id_ = 0u;
}
inline ::google::protobuf::uint32 ConfirmGuestUnitRsp::unit_id() const {
  // @@protoc_insertion_point(field_get:proto.ConfirmGuestUnitRsp.unit_id)
  return unit_id_;
}
inline void ConfirmGuestUnitRsp::set_unit_id(::google::protobuf::uint32 value) {
  
  unit_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ConfirmGuestUnitRsp.unit_id)
}

// bool is_agreed = 4;
inline void ConfirmGuestUnitRsp::clear_is_agreed() {
  is_agreed_ = false;
}
inline bool ConfirmGuestUnitRsp::is_agreed() const {
  // @@protoc_insertion_point(field_get:proto.ConfirmGuestUnitRsp.is_agreed)
  return is_agreed_;
}
inline void ConfirmGuestUnitRsp::set_is_agreed(bool value) {
  
  is_agreed_ = value;
  // @@protoc_insertion_point(field_set:proto.ConfirmGuestUnitRsp.is_agreed)
}

// uint32 match_id = 5;
inline void ConfirmGuestUnitRsp::clear_match_id() {
  match_id_ = 0u;
}
inline ::google::protobuf::uint32 ConfirmGuestUnitRsp::match_id() const {
  // @@protoc_insertion_point(field_get:proto.ConfirmGuestUnitRsp.match_id)
  return match_id_;
}
inline void ConfirmGuestUnitRsp::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ConfirmGuestUnitRsp.match_id)
}

// -------------------------------------------------------------------

// MatchPlayerJoinNotify

// .proto.MatchType match_type = 1;
inline void MatchPlayerJoinNotify::clear_match_type() {
  match_type_ = 0;
}
inline ::proto::MatchType MatchPlayerJoinNotify::match_type() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayerJoinNotify.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
inline void MatchPlayerJoinNotify::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayerJoinNotify.match_type)
}

// uint32 unit_id = 2;
inline void MatchPlayerJoinNotify::clear_unit_id() {
  unit_id_ = 0u;
}
inline ::google::protobuf::uint32 MatchPlayerJoinNotify::unit_id() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayerJoinNotify.unit_id)
  return unit_id_;
}
inline void MatchPlayerJoinNotify::set_unit_id(::google::protobuf::uint32 value) {
  
  unit_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayerJoinNotify.unit_id)
}

// .proto.MatchPlayer match_player = 3;
inline bool MatchPlayerJoinNotify::has_match_player() const {
  return this != internal_default_instance() && match_player_ != NULL;
}
inline void MatchPlayerJoinNotify::clear_match_player() {
  if (GetArenaNoVirtual() == NULL && match_player_ != NULL) delete match_player_;
  match_player_ = NULL;
}
inline const ::proto::MatchPlayer& MatchPlayerJoinNotify::match_player() const {
  const ::proto::MatchPlayer* p = match_player_;
  // @@protoc_insertion_point(field_get:proto.MatchPlayerJoinNotify.match_player)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MatchPlayer*>(
      &::proto::_MatchPlayer_default_instance_);
}
inline ::proto::MatchPlayer* MatchPlayerJoinNotify::mutable_match_player() {
  
  if (match_player_ == NULL) {
    match_player_ = new ::proto::MatchPlayer;
  }
  // @@protoc_insertion_point(field_mutable:proto.MatchPlayerJoinNotify.match_player)
  return match_player_;
}
inline ::proto::MatchPlayer* MatchPlayerJoinNotify::release_match_player() {
  // @@protoc_insertion_point(field_release:proto.MatchPlayerJoinNotify.match_player)
  
  ::proto::MatchPlayer* temp = match_player_;
  match_player_ = NULL;
  return temp;
}
inline void MatchPlayerJoinNotify::set_allocated_match_player(::proto::MatchPlayer* match_player) {
  delete match_player_;
  match_player_ = match_player;
  if (match_player) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MatchPlayerJoinNotify.match_player)
}

// -------------------------------------------------------------------

// MatchPlayerQuitNotify

// .proto.MatchType match_type = 1;
inline void MatchPlayerQuitNotify::clear_match_type() {
  match_type_ = 0;
}
inline ::proto::MatchType MatchPlayerQuitNotify::match_type() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayerQuitNotify.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
inline void MatchPlayerQuitNotify::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayerQuitNotify.match_type)
}

// uint32 unit_id = 2;
inline void MatchPlayerQuitNotify::clear_unit_id() {
  unit_id_ = 0u;
}
inline ::google::protobuf::uint32 MatchPlayerQuitNotify::unit_id() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayerQuitNotify.unit_id)
  return unit_id_;
}
inline void MatchPlayerQuitNotify::set_unit_id(::google::protobuf::uint32 value) {
  
  unit_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayerQuitNotify.unit_id)
}

// uint32 player_uid = 3;
inline void MatchPlayerQuitNotify::clear_player_uid() {
  player_uid_ = 0u;
}
inline ::google::protobuf::uint32 MatchPlayerQuitNotify::player_uid() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayerQuitNotify.player_uid)
  return player_uid_;
}
inline void MatchPlayerQuitNotify::set_player_uid(::google::protobuf::uint32 value) {
  
  player_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayerQuitNotify.player_uid)
}

// -------------------------------------------------------------------

// GuestUnitAgreedResultNotify

// .proto.MatchType match_type = 1;
inline void GuestUnitAgreedResultNotify::clear_match_type() {
  match_type_ = 0;
}
inline ::proto::MatchType GuestUnitAgreedResultNotify::match_type() const {
  // @@protoc_insertion_point(field_get:proto.GuestUnitAgreedResultNotify.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
inline void GuestUnitAgreedResultNotify::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GuestUnitAgreedResultNotify.match_type)
}

// uint32 host_unit_id = 2;
inline void GuestUnitAgreedResultNotify::clear_host_unit_id() {
  host_unit_id_ = 0u;
}
inline ::google::protobuf::uint32 GuestUnitAgreedResultNotify::host_unit_id() const {
  // @@protoc_insertion_point(field_get:proto.GuestUnitAgreedResultNotify.host_unit_id)
  return host_unit_id_;
}
inline void GuestUnitAgreedResultNotify::set_host_unit_id(::google::protobuf::uint32 value) {
  
  host_unit_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GuestUnitAgreedResultNotify.host_unit_id)
}

// .proto.GuestUnitAgreedResultNotify.Reason reason = 3;
inline void GuestUnitAgreedResultNotify::clear_reason() {
  reason_ = 0;
}
inline ::proto::GuestUnitAgreedResultNotify_Reason GuestUnitAgreedResultNotify::reason() const {
  // @@protoc_insertion_point(field_get:proto.GuestUnitAgreedResultNotify.reason)
  return static_cast< ::proto::GuestUnitAgreedResultNotify_Reason >(reason_);
}
inline void GuestUnitAgreedResultNotify::set_reason(::proto::GuestUnitAgreedResultNotify_Reason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.GuestUnitAgreedResultNotify.reason)
}

// -------------------------------------------------------------------

// HostUnitMatchSuccNotify

// uint32 match_type = 1;
inline void HostUnitMatchSuccNotify::clear_match_type() {
  match_type_ = 0u;
}
inline ::google::protobuf::uint32 HostUnitMatchSuccNotify::match_type() const {
  // @@protoc_insertion_point(field_get:proto.HostUnitMatchSuccNotify.match_type)
  return match_type_;
}
inline void HostUnitMatchSuccNotify::set_match_type(::google::protobuf::uint32 value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.HostUnitMatchSuccNotify.match_type)
}

// uint32 dungeon_id = 11;
inline void HostUnitMatchSuccNotify::clear_dungeon_id() {
  dungeon_id_ = 0u;
}
inline ::google::protobuf::uint32 HostUnitMatchSuccNotify::dungeon_id() const {
  // @@protoc_insertion_point(field_get:proto.HostUnitMatchSuccNotify.dungeon_id)
  return dungeon_id_;
}
inline void HostUnitMatchSuccNotify::set_dungeon_id(::google::protobuf::uint32 value) {
  
  dungeon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HostUnitMatchSuccNotify.dungeon_id)
}

// uint32 mp_play_id = 12;
inline void HostUnitMatchSuccNotify::clear_mp_play_id() {
  mp_play_id_ = 0u;
}
inline ::google::protobuf::uint32 HostUnitMatchSuccNotify::mp_play_id() const {
  // @@protoc_insertion_point(field_get:proto.HostUnitMatchSuccNotify.mp_play_id)
  return mp_play_id_;
}
inline void HostUnitMatchSuccNotify::set_mp_play_id(::google::protobuf::uint32 value) {
  
  mp_play_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HostUnitMatchSuccNotify.mp_play_id)
}

// uint32 mechanicus_difficult_level = 13;
inline void HostUnitMatchSuccNotify::clear_mechanicus_difficult_level() {
  mechanicus_difficult_level_ = 0u;
}
inline ::google::protobuf::uint32 HostUnitMatchSuccNotify::mechanicus_difficult_level() const {
  // @@protoc_insertion_point(field_get:proto.HostUnitMatchSuccNotify.mechanicus_difficult_level)
  return mechanicus_difficult_level_;
}
inline void HostUnitMatchSuccNotify::set_mechanicus_difficult_level(::google::protobuf::uint32 value) {
  
  mechanicus_difficult_level_ = value;
  // @@protoc_insertion_point(field_set:proto.HostUnitMatchSuccNotify.mechanicus_difficult_level)
}

// -------------------------------------------------------------------

// SyncMatchUnitReq

// .proto.MatchType match_type = 1;
inline void SyncMatchUnitReq::clear_match_type() {
  match_type_ = 0;
}
inline ::proto::MatchType SyncMatchUnitReq::match_type() const {
  // @@protoc_insertion_point(field_get:proto.SyncMatchUnitReq.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
inline void SyncMatchUnitReq::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SyncMatchUnitReq.match_type)
}

// .proto.MatchUnit match_unit = 2;
inline bool SyncMatchUnitReq::has_match_unit() const {
  return this != internal_default_instance() && match_unit_ != NULL;
}
inline void SyncMatchUnitReq::clear_match_unit() {
  if (GetArenaNoVirtual() == NULL && match_unit_ != NULL) delete match_unit_;
  match_unit_ = NULL;
}
inline const ::proto::MatchUnit& SyncMatchUnitReq::match_unit() const {
  const ::proto::MatchUnit* p = match_unit_;
  // @@protoc_insertion_point(field_get:proto.SyncMatchUnitReq.match_unit)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MatchUnit*>(
      &::proto::_MatchUnit_default_instance_);
}
inline ::proto::MatchUnit* SyncMatchUnitReq::mutable_match_unit() {
  
  if (match_unit_ == NULL) {
    match_unit_ = new ::proto::MatchUnit;
  }
  // @@protoc_insertion_point(field_mutable:proto.SyncMatchUnitReq.match_unit)
  return match_unit_;
}
inline ::proto::MatchUnit* SyncMatchUnitReq::release_match_unit() {
  // @@protoc_insertion_point(field_release:proto.SyncMatchUnitReq.match_unit)
  
  ::proto::MatchUnit* temp = match_unit_;
  match_unit_ = NULL;
  return temp;
}
inline void SyncMatchUnitReq::set_allocated_match_unit(::proto::MatchUnit* match_unit) {
  delete match_unit_;
  match_unit_ = match_unit;
  if (match_unit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SyncMatchUnitReq.match_unit)
}

// -------------------------------------------------------------------

// SyncMatchUnitRsp

// int32 retcode = 1;
inline void SyncMatchUnitRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SyncMatchUnitRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SyncMatchUnitRsp.retcode)
  return retcode_;
}
inline void SyncMatchUnitRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SyncMatchUnitRsp.retcode)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// MatchserverWorkloadInfoNotify

// uint32 match_unit_num = 1;
inline void MatchserverWorkloadInfoNotify::clear_match_unit_num() {
  match_unit_num_ = 0u;
}
inline ::google::protobuf::uint32 MatchserverWorkloadInfoNotify::match_unit_num() const {
  // @@protoc_insertion_point(field_get:proto.MatchserverWorkloadInfoNotify.match_unit_num)
  return match_unit_num_;
}
inline void MatchserverWorkloadInfoNotify::set_match_unit_num(::google::protobuf::uint32 value) {
  
  match_unit_num_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchserverWorkloadInfoNotify.match_unit_num)
}

// map<uint32, uint32> match_unit_map = 2;
inline int MatchserverWorkloadInfoNotify::match_unit_map_size() const {
  return match_unit_map_.size();
}
inline void MatchserverWorkloadInfoNotify::clear_match_unit_map() {
  match_unit_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
MatchserverWorkloadInfoNotify::match_unit_map() const {
  // @@protoc_insertion_point(field_map:proto.MatchserverWorkloadInfoNotify.match_unit_map)
  return match_unit_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
MatchserverWorkloadInfoNotify::mutable_match_unit_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.MatchserverWorkloadInfoNotify.match_unit_map)
  return match_unit_map_.MutableMap();
}

// -------------------------------------------------------------------

// MatchPlayerUpdateNotify

// .proto.MatchType match_type = 1;
inline void MatchPlayerUpdateNotify::clear_match_type() {
  match_type_ = 0;
}
inline ::proto::MatchType MatchPlayerUpdateNotify::match_type() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayerUpdateNotify.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
inline void MatchPlayerUpdateNotify::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayerUpdateNotify.match_type)
}

// uint32 unit_id = 2;
inline void MatchPlayerUpdateNotify::clear_unit_id() {
  unit_id_ = 0u;
}
inline ::google::protobuf::uint32 MatchPlayerUpdateNotify::unit_id() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayerUpdateNotify.unit_id)
  return unit_id_;
}
inline void MatchPlayerUpdateNotify::set_unit_id(::google::protobuf::uint32 value) {
  
  unit_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayerUpdateNotify.unit_id)
}

// .proto.MatchPlayer match_player = 3;
inline bool MatchPlayerUpdateNotify::has_match_player() const {
  return this != internal_default_instance() && match_player_ != NULL;
}
inline void MatchPlayerUpdateNotify::clear_match_player() {
  if (GetArenaNoVirtual() == NULL && match_player_ != NULL) delete match_player_;
  match_player_ = NULL;
}
inline const ::proto::MatchPlayer& MatchPlayerUpdateNotify::match_player() const {
  const ::proto::MatchPlayer* p = match_player_;
  // @@protoc_insertion_point(field_get:proto.MatchPlayerUpdateNotify.match_player)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MatchPlayer*>(
      &::proto::_MatchPlayer_default_instance_);
}
inline ::proto::MatchPlayer* MatchPlayerUpdateNotify::mutable_match_player() {
  
  if (match_player_ == NULL) {
    match_player_ = new ::proto::MatchPlayer;
  }
  // @@protoc_insertion_point(field_mutable:proto.MatchPlayerUpdateNotify.match_player)
  return match_player_;
}
inline ::proto::MatchPlayer* MatchPlayerUpdateNotify::release_match_player() {
  // @@protoc_insertion_point(field_release:proto.MatchPlayerUpdateNotify.match_player)
  
  ::proto::MatchPlayer* temp = match_player_;
  match_player_ = NULL;
  return temp;
}
inline void MatchPlayerUpdateNotify::set_allocated_match_player(::proto::MatchPlayer* match_player) {
  delete match_player_;
  match_player_ = match_player;
  if (match_player) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MatchPlayerUpdateNotify.match_player)
}

// -------------------------------------------------------------------

// MatchIdentityNotify

// .proto.MatchType match_type = 1;
inline void MatchIdentityNotify::clear_match_type() {
  match_type_ = 0;
}
inline ::proto::MatchType MatchIdentityNotify::match_type() const {
  // @@protoc_insertion_point(field_get:proto.MatchIdentityNotify.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
inline void MatchIdentityNotify::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchIdentityNotify.match_type)
}

// .proto.MatchIdentity match_identity = 2;
inline void MatchIdentityNotify::clear_match_identity() {
  match_identity_ = 0;
}
inline ::proto::MatchIdentity MatchIdentityNotify::match_identity() const {
  // @@protoc_insertion_point(field_get:proto.MatchIdentityNotify.match_identity)
  return static_cast< ::proto::MatchIdentity >(match_identity_);
}
inline void MatchIdentityNotify::set_match_identity(::proto::MatchIdentity value) {
  
  match_identity_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchIdentityNotify.match_identity)
}

// -------------------------------------------------------------------

// GeneralMatchFinishNotify

// .proto.MatchType match_type = 1;
inline void GeneralMatchFinishNotify::clear_match_type() {
  match_type_ = 0;
}
inline ::proto::MatchType GeneralMatchFinishNotify::match_type() const {
  // @@protoc_insertion_point(field_get:proto.GeneralMatchFinishNotify.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
inline void GeneralMatchFinishNotify::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GeneralMatchFinishNotify.match_type)
}

// uint32 match_id = 2;
inline void GeneralMatchFinishNotify::clear_match_id() {
  match_id_ = 0u;
}
inline ::google::protobuf::uint32 GeneralMatchFinishNotify::match_id() const {
  // @@protoc_insertion_point(field_get:proto.GeneralMatchFinishNotify.match_id)
  return match_id_;
}
inline void GeneralMatchFinishNotify::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GeneralMatchFinishNotify.match_id)
}

// uint32 match_param = 3;
inline void GeneralMatchFinishNotify::clear_match_param() {
  match_param_ = 0u;
}
inline ::google::protobuf::uint32 GeneralMatchFinishNotify::match_param() const {
  // @@protoc_insertion_point(field_get:proto.GeneralMatchFinishNotify.match_param)
  return match_param_;
}
inline void GeneralMatchFinishNotify::set_match_param(::google::protobuf::uint32 value) {
  
  match_param_ = value;
  // @@protoc_insertion_point(field_set:proto.GeneralMatchFinishNotify.match_param)
}

// repeated .proto.MatchPlayer match_player_list = 4;
inline int GeneralMatchFinishNotify::match_player_list_size() const {
  return match_player_list_.size();
}
inline void GeneralMatchFinishNotify::clear_match_player_list() {
  match_player_list_.Clear();
}
inline const ::proto::MatchPlayer& GeneralMatchFinishNotify::match_player_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GeneralMatchFinishNotify.match_player_list)
  return match_player_list_.Get(index);
}
inline ::proto::MatchPlayer* GeneralMatchFinishNotify::mutable_match_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GeneralMatchFinishNotify.match_player_list)
  return match_player_list_.Mutable(index);
}
inline ::proto::MatchPlayer* GeneralMatchFinishNotify::add_match_player_list() {
  // @@protoc_insertion_point(field_add:proto.GeneralMatchFinishNotify.match_player_list)
  return match_player_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::MatchPlayer >*
GeneralMatchFinishNotify::mutable_match_player_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GeneralMatchFinishNotify.match_player_list)
  return &match_player_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::MatchPlayer >&
GeneralMatchFinishNotify::match_player_list() const {
  // @@protoc_insertion_point(field_list:proto.GeneralMatchFinishNotify.match_player_list)
  return match_player_list_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::GuestUnitAgreedResultNotify_Reason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GuestUnitAgreedResultNotify_Reason>() {
  return ::proto::GuestUnitAgreedResultNotify_Reason_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_server_5fonly_2fcmd_5fmatch_2eserver_2eproto__INCLUDED
