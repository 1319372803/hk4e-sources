// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_only/bin.block.proto

#ifndef PROTOBUF_server_5fonly_2fbin_2eblock_2eproto__INCLUDED
#define PROTOBUF_server_5fonly_2fbin_2eblock_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "server_only/bin_common.server.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class BlockBin;
class BlockBinDefaultTypeInternal;
extern BlockBinDefaultTypeInternal _BlockBin_default_instance_;
class BlockBin_GroupMapEntry;
class BlockBin_GroupMapEntryDefaultTypeInternal;
extern BlockBin_GroupMapEntryDefaultTypeInternal _BlockBin_GroupMapEntry_default_instance_;
class BlockBin_GroupProductMapEntry;
class BlockBin_GroupProductMapEntryDefaultTypeInternal;
extern BlockBin_GroupProductMapEntryDefaultTypeInternal _BlockBin_GroupProductMapEntry_default_instance_;
class BlossomChestBin;
class BlossomChestBinDefaultTypeInternal;
extern BlossomChestBinDefaultTypeInternal _BlossomChestBin_default_instance_;
class BossChestBin;
class BossChestBinDefaultTypeInternal;
extern BossChestBinDefaultTypeInternal _BossChestBin_default_instance_;
class BossDieInfoBin;
class BossDieInfoBinDefaultTypeInternal;
extern BossDieInfoBinDefaultTypeInternal _BossDieInfoBin_default_instance_;
class ChallengeRecordBin;
class ChallengeRecordBinDefaultTypeInternal;
extern ChallengeRecordBinDefaultTypeInternal _ChallengeRecordBin_default_instance_;
class CustomGadgetNodeInfoBin;
class CustomGadgetNodeInfoBinDefaultTypeInternal;
extern CustomGadgetNodeInfoBinDefaultTypeInternal _CustomGadgetNodeInfoBin_default_instance_;
class CustomGadgetTreeInfoBin;
class CustomGadgetTreeInfoBinDefaultTypeInternal;
extern CustomGadgetTreeInfoBinDefaultTypeInternal _CustomGadgetTreeInfoBin_default_instance_;
class FishStockBin;
class FishStockBinDefaultTypeInternal;
extern FishStockBinDefaultTypeInternal _FishStockBin_default_instance_;
class GadgetFishPoolBin;
class GadgetFishPoolBinDefaultTypeInternal;
extern GadgetFishPoolBinDefaultTypeInternal _GadgetFishPoolBin_default_instance_;
class GadgetFishPoolBin_CachedFishMapEntry;
class GadgetFishPoolBin_CachedFishMapEntryDefaultTypeInternal;
extern GadgetFishPoolBin_CachedFishMapEntryDefaultTypeInternal _GadgetFishPoolBin_CachedFishMapEntry_default_instance_;
class GadgetGeneralRewardBin;
class GadgetGeneralRewardBinDefaultTypeInternal;
extern GadgetGeneralRewardBinDefaultTypeInternal _GadgetGeneralRewardBin_default_instance_;
class GadgetGeneralRewardBin_QualifyInfoMapEntry;
class GadgetGeneralRewardBin_QualifyInfoMapEntryDefaultTypeInternal;
extern GadgetGeneralRewardBin_QualifyInfoMapEntryDefaultTypeInternal _GadgetGeneralRewardBin_QualifyInfoMapEntry_default_instance_;
class GadgetPlatformBin;
class GadgetPlatformBinDefaultTypeInternal;
extern GadgetPlatformBinDefaultTypeInternal _GadgetPlatformBin_default_instance_;
class GadgetWorktopBin;
class GadgetWorktopBinDefaultTypeInternal;
extern GadgetWorktopBinDefaultTypeInternal _GadgetWorktopBin_default_instance_;
class GeneralRewardBin;
class GeneralRewardBinDefaultTypeInternal;
extern GeneralRewardBinDefaultTypeInternal _GeneralRewardBin_default_instance_;
class GeneralRewardBin_DropMapEntry;
class GeneralRewardBin_DropMapEntryDefaultTypeInternal;
extern GeneralRewardBin_DropMapEntryDefaultTypeInternal _GeneralRewardBin_DropMapEntry_default_instance_;
class GroupBin;
class GroupBinDefaultTypeInternal;
extern GroupBinDefaultTypeInternal _GroupBin_default_instance_;
class GroupBin_BossDieInfoMapEntry;
class GroupBin_BossDieInfoMapEntryDefaultTypeInternal;
extern GroupBin_BossDieInfoMapEntryDefaultTypeInternal _GroupBin_BossDieInfoMapEntry_default_instance_;
class GroupBin_GadgetMapEntry;
class GroupBin_GadgetMapEntryDefaultTypeInternal;
extern GroupBin_GadgetMapEntryDefaultTypeInternal _GroupBin_GadgetMapEntry_default_instance_;
class GroupBin_MonsterMapEntry;
class GroupBin_MonsterMapEntryDefaultTypeInternal;
extern GroupBin_MonsterMapEntryDefaultTypeInternal _GroupBin_MonsterMapEntry_default_instance_;
class GroupBin_TriggerMapEntry;
class GroupBin_TriggerMapEntryDefaultTypeInternal;
extern GroupBin_TriggerMapEntryDefaultTypeInternal _GroupBin_TriggerMapEntry_default_instance_;
class GroupBin_VariableMapEntry;
class GroupBin_VariableMapEntryDefaultTypeInternal;
extern GroupBin_VariableMapEntryDefaultTypeInternal _GroupBin_VariableMapEntry_default_instance_;
class GroupGadgetBin;
class GroupGadgetBinDefaultTypeInternal;
extern GroupGadgetBinDefaultTypeInternal _GroupGadgetBin_default_instance_;
class GroupGatherBin;
class GroupGatherBinDefaultTypeInternal;
extern GroupGatherBinDefaultTypeInternal _GroupGatherBin_default_instance_;
class GroupMonsterBin;
class GroupMonsterBinDefaultTypeInternal;
extern GroupMonsterBinDefaultTypeInternal _GroupMonsterBin_default_instance_;
class GroupRefreshTimeBin;
class GroupRefreshTimeBinDefaultTypeInternal;
extern GroupRefreshTimeBinDefaultTypeInternal _GroupRefreshTimeBin_default_instance_;
class GroupTriggerBin;
class GroupTriggerBinDefaultTypeInternal;
extern GroupTriggerBinDefaultTypeInternal _GroupTriggerBin_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_server_5fonly_2fbin_2eblock_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_server_5fonly_2fbin_2eblock_2eproto

// ===================================================================

class BlossomChestBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BlossomChestBin) */ {
 public:
  BlossomChestBin();
  virtual ~BlossomChestBin();

  BlossomChestBin(const BlossomChestBin& from);

  inline BlossomChestBin& operator=(const BlossomChestBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BlossomChestBin(BlossomChestBin&& from) noexcept
    : BlossomChestBin() {
    *this = ::std::move(from);
  }

  inline BlossomChestBin& operator=(BlossomChestBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BlossomChestBin& default_instance();

  static inline const BlossomChestBin* internal_default_instance() {
    return reinterpret_cast<const BlossomChestBin*>(
               &_BlossomChestBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(BlossomChestBin* other);
  friend void swap(BlossomChestBin& a, BlossomChestBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BlossomChestBin* New() const PROTOBUF_FINAL { return New(NULL); }

  BlossomChestBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlossomChestBin& from);
  void MergeFrom(const BlossomChestBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlossomChestBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 qualify_uid_list = 4;
  int qualify_uid_list_size() const;
  void clear_qualify_uid_list();
  static const int kQualifyUidListFieldNumber = 4;
  ::google::protobuf::uint32 qualify_uid_list(int index) const;
  void set_qualify_uid_list(int index, ::google::protobuf::uint32 value);
  void add_qualify_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      qualify_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_qualify_uid_list();

  // repeated uint32 remain_uid_list = 5;
  int remain_uid_list_size() const;
  void clear_remain_uid_list();
  static const int kRemainUidListFieldNumber = 5;
  ::google::protobuf::uint32 remain_uid_list(int index) const;
  void set_remain_uid_list(int index, ::google::protobuf::uint32 value);
  void add_remain_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      remain_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_remain_uid_list();

  // uint32 blossom_chest_id = 1;
  void clear_blossom_chest_id();
  static const int kBlossomChestIdFieldNumber = 1;
  ::google::protobuf::uint32 blossom_chest_id() const;
  void set_blossom_chest_id(::google::protobuf::uint32 value);

  // uint32 drop_id = 2;
  void clear_drop_id();
  static const int kDropIdFieldNumber = 2;
  ::google::protobuf::uint32 drop_id() const;
  void set_drop_id(::google::protobuf::uint32 value);

  // fixed32 dead_time = 3;
  void clear_dead_time();
  static const int kDeadTimeFieldNumber = 3;
  ::google::protobuf::uint32 dead_time() const;
  void set_dead_time(::google::protobuf::uint32 value);

  // uint32 item_limit_type = 6;
  void clear_item_limit_type();
  static const int kItemLimitTypeFieldNumber = 6;
  ::google::protobuf::uint32 item_limit_type() const;
  void set_item_limit_type(::google::protobuf::uint32 value);

  // uint32 refresh_id = 7;
  void clear_refresh_id();
  static const int kRefreshIdFieldNumber = 7;
  ::google::protobuf::uint32 refresh_id() const;
  void set_refresh_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BlossomChestBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > qualify_uid_list_;
  mutable int _qualify_uid_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > remain_uid_list_;
  mutable int _remain_uid_list_cached_byte_size_;
  ::google::protobuf::uint32 blossom_chest_id_;
  ::google::protobuf::uint32 drop_id_;
  ::google::protobuf::uint32 dead_time_;
  ::google::protobuf::uint32 item_limit_type_;
  ::google::protobuf::uint32 refresh_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2eblock_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GadgetPlatformBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GadgetPlatformBin) */ {
 public:
  GadgetPlatformBin();
  virtual ~GadgetPlatformBin();

  GadgetPlatformBin(const GadgetPlatformBin& from);

  inline GadgetPlatformBin& operator=(const GadgetPlatformBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GadgetPlatformBin(GadgetPlatformBin&& from) noexcept
    : GadgetPlatformBin() {
    *this = ::std::move(from);
  }

  inline GadgetPlatformBin& operator=(GadgetPlatformBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GadgetPlatformBin& default_instance();

  static inline const GadgetPlatformBin* internal_default_instance() {
    return reinterpret_cast<const GadgetPlatformBin*>(
               &_GadgetPlatformBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(GadgetPlatformBin* other);
  friend void swap(GadgetPlatformBin& a, GadgetPlatformBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GadgetPlatformBin* New() const PROTOBUF_FINAL { return New(NULL); }

  GadgetPlatformBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GadgetPlatformBin& from);
  void MergeFrom(const GadgetPlatformBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GadgetPlatformBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 route_id = 1;
  void clear_route_id();
  static const int kRouteIdFieldNumber = 1;
  ::google::protobuf::uint32 route_id() const;
  void set_route_id(::google::protobuf::uint32 value);

  // int32 point_index = 2;
  void clear_point_index();
  static const int kPointIndexFieldNumber = 2;
  ::google::protobuf::int32 point_index() const;
  void set_point_index(::google::protobuf::int32 value);

  // bool is_started = 3;
  void clear_is_started();
  static const int kIsStartedFieldNumber = 3;
  bool is_started() const;
  void set_is_started(bool value);

  // uint32 point_id = 4;
  void clear_point_id();
  static const int kPointIdFieldNumber = 4;
  ::google::protobuf::uint32 point_id() const;
  void set_point_id(::google::protobuf::uint32 value);

  // uint32 moving_platform_type = 5;
  void clear_moving_platform_type();
  static const int kMovingPlatformTypeFieldNumber = 5;
  ::google::protobuf::uint32 moving_platform_type() const;
  void set_moving_platform_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GadgetPlatformBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 route_id_;
  ::google::protobuf::int32 point_index_;
  bool is_started_;
  ::google::protobuf::uint32 point_id_;
  ::google::protobuf::uint32 moving_platform_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2eblock_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BossChestBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BossChestBin) */ {
 public:
  BossChestBin();
  virtual ~BossChestBin();

  BossChestBin(const BossChestBin& from);

  inline BossChestBin& operator=(const BossChestBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BossChestBin(BossChestBin&& from) noexcept
    : BossChestBin() {
    *this = ::std::move(from);
  }

  inline BossChestBin& operator=(BossChestBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BossChestBin& default_instance();

  static inline const BossChestBin* internal_default_instance() {
    return reinterpret_cast<const BossChestBin*>(
               &_BossChestBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(BossChestBin* other);
  friend void swap(BossChestBin& a, BossChestBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BossChestBin* New() const PROTOBUF_FINAL { return New(NULL); }

  BossChestBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BossChestBin& from);
  void MergeFrom(const BossChestBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BossChestBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 remain_uid_list = 1;
  int remain_uid_list_size() const;
  void clear_remain_uid_list();
  static const int kRemainUidListFieldNumber = 1;
  ::google::protobuf::uint32 remain_uid_list(int index) const;
  void set_remain_uid_list(int index, ::google::protobuf::uint32 value);
  void add_remain_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      remain_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_remain_uid_list();

  // repeated uint32 qualify_uid_list = 4;
  int qualify_uid_list_size() const;
  void clear_qualify_uid_list();
  static const int kQualifyUidListFieldNumber = 4;
  ::google::protobuf::uint32 qualify_uid_list(int index) const;
  void set_qualify_uid_list(int index, ::google::protobuf::uint32 value);
  void add_qualify_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      qualify_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_qualify_uid_list();

  // fixed32 dead_time = 2;
  void clear_dead_time();
  static const int kDeadTimeFieldNumber = 2;
  ::google::protobuf::uint32 dead_time() const;
  void set_dead_time(::google::protobuf::uint32 value);

  // uint32 dead_level = 3;
  void clear_dead_level();
  static const int kDeadLevelFieldNumber = 3;
  ::google::protobuf::uint32 dead_level() const;
  void set_dead_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BossChestBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > remain_uid_list_;
  mutable int _remain_uid_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > qualify_uid_list_;
  mutable int _qualify_uid_list_cached_byte_size_;
  ::google::protobuf::uint32 dead_time_;
  ::google::protobuf::uint32 dead_level_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2eblock_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChallengeRecordBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChallengeRecordBin) */ {
 public:
  ChallengeRecordBin();
  virtual ~ChallengeRecordBin();

  ChallengeRecordBin(const ChallengeRecordBin& from);

  inline ChallengeRecordBin& operator=(const ChallengeRecordBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChallengeRecordBin(ChallengeRecordBin&& from) noexcept
    : ChallengeRecordBin() {
    *this = ::std::move(from);
  }

  inline ChallengeRecordBin& operator=(ChallengeRecordBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChallengeRecordBin& default_instance();

  static inline const ChallengeRecordBin* internal_default_instance() {
    return reinterpret_cast<const ChallengeRecordBin*>(
               &_ChallengeRecordBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ChallengeRecordBin* other);
  friend void swap(ChallengeRecordBin& a, ChallengeRecordBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChallengeRecordBin* New() const PROTOBUF_FINAL { return New(NULL); }

  ChallengeRecordBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChallengeRecordBin& from);
  void MergeFrom(const ChallengeRecordBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChallengeRecordBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 challenge_index = 1;
  void clear_challenge_index();
  static const int kChallengeIndexFieldNumber = 1;
  ::google::protobuf::uint32 challenge_index() const;
  void set_challenge_index(::google::protobuf::uint32 value);

  // uint32 challenge_id = 2;
  void clear_challenge_id();
  static const int kChallengeIdFieldNumber = 2;
  ::google::protobuf::uint32 challenge_id() const;
  void set_challenge_id(::google::protobuf::uint32 value);

  // uint32 challenge_record_type = 3;
  void clear_challenge_record_type();
  static const int kChallengeRecordTypeFieldNumber = 3;
  ::google::protobuf::uint32 challenge_record_type() const;
  void set_challenge_record_type(::google::protobuf::uint32 value);

  // uint32 best_value = 4;
  void clear_best_value();
  static const int kBestValueFieldNumber = 4;
  ::google::protobuf::uint32 best_value() const;
  void set_best_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ChallengeRecordBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 challenge_index_;
  ::google::protobuf::uint32 challenge_id_;
  ::google::protobuf::uint32 challenge_record_type_;
  ::google::protobuf::uint32 best_value_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2eblock_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BossDieInfoBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BossDieInfoBin) */ {
 public:
  BossDieInfoBin();
  virtual ~BossDieInfoBin();

  BossDieInfoBin(const BossDieInfoBin& from);

  inline BossDieInfoBin& operator=(const BossDieInfoBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BossDieInfoBin(BossDieInfoBin&& from) noexcept
    : BossDieInfoBin() {
    *this = ::std::move(from);
  }

  inline BossDieInfoBin& operator=(BossDieInfoBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BossDieInfoBin& default_instance();

  static inline const BossDieInfoBin* internal_default_instance() {
    return reinterpret_cast<const BossDieInfoBin*>(
               &_BossDieInfoBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(BossDieInfoBin* other);
  friend void swap(BossDieInfoBin& a, BossDieInfoBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BossDieInfoBin* New() const PROTOBUF_FINAL { return New(NULL); }

  BossDieInfoBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BossDieInfoBin& from);
  void MergeFrom(const BossDieInfoBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BossDieInfoBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 surround_uid_list = 1;
  int surround_uid_list_size() const;
  void clear_surround_uid_list();
  static const int kSurroundUidListFieldNumber = 1;
  ::google::protobuf::uint32 surround_uid_list(int index) const;
  void set_surround_uid_list(int index, ::google::protobuf::uint32 value);
  void add_surround_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      surround_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_surround_uid_list();

  // fixed32 dead_time = 2;
  void clear_dead_time();
  static const int kDeadTimeFieldNumber = 2;
  ::google::protobuf::uint32 dead_time() const;
  void set_dead_time(::google::protobuf::uint32 value);

  // uint32 dead_level = 3;
  void clear_dead_level();
  static const int kDeadLevelFieldNumber = 3;
  ::google::protobuf::uint32 dead_level() const;
  void set_dead_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BossDieInfoBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > surround_uid_list_;
  mutable int _surround_uid_list_cached_byte_size_;
  ::google::protobuf::uint32 dead_time_;
  ::google::protobuf::uint32 dead_level_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2eblock_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupTriggerBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GroupTriggerBin) */ {
 public:
  GroupTriggerBin();
  virtual ~GroupTriggerBin();

  GroupTriggerBin(const GroupTriggerBin& from);

  inline GroupTriggerBin& operator=(const GroupTriggerBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupTriggerBin(GroupTriggerBin&& from) noexcept
    : GroupTriggerBin() {
    *this = ::std::move(from);
  }

  inline GroupTriggerBin& operator=(GroupTriggerBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupTriggerBin& default_instance();

  static inline const GroupTriggerBin* internal_default_instance() {
    return reinterpret_cast<const GroupTriggerBin*>(
               &_GroupTriggerBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(GroupTriggerBin* other);
  friend void swap(GroupTriggerBin& a, GroupTriggerBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupTriggerBin* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupTriggerBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupTriggerBin& from);
  void MergeFrom(const GroupTriggerBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupTriggerBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 trigger_count = 1;
  void clear_trigger_count();
  static const int kTriggerCountFieldNumber = 1;
  ::google::protobuf::uint32 trigger_count() const;
  void set_trigger_count(::google::protobuf::uint32 value);

  // uint32 config_id = 2;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 2;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GroupTriggerBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 trigger_count_;
  ::google::protobuf::uint32 config_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2eblock_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class GeneralRewardBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GeneralRewardBin) */ {
 public:
  GeneralRewardBin();
  virtual ~GeneralRewardBin();

  GeneralRewardBin(const GeneralRewardBin& from);

  inline GeneralRewardBin& operator=(const GeneralRewardBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GeneralRewardBin(GeneralRewardBin&& from) noexcept
    : GeneralRewardBin() {
    *this = ::std::move(from);
  }

  inline GeneralRewardBin& operator=(GeneralRewardBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GeneralRewardBin& default_instance();

  static inline const GeneralRewardBin* internal_default_instance() {
    return reinterpret_cast<const GeneralRewardBin*>(
               &_GeneralRewardBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(GeneralRewardBin* other);
  friend void swap(GeneralRewardBin& a, GeneralRewardBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GeneralRewardBin* New() const PROTOBUF_FINAL { return New(NULL); }

  GeneralRewardBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GeneralRewardBin& from);
  void MergeFrom(const GeneralRewardBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GeneralRewardBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> drop_map = 4;
  int drop_map_size() const;
  void clear_drop_map();
  static const int kDropMapFieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      drop_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_drop_map();

  // uint32 drop_id = 1;
  void clear_drop_id();
  static const int kDropIdFieldNumber = 1;
  ::google::protobuf::uint32 drop_id() const;
  void set_drop_id(::google::protobuf::uint32 value);

  // uint32 reward_id = 2;
  void clear_reward_id();
  static const int kRewardIdFieldNumber = 2;
  ::google::protobuf::uint32 reward_id() const;
  void set_reward_id(::google::protobuf::uint32 value);

  // uint32 drop_num = 3;
  void clear_drop_num();
  static const int kDropNumFieldNumber = 3;
  ::google::protobuf::uint32 drop_num() const;
  void set_drop_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GeneralRewardBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class GeneralRewardBin_DropMapEntry : public ::google::protobuf::internal::MapEntry<GeneralRewardBin_DropMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<GeneralRewardBin_DropMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    GeneralRewardBin_DropMapEntry();
    GeneralRewardBin_DropMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const GeneralRewardBin_DropMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_GeneralRewardBin_DropMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      GeneralRewardBin_DropMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > drop_map_;
  private:
  ::google::protobuf::uint32 drop_id_;
  ::google::protobuf::uint32 reward_id_;
  ::google::protobuf::uint32 drop_num_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2eblock_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class GadgetGeneralRewardBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GadgetGeneralRewardBin) */ {
 public:
  GadgetGeneralRewardBin();
  virtual ~GadgetGeneralRewardBin();

  GadgetGeneralRewardBin(const GadgetGeneralRewardBin& from);

  inline GadgetGeneralRewardBin& operator=(const GadgetGeneralRewardBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GadgetGeneralRewardBin(GadgetGeneralRewardBin&& from) noexcept
    : GadgetGeneralRewardBin() {
    *this = ::std::move(from);
  }

  inline GadgetGeneralRewardBin& operator=(GadgetGeneralRewardBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GadgetGeneralRewardBin& default_instance();

  static inline const GadgetGeneralRewardBin* internal_default_instance() {
    return reinterpret_cast<const GadgetGeneralRewardBin*>(
               &_GadgetGeneralRewardBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(GadgetGeneralRewardBin* other);
  friend void swap(GadgetGeneralRewardBin& a, GadgetGeneralRewardBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GadgetGeneralRewardBin* New() const PROTOBUF_FINAL { return New(NULL); }

  GadgetGeneralRewardBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GadgetGeneralRewardBin& from);
  void MergeFrom(const GadgetGeneralRewardBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GadgetGeneralRewardBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated uint32 remain_uid_list = 5;
  int remain_uid_list_size() const;
  void clear_remain_uid_list();
  static const int kRemainUidListFieldNumber = 5;
  ::google::protobuf::uint32 remain_uid_list(int index) const;
  void set_remain_uid_list(int index, ::google::protobuf::uint32 value);
  void add_remain_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      remain_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_remain_uid_list();

  // map<uint32, .proto.GeneralRewardBin> qualify_info_map = 7;
  int qualify_info_map_size() const;
  void clear_qualify_info_map();
  static const int kQualifyInfoMapFieldNumber = 7;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GeneralRewardBin >&
      qualify_info_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GeneralRewardBin >*
      mutable_qualify_info_map();

  // repeated uint32 open_state_list = 11;
  int open_state_list_size() const;
  void clear_open_state_list();
  static const int kOpenStateListFieldNumber = 11;
  ::google::protobuf::uint32 open_state_list(int index) const;
  void set_open_state_list(int index, ::google::protobuf::uint32 value);
  void add_open_state_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      open_state_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_open_state_list();

  // .proto.ItemParamBin item_param = 10;
  bool has_item_param() const;
  void clear_item_param();
  static const int kItemParamFieldNumber = 10;
  const ::proto::ItemParamBin& item_param() const;
  ::proto::ItemParamBin* mutable_item_param();
  ::proto::ItemParamBin* release_item_param();
  void set_allocated_item_param(::proto::ItemParamBin* item_param);

  // uint32 resin = 2;
  void clear_resin();
  static const int kResinFieldNumber = 2;
  ::google::protobuf::uint32 resin() const;
  void set_resin(::google::protobuf::uint32 value);

  // uint32 dead_time = 3;
  void clear_dead_time();
  static const int kDeadTimeFieldNumber = 3;
  ::google::protobuf::uint32 dead_time() const;
  void set_dead_time(::google::protobuf::uint32 value);

  // uint32 destroy_cd = 8;
  void clear_destroy_cd();
  static const int kDestroyCdFieldNumber = 8;
  ::google::protobuf::uint32 destroy_cd() const;
  void set_destroy_cd(::google::protobuf::uint32 value);

  // uint32 item_limit_type = 9;
  void clear_item_limit_type();
  static const int kItemLimitTypeFieldNumber = 9;
  ::google::protobuf::uint32 item_limit_type() const;
  void set_item_limit_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GadgetGeneralRewardBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > remain_uid_list_;
  mutable int _remain_uid_list_cached_byte_size_;
  public:
  class GadgetGeneralRewardBin_QualifyInfoMapEntry : public ::google::protobuf::internal::MapEntry<GadgetGeneralRewardBin_QualifyInfoMapEntry, 
      ::google::protobuf::uint32, ::proto::GeneralRewardBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<GadgetGeneralRewardBin_QualifyInfoMapEntry, 
      ::google::protobuf::uint32, ::proto::GeneralRewardBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    GadgetGeneralRewardBin_QualifyInfoMapEntry();
    GadgetGeneralRewardBin_QualifyInfoMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const GadgetGeneralRewardBin_QualifyInfoMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_GadgetGeneralRewardBin_QualifyInfoMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      GadgetGeneralRewardBin_QualifyInfoMapEntry,
      ::google::protobuf::uint32, ::proto::GeneralRewardBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > qualify_info_map_;
  private:
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > open_state_list_;
  mutable int _open_state_list_cached_byte_size_;
  ::proto::ItemParamBin* item_param_;
  ::google::protobuf::uint32 resin_;
  ::google::protobuf::uint32 dead_time_;
  ::google::protobuf::uint32 destroy_cd_;
  ::google::protobuf::uint32 item_limit_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2eblock_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FishStockBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FishStockBin) */ {
 public:
  FishStockBin();
  virtual ~FishStockBin();

  FishStockBin(const FishStockBin& from);

  inline FishStockBin& operator=(const FishStockBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FishStockBin(FishStockBin&& from) noexcept
    : FishStockBin() {
    *this = ::std::move(from);
  }

  inline FishStockBin& operator=(FishStockBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FishStockBin& default_instance();

  static inline const FishStockBin* internal_default_instance() {
    return reinterpret_cast<const FishStockBin*>(
               &_FishStockBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(FishStockBin* other);
  friend void swap(FishStockBin& a, FishStockBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FishStockBin* New() const PROTOBUF_FINAL { return New(NULL); }

  FishStockBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FishStockBin& from);
  void MergeFrom(const FishStockBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FishStockBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 stock_type = 1;
  void clear_stock_type();
  static const int kStockTypeFieldNumber = 1;
  ::google::protobuf::uint32 stock_type() const;
  void set_stock_type(::google::protobuf::uint32 value);

  // uint32 gen_fish_num = 2;
  void clear_gen_fish_num();
  static const int kGenFishNumFieldNumber = 2;
  ::google::protobuf::uint32 gen_fish_num() const;
  void set_gen_fish_num(::google::protobuf::uint32 value);

  // uint32 max_num = 3;
  void clear_max_num();
  static const int kMaxNumFieldNumber = 3;
  ::google::protobuf::uint32 max_num() const;
  void set_max_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FishStockBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 stock_type_;
  ::google::protobuf::uint32 gen_fish_num_;
  ::google::protobuf::uint32 max_num_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2eblock_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class GadgetFishPoolBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GadgetFishPoolBin) */ {
 public:
  GadgetFishPoolBin();
  virtual ~GadgetFishPoolBin();

  GadgetFishPoolBin(const GadgetFishPoolBin& from);

  inline GadgetFishPoolBin& operator=(const GadgetFishPoolBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GadgetFishPoolBin(GadgetFishPoolBin&& from) noexcept
    : GadgetFishPoolBin() {
    *this = ::std::move(from);
  }

  inline GadgetFishPoolBin& operator=(GadgetFishPoolBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GadgetFishPoolBin& default_instance();

  static inline const GadgetFishPoolBin* internal_default_instance() {
    return reinterpret_cast<const GadgetFishPoolBin*>(
               &_GadgetFishPoolBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(GadgetFishPoolBin* other);
  friend void swap(GadgetFishPoolBin& a, GadgetFishPoolBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GadgetFishPoolBin* New() const PROTOBUF_FINAL { return New(NULL); }

  GadgetFishPoolBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GadgetFishPoolBin& from);
  void MergeFrom(const GadgetFishPoolBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GadgetFishPoolBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .proto.FishStockBin fish_stock_list = 1;
  int fish_stock_list_size() const;
  void clear_fish_stock_list();
  static const int kFishStockListFieldNumber = 1;
  const ::proto::FishStockBin& fish_stock_list(int index) const;
  ::proto::FishStockBin* mutable_fish_stock_list(int index);
  ::proto::FishStockBin* add_fish_stock_list();
  ::google::protobuf::RepeatedPtrField< ::proto::FishStockBin >*
      mutable_fish_stock_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::FishStockBin >&
      fish_stock_list() const;

  // map<uint32, uint32> cached_fish_map = 4;
  int cached_fish_map_size() const;
  void clear_cached_fish_map();
  static const int kCachedFishMapFieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      cached_fish_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_cached_fish_map();

  // uint32 today_fish_num = 2;
  void clear_today_fish_num();
  static const int kTodayFishNumFieldNumber = 2;
  ::google::protobuf::uint32 today_fish_num() const;
  void set_today_fish_num(::google::protobuf::uint32 value);

  // uint32 last_refresh_today_fish_time = 3;
  void clear_last_refresh_today_fish_time();
  static const int kLastRefreshTodayFishTimeFieldNumber = 3;
  ::google::protobuf::uint32 last_refresh_today_fish_time() const;
  void set_last_refresh_today_fish_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GadgetFishPoolBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::FishStockBin > fish_stock_list_;
  public:
  class GadgetFishPoolBin_CachedFishMapEntry : public ::google::protobuf::internal::MapEntry<GadgetFishPoolBin_CachedFishMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<GadgetFishPoolBin_CachedFishMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    GadgetFishPoolBin_CachedFishMapEntry();
    GadgetFishPoolBin_CachedFishMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const GadgetFishPoolBin_CachedFishMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_GadgetFishPoolBin_CachedFishMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      GadgetFishPoolBin_CachedFishMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > cached_fish_map_;
  private:
  ::google::protobuf::uint32 today_fish_num_;
  ::google::protobuf::uint32 last_refresh_today_fish_time_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2eblock_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CustomGadgetNodeInfoBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CustomGadgetNodeInfoBin) */ {
 public:
  CustomGadgetNodeInfoBin();
  virtual ~CustomGadgetNodeInfoBin();

  CustomGadgetNodeInfoBin(const CustomGadgetNodeInfoBin& from);

  inline CustomGadgetNodeInfoBin& operator=(const CustomGadgetNodeInfoBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CustomGadgetNodeInfoBin(CustomGadgetNodeInfoBin&& from) noexcept
    : CustomGadgetNodeInfoBin() {
    *this = ::std::move(from);
  }

  inline CustomGadgetNodeInfoBin& operator=(CustomGadgetNodeInfoBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CustomGadgetNodeInfoBin& default_instance();

  static inline const CustomGadgetNodeInfoBin* internal_default_instance() {
    return reinterpret_cast<const CustomGadgetNodeInfoBin*>(
               &_CustomGadgetNodeInfoBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(CustomGadgetNodeInfoBin* other);
  friend void swap(CustomGadgetNodeInfoBin& a, CustomGadgetNodeInfoBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CustomGadgetNodeInfoBin* New() const PROTOBUF_FINAL { return New(NULL); }

  CustomGadgetNodeInfoBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CustomGadgetNodeInfoBin& from);
  void MergeFrom(const CustomGadgetNodeInfoBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CustomGadgetNodeInfoBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string slot_identifier = 3;
  void clear_slot_identifier();
  static const int kSlotIdentifierFieldNumber = 3;
  const ::std::string& slot_identifier() const;
  void set_slot_identifier(const ::std::string& value);
  #if LANG_CXX11
  void set_slot_identifier(::std::string&& value);
  #endif
  void set_slot_identifier(const char* value);
  void set_slot_identifier(const char* value, size_t size);
  ::std::string* mutable_slot_identifier();
  ::std::string* release_slot_identifier();
  void set_allocated_slot_identifier(::std::string* slot_identifier);

  // int32 parent_index = 1;
  void clear_parent_index();
  static const int kParentIndexFieldNumber = 1;
  ::google::protobuf::int32 parent_index() const;
  void set_parent_index(::google::protobuf::int32 value);

  // uint32 config_id = 2;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 2;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CustomGadgetNodeInfoBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr slot_identifier_;
  ::google::protobuf::int32 parent_index_;
  ::google::protobuf::uint32 config_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2eblock_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CustomGadgetTreeInfoBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CustomGadgetTreeInfoBin) */ {
 public:
  CustomGadgetTreeInfoBin();
  virtual ~CustomGadgetTreeInfoBin();

  CustomGadgetTreeInfoBin(const CustomGadgetTreeInfoBin& from);

  inline CustomGadgetTreeInfoBin& operator=(const CustomGadgetTreeInfoBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CustomGadgetTreeInfoBin(CustomGadgetTreeInfoBin&& from) noexcept
    : CustomGadgetTreeInfoBin() {
    *this = ::std::move(from);
  }

  inline CustomGadgetTreeInfoBin& operator=(CustomGadgetTreeInfoBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CustomGadgetTreeInfoBin& default_instance();

  static inline const CustomGadgetTreeInfoBin* internal_default_instance() {
    return reinterpret_cast<const CustomGadgetTreeInfoBin*>(
               &_CustomGadgetTreeInfoBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(CustomGadgetTreeInfoBin* other);
  friend void swap(CustomGadgetTreeInfoBin& a, CustomGadgetTreeInfoBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CustomGadgetTreeInfoBin* New() const PROTOBUF_FINAL { return New(NULL); }

  CustomGadgetTreeInfoBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CustomGadgetTreeInfoBin& from);
  void MergeFrom(const CustomGadgetTreeInfoBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CustomGadgetTreeInfoBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.CustomGadgetNodeInfoBin node_list = 1;
  int node_list_size() const;
  void clear_node_list();
  static const int kNodeListFieldNumber = 1;
  const ::proto::CustomGadgetNodeInfoBin& node_list(int index) const;
  ::proto::CustomGadgetNodeInfoBin* mutable_node_list(int index);
  ::proto::CustomGadgetNodeInfoBin* add_node_list();
  ::google::protobuf::RepeatedPtrField< ::proto::CustomGadgetNodeInfoBin >*
      mutable_node_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::CustomGadgetNodeInfoBin >&
      node_list() const;

  // @@protoc_insertion_point(class_scope:proto.CustomGadgetTreeInfoBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::CustomGadgetNodeInfoBin > node_list_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2eblock_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GadgetWorktopBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GadgetWorktopBin) */ {
 public:
  GadgetWorktopBin();
  virtual ~GadgetWorktopBin();

  GadgetWorktopBin(const GadgetWorktopBin& from);

  inline GadgetWorktopBin& operator=(const GadgetWorktopBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GadgetWorktopBin(GadgetWorktopBin&& from) noexcept
    : GadgetWorktopBin() {
    *this = ::std::move(from);
  }

  inline GadgetWorktopBin& operator=(GadgetWorktopBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GadgetWorktopBin& default_instance();

  static inline const GadgetWorktopBin* internal_default_instance() {
    return reinterpret_cast<const GadgetWorktopBin*>(
               &_GadgetWorktopBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(GadgetWorktopBin* other);
  friend void swap(GadgetWorktopBin& a, GadgetWorktopBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GadgetWorktopBin* New() const PROTOBUF_FINAL { return New(NULL); }

  GadgetWorktopBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GadgetWorktopBin& from);
  void MergeFrom(const GadgetWorktopBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GadgetWorktopBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 option_list = 1;
  int option_list_size() const;
  void clear_option_list();
  static const int kOptionListFieldNumber = 1;
  ::google::protobuf::uint32 option_list(int index) const;
  void set_option_list(int index, ::google::protobuf::uint32 value);
  void add_option_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      option_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_option_list();

  // @@protoc_insertion_point(class_scope:proto.GadgetWorktopBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > option_list_;
  mutable int _option_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2eblock_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupGadgetBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GroupGadgetBin) */ {
 public:
  GroupGadgetBin();
  virtual ~GroupGadgetBin();

  GroupGadgetBin(const GroupGadgetBin& from);

  inline GroupGadgetBin& operator=(const GroupGadgetBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupGadgetBin(GroupGadgetBin&& from) noexcept
    : GroupGadgetBin() {
    *this = ::std::move(from);
  }

  inline GroupGadgetBin& operator=(GroupGadgetBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupGadgetBin& default_instance();

  enum ComponentCase {
    kPlatform = 101,
    kBossChest = 102,
    kBlossomChest = 103,
    kGeneralReward = 104,
    kFishPool = 105,
    kCustomGadgetTreeInfo = 106,
    kWorktop = 107,
    COMPONENT_NOT_SET = 0,
  };

  static inline const GroupGadgetBin* internal_default_instance() {
    return reinterpret_cast<const GroupGadgetBin*>(
               &_GroupGadgetBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(GroupGadgetBin* other);
  friend void swap(GroupGadgetBin& a, GroupGadgetBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupGadgetBin* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupGadgetBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupGadgetBin& from);
  void MergeFrom(const GroupGadgetBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupGadgetBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 gadget_state = 1;
  void clear_gadget_state();
  static const int kGadgetStateFieldNumber = 1;
  ::google::protobuf::uint32 gadget_state() const;
  void set_gadget_state(::google::protobuf::uint32 value);

  // bool is_enable_interact = 2;
  void clear_is_enable_interact();
  static const int kIsEnableInteractFieldNumber = 2;
  bool is_enable_interact() const;
  void set_is_enable_interact(bool value);

  // uint32 gadget_talk_state = 3;
  void clear_gadget_talk_state();
  static const int kGadgetTalkStateFieldNumber = 3;
  ::google::protobuf::uint32 gadget_talk_state() const;
  void set_gadget_talk_state(::google::protobuf::uint32 value);

  // .proto.GadgetPlatformBin platform = 101;
  bool has_platform() const;
  void clear_platform();
  static const int kPlatformFieldNumber = 101;
  const ::proto::GadgetPlatformBin& platform() const;
  ::proto::GadgetPlatformBin* mutable_platform();
  ::proto::GadgetPlatformBin* release_platform();
  void set_allocated_platform(::proto::GadgetPlatformBin* platform);

  // .proto.BossChestBin boss_chest = 102;
  bool has_boss_chest() const;
  void clear_boss_chest();
  static const int kBossChestFieldNumber = 102;
  const ::proto::BossChestBin& boss_chest() const;
  ::proto::BossChestBin* mutable_boss_chest();
  ::proto::BossChestBin* release_boss_chest();
  void set_allocated_boss_chest(::proto::BossChestBin* boss_chest);

  // .proto.BlossomChestBin blossom_chest = 103;
  bool has_blossom_chest() const;
  void clear_blossom_chest();
  static const int kBlossomChestFieldNumber = 103;
  const ::proto::BlossomChestBin& blossom_chest() const;
  ::proto::BlossomChestBin* mutable_blossom_chest();
  ::proto::BlossomChestBin* release_blossom_chest();
  void set_allocated_blossom_chest(::proto::BlossomChestBin* blossom_chest);

  // .proto.GadgetGeneralRewardBin general_reward = 104;
  bool has_general_reward() const;
  void clear_general_reward();
  static const int kGeneralRewardFieldNumber = 104;
  const ::proto::GadgetGeneralRewardBin& general_reward() const;
  ::proto::GadgetGeneralRewardBin* mutable_general_reward();
  ::proto::GadgetGeneralRewardBin* release_general_reward();
  void set_allocated_general_reward(::proto::GadgetGeneralRewardBin* general_reward);

  // .proto.GadgetFishPoolBin fish_pool = 105;
  bool has_fish_pool() const;
  void clear_fish_pool();
  static const int kFishPoolFieldNumber = 105;
  const ::proto::GadgetFishPoolBin& fish_pool() const;
  ::proto::GadgetFishPoolBin* mutable_fish_pool();
  ::proto::GadgetFishPoolBin* release_fish_pool();
  void set_allocated_fish_pool(::proto::GadgetFishPoolBin* fish_pool);

  // .proto.CustomGadgetTreeInfoBin custom_gadget_tree_info = 106;
  bool has_custom_gadget_tree_info() const;
  void clear_custom_gadget_tree_info();
  static const int kCustomGadgetTreeInfoFieldNumber = 106;
  const ::proto::CustomGadgetTreeInfoBin& custom_gadget_tree_info() const;
  ::proto::CustomGadgetTreeInfoBin* mutable_custom_gadget_tree_info();
  ::proto::CustomGadgetTreeInfoBin* release_custom_gadget_tree_info();
  void set_allocated_custom_gadget_tree_info(::proto::CustomGadgetTreeInfoBin* custom_gadget_tree_info);

  // .proto.GadgetWorktopBin worktop = 107;
  bool has_worktop() const;
  void clear_worktop();
  static const int kWorktopFieldNumber = 107;
  const ::proto::GadgetWorktopBin& worktop() const;
  ::proto::GadgetWorktopBin* mutable_worktop();
  ::proto::GadgetWorktopBin* release_worktop();
  void set_allocated_worktop(::proto::GadgetWorktopBin* worktop);

  ComponentCase component_case() const;
  // @@protoc_insertion_point(class_scope:proto.GroupGadgetBin)
 private:
  void set_has_platform();
  void set_has_boss_chest();
  void set_has_blossom_chest();
  void set_has_general_reward();
  void set_has_fish_pool();
  void set_has_custom_gadget_tree_info();
  void set_has_worktop();

  inline bool has_component() const;
  void clear_component();
  inline void clear_has_component();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gadget_state_;
  bool is_enable_interact_;
  ::google::protobuf::uint32 gadget_talk_state_;
  union ComponentUnion {
    ComponentUnion() {}
    ::proto::GadgetPlatformBin* platform_;
    ::proto::BossChestBin* boss_chest_;
    ::proto::BlossomChestBin* blossom_chest_;
    ::proto::GadgetGeneralRewardBin* general_reward_;
    ::proto::GadgetFishPoolBin* fish_pool_;
    ::proto::CustomGadgetTreeInfoBin* custom_gadget_tree_info_;
    ::proto::GadgetWorktopBin* worktop_;
  } component_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_server_5fonly_2fbin_2eblock_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupMonsterBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GroupMonsterBin) */ {
 public:
  GroupMonsterBin();
  virtual ~GroupMonsterBin();

  GroupMonsterBin(const GroupMonsterBin& from);

  inline GroupMonsterBin& operator=(const GroupMonsterBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupMonsterBin(GroupMonsterBin&& from) noexcept
    : GroupMonsterBin() {
    *this = ::std::move(from);
  }

  inline GroupMonsterBin& operator=(GroupMonsterBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupMonsterBin& default_instance();

  static inline const GroupMonsterBin* internal_default_instance() {
    return reinterpret_cast<const GroupMonsterBin*>(
               &_GroupMonsterBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(GroupMonsterBin* other);
  friend void swap(GroupMonsterBin& a, GroupMonsterBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupMonsterBin* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupMonsterBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupMonsterBin& from);
  void MergeFrom(const GroupMonsterBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupMonsterBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 dropped_hp_percent = 1;
  void clear_dropped_hp_percent();
  static const int kDroppedHpPercentFieldNumber = 1;
  ::google::protobuf::uint32 dropped_hp_percent() const;
  void set_dropped_hp_percent(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GroupMonsterBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 dropped_hp_percent_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2eblock_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupGatherBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GroupGatherBin) */ {
 public:
  GroupGatherBin();
  virtual ~GroupGatherBin();

  GroupGatherBin(const GroupGatherBin& from);

  inline GroupGatherBin& operator=(const GroupGatherBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupGatherBin(GroupGatherBin&& from) noexcept
    : GroupGatherBin() {
    *this = ::std::move(from);
  }

  inline GroupGatherBin& operator=(GroupGatherBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupGatherBin& default_instance();

  static inline const GroupGatherBin* internal_default_instance() {
    return reinterpret_cast<const GroupGatherBin*>(
               &_GroupGatherBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(GroupGatherBin* other);
  friend void swap(GroupGatherBin& a, GroupGatherBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupGatherBin* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupGatherBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupGatherBin& from);
  void MergeFrom(const GroupGatherBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupGatherBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 config_id = 1;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 1;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // fixed32 last_refresh_time = 2;
  void clear_last_refresh_time();
  static const int kLastRefreshTimeFieldNumber = 2;
  ::google::protobuf::uint32 last_refresh_time() const;
  void set_last_refresh_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GroupGatherBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 config_id_;
  ::google::protobuf::uint32 last_refresh_time_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2eblock_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupRefreshTimeBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GroupRefreshTimeBin) */ {
 public:
  GroupRefreshTimeBin();
  virtual ~GroupRefreshTimeBin();

  GroupRefreshTimeBin(const GroupRefreshTimeBin& from);

  inline GroupRefreshTimeBin& operator=(const GroupRefreshTimeBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupRefreshTimeBin(GroupRefreshTimeBin&& from) noexcept
    : GroupRefreshTimeBin() {
    *this = ::std::move(from);
  }

  inline GroupRefreshTimeBin& operator=(GroupRefreshTimeBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupRefreshTimeBin& default_instance();

  static inline const GroupRefreshTimeBin* internal_default_instance() {
    return reinterpret_cast<const GroupRefreshTimeBin*>(
               &_GroupRefreshTimeBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(GroupRefreshTimeBin* other);
  friend void swap(GroupRefreshTimeBin& a, GroupRefreshTimeBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupRefreshTimeBin* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupRefreshTimeBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupRefreshTimeBin& from);
  void MergeFrom(const GroupRefreshTimeBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupRefreshTimeBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 save_type = 1;
  void clear_save_type();
  static const int kSaveTypeFieldNumber = 1;
  ::google::protobuf::uint32 save_type() const;
  void set_save_type(::google::protobuf::uint32 value);

  // fixed32 last_refresh_time = 2;
  void clear_last_refresh_time();
  static const int kLastRefreshTimeFieldNumber = 2;
  ::google::protobuf::uint32 last_refresh_time() const;
  void set_last_refresh_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GroupRefreshTimeBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 save_type_;
  ::google::protobuf::uint32 last_refresh_time_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2eblock_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class GroupBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GroupBin) */ {
 public:
  GroupBin();
  virtual ~GroupBin();

  GroupBin(const GroupBin& from);

  inline GroupBin& operator=(const GroupBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupBin(GroupBin&& from) noexcept
    : GroupBin() {
    *this = ::std::move(from);
  }

  inline GroupBin& operator=(GroupBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupBin& default_instance();

  static inline const GroupBin* internal_default_instance() {
    return reinterpret_cast<const GroupBin*>(
               &_GroupBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(GroupBin* other);
  friend void swap(GroupBin& a, GroupBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupBin* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupBin& from);
  void MergeFrom(const GroupBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, .proto.GroupMonsterBin> monster_map = 1;
  int monster_map_size() const;
  void clear_monster_map();
  static const int kMonsterMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupMonsterBin >&
      monster_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupMonsterBin >*
      mutable_monster_map();

  // repeated uint32 del_monster_list = 2;
  int del_monster_list_size() const;
  void clear_del_monster_list();
  static const int kDelMonsterListFieldNumber = 2;
  ::google::protobuf::uint32 del_monster_list(int index) const;
  void set_del_monster_list(int index, ::google::protobuf::uint32 value);
  void add_del_monster_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      del_monster_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_del_monster_list();

  // map<uint32, .proto.GroupGadgetBin> gadget_map = 3;
  int gadget_map_size() const;
  void clear_gadget_map();
  static const int kGadgetMapFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupGadgetBin >&
      gadget_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupGadgetBin >*
      mutable_gadget_map();

  // repeated uint32 del_gadget_list = 4;
  int del_gadget_list_size() const;
  void clear_del_gadget_list();
  static const int kDelGadgetListFieldNumber = 4;
  ::google::protobuf::uint32 del_gadget_list(int index) const;
  void set_del_gadget_list(int index, ::google::protobuf::uint32 value);
  void add_del_gadget_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      del_gadget_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_del_gadget_list();

  // map<string, .proto.GroupTriggerBin> trigger_map = 5;
  int trigger_map_size() const;
  void clear_trigger_map();
  static const int kTriggerMapFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::proto::GroupTriggerBin >&
      trigger_map() const;
  ::google::protobuf::Map< ::std::string, ::proto::GroupTriggerBin >*
      mutable_trigger_map();

  // map<string, .proto.GroupVariableBin> variable_map = 6;
  int variable_map_size() const;
  void clear_variable_map();
  static const int kVariableMapFieldNumber = 6;
  const ::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >&
      variable_map() const;
  ::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >*
      mutable_variable_map();

  // repeated uint32 show_cutscene_chest_list = 8;
  int show_cutscene_chest_list_size() const;
  void clear_show_cutscene_chest_list();
  static const int kShowCutsceneChestListFieldNumber = 8;
  ::google::protobuf::uint32 show_cutscene_chest_list(int index) const;
  void set_show_cutscene_chest_list(int index, ::google::protobuf::uint32 value);
  void add_show_cutscene_chest_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      show_cutscene_chest_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_show_cutscene_chest_list();

  // repeated .proto.ChallengeRecordBin challenge_record_list = 9;
  int challenge_record_list_size() const;
  void clear_challenge_record_list();
  static const int kChallengeRecordListFieldNumber = 9;
  const ::proto::ChallengeRecordBin& challenge_record_list(int index) const;
  ::proto::ChallengeRecordBin* mutable_challenge_record_list(int index);
  ::proto::ChallengeRecordBin* add_challenge_record_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ChallengeRecordBin >*
      mutable_challenge_record_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ChallengeRecordBin >&
      challenge_record_list() const;

  // map<uint32, .proto.BossDieInfoBin> boss_die_info_map = 13;
  int boss_die_info_map_size() const;
  void clear_boss_die_info_map();
  static const int kBossDieInfoMapFieldNumber = 13;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BossDieInfoBin >&
      boss_die_info_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BossDieInfoBin >*
      mutable_boss_die_info_map();

  // repeated .proto.GroupGatherBin gather_refresh_time_list = 14;
  int gather_refresh_time_list_size() const;
  void clear_gather_refresh_time_list();
  static const int kGatherRefreshTimeListFieldNumber = 14;
  const ::proto::GroupGatherBin& gather_refresh_time_list(int index) const;
  ::proto::GroupGatherBin* mutable_gather_refresh_time_list(int index);
  ::proto::GroupGatherBin* add_gather_refresh_time_list();
  ::google::protobuf::RepeatedPtrField< ::proto::GroupGatherBin >*
      mutable_gather_refresh_time_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::GroupGatherBin >&
      gather_refresh_time_list() const;

  // repeated .proto.GroupTriggerBin trigger_list = 17;
  int trigger_list_size() const;
  void clear_trigger_list();
  static const int kTriggerListFieldNumber = 17;
  const ::proto::GroupTriggerBin& trigger_list(int index) const;
  ::proto::GroupTriggerBin* mutable_trigger_list(int index);
  ::proto::GroupTriggerBin* add_trigger_list();
  ::google::protobuf::RepeatedPtrField< ::proto::GroupTriggerBin >*
      mutable_trigger_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::GroupTriggerBin >&
      trigger_list() const;

  // repeated .proto.GroupRefreshTimeBin group_refresh_list = 18;
  int group_refresh_list_size() const;
  void clear_group_refresh_list();
  static const int kGroupRefreshListFieldNumber = 18;
  const ::proto::GroupRefreshTimeBin& group_refresh_list(int index) const;
  ::proto::GroupRefreshTimeBin* mutable_group_refresh_list(int index);
  ::proto::GroupRefreshTimeBin* add_group_refresh_list();
  ::google::protobuf::RepeatedPtrField< ::proto::GroupRefreshTimeBin >*
      mutable_group_refresh_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::GroupRefreshTimeBin >&
      group_refresh_list() const;

  // repeated .proto.GroupVariableConfigIdBin variable_config_id_bin_list = 19;
  int variable_config_id_bin_list_size() const;
  void clear_variable_config_id_bin_list();
  static const int kVariableConfigIdBinListFieldNumber = 19;
  const ::proto::GroupVariableConfigIdBin& variable_config_id_bin_list(int index) const;
  ::proto::GroupVariableConfigIdBin* mutable_variable_config_id_bin_list(int index);
  ::proto::GroupVariableConfigIdBin* add_variable_config_id_bin_list();
  ::google::protobuf::RepeatedPtrField< ::proto::GroupVariableConfigIdBin >*
      mutable_variable_config_id_bin_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::GroupVariableConfigIdBin >&
      variable_config_id_bin_list() const;

  // uint32 suite_index = 7;
  void clear_suite_index();
  static const int kSuiteIndexFieldNumber = 7;
  ::google::protobuf::uint32 suite_index() const;
  void set_suite_index(::google::protobuf::uint32 value);

  // uint32 revise_level = 10;
  void clear_revise_level();
  static const int kReviseLevelFieldNumber = 10;
  ::google::protobuf::uint32 revise_level() const;
  void set_revise_level(::google::protobuf::uint32 value);

  // fixed32 last_refresh_time = 11;
  void clear_last_refresh_time();
  static const int kLastRefreshTimeFieldNumber = 11;
  ::google::protobuf::uint32 last_refresh_time() const;
  void set_last_refresh_time(::google::protobuf::uint32 value);

  // uint32 target_suite_index = 12;
  void clear_target_suite_index();
  static const int kTargetSuiteIndexFieldNumber = 12;
  ::google::protobuf::uint32 target_suite_index() const;
  void set_target_suite_index(::google::protobuf::uint32 value);

  // bool is_replaceable = 15;
  void clear_is_replaceable();
  static const int kIsReplaceableFieldNumber = 15;
  bool is_replaceable() const;
  void set_is_replaceable(bool value);

  // uint32 replaceable_version = 16;
  void clear_replaceable_version();
  static const int kReplaceableVersionFieldNumber = 16;
  ::google::protobuf::uint32 replaceable_version() const;
  void set_replaceable_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GroupBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class GroupBin_MonsterMapEntry : public ::google::protobuf::internal::MapEntry<GroupBin_MonsterMapEntry, 
      ::google::protobuf::uint32, ::proto::GroupMonsterBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<GroupBin_MonsterMapEntry, 
      ::google::protobuf::uint32, ::proto::GroupMonsterBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    GroupBin_MonsterMapEntry();
    GroupBin_MonsterMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const GroupBin_MonsterMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_GroupBin_MonsterMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      GroupBin_MonsterMapEntry,
      ::google::protobuf::uint32, ::proto::GroupMonsterBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > monster_map_;
  private:
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > del_monster_list_;
  mutable int _del_monster_list_cached_byte_size_;
  public:
  class GroupBin_GadgetMapEntry : public ::google::protobuf::internal::MapEntry<GroupBin_GadgetMapEntry, 
      ::google::protobuf::uint32, ::proto::GroupGadgetBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<GroupBin_GadgetMapEntry, 
      ::google::protobuf::uint32, ::proto::GroupGadgetBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    GroupBin_GadgetMapEntry();
    GroupBin_GadgetMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const GroupBin_GadgetMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_GroupBin_GadgetMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      GroupBin_GadgetMapEntry,
      ::google::protobuf::uint32, ::proto::GroupGadgetBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > gadget_map_;
  private:
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > del_gadget_list_;
  mutable int _del_gadget_list_cached_byte_size_;
  public:
  class GroupBin_TriggerMapEntry : public ::google::protobuf::internal::MapEntry<GroupBin_TriggerMapEntry, 
      ::std::string, ::proto::GroupTriggerBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<GroupBin_TriggerMapEntry, 
      ::std::string, ::proto::GroupTriggerBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    GroupBin_TriggerMapEntry();
    GroupBin_TriggerMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const GroupBin_TriggerMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_GroupBin_TriggerMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      GroupBin_TriggerMapEntry,
      ::std::string, ::proto::GroupTriggerBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > trigger_map_;
  private:
  public:
  class GroupBin_VariableMapEntry : public ::google::protobuf::internal::MapEntry<GroupBin_VariableMapEntry, 
      ::std::string, ::proto::GroupVariableBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<GroupBin_VariableMapEntry, 
      ::std::string, ::proto::GroupVariableBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    GroupBin_VariableMapEntry();
    GroupBin_VariableMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const GroupBin_VariableMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_GroupBin_VariableMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      GroupBin_VariableMapEntry,
      ::std::string, ::proto::GroupVariableBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > variable_map_;
  private:
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > show_cutscene_chest_list_;
  mutable int _show_cutscene_chest_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::ChallengeRecordBin > challenge_record_list_;
  public:
  class GroupBin_BossDieInfoMapEntry : public ::google::protobuf::internal::MapEntry<GroupBin_BossDieInfoMapEntry, 
      ::google::protobuf::uint32, ::proto::BossDieInfoBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<GroupBin_BossDieInfoMapEntry, 
      ::google::protobuf::uint32, ::proto::BossDieInfoBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    GroupBin_BossDieInfoMapEntry();
    GroupBin_BossDieInfoMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const GroupBin_BossDieInfoMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_GroupBin_BossDieInfoMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      GroupBin_BossDieInfoMapEntry,
      ::google::protobuf::uint32, ::proto::BossDieInfoBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > boss_die_info_map_;
  private:
  ::google::protobuf::RepeatedPtrField< ::proto::GroupGatherBin > gather_refresh_time_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::GroupTriggerBin > trigger_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::GroupRefreshTimeBin > group_refresh_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::GroupVariableConfigIdBin > variable_config_id_bin_list_;
  ::google::protobuf::uint32 suite_index_;
  ::google::protobuf::uint32 revise_level_;
  ::google::protobuf::uint32 last_refresh_time_;
  ::google::protobuf::uint32 target_suite_index_;
  bool is_replaceable_;
  ::google::protobuf::uint32 replaceable_version_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2eblock_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class BlockBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BlockBin) */ {
 public:
  BlockBin();
  virtual ~BlockBin();

  BlockBin(const BlockBin& from);

  inline BlockBin& operator=(const BlockBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BlockBin(BlockBin&& from) noexcept
    : BlockBin() {
    *this = ::std::move(from);
  }

  inline BlockBin& operator=(BlockBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockBin& default_instance();

  static inline const BlockBin* internal_default_instance() {
    return reinterpret_cast<const BlockBin*>(
               &_BlockBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(BlockBin* other);
  friend void swap(BlockBin& a, BlockBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BlockBin* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockBin& from);
  void MergeFrom(const BlockBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, bytes> group_map = 1;
  int group_map_size() const;
  void clear_group_map();
  static const int kGroupMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >&
      group_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >*
      mutable_group_map();

  // map<uint32, .proto.GroupProductBin> group_product_map = 2;
  int group_product_map_size() const;
  void clear_group_product_map();
  static const int kGroupProductMapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupProductBin >&
      group_product_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupProductBin >*
      mutable_group_product_map();

  // @@protoc_insertion_point(class_scope:proto.BlockBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class BlockBin_GroupMapEntry : public ::google::protobuf::internal::MapEntry<BlockBin_GroupMapEntry, 
      ::google::protobuf::uint32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<BlockBin_GroupMapEntry, 
      ::google::protobuf::uint32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > SuperType;
    BlockBin_GroupMapEntry();
    BlockBin_GroupMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const BlockBin_GroupMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_BlockBin_GroupMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      BlockBin_GroupMapEntry,
      ::google::protobuf::uint32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > group_map_;
  private:
  public:
  class BlockBin_GroupProductMapEntry : public ::google::protobuf::internal::MapEntry<BlockBin_GroupProductMapEntry, 
      ::google::protobuf::uint32, ::proto::GroupProductBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<BlockBin_GroupProductMapEntry, 
      ::google::protobuf::uint32, ::proto::GroupProductBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    BlockBin_GroupProductMapEntry();
    BlockBin_GroupProductMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const BlockBin_GroupProductMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_BlockBin_GroupProductMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      BlockBin_GroupProductMapEntry,
      ::google::protobuf::uint32, ::proto::GroupProductBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > group_product_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2eblock_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BlossomChestBin

// uint32 blossom_chest_id = 1;
inline void BlossomChestBin::clear_blossom_chest_id() {
  blossom_chest_id_ = 0u;
}
inline ::google::protobuf::uint32 BlossomChestBin::blossom_chest_id() const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestBin.blossom_chest_id)
  return blossom_chest_id_;
}
inline void BlossomChestBin::set_blossom_chest_id(::google::protobuf::uint32 value) {
  
  blossom_chest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomChestBin.blossom_chest_id)
}

// uint32 drop_id = 2;
inline void BlossomChestBin::clear_drop_id() {
  drop_id_ = 0u;
}
inline ::google::protobuf::uint32 BlossomChestBin::drop_id() const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestBin.drop_id)
  return drop_id_;
}
inline void BlossomChestBin::set_drop_id(::google::protobuf::uint32 value) {
  
  drop_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomChestBin.drop_id)
}

// fixed32 dead_time = 3;
inline void BlossomChestBin::clear_dead_time() {
  dead_time_ = 0u;
}
inline ::google::protobuf::uint32 BlossomChestBin::dead_time() const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestBin.dead_time)
  return dead_time_;
}
inline void BlossomChestBin::set_dead_time(::google::protobuf::uint32 value) {
  
  dead_time_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomChestBin.dead_time)
}

// repeated uint32 qualify_uid_list = 4;
inline int BlossomChestBin::qualify_uid_list_size() const {
  return qualify_uid_list_.size();
}
inline void BlossomChestBin::clear_qualify_uid_list() {
  qualify_uid_list_.Clear();
}
inline ::google::protobuf::uint32 BlossomChestBin::qualify_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestBin.qualify_uid_list)
  return qualify_uid_list_.Get(index);
}
inline void BlossomChestBin::set_qualify_uid_list(int index, ::google::protobuf::uint32 value) {
  qualify_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BlossomChestBin.qualify_uid_list)
}
inline void BlossomChestBin::add_qualify_uid_list(::google::protobuf::uint32 value) {
  qualify_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BlossomChestBin.qualify_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BlossomChestBin::qualify_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.BlossomChestBin.qualify_uid_list)
  return qualify_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BlossomChestBin::mutable_qualify_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BlossomChestBin.qualify_uid_list)
  return &qualify_uid_list_;
}

// repeated uint32 remain_uid_list = 5;
inline int BlossomChestBin::remain_uid_list_size() const {
  return remain_uid_list_.size();
}
inline void BlossomChestBin::clear_remain_uid_list() {
  remain_uid_list_.Clear();
}
inline ::google::protobuf::uint32 BlossomChestBin::remain_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestBin.remain_uid_list)
  return remain_uid_list_.Get(index);
}
inline void BlossomChestBin::set_remain_uid_list(int index, ::google::protobuf::uint32 value) {
  remain_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BlossomChestBin.remain_uid_list)
}
inline void BlossomChestBin::add_remain_uid_list(::google::protobuf::uint32 value) {
  remain_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BlossomChestBin.remain_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BlossomChestBin::remain_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.BlossomChestBin.remain_uid_list)
  return remain_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BlossomChestBin::mutable_remain_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BlossomChestBin.remain_uid_list)
  return &remain_uid_list_;
}

// uint32 item_limit_type = 6;
inline void BlossomChestBin::clear_item_limit_type() {
  item_limit_type_ = 0u;
}
inline ::google::protobuf::uint32 BlossomChestBin::item_limit_type() const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestBin.item_limit_type)
  return item_limit_type_;
}
inline void BlossomChestBin::set_item_limit_type(::google::protobuf::uint32 value) {
  
  item_limit_type_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomChestBin.item_limit_type)
}

// uint32 refresh_id = 7;
inline void BlossomChestBin::clear_refresh_id() {
  refresh_id_ = 0u;
}
inline ::google::protobuf::uint32 BlossomChestBin::refresh_id() const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestBin.refresh_id)
  return refresh_id_;
}
inline void BlossomChestBin::set_refresh_id(::google::protobuf::uint32 value) {
  
  refresh_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomChestBin.refresh_id)
}

// -------------------------------------------------------------------

// GadgetPlatformBin

// uint32 route_id = 1;
inline void GadgetPlatformBin::clear_route_id() {
  route_id_ = 0u;
}
inline ::google::protobuf::uint32 GadgetPlatformBin::route_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlatformBin.route_id)
  return route_id_;
}
inline void GadgetPlatformBin::set_route_id(::google::protobuf::uint32 value) {
  
  route_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlatformBin.route_id)
}

// int32 point_index = 2;
inline void GadgetPlatformBin::clear_point_index() {
  point_index_ = 0;
}
inline ::google::protobuf::int32 GadgetPlatformBin::point_index() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlatformBin.point_index)
  return point_index_;
}
inline void GadgetPlatformBin::set_point_index(::google::protobuf::int32 value) {
  
  point_index_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlatformBin.point_index)
}

// bool is_started = 3;
inline void GadgetPlatformBin::clear_is_started() {
  is_started_ = false;
}
inline bool GadgetPlatformBin::is_started() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlatformBin.is_started)
  return is_started_;
}
inline void GadgetPlatformBin::set_is_started(bool value) {
  
  is_started_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlatformBin.is_started)
}

// uint32 point_id = 4;
inline void GadgetPlatformBin::clear_point_id() {
  point_id_ = 0u;
}
inline ::google::protobuf::uint32 GadgetPlatformBin::point_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlatformBin.point_id)
  return point_id_;
}
inline void GadgetPlatformBin::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlatformBin.point_id)
}

// uint32 moving_platform_type = 5;
inline void GadgetPlatformBin::clear_moving_platform_type() {
  moving_platform_type_ = 0u;
}
inline ::google::protobuf::uint32 GadgetPlatformBin::moving_platform_type() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlatformBin.moving_platform_type)
  return moving_platform_type_;
}
inline void GadgetPlatformBin::set_moving_platform_type(::google::protobuf::uint32 value) {
  
  moving_platform_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlatformBin.moving_platform_type)
}

// -------------------------------------------------------------------

// BossChestBin

// repeated uint32 remain_uid_list = 1;
inline int BossChestBin::remain_uid_list_size() const {
  return remain_uid_list_.size();
}
inline void BossChestBin::clear_remain_uid_list() {
  remain_uid_list_.Clear();
}
inline ::google::protobuf::uint32 BossChestBin::remain_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BossChestBin.remain_uid_list)
  return remain_uid_list_.Get(index);
}
inline void BossChestBin::set_remain_uid_list(int index, ::google::protobuf::uint32 value) {
  remain_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BossChestBin.remain_uid_list)
}
inline void BossChestBin::add_remain_uid_list(::google::protobuf::uint32 value) {
  remain_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BossChestBin.remain_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BossChestBin::remain_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.BossChestBin.remain_uid_list)
  return remain_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BossChestBin::mutable_remain_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BossChestBin.remain_uid_list)
  return &remain_uid_list_;
}

// fixed32 dead_time = 2;
inline void BossChestBin::clear_dead_time() {
  dead_time_ = 0u;
}
inline ::google::protobuf::uint32 BossChestBin::dead_time() const {
  // @@protoc_insertion_point(field_get:proto.BossChestBin.dead_time)
  return dead_time_;
}
inline void BossChestBin::set_dead_time(::google::protobuf::uint32 value) {
  
  dead_time_ = value;
  // @@protoc_insertion_point(field_set:proto.BossChestBin.dead_time)
}

// uint32 dead_level = 3;
inline void BossChestBin::clear_dead_level() {
  dead_level_ = 0u;
}
inline ::google::protobuf::uint32 BossChestBin::dead_level() const {
  // @@protoc_insertion_point(field_get:proto.BossChestBin.dead_level)
  return dead_level_;
}
inline void BossChestBin::set_dead_level(::google::protobuf::uint32 value) {
  
  dead_level_ = value;
  // @@protoc_insertion_point(field_set:proto.BossChestBin.dead_level)
}

// repeated uint32 qualify_uid_list = 4;
inline int BossChestBin::qualify_uid_list_size() const {
  return qualify_uid_list_.size();
}
inline void BossChestBin::clear_qualify_uid_list() {
  qualify_uid_list_.Clear();
}
inline ::google::protobuf::uint32 BossChestBin::qualify_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BossChestBin.qualify_uid_list)
  return qualify_uid_list_.Get(index);
}
inline void BossChestBin::set_qualify_uid_list(int index, ::google::protobuf::uint32 value) {
  qualify_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BossChestBin.qualify_uid_list)
}
inline void BossChestBin::add_qualify_uid_list(::google::protobuf::uint32 value) {
  qualify_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BossChestBin.qualify_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BossChestBin::qualify_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.BossChestBin.qualify_uid_list)
  return qualify_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BossChestBin::mutable_qualify_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BossChestBin.qualify_uid_list)
  return &qualify_uid_list_;
}

// -------------------------------------------------------------------

// ChallengeRecordBin

// uint32 challenge_index = 1;
inline void ChallengeRecordBin::clear_challenge_index() {
  challenge_index_ = 0u;
}
inline ::google::protobuf::uint32 ChallengeRecordBin::challenge_index() const {
  // @@protoc_insertion_point(field_get:proto.ChallengeRecordBin.challenge_index)
  return challenge_index_;
}
inline void ChallengeRecordBin::set_challenge_index(::google::protobuf::uint32 value) {
  
  challenge_index_ = value;
  // @@protoc_insertion_point(field_set:proto.ChallengeRecordBin.challenge_index)
}

// uint32 challenge_id = 2;
inline void ChallengeRecordBin::clear_challenge_id() {
  challenge_id_ = 0u;
}
inline ::google::protobuf::uint32 ChallengeRecordBin::challenge_id() const {
  // @@protoc_insertion_point(field_get:proto.ChallengeRecordBin.challenge_id)
  return challenge_id_;
}
inline void ChallengeRecordBin::set_challenge_id(::google::protobuf::uint32 value) {
  
  challenge_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChallengeRecordBin.challenge_id)
}

// uint32 challenge_record_type = 3;
inline void ChallengeRecordBin::clear_challenge_record_type() {
  challenge_record_type_ = 0u;
}
inline ::google::protobuf::uint32 ChallengeRecordBin::challenge_record_type() const {
  // @@protoc_insertion_point(field_get:proto.ChallengeRecordBin.challenge_record_type)
  return challenge_record_type_;
}
inline void ChallengeRecordBin::set_challenge_record_type(::google::protobuf::uint32 value) {
  
  challenge_record_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ChallengeRecordBin.challenge_record_type)
}

// uint32 best_value = 4;
inline void ChallengeRecordBin::clear_best_value() {
  best_value_ = 0u;
}
inline ::google::protobuf::uint32 ChallengeRecordBin::best_value() const {
  // @@protoc_insertion_point(field_get:proto.ChallengeRecordBin.best_value)
  return best_value_;
}
inline void ChallengeRecordBin::set_best_value(::google::protobuf::uint32 value) {
  
  best_value_ = value;
  // @@protoc_insertion_point(field_set:proto.ChallengeRecordBin.best_value)
}

// -------------------------------------------------------------------

// BossDieInfoBin

// repeated uint32 surround_uid_list = 1;
inline int BossDieInfoBin::surround_uid_list_size() const {
  return surround_uid_list_.size();
}
inline void BossDieInfoBin::clear_surround_uid_list() {
  surround_uid_list_.Clear();
}
inline ::google::protobuf::uint32 BossDieInfoBin::surround_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BossDieInfoBin.surround_uid_list)
  return surround_uid_list_.Get(index);
}
inline void BossDieInfoBin::set_surround_uid_list(int index, ::google::protobuf::uint32 value) {
  surround_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BossDieInfoBin.surround_uid_list)
}
inline void BossDieInfoBin::add_surround_uid_list(::google::protobuf::uint32 value) {
  surround_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BossDieInfoBin.surround_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BossDieInfoBin::surround_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.BossDieInfoBin.surround_uid_list)
  return surround_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BossDieInfoBin::mutable_surround_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BossDieInfoBin.surround_uid_list)
  return &surround_uid_list_;
}

// fixed32 dead_time = 2;
inline void BossDieInfoBin::clear_dead_time() {
  dead_time_ = 0u;
}
inline ::google::protobuf::uint32 BossDieInfoBin::dead_time() const {
  // @@protoc_insertion_point(field_get:proto.BossDieInfoBin.dead_time)
  return dead_time_;
}
inline void BossDieInfoBin::set_dead_time(::google::protobuf::uint32 value) {
  
  dead_time_ = value;
  // @@protoc_insertion_point(field_set:proto.BossDieInfoBin.dead_time)
}

// uint32 dead_level = 3;
inline void BossDieInfoBin::clear_dead_level() {
  dead_level_ = 0u;
}
inline ::google::protobuf::uint32 BossDieInfoBin::dead_level() const {
  // @@protoc_insertion_point(field_get:proto.BossDieInfoBin.dead_level)
  return dead_level_;
}
inline void BossDieInfoBin::set_dead_level(::google::protobuf::uint32 value) {
  
  dead_level_ = value;
  // @@protoc_insertion_point(field_set:proto.BossDieInfoBin.dead_level)
}

// -------------------------------------------------------------------

// GroupTriggerBin

// uint32 trigger_count = 1;
inline void GroupTriggerBin::clear_trigger_count() {
  trigger_count_ = 0u;
}
inline ::google::protobuf::uint32 GroupTriggerBin::trigger_count() const {
  // @@protoc_insertion_point(field_get:proto.GroupTriggerBin.trigger_count)
  return trigger_count_;
}
inline void GroupTriggerBin::set_trigger_count(::google::protobuf::uint32 value) {
  
  trigger_count_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupTriggerBin.trigger_count)
}

// uint32 config_id = 2;
inline void GroupTriggerBin::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 GroupTriggerBin::config_id() const {
  // @@protoc_insertion_point(field_get:proto.GroupTriggerBin.config_id)
  return config_id_;
}
inline void GroupTriggerBin::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupTriggerBin.config_id)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GeneralRewardBin

// uint32 drop_id = 1;
inline void GeneralRewardBin::clear_drop_id() {
  drop_id_ = 0u;
}
inline ::google::protobuf::uint32 GeneralRewardBin::drop_id() const {
  // @@protoc_insertion_point(field_get:proto.GeneralRewardBin.drop_id)
  return drop_id_;
}
inline void GeneralRewardBin::set_drop_id(::google::protobuf::uint32 value) {
  
  drop_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GeneralRewardBin.drop_id)
}

// uint32 reward_id = 2;
inline void GeneralRewardBin::clear_reward_id() {
  reward_id_ = 0u;
}
inline ::google::protobuf::uint32 GeneralRewardBin::reward_id() const {
  // @@protoc_insertion_point(field_get:proto.GeneralRewardBin.reward_id)
  return reward_id_;
}
inline void GeneralRewardBin::set_reward_id(::google::protobuf::uint32 value) {
  
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GeneralRewardBin.reward_id)
}

// uint32 drop_num = 3;
inline void GeneralRewardBin::clear_drop_num() {
  drop_num_ = 0u;
}
inline ::google::protobuf::uint32 GeneralRewardBin::drop_num() const {
  // @@protoc_insertion_point(field_get:proto.GeneralRewardBin.drop_num)
  return drop_num_;
}
inline void GeneralRewardBin::set_drop_num(::google::protobuf::uint32 value) {
  
  drop_num_ = value;
  // @@protoc_insertion_point(field_set:proto.GeneralRewardBin.drop_num)
}

// map<uint32, uint32> drop_map = 4;
inline int GeneralRewardBin::drop_map_size() const {
  return drop_map_.size();
}
inline void GeneralRewardBin::clear_drop_map() {
  drop_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
GeneralRewardBin::drop_map() const {
  // @@protoc_insertion_point(field_map:proto.GeneralRewardBin.drop_map)
  return drop_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
GeneralRewardBin::mutable_drop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GeneralRewardBin.drop_map)
  return drop_map_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GadgetGeneralRewardBin

// uint32 resin = 2;
inline void GadgetGeneralRewardBin::clear_resin() {
  resin_ = 0u;
}
inline ::google::protobuf::uint32 GadgetGeneralRewardBin::resin() const {
  // @@protoc_insertion_point(field_get:proto.GadgetGeneralRewardBin.resin)
  return resin_;
}
inline void GadgetGeneralRewardBin::set_resin(::google::protobuf::uint32 value) {
  
  resin_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetGeneralRewardBin.resin)
}

// uint32 dead_time = 3;
inline void GadgetGeneralRewardBin::clear_dead_time() {
  dead_time_ = 0u;
}
inline ::google::protobuf::uint32 GadgetGeneralRewardBin::dead_time() const {
  // @@protoc_insertion_point(field_get:proto.GadgetGeneralRewardBin.dead_time)
  return dead_time_;
}
inline void GadgetGeneralRewardBin::set_dead_time(::google::protobuf::uint32 value) {
  
  dead_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetGeneralRewardBin.dead_time)
}

// repeated uint32 remain_uid_list = 5;
inline int GadgetGeneralRewardBin::remain_uid_list_size() const {
  return remain_uid_list_.size();
}
inline void GadgetGeneralRewardBin::clear_remain_uid_list() {
  remain_uid_list_.Clear();
}
inline ::google::protobuf::uint32 GadgetGeneralRewardBin::remain_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GadgetGeneralRewardBin.remain_uid_list)
  return remain_uid_list_.Get(index);
}
inline void GadgetGeneralRewardBin::set_remain_uid_list(int index, ::google::protobuf::uint32 value) {
  remain_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GadgetGeneralRewardBin.remain_uid_list)
}
inline void GadgetGeneralRewardBin::add_remain_uid_list(::google::protobuf::uint32 value) {
  remain_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GadgetGeneralRewardBin.remain_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GadgetGeneralRewardBin::remain_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.GadgetGeneralRewardBin.remain_uid_list)
  return remain_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GadgetGeneralRewardBin::mutable_remain_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GadgetGeneralRewardBin.remain_uid_list)
  return &remain_uid_list_;
}

// map<uint32, .proto.GeneralRewardBin> qualify_info_map = 7;
inline int GadgetGeneralRewardBin::qualify_info_map_size() const {
  return qualify_info_map_.size();
}
inline void GadgetGeneralRewardBin::clear_qualify_info_map() {
  qualify_info_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GeneralRewardBin >&
GadgetGeneralRewardBin::qualify_info_map() const {
  // @@protoc_insertion_point(field_map:proto.GadgetGeneralRewardBin.qualify_info_map)
  return qualify_info_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GeneralRewardBin >*
GadgetGeneralRewardBin::mutable_qualify_info_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GadgetGeneralRewardBin.qualify_info_map)
  return qualify_info_map_.MutableMap();
}

// uint32 destroy_cd = 8;
inline void GadgetGeneralRewardBin::clear_destroy_cd() {
  destroy_cd_ = 0u;
}
inline ::google::protobuf::uint32 GadgetGeneralRewardBin::destroy_cd() const {
  // @@protoc_insertion_point(field_get:proto.GadgetGeneralRewardBin.destroy_cd)
  return destroy_cd_;
}
inline void GadgetGeneralRewardBin::set_destroy_cd(::google::protobuf::uint32 value) {
  
  destroy_cd_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetGeneralRewardBin.destroy_cd)
}

// uint32 item_limit_type = 9;
inline void GadgetGeneralRewardBin::clear_item_limit_type() {
  item_limit_type_ = 0u;
}
inline ::google::protobuf::uint32 GadgetGeneralRewardBin::item_limit_type() const {
  // @@protoc_insertion_point(field_get:proto.GadgetGeneralRewardBin.item_limit_type)
  return item_limit_type_;
}
inline void GadgetGeneralRewardBin::set_item_limit_type(::google::protobuf::uint32 value) {
  
  item_limit_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetGeneralRewardBin.item_limit_type)
}

// .proto.ItemParamBin item_param = 10;
inline bool GadgetGeneralRewardBin::has_item_param() const {
  return this != internal_default_instance() && item_param_ != NULL;
}
inline void GadgetGeneralRewardBin::clear_item_param() {
  if (GetArenaNoVirtual() == NULL && item_param_ != NULL) delete item_param_;
  item_param_ = NULL;
}
inline const ::proto::ItemParamBin& GadgetGeneralRewardBin::item_param() const {
  const ::proto::ItemParamBin* p = item_param_;
  // @@protoc_insertion_point(field_get:proto.GadgetGeneralRewardBin.item_param)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ItemParamBin*>(
      &::proto::_ItemParamBin_default_instance_);
}
inline ::proto::ItemParamBin* GadgetGeneralRewardBin::mutable_item_param() {
  
  if (item_param_ == NULL) {
    item_param_ = new ::proto::ItemParamBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.GadgetGeneralRewardBin.item_param)
  return item_param_;
}
inline ::proto::ItemParamBin* GadgetGeneralRewardBin::release_item_param() {
  // @@protoc_insertion_point(field_release:proto.GadgetGeneralRewardBin.item_param)
  
  ::proto::ItemParamBin* temp = item_param_;
  item_param_ = NULL;
  return temp;
}
inline void GadgetGeneralRewardBin::set_allocated_item_param(::proto::ItemParamBin* item_param) {
  delete item_param_;
  item_param_ = item_param;
  if (item_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GadgetGeneralRewardBin.item_param)
}

// repeated uint32 open_state_list = 11;
inline int GadgetGeneralRewardBin::open_state_list_size() const {
  return open_state_list_.size();
}
inline void GadgetGeneralRewardBin::clear_open_state_list() {
  open_state_list_.Clear();
}
inline ::google::protobuf::uint32 GadgetGeneralRewardBin::open_state_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GadgetGeneralRewardBin.open_state_list)
  return open_state_list_.Get(index);
}
inline void GadgetGeneralRewardBin::set_open_state_list(int index, ::google::protobuf::uint32 value) {
  open_state_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GadgetGeneralRewardBin.open_state_list)
}
inline void GadgetGeneralRewardBin::add_open_state_list(::google::protobuf::uint32 value) {
  open_state_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GadgetGeneralRewardBin.open_state_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GadgetGeneralRewardBin::open_state_list() const {
  // @@protoc_insertion_point(field_list:proto.GadgetGeneralRewardBin.open_state_list)
  return open_state_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GadgetGeneralRewardBin::mutable_open_state_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GadgetGeneralRewardBin.open_state_list)
  return &open_state_list_;
}

// -------------------------------------------------------------------

// FishStockBin

// uint32 stock_type = 1;
inline void FishStockBin::clear_stock_type() {
  stock_type_ = 0u;
}
inline ::google::protobuf::uint32 FishStockBin::stock_type() const {
  // @@protoc_insertion_point(field_get:proto.FishStockBin.stock_type)
  return stock_type_;
}
inline void FishStockBin::set_stock_type(::google::protobuf::uint32 value) {
  
  stock_type_ = value;
  // @@protoc_insertion_point(field_set:proto.FishStockBin.stock_type)
}

// uint32 gen_fish_num = 2;
inline void FishStockBin::clear_gen_fish_num() {
  gen_fish_num_ = 0u;
}
inline ::google::protobuf::uint32 FishStockBin::gen_fish_num() const {
  // @@protoc_insertion_point(field_get:proto.FishStockBin.gen_fish_num)
  return gen_fish_num_;
}
inline void FishStockBin::set_gen_fish_num(::google::protobuf::uint32 value) {
  
  gen_fish_num_ = value;
  // @@protoc_insertion_point(field_set:proto.FishStockBin.gen_fish_num)
}

// uint32 max_num = 3;
inline void FishStockBin::clear_max_num() {
  max_num_ = 0u;
}
inline ::google::protobuf::uint32 FishStockBin::max_num() const {
  // @@protoc_insertion_point(field_get:proto.FishStockBin.max_num)
  return max_num_;
}
inline void FishStockBin::set_max_num(::google::protobuf::uint32 value) {
  
  max_num_ = value;
  // @@protoc_insertion_point(field_set:proto.FishStockBin.max_num)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GadgetFishPoolBin

// repeated .proto.FishStockBin fish_stock_list = 1;
inline int GadgetFishPoolBin::fish_stock_list_size() const {
  return fish_stock_list_.size();
}
inline void GadgetFishPoolBin::clear_fish_stock_list() {
  fish_stock_list_.Clear();
}
inline const ::proto::FishStockBin& GadgetFishPoolBin::fish_stock_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GadgetFishPoolBin.fish_stock_list)
  return fish_stock_list_.Get(index);
}
inline ::proto::FishStockBin* GadgetFishPoolBin::mutable_fish_stock_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GadgetFishPoolBin.fish_stock_list)
  return fish_stock_list_.Mutable(index);
}
inline ::proto::FishStockBin* GadgetFishPoolBin::add_fish_stock_list() {
  // @@protoc_insertion_point(field_add:proto.GadgetFishPoolBin.fish_stock_list)
  return fish_stock_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::FishStockBin >*
GadgetFishPoolBin::mutable_fish_stock_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GadgetFishPoolBin.fish_stock_list)
  return &fish_stock_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::FishStockBin >&
GadgetFishPoolBin::fish_stock_list() const {
  // @@protoc_insertion_point(field_list:proto.GadgetFishPoolBin.fish_stock_list)
  return fish_stock_list_;
}

// uint32 today_fish_num = 2;
inline void GadgetFishPoolBin::clear_today_fish_num() {
  today_fish_num_ = 0u;
}
inline ::google::protobuf::uint32 GadgetFishPoolBin::today_fish_num() const {
  // @@protoc_insertion_point(field_get:proto.GadgetFishPoolBin.today_fish_num)
  return today_fish_num_;
}
inline void GadgetFishPoolBin::set_today_fish_num(::google::protobuf::uint32 value) {
  
  today_fish_num_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetFishPoolBin.today_fish_num)
}

// uint32 last_refresh_today_fish_time = 3;
inline void GadgetFishPoolBin::clear_last_refresh_today_fish_time() {
  last_refresh_today_fish_time_ = 0u;
}
inline ::google::protobuf::uint32 GadgetFishPoolBin::last_refresh_today_fish_time() const {
  // @@protoc_insertion_point(field_get:proto.GadgetFishPoolBin.last_refresh_today_fish_time)
  return last_refresh_today_fish_time_;
}
inline void GadgetFishPoolBin::set_last_refresh_today_fish_time(::google::protobuf::uint32 value) {
  
  last_refresh_today_fish_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetFishPoolBin.last_refresh_today_fish_time)
}

// map<uint32, uint32> cached_fish_map = 4;
inline int GadgetFishPoolBin::cached_fish_map_size() const {
  return cached_fish_map_.size();
}
inline void GadgetFishPoolBin::clear_cached_fish_map() {
  cached_fish_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
GadgetFishPoolBin::cached_fish_map() const {
  // @@protoc_insertion_point(field_map:proto.GadgetFishPoolBin.cached_fish_map)
  return cached_fish_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
GadgetFishPoolBin::mutable_cached_fish_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GadgetFishPoolBin.cached_fish_map)
  return cached_fish_map_.MutableMap();
}

// -------------------------------------------------------------------

// CustomGadgetNodeInfoBin

// int32 parent_index = 1;
inline void CustomGadgetNodeInfoBin::clear_parent_index() {
  parent_index_ = 0;
}
inline ::google::protobuf::int32 CustomGadgetNodeInfoBin::parent_index() const {
  // @@protoc_insertion_point(field_get:proto.CustomGadgetNodeInfoBin.parent_index)
  return parent_index_;
}
inline void CustomGadgetNodeInfoBin::set_parent_index(::google::protobuf::int32 value) {
  
  parent_index_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomGadgetNodeInfoBin.parent_index)
}

// uint32 config_id = 2;
inline void CustomGadgetNodeInfoBin::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 CustomGadgetNodeInfoBin::config_id() const {
  // @@protoc_insertion_point(field_get:proto.CustomGadgetNodeInfoBin.config_id)
  return config_id_;
}
inline void CustomGadgetNodeInfoBin::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomGadgetNodeInfoBin.config_id)
}

// string slot_identifier = 3;
inline void CustomGadgetNodeInfoBin::clear_slot_identifier() {
  slot_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CustomGadgetNodeInfoBin::slot_identifier() const {
  // @@protoc_insertion_point(field_get:proto.CustomGadgetNodeInfoBin.slot_identifier)
  return slot_identifier_.GetNoArena();
}
inline void CustomGadgetNodeInfoBin::set_slot_identifier(const ::std::string& value) {
  
  slot_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.CustomGadgetNodeInfoBin.slot_identifier)
}
#if LANG_CXX11
inline void CustomGadgetNodeInfoBin::set_slot_identifier(::std::string&& value) {
  
  slot_identifier_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.CustomGadgetNodeInfoBin.slot_identifier)
}
#endif
inline void CustomGadgetNodeInfoBin::set_slot_identifier(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  slot_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.CustomGadgetNodeInfoBin.slot_identifier)
}
inline void CustomGadgetNodeInfoBin::set_slot_identifier(const char* value, size_t size) {
  
  slot_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.CustomGadgetNodeInfoBin.slot_identifier)
}
inline ::std::string* CustomGadgetNodeInfoBin::mutable_slot_identifier() {
  
  // @@protoc_insertion_point(field_mutable:proto.CustomGadgetNodeInfoBin.slot_identifier)
  return slot_identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CustomGadgetNodeInfoBin::release_slot_identifier() {
  // @@protoc_insertion_point(field_release:proto.CustomGadgetNodeInfoBin.slot_identifier)
  
  return slot_identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CustomGadgetNodeInfoBin::set_allocated_slot_identifier(::std::string* slot_identifier) {
  if (slot_identifier != NULL) {
    
  } else {
    
  }
  slot_identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), slot_identifier);
  // @@protoc_insertion_point(field_set_allocated:proto.CustomGadgetNodeInfoBin.slot_identifier)
}

// -------------------------------------------------------------------

// CustomGadgetTreeInfoBin

// repeated .proto.CustomGadgetNodeInfoBin node_list = 1;
inline int CustomGadgetTreeInfoBin::node_list_size() const {
  return node_list_.size();
}
inline void CustomGadgetTreeInfoBin::clear_node_list() {
  node_list_.Clear();
}
inline const ::proto::CustomGadgetNodeInfoBin& CustomGadgetTreeInfoBin::node_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CustomGadgetTreeInfoBin.node_list)
  return node_list_.Get(index);
}
inline ::proto::CustomGadgetNodeInfoBin* CustomGadgetTreeInfoBin::mutable_node_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CustomGadgetTreeInfoBin.node_list)
  return node_list_.Mutable(index);
}
inline ::proto::CustomGadgetNodeInfoBin* CustomGadgetTreeInfoBin::add_node_list() {
  // @@protoc_insertion_point(field_add:proto.CustomGadgetTreeInfoBin.node_list)
  return node_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::CustomGadgetNodeInfoBin >*
CustomGadgetTreeInfoBin::mutable_node_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CustomGadgetTreeInfoBin.node_list)
  return &node_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::CustomGadgetNodeInfoBin >&
CustomGadgetTreeInfoBin::node_list() const {
  // @@protoc_insertion_point(field_list:proto.CustomGadgetTreeInfoBin.node_list)
  return node_list_;
}

// -------------------------------------------------------------------

// GadgetWorktopBin

// repeated uint32 option_list = 1;
inline int GadgetWorktopBin::option_list_size() const {
  return option_list_.size();
}
inline void GadgetWorktopBin::clear_option_list() {
  option_list_.Clear();
}
inline ::google::protobuf::uint32 GadgetWorktopBin::option_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GadgetWorktopBin.option_list)
  return option_list_.Get(index);
}
inline void GadgetWorktopBin::set_option_list(int index, ::google::protobuf::uint32 value) {
  option_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GadgetWorktopBin.option_list)
}
inline void GadgetWorktopBin::add_option_list(::google::protobuf::uint32 value) {
  option_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GadgetWorktopBin.option_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GadgetWorktopBin::option_list() const {
  // @@protoc_insertion_point(field_list:proto.GadgetWorktopBin.option_list)
  return option_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GadgetWorktopBin::mutable_option_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GadgetWorktopBin.option_list)
  return &option_list_;
}

// -------------------------------------------------------------------

// GroupGadgetBin

// uint32 gadget_state = 1;
inline void GroupGadgetBin::clear_gadget_state() {
  gadget_state_ = 0u;
}
inline ::google::protobuf::uint32 GroupGadgetBin::gadget_state() const {
  // @@protoc_insertion_point(field_get:proto.GroupGadgetBin.gadget_state)
  return gadget_state_;
}
inline void GroupGadgetBin::set_gadget_state(::google::protobuf::uint32 value) {
  
  gadget_state_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupGadgetBin.gadget_state)
}

// bool is_enable_interact = 2;
inline void GroupGadgetBin::clear_is_enable_interact() {
  is_enable_interact_ = false;
}
inline bool GroupGadgetBin::is_enable_interact() const {
  // @@protoc_insertion_point(field_get:proto.GroupGadgetBin.is_enable_interact)
  return is_enable_interact_;
}
inline void GroupGadgetBin::set_is_enable_interact(bool value) {
  
  is_enable_interact_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupGadgetBin.is_enable_interact)
}

// uint32 gadget_talk_state = 3;
inline void GroupGadgetBin::clear_gadget_talk_state() {
  gadget_talk_state_ = 0u;
}
inline ::google::protobuf::uint32 GroupGadgetBin::gadget_talk_state() const {
  // @@protoc_insertion_point(field_get:proto.GroupGadgetBin.gadget_talk_state)
  return gadget_talk_state_;
}
inline void GroupGadgetBin::set_gadget_talk_state(::google::protobuf::uint32 value) {
  
  gadget_talk_state_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupGadgetBin.gadget_talk_state)
}

// .proto.GadgetPlatformBin platform = 101;
inline bool GroupGadgetBin::has_platform() const {
  return component_case() == kPlatform;
}
inline void GroupGadgetBin::set_has_platform() {
  _oneof_case_[0] = kPlatform;
}
inline void GroupGadgetBin::clear_platform() {
  if (has_platform()) {
    delete component_.platform_;
    clear_has_component();
  }
}
inline  const ::proto::GadgetPlatformBin& GroupGadgetBin::platform() const {
  // @@protoc_insertion_point(field_get:proto.GroupGadgetBin.platform)
  return has_platform()
      ? *component_.platform_
      : ::proto::GadgetPlatformBin::default_instance();
}
inline ::proto::GadgetPlatformBin* GroupGadgetBin::mutable_platform() {
  if (!has_platform()) {
    clear_component();
    set_has_platform();
    component_.platform_ = new ::proto::GadgetPlatformBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.GroupGadgetBin.platform)
  return component_.platform_;
}
inline ::proto::GadgetPlatformBin* GroupGadgetBin::release_platform() {
  // @@protoc_insertion_point(field_release:proto.GroupGadgetBin.platform)
  if (has_platform()) {
    clear_has_component();
    ::proto::GadgetPlatformBin* temp = component_.platform_;
    component_.platform_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void GroupGadgetBin::set_allocated_platform(::proto::GadgetPlatformBin* platform) {
  clear_component();
  if (platform) {
    set_has_platform();
    component_.platform_ = platform;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GroupGadgetBin.platform)
}

// .proto.BossChestBin boss_chest = 102;
inline bool GroupGadgetBin::has_boss_chest() const {
  return component_case() == kBossChest;
}
inline void GroupGadgetBin::set_has_boss_chest() {
  _oneof_case_[0] = kBossChest;
}
inline void GroupGadgetBin::clear_boss_chest() {
  if (has_boss_chest()) {
    delete component_.boss_chest_;
    clear_has_component();
  }
}
inline  const ::proto::BossChestBin& GroupGadgetBin::boss_chest() const {
  // @@protoc_insertion_point(field_get:proto.GroupGadgetBin.boss_chest)
  return has_boss_chest()
      ? *component_.boss_chest_
      : ::proto::BossChestBin::default_instance();
}
inline ::proto::BossChestBin* GroupGadgetBin::mutable_boss_chest() {
  if (!has_boss_chest()) {
    clear_component();
    set_has_boss_chest();
    component_.boss_chest_ = new ::proto::BossChestBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.GroupGadgetBin.boss_chest)
  return component_.boss_chest_;
}
inline ::proto::BossChestBin* GroupGadgetBin::release_boss_chest() {
  // @@protoc_insertion_point(field_release:proto.GroupGadgetBin.boss_chest)
  if (has_boss_chest()) {
    clear_has_component();
    ::proto::BossChestBin* temp = component_.boss_chest_;
    component_.boss_chest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void GroupGadgetBin::set_allocated_boss_chest(::proto::BossChestBin* boss_chest) {
  clear_component();
  if (boss_chest) {
    set_has_boss_chest();
    component_.boss_chest_ = boss_chest;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GroupGadgetBin.boss_chest)
}

// .proto.BlossomChestBin blossom_chest = 103;
inline bool GroupGadgetBin::has_blossom_chest() const {
  return component_case() == kBlossomChest;
}
inline void GroupGadgetBin::set_has_blossom_chest() {
  _oneof_case_[0] = kBlossomChest;
}
inline void GroupGadgetBin::clear_blossom_chest() {
  if (has_blossom_chest()) {
    delete component_.blossom_chest_;
    clear_has_component();
  }
}
inline  const ::proto::BlossomChestBin& GroupGadgetBin::blossom_chest() const {
  // @@protoc_insertion_point(field_get:proto.GroupGadgetBin.blossom_chest)
  return has_blossom_chest()
      ? *component_.blossom_chest_
      : ::proto::BlossomChestBin::default_instance();
}
inline ::proto::BlossomChestBin* GroupGadgetBin::mutable_blossom_chest() {
  if (!has_blossom_chest()) {
    clear_component();
    set_has_blossom_chest();
    component_.blossom_chest_ = new ::proto::BlossomChestBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.GroupGadgetBin.blossom_chest)
  return component_.blossom_chest_;
}
inline ::proto::BlossomChestBin* GroupGadgetBin::release_blossom_chest() {
  // @@protoc_insertion_point(field_release:proto.GroupGadgetBin.blossom_chest)
  if (has_blossom_chest()) {
    clear_has_component();
    ::proto::BlossomChestBin* temp = component_.blossom_chest_;
    component_.blossom_chest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void GroupGadgetBin::set_allocated_blossom_chest(::proto::BlossomChestBin* blossom_chest) {
  clear_component();
  if (blossom_chest) {
    set_has_blossom_chest();
    component_.blossom_chest_ = blossom_chest;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GroupGadgetBin.blossom_chest)
}

// .proto.GadgetGeneralRewardBin general_reward = 104;
inline bool GroupGadgetBin::has_general_reward() const {
  return component_case() == kGeneralReward;
}
inline void GroupGadgetBin::set_has_general_reward() {
  _oneof_case_[0] = kGeneralReward;
}
inline void GroupGadgetBin::clear_general_reward() {
  if (has_general_reward()) {
    delete component_.general_reward_;
    clear_has_component();
  }
}
inline  const ::proto::GadgetGeneralRewardBin& GroupGadgetBin::general_reward() const {
  // @@protoc_insertion_point(field_get:proto.GroupGadgetBin.general_reward)
  return has_general_reward()
      ? *component_.general_reward_
      : ::proto::GadgetGeneralRewardBin::default_instance();
}
inline ::proto::GadgetGeneralRewardBin* GroupGadgetBin::mutable_general_reward() {
  if (!has_general_reward()) {
    clear_component();
    set_has_general_reward();
    component_.general_reward_ = new ::proto::GadgetGeneralRewardBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.GroupGadgetBin.general_reward)
  return component_.general_reward_;
}
inline ::proto::GadgetGeneralRewardBin* GroupGadgetBin::release_general_reward() {
  // @@protoc_insertion_point(field_release:proto.GroupGadgetBin.general_reward)
  if (has_general_reward()) {
    clear_has_component();
    ::proto::GadgetGeneralRewardBin* temp = component_.general_reward_;
    component_.general_reward_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void GroupGadgetBin::set_allocated_general_reward(::proto::GadgetGeneralRewardBin* general_reward) {
  clear_component();
  if (general_reward) {
    set_has_general_reward();
    component_.general_reward_ = general_reward;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GroupGadgetBin.general_reward)
}

// .proto.GadgetFishPoolBin fish_pool = 105;
inline bool GroupGadgetBin::has_fish_pool() const {
  return component_case() == kFishPool;
}
inline void GroupGadgetBin::set_has_fish_pool() {
  _oneof_case_[0] = kFishPool;
}
inline void GroupGadgetBin::clear_fish_pool() {
  if (has_fish_pool()) {
    delete component_.fish_pool_;
    clear_has_component();
  }
}
inline  const ::proto::GadgetFishPoolBin& GroupGadgetBin::fish_pool() const {
  // @@protoc_insertion_point(field_get:proto.GroupGadgetBin.fish_pool)
  return has_fish_pool()
      ? *component_.fish_pool_
      : ::proto::GadgetFishPoolBin::default_instance();
}
inline ::proto::GadgetFishPoolBin* GroupGadgetBin::mutable_fish_pool() {
  if (!has_fish_pool()) {
    clear_component();
    set_has_fish_pool();
    component_.fish_pool_ = new ::proto::GadgetFishPoolBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.GroupGadgetBin.fish_pool)
  return component_.fish_pool_;
}
inline ::proto::GadgetFishPoolBin* GroupGadgetBin::release_fish_pool() {
  // @@protoc_insertion_point(field_release:proto.GroupGadgetBin.fish_pool)
  if (has_fish_pool()) {
    clear_has_component();
    ::proto::GadgetFishPoolBin* temp = component_.fish_pool_;
    component_.fish_pool_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void GroupGadgetBin::set_allocated_fish_pool(::proto::GadgetFishPoolBin* fish_pool) {
  clear_component();
  if (fish_pool) {
    set_has_fish_pool();
    component_.fish_pool_ = fish_pool;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GroupGadgetBin.fish_pool)
}

// .proto.CustomGadgetTreeInfoBin custom_gadget_tree_info = 106;
inline bool GroupGadgetBin::has_custom_gadget_tree_info() const {
  return component_case() == kCustomGadgetTreeInfo;
}
inline void GroupGadgetBin::set_has_custom_gadget_tree_info() {
  _oneof_case_[0] = kCustomGadgetTreeInfo;
}
inline void GroupGadgetBin::clear_custom_gadget_tree_info() {
  if (has_custom_gadget_tree_info()) {
    delete component_.custom_gadget_tree_info_;
    clear_has_component();
  }
}
inline  const ::proto::CustomGadgetTreeInfoBin& GroupGadgetBin::custom_gadget_tree_info() const {
  // @@protoc_insertion_point(field_get:proto.GroupGadgetBin.custom_gadget_tree_info)
  return has_custom_gadget_tree_info()
      ? *component_.custom_gadget_tree_info_
      : ::proto::CustomGadgetTreeInfoBin::default_instance();
}
inline ::proto::CustomGadgetTreeInfoBin* GroupGadgetBin::mutable_custom_gadget_tree_info() {
  if (!has_custom_gadget_tree_info()) {
    clear_component();
    set_has_custom_gadget_tree_info();
    component_.custom_gadget_tree_info_ = new ::proto::CustomGadgetTreeInfoBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.GroupGadgetBin.custom_gadget_tree_info)
  return component_.custom_gadget_tree_info_;
}
inline ::proto::CustomGadgetTreeInfoBin* GroupGadgetBin::release_custom_gadget_tree_info() {
  // @@protoc_insertion_point(field_release:proto.GroupGadgetBin.custom_gadget_tree_info)
  if (has_custom_gadget_tree_info()) {
    clear_has_component();
    ::proto::CustomGadgetTreeInfoBin* temp = component_.custom_gadget_tree_info_;
    component_.custom_gadget_tree_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void GroupGadgetBin::set_allocated_custom_gadget_tree_info(::proto::CustomGadgetTreeInfoBin* custom_gadget_tree_info) {
  clear_component();
  if (custom_gadget_tree_info) {
    set_has_custom_gadget_tree_info();
    component_.custom_gadget_tree_info_ = custom_gadget_tree_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GroupGadgetBin.custom_gadget_tree_info)
}

// .proto.GadgetWorktopBin worktop = 107;
inline bool GroupGadgetBin::has_worktop() const {
  return component_case() == kWorktop;
}
inline void GroupGadgetBin::set_has_worktop() {
  _oneof_case_[0] = kWorktop;
}
inline void GroupGadgetBin::clear_worktop() {
  if (has_worktop()) {
    delete component_.worktop_;
    clear_has_component();
  }
}
inline  const ::proto::GadgetWorktopBin& GroupGadgetBin::worktop() const {
  // @@protoc_insertion_point(field_get:proto.GroupGadgetBin.worktop)
  return has_worktop()
      ? *component_.worktop_
      : ::proto::GadgetWorktopBin::default_instance();
}
inline ::proto::GadgetWorktopBin* GroupGadgetBin::mutable_worktop() {
  if (!has_worktop()) {
    clear_component();
    set_has_worktop();
    component_.worktop_ = new ::proto::GadgetWorktopBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.GroupGadgetBin.worktop)
  return component_.worktop_;
}
inline ::proto::GadgetWorktopBin* GroupGadgetBin::release_worktop() {
  // @@protoc_insertion_point(field_release:proto.GroupGadgetBin.worktop)
  if (has_worktop()) {
    clear_has_component();
    ::proto::GadgetWorktopBin* temp = component_.worktop_;
    component_.worktop_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void GroupGadgetBin::set_allocated_worktop(::proto::GadgetWorktopBin* worktop) {
  clear_component();
  if (worktop) {
    set_has_worktop();
    component_.worktop_ = worktop;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GroupGadgetBin.worktop)
}

inline bool GroupGadgetBin::has_component() const {
  return component_case() != COMPONENT_NOT_SET;
}
inline void GroupGadgetBin::clear_has_component() {
  _oneof_case_[0] = COMPONENT_NOT_SET;
}
inline GroupGadgetBin::ComponentCase GroupGadgetBin::component_case() const {
  return GroupGadgetBin::ComponentCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// GroupMonsterBin

// uint32 dropped_hp_percent = 1;
inline void GroupMonsterBin::clear_dropped_hp_percent() {
  dropped_hp_percent_ = 0u;
}
inline ::google::protobuf::uint32 GroupMonsterBin::dropped_hp_percent() const {
  // @@protoc_insertion_point(field_get:proto.GroupMonsterBin.dropped_hp_percent)
  return dropped_hp_percent_;
}
inline void GroupMonsterBin::set_dropped_hp_percent(::google::protobuf::uint32 value) {
  
  dropped_hp_percent_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupMonsterBin.dropped_hp_percent)
}

// -------------------------------------------------------------------

// GroupGatherBin

// uint32 config_id = 1;
inline void GroupGatherBin::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 GroupGatherBin::config_id() const {
  // @@protoc_insertion_point(field_get:proto.GroupGatherBin.config_id)
  return config_id_;
}
inline void GroupGatherBin::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupGatherBin.config_id)
}

// fixed32 last_refresh_time = 2;
inline void GroupGatherBin::clear_last_refresh_time() {
  last_refresh_time_ = 0u;
}
inline ::google::protobuf::uint32 GroupGatherBin::last_refresh_time() const {
  // @@protoc_insertion_point(field_get:proto.GroupGatherBin.last_refresh_time)
  return last_refresh_time_;
}
inline void GroupGatherBin::set_last_refresh_time(::google::protobuf::uint32 value) {
  
  last_refresh_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupGatherBin.last_refresh_time)
}

// -------------------------------------------------------------------

// GroupRefreshTimeBin

// uint32 save_type = 1;
inline void GroupRefreshTimeBin::clear_save_type() {
  save_type_ = 0u;
}
inline ::google::protobuf::uint32 GroupRefreshTimeBin::save_type() const {
  // @@protoc_insertion_point(field_get:proto.GroupRefreshTimeBin.save_type)
  return save_type_;
}
inline void GroupRefreshTimeBin::set_save_type(::google::protobuf::uint32 value) {
  
  save_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupRefreshTimeBin.save_type)
}

// fixed32 last_refresh_time = 2;
inline void GroupRefreshTimeBin::clear_last_refresh_time() {
  last_refresh_time_ = 0u;
}
inline ::google::protobuf::uint32 GroupRefreshTimeBin::last_refresh_time() const {
  // @@protoc_insertion_point(field_get:proto.GroupRefreshTimeBin.last_refresh_time)
  return last_refresh_time_;
}
inline void GroupRefreshTimeBin::set_last_refresh_time(::google::protobuf::uint32 value) {
  
  last_refresh_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupRefreshTimeBin.last_refresh_time)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GroupBin

// map<uint32, .proto.GroupMonsterBin> monster_map = 1;
inline int GroupBin::monster_map_size() const {
  return monster_map_.size();
}
inline void GroupBin::clear_monster_map() {
  monster_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupMonsterBin >&
GroupBin::monster_map() const {
  // @@protoc_insertion_point(field_map:proto.GroupBin.monster_map)
  return monster_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupMonsterBin >*
GroupBin::mutable_monster_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GroupBin.monster_map)
  return monster_map_.MutableMap();
}

// repeated uint32 del_monster_list = 2;
inline int GroupBin::del_monster_list_size() const {
  return del_monster_list_.size();
}
inline void GroupBin::clear_del_monster_list() {
  del_monster_list_.Clear();
}
inline ::google::protobuf::uint32 GroupBin::del_monster_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.del_monster_list)
  return del_monster_list_.Get(index);
}
inline void GroupBin::set_del_monster_list(int index, ::google::protobuf::uint32 value) {
  del_monster_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GroupBin.del_monster_list)
}
inline void GroupBin::add_del_monster_list(::google::protobuf::uint32 value) {
  del_monster_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GroupBin.del_monster_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GroupBin::del_monster_list() const {
  // @@protoc_insertion_point(field_list:proto.GroupBin.del_monster_list)
  return del_monster_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GroupBin::mutable_del_monster_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GroupBin.del_monster_list)
  return &del_monster_list_;
}

// map<uint32, .proto.GroupGadgetBin> gadget_map = 3;
inline int GroupBin::gadget_map_size() const {
  return gadget_map_.size();
}
inline void GroupBin::clear_gadget_map() {
  gadget_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupGadgetBin >&
GroupBin::gadget_map() const {
  // @@protoc_insertion_point(field_map:proto.GroupBin.gadget_map)
  return gadget_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupGadgetBin >*
GroupBin::mutable_gadget_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GroupBin.gadget_map)
  return gadget_map_.MutableMap();
}

// repeated uint32 del_gadget_list = 4;
inline int GroupBin::del_gadget_list_size() const {
  return del_gadget_list_.size();
}
inline void GroupBin::clear_del_gadget_list() {
  del_gadget_list_.Clear();
}
inline ::google::protobuf::uint32 GroupBin::del_gadget_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.del_gadget_list)
  return del_gadget_list_.Get(index);
}
inline void GroupBin::set_del_gadget_list(int index, ::google::protobuf::uint32 value) {
  del_gadget_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GroupBin.del_gadget_list)
}
inline void GroupBin::add_del_gadget_list(::google::protobuf::uint32 value) {
  del_gadget_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GroupBin.del_gadget_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GroupBin::del_gadget_list() const {
  // @@protoc_insertion_point(field_list:proto.GroupBin.del_gadget_list)
  return del_gadget_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GroupBin::mutable_del_gadget_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GroupBin.del_gadget_list)
  return &del_gadget_list_;
}

// map<string, .proto.GroupTriggerBin> trigger_map = 5;
inline int GroupBin::trigger_map_size() const {
  return trigger_map_.size();
}
inline void GroupBin::clear_trigger_map() {
  trigger_map_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::proto::GroupTriggerBin >&
GroupBin::trigger_map() const {
  // @@protoc_insertion_point(field_map:proto.GroupBin.trigger_map)
  return trigger_map_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::proto::GroupTriggerBin >*
GroupBin::mutable_trigger_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GroupBin.trigger_map)
  return trigger_map_.MutableMap();
}

// map<string, .proto.GroupVariableBin> variable_map = 6;
inline int GroupBin::variable_map_size() const {
  return variable_map_.size();
}
inline void GroupBin::clear_variable_map() {
  variable_map_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >&
GroupBin::variable_map() const {
  // @@protoc_insertion_point(field_map:proto.GroupBin.variable_map)
  return variable_map_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >*
GroupBin::mutable_variable_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GroupBin.variable_map)
  return variable_map_.MutableMap();
}

// uint32 suite_index = 7;
inline void GroupBin::clear_suite_index() {
  suite_index_ = 0u;
}
inline ::google::protobuf::uint32 GroupBin::suite_index() const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.suite_index)
  return suite_index_;
}
inline void GroupBin::set_suite_index(::google::protobuf::uint32 value) {
  
  suite_index_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBin.suite_index)
}

// repeated uint32 show_cutscene_chest_list = 8;
inline int GroupBin::show_cutscene_chest_list_size() const {
  return show_cutscene_chest_list_.size();
}
inline void GroupBin::clear_show_cutscene_chest_list() {
  show_cutscene_chest_list_.Clear();
}
inline ::google::protobuf::uint32 GroupBin::show_cutscene_chest_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.show_cutscene_chest_list)
  return show_cutscene_chest_list_.Get(index);
}
inline void GroupBin::set_show_cutscene_chest_list(int index, ::google::protobuf::uint32 value) {
  show_cutscene_chest_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GroupBin.show_cutscene_chest_list)
}
inline void GroupBin::add_show_cutscene_chest_list(::google::protobuf::uint32 value) {
  show_cutscene_chest_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GroupBin.show_cutscene_chest_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GroupBin::show_cutscene_chest_list() const {
  // @@protoc_insertion_point(field_list:proto.GroupBin.show_cutscene_chest_list)
  return show_cutscene_chest_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GroupBin::mutable_show_cutscene_chest_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GroupBin.show_cutscene_chest_list)
  return &show_cutscene_chest_list_;
}

// repeated .proto.ChallengeRecordBin challenge_record_list = 9;
inline int GroupBin::challenge_record_list_size() const {
  return challenge_record_list_.size();
}
inline void GroupBin::clear_challenge_record_list() {
  challenge_record_list_.Clear();
}
inline const ::proto::ChallengeRecordBin& GroupBin::challenge_record_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.challenge_record_list)
  return challenge_record_list_.Get(index);
}
inline ::proto::ChallengeRecordBin* GroupBin::mutable_challenge_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GroupBin.challenge_record_list)
  return challenge_record_list_.Mutable(index);
}
inline ::proto::ChallengeRecordBin* GroupBin::add_challenge_record_list() {
  // @@protoc_insertion_point(field_add:proto.GroupBin.challenge_record_list)
  return challenge_record_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ChallengeRecordBin >*
GroupBin::mutable_challenge_record_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GroupBin.challenge_record_list)
  return &challenge_record_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ChallengeRecordBin >&
GroupBin::challenge_record_list() const {
  // @@protoc_insertion_point(field_list:proto.GroupBin.challenge_record_list)
  return challenge_record_list_;
}

// uint32 revise_level = 10;
inline void GroupBin::clear_revise_level() {
  revise_level_ = 0u;
}
inline ::google::protobuf::uint32 GroupBin::revise_level() const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.revise_level)
  return revise_level_;
}
inline void GroupBin::set_revise_level(::google::protobuf::uint32 value) {
  
  revise_level_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBin.revise_level)
}

// fixed32 last_refresh_time = 11;
inline void GroupBin::clear_last_refresh_time() {
  last_refresh_time_ = 0u;
}
inline ::google::protobuf::uint32 GroupBin::last_refresh_time() const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.last_refresh_time)
  return last_refresh_time_;
}
inline void GroupBin::set_last_refresh_time(::google::protobuf::uint32 value) {
  
  last_refresh_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBin.last_refresh_time)
}

// uint32 target_suite_index = 12;
inline void GroupBin::clear_target_suite_index() {
  target_suite_index_ = 0u;
}
inline ::google::protobuf::uint32 GroupBin::target_suite_index() const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.target_suite_index)
  return target_suite_index_;
}
inline void GroupBin::set_target_suite_index(::google::protobuf::uint32 value) {
  
  target_suite_index_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBin.target_suite_index)
}

// map<uint32, .proto.BossDieInfoBin> boss_die_info_map = 13;
inline int GroupBin::boss_die_info_map_size() const {
  return boss_die_info_map_.size();
}
inline void GroupBin::clear_boss_die_info_map() {
  boss_die_info_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BossDieInfoBin >&
GroupBin::boss_die_info_map() const {
  // @@protoc_insertion_point(field_map:proto.GroupBin.boss_die_info_map)
  return boss_die_info_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BossDieInfoBin >*
GroupBin::mutable_boss_die_info_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GroupBin.boss_die_info_map)
  return boss_die_info_map_.MutableMap();
}

// repeated .proto.GroupGatherBin gather_refresh_time_list = 14;
inline int GroupBin::gather_refresh_time_list_size() const {
  return gather_refresh_time_list_.size();
}
inline void GroupBin::clear_gather_refresh_time_list() {
  gather_refresh_time_list_.Clear();
}
inline const ::proto::GroupGatherBin& GroupBin::gather_refresh_time_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.gather_refresh_time_list)
  return gather_refresh_time_list_.Get(index);
}
inline ::proto::GroupGatherBin* GroupBin::mutable_gather_refresh_time_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GroupBin.gather_refresh_time_list)
  return gather_refresh_time_list_.Mutable(index);
}
inline ::proto::GroupGatherBin* GroupBin::add_gather_refresh_time_list() {
  // @@protoc_insertion_point(field_add:proto.GroupBin.gather_refresh_time_list)
  return gather_refresh_time_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::GroupGatherBin >*
GroupBin::mutable_gather_refresh_time_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GroupBin.gather_refresh_time_list)
  return &gather_refresh_time_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::GroupGatherBin >&
GroupBin::gather_refresh_time_list() const {
  // @@protoc_insertion_point(field_list:proto.GroupBin.gather_refresh_time_list)
  return gather_refresh_time_list_;
}

// bool is_replaceable = 15;
inline void GroupBin::clear_is_replaceable() {
  is_replaceable_ = false;
}
inline bool GroupBin::is_replaceable() const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.is_replaceable)
  return is_replaceable_;
}
inline void GroupBin::set_is_replaceable(bool value) {
  
  is_replaceable_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBin.is_replaceable)
}

// uint32 replaceable_version = 16;
inline void GroupBin::clear_replaceable_version() {
  replaceable_version_ = 0u;
}
inline ::google::protobuf::uint32 GroupBin::replaceable_version() const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.replaceable_version)
  return replaceable_version_;
}
inline void GroupBin::set_replaceable_version(::google::protobuf::uint32 value) {
  
  replaceable_version_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBin.replaceable_version)
}

// repeated .proto.GroupTriggerBin trigger_list = 17;
inline int GroupBin::trigger_list_size() const {
  return trigger_list_.size();
}
inline void GroupBin::clear_trigger_list() {
  trigger_list_.Clear();
}
inline const ::proto::GroupTriggerBin& GroupBin::trigger_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.trigger_list)
  return trigger_list_.Get(index);
}
inline ::proto::GroupTriggerBin* GroupBin::mutable_trigger_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GroupBin.trigger_list)
  return trigger_list_.Mutable(index);
}
inline ::proto::GroupTriggerBin* GroupBin::add_trigger_list() {
  // @@protoc_insertion_point(field_add:proto.GroupBin.trigger_list)
  return trigger_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::GroupTriggerBin >*
GroupBin::mutable_trigger_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GroupBin.trigger_list)
  return &trigger_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::GroupTriggerBin >&
GroupBin::trigger_list() const {
  // @@protoc_insertion_point(field_list:proto.GroupBin.trigger_list)
  return trigger_list_;
}

// repeated .proto.GroupRefreshTimeBin group_refresh_list = 18;
inline int GroupBin::group_refresh_list_size() const {
  return group_refresh_list_.size();
}
inline void GroupBin::clear_group_refresh_list() {
  group_refresh_list_.Clear();
}
inline const ::proto::GroupRefreshTimeBin& GroupBin::group_refresh_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.group_refresh_list)
  return group_refresh_list_.Get(index);
}
inline ::proto::GroupRefreshTimeBin* GroupBin::mutable_group_refresh_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GroupBin.group_refresh_list)
  return group_refresh_list_.Mutable(index);
}
inline ::proto::GroupRefreshTimeBin* GroupBin::add_group_refresh_list() {
  // @@protoc_insertion_point(field_add:proto.GroupBin.group_refresh_list)
  return group_refresh_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::GroupRefreshTimeBin >*
GroupBin::mutable_group_refresh_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GroupBin.group_refresh_list)
  return &group_refresh_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::GroupRefreshTimeBin >&
GroupBin::group_refresh_list() const {
  // @@protoc_insertion_point(field_list:proto.GroupBin.group_refresh_list)
  return group_refresh_list_;
}

// repeated .proto.GroupVariableConfigIdBin variable_config_id_bin_list = 19;
inline int GroupBin::variable_config_id_bin_list_size() const {
  return variable_config_id_bin_list_.size();
}
inline void GroupBin::clear_variable_config_id_bin_list() {
  variable_config_id_bin_list_.Clear();
}
inline const ::proto::GroupVariableConfigIdBin& GroupBin::variable_config_id_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.variable_config_id_bin_list)
  return variable_config_id_bin_list_.Get(index);
}
inline ::proto::GroupVariableConfigIdBin* GroupBin::mutable_variable_config_id_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GroupBin.variable_config_id_bin_list)
  return variable_config_id_bin_list_.Mutable(index);
}
inline ::proto::GroupVariableConfigIdBin* GroupBin::add_variable_config_id_bin_list() {
  // @@protoc_insertion_point(field_add:proto.GroupBin.variable_config_id_bin_list)
  return variable_config_id_bin_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::GroupVariableConfigIdBin >*
GroupBin::mutable_variable_config_id_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GroupBin.variable_config_id_bin_list)
  return &variable_config_id_bin_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::GroupVariableConfigIdBin >&
GroupBin::variable_config_id_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.GroupBin.variable_config_id_bin_list)
  return variable_config_id_bin_list_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// BlockBin

// map<uint32, bytes> group_map = 1;
inline int BlockBin::group_map_size() const {
  return group_map_.size();
}
inline void BlockBin::clear_group_map() {
  group_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >&
BlockBin::group_map() const {
  // @@protoc_insertion_point(field_map:proto.BlockBin.group_map)
  return group_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >*
BlockBin::mutable_group_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.BlockBin.group_map)
  return group_map_.MutableMap();
}

// map<uint32, .proto.GroupProductBin> group_product_map = 2;
inline int BlockBin::group_product_map_size() const {
  return group_product_map_.size();
}
inline void BlockBin::clear_group_product_map() {
  group_product_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupProductBin >&
BlockBin::group_product_map() const {
  // @@protoc_insertion_point(field_map:proto.BlockBin.group_product_map)
  return group_product_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupProductBin >*
BlockBin::mutable_group_product_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.BlockBin.group_product_map)
  return group_product_map_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_server_5fonly_2fbin_2eblock_2eproto__INCLUDED
