// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_only/bin.home.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "server_only/bin.home.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class HomeBasicCompBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeBasicCompBin>
     _instance;
} _HomeBasicCompBin_default_instance_;
class HomeFurnitureBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeFurnitureBin>
     _instance;
} _HomeFurnitureBin_default_instance_;
class HomeFurnitureSuiteBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeFurnitureSuiteBin>
     _instance;
} _HomeFurnitureSuiteBin_default_instance_;
class HomeNpcBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeNpcBin>
     _instance;
} _HomeNpcBin_default_instance_;
class HomeAnimalBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeAnimalBin>
     _instance;
} _HomeAnimalBin_default_instance_;
class HomeBlockSubFieldBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeBlockSubFieldBin>
     _instance;
} _HomeBlockSubFieldBin_default_instance_;
class HomeBlockFieldBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeBlockFieldBin>
     _instance;
} _HomeBlockFieldBin_default_instance_;
class HomeFurnitureGroupBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeFurnitureGroupBin>
     _instance;
} _HomeFurnitureGroupBin_default_instance_;
class HomeFurnitureCustomSuiteBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeFurnitureCustomSuiteBin>
     _instance;
} _HomeFurnitureCustomSuiteBin_default_instance_;
class HomeBlockBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeBlockBin>
     _instance;
} _HomeBlockBin_default_instance_;
class HomeSceneBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeSceneBin>
     _instance;
} _HomeSceneBin_default_instance_;
class HomeModuleBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeModuleBin>
     _instance;
} _HomeModuleBin_default_instance_;
class HomeSceneCompBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeSceneCompBin>
     _instance;
} _HomeSceneCompBin_default_instance_;
class HomeOfflineMsgExeBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeOfflineMsgExeBin>
     _instance;
} _HomeOfflineMsgExeBin_default_instance_;
class HomeOfflineMsgCompBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeOfflineMsgCompBin>
     _instance;
} _HomeOfflineMsgCompBin_default_instance_;
class HomeFurnitureMakeBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeFurnitureMakeBin>
     _instance;
} _HomeFurnitureMakeBin_default_instance_;
class HomeLimitedShopPoolRecordBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeLimitedShopPoolRecordBin>
     _instance;
} _HomeLimitedShopPoolRecordBin_default_instance_;
class HomeLimitedShopGoodsInfoBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeLimitedShopGoodsInfoBin>
     _instance;
} _HomeLimitedShopGoodsInfoBin_default_instance_;
class HomeLimitedShopNPCPosBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeLimitedShopNPCPosBin>
     _instance;
} _HomeLimitedShopNPCPosBin_default_instance_;
class HomeLimitedShopBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeLimitedShopBin>
     _instance;
} _HomeLimitedShopBin_default_instance_;
class HomePlantSubFieldBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomePlantSubFieldBin>
     _instance;
} _HomePlantSubFieldBin_default_instance_;
class HomePlantFieldBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomePlantFieldBin>
     _instance;
} _HomePlantFieldBin_default_instance_;
class HomePlantBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomePlantBin>
     _instance;
} _HomePlantBin_default_instance_;
class HomeFishpondFarmingBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeFishpondFarmingBin>
     _instance;
} _HomeFishpondFarmingBin_default_instance_;
class HomeScenePointFishFarmingBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeScenePointFishFarmingBin>
     _instance;
} _HomeScenePointFishFarmingBin_default_instance_;
class HomeModuleFishFarmingBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeModuleFishFarmingBin>
     _instance;
} _HomeModuleFishFarmingBin_default_instance_;
class HomeFishFarmingBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeFishFarmingBin>
     _instance;
} _HomeFishFarmingBin_default_instance_;
class HomeCustomFurnitureNodeInfoBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeCustomFurnitureNodeInfoBin>
     _instance;
} _HomeCustomFurnitureNodeInfoBin_default_instance_;
class HomeOneCustomFurnitureBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeOneCustomFurnitureBin>
     _instance;
} _HomeOneCustomFurnitureBin_default_instance_;
class HomeModuleCustomFurnitureBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeModuleCustomFurnitureBin>
     _instance;
} _HomeModuleCustomFurnitureBin_default_instance_;
class HomeCustomFurnitureBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeCustomFurnitureBin>
     _instance;
} _HomeCustomFurnitureBin_default_instance_;
class HomeOnePictureFrameBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeOnePictureFrameBin>
     _instance;
} _HomeOnePictureFrameBin_default_instance_;
class HomeModulePictureFrameBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeModulePictureFrameBin>
     _instance;
} _HomeModulePictureFrameBin_default_instance_;
class HomePictureFrameBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomePictureFrameBin>
     _instance;
} _HomePictureFrameBin_default_instance_;
class HomeGroupPlayerInfoBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeGroupPlayerInfoBin>
     _instance;
} _HomeGroupPlayerInfoBin_default_instance_;
class HomeRacingGalleryRecordBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeRacingGalleryRecordBin>
     _instance;
} _HomeRacingGalleryRecordBin_default_instance_;
class HomeRacingRecordBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeRacingRecordBin>
     _instance;
} _HomeRacingRecordBin_default_instance_;
class HomeBalloonGalleryRecordBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeBalloonGalleryRecordBin>
     _instance;
} _HomeBalloonGalleryRecordBin_default_instance_;
class HomeBalloonRecordBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeBalloonRecordBin>
     _instance;
} _HomeBalloonRecordBin_default_instance_;
class HomeStakePlayRecordBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeStakePlayRecordBin>
     _instance;
} _HomeStakePlayRecordBin_default_instance_;
class HomeStakeRecordBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeStakeRecordBin>
     _instance;
} _HomeStakeRecordBin_default_instance_;
class HomeSeekFurniturePlayerScoreBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeSeekFurniturePlayerScoreBin>
     _instance;
} _HomeSeekFurniturePlayerScoreBin_default_instance_;
class HomeSeekFurnitureOneRecordBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeSeekFurnitureOneRecordBin>
     _instance;
} _HomeSeekFurnitureOneRecordBin_default_instance_;
class HomeSeekFurnitureAllRecordBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeSeekFurnitureAllRecordBin>
     _instance;
} _HomeSeekFurnitureAllRecordBin_default_instance_;
class HomeGroupRecordBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeGroupRecordBin>
     _instance;
  const ::proto::HomeRacingRecordBin* racing_gallery_info_bin_;
  const ::proto::HomeBalloonRecordBin* balloon_gallery_info_bin_;
  const ::proto::HomeStakeRecordBin* stake_play_info_bin_;
  const ::proto::HomeSeekFurnitureAllRecordBin* seek_furniture_play_info_bin_;
} _HomeGroupRecordBin_default_instance_;
class HomeGroupRecordCompBin_GroupRecordMapBinEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeGroupRecordCompBin::HomeGroupRecordCompBin_GroupRecordMapBinEntry>
     _instance;
} _HomeGroupRecordCompBin_GroupRecordMapBinEntry_default_instance_;
class HomeGroupRecordCompBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeGroupRecordCompBin>
     _instance;
} _HomeGroupRecordCompBin_default_instance_;
class HomeBlueprintCompBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeBlueprintCompBin>
     _instance;
} _HomeBlueprintCompBin_default_instance_;
class HomeDataBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeDataBin>
     _instance;
} _HomeDataBin_default_instance_;
class HomeDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HomeData>
     _instance;
} _HomeData_default_instance_;

namespace protobuf_server_5fonly_2fbin_2ehome_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[50];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBasicCompBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBasicCompBin, trans_no_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBasicCompBin, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBasicCompBin, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBasicCompBin, owner_nick_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBasicCompBin, total_home_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBasicCompBin, home_time_ms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFurnitureBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFurnitureBin, furniture_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFurnitureBin, spawn_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFurnitureBin, spawn_rot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFurnitureBin, parent_furniture_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFurnitureBin, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFurnitureBin, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFurnitureSuiteBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFurnitureSuiteBin, suite_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFurnitureSuiteBin, spawn_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFurnitureSuiteBin, included_furniture_index_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFurnitureSuiteBin, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFurnitureSuiteBin, is_allow_summon_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeNpcBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeNpcBin, avatar_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeNpcBin, spawn_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeNpcBin, spawn_rot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeNpcBin, costume_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeAnimalBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeAnimalBin, furniture_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeAnimalBin, spawn_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeAnimalBin, spawn_rot_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBlockSubFieldBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBlockSubFieldBin, spawn_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBlockSubFieldBin, spawn_rot_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBlockFieldBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBlockFieldBin, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBlockFieldBin, furniture_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBlockFieldBin, spawn_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBlockFieldBin, spawn_rot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBlockFieldBin, sub_field_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFurnitureGroupBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFurnitureGroupBin, group_furniture_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFurnitureGroupBin, virtual_furniure_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFurnitureCustomSuiteBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFurnitureCustomSuiteBin, spawn_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFurnitureCustomSuiteBin, included_furniture_index_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFurnitureCustomSuiteBin, guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBlockBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBlockBin, block_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBlockBin, persistent_furniture_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBlockBin, deploy_furniure_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBlockBin, deploy_npc_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBlockBin, furniture_suite_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBlockBin, deploy_animal_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBlockBin, is_unlocked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBlockBin, deploy_field_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBlockBin, deploy_furniture_group_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBlockBin, furniture_custom_suite_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeSceneBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeSceneBin, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeSceneBin, scene_bin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeSceneBin, block_bin_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeSceneBin, is_set_born_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeSceneBin, born_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeSceneBin, born_rot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeSceneBin, door_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeSceneBin, stair_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeSceneBin, main_house_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeSceneBin, djinn_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeSceneBin, tmp_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeSceneBin, save_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeSceneBin, bgm_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeModuleBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeModuleBin, module_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeModuleBin, cur_room_scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeModuleBin, scene_bin_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeSceneCompBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeSceneCompBin, cur_module_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeSceneCompBin, module_bin_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeOfflineMsgExeBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeOfflineMsgExeBin, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeOfflineMsgExeBin, exe_times_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeOfflineMsgCompBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeOfflineMsgCompBin, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeOfflineMsgCompBin, next_offline_msg_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFurnitureMakeBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFurnitureMakeBin, furniture_make_slots_bin_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeLimitedShopPoolRecordBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeLimitedShopPoolRecordBin, pool_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeLimitedShopPoolRecordBin, goods_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeLimitedShopGoodsInfoBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeLimitedShopGoodsInfoBin, goods_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeLimitedShopGoodsInfoBin, buy_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeLimitedShopNPCPosBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeLimitedShopNPCPosBin, module_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeLimitedShopNPCPosBin, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeLimitedShopNPCPosBin, block_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeLimitedShopNPCPosBin, index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeLimitedShopBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeLimitedShopBin, last_refresh_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeLimitedShopBin, pool_record_bin_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeLimitedShopBin, goods_info_bin_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeLimitedShopBin, npc_pos_bin_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomePlantSubFieldBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomePlantSubFieldBin, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomePlantSubFieldBin, seed_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomePlantSubFieldBin, grow_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomePlantSubFieldBin, last_update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomePlantSubFieldBin, gather_index_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomePlantSubFieldBin, home_gather_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomePlantFieldBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomePlantFieldBin, module_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomePlantFieldBin, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomePlantFieldBin, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomePlantFieldBin, furniture_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomePlantFieldBin, sub_field_bin_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomePlantBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomePlantBin, field_bin_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFishpondFarmingBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFishpondFarmingBin, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFishpondFarmingBin, fishpond_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFishpondFarmingBin, furniture_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFishpondFarmingBin, fish_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeScenePointFishFarmingBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeScenePointFishFarmingBin, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeScenePointFishFarmingBin, local_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeScenePointFishFarmingBin, fish_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeModuleFishFarmingBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeModuleFishFarmingBin, module_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeModuleFishFarmingBin, fishpond_farming_bin_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeModuleFishFarmingBin, scene_point_fish_farming_bin_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFishFarmingBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeFishFarmingBin, module_fish_farming_bin_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeCustomFurnitureNodeInfoBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeCustomFurnitureNodeInfoBin, parent_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeCustomFurnitureNodeInfoBin, furniture_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeCustomFurnitureNodeInfoBin, slot_identifier_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeOneCustomFurnitureBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeOneCustomFurnitureBin, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeOneCustomFurnitureBin, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeOneCustomFurnitureBin, furniture_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeOneCustomFurnitureBin, sub_furniture_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeModuleCustomFurnitureBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeModuleCustomFurnitureBin, module_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeModuleCustomFurnitureBin, custom_furniture_bin_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeCustomFurnitureBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeCustomFurnitureBin, module_custom_furniture_bin_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeOnePictureFrameBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeOnePictureFrameBin, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeOnePictureFrameBin, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeOnePictureFrameBin, furniture_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeOnePictureFrameBin, picture_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeModulePictureFrameBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeModulePictureFrameBin, module_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeModulePictureFrameBin, picture_frame_bin_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomePictureFrameBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomePictureFrameBin, module_picture_frame_bin_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeGroupPlayerInfoBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeGroupPlayerInfoBin, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeGroupPlayerInfoBin, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeGroupPlayerInfoBin, player_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeGroupPlayerInfoBin, profile_picture_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeGroupPlayerInfoBin, online_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeGroupPlayerInfoBin, psn_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeRacingGalleryRecordBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeRacingGalleryRecordBin, use_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeRacingGalleryRecordBin, player_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeRacingGalleryRecordBin, timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeRacingRecordBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeRacingRecordBin, record_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBalloonGalleryRecordBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBalloonGalleryRecordBin, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBalloonGalleryRecordBin, hit_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBalloonGalleryRecordBin, player_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBalloonGalleryRecordBin, timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBalloonRecordBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBalloonRecordBin, record_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeStakePlayRecordBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeStakePlayRecordBin, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeStakePlayRecordBin, engaged_player_info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeStakeRecordBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeStakeRecordBin, record_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeSeekFurniturePlayerScoreBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeSeekFurniturePlayerScoreBin, player_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeSeekFurniturePlayerScoreBin, score_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeSeekFurnitureOneRecordBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeSeekFurnitureOneRecordBin, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeSeekFurnitureOneRecordBin, engaged_player_score_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeSeekFurnitureAllRecordBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeSeekFurnitureAllRecordBin, record_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeGroupRecordBin, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeGroupRecordBin, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(HomeGroupRecordBinDefaultTypeInternal, racing_gallery_info_bin_),
  offsetof(HomeGroupRecordBinDefaultTypeInternal, balloon_gallery_info_bin_),
  offsetof(HomeGroupRecordBinDefaultTypeInternal, stake_play_info_bin_),
  offsetof(HomeGroupRecordBinDefaultTypeInternal, seek_furniture_play_info_bin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeGroupRecordBin, detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeGroupRecordCompBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeGroupRecordCompBin, group_record_map_bin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBlueprintCompBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeBlueprintCompBin, is_allow_friend_copy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeDataBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeDataBin, basic_bin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeDataBin, scene_bin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeDataBin, offline_msg_bin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeDataBin, furniture_make_bin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeDataBin, limited_shop_bin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeDataBin, plant_bin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeDataBin, fish_farming_bin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeDataBin, custom_furniture_bin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeDataBin, picture_frame_bin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeDataBin, group_record_bin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeDataBin, blueprint_bin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeData, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeData, data_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeData, bin_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeData, block_end_time_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(HomeBasicCompBin)},
  { 11, -1, sizeof(HomeFurnitureBin)},
  { 22, -1, sizeof(HomeFurnitureSuiteBin)},
  { 32, -1, sizeof(HomeNpcBin)},
  { 41, -1, sizeof(HomeAnimalBin)},
  { 49, -1, sizeof(HomeBlockSubFieldBin)},
  { 56, -1, sizeof(HomeBlockFieldBin)},
  { 66, -1, sizeof(HomeFurnitureGroupBin)},
  { 73, -1, sizeof(HomeFurnitureCustomSuiteBin)},
  { 81, -1, sizeof(HomeBlockBin)},
  { 96, -1, sizeof(HomeSceneBin)},
  { 114, -1, sizeof(HomeModuleBin)},
  { 122, -1, sizeof(HomeSceneCompBin)},
  { 129, -1, sizeof(HomeOfflineMsgExeBin)},
  { 136, -1, sizeof(HomeOfflineMsgCompBin)},
  { 143, -1, sizeof(HomeFurnitureMakeBin)},
  { 149, -1, sizeof(HomeLimitedShopPoolRecordBin)},
  { 156, -1, sizeof(HomeLimitedShopGoodsInfoBin)},
  { 163, -1, sizeof(HomeLimitedShopNPCPosBin)},
  { 172, -1, sizeof(HomeLimitedShopBin)},
  { 181, -1, sizeof(HomePlantSubFieldBin)},
  { 192, -1, sizeof(HomePlantFieldBin)},
  { 202, -1, sizeof(HomePlantBin)},
  { 208, -1, sizeof(HomeFishpondFarmingBin)},
  { 217, -1, sizeof(HomeScenePointFishFarmingBin)},
  { 225, -1, sizeof(HomeModuleFishFarmingBin)},
  { 233, -1, sizeof(HomeFishFarmingBin)},
  { 239, -1, sizeof(HomeCustomFurnitureNodeInfoBin)},
  { 247, -1, sizeof(HomeOneCustomFurnitureBin)},
  { 256, -1, sizeof(HomeModuleCustomFurnitureBin)},
  { 263, -1, sizeof(HomeCustomFurnitureBin)},
  { 269, -1, sizeof(HomeOnePictureFrameBin)},
  { 278, -1, sizeof(HomeModulePictureFrameBin)},
  { 285, -1, sizeof(HomePictureFrameBin)},
  { 291, -1, sizeof(HomeGroupPlayerInfoBin)},
  { 302, -1, sizeof(HomeRacingGalleryRecordBin)},
  { 310, -1, sizeof(HomeRacingRecordBin)},
  { 316, -1, sizeof(HomeBalloonGalleryRecordBin)},
  { 325, -1, sizeof(HomeBalloonRecordBin)},
  { 331, -1, sizeof(HomeStakePlayRecordBin)},
  { 338, -1, sizeof(HomeStakeRecordBin)},
  { 344, -1, sizeof(HomeSeekFurniturePlayerScoreBin)},
  { 351, -1, sizeof(HomeSeekFurnitureOneRecordBin)},
  { 358, -1, sizeof(HomeSeekFurnitureAllRecordBin)},
  { 364, -1, sizeof(HomeGroupRecordBin)},
  { 374, -1, sizeof(HomeGroupRecordCompBin)},
  { 380, -1, sizeof(HomeBlueprintCompBin)},
  { 386, -1, sizeof(HomeDataBin)},
  { 402, -1, sizeof(HomeData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeBasicCompBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeFurnitureBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeFurnitureSuiteBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeNpcBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeAnimalBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeBlockSubFieldBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeBlockFieldBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeFurnitureGroupBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeFurnitureCustomSuiteBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeBlockBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeSceneBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeModuleBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeSceneCompBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeOfflineMsgExeBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeOfflineMsgCompBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeFurnitureMakeBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeLimitedShopPoolRecordBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeLimitedShopGoodsInfoBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeLimitedShopNPCPosBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeLimitedShopBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomePlantSubFieldBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomePlantFieldBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomePlantBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeFishpondFarmingBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeScenePointFishFarmingBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeModuleFishFarmingBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeFishFarmingBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeCustomFurnitureNodeInfoBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeOneCustomFurnitureBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeModuleCustomFurnitureBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeCustomFurnitureBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeOnePictureFrameBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeModulePictureFrameBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomePictureFrameBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeGroupPlayerInfoBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeRacingGalleryRecordBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeRacingRecordBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeBalloonGalleryRecordBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeBalloonRecordBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeStakePlayRecordBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeStakeRecordBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeSeekFurniturePlayerScoreBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeSeekFurnitureOneRecordBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeSeekFurnitureAllRecordBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeGroupRecordBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeGroupRecordCompBin_GroupRecordMapBinEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeGroupRecordCompBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeBlueprintCompBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeDataBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HomeData_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "server_only/bin.home.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
file_level_metadata[45].reflection = HomeGroupRecordCompBin::HomeGroupRecordCompBin_GroupRecordMapBinEntry::CreateReflection(file_level_metadata[45].descriptor, _HomeGroupRecordCompBin_GroupRecordMapBinEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 50);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _HomeBasicCompBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeBasicCompBin_default_instance_);_HomeFurnitureBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeFurnitureBin_default_instance_);_HomeFurnitureSuiteBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeFurnitureSuiteBin_default_instance_);_HomeNpcBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeNpcBin_default_instance_);_HomeAnimalBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeAnimalBin_default_instance_);_HomeBlockSubFieldBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeBlockSubFieldBin_default_instance_);_HomeBlockFieldBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeBlockFieldBin_default_instance_);_HomeFurnitureGroupBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeFurnitureGroupBin_default_instance_);_HomeFurnitureCustomSuiteBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeFurnitureCustomSuiteBin_default_instance_);_HomeBlockBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeBlockBin_default_instance_);_HomeSceneBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeSceneBin_default_instance_);_HomeModuleBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeModuleBin_default_instance_);_HomeSceneCompBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeSceneCompBin_default_instance_);_HomeOfflineMsgExeBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeOfflineMsgExeBin_default_instance_);_HomeOfflineMsgCompBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeOfflineMsgCompBin_default_instance_);_HomeFurnitureMakeBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeFurnitureMakeBin_default_instance_);_HomeLimitedShopPoolRecordBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeLimitedShopPoolRecordBin_default_instance_);_HomeLimitedShopGoodsInfoBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeLimitedShopGoodsInfoBin_default_instance_);_HomeLimitedShopNPCPosBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeLimitedShopNPCPosBin_default_instance_);_HomeLimitedShopBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeLimitedShopBin_default_instance_);_HomePlantSubFieldBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomePlantSubFieldBin_default_instance_);_HomePlantFieldBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomePlantFieldBin_default_instance_);_HomePlantBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomePlantBin_default_instance_);_HomeFishpondFarmingBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeFishpondFarmingBin_default_instance_);_HomeScenePointFishFarmingBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeScenePointFishFarmingBin_default_instance_);_HomeModuleFishFarmingBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeModuleFishFarmingBin_default_instance_);_HomeFishFarmingBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeFishFarmingBin_default_instance_);_HomeCustomFurnitureNodeInfoBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeCustomFurnitureNodeInfoBin_default_instance_);_HomeOneCustomFurnitureBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeOneCustomFurnitureBin_default_instance_);_HomeModuleCustomFurnitureBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeModuleCustomFurnitureBin_default_instance_);_HomeCustomFurnitureBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeCustomFurnitureBin_default_instance_);_HomeOnePictureFrameBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeOnePictureFrameBin_default_instance_);_HomeModulePictureFrameBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeModulePictureFrameBin_default_instance_);_HomePictureFrameBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomePictureFrameBin_default_instance_);_HomeGroupPlayerInfoBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeGroupPlayerInfoBin_default_instance_);_HomeRacingGalleryRecordBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeRacingGalleryRecordBin_default_instance_);_HomeRacingRecordBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeRacingRecordBin_default_instance_);_HomeBalloonGalleryRecordBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeBalloonGalleryRecordBin_default_instance_);_HomeBalloonRecordBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeBalloonRecordBin_default_instance_);_HomeStakePlayRecordBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeStakePlayRecordBin_default_instance_);_HomeStakeRecordBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeStakeRecordBin_default_instance_);_HomeSeekFurniturePlayerScoreBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeSeekFurniturePlayerScoreBin_default_instance_);_HomeSeekFurnitureOneRecordBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeSeekFurnitureOneRecordBin_default_instance_);_HomeSeekFurnitureAllRecordBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeSeekFurnitureAllRecordBin_default_instance_);_HomeGroupRecordBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeGroupRecordBin_default_instance_);_HomeGroupRecordCompBin_GroupRecordMapBinEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeGroupRecordCompBin_GroupRecordMapBinEntry_default_instance_);_HomeGroupRecordCompBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeGroupRecordCompBin_default_instance_);_HomeBlueprintCompBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeBlueprintCompBin_default_instance_);_HomeDataBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeDataBin_default_instance_);_HomeData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HomeData_default_instance_);_HomeFurnitureBin_default_instance_._instance.get_mutable()->spawn_pos_ = const_cast< ::proto::VectorBin*>(
      ::proto::VectorBin::internal_default_instance());
  _HomeFurnitureBin_default_instance_._instance.get_mutable()->spawn_rot_ = const_cast< ::proto::VectorBin*>(
      ::proto::VectorBin::internal_default_instance());
  _HomeFurnitureSuiteBin_default_instance_._instance.get_mutable()->spawn_pos_ = const_cast< ::proto::VectorBin*>(
      ::proto::VectorBin::internal_default_instance());
  _HomeNpcBin_default_instance_._instance.get_mutable()->spawn_pos_ = const_cast< ::proto::VectorBin*>(
      ::proto::VectorBin::internal_default_instance());
  _HomeNpcBin_default_instance_._instance.get_mutable()->spawn_rot_ = const_cast< ::proto::VectorBin*>(
      ::proto::VectorBin::internal_default_instance());
  _HomeAnimalBin_default_instance_._instance.get_mutable()->spawn_pos_ = const_cast< ::proto::VectorBin*>(
      ::proto::VectorBin::internal_default_instance());
  _HomeAnimalBin_default_instance_._instance.get_mutable()->spawn_rot_ = const_cast< ::proto::VectorBin*>(
      ::proto::VectorBin::internal_default_instance());
  _HomeBlockSubFieldBin_default_instance_._instance.get_mutable()->spawn_pos_ = const_cast< ::proto::VectorBin*>(
      ::proto::VectorBin::internal_default_instance());
  _HomeBlockSubFieldBin_default_instance_._instance.get_mutable()->spawn_rot_ = const_cast< ::proto::VectorBin*>(
      ::proto::VectorBin::internal_default_instance());
  _HomeBlockFieldBin_default_instance_._instance.get_mutable()->spawn_pos_ = const_cast< ::proto::VectorBin*>(
      ::proto::VectorBin::internal_default_instance());
  _HomeBlockFieldBin_default_instance_._instance.get_mutable()->spawn_rot_ = const_cast< ::proto::VectorBin*>(
      ::proto::VectorBin::internal_default_instance());
  _HomeFurnitureCustomSuiteBin_default_instance_._instance.get_mutable()->spawn_pos_ = const_cast< ::proto::VectorBin*>(
      ::proto::VectorBin::internal_default_instance());
  _HomeSceneBin_default_instance_._instance.get_mutable()->scene_bin_ = const_cast< ::proto::SceneBin*>(
      ::proto::SceneBin::internal_default_instance());
  _HomeSceneBin_default_instance_._instance.get_mutable()->born_pos_ = const_cast< ::proto::VectorBin*>(
      ::proto::VectorBin::internal_default_instance());
  _HomeSceneBin_default_instance_._instance.get_mutable()->born_rot_ = const_cast< ::proto::VectorBin*>(
      ::proto::VectorBin::internal_default_instance());
  _HomeSceneBin_default_instance_._instance.get_mutable()->main_house_ = const_cast< ::proto::HomeFurnitureBin*>(
      ::proto::HomeFurnitureBin::internal_default_instance());
  _HomeSceneBin_default_instance_._instance.get_mutable()->djinn_pos_ = const_cast< ::proto::VectorBin*>(
      ::proto::VectorBin::internal_default_instance());
  _HomeOfflineMsgExeBin_default_instance_._instance.get_mutable()->msg_ = const_cast< ::proto::HomeOfflineMsgBin*>(
      ::proto::HomeOfflineMsgBin::internal_default_instance());
  _HomeGroupPlayerInfoBin_default_instance_._instance.get_mutable()->profile_picture_ = const_cast< ::proto::ProfilePictureBin*>(
      ::proto::ProfilePictureBin::internal_default_instance());
  _HomeRacingGalleryRecordBin_default_instance_._instance.get_mutable()->player_info_ = const_cast< ::proto::HomeGroupPlayerInfoBin*>(
      ::proto::HomeGroupPlayerInfoBin::internal_default_instance());
  _HomeBalloonGalleryRecordBin_default_instance_._instance.get_mutable()->player_info_ = const_cast< ::proto::HomeGroupPlayerInfoBin*>(
      ::proto::HomeGroupPlayerInfoBin::internal_default_instance());
  _HomeSeekFurniturePlayerScoreBin_default_instance_._instance.get_mutable()->player_info_ = const_cast< ::proto::HomeGroupPlayerInfoBin*>(
      ::proto::HomeGroupPlayerInfoBin::internal_default_instance());
  _HomeGroupRecordBin_default_instance_.racing_gallery_info_bin_ = const_cast< ::proto::HomeRacingRecordBin*>(
      ::proto::HomeRacingRecordBin::internal_default_instance());
  _HomeGroupRecordBin_default_instance_.balloon_gallery_info_bin_ = const_cast< ::proto::HomeBalloonRecordBin*>(
      ::proto::HomeBalloonRecordBin::internal_default_instance());
  _HomeGroupRecordBin_default_instance_.stake_play_info_bin_ = const_cast< ::proto::HomeStakeRecordBin*>(
      ::proto::HomeStakeRecordBin::internal_default_instance());
  _HomeGroupRecordBin_default_instance_.seek_furniture_play_info_bin_ = const_cast< ::proto::HomeSeekFurnitureAllRecordBin*>(
      ::proto::HomeSeekFurnitureAllRecordBin::internal_default_instance());
  _HomeGroupRecordCompBin_GroupRecordMapBinEntry_default_instance_._instance.get_mutable()->set_default_instance(_HomeGroupRecordCompBin_GroupRecordMapBinEntry_default_instance_._instance.get_mutable());
  _HomeGroupRecordCompBin_GroupRecordMapBinEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _HomeDataBin_default_instance_._instance.get_mutable()->basic_bin_ = const_cast< ::proto::HomeBasicCompBin*>(
      ::proto::HomeBasicCompBin::internal_default_instance());
  _HomeDataBin_default_instance_._instance.get_mutable()->scene_bin_ = const_cast< ::proto::HomeSceneCompBin*>(
      ::proto::HomeSceneCompBin::internal_default_instance());
  _HomeDataBin_default_instance_._instance.get_mutable()->offline_msg_bin_ = const_cast< ::proto::HomeOfflineMsgCompBin*>(
      ::proto::HomeOfflineMsgCompBin::internal_default_instance());
  _HomeDataBin_default_instance_._instance.get_mutable()->furniture_make_bin_ = const_cast< ::proto::HomeFurnitureMakeBin*>(
      ::proto::HomeFurnitureMakeBin::internal_default_instance());
  _HomeDataBin_default_instance_._instance.get_mutable()->limited_shop_bin_ = const_cast< ::proto::HomeLimitedShopBin*>(
      ::proto::HomeLimitedShopBin::internal_default_instance());
  _HomeDataBin_default_instance_._instance.get_mutable()->plant_bin_ = const_cast< ::proto::HomePlantBin*>(
      ::proto::HomePlantBin::internal_default_instance());
  _HomeDataBin_default_instance_._instance.get_mutable()->fish_farming_bin_ = const_cast< ::proto::HomeFishFarmingBin*>(
      ::proto::HomeFishFarmingBin::internal_default_instance());
  _HomeDataBin_default_instance_._instance.get_mutable()->custom_furniture_bin_ = const_cast< ::proto::HomeCustomFurnitureBin*>(
      ::proto::HomeCustomFurnitureBin::internal_default_instance());
  _HomeDataBin_default_instance_._instance.get_mutable()->picture_frame_bin_ = const_cast< ::proto::HomePictureFrameBin*>(
      ::proto::HomePictureFrameBin::internal_default_instance());
  _HomeDataBin_default_instance_._instance.get_mutable()->group_record_bin_ = const_cast< ::proto::HomeGroupRecordCompBin*>(
      ::proto::HomeGroupRecordCompBin::internal_default_instance());
  _HomeDataBin_default_instance_._instance.get_mutable()->blueprint_bin_ = const_cast< ::proto::HomeBlueprintCompBin*>(
      ::proto::HomeBlueprintCompBin::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032server_only/bin.home.proto\022\005proto\032#ser"
      "ver_only/bin_common.server.proto\032\014define"
      ".proto\"\216\001\n\020HomeBasicCompBin\022\026\n\016trans_no_"
      "count\030\001 \001(\004\022\013\n\003exp\030\004 \001(\004\022\r\n\005level\030\005 \001(\r\022"
      "\027\n\017owner_nick_name\030\006 \001(\t\022\027\n\017total_home_t"
      "ime\030\007 \001(\r\022\024\n\014home_time_ms\030\010 \001(\004\"\261\001\n\020Home"
      "FurnitureBin\022\024\n\014furniture_id\030\001 \001(\r\022#\n\tsp"
      "awn_pos\030\003 \001(\0132\020.proto.VectorBin\022#\n\tspawn"
      "_rot\030\004 \001(\0132\020.proto.VectorBin\022\036\n\026parent_f"
      "urniture_index\030\007 \001(\005\022\014\n\004guid\030\010 \001(\r\022\017\n\007ve"
      "rsion\030\t \001(\r\"\234\001\n\025HomeFurnitureSuiteBin\022\020\n"
      "\010suite_id\030\001 \001(\r\022#\n\tspawn_pos\030\002 \001(\0132\020.pro"
      "to.VectorBin\022%\n\035included_furniture_index"
      "_list\030\003 \003(\005\022\014\n\004guid\030\004 \001(\r\022\027\n\017is_allow_su"
      "mmon\030\005 \001(\010\"}\n\nHomeNpcBin\022\021\n\tavatar_id\030\001 "
      "\001(\r\022#\n\tspawn_pos\030\002 \001(\0132\020.proto.VectorBin"
      "\022#\n\tspawn_rot\030\003 \001(\0132\020.proto.VectorBin\022\022\n"
      "\ncostume_id\030\004 \001(\r\"o\n\rHomeAnimalBin\022\024\n\014fu"
      "rniture_id\030\001 \001(\r\022#\n\tspawn_pos\030\002 \001(\0132\020.pr"
      "oto.VectorBin\022#\n\tspawn_rot\030\003 \001(\0132\020.proto"
      ".VectorBin\"`\n\024HomeBlockSubFieldBin\022#\n\tsp"
      "awn_pos\030\001 \001(\0132\020.proto.VectorBin\022#\n\tspawn"
      "_rot\030\002 \001(\0132\020.proto.VectorBin\"\266\001\n\021HomeBlo"
      "ckFieldBin\022\014\n\004guid\030\001 \001(\r\022\024\n\014furniture_id"
      "\030\002 \001(\r\022#\n\tspawn_pos\030\003 \001(\0132\020.proto.Vector"
      "Bin\022#\n\tspawn_rot\030\004 \001(\0132\020.proto.VectorBin"
      "\0223\n\016sub_field_list\030\005 \003(\0132\033.proto.HomeBlo"
      "ckSubFieldBin\"n\n\025HomeFurnitureGroupBin\022\035"
      "\n\025group_furniture_index\030\001 \001(\r\0226\n\025virtual"
      "_furniure_list\030\002 \003(\0132\027.proto.HomeFurnitu"
      "reBin\"w\n\033HomeFurnitureCustomSuiteBin\022#\n\t"
      "spawn_pos\030\001 \001(\0132\020.proto.VectorBin\022%\n\035inc"
      "luded_furniture_index_list\030\002 \003(\005\022\014\n\004guid"
      "\030\003 \001(\r\"\203\004\n\014HomeBlockBin\022\020\n\010block_id\030\001 \001("
      "\r\022:\n\031persistent_furniture_list\030\002 \003(\0132\027.p"
      "roto.HomeFurnitureBin\0225\n\024deploy_furniure"
      "_list\030\003 \003(\0132\027.proto.HomeFurnitureBin\022*\n\017"
      "deploy_npc_list\030\004 \003(\0132\021.proto.HomeNpcBin"
      "\022:\n\024furniture_suite_list\030\005 \003(\0132\034.proto.H"
      "omeFurnitureSuiteBin\0220\n\022deploy_animal_li"
      "st\030\006 \003(\0132\024.proto.HomeAnimalBin\022\023\n\013is_unl"
      "ocked\030\007 \001(\010\0223\n\021deploy_field_list\030\010 \003(\0132\030"
      ".proto.HomeBlockFieldBin\022A\n\033deploy_furni"
      "ture_group_list\030\t \003(\0132\034.proto.HomeFurnit"
      "ureGroupBin\022G\n\033furniture_custom_suite_li"
      "st\030\n \003(\0132\".proto.HomeFurnitureCustomSuit"
      "eBin\"\265\003\n\014HomeSceneBin\022\020\n\010scene_id\030\001 \001(\r\022"
      "\"\n\tscene_bin\030\002 \001(\0132\017.proto.SceneBin\022+\n\016b"
      "lock_bin_list\030\003 \003(\0132\023.proto.HomeBlockBin"
      "\022\027\n\017is_set_born_pos\030\004 \001(\010\022\"\n\010born_pos\030\005 "
      "\001(\0132\020.proto.VectorBin\022\"\n\010born_rot\030\006 \001(\0132"
      "\020.proto.VectorBin\022*\n\tdoor_list\030\007 \003(\0132\027.p"
      "roto.HomeFurnitureBin\022+\n\nstair_list\030\010 \003("
      "\0132\027.proto.HomeFurnitureBin\022+\n\nmain_house"
      "\030\t \001(\0132\027.proto.HomeFurnitureBin\022#\n\tdjinn"
      "_pos\030\n \001(\0132\020.proto.VectorBin\022\023\n\013tmp_vers"
      "ion\030\014 \001(\r\022\021\n\tsave_time\030\r \001(\007\022\016\n\006bgm_id\030\016"
      " \001(\r\"j\n\rHomeModuleBin\022\021\n\tmodule_id\030\001 \001(\r"
      "\022\031\n\021cur_room_scene_id\030\002 \001(\r\022+\n\016scene_bin"
      "_list\030\003 \003(\0132\023.proto.HomeSceneBin\"X\n\020Home"
      "SceneCompBin\022\025\n\rcur_module_id\030\001 \001(\r\022-\n\017m"
      "odule_bin_list\030\002 \003(\0132\024.proto.HomeModuleB"
      "in\"P\n\024HomeOfflineMsgExeBin\022%\n\003msg\030\001 \001(\0132"
      "\030.proto.HomeOfflineMsgBin\022\021\n\texe_times\030\002"
      " \001(\r\"b\n\025HomeOfflineMsgCompBin\022\r\n\005index\030\001"
      " \001(\r\022:\n\025next_offline_msg_list\030\002 \003(\0132\033.pr"
      "oto.HomeOfflineMsgExeBin\"[\n\024HomeFurnitur"
      "eMakeBin\022C\n\035furniture_make_slots_bin_lis"
      "t\030\001 \003(\0132\034.proto.FurnitureMakeSlotsBin\"F\n"
      "\034HomeLimitedShopPoolRecordBin\022\017\n\007pool_id"
      "\030\001 \001(\r\022\025\n\rgoods_id_list\030\002 \003(\r\"@\n\033HomeLim"
      "itedShopGoodsInfoBin\022\020\n\010goods_id\030\001 \001(\r\022\017"
      "\n\007buy_num\030\002 \001(\r\"`\n\030HomeLimitedShopNPCPos"
      "Bin\022\021\n\tmodule_id\030\001 \001(\r\022\020\n\010scene_id\030\004 \001(\r"
      "\022\020\n\010block_id\030\005 \001(\r\022\r\n\005index\030\006 \001(\r\"\356\001\n\022Ho"
      "meLimitedShopBin\022\031\n\021last_refresh_time\030\001 "
      "\001(\r\022A\n\024pool_record_bin_list\030\003 \003(\0132#.prot"
      "o.HomeLimitedShopPoolRecordBin\022\?\n\023goods_"
      "info_bin_list\030\004 \003(\0132\".proto.HomeLimitedS"
      "hopGoodsInfoBin\0229\n\020npc_pos_bin_list\030\005 \003("
      "\0132\037.proto.HomeLimitedShopNPCPosBin\"\226\001\n\024H"
      "omePlantSubFieldBin\022\r\n\005index\030\001 \001(\r\022\017\n\007se"
      "ed_id\030\002 \001(\r\022\021\n\tgrow_time\030\003 \001(\r\022\030\n\020last_u"
      "pdate_time\030\004 \001(\r\022\031\n\021gather_index_list\030\005 "
      "\003(\r\022\026\n\016home_gather_id\030\006 \001(\r\"\225\001\n\021HomePlan"
      "tFieldBin\022\021\n\tmodule_id\030\001 \001(\r\022\020\n\010scene_id"
      "\030\002 \001(\r\022\014\n\004guid\030\003 \001(\r\022\024\n\014furniture_id\030\004 \001"
      "(\r\0227\n\022sub_field_bin_list\030\005 \003(\0132\033.proto.H"
      "omePlantSubFieldBin\"@\n\014HomePlantBin\0220\n\016f"
      "ield_bin_list\030\001 \003(\0132\030.proto.HomePlantFie"
      "ldBin\"m\n\026HomeFishpondFarmingBin\022\020\n\010scene"
      "_id\030\001 \001(\r\022\025\n\rfishpond_guid\030\002 \001(\r\022\024\n\014furn"
      "iture_id\030\003 \001(\r\022\024\n\014fish_id_list\030\004 \003(\r\"_\n\034"
      "HomeScenePointFishFarmingBin\022\020\n\010scene_id"
      "\030\001 \001(\r\022\027\n\017local_entity_id\030\002 \001(\r\022\024\n\014fish_"
      "id_list\030\004 \003(\r\"\277\001\n\030HomeModuleFishFarmingB"
      "in\022\021\n\tmodule_id\030\001 \001(\r\022@\n\031fishpond_farmin"
      "g_bin_list\030\002 \003(\0132\035.proto.HomeFishpondFar"
      "mingBin\022N\n!scene_point_fish_farming_bin_"
      "list\030\003 \003(\0132#.proto.HomeScenePointFishFar"
      "mingBin\"[\n\022HomeFishFarmingBin\022E\n\034module_"
      "fish_farming_bin_list\030\001 \003(\0132\037.proto.Home"
      "ModuleFishFarmingBin\"e\n\036HomeCustomFurnit"
      "ureNodeInfoBin\022\024\n\014parent_index\030\001 \001(\005\022\024\n\014"
      "furniture_id\030\002 \001(\r\022\027\n\017slot_identifier\030\003 "
      "\001(\t\"\224\001\n\031HomeOneCustomFurnitureBin\022\020\n\010sce"
      "ne_id\030\001 \001(\r\022\014\n\004guid\030\002 \001(\r\022\024\n\014furniture_i"
      "d\030\003 \001(\r\022A\n\022sub_furniture_list\030\004 \003(\0132%.pr"
      "oto.HomeCustomFurnitureNodeInfoBin\"v\n\034Ho"
      "meModuleCustomFurnitureBin\022\021\n\tmodule_id\030"
      "\001 \001(\r\022C\n\031custom_furniture_bin_list\030\002 \003(\013"
      "2 .proto.HomeOneCustomFurnitureBin\"g\n\026Ho"
      "meCustomFurnitureBin\022M\n module_custom_fu"
      "rniture_bin_list\030\001 \003(\0132#.proto.HomeModul"
      "eCustomFurnitureBin\"b\n\026HomeOnePictureFra"
      "meBin\022\020\n\010scene_id\030\001 \001(\r\022\014\n\004guid\030\002 \001(\r\022\024\n"
      "\014furniture_id\030\003 \001(\r\022\022\n\npicture_id\030\004 \001(\r\""
      "m\n\031HomeModulePictureFrameBin\022\021\n\tmodule_i"
      "d\030\001 \001(\r\022=\n\026picture_frame_bin_list\030\002 \003(\0132"
      "\035.proto.HomeOnePictureFrameBin\"^\n\023HomePi"
      "ctureFrameBin\022G\n\035module_picture_frame_bi"
      "n_list\030\001 \003(\0132 .proto.HomeModulePictureFr"
      "ameBin\"\243\001\n\026HomeGroupPlayerInfoBin\022\013\n\003uid"
      "\030\001 \001(\r\022\020\n\010nickname\030\002 \001(\t\022\024\n\014player_level"
      "\030\003 \001(\r\0221\n\017profile_picture\030\004 \001(\0132\030.proto."
      "ProfilePictureBin\022\021\n\tonline_id\030\005 \001(\t\022\016\n\006"
      "psn_id\030\006 \001(\t\"u\n\032HomeRacingGalleryRecordB"
      "in\022\020\n\010use_time\030\001 \001(\r\0222\n\013player_info\030\002 \001("
      "\0132\035.proto.HomeGroupPlayerInfoBin\022\021\n\ttime"
      "stamp\030\003 \001(\r\"M\n\023HomeRacingRecordBin\0226\n\013re"
      "cord_list\030\001 \003(\0132!.proto.HomeRacingGaller"
      "yRecordBin\"\206\001\n\033HomeBalloonGalleryRecordB"
      "in\022\r\n\005score\030\001 \001(\r\022\021\n\thit_count\030\002 \001(\r\0222\n\013"
      "player_info\030\003 \001(\0132\035.proto.HomeGroupPlaye"
      "rInfoBin\022\021\n\ttimestamp\030\004 \001(\r\"O\n\024HomeBallo"
      "onRecordBin\0227\n\013record_list\030\001 \003(\0132\".proto"
      ".HomeBalloonGalleryRecordBin\"l\n\026HomeStak"
      "ePlayRecordBin\022\021\n\ttimestamp\030\001 \001(\r\022\?\n\030eng"
      "aged_player_info_list\030\002 \003(\0132\035.proto.Home"
      "GroupPlayerInfoBin\"H\n\022HomeStakeRecordBin"
      "\0222\n\013record_list\030\001 \003(\0132\035.proto.HomeStakeP"
      "layRecordBin\"d\n\037HomeSeekFurniturePlayerS"
      "coreBin\0222\n\013player_info\030\001 \001(\0132\035.proto.Hom"
      "eGroupPlayerInfoBin\022\r\n\005score\030\002 \001(\r\"}\n\035Ho"
      "meSeekFurnitureOneRecordBin\022\021\n\ttimestamp"
      "\030\001 \001(\r\022I\n\031engaged_player_score_list\030\002 \003("
      "\0132&.proto.HomeSeekFurniturePlayerScoreBi"
      "n\"Z\n\035HomeSeekFurnitureAllRecordBin\0229\n\013re"
      "cord_list\030\001 \003(\0132$.proto.HomeSeekFurnitur"
      "eOneRecordBin\"\246\002\n\022HomeGroupRecordBin\022=\n\027"
      "racing_gallery_info_bin\030\013 \001(\0132\032.proto.Ho"
      "meRacingRecordBinH\000\022\?\n\030balloon_gallery_i"
      "nfo_bin\030\014 \001(\0132\033.proto.HomeBalloonRecordB"
      "inH\000\0228\n\023stake_play_info_bin\030\r \001(\0132\031.prot"
      "o.HomeStakeRecordBinH\000\022L\n\034seek_furniture"
      "_play_info_bin\030\016 \001(\0132$.proto.HomeSeekFur"
      "nitureAllRecordBinH\000B\010\n\006detail\"\301\001\n\026HomeG"
      "roupRecordCompBin\022R\n\024group_record_map_bi"
      "n\030\001 \003(\01324.proto.HomeGroupRecordCompBin.G"
      "roupRecordMapBinEntry\032S\n\026GroupRecordMapB"
      "inEntry\022\013\n\003key\030\001 \001(\r\022(\n\005value\030\002 \001(\0132\031.pr"
      "oto.HomeGroupRecordBin:\0028\001\"4\n\024HomeBluepr"
      "intCompBin\022\034\n\024is_allow_friend_copy\030\001 \001(\010"
      "\"\310\004\n\013HomeDataBin\022*\n\tbasic_bin\030\001 \001(\0132\027.pr"
      "oto.HomeBasicCompBin\022*\n\tscene_bin\030\002 \001(\0132"
      "\027.proto.HomeSceneCompBin\0225\n\017offline_msg_"
      "bin\030\003 \001(\0132\034.proto.HomeOfflineMsgCompBin\022"
      "7\n\022furniture_make_bin\030\004 \001(\0132\033.proto.Home"
      "FurnitureMakeBin\0223\n\020limited_shop_bin\030\005 \001"
      "(\0132\031.proto.HomeLimitedShopBin\022&\n\tplant_b"
      "in\030\006 \001(\0132\023.proto.HomePlantBin\0223\n\020fish_fa"
      "rming_bin\030\007 \001(\0132\031.proto.HomeFishFarmingB"
      "in\022;\n\024custom_furniture_bin\030\010 \001(\0132\035.proto"
      ".HomeCustomFurnitureBin\0225\n\021picture_frame"
      "_bin\030\t \001(\0132\032.proto.HomePictureFrameBin\0227"
      "\n\020group_record_bin\030\n \001(\0132\035.proto.HomeGro"
      "upRecordCompBin\0222\n\rblueprint_bin\030\013 \001(\0132\033"
      ".proto.HomeBlueprintCompBin\"W\n\010HomeData\022"
      "\013\n\003uid\030\001 \001(\r\022\024\n\014data_version\030\002 \001(\r\022\020\n\010bi"
      "n_data\030\003 \001(\014\022\026\n\016block_end_time\030\004 \001(\005B(Z&"
      "github.com/teyvat-helper/hk4e-proto/pbb\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 7246);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server_only/bin.home.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::AddDescriptors();
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_server_5fonly_2fbin_2ehome_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeBasicCompBin::kTransNoCountFieldNumber;
const int HomeBasicCompBin::kExpFieldNumber;
const int HomeBasicCompBin::kLevelFieldNumber;
const int HomeBasicCompBin::kOwnerNickNameFieldNumber;
const int HomeBasicCompBin::kTotalHomeTimeFieldNumber;
const int HomeBasicCompBin::kHomeTimeMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeBasicCompBin::HomeBasicCompBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeBasicCompBin)
}
HomeBasicCompBin::HomeBasicCompBin(const HomeBasicCompBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  owner_nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner_nick_name().size() > 0) {
    owner_nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_nick_name_);
  }
  ::memcpy(&trans_no_count_, &from.trans_no_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&home_time_ms_) -
    reinterpret_cast<char*>(&trans_no_count_)) + sizeof(home_time_ms_));
  // @@protoc_insertion_point(copy_constructor:proto.HomeBasicCompBin)
}

void HomeBasicCompBin::SharedCtor() {
  owner_nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&trans_no_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&home_time_ms_) -
      reinterpret_cast<char*>(&trans_no_count_)) + sizeof(home_time_ms_));
  _cached_size_ = 0;
}

HomeBasicCompBin::~HomeBasicCompBin() {
  // @@protoc_insertion_point(destructor:proto.HomeBasicCompBin)
  SharedDtor();
}

void HomeBasicCompBin::SharedDtor() {
  owner_nick_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HomeBasicCompBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeBasicCompBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeBasicCompBin& HomeBasicCompBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeBasicCompBin* HomeBasicCompBin::New(::google::protobuf::Arena* arena) const {
  HomeBasicCompBin* n = new HomeBasicCompBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeBasicCompBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeBasicCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&trans_no_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&home_time_ms_) -
      reinterpret_cast<char*>(&trans_no_count_)) + sizeof(home_time_ms_));
  _internal_metadata_.Clear();
}

bool HomeBasicCompBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeBasicCompBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 trans_no_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &trans_no_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 exp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string owner_nick_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_owner_nick_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->owner_nick_name().data(), static_cast<int>(this->owner_nick_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.HomeBasicCompBin.owner_nick_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 total_home_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_home_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 home_time_ms = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &home_time_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeBasicCompBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeBasicCompBin)
  return false;
#undef DO_
}

void HomeBasicCompBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeBasicCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 trans_no_count = 1;
  if (this->trans_no_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->trans_no_count(), output);
  }

  // uint64 exp = 4;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->exp(), output);
  }

  // uint32 level = 5;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->level(), output);
  }

  // string owner_nick_name = 6;
  if (this->owner_nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->owner_nick_name().data(), static_cast<int>(this->owner_nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.HomeBasicCompBin.owner_nick_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->owner_nick_name(), output);
  }

  // uint32 total_home_time = 7;
  if (this->total_home_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->total_home_time(), output);
  }

  // uint64 home_time_ms = 8;
  if (this->home_time_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->home_time_ms(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeBasicCompBin)
}

::google::protobuf::uint8* HomeBasicCompBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeBasicCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 trans_no_count = 1;
  if (this->trans_no_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->trans_no_count(), target);
  }

  // uint64 exp = 4;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->exp(), target);
  }

  // uint32 level = 5;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->level(), target);
  }

  // string owner_nick_name = 6;
  if (this->owner_nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->owner_nick_name().data(), static_cast<int>(this->owner_nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.HomeBasicCompBin.owner_nick_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->owner_nick_name(), target);
  }

  // uint32 total_home_time = 7;
  if (this->total_home_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->total_home_time(), target);
  }

  // uint64 home_time_ms = 8;
  if (this->home_time_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->home_time_ms(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeBasicCompBin)
  return target;
}

size_t HomeBasicCompBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeBasicCompBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string owner_nick_name = 6;
  if (this->owner_nick_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->owner_nick_name());
  }

  // uint64 trans_no_count = 1;
  if (this->trans_no_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->trans_no_count());
  }

  // uint64 exp = 4;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->exp());
  }

  // uint32 level = 5;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 total_home_time = 7;
  if (this->total_home_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->total_home_time());
  }

  // uint64 home_time_ms = 8;
  if (this->home_time_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->home_time_ms());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeBasicCompBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeBasicCompBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeBasicCompBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeBasicCompBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeBasicCompBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeBasicCompBin)
    MergeFrom(*source);
  }
}

void HomeBasicCompBin::MergeFrom(const HomeBasicCompBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeBasicCompBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.owner_nick_name().size() > 0) {

    owner_nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_nick_name_);
  }
  if (from.trans_no_count() != 0) {
    set_trans_no_count(from.trans_no_count());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.total_home_time() != 0) {
    set_total_home_time(from.total_home_time());
  }
  if (from.home_time_ms() != 0) {
    set_home_time_ms(from.home_time_ms());
  }
}

void HomeBasicCompBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeBasicCompBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeBasicCompBin::CopyFrom(const HomeBasicCompBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeBasicCompBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeBasicCompBin::IsInitialized() const {
  return true;
}

void HomeBasicCompBin::Swap(HomeBasicCompBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeBasicCompBin::InternalSwap(HomeBasicCompBin* other) {
  using std::swap;
  owner_nick_name_.Swap(&other->owner_nick_name_);
  swap(trans_no_count_, other->trans_no_count_);
  swap(exp_, other->exp_);
  swap(level_, other->level_);
  swap(total_home_time_, other->total_home_time_);
  swap(home_time_ms_, other->home_time_ms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeBasicCompBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeBasicCompBin

// uint64 trans_no_count = 1;
void HomeBasicCompBin::clear_trans_no_count() {
  trans_no_count_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 HomeBasicCompBin::trans_no_count() const {
  // @@protoc_insertion_point(field_get:proto.HomeBasicCompBin.trans_no_count)
  return trans_no_count_;
}
void HomeBasicCompBin::set_trans_no_count(::google::protobuf::uint64 value) {
  
  trans_no_count_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBasicCompBin.trans_no_count)
}

// uint64 exp = 4;
void HomeBasicCompBin::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 HomeBasicCompBin::exp() const {
  // @@protoc_insertion_point(field_get:proto.HomeBasicCompBin.exp)
  return exp_;
}
void HomeBasicCompBin::set_exp(::google::protobuf::uint64 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBasicCompBin.exp)
}

// uint32 level = 5;
void HomeBasicCompBin::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 HomeBasicCompBin::level() const {
  // @@protoc_insertion_point(field_get:proto.HomeBasicCompBin.level)
  return level_;
}
void HomeBasicCompBin::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBasicCompBin.level)
}

// string owner_nick_name = 6;
void HomeBasicCompBin::clear_owner_nick_name() {
  owner_nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HomeBasicCompBin::owner_nick_name() const {
  // @@protoc_insertion_point(field_get:proto.HomeBasicCompBin.owner_nick_name)
  return owner_nick_name_.GetNoArena();
}
void HomeBasicCompBin::set_owner_nick_name(const ::std::string& value) {
  
  owner_nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.HomeBasicCompBin.owner_nick_name)
}
#if LANG_CXX11
void HomeBasicCompBin::set_owner_nick_name(::std::string&& value) {
  
  owner_nick_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.HomeBasicCompBin.owner_nick_name)
}
#endif
void HomeBasicCompBin::set_owner_nick_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.HomeBasicCompBin.owner_nick_name)
}
void HomeBasicCompBin::set_owner_nick_name(const char* value, size_t size) {
  
  owner_nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.HomeBasicCompBin.owner_nick_name)
}
::std::string* HomeBasicCompBin::mutable_owner_nick_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.HomeBasicCompBin.owner_nick_name)
  return owner_nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HomeBasicCompBin::release_owner_nick_name() {
  // @@protoc_insertion_point(field_release:proto.HomeBasicCompBin.owner_nick_name)
  
  return owner_nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HomeBasicCompBin::set_allocated_owner_nick_name(::std::string* owner_nick_name) {
  if (owner_nick_name != NULL) {
    
  } else {
    
  }
  owner_nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner_nick_name);
  // @@protoc_insertion_point(field_set_allocated:proto.HomeBasicCompBin.owner_nick_name)
}

// uint32 total_home_time = 7;
void HomeBasicCompBin::clear_total_home_time() {
  total_home_time_ = 0u;
}
::google::protobuf::uint32 HomeBasicCompBin::total_home_time() const {
  // @@protoc_insertion_point(field_get:proto.HomeBasicCompBin.total_home_time)
  return total_home_time_;
}
void HomeBasicCompBin::set_total_home_time(::google::protobuf::uint32 value) {
  
  total_home_time_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBasicCompBin.total_home_time)
}

// uint64 home_time_ms = 8;
void HomeBasicCompBin::clear_home_time_ms() {
  home_time_ms_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 HomeBasicCompBin::home_time_ms() const {
  // @@protoc_insertion_point(field_get:proto.HomeBasicCompBin.home_time_ms)
  return home_time_ms_;
}
void HomeBasicCompBin::set_home_time_ms(::google::protobuf::uint64 value) {
  
  home_time_ms_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBasicCompBin.home_time_ms)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeFurnitureBin::kFurnitureIdFieldNumber;
const int HomeFurnitureBin::kSpawnPosFieldNumber;
const int HomeFurnitureBin::kSpawnRotFieldNumber;
const int HomeFurnitureBin::kParentFurnitureIndexFieldNumber;
const int HomeFurnitureBin::kGuidFieldNumber;
const int HomeFurnitureBin::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeFurnitureBin::HomeFurnitureBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeFurnitureBin)
}
HomeFurnitureBin::HomeFurnitureBin(const HomeFurnitureBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_spawn_pos()) {
    spawn_pos_ = new ::proto::VectorBin(*from.spawn_pos_);
  } else {
    spawn_pos_ = NULL;
  }
  if (from.has_spawn_rot()) {
    spawn_rot_ = new ::proto::VectorBin(*from.spawn_rot_);
  } else {
    spawn_rot_ = NULL;
  }
  ::memcpy(&furniture_id_, &from.furniture_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&furniture_id_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:proto.HomeFurnitureBin)
}

void HomeFurnitureBin::SharedCtor() {
  ::memset(&spawn_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&spawn_pos_)) + sizeof(version_));
  _cached_size_ = 0;
}

HomeFurnitureBin::~HomeFurnitureBin() {
  // @@protoc_insertion_point(destructor:proto.HomeFurnitureBin)
  SharedDtor();
}

void HomeFurnitureBin::SharedDtor() {
  if (this != internal_default_instance()) delete spawn_pos_;
  if (this != internal_default_instance()) delete spawn_rot_;
}

void HomeFurnitureBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeFurnitureBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeFurnitureBin& HomeFurnitureBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeFurnitureBin* HomeFurnitureBin::New(::google::protobuf::Arena* arena) const {
  HomeFurnitureBin* n = new HomeFurnitureBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeFurnitureBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeFurnitureBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && spawn_pos_ != NULL) {
    delete spawn_pos_;
  }
  spawn_pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && spawn_rot_ != NULL) {
    delete spawn_rot_;
  }
  spawn_rot_ = NULL;
  ::memset(&furniture_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&furniture_id_)) + sizeof(version_));
  _internal_metadata_.Clear();
}

bool HomeFurnitureBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeFurnitureBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 furniture_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &furniture_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.VectorBin spawn_pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_spawn_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.VectorBin spawn_rot = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_spawn_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 parent_furniture_index = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &parent_furniture_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 guid = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 version = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeFurnitureBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeFurnitureBin)
  return false;
#undef DO_
}

void HomeFurnitureBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeFurnitureBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 furniture_id = 1;
  if (this->furniture_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->furniture_id(), output);
  }

  // .proto.VectorBin spawn_pos = 3;
  if (this->has_spawn_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->spawn_pos_, output);
  }

  // .proto.VectorBin spawn_rot = 4;
  if (this->has_spawn_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->spawn_rot_, output);
  }

  // int32 parent_furniture_index = 7;
  if (this->parent_furniture_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->parent_furniture_index(), output);
  }

  // uint32 guid = 8;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->guid(), output);
  }

  // uint32 version = 9;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeFurnitureBin)
}

::google::protobuf::uint8* HomeFurnitureBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeFurnitureBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 furniture_id = 1;
  if (this->furniture_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->furniture_id(), target);
  }

  // .proto.VectorBin spawn_pos = 3;
  if (this->has_spawn_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->spawn_pos_, deterministic, target);
  }

  // .proto.VectorBin spawn_rot = 4;
  if (this->has_spawn_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->spawn_rot_, deterministic, target);
  }

  // int32 parent_furniture_index = 7;
  if (this->parent_furniture_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->parent_furniture_index(), target);
  }

  // uint32 guid = 8;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->guid(), target);
  }

  // uint32 version = 9;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeFurnitureBin)
  return target;
}

size_t HomeFurnitureBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeFurnitureBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.VectorBin spawn_pos = 3;
  if (this->has_spawn_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->spawn_pos_);
  }

  // .proto.VectorBin spawn_rot = 4;
  if (this->has_spawn_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->spawn_rot_);
  }

  // uint32 furniture_id = 1;
  if (this->furniture_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->furniture_id());
  }

  // int32 parent_furniture_index = 7;
  if (this->parent_furniture_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->parent_furniture_index());
  }

  // uint32 guid = 8;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->guid());
  }

  // uint32 version = 9;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeFurnitureBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeFurnitureBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeFurnitureBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeFurnitureBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeFurnitureBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeFurnitureBin)
    MergeFrom(*source);
  }
}

void HomeFurnitureBin::MergeFrom(const HomeFurnitureBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeFurnitureBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_spawn_pos()) {
    mutable_spawn_pos()->::proto::VectorBin::MergeFrom(from.spawn_pos());
  }
  if (from.has_spawn_rot()) {
    mutable_spawn_rot()->::proto::VectorBin::MergeFrom(from.spawn_rot());
  }
  if (from.furniture_id() != 0) {
    set_furniture_id(from.furniture_id());
  }
  if (from.parent_furniture_index() != 0) {
    set_parent_furniture_index(from.parent_furniture_index());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void HomeFurnitureBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeFurnitureBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeFurnitureBin::CopyFrom(const HomeFurnitureBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeFurnitureBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeFurnitureBin::IsInitialized() const {
  return true;
}

void HomeFurnitureBin::Swap(HomeFurnitureBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeFurnitureBin::InternalSwap(HomeFurnitureBin* other) {
  using std::swap;
  swap(spawn_pos_, other->spawn_pos_);
  swap(spawn_rot_, other->spawn_rot_);
  swap(furniture_id_, other->furniture_id_);
  swap(parent_furniture_index_, other->parent_furniture_index_);
  swap(guid_, other->guid_);
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeFurnitureBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeFurnitureBin

// uint32 furniture_id = 1;
void HomeFurnitureBin::clear_furniture_id() {
  furniture_id_ = 0u;
}
::google::protobuf::uint32 HomeFurnitureBin::furniture_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureBin.furniture_id)
  return furniture_id_;
}
void HomeFurnitureBin::set_furniture_id(::google::protobuf::uint32 value) {
  
  furniture_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeFurnitureBin.furniture_id)
}

// .proto.VectorBin spawn_pos = 3;
bool HomeFurnitureBin::has_spawn_pos() const {
  return this != internal_default_instance() && spawn_pos_ != NULL;
}
void HomeFurnitureBin::clear_spawn_pos() {
  if (GetArenaNoVirtual() == NULL && spawn_pos_ != NULL) delete spawn_pos_;
  spawn_pos_ = NULL;
}
const ::proto::VectorBin& HomeFurnitureBin::spawn_pos() const {
  const ::proto::VectorBin* p = spawn_pos_;
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureBin.spawn_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
::proto::VectorBin* HomeFurnitureBin::mutable_spawn_pos() {
  
  if (spawn_pos_ == NULL) {
    spawn_pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeFurnitureBin.spawn_pos)
  return spawn_pos_;
}
::proto::VectorBin* HomeFurnitureBin::release_spawn_pos() {
  // @@protoc_insertion_point(field_release:proto.HomeFurnitureBin.spawn_pos)
  
  ::proto::VectorBin* temp = spawn_pos_;
  spawn_pos_ = NULL;
  return temp;
}
void HomeFurnitureBin::set_allocated_spawn_pos(::proto::VectorBin* spawn_pos) {
  delete spawn_pos_;
  spawn_pos_ = spawn_pos;
  if (spawn_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeFurnitureBin.spawn_pos)
}

// .proto.VectorBin spawn_rot = 4;
bool HomeFurnitureBin::has_spawn_rot() const {
  return this != internal_default_instance() && spawn_rot_ != NULL;
}
void HomeFurnitureBin::clear_spawn_rot() {
  if (GetArenaNoVirtual() == NULL && spawn_rot_ != NULL) delete spawn_rot_;
  spawn_rot_ = NULL;
}
const ::proto::VectorBin& HomeFurnitureBin::spawn_rot() const {
  const ::proto::VectorBin* p = spawn_rot_;
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureBin.spawn_rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
::proto::VectorBin* HomeFurnitureBin::mutable_spawn_rot() {
  
  if (spawn_rot_ == NULL) {
    spawn_rot_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeFurnitureBin.spawn_rot)
  return spawn_rot_;
}
::proto::VectorBin* HomeFurnitureBin::release_spawn_rot() {
  // @@protoc_insertion_point(field_release:proto.HomeFurnitureBin.spawn_rot)
  
  ::proto::VectorBin* temp = spawn_rot_;
  spawn_rot_ = NULL;
  return temp;
}
void HomeFurnitureBin::set_allocated_spawn_rot(::proto::VectorBin* spawn_rot) {
  delete spawn_rot_;
  spawn_rot_ = spawn_rot;
  if (spawn_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeFurnitureBin.spawn_rot)
}

// int32 parent_furniture_index = 7;
void HomeFurnitureBin::clear_parent_furniture_index() {
  parent_furniture_index_ = 0;
}
::google::protobuf::int32 HomeFurnitureBin::parent_furniture_index() const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureBin.parent_furniture_index)
  return parent_furniture_index_;
}
void HomeFurnitureBin::set_parent_furniture_index(::google::protobuf::int32 value) {
  
  parent_furniture_index_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeFurnitureBin.parent_furniture_index)
}

// uint32 guid = 8;
void HomeFurnitureBin::clear_guid() {
  guid_ = 0u;
}
::google::protobuf::uint32 HomeFurnitureBin::guid() const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureBin.guid)
  return guid_;
}
void HomeFurnitureBin::set_guid(::google::protobuf::uint32 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeFurnitureBin.guid)
}

// uint32 version = 9;
void HomeFurnitureBin::clear_version() {
  version_ = 0u;
}
::google::protobuf::uint32 HomeFurnitureBin::version() const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureBin.version)
  return version_;
}
void HomeFurnitureBin::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeFurnitureBin.version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeFurnitureSuiteBin::kSuiteIdFieldNumber;
const int HomeFurnitureSuiteBin::kSpawnPosFieldNumber;
const int HomeFurnitureSuiteBin::kIncludedFurnitureIndexListFieldNumber;
const int HomeFurnitureSuiteBin::kGuidFieldNumber;
const int HomeFurnitureSuiteBin::kIsAllowSummonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeFurnitureSuiteBin::HomeFurnitureSuiteBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeFurnitureSuiteBin)
}
HomeFurnitureSuiteBin::HomeFurnitureSuiteBin(const HomeFurnitureSuiteBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      included_furniture_index_list_(from.included_furniture_index_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_spawn_pos()) {
    spawn_pos_ = new ::proto::VectorBin(*from.spawn_pos_);
  } else {
    spawn_pos_ = NULL;
  }
  ::memcpy(&suite_id_, &from.suite_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_allow_summon_) -
    reinterpret_cast<char*>(&suite_id_)) + sizeof(is_allow_summon_));
  // @@protoc_insertion_point(copy_constructor:proto.HomeFurnitureSuiteBin)
}

void HomeFurnitureSuiteBin::SharedCtor() {
  ::memset(&spawn_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_allow_summon_) -
      reinterpret_cast<char*>(&spawn_pos_)) + sizeof(is_allow_summon_));
  _cached_size_ = 0;
}

HomeFurnitureSuiteBin::~HomeFurnitureSuiteBin() {
  // @@protoc_insertion_point(destructor:proto.HomeFurnitureSuiteBin)
  SharedDtor();
}

void HomeFurnitureSuiteBin::SharedDtor() {
  if (this != internal_default_instance()) delete spawn_pos_;
}

void HomeFurnitureSuiteBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeFurnitureSuiteBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeFurnitureSuiteBin& HomeFurnitureSuiteBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeFurnitureSuiteBin* HomeFurnitureSuiteBin::New(::google::protobuf::Arena* arena) const {
  HomeFurnitureSuiteBin* n = new HomeFurnitureSuiteBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeFurnitureSuiteBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeFurnitureSuiteBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  included_furniture_index_list_.Clear();
  if (GetArenaNoVirtual() == NULL && spawn_pos_ != NULL) {
    delete spawn_pos_;
  }
  spawn_pos_ = NULL;
  ::memset(&suite_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_allow_summon_) -
      reinterpret_cast<char*>(&suite_id_)) + sizeof(is_allow_summon_));
  _internal_metadata_.Clear();
}

bool HomeFurnitureSuiteBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeFurnitureSuiteBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 suite_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &suite_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.VectorBin spawn_pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_spawn_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 included_furniture_index_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_included_furniture_index_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26u, input, this->mutable_included_furniture_index_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_allow_summon = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_allow_summon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeFurnitureSuiteBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeFurnitureSuiteBin)
  return false;
#undef DO_
}

void HomeFurnitureSuiteBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeFurnitureSuiteBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 suite_id = 1;
  if (this->suite_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->suite_id(), output);
  }

  // .proto.VectorBin spawn_pos = 2;
  if (this->has_spawn_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->spawn_pos_, output);
  }

  // repeated int32 included_furniture_index_list = 3;
  if (this->included_furniture_index_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _included_furniture_index_list_cached_byte_size_));
  }
  for (int i = 0, n = this->included_furniture_index_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->included_furniture_index_list(i), output);
  }

  // uint32 guid = 4;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->guid(), output);
  }

  // bool is_allow_summon = 5;
  if (this->is_allow_summon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_allow_summon(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeFurnitureSuiteBin)
}

::google::protobuf::uint8* HomeFurnitureSuiteBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeFurnitureSuiteBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 suite_id = 1;
  if (this->suite_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->suite_id(), target);
  }

  // .proto.VectorBin spawn_pos = 2;
  if (this->has_spawn_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->spawn_pos_, deterministic, target);
  }

  // repeated int32 included_furniture_index_list = 3;
  if (this->included_furniture_index_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _included_furniture_index_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->included_furniture_index_list_, target);
  }

  // uint32 guid = 4;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->guid(), target);
  }

  // bool is_allow_summon = 5;
  if (this->is_allow_summon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_allow_summon(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeFurnitureSuiteBin)
  return target;
}

size_t HomeFurnitureSuiteBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeFurnitureSuiteBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 included_furniture_index_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->included_furniture_index_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _included_furniture_index_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .proto.VectorBin spawn_pos = 2;
  if (this->has_spawn_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->spawn_pos_);
  }

  // uint32 suite_id = 1;
  if (this->suite_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->suite_id());
  }

  // uint32 guid = 4;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->guid());
  }

  // bool is_allow_summon = 5;
  if (this->is_allow_summon() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeFurnitureSuiteBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeFurnitureSuiteBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeFurnitureSuiteBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeFurnitureSuiteBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeFurnitureSuiteBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeFurnitureSuiteBin)
    MergeFrom(*source);
  }
}

void HomeFurnitureSuiteBin::MergeFrom(const HomeFurnitureSuiteBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeFurnitureSuiteBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  included_furniture_index_list_.MergeFrom(from.included_furniture_index_list_);
  if (from.has_spawn_pos()) {
    mutable_spawn_pos()->::proto::VectorBin::MergeFrom(from.spawn_pos());
  }
  if (from.suite_id() != 0) {
    set_suite_id(from.suite_id());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.is_allow_summon() != 0) {
    set_is_allow_summon(from.is_allow_summon());
  }
}

void HomeFurnitureSuiteBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeFurnitureSuiteBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeFurnitureSuiteBin::CopyFrom(const HomeFurnitureSuiteBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeFurnitureSuiteBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeFurnitureSuiteBin::IsInitialized() const {
  return true;
}

void HomeFurnitureSuiteBin::Swap(HomeFurnitureSuiteBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeFurnitureSuiteBin::InternalSwap(HomeFurnitureSuiteBin* other) {
  using std::swap;
  included_furniture_index_list_.InternalSwap(&other->included_furniture_index_list_);
  swap(spawn_pos_, other->spawn_pos_);
  swap(suite_id_, other->suite_id_);
  swap(guid_, other->guid_);
  swap(is_allow_summon_, other->is_allow_summon_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeFurnitureSuiteBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeFurnitureSuiteBin

// uint32 suite_id = 1;
void HomeFurnitureSuiteBin::clear_suite_id() {
  suite_id_ = 0u;
}
::google::protobuf::uint32 HomeFurnitureSuiteBin::suite_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureSuiteBin.suite_id)
  return suite_id_;
}
void HomeFurnitureSuiteBin::set_suite_id(::google::protobuf::uint32 value) {
  
  suite_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeFurnitureSuiteBin.suite_id)
}

// .proto.VectorBin spawn_pos = 2;
bool HomeFurnitureSuiteBin::has_spawn_pos() const {
  return this != internal_default_instance() && spawn_pos_ != NULL;
}
void HomeFurnitureSuiteBin::clear_spawn_pos() {
  if (GetArenaNoVirtual() == NULL && spawn_pos_ != NULL) delete spawn_pos_;
  spawn_pos_ = NULL;
}
const ::proto::VectorBin& HomeFurnitureSuiteBin::spawn_pos() const {
  const ::proto::VectorBin* p = spawn_pos_;
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureSuiteBin.spawn_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
::proto::VectorBin* HomeFurnitureSuiteBin::mutable_spawn_pos() {
  
  if (spawn_pos_ == NULL) {
    spawn_pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeFurnitureSuiteBin.spawn_pos)
  return spawn_pos_;
}
::proto::VectorBin* HomeFurnitureSuiteBin::release_spawn_pos() {
  // @@protoc_insertion_point(field_release:proto.HomeFurnitureSuiteBin.spawn_pos)
  
  ::proto::VectorBin* temp = spawn_pos_;
  spawn_pos_ = NULL;
  return temp;
}
void HomeFurnitureSuiteBin::set_allocated_spawn_pos(::proto::VectorBin* spawn_pos) {
  delete spawn_pos_;
  spawn_pos_ = spawn_pos;
  if (spawn_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeFurnitureSuiteBin.spawn_pos)
}

// repeated int32 included_furniture_index_list = 3;
int HomeFurnitureSuiteBin::included_furniture_index_list_size() const {
  return included_furniture_index_list_.size();
}
void HomeFurnitureSuiteBin::clear_included_furniture_index_list() {
  included_furniture_index_list_.Clear();
}
::google::protobuf::int32 HomeFurnitureSuiteBin::included_furniture_index_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureSuiteBin.included_furniture_index_list)
  return included_furniture_index_list_.Get(index);
}
void HomeFurnitureSuiteBin::set_included_furniture_index_list(int index, ::google::protobuf::int32 value) {
  included_furniture_index_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.HomeFurnitureSuiteBin.included_furniture_index_list)
}
void HomeFurnitureSuiteBin::add_included_furniture_index_list(::google::protobuf::int32 value) {
  included_furniture_index_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.HomeFurnitureSuiteBin.included_furniture_index_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
HomeFurnitureSuiteBin::included_furniture_index_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeFurnitureSuiteBin.included_furniture_index_list)
  return included_furniture_index_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
HomeFurnitureSuiteBin::mutable_included_furniture_index_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeFurnitureSuiteBin.included_furniture_index_list)
  return &included_furniture_index_list_;
}

// uint32 guid = 4;
void HomeFurnitureSuiteBin::clear_guid() {
  guid_ = 0u;
}
::google::protobuf::uint32 HomeFurnitureSuiteBin::guid() const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureSuiteBin.guid)
  return guid_;
}
void HomeFurnitureSuiteBin::set_guid(::google::protobuf::uint32 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeFurnitureSuiteBin.guid)
}

// bool is_allow_summon = 5;
void HomeFurnitureSuiteBin::clear_is_allow_summon() {
  is_allow_summon_ = false;
}
bool HomeFurnitureSuiteBin::is_allow_summon() const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureSuiteBin.is_allow_summon)
  return is_allow_summon_;
}
void HomeFurnitureSuiteBin::set_is_allow_summon(bool value) {
  
  is_allow_summon_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeFurnitureSuiteBin.is_allow_summon)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeNpcBin::kAvatarIdFieldNumber;
const int HomeNpcBin::kSpawnPosFieldNumber;
const int HomeNpcBin::kSpawnRotFieldNumber;
const int HomeNpcBin::kCostumeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeNpcBin::HomeNpcBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeNpcBin)
}
HomeNpcBin::HomeNpcBin(const HomeNpcBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_spawn_pos()) {
    spawn_pos_ = new ::proto::VectorBin(*from.spawn_pos_);
  } else {
    spawn_pos_ = NULL;
  }
  if (from.has_spawn_rot()) {
    spawn_rot_ = new ::proto::VectorBin(*from.spawn_rot_);
  } else {
    spawn_rot_ = NULL;
  }
  ::memcpy(&avatar_id_, &from.avatar_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&costume_id_) -
    reinterpret_cast<char*>(&avatar_id_)) + sizeof(costume_id_));
  // @@protoc_insertion_point(copy_constructor:proto.HomeNpcBin)
}

void HomeNpcBin::SharedCtor() {
  ::memset(&spawn_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&costume_id_) -
      reinterpret_cast<char*>(&spawn_pos_)) + sizeof(costume_id_));
  _cached_size_ = 0;
}

HomeNpcBin::~HomeNpcBin() {
  // @@protoc_insertion_point(destructor:proto.HomeNpcBin)
  SharedDtor();
}

void HomeNpcBin::SharedDtor() {
  if (this != internal_default_instance()) delete spawn_pos_;
  if (this != internal_default_instance()) delete spawn_rot_;
}

void HomeNpcBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeNpcBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeNpcBin& HomeNpcBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeNpcBin* HomeNpcBin::New(::google::protobuf::Arena* arena) const {
  HomeNpcBin* n = new HomeNpcBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeNpcBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeNpcBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && spawn_pos_ != NULL) {
    delete spawn_pos_;
  }
  spawn_pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && spawn_rot_ != NULL) {
    delete spawn_rot_;
  }
  spawn_rot_ = NULL;
  ::memset(&avatar_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&costume_id_) -
      reinterpret_cast<char*>(&avatar_id_)) + sizeof(costume_id_));
  _internal_metadata_.Clear();
}

bool HomeNpcBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeNpcBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 avatar_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.VectorBin spawn_pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_spawn_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.VectorBin spawn_rot = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_spawn_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 costume_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &costume_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeNpcBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeNpcBin)
  return false;
#undef DO_
}

void HomeNpcBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeNpcBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->avatar_id(), output);
  }

  // .proto.VectorBin spawn_pos = 2;
  if (this->has_spawn_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->spawn_pos_, output);
  }

  // .proto.VectorBin spawn_rot = 3;
  if (this->has_spawn_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->spawn_rot_, output);
  }

  // uint32 costume_id = 4;
  if (this->costume_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->costume_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeNpcBin)
}

::google::protobuf::uint8* HomeNpcBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeNpcBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->avatar_id(), target);
  }

  // .proto.VectorBin spawn_pos = 2;
  if (this->has_spawn_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->spawn_pos_, deterministic, target);
  }

  // .proto.VectorBin spawn_rot = 3;
  if (this->has_spawn_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->spawn_rot_, deterministic, target);
  }

  // uint32 costume_id = 4;
  if (this->costume_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->costume_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeNpcBin)
  return target;
}

size_t HomeNpcBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeNpcBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.VectorBin spawn_pos = 2;
  if (this->has_spawn_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->spawn_pos_);
  }

  // .proto.VectorBin spawn_rot = 3;
  if (this->has_spawn_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->spawn_rot_);
  }

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_id());
  }

  // uint32 costume_id = 4;
  if (this->costume_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->costume_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeNpcBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeNpcBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeNpcBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeNpcBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeNpcBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeNpcBin)
    MergeFrom(*source);
  }
}

void HomeNpcBin::MergeFrom(const HomeNpcBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeNpcBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_spawn_pos()) {
    mutable_spawn_pos()->::proto::VectorBin::MergeFrom(from.spawn_pos());
  }
  if (from.has_spawn_rot()) {
    mutable_spawn_rot()->::proto::VectorBin::MergeFrom(from.spawn_rot());
  }
  if (from.avatar_id() != 0) {
    set_avatar_id(from.avatar_id());
  }
  if (from.costume_id() != 0) {
    set_costume_id(from.costume_id());
  }
}

void HomeNpcBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeNpcBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeNpcBin::CopyFrom(const HomeNpcBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeNpcBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeNpcBin::IsInitialized() const {
  return true;
}

void HomeNpcBin::Swap(HomeNpcBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeNpcBin::InternalSwap(HomeNpcBin* other) {
  using std::swap;
  swap(spawn_pos_, other->spawn_pos_);
  swap(spawn_rot_, other->spawn_rot_);
  swap(avatar_id_, other->avatar_id_);
  swap(costume_id_, other->costume_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeNpcBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeNpcBin

// uint32 avatar_id = 1;
void HomeNpcBin::clear_avatar_id() {
  avatar_id_ = 0u;
}
::google::protobuf::uint32 HomeNpcBin::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeNpcBin.avatar_id)
  return avatar_id_;
}
void HomeNpcBin::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeNpcBin.avatar_id)
}

// .proto.VectorBin spawn_pos = 2;
bool HomeNpcBin::has_spawn_pos() const {
  return this != internal_default_instance() && spawn_pos_ != NULL;
}
void HomeNpcBin::clear_spawn_pos() {
  if (GetArenaNoVirtual() == NULL && spawn_pos_ != NULL) delete spawn_pos_;
  spawn_pos_ = NULL;
}
const ::proto::VectorBin& HomeNpcBin::spawn_pos() const {
  const ::proto::VectorBin* p = spawn_pos_;
  // @@protoc_insertion_point(field_get:proto.HomeNpcBin.spawn_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
::proto::VectorBin* HomeNpcBin::mutable_spawn_pos() {
  
  if (spawn_pos_ == NULL) {
    spawn_pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeNpcBin.spawn_pos)
  return spawn_pos_;
}
::proto::VectorBin* HomeNpcBin::release_spawn_pos() {
  // @@protoc_insertion_point(field_release:proto.HomeNpcBin.spawn_pos)
  
  ::proto::VectorBin* temp = spawn_pos_;
  spawn_pos_ = NULL;
  return temp;
}
void HomeNpcBin::set_allocated_spawn_pos(::proto::VectorBin* spawn_pos) {
  delete spawn_pos_;
  spawn_pos_ = spawn_pos;
  if (spawn_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeNpcBin.spawn_pos)
}

// .proto.VectorBin spawn_rot = 3;
bool HomeNpcBin::has_spawn_rot() const {
  return this != internal_default_instance() && spawn_rot_ != NULL;
}
void HomeNpcBin::clear_spawn_rot() {
  if (GetArenaNoVirtual() == NULL && spawn_rot_ != NULL) delete spawn_rot_;
  spawn_rot_ = NULL;
}
const ::proto::VectorBin& HomeNpcBin::spawn_rot() const {
  const ::proto::VectorBin* p = spawn_rot_;
  // @@protoc_insertion_point(field_get:proto.HomeNpcBin.spawn_rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
::proto::VectorBin* HomeNpcBin::mutable_spawn_rot() {
  
  if (spawn_rot_ == NULL) {
    spawn_rot_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeNpcBin.spawn_rot)
  return spawn_rot_;
}
::proto::VectorBin* HomeNpcBin::release_spawn_rot() {
  // @@protoc_insertion_point(field_release:proto.HomeNpcBin.spawn_rot)
  
  ::proto::VectorBin* temp = spawn_rot_;
  spawn_rot_ = NULL;
  return temp;
}
void HomeNpcBin::set_allocated_spawn_rot(::proto::VectorBin* spawn_rot) {
  delete spawn_rot_;
  spawn_rot_ = spawn_rot;
  if (spawn_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeNpcBin.spawn_rot)
}

// uint32 costume_id = 4;
void HomeNpcBin::clear_costume_id() {
  costume_id_ = 0u;
}
::google::protobuf::uint32 HomeNpcBin::costume_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeNpcBin.costume_id)
  return costume_id_;
}
void HomeNpcBin::set_costume_id(::google::protobuf::uint32 value) {
  
  costume_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeNpcBin.costume_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeAnimalBin::kFurnitureIdFieldNumber;
const int HomeAnimalBin::kSpawnPosFieldNumber;
const int HomeAnimalBin::kSpawnRotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeAnimalBin::HomeAnimalBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeAnimalBin)
}
HomeAnimalBin::HomeAnimalBin(const HomeAnimalBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_spawn_pos()) {
    spawn_pos_ = new ::proto::VectorBin(*from.spawn_pos_);
  } else {
    spawn_pos_ = NULL;
  }
  if (from.has_spawn_rot()) {
    spawn_rot_ = new ::proto::VectorBin(*from.spawn_rot_);
  } else {
    spawn_rot_ = NULL;
  }
  furniture_id_ = from.furniture_id_;
  // @@protoc_insertion_point(copy_constructor:proto.HomeAnimalBin)
}

void HomeAnimalBin::SharedCtor() {
  ::memset(&spawn_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&furniture_id_) -
      reinterpret_cast<char*>(&spawn_pos_)) + sizeof(furniture_id_));
  _cached_size_ = 0;
}

HomeAnimalBin::~HomeAnimalBin() {
  // @@protoc_insertion_point(destructor:proto.HomeAnimalBin)
  SharedDtor();
}

void HomeAnimalBin::SharedDtor() {
  if (this != internal_default_instance()) delete spawn_pos_;
  if (this != internal_default_instance()) delete spawn_rot_;
}

void HomeAnimalBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeAnimalBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeAnimalBin& HomeAnimalBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeAnimalBin* HomeAnimalBin::New(::google::protobuf::Arena* arena) const {
  HomeAnimalBin* n = new HomeAnimalBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeAnimalBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeAnimalBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && spawn_pos_ != NULL) {
    delete spawn_pos_;
  }
  spawn_pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && spawn_rot_ != NULL) {
    delete spawn_rot_;
  }
  spawn_rot_ = NULL;
  furniture_id_ = 0u;
  _internal_metadata_.Clear();
}

bool HomeAnimalBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeAnimalBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 furniture_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &furniture_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.VectorBin spawn_pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_spawn_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.VectorBin spawn_rot = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_spawn_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeAnimalBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeAnimalBin)
  return false;
#undef DO_
}

void HomeAnimalBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeAnimalBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 furniture_id = 1;
  if (this->furniture_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->furniture_id(), output);
  }

  // .proto.VectorBin spawn_pos = 2;
  if (this->has_spawn_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->spawn_pos_, output);
  }

  // .proto.VectorBin spawn_rot = 3;
  if (this->has_spawn_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->spawn_rot_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeAnimalBin)
}

::google::protobuf::uint8* HomeAnimalBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeAnimalBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 furniture_id = 1;
  if (this->furniture_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->furniture_id(), target);
  }

  // .proto.VectorBin spawn_pos = 2;
  if (this->has_spawn_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->spawn_pos_, deterministic, target);
  }

  // .proto.VectorBin spawn_rot = 3;
  if (this->has_spawn_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->spawn_rot_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeAnimalBin)
  return target;
}

size_t HomeAnimalBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeAnimalBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.VectorBin spawn_pos = 2;
  if (this->has_spawn_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->spawn_pos_);
  }

  // .proto.VectorBin spawn_rot = 3;
  if (this->has_spawn_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->spawn_rot_);
  }

  // uint32 furniture_id = 1;
  if (this->furniture_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->furniture_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeAnimalBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeAnimalBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeAnimalBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeAnimalBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeAnimalBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeAnimalBin)
    MergeFrom(*source);
  }
}

void HomeAnimalBin::MergeFrom(const HomeAnimalBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeAnimalBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_spawn_pos()) {
    mutable_spawn_pos()->::proto::VectorBin::MergeFrom(from.spawn_pos());
  }
  if (from.has_spawn_rot()) {
    mutable_spawn_rot()->::proto::VectorBin::MergeFrom(from.spawn_rot());
  }
  if (from.furniture_id() != 0) {
    set_furniture_id(from.furniture_id());
  }
}

void HomeAnimalBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeAnimalBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeAnimalBin::CopyFrom(const HomeAnimalBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeAnimalBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeAnimalBin::IsInitialized() const {
  return true;
}

void HomeAnimalBin::Swap(HomeAnimalBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeAnimalBin::InternalSwap(HomeAnimalBin* other) {
  using std::swap;
  swap(spawn_pos_, other->spawn_pos_);
  swap(spawn_rot_, other->spawn_rot_);
  swap(furniture_id_, other->furniture_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeAnimalBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeAnimalBin

// uint32 furniture_id = 1;
void HomeAnimalBin::clear_furniture_id() {
  furniture_id_ = 0u;
}
::google::protobuf::uint32 HomeAnimalBin::furniture_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeAnimalBin.furniture_id)
  return furniture_id_;
}
void HomeAnimalBin::set_furniture_id(::google::protobuf::uint32 value) {
  
  furniture_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeAnimalBin.furniture_id)
}

// .proto.VectorBin spawn_pos = 2;
bool HomeAnimalBin::has_spawn_pos() const {
  return this != internal_default_instance() && spawn_pos_ != NULL;
}
void HomeAnimalBin::clear_spawn_pos() {
  if (GetArenaNoVirtual() == NULL && spawn_pos_ != NULL) delete spawn_pos_;
  spawn_pos_ = NULL;
}
const ::proto::VectorBin& HomeAnimalBin::spawn_pos() const {
  const ::proto::VectorBin* p = spawn_pos_;
  // @@protoc_insertion_point(field_get:proto.HomeAnimalBin.spawn_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
::proto::VectorBin* HomeAnimalBin::mutable_spawn_pos() {
  
  if (spawn_pos_ == NULL) {
    spawn_pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeAnimalBin.spawn_pos)
  return spawn_pos_;
}
::proto::VectorBin* HomeAnimalBin::release_spawn_pos() {
  // @@protoc_insertion_point(field_release:proto.HomeAnimalBin.spawn_pos)
  
  ::proto::VectorBin* temp = spawn_pos_;
  spawn_pos_ = NULL;
  return temp;
}
void HomeAnimalBin::set_allocated_spawn_pos(::proto::VectorBin* spawn_pos) {
  delete spawn_pos_;
  spawn_pos_ = spawn_pos;
  if (spawn_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeAnimalBin.spawn_pos)
}

// .proto.VectorBin spawn_rot = 3;
bool HomeAnimalBin::has_spawn_rot() const {
  return this != internal_default_instance() && spawn_rot_ != NULL;
}
void HomeAnimalBin::clear_spawn_rot() {
  if (GetArenaNoVirtual() == NULL && spawn_rot_ != NULL) delete spawn_rot_;
  spawn_rot_ = NULL;
}
const ::proto::VectorBin& HomeAnimalBin::spawn_rot() const {
  const ::proto::VectorBin* p = spawn_rot_;
  // @@protoc_insertion_point(field_get:proto.HomeAnimalBin.spawn_rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
::proto::VectorBin* HomeAnimalBin::mutable_spawn_rot() {
  
  if (spawn_rot_ == NULL) {
    spawn_rot_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeAnimalBin.spawn_rot)
  return spawn_rot_;
}
::proto::VectorBin* HomeAnimalBin::release_spawn_rot() {
  // @@protoc_insertion_point(field_release:proto.HomeAnimalBin.spawn_rot)
  
  ::proto::VectorBin* temp = spawn_rot_;
  spawn_rot_ = NULL;
  return temp;
}
void HomeAnimalBin::set_allocated_spawn_rot(::proto::VectorBin* spawn_rot) {
  delete spawn_rot_;
  spawn_rot_ = spawn_rot;
  if (spawn_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeAnimalBin.spawn_rot)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeBlockSubFieldBin::kSpawnPosFieldNumber;
const int HomeBlockSubFieldBin::kSpawnRotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeBlockSubFieldBin::HomeBlockSubFieldBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeBlockSubFieldBin)
}
HomeBlockSubFieldBin::HomeBlockSubFieldBin(const HomeBlockSubFieldBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_spawn_pos()) {
    spawn_pos_ = new ::proto::VectorBin(*from.spawn_pos_);
  } else {
    spawn_pos_ = NULL;
  }
  if (from.has_spawn_rot()) {
    spawn_rot_ = new ::proto::VectorBin(*from.spawn_rot_);
  } else {
    spawn_rot_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.HomeBlockSubFieldBin)
}

void HomeBlockSubFieldBin::SharedCtor() {
  ::memset(&spawn_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&spawn_rot_) -
      reinterpret_cast<char*>(&spawn_pos_)) + sizeof(spawn_rot_));
  _cached_size_ = 0;
}

HomeBlockSubFieldBin::~HomeBlockSubFieldBin() {
  // @@protoc_insertion_point(destructor:proto.HomeBlockSubFieldBin)
  SharedDtor();
}

void HomeBlockSubFieldBin::SharedDtor() {
  if (this != internal_default_instance()) delete spawn_pos_;
  if (this != internal_default_instance()) delete spawn_rot_;
}

void HomeBlockSubFieldBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeBlockSubFieldBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeBlockSubFieldBin& HomeBlockSubFieldBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeBlockSubFieldBin* HomeBlockSubFieldBin::New(::google::protobuf::Arena* arena) const {
  HomeBlockSubFieldBin* n = new HomeBlockSubFieldBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeBlockSubFieldBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeBlockSubFieldBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && spawn_pos_ != NULL) {
    delete spawn_pos_;
  }
  spawn_pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && spawn_rot_ != NULL) {
    delete spawn_rot_;
  }
  spawn_rot_ = NULL;
  _internal_metadata_.Clear();
}

bool HomeBlockSubFieldBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeBlockSubFieldBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.VectorBin spawn_pos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_spawn_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.VectorBin spawn_rot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_spawn_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeBlockSubFieldBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeBlockSubFieldBin)
  return false;
#undef DO_
}

void HomeBlockSubFieldBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeBlockSubFieldBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.VectorBin spawn_pos = 1;
  if (this->has_spawn_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->spawn_pos_, output);
  }

  // .proto.VectorBin spawn_rot = 2;
  if (this->has_spawn_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->spawn_rot_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeBlockSubFieldBin)
}

::google::protobuf::uint8* HomeBlockSubFieldBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeBlockSubFieldBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.VectorBin spawn_pos = 1;
  if (this->has_spawn_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->spawn_pos_, deterministic, target);
  }

  // .proto.VectorBin spawn_rot = 2;
  if (this->has_spawn_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->spawn_rot_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeBlockSubFieldBin)
  return target;
}

size_t HomeBlockSubFieldBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeBlockSubFieldBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.VectorBin spawn_pos = 1;
  if (this->has_spawn_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->spawn_pos_);
  }

  // .proto.VectorBin spawn_rot = 2;
  if (this->has_spawn_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->spawn_rot_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeBlockSubFieldBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeBlockSubFieldBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeBlockSubFieldBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeBlockSubFieldBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeBlockSubFieldBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeBlockSubFieldBin)
    MergeFrom(*source);
  }
}

void HomeBlockSubFieldBin::MergeFrom(const HomeBlockSubFieldBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeBlockSubFieldBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_spawn_pos()) {
    mutable_spawn_pos()->::proto::VectorBin::MergeFrom(from.spawn_pos());
  }
  if (from.has_spawn_rot()) {
    mutable_spawn_rot()->::proto::VectorBin::MergeFrom(from.spawn_rot());
  }
}

void HomeBlockSubFieldBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeBlockSubFieldBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeBlockSubFieldBin::CopyFrom(const HomeBlockSubFieldBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeBlockSubFieldBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeBlockSubFieldBin::IsInitialized() const {
  return true;
}

void HomeBlockSubFieldBin::Swap(HomeBlockSubFieldBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeBlockSubFieldBin::InternalSwap(HomeBlockSubFieldBin* other) {
  using std::swap;
  swap(spawn_pos_, other->spawn_pos_);
  swap(spawn_rot_, other->spawn_rot_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeBlockSubFieldBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeBlockSubFieldBin

// .proto.VectorBin spawn_pos = 1;
bool HomeBlockSubFieldBin::has_spawn_pos() const {
  return this != internal_default_instance() && spawn_pos_ != NULL;
}
void HomeBlockSubFieldBin::clear_spawn_pos() {
  if (GetArenaNoVirtual() == NULL && spawn_pos_ != NULL) delete spawn_pos_;
  spawn_pos_ = NULL;
}
const ::proto::VectorBin& HomeBlockSubFieldBin::spawn_pos() const {
  const ::proto::VectorBin* p = spawn_pos_;
  // @@protoc_insertion_point(field_get:proto.HomeBlockSubFieldBin.spawn_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
::proto::VectorBin* HomeBlockSubFieldBin::mutable_spawn_pos() {
  
  if (spawn_pos_ == NULL) {
    spawn_pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockSubFieldBin.spawn_pos)
  return spawn_pos_;
}
::proto::VectorBin* HomeBlockSubFieldBin::release_spawn_pos() {
  // @@protoc_insertion_point(field_release:proto.HomeBlockSubFieldBin.spawn_pos)
  
  ::proto::VectorBin* temp = spawn_pos_;
  spawn_pos_ = NULL;
  return temp;
}
void HomeBlockSubFieldBin::set_allocated_spawn_pos(::proto::VectorBin* spawn_pos) {
  delete spawn_pos_;
  spawn_pos_ = spawn_pos;
  if (spawn_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeBlockSubFieldBin.spawn_pos)
}

// .proto.VectorBin spawn_rot = 2;
bool HomeBlockSubFieldBin::has_spawn_rot() const {
  return this != internal_default_instance() && spawn_rot_ != NULL;
}
void HomeBlockSubFieldBin::clear_spawn_rot() {
  if (GetArenaNoVirtual() == NULL && spawn_rot_ != NULL) delete spawn_rot_;
  spawn_rot_ = NULL;
}
const ::proto::VectorBin& HomeBlockSubFieldBin::spawn_rot() const {
  const ::proto::VectorBin* p = spawn_rot_;
  // @@protoc_insertion_point(field_get:proto.HomeBlockSubFieldBin.spawn_rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
::proto::VectorBin* HomeBlockSubFieldBin::mutable_spawn_rot() {
  
  if (spawn_rot_ == NULL) {
    spawn_rot_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockSubFieldBin.spawn_rot)
  return spawn_rot_;
}
::proto::VectorBin* HomeBlockSubFieldBin::release_spawn_rot() {
  // @@protoc_insertion_point(field_release:proto.HomeBlockSubFieldBin.spawn_rot)
  
  ::proto::VectorBin* temp = spawn_rot_;
  spawn_rot_ = NULL;
  return temp;
}
void HomeBlockSubFieldBin::set_allocated_spawn_rot(::proto::VectorBin* spawn_rot) {
  delete spawn_rot_;
  spawn_rot_ = spawn_rot;
  if (spawn_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeBlockSubFieldBin.spawn_rot)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeBlockFieldBin::kGuidFieldNumber;
const int HomeBlockFieldBin::kFurnitureIdFieldNumber;
const int HomeBlockFieldBin::kSpawnPosFieldNumber;
const int HomeBlockFieldBin::kSpawnRotFieldNumber;
const int HomeBlockFieldBin::kSubFieldListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeBlockFieldBin::HomeBlockFieldBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeBlockFieldBin)
}
HomeBlockFieldBin::HomeBlockFieldBin(const HomeBlockFieldBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sub_field_list_(from.sub_field_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_spawn_pos()) {
    spawn_pos_ = new ::proto::VectorBin(*from.spawn_pos_);
  } else {
    spawn_pos_ = NULL;
  }
  if (from.has_spawn_rot()) {
    spawn_rot_ = new ::proto::VectorBin(*from.spawn_rot_);
  } else {
    spawn_rot_ = NULL;
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&furniture_id_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(furniture_id_));
  // @@protoc_insertion_point(copy_constructor:proto.HomeBlockFieldBin)
}

void HomeBlockFieldBin::SharedCtor() {
  ::memset(&spawn_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&furniture_id_) -
      reinterpret_cast<char*>(&spawn_pos_)) + sizeof(furniture_id_));
  _cached_size_ = 0;
}

HomeBlockFieldBin::~HomeBlockFieldBin() {
  // @@protoc_insertion_point(destructor:proto.HomeBlockFieldBin)
  SharedDtor();
}

void HomeBlockFieldBin::SharedDtor() {
  if (this != internal_default_instance()) delete spawn_pos_;
  if (this != internal_default_instance()) delete spawn_rot_;
}

void HomeBlockFieldBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeBlockFieldBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeBlockFieldBin& HomeBlockFieldBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeBlockFieldBin* HomeBlockFieldBin::New(::google::protobuf::Arena* arena) const {
  HomeBlockFieldBin* n = new HomeBlockFieldBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeBlockFieldBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeBlockFieldBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sub_field_list_.Clear();
  if (GetArenaNoVirtual() == NULL && spawn_pos_ != NULL) {
    delete spawn_pos_;
  }
  spawn_pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && spawn_rot_ != NULL) {
    delete spawn_rot_;
  }
  spawn_rot_ = NULL;
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&furniture_id_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(furniture_id_));
  _internal_metadata_.Clear();
}

bool HomeBlockFieldBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeBlockFieldBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 furniture_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &furniture_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.VectorBin spawn_pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_spawn_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.VectorBin spawn_rot = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_spawn_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomeBlockSubFieldBin sub_field_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sub_field_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeBlockFieldBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeBlockFieldBin)
  return false;
#undef DO_
}

void HomeBlockFieldBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeBlockFieldBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->guid(), output);
  }

  // uint32 furniture_id = 2;
  if (this->furniture_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->furniture_id(), output);
  }

  // .proto.VectorBin spawn_pos = 3;
  if (this->has_spawn_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->spawn_pos_, output);
  }

  // .proto.VectorBin spawn_rot = 4;
  if (this->has_spawn_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->spawn_rot_, output);
  }

  // repeated .proto.HomeBlockSubFieldBin sub_field_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sub_field_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->sub_field_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeBlockFieldBin)
}

::google::protobuf::uint8* HomeBlockFieldBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeBlockFieldBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->guid(), target);
  }

  // uint32 furniture_id = 2;
  if (this->furniture_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->furniture_id(), target);
  }

  // .proto.VectorBin spawn_pos = 3;
  if (this->has_spawn_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->spawn_pos_, deterministic, target);
  }

  // .proto.VectorBin spawn_rot = 4;
  if (this->has_spawn_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->spawn_rot_, deterministic, target);
  }

  // repeated .proto.HomeBlockSubFieldBin sub_field_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sub_field_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->sub_field_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeBlockFieldBin)
  return target;
}

size_t HomeBlockFieldBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeBlockFieldBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.HomeBlockSubFieldBin sub_field_list = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->sub_field_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sub_field_list(static_cast<int>(i)));
    }
  }

  // .proto.VectorBin spawn_pos = 3;
  if (this->has_spawn_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->spawn_pos_);
  }

  // .proto.VectorBin spawn_rot = 4;
  if (this->has_spawn_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->spawn_rot_);
  }

  // uint32 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->guid());
  }

  // uint32 furniture_id = 2;
  if (this->furniture_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->furniture_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeBlockFieldBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeBlockFieldBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeBlockFieldBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeBlockFieldBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeBlockFieldBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeBlockFieldBin)
    MergeFrom(*source);
  }
}

void HomeBlockFieldBin::MergeFrom(const HomeBlockFieldBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeBlockFieldBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sub_field_list_.MergeFrom(from.sub_field_list_);
  if (from.has_spawn_pos()) {
    mutable_spawn_pos()->::proto::VectorBin::MergeFrom(from.spawn_pos());
  }
  if (from.has_spawn_rot()) {
    mutable_spawn_rot()->::proto::VectorBin::MergeFrom(from.spawn_rot());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.furniture_id() != 0) {
    set_furniture_id(from.furniture_id());
  }
}

void HomeBlockFieldBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeBlockFieldBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeBlockFieldBin::CopyFrom(const HomeBlockFieldBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeBlockFieldBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeBlockFieldBin::IsInitialized() const {
  return true;
}

void HomeBlockFieldBin::Swap(HomeBlockFieldBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeBlockFieldBin::InternalSwap(HomeBlockFieldBin* other) {
  using std::swap;
  sub_field_list_.InternalSwap(&other->sub_field_list_);
  swap(spawn_pos_, other->spawn_pos_);
  swap(spawn_rot_, other->spawn_rot_);
  swap(guid_, other->guid_);
  swap(furniture_id_, other->furniture_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeBlockFieldBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeBlockFieldBin

// uint32 guid = 1;
void HomeBlockFieldBin::clear_guid() {
  guid_ = 0u;
}
::google::protobuf::uint32 HomeBlockFieldBin::guid() const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockFieldBin.guid)
  return guid_;
}
void HomeBlockFieldBin::set_guid(::google::protobuf::uint32 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBlockFieldBin.guid)
}

// uint32 furniture_id = 2;
void HomeBlockFieldBin::clear_furniture_id() {
  furniture_id_ = 0u;
}
::google::protobuf::uint32 HomeBlockFieldBin::furniture_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockFieldBin.furniture_id)
  return furniture_id_;
}
void HomeBlockFieldBin::set_furniture_id(::google::protobuf::uint32 value) {
  
  furniture_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBlockFieldBin.furniture_id)
}

// .proto.VectorBin spawn_pos = 3;
bool HomeBlockFieldBin::has_spawn_pos() const {
  return this != internal_default_instance() && spawn_pos_ != NULL;
}
void HomeBlockFieldBin::clear_spawn_pos() {
  if (GetArenaNoVirtual() == NULL && spawn_pos_ != NULL) delete spawn_pos_;
  spawn_pos_ = NULL;
}
const ::proto::VectorBin& HomeBlockFieldBin::spawn_pos() const {
  const ::proto::VectorBin* p = spawn_pos_;
  // @@protoc_insertion_point(field_get:proto.HomeBlockFieldBin.spawn_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
::proto::VectorBin* HomeBlockFieldBin::mutable_spawn_pos() {
  
  if (spawn_pos_ == NULL) {
    spawn_pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockFieldBin.spawn_pos)
  return spawn_pos_;
}
::proto::VectorBin* HomeBlockFieldBin::release_spawn_pos() {
  // @@protoc_insertion_point(field_release:proto.HomeBlockFieldBin.spawn_pos)
  
  ::proto::VectorBin* temp = spawn_pos_;
  spawn_pos_ = NULL;
  return temp;
}
void HomeBlockFieldBin::set_allocated_spawn_pos(::proto::VectorBin* spawn_pos) {
  delete spawn_pos_;
  spawn_pos_ = spawn_pos;
  if (spawn_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeBlockFieldBin.spawn_pos)
}

// .proto.VectorBin spawn_rot = 4;
bool HomeBlockFieldBin::has_spawn_rot() const {
  return this != internal_default_instance() && spawn_rot_ != NULL;
}
void HomeBlockFieldBin::clear_spawn_rot() {
  if (GetArenaNoVirtual() == NULL && spawn_rot_ != NULL) delete spawn_rot_;
  spawn_rot_ = NULL;
}
const ::proto::VectorBin& HomeBlockFieldBin::spawn_rot() const {
  const ::proto::VectorBin* p = spawn_rot_;
  // @@protoc_insertion_point(field_get:proto.HomeBlockFieldBin.spawn_rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
::proto::VectorBin* HomeBlockFieldBin::mutable_spawn_rot() {
  
  if (spawn_rot_ == NULL) {
    spawn_rot_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockFieldBin.spawn_rot)
  return spawn_rot_;
}
::proto::VectorBin* HomeBlockFieldBin::release_spawn_rot() {
  // @@protoc_insertion_point(field_release:proto.HomeBlockFieldBin.spawn_rot)
  
  ::proto::VectorBin* temp = spawn_rot_;
  spawn_rot_ = NULL;
  return temp;
}
void HomeBlockFieldBin::set_allocated_spawn_rot(::proto::VectorBin* spawn_rot) {
  delete spawn_rot_;
  spawn_rot_ = spawn_rot;
  if (spawn_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeBlockFieldBin.spawn_rot)
}

// repeated .proto.HomeBlockSubFieldBin sub_field_list = 5;
int HomeBlockFieldBin::sub_field_list_size() const {
  return sub_field_list_.size();
}
void HomeBlockFieldBin::clear_sub_field_list() {
  sub_field_list_.Clear();
}
const ::proto::HomeBlockSubFieldBin& HomeBlockFieldBin::sub_field_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockFieldBin.sub_field_list)
  return sub_field_list_.Get(index);
}
::proto::HomeBlockSubFieldBin* HomeBlockFieldBin::mutable_sub_field_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockFieldBin.sub_field_list)
  return sub_field_list_.Mutable(index);
}
::proto::HomeBlockSubFieldBin* HomeBlockFieldBin::add_sub_field_list() {
  // @@protoc_insertion_point(field_add:proto.HomeBlockFieldBin.sub_field_list)
  return sub_field_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeBlockSubFieldBin >*
HomeBlockFieldBin::mutable_sub_field_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeBlockFieldBin.sub_field_list)
  return &sub_field_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeBlockSubFieldBin >&
HomeBlockFieldBin::sub_field_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeBlockFieldBin.sub_field_list)
  return sub_field_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeFurnitureGroupBin::kGroupFurnitureIndexFieldNumber;
const int HomeFurnitureGroupBin::kVirtualFurniureListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeFurnitureGroupBin::HomeFurnitureGroupBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeFurnitureGroupBin)
}
HomeFurnitureGroupBin::HomeFurnitureGroupBin(const HomeFurnitureGroupBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      virtual_furniure_list_(from.virtual_furniure_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_furniture_index_ = from.group_furniture_index_;
  // @@protoc_insertion_point(copy_constructor:proto.HomeFurnitureGroupBin)
}

void HomeFurnitureGroupBin::SharedCtor() {
  group_furniture_index_ = 0u;
  _cached_size_ = 0;
}

HomeFurnitureGroupBin::~HomeFurnitureGroupBin() {
  // @@protoc_insertion_point(destructor:proto.HomeFurnitureGroupBin)
  SharedDtor();
}

void HomeFurnitureGroupBin::SharedDtor() {
}

void HomeFurnitureGroupBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeFurnitureGroupBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeFurnitureGroupBin& HomeFurnitureGroupBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeFurnitureGroupBin* HomeFurnitureGroupBin::New(::google::protobuf::Arena* arena) const {
  HomeFurnitureGroupBin* n = new HomeFurnitureGroupBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeFurnitureGroupBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeFurnitureGroupBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  virtual_furniure_list_.Clear();
  group_furniture_index_ = 0u;
  _internal_metadata_.Clear();
}

bool HomeFurnitureGroupBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeFurnitureGroupBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 group_furniture_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_furniture_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomeFurnitureBin virtual_furniure_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_virtual_furniure_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeFurnitureGroupBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeFurnitureGroupBin)
  return false;
#undef DO_
}

void HomeFurnitureGroupBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeFurnitureGroupBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_furniture_index = 1;
  if (this->group_furniture_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->group_furniture_index(), output);
  }

  // repeated .proto.HomeFurnitureBin virtual_furniure_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->virtual_furniure_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->virtual_furniure_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeFurnitureGroupBin)
}

::google::protobuf::uint8* HomeFurnitureGroupBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeFurnitureGroupBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_furniture_index = 1;
  if (this->group_furniture_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->group_furniture_index(), target);
  }

  // repeated .proto.HomeFurnitureBin virtual_furniure_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->virtual_furniure_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->virtual_furniure_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeFurnitureGroupBin)
  return target;
}

size_t HomeFurnitureGroupBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeFurnitureGroupBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.HomeFurnitureBin virtual_furniure_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->virtual_furniure_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->virtual_furniure_list(static_cast<int>(i)));
    }
  }

  // uint32 group_furniture_index = 1;
  if (this->group_furniture_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_furniture_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeFurnitureGroupBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeFurnitureGroupBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeFurnitureGroupBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeFurnitureGroupBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeFurnitureGroupBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeFurnitureGroupBin)
    MergeFrom(*source);
  }
}

void HomeFurnitureGroupBin::MergeFrom(const HomeFurnitureGroupBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeFurnitureGroupBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  virtual_furniure_list_.MergeFrom(from.virtual_furniure_list_);
  if (from.group_furniture_index() != 0) {
    set_group_furniture_index(from.group_furniture_index());
  }
}

void HomeFurnitureGroupBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeFurnitureGroupBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeFurnitureGroupBin::CopyFrom(const HomeFurnitureGroupBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeFurnitureGroupBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeFurnitureGroupBin::IsInitialized() const {
  return true;
}

void HomeFurnitureGroupBin::Swap(HomeFurnitureGroupBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeFurnitureGroupBin::InternalSwap(HomeFurnitureGroupBin* other) {
  using std::swap;
  virtual_furniure_list_.InternalSwap(&other->virtual_furniure_list_);
  swap(group_furniture_index_, other->group_furniture_index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeFurnitureGroupBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeFurnitureGroupBin

// uint32 group_furniture_index = 1;
void HomeFurnitureGroupBin::clear_group_furniture_index() {
  group_furniture_index_ = 0u;
}
::google::protobuf::uint32 HomeFurnitureGroupBin::group_furniture_index() const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureGroupBin.group_furniture_index)
  return group_furniture_index_;
}
void HomeFurnitureGroupBin::set_group_furniture_index(::google::protobuf::uint32 value) {
  
  group_furniture_index_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeFurnitureGroupBin.group_furniture_index)
}

// repeated .proto.HomeFurnitureBin virtual_furniure_list = 2;
int HomeFurnitureGroupBin::virtual_furniure_list_size() const {
  return virtual_furniure_list_.size();
}
void HomeFurnitureGroupBin::clear_virtual_furniure_list() {
  virtual_furniure_list_.Clear();
}
const ::proto::HomeFurnitureBin& HomeFurnitureGroupBin::virtual_furniure_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureGroupBin.virtual_furniure_list)
  return virtual_furniure_list_.Get(index);
}
::proto::HomeFurnitureBin* HomeFurnitureGroupBin::mutable_virtual_furniure_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeFurnitureGroupBin.virtual_furniure_list)
  return virtual_furniure_list_.Mutable(index);
}
::proto::HomeFurnitureBin* HomeFurnitureGroupBin::add_virtual_furniure_list() {
  // @@protoc_insertion_point(field_add:proto.HomeFurnitureGroupBin.virtual_furniure_list)
  return virtual_furniure_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >*
HomeFurnitureGroupBin::mutable_virtual_furniure_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeFurnitureGroupBin.virtual_furniure_list)
  return &virtual_furniure_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >&
HomeFurnitureGroupBin::virtual_furniure_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeFurnitureGroupBin.virtual_furniure_list)
  return virtual_furniure_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeFurnitureCustomSuiteBin::kSpawnPosFieldNumber;
const int HomeFurnitureCustomSuiteBin::kIncludedFurnitureIndexListFieldNumber;
const int HomeFurnitureCustomSuiteBin::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeFurnitureCustomSuiteBin::HomeFurnitureCustomSuiteBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeFurnitureCustomSuiteBin)
}
HomeFurnitureCustomSuiteBin::HomeFurnitureCustomSuiteBin(const HomeFurnitureCustomSuiteBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      included_furniture_index_list_(from.included_furniture_index_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_spawn_pos()) {
    spawn_pos_ = new ::proto::VectorBin(*from.spawn_pos_);
  } else {
    spawn_pos_ = NULL;
  }
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:proto.HomeFurnitureCustomSuiteBin)
}

void HomeFurnitureCustomSuiteBin::SharedCtor() {
  ::memset(&spawn_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guid_) -
      reinterpret_cast<char*>(&spawn_pos_)) + sizeof(guid_));
  _cached_size_ = 0;
}

HomeFurnitureCustomSuiteBin::~HomeFurnitureCustomSuiteBin() {
  // @@protoc_insertion_point(destructor:proto.HomeFurnitureCustomSuiteBin)
  SharedDtor();
}

void HomeFurnitureCustomSuiteBin::SharedDtor() {
  if (this != internal_default_instance()) delete spawn_pos_;
}

void HomeFurnitureCustomSuiteBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeFurnitureCustomSuiteBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeFurnitureCustomSuiteBin& HomeFurnitureCustomSuiteBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeFurnitureCustomSuiteBin* HomeFurnitureCustomSuiteBin::New(::google::protobuf::Arena* arena) const {
  HomeFurnitureCustomSuiteBin* n = new HomeFurnitureCustomSuiteBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeFurnitureCustomSuiteBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeFurnitureCustomSuiteBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  included_furniture_index_list_.Clear();
  if (GetArenaNoVirtual() == NULL && spawn_pos_ != NULL) {
    delete spawn_pos_;
  }
  spawn_pos_ = NULL;
  guid_ = 0u;
  _internal_metadata_.Clear();
}

bool HomeFurnitureCustomSuiteBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeFurnitureCustomSuiteBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.VectorBin spawn_pos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_spawn_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 included_furniture_index_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_included_furniture_index_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_included_furniture_index_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeFurnitureCustomSuiteBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeFurnitureCustomSuiteBin)
  return false;
#undef DO_
}

void HomeFurnitureCustomSuiteBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeFurnitureCustomSuiteBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.VectorBin spawn_pos = 1;
  if (this->has_spawn_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->spawn_pos_, output);
  }

  // repeated int32 included_furniture_index_list = 2;
  if (this->included_furniture_index_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _included_furniture_index_list_cached_byte_size_));
  }
  for (int i = 0, n = this->included_furniture_index_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->included_furniture_index_list(i), output);
  }

  // uint32 guid = 3;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeFurnitureCustomSuiteBin)
}

::google::protobuf::uint8* HomeFurnitureCustomSuiteBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeFurnitureCustomSuiteBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.VectorBin spawn_pos = 1;
  if (this->has_spawn_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->spawn_pos_, deterministic, target);
  }

  // repeated int32 included_furniture_index_list = 2;
  if (this->included_furniture_index_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _included_furniture_index_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->included_furniture_index_list_, target);
  }

  // uint32 guid = 3;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeFurnitureCustomSuiteBin)
  return target;
}

size_t HomeFurnitureCustomSuiteBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeFurnitureCustomSuiteBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 included_furniture_index_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->included_furniture_index_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _included_furniture_index_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .proto.VectorBin spawn_pos = 1;
  if (this->has_spawn_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->spawn_pos_);
  }

  // uint32 guid = 3;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeFurnitureCustomSuiteBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeFurnitureCustomSuiteBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeFurnitureCustomSuiteBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeFurnitureCustomSuiteBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeFurnitureCustomSuiteBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeFurnitureCustomSuiteBin)
    MergeFrom(*source);
  }
}

void HomeFurnitureCustomSuiteBin::MergeFrom(const HomeFurnitureCustomSuiteBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeFurnitureCustomSuiteBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  included_furniture_index_list_.MergeFrom(from.included_furniture_index_list_);
  if (from.has_spawn_pos()) {
    mutable_spawn_pos()->::proto::VectorBin::MergeFrom(from.spawn_pos());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
}

void HomeFurnitureCustomSuiteBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeFurnitureCustomSuiteBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeFurnitureCustomSuiteBin::CopyFrom(const HomeFurnitureCustomSuiteBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeFurnitureCustomSuiteBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeFurnitureCustomSuiteBin::IsInitialized() const {
  return true;
}

void HomeFurnitureCustomSuiteBin::Swap(HomeFurnitureCustomSuiteBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeFurnitureCustomSuiteBin::InternalSwap(HomeFurnitureCustomSuiteBin* other) {
  using std::swap;
  included_furniture_index_list_.InternalSwap(&other->included_furniture_index_list_);
  swap(spawn_pos_, other->spawn_pos_);
  swap(guid_, other->guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeFurnitureCustomSuiteBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeFurnitureCustomSuiteBin

// .proto.VectorBin spawn_pos = 1;
bool HomeFurnitureCustomSuiteBin::has_spawn_pos() const {
  return this != internal_default_instance() && spawn_pos_ != NULL;
}
void HomeFurnitureCustomSuiteBin::clear_spawn_pos() {
  if (GetArenaNoVirtual() == NULL && spawn_pos_ != NULL) delete spawn_pos_;
  spawn_pos_ = NULL;
}
const ::proto::VectorBin& HomeFurnitureCustomSuiteBin::spawn_pos() const {
  const ::proto::VectorBin* p = spawn_pos_;
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureCustomSuiteBin.spawn_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
::proto::VectorBin* HomeFurnitureCustomSuiteBin::mutable_spawn_pos() {
  
  if (spawn_pos_ == NULL) {
    spawn_pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeFurnitureCustomSuiteBin.spawn_pos)
  return spawn_pos_;
}
::proto::VectorBin* HomeFurnitureCustomSuiteBin::release_spawn_pos() {
  // @@protoc_insertion_point(field_release:proto.HomeFurnitureCustomSuiteBin.spawn_pos)
  
  ::proto::VectorBin* temp = spawn_pos_;
  spawn_pos_ = NULL;
  return temp;
}
void HomeFurnitureCustomSuiteBin::set_allocated_spawn_pos(::proto::VectorBin* spawn_pos) {
  delete spawn_pos_;
  spawn_pos_ = spawn_pos;
  if (spawn_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeFurnitureCustomSuiteBin.spawn_pos)
}

// repeated int32 included_furniture_index_list = 2;
int HomeFurnitureCustomSuiteBin::included_furniture_index_list_size() const {
  return included_furniture_index_list_.size();
}
void HomeFurnitureCustomSuiteBin::clear_included_furniture_index_list() {
  included_furniture_index_list_.Clear();
}
::google::protobuf::int32 HomeFurnitureCustomSuiteBin::included_furniture_index_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureCustomSuiteBin.included_furniture_index_list)
  return included_furniture_index_list_.Get(index);
}
void HomeFurnitureCustomSuiteBin::set_included_furniture_index_list(int index, ::google::protobuf::int32 value) {
  included_furniture_index_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.HomeFurnitureCustomSuiteBin.included_furniture_index_list)
}
void HomeFurnitureCustomSuiteBin::add_included_furniture_index_list(::google::protobuf::int32 value) {
  included_furniture_index_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.HomeFurnitureCustomSuiteBin.included_furniture_index_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
HomeFurnitureCustomSuiteBin::included_furniture_index_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeFurnitureCustomSuiteBin.included_furniture_index_list)
  return included_furniture_index_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
HomeFurnitureCustomSuiteBin::mutable_included_furniture_index_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeFurnitureCustomSuiteBin.included_furniture_index_list)
  return &included_furniture_index_list_;
}

// uint32 guid = 3;
void HomeFurnitureCustomSuiteBin::clear_guid() {
  guid_ = 0u;
}
::google::protobuf::uint32 HomeFurnitureCustomSuiteBin::guid() const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureCustomSuiteBin.guid)
  return guid_;
}
void HomeFurnitureCustomSuiteBin::set_guid(::google::protobuf::uint32 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeFurnitureCustomSuiteBin.guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeBlockBin::kBlockIdFieldNumber;
const int HomeBlockBin::kPersistentFurnitureListFieldNumber;
const int HomeBlockBin::kDeployFurniureListFieldNumber;
const int HomeBlockBin::kDeployNpcListFieldNumber;
const int HomeBlockBin::kFurnitureSuiteListFieldNumber;
const int HomeBlockBin::kDeployAnimalListFieldNumber;
const int HomeBlockBin::kIsUnlockedFieldNumber;
const int HomeBlockBin::kDeployFieldListFieldNumber;
const int HomeBlockBin::kDeployFurnitureGroupListFieldNumber;
const int HomeBlockBin::kFurnitureCustomSuiteListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeBlockBin::HomeBlockBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeBlockBin)
}
HomeBlockBin::HomeBlockBin(const HomeBlockBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      persistent_furniture_list_(from.persistent_furniture_list_),
      deploy_furniure_list_(from.deploy_furniure_list_),
      deploy_npc_list_(from.deploy_npc_list_),
      furniture_suite_list_(from.furniture_suite_list_),
      deploy_animal_list_(from.deploy_animal_list_),
      deploy_field_list_(from.deploy_field_list_),
      deploy_furniture_group_list_(from.deploy_furniture_group_list_),
      furniture_custom_suite_list_(from.furniture_custom_suite_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&block_id_, &from.block_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_unlocked_) -
    reinterpret_cast<char*>(&block_id_)) + sizeof(is_unlocked_));
  // @@protoc_insertion_point(copy_constructor:proto.HomeBlockBin)
}

void HomeBlockBin::SharedCtor() {
  ::memset(&block_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_unlocked_) -
      reinterpret_cast<char*>(&block_id_)) + sizeof(is_unlocked_));
  _cached_size_ = 0;
}

HomeBlockBin::~HomeBlockBin() {
  // @@protoc_insertion_point(destructor:proto.HomeBlockBin)
  SharedDtor();
}

void HomeBlockBin::SharedDtor() {
}

void HomeBlockBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeBlockBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeBlockBin& HomeBlockBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeBlockBin* HomeBlockBin::New(::google::protobuf::Arena* arena) const {
  HomeBlockBin* n = new HomeBlockBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeBlockBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeBlockBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  persistent_furniture_list_.Clear();
  deploy_furniure_list_.Clear();
  deploy_npc_list_.Clear();
  furniture_suite_list_.Clear();
  deploy_animal_list_.Clear();
  deploy_field_list_.Clear();
  deploy_furniture_group_list_.Clear();
  furniture_custom_suite_list_.Clear();
  ::memset(&block_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_unlocked_) -
      reinterpret_cast<char*>(&block_id_)) + sizeof(is_unlocked_));
  _internal_metadata_.Clear();
}

bool HomeBlockBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeBlockBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 block_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &block_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomeFurnitureBin persistent_furniture_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_persistent_furniture_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomeFurnitureBin deploy_furniure_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_deploy_furniure_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomeNpcBin deploy_npc_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_deploy_npc_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomeFurnitureSuiteBin furniture_suite_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_furniture_suite_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomeAnimalBin deploy_animal_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_deploy_animal_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_unlocked = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_unlocked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomeBlockFieldBin deploy_field_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_deploy_field_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomeFurnitureGroupBin deploy_furniture_group_list = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_deploy_furniture_group_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomeFurnitureCustomSuiteBin furniture_custom_suite_list = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_furniture_custom_suite_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeBlockBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeBlockBin)
  return false;
#undef DO_
}

void HomeBlockBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeBlockBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 block_id = 1;
  if (this->block_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->block_id(), output);
  }

  // repeated .proto.HomeFurnitureBin persistent_furniture_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->persistent_furniture_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->persistent_furniture_list(static_cast<int>(i)), output);
  }

  // repeated .proto.HomeFurnitureBin deploy_furniure_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deploy_furniure_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->deploy_furniure_list(static_cast<int>(i)), output);
  }

  // repeated .proto.HomeNpcBin deploy_npc_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deploy_npc_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->deploy_npc_list(static_cast<int>(i)), output);
  }

  // repeated .proto.HomeFurnitureSuiteBin furniture_suite_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->furniture_suite_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->furniture_suite_list(static_cast<int>(i)), output);
  }

  // repeated .proto.HomeAnimalBin deploy_animal_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deploy_animal_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->deploy_animal_list(static_cast<int>(i)), output);
  }

  // bool is_unlocked = 7;
  if (this->is_unlocked() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_unlocked(), output);
  }

  // repeated .proto.HomeBlockFieldBin deploy_field_list = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deploy_field_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->deploy_field_list(static_cast<int>(i)), output);
  }

  // repeated .proto.HomeFurnitureGroupBin deploy_furniture_group_list = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deploy_furniture_group_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->deploy_furniture_group_list(static_cast<int>(i)), output);
  }

  // repeated .proto.HomeFurnitureCustomSuiteBin furniture_custom_suite_list = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->furniture_custom_suite_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->furniture_custom_suite_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeBlockBin)
}

::google::protobuf::uint8* HomeBlockBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeBlockBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 block_id = 1;
  if (this->block_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->block_id(), target);
  }

  // repeated .proto.HomeFurnitureBin persistent_furniture_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->persistent_furniture_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->persistent_furniture_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.HomeFurnitureBin deploy_furniure_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deploy_furniure_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->deploy_furniure_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.HomeNpcBin deploy_npc_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deploy_npc_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->deploy_npc_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.HomeFurnitureSuiteBin furniture_suite_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->furniture_suite_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->furniture_suite_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.HomeAnimalBin deploy_animal_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deploy_animal_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->deploy_animal_list(static_cast<int>(i)), deterministic, target);
  }

  // bool is_unlocked = 7;
  if (this->is_unlocked() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_unlocked(), target);
  }

  // repeated .proto.HomeBlockFieldBin deploy_field_list = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deploy_field_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->deploy_field_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.HomeFurnitureGroupBin deploy_furniture_group_list = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deploy_furniture_group_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->deploy_furniture_group_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.HomeFurnitureCustomSuiteBin furniture_custom_suite_list = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->furniture_custom_suite_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->furniture_custom_suite_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeBlockBin)
  return target;
}

size_t HomeBlockBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeBlockBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.HomeFurnitureBin persistent_furniture_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->persistent_furniture_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->persistent_furniture_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.HomeFurnitureBin deploy_furniure_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->deploy_furniure_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->deploy_furniure_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.HomeNpcBin deploy_npc_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->deploy_npc_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->deploy_npc_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.HomeFurnitureSuiteBin furniture_suite_list = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->furniture_suite_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->furniture_suite_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.HomeAnimalBin deploy_animal_list = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->deploy_animal_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->deploy_animal_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.HomeBlockFieldBin deploy_field_list = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->deploy_field_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->deploy_field_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.HomeFurnitureGroupBin deploy_furniture_group_list = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->deploy_furniture_group_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->deploy_furniture_group_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.HomeFurnitureCustomSuiteBin furniture_custom_suite_list = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->furniture_custom_suite_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->furniture_custom_suite_list(static_cast<int>(i)));
    }
  }

  // uint32 block_id = 1;
  if (this->block_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->block_id());
  }

  // bool is_unlocked = 7;
  if (this->is_unlocked() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeBlockBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeBlockBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeBlockBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeBlockBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeBlockBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeBlockBin)
    MergeFrom(*source);
  }
}

void HomeBlockBin::MergeFrom(const HomeBlockBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeBlockBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  persistent_furniture_list_.MergeFrom(from.persistent_furniture_list_);
  deploy_furniure_list_.MergeFrom(from.deploy_furniure_list_);
  deploy_npc_list_.MergeFrom(from.deploy_npc_list_);
  furniture_suite_list_.MergeFrom(from.furniture_suite_list_);
  deploy_animal_list_.MergeFrom(from.deploy_animal_list_);
  deploy_field_list_.MergeFrom(from.deploy_field_list_);
  deploy_furniture_group_list_.MergeFrom(from.deploy_furniture_group_list_);
  furniture_custom_suite_list_.MergeFrom(from.furniture_custom_suite_list_);
  if (from.block_id() != 0) {
    set_block_id(from.block_id());
  }
  if (from.is_unlocked() != 0) {
    set_is_unlocked(from.is_unlocked());
  }
}

void HomeBlockBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeBlockBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeBlockBin::CopyFrom(const HomeBlockBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeBlockBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeBlockBin::IsInitialized() const {
  return true;
}

void HomeBlockBin::Swap(HomeBlockBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeBlockBin::InternalSwap(HomeBlockBin* other) {
  using std::swap;
  persistent_furniture_list_.InternalSwap(&other->persistent_furniture_list_);
  deploy_furniure_list_.InternalSwap(&other->deploy_furniure_list_);
  deploy_npc_list_.InternalSwap(&other->deploy_npc_list_);
  furniture_suite_list_.InternalSwap(&other->furniture_suite_list_);
  deploy_animal_list_.InternalSwap(&other->deploy_animal_list_);
  deploy_field_list_.InternalSwap(&other->deploy_field_list_);
  deploy_furniture_group_list_.InternalSwap(&other->deploy_furniture_group_list_);
  furniture_custom_suite_list_.InternalSwap(&other->furniture_custom_suite_list_);
  swap(block_id_, other->block_id_);
  swap(is_unlocked_, other->is_unlocked_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeBlockBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeBlockBin

// uint32 block_id = 1;
void HomeBlockBin::clear_block_id() {
  block_id_ = 0u;
}
::google::protobuf::uint32 HomeBlockBin::block_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockBin.block_id)
  return block_id_;
}
void HomeBlockBin::set_block_id(::google::protobuf::uint32 value) {
  
  block_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBlockBin.block_id)
}

// repeated .proto.HomeFurnitureBin persistent_furniture_list = 2;
int HomeBlockBin::persistent_furniture_list_size() const {
  return persistent_furniture_list_.size();
}
void HomeBlockBin::clear_persistent_furniture_list() {
  persistent_furniture_list_.Clear();
}
const ::proto::HomeFurnitureBin& HomeBlockBin::persistent_furniture_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockBin.persistent_furniture_list)
  return persistent_furniture_list_.Get(index);
}
::proto::HomeFurnitureBin* HomeBlockBin::mutable_persistent_furniture_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockBin.persistent_furniture_list)
  return persistent_furniture_list_.Mutable(index);
}
::proto::HomeFurnitureBin* HomeBlockBin::add_persistent_furniture_list() {
  // @@protoc_insertion_point(field_add:proto.HomeBlockBin.persistent_furniture_list)
  return persistent_furniture_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >*
HomeBlockBin::mutable_persistent_furniture_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeBlockBin.persistent_furniture_list)
  return &persistent_furniture_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >&
HomeBlockBin::persistent_furniture_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeBlockBin.persistent_furniture_list)
  return persistent_furniture_list_;
}

// repeated .proto.HomeFurnitureBin deploy_furniure_list = 3;
int HomeBlockBin::deploy_furniure_list_size() const {
  return deploy_furniure_list_.size();
}
void HomeBlockBin::clear_deploy_furniure_list() {
  deploy_furniure_list_.Clear();
}
const ::proto::HomeFurnitureBin& HomeBlockBin::deploy_furniure_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockBin.deploy_furniure_list)
  return deploy_furniure_list_.Get(index);
}
::proto::HomeFurnitureBin* HomeBlockBin::mutable_deploy_furniure_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockBin.deploy_furniure_list)
  return deploy_furniure_list_.Mutable(index);
}
::proto::HomeFurnitureBin* HomeBlockBin::add_deploy_furniure_list() {
  // @@protoc_insertion_point(field_add:proto.HomeBlockBin.deploy_furniure_list)
  return deploy_furniure_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >*
HomeBlockBin::mutable_deploy_furniure_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeBlockBin.deploy_furniure_list)
  return &deploy_furniure_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >&
HomeBlockBin::deploy_furniure_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeBlockBin.deploy_furniure_list)
  return deploy_furniure_list_;
}

// repeated .proto.HomeNpcBin deploy_npc_list = 4;
int HomeBlockBin::deploy_npc_list_size() const {
  return deploy_npc_list_.size();
}
void HomeBlockBin::clear_deploy_npc_list() {
  deploy_npc_list_.Clear();
}
const ::proto::HomeNpcBin& HomeBlockBin::deploy_npc_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockBin.deploy_npc_list)
  return deploy_npc_list_.Get(index);
}
::proto::HomeNpcBin* HomeBlockBin::mutable_deploy_npc_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockBin.deploy_npc_list)
  return deploy_npc_list_.Mutable(index);
}
::proto::HomeNpcBin* HomeBlockBin::add_deploy_npc_list() {
  // @@protoc_insertion_point(field_add:proto.HomeBlockBin.deploy_npc_list)
  return deploy_npc_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeNpcBin >*
HomeBlockBin::mutable_deploy_npc_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeBlockBin.deploy_npc_list)
  return &deploy_npc_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeNpcBin >&
HomeBlockBin::deploy_npc_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeBlockBin.deploy_npc_list)
  return deploy_npc_list_;
}

// repeated .proto.HomeFurnitureSuiteBin furniture_suite_list = 5;
int HomeBlockBin::furniture_suite_list_size() const {
  return furniture_suite_list_.size();
}
void HomeBlockBin::clear_furniture_suite_list() {
  furniture_suite_list_.Clear();
}
const ::proto::HomeFurnitureSuiteBin& HomeBlockBin::furniture_suite_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockBin.furniture_suite_list)
  return furniture_suite_list_.Get(index);
}
::proto::HomeFurnitureSuiteBin* HomeBlockBin::mutable_furniture_suite_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockBin.furniture_suite_list)
  return furniture_suite_list_.Mutable(index);
}
::proto::HomeFurnitureSuiteBin* HomeBlockBin::add_furniture_suite_list() {
  // @@protoc_insertion_point(field_add:proto.HomeBlockBin.furniture_suite_list)
  return furniture_suite_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureSuiteBin >*
HomeBlockBin::mutable_furniture_suite_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeBlockBin.furniture_suite_list)
  return &furniture_suite_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureSuiteBin >&
HomeBlockBin::furniture_suite_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeBlockBin.furniture_suite_list)
  return furniture_suite_list_;
}

// repeated .proto.HomeAnimalBin deploy_animal_list = 6;
int HomeBlockBin::deploy_animal_list_size() const {
  return deploy_animal_list_.size();
}
void HomeBlockBin::clear_deploy_animal_list() {
  deploy_animal_list_.Clear();
}
const ::proto::HomeAnimalBin& HomeBlockBin::deploy_animal_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockBin.deploy_animal_list)
  return deploy_animal_list_.Get(index);
}
::proto::HomeAnimalBin* HomeBlockBin::mutable_deploy_animal_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockBin.deploy_animal_list)
  return deploy_animal_list_.Mutable(index);
}
::proto::HomeAnimalBin* HomeBlockBin::add_deploy_animal_list() {
  // @@protoc_insertion_point(field_add:proto.HomeBlockBin.deploy_animal_list)
  return deploy_animal_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeAnimalBin >*
HomeBlockBin::mutable_deploy_animal_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeBlockBin.deploy_animal_list)
  return &deploy_animal_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeAnimalBin >&
HomeBlockBin::deploy_animal_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeBlockBin.deploy_animal_list)
  return deploy_animal_list_;
}

// bool is_unlocked = 7;
void HomeBlockBin::clear_is_unlocked() {
  is_unlocked_ = false;
}
bool HomeBlockBin::is_unlocked() const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockBin.is_unlocked)
  return is_unlocked_;
}
void HomeBlockBin::set_is_unlocked(bool value) {
  
  is_unlocked_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBlockBin.is_unlocked)
}

// repeated .proto.HomeBlockFieldBin deploy_field_list = 8;
int HomeBlockBin::deploy_field_list_size() const {
  return deploy_field_list_.size();
}
void HomeBlockBin::clear_deploy_field_list() {
  deploy_field_list_.Clear();
}
const ::proto::HomeBlockFieldBin& HomeBlockBin::deploy_field_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockBin.deploy_field_list)
  return deploy_field_list_.Get(index);
}
::proto::HomeBlockFieldBin* HomeBlockBin::mutable_deploy_field_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockBin.deploy_field_list)
  return deploy_field_list_.Mutable(index);
}
::proto::HomeBlockFieldBin* HomeBlockBin::add_deploy_field_list() {
  // @@protoc_insertion_point(field_add:proto.HomeBlockBin.deploy_field_list)
  return deploy_field_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeBlockFieldBin >*
HomeBlockBin::mutable_deploy_field_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeBlockBin.deploy_field_list)
  return &deploy_field_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeBlockFieldBin >&
HomeBlockBin::deploy_field_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeBlockBin.deploy_field_list)
  return deploy_field_list_;
}

// repeated .proto.HomeFurnitureGroupBin deploy_furniture_group_list = 9;
int HomeBlockBin::deploy_furniture_group_list_size() const {
  return deploy_furniture_group_list_.size();
}
void HomeBlockBin::clear_deploy_furniture_group_list() {
  deploy_furniture_group_list_.Clear();
}
const ::proto::HomeFurnitureGroupBin& HomeBlockBin::deploy_furniture_group_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockBin.deploy_furniture_group_list)
  return deploy_furniture_group_list_.Get(index);
}
::proto::HomeFurnitureGroupBin* HomeBlockBin::mutable_deploy_furniture_group_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockBin.deploy_furniture_group_list)
  return deploy_furniture_group_list_.Mutable(index);
}
::proto::HomeFurnitureGroupBin* HomeBlockBin::add_deploy_furniture_group_list() {
  // @@protoc_insertion_point(field_add:proto.HomeBlockBin.deploy_furniture_group_list)
  return deploy_furniture_group_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureGroupBin >*
HomeBlockBin::mutable_deploy_furniture_group_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeBlockBin.deploy_furniture_group_list)
  return &deploy_furniture_group_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureGroupBin >&
HomeBlockBin::deploy_furniture_group_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeBlockBin.deploy_furniture_group_list)
  return deploy_furniture_group_list_;
}

// repeated .proto.HomeFurnitureCustomSuiteBin furniture_custom_suite_list = 10;
int HomeBlockBin::furniture_custom_suite_list_size() const {
  return furniture_custom_suite_list_.size();
}
void HomeBlockBin::clear_furniture_custom_suite_list() {
  furniture_custom_suite_list_.Clear();
}
const ::proto::HomeFurnitureCustomSuiteBin& HomeBlockBin::furniture_custom_suite_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockBin.furniture_custom_suite_list)
  return furniture_custom_suite_list_.Get(index);
}
::proto::HomeFurnitureCustomSuiteBin* HomeBlockBin::mutable_furniture_custom_suite_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockBin.furniture_custom_suite_list)
  return furniture_custom_suite_list_.Mutable(index);
}
::proto::HomeFurnitureCustomSuiteBin* HomeBlockBin::add_furniture_custom_suite_list() {
  // @@protoc_insertion_point(field_add:proto.HomeBlockBin.furniture_custom_suite_list)
  return furniture_custom_suite_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureCustomSuiteBin >*
HomeBlockBin::mutable_furniture_custom_suite_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeBlockBin.furniture_custom_suite_list)
  return &furniture_custom_suite_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureCustomSuiteBin >&
HomeBlockBin::furniture_custom_suite_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeBlockBin.furniture_custom_suite_list)
  return furniture_custom_suite_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeSceneBin::kSceneIdFieldNumber;
const int HomeSceneBin::kSceneBinFieldNumber;
const int HomeSceneBin::kBlockBinListFieldNumber;
const int HomeSceneBin::kIsSetBornPosFieldNumber;
const int HomeSceneBin::kBornPosFieldNumber;
const int HomeSceneBin::kBornRotFieldNumber;
const int HomeSceneBin::kDoorListFieldNumber;
const int HomeSceneBin::kStairListFieldNumber;
const int HomeSceneBin::kMainHouseFieldNumber;
const int HomeSceneBin::kDjinnPosFieldNumber;
const int HomeSceneBin::kTmpVersionFieldNumber;
const int HomeSceneBin::kSaveTimeFieldNumber;
const int HomeSceneBin::kBgmIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeSceneBin::HomeSceneBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeSceneBin)
}
HomeSceneBin::HomeSceneBin(const HomeSceneBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      block_bin_list_(from.block_bin_list_),
      door_list_(from.door_list_),
      stair_list_(from.stair_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_scene_bin()) {
    scene_bin_ = new ::proto::SceneBin(*from.scene_bin_);
  } else {
    scene_bin_ = NULL;
  }
  if (from.has_born_pos()) {
    born_pos_ = new ::proto::VectorBin(*from.born_pos_);
  } else {
    born_pos_ = NULL;
  }
  if (from.has_born_rot()) {
    born_rot_ = new ::proto::VectorBin(*from.born_rot_);
  } else {
    born_rot_ = NULL;
  }
  if (from.has_main_house()) {
    main_house_ = new ::proto::HomeFurnitureBin(*from.main_house_);
  } else {
    main_house_ = NULL;
  }
  if (from.has_djinn_pos()) {
    djinn_pos_ = new ::proto::VectorBin(*from.djinn_pos_);
  } else {
    djinn_pos_ = NULL;
  }
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&bgm_id_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(bgm_id_));
  // @@protoc_insertion_point(copy_constructor:proto.HomeSceneBin)
}

void HomeSceneBin::SharedCtor() {
  ::memset(&scene_bin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bgm_id_) -
      reinterpret_cast<char*>(&scene_bin_)) + sizeof(bgm_id_));
  _cached_size_ = 0;
}

HomeSceneBin::~HomeSceneBin() {
  // @@protoc_insertion_point(destructor:proto.HomeSceneBin)
  SharedDtor();
}

void HomeSceneBin::SharedDtor() {
  if (this != internal_default_instance()) delete scene_bin_;
  if (this != internal_default_instance()) delete born_pos_;
  if (this != internal_default_instance()) delete born_rot_;
  if (this != internal_default_instance()) delete main_house_;
  if (this != internal_default_instance()) delete djinn_pos_;
}

void HomeSceneBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeSceneBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeSceneBin& HomeSceneBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeSceneBin* HomeSceneBin::New(::google::protobuf::Arena* arena) const {
  HomeSceneBin* n = new HomeSceneBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeSceneBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeSceneBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  block_bin_list_.Clear();
  door_list_.Clear();
  stair_list_.Clear();
  if (GetArenaNoVirtual() == NULL && scene_bin_ != NULL) {
    delete scene_bin_;
  }
  scene_bin_ = NULL;
  if (GetArenaNoVirtual() == NULL && born_pos_ != NULL) {
    delete born_pos_;
  }
  born_pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && born_rot_ != NULL) {
    delete born_rot_;
  }
  born_rot_ = NULL;
  if (GetArenaNoVirtual() == NULL && main_house_ != NULL) {
    delete main_house_;
  }
  main_house_ = NULL;
  if (GetArenaNoVirtual() == NULL && djinn_pos_ != NULL) {
    delete djinn_pos_;
  }
  djinn_pos_ = NULL;
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bgm_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(bgm_id_));
  _internal_metadata_.Clear();
}

bool HomeSceneBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeSceneBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SceneBin scene_bin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_scene_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomeBlockBin block_bin_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_block_bin_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_set_born_pos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_set_born_pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.VectorBin born_pos = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_born_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.VectorBin born_rot = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_born_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomeFurnitureBin door_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_door_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomeFurnitureBin stair_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_stair_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.HomeFurnitureBin main_house = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_main_house()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.VectorBin djinn_pos = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_djinn_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tmp_version = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tmp_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 save_time = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &save_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bgm_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bgm_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeSceneBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeSceneBin)
  return false;
#undef DO_
}

void HomeSceneBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeSceneBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // .proto.SceneBin scene_bin = 2;
  if (this->has_scene_bin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->scene_bin_, output);
  }

  // repeated .proto.HomeBlockBin block_bin_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->block_bin_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->block_bin_list(static_cast<int>(i)), output);
  }

  // bool is_set_born_pos = 4;
  if (this->is_set_born_pos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_set_born_pos(), output);
  }

  // .proto.VectorBin born_pos = 5;
  if (this->has_born_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->born_pos_, output);
  }

  // .proto.VectorBin born_rot = 6;
  if (this->has_born_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->born_rot_, output);
  }

  // repeated .proto.HomeFurnitureBin door_list = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->door_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->door_list(static_cast<int>(i)), output);
  }

  // repeated .proto.HomeFurnitureBin stair_list = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stair_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->stair_list(static_cast<int>(i)), output);
  }

  // .proto.HomeFurnitureBin main_house = 9;
  if (this->has_main_house()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->main_house_, output);
  }

  // .proto.VectorBin djinn_pos = 10;
  if (this->has_djinn_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->djinn_pos_, output);
  }

  // uint32 tmp_version = 12;
  if (this->tmp_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->tmp_version(), output);
  }

  // fixed32 save_time = 13;
  if (this->save_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(13, this->save_time(), output);
  }

  // uint32 bgm_id = 14;
  if (this->bgm_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->bgm_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeSceneBin)
}

::google::protobuf::uint8* HomeSceneBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeSceneBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // .proto.SceneBin scene_bin = 2;
  if (this->has_scene_bin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->scene_bin_, deterministic, target);
  }

  // repeated .proto.HomeBlockBin block_bin_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->block_bin_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->block_bin_list(static_cast<int>(i)), deterministic, target);
  }

  // bool is_set_born_pos = 4;
  if (this->is_set_born_pos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_set_born_pos(), target);
  }

  // .proto.VectorBin born_pos = 5;
  if (this->has_born_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->born_pos_, deterministic, target);
  }

  // .proto.VectorBin born_rot = 6;
  if (this->has_born_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->born_rot_, deterministic, target);
  }

  // repeated .proto.HomeFurnitureBin door_list = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->door_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->door_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.HomeFurnitureBin stair_list = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stair_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->stair_list(static_cast<int>(i)), deterministic, target);
  }

  // .proto.HomeFurnitureBin main_house = 9;
  if (this->has_main_house()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->main_house_, deterministic, target);
  }

  // .proto.VectorBin djinn_pos = 10;
  if (this->has_djinn_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->djinn_pos_, deterministic, target);
  }

  // uint32 tmp_version = 12;
  if (this->tmp_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->tmp_version(), target);
  }

  // fixed32 save_time = 13;
  if (this->save_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(13, this->save_time(), target);
  }

  // uint32 bgm_id = 14;
  if (this->bgm_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->bgm_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeSceneBin)
  return target;
}

size_t HomeSceneBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeSceneBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.HomeBlockBin block_bin_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->block_bin_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->block_bin_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.HomeFurnitureBin door_list = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->door_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->door_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.HomeFurnitureBin stair_list = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->stair_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stair_list(static_cast<int>(i)));
    }
  }

  // .proto.SceneBin scene_bin = 2;
  if (this->has_scene_bin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->scene_bin_);
  }

  // .proto.VectorBin born_pos = 5;
  if (this->has_born_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->born_pos_);
  }

  // .proto.VectorBin born_rot = 6;
  if (this->has_born_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->born_rot_);
  }

  // .proto.HomeFurnitureBin main_house = 9;
  if (this->has_main_house()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->main_house_);
  }

  // .proto.VectorBin djinn_pos = 10;
  if (this->has_djinn_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->djinn_pos_);
  }

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // bool is_set_born_pos = 4;
  if (this->is_set_born_pos() != 0) {
    total_size += 1 + 1;
  }

  // uint32 tmp_version = 12;
  if (this->tmp_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tmp_version());
  }

  // fixed32 save_time = 13;
  if (this->save_time() != 0) {
    total_size += 1 + 4;
  }

  // uint32 bgm_id = 14;
  if (this->bgm_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bgm_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeSceneBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeSceneBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeSceneBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeSceneBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeSceneBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeSceneBin)
    MergeFrom(*source);
  }
}

void HomeSceneBin::MergeFrom(const HomeSceneBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeSceneBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  block_bin_list_.MergeFrom(from.block_bin_list_);
  door_list_.MergeFrom(from.door_list_);
  stair_list_.MergeFrom(from.stair_list_);
  if (from.has_scene_bin()) {
    mutable_scene_bin()->::proto::SceneBin::MergeFrom(from.scene_bin());
  }
  if (from.has_born_pos()) {
    mutable_born_pos()->::proto::VectorBin::MergeFrom(from.born_pos());
  }
  if (from.has_born_rot()) {
    mutable_born_rot()->::proto::VectorBin::MergeFrom(from.born_rot());
  }
  if (from.has_main_house()) {
    mutable_main_house()->::proto::HomeFurnitureBin::MergeFrom(from.main_house());
  }
  if (from.has_djinn_pos()) {
    mutable_djinn_pos()->::proto::VectorBin::MergeFrom(from.djinn_pos());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.is_set_born_pos() != 0) {
    set_is_set_born_pos(from.is_set_born_pos());
  }
  if (from.tmp_version() != 0) {
    set_tmp_version(from.tmp_version());
  }
  if (from.save_time() != 0) {
    set_save_time(from.save_time());
  }
  if (from.bgm_id() != 0) {
    set_bgm_id(from.bgm_id());
  }
}

void HomeSceneBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeSceneBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeSceneBin::CopyFrom(const HomeSceneBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeSceneBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeSceneBin::IsInitialized() const {
  return true;
}

void HomeSceneBin::Swap(HomeSceneBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeSceneBin::InternalSwap(HomeSceneBin* other) {
  using std::swap;
  block_bin_list_.InternalSwap(&other->block_bin_list_);
  door_list_.InternalSwap(&other->door_list_);
  stair_list_.InternalSwap(&other->stair_list_);
  swap(scene_bin_, other->scene_bin_);
  swap(born_pos_, other->born_pos_);
  swap(born_rot_, other->born_rot_);
  swap(main_house_, other->main_house_);
  swap(djinn_pos_, other->djinn_pos_);
  swap(scene_id_, other->scene_id_);
  swap(is_set_born_pos_, other->is_set_born_pos_);
  swap(tmp_version_, other->tmp_version_);
  swap(save_time_, other->save_time_);
  swap(bgm_id_, other->bgm_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeSceneBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeSceneBin

// uint32 scene_id = 1;
void HomeSceneBin::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 HomeSceneBin::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeSceneBin.scene_id)
  return scene_id_;
}
void HomeSceneBin::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeSceneBin.scene_id)
}

// .proto.SceneBin scene_bin = 2;
bool HomeSceneBin::has_scene_bin() const {
  return this != internal_default_instance() && scene_bin_ != NULL;
}
void HomeSceneBin::clear_scene_bin() {
  if (GetArenaNoVirtual() == NULL && scene_bin_ != NULL) delete scene_bin_;
  scene_bin_ = NULL;
}
const ::proto::SceneBin& HomeSceneBin::scene_bin() const {
  const ::proto::SceneBin* p = scene_bin_;
  // @@protoc_insertion_point(field_get:proto.HomeSceneBin.scene_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SceneBin*>(
      &::proto::_SceneBin_default_instance_);
}
::proto::SceneBin* HomeSceneBin::mutable_scene_bin() {
  
  if (scene_bin_ == NULL) {
    scene_bin_ = new ::proto::SceneBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeSceneBin.scene_bin)
  return scene_bin_;
}
::proto::SceneBin* HomeSceneBin::release_scene_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeSceneBin.scene_bin)
  
  ::proto::SceneBin* temp = scene_bin_;
  scene_bin_ = NULL;
  return temp;
}
void HomeSceneBin::set_allocated_scene_bin(::proto::SceneBin* scene_bin) {
  delete scene_bin_;
  scene_bin_ = scene_bin;
  if (scene_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeSceneBin.scene_bin)
}

// repeated .proto.HomeBlockBin block_bin_list = 3;
int HomeSceneBin::block_bin_list_size() const {
  return block_bin_list_.size();
}
void HomeSceneBin::clear_block_bin_list() {
  block_bin_list_.Clear();
}
const ::proto::HomeBlockBin& HomeSceneBin::block_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeSceneBin.block_bin_list)
  return block_bin_list_.Get(index);
}
::proto::HomeBlockBin* HomeSceneBin::mutable_block_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeSceneBin.block_bin_list)
  return block_bin_list_.Mutable(index);
}
::proto::HomeBlockBin* HomeSceneBin::add_block_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomeSceneBin.block_bin_list)
  return block_bin_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeBlockBin >*
HomeSceneBin::mutable_block_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeSceneBin.block_bin_list)
  return &block_bin_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeBlockBin >&
HomeSceneBin::block_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeSceneBin.block_bin_list)
  return block_bin_list_;
}

// bool is_set_born_pos = 4;
void HomeSceneBin::clear_is_set_born_pos() {
  is_set_born_pos_ = false;
}
bool HomeSceneBin::is_set_born_pos() const {
  // @@protoc_insertion_point(field_get:proto.HomeSceneBin.is_set_born_pos)
  return is_set_born_pos_;
}
void HomeSceneBin::set_is_set_born_pos(bool value) {
  
  is_set_born_pos_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeSceneBin.is_set_born_pos)
}

// .proto.VectorBin born_pos = 5;
bool HomeSceneBin::has_born_pos() const {
  return this != internal_default_instance() && born_pos_ != NULL;
}
void HomeSceneBin::clear_born_pos() {
  if (GetArenaNoVirtual() == NULL && born_pos_ != NULL) delete born_pos_;
  born_pos_ = NULL;
}
const ::proto::VectorBin& HomeSceneBin::born_pos() const {
  const ::proto::VectorBin* p = born_pos_;
  // @@protoc_insertion_point(field_get:proto.HomeSceneBin.born_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
::proto::VectorBin* HomeSceneBin::mutable_born_pos() {
  
  if (born_pos_ == NULL) {
    born_pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeSceneBin.born_pos)
  return born_pos_;
}
::proto::VectorBin* HomeSceneBin::release_born_pos() {
  // @@protoc_insertion_point(field_release:proto.HomeSceneBin.born_pos)
  
  ::proto::VectorBin* temp = born_pos_;
  born_pos_ = NULL;
  return temp;
}
void HomeSceneBin::set_allocated_born_pos(::proto::VectorBin* born_pos) {
  delete born_pos_;
  born_pos_ = born_pos;
  if (born_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeSceneBin.born_pos)
}

// .proto.VectorBin born_rot = 6;
bool HomeSceneBin::has_born_rot() const {
  return this != internal_default_instance() && born_rot_ != NULL;
}
void HomeSceneBin::clear_born_rot() {
  if (GetArenaNoVirtual() == NULL && born_rot_ != NULL) delete born_rot_;
  born_rot_ = NULL;
}
const ::proto::VectorBin& HomeSceneBin::born_rot() const {
  const ::proto::VectorBin* p = born_rot_;
  // @@protoc_insertion_point(field_get:proto.HomeSceneBin.born_rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
::proto::VectorBin* HomeSceneBin::mutable_born_rot() {
  
  if (born_rot_ == NULL) {
    born_rot_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeSceneBin.born_rot)
  return born_rot_;
}
::proto::VectorBin* HomeSceneBin::release_born_rot() {
  // @@protoc_insertion_point(field_release:proto.HomeSceneBin.born_rot)
  
  ::proto::VectorBin* temp = born_rot_;
  born_rot_ = NULL;
  return temp;
}
void HomeSceneBin::set_allocated_born_rot(::proto::VectorBin* born_rot) {
  delete born_rot_;
  born_rot_ = born_rot;
  if (born_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeSceneBin.born_rot)
}

// repeated .proto.HomeFurnitureBin door_list = 7;
int HomeSceneBin::door_list_size() const {
  return door_list_.size();
}
void HomeSceneBin::clear_door_list() {
  door_list_.Clear();
}
const ::proto::HomeFurnitureBin& HomeSceneBin::door_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeSceneBin.door_list)
  return door_list_.Get(index);
}
::proto::HomeFurnitureBin* HomeSceneBin::mutable_door_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeSceneBin.door_list)
  return door_list_.Mutable(index);
}
::proto::HomeFurnitureBin* HomeSceneBin::add_door_list() {
  // @@protoc_insertion_point(field_add:proto.HomeSceneBin.door_list)
  return door_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >*
HomeSceneBin::mutable_door_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeSceneBin.door_list)
  return &door_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >&
HomeSceneBin::door_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeSceneBin.door_list)
  return door_list_;
}

// repeated .proto.HomeFurnitureBin stair_list = 8;
int HomeSceneBin::stair_list_size() const {
  return stair_list_.size();
}
void HomeSceneBin::clear_stair_list() {
  stair_list_.Clear();
}
const ::proto::HomeFurnitureBin& HomeSceneBin::stair_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeSceneBin.stair_list)
  return stair_list_.Get(index);
}
::proto::HomeFurnitureBin* HomeSceneBin::mutable_stair_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeSceneBin.stair_list)
  return stair_list_.Mutable(index);
}
::proto::HomeFurnitureBin* HomeSceneBin::add_stair_list() {
  // @@protoc_insertion_point(field_add:proto.HomeSceneBin.stair_list)
  return stair_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >*
HomeSceneBin::mutable_stair_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeSceneBin.stair_list)
  return &stair_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >&
HomeSceneBin::stair_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeSceneBin.stair_list)
  return stair_list_;
}

// .proto.HomeFurnitureBin main_house = 9;
bool HomeSceneBin::has_main_house() const {
  return this != internal_default_instance() && main_house_ != NULL;
}
void HomeSceneBin::clear_main_house() {
  if (GetArenaNoVirtual() == NULL && main_house_ != NULL) delete main_house_;
  main_house_ = NULL;
}
const ::proto::HomeFurnitureBin& HomeSceneBin::main_house() const {
  const ::proto::HomeFurnitureBin* p = main_house_;
  // @@protoc_insertion_point(field_get:proto.HomeSceneBin.main_house)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeFurnitureBin*>(
      &::proto::_HomeFurnitureBin_default_instance_);
}
::proto::HomeFurnitureBin* HomeSceneBin::mutable_main_house() {
  
  if (main_house_ == NULL) {
    main_house_ = new ::proto::HomeFurnitureBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeSceneBin.main_house)
  return main_house_;
}
::proto::HomeFurnitureBin* HomeSceneBin::release_main_house() {
  // @@protoc_insertion_point(field_release:proto.HomeSceneBin.main_house)
  
  ::proto::HomeFurnitureBin* temp = main_house_;
  main_house_ = NULL;
  return temp;
}
void HomeSceneBin::set_allocated_main_house(::proto::HomeFurnitureBin* main_house) {
  delete main_house_;
  main_house_ = main_house;
  if (main_house) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeSceneBin.main_house)
}

// .proto.VectorBin djinn_pos = 10;
bool HomeSceneBin::has_djinn_pos() const {
  return this != internal_default_instance() && djinn_pos_ != NULL;
}
void HomeSceneBin::clear_djinn_pos() {
  if (GetArenaNoVirtual() == NULL && djinn_pos_ != NULL) delete djinn_pos_;
  djinn_pos_ = NULL;
}
const ::proto::VectorBin& HomeSceneBin::djinn_pos() const {
  const ::proto::VectorBin* p = djinn_pos_;
  // @@protoc_insertion_point(field_get:proto.HomeSceneBin.djinn_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
::proto::VectorBin* HomeSceneBin::mutable_djinn_pos() {
  
  if (djinn_pos_ == NULL) {
    djinn_pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeSceneBin.djinn_pos)
  return djinn_pos_;
}
::proto::VectorBin* HomeSceneBin::release_djinn_pos() {
  // @@protoc_insertion_point(field_release:proto.HomeSceneBin.djinn_pos)
  
  ::proto::VectorBin* temp = djinn_pos_;
  djinn_pos_ = NULL;
  return temp;
}
void HomeSceneBin::set_allocated_djinn_pos(::proto::VectorBin* djinn_pos) {
  delete djinn_pos_;
  djinn_pos_ = djinn_pos;
  if (djinn_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeSceneBin.djinn_pos)
}

// uint32 tmp_version = 12;
void HomeSceneBin::clear_tmp_version() {
  tmp_version_ = 0u;
}
::google::protobuf::uint32 HomeSceneBin::tmp_version() const {
  // @@protoc_insertion_point(field_get:proto.HomeSceneBin.tmp_version)
  return tmp_version_;
}
void HomeSceneBin::set_tmp_version(::google::protobuf::uint32 value) {
  
  tmp_version_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeSceneBin.tmp_version)
}

// fixed32 save_time = 13;
void HomeSceneBin::clear_save_time() {
  save_time_ = 0u;
}
::google::protobuf::uint32 HomeSceneBin::save_time() const {
  // @@protoc_insertion_point(field_get:proto.HomeSceneBin.save_time)
  return save_time_;
}
void HomeSceneBin::set_save_time(::google::protobuf::uint32 value) {
  
  save_time_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeSceneBin.save_time)
}

// uint32 bgm_id = 14;
void HomeSceneBin::clear_bgm_id() {
  bgm_id_ = 0u;
}
::google::protobuf::uint32 HomeSceneBin::bgm_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeSceneBin.bgm_id)
  return bgm_id_;
}
void HomeSceneBin::set_bgm_id(::google::protobuf::uint32 value) {
  
  bgm_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeSceneBin.bgm_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeModuleBin::kModuleIdFieldNumber;
const int HomeModuleBin::kCurRoomSceneIdFieldNumber;
const int HomeModuleBin::kSceneBinListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeModuleBin::HomeModuleBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeModuleBin)
}
HomeModuleBin::HomeModuleBin(const HomeModuleBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      scene_bin_list_(from.scene_bin_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&module_id_, &from.module_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cur_room_scene_id_) -
    reinterpret_cast<char*>(&module_id_)) + sizeof(cur_room_scene_id_));
  // @@protoc_insertion_point(copy_constructor:proto.HomeModuleBin)
}

void HomeModuleBin::SharedCtor() {
  ::memset(&module_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_room_scene_id_) -
      reinterpret_cast<char*>(&module_id_)) + sizeof(cur_room_scene_id_));
  _cached_size_ = 0;
}

HomeModuleBin::~HomeModuleBin() {
  // @@protoc_insertion_point(destructor:proto.HomeModuleBin)
  SharedDtor();
}

void HomeModuleBin::SharedDtor() {
}

void HomeModuleBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeModuleBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeModuleBin& HomeModuleBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeModuleBin* HomeModuleBin::New(::google::protobuf::Arena* arena) const {
  HomeModuleBin* n = new HomeModuleBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeModuleBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeModuleBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scene_bin_list_.Clear();
  ::memset(&module_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_room_scene_id_) -
      reinterpret_cast<char*>(&module_id_)) + sizeof(cur_room_scene_id_));
  _internal_metadata_.Clear();
}

bool HomeModuleBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeModuleBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 module_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &module_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cur_room_scene_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_room_scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomeSceneBin scene_bin_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_scene_bin_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeModuleBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeModuleBin)
  return false;
#undef DO_
}

void HomeModuleBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeModuleBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->module_id(), output);
  }

  // uint32 cur_room_scene_id = 2;
  if (this->cur_room_scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cur_room_scene_id(), output);
  }

  // repeated .proto.HomeSceneBin scene_bin_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->scene_bin_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->scene_bin_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeModuleBin)
}

::google::protobuf::uint8* HomeModuleBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeModuleBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->module_id(), target);
  }

  // uint32 cur_room_scene_id = 2;
  if (this->cur_room_scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cur_room_scene_id(), target);
  }

  // repeated .proto.HomeSceneBin scene_bin_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->scene_bin_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->scene_bin_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeModuleBin)
  return target;
}

size_t HomeModuleBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeModuleBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.HomeSceneBin scene_bin_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->scene_bin_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->scene_bin_list(static_cast<int>(i)));
    }
  }

  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->module_id());
  }

  // uint32 cur_room_scene_id = 2;
  if (this->cur_room_scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cur_room_scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeModuleBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeModuleBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeModuleBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeModuleBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeModuleBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeModuleBin)
    MergeFrom(*source);
  }
}

void HomeModuleBin::MergeFrom(const HomeModuleBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeModuleBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  scene_bin_list_.MergeFrom(from.scene_bin_list_);
  if (from.module_id() != 0) {
    set_module_id(from.module_id());
  }
  if (from.cur_room_scene_id() != 0) {
    set_cur_room_scene_id(from.cur_room_scene_id());
  }
}

void HomeModuleBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeModuleBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeModuleBin::CopyFrom(const HomeModuleBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeModuleBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeModuleBin::IsInitialized() const {
  return true;
}

void HomeModuleBin::Swap(HomeModuleBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeModuleBin::InternalSwap(HomeModuleBin* other) {
  using std::swap;
  scene_bin_list_.InternalSwap(&other->scene_bin_list_);
  swap(module_id_, other->module_id_);
  swap(cur_room_scene_id_, other->cur_room_scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeModuleBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeModuleBin

// uint32 module_id = 1;
void HomeModuleBin::clear_module_id() {
  module_id_ = 0u;
}
::google::protobuf::uint32 HomeModuleBin::module_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeModuleBin.module_id)
  return module_id_;
}
void HomeModuleBin::set_module_id(::google::protobuf::uint32 value) {
  
  module_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeModuleBin.module_id)
}

// uint32 cur_room_scene_id = 2;
void HomeModuleBin::clear_cur_room_scene_id() {
  cur_room_scene_id_ = 0u;
}
::google::protobuf::uint32 HomeModuleBin::cur_room_scene_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeModuleBin.cur_room_scene_id)
  return cur_room_scene_id_;
}
void HomeModuleBin::set_cur_room_scene_id(::google::protobuf::uint32 value) {
  
  cur_room_scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeModuleBin.cur_room_scene_id)
}

// repeated .proto.HomeSceneBin scene_bin_list = 3;
int HomeModuleBin::scene_bin_list_size() const {
  return scene_bin_list_.size();
}
void HomeModuleBin::clear_scene_bin_list() {
  scene_bin_list_.Clear();
}
const ::proto::HomeSceneBin& HomeModuleBin::scene_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeModuleBin.scene_bin_list)
  return scene_bin_list_.Get(index);
}
::proto::HomeSceneBin* HomeModuleBin::mutable_scene_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeModuleBin.scene_bin_list)
  return scene_bin_list_.Mutable(index);
}
::proto::HomeSceneBin* HomeModuleBin::add_scene_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomeModuleBin.scene_bin_list)
  return scene_bin_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeSceneBin >*
HomeModuleBin::mutable_scene_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeModuleBin.scene_bin_list)
  return &scene_bin_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeSceneBin >&
HomeModuleBin::scene_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeModuleBin.scene_bin_list)
  return scene_bin_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeSceneCompBin::kCurModuleIdFieldNumber;
const int HomeSceneCompBin::kModuleBinListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeSceneCompBin::HomeSceneCompBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeSceneCompBin)
}
HomeSceneCompBin::HomeSceneCompBin(const HomeSceneCompBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      module_bin_list_(from.module_bin_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cur_module_id_ = from.cur_module_id_;
  // @@protoc_insertion_point(copy_constructor:proto.HomeSceneCompBin)
}

void HomeSceneCompBin::SharedCtor() {
  cur_module_id_ = 0u;
  _cached_size_ = 0;
}

HomeSceneCompBin::~HomeSceneCompBin() {
  // @@protoc_insertion_point(destructor:proto.HomeSceneCompBin)
  SharedDtor();
}

void HomeSceneCompBin::SharedDtor() {
}

void HomeSceneCompBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeSceneCompBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeSceneCompBin& HomeSceneCompBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeSceneCompBin* HomeSceneCompBin::New(::google::protobuf::Arena* arena) const {
  HomeSceneCompBin* n = new HomeSceneCompBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeSceneCompBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeSceneCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  module_bin_list_.Clear();
  cur_module_id_ = 0u;
  _internal_metadata_.Clear();
}

bool HomeSceneCompBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeSceneCompBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cur_module_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_module_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomeModuleBin module_bin_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_module_bin_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeSceneCompBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeSceneCompBin)
  return false;
#undef DO_
}

void HomeSceneCompBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeSceneCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cur_module_id = 1;
  if (this->cur_module_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cur_module_id(), output);
  }

  // repeated .proto.HomeModuleBin module_bin_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->module_bin_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->module_bin_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeSceneCompBin)
}

::google::protobuf::uint8* HomeSceneCompBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeSceneCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cur_module_id = 1;
  if (this->cur_module_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cur_module_id(), target);
  }

  // repeated .proto.HomeModuleBin module_bin_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->module_bin_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->module_bin_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeSceneCompBin)
  return target;
}

size_t HomeSceneCompBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeSceneCompBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.HomeModuleBin module_bin_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->module_bin_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->module_bin_list(static_cast<int>(i)));
    }
  }

  // uint32 cur_module_id = 1;
  if (this->cur_module_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cur_module_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeSceneCompBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeSceneCompBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeSceneCompBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeSceneCompBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeSceneCompBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeSceneCompBin)
    MergeFrom(*source);
  }
}

void HomeSceneCompBin::MergeFrom(const HomeSceneCompBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeSceneCompBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  module_bin_list_.MergeFrom(from.module_bin_list_);
  if (from.cur_module_id() != 0) {
    set_cur_module_id(from.cur_module_id());
  }
}

void HomeSceneCompBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeSceneCompBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeSceneCompBin::CopyFrom(const HomeSceneCompBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeSceneCompBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeSceneCompBin::IsInitialized() const {
  return true;
}

void HomeSceneCompBin::Swap(HomeSceneCompBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeSceneCompBin::InternalSwap(HomeSceneCompBin* other) {
  using std::swap;
  module_bin_list_.InternalSwap(&other->module_bin_list_);
  swap(cur_module_id_, other->cur_module_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeSceneCompBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeSceneCompBin

// uint32 cur_module_id = 1;
void HomeSceneCompBin::clear_cur_module_id() {
  cur_module_id_ = 0u;
}
::google::protobuf::uint32 HomeSceneCompBin::cur_module_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeSceneCompBin.cur_module_id)
  return cur_module_id_;
}
void HomeSceneCompBin::set_cur_module_id(::google::protobuf::uint32 value) {
  
  cur_module_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeSceneCompBin.cur_module_id)
}

// repeated .proto.HomeModuleBin module_bin_list = 2;
int HomeSceneCompBin::module_bin_list_size() const {
  return module_bin_list_.size();
}
void HomeSceneCompBin::clear_module_bin_list() {
  module_bin_list_.Clear();
}
const ::proto::HomeModuleBin& HomeSceneCompBin::module_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeSceneCompBin.module_bin_list)
  return module_bin_list_.Get(index);
}
::proto::HomeModuleBin* HomeSceneCompBin::mutable_module_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeSceneCompBin.module_bin_list)
  return module_bin_list_.Mutable(index);
}
::proto::HomeModuleBin* HomeSceneCompBin::add_module_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomeSceneCompBin.module_bin_list)
  return module_bin_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeModuleBin >*
HomeSceneCompBin::mutable_module_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeSceneCompBin.module_bin_list)
  return &module_bin_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeModuleBin >&
HomeSceneCompBin::module_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeSceneCompBin.module_bin_list)
  return module_bin_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeOfflineMsgExeBin::kMsgFieldNumber;
const int HomeOfflineMsgExeBin::kExeTimesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeOfflineMsgExeBin::HomeOfflineMsgExeBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeOfflineMsgExeBin)
}
HomeOfflineMsgExeBin::HomeOfflineMsgExeBin(const HomeOfflineMsgExeBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msg()) {
    msg_ = new ::proto::HomeOfflineMsgBin(*from.msg_);
  } else {
    msg_ = NULL;
  }
  exe_times_ = from.exe_times_;
  // @@protoc_insertion_point(copy_constructor:proto.HomeOfflineMsgExeBin)
}

void HomeOfflineMsgExeBin::SharedCtor() {
  ::memset(&msg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exe_times_) -
      reinterpret_cast<char*>(&msg_)) + sizeof(exe_times_));
  _cached_size_ = 0;
}

HomeOfflineMsgExeBin::~HomeOfflineMsgExeBin() {
  // @@protoc_insertion_point(destructor:proto.HomeOfflineMsgExeBin)
  SharedDtor();
}

void HomeOfflineMsgExeBin::SharedDtor() {
  if (this != internal_default_instance()) delete msg_;
}

void HomeOfflineMsgExeBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeOfflineMsgExeBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeOfflineMsgExeBin& HomeOfflineMsgExeBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeOfflineMsgExeBin* HomeOfflineMsgExeBin::New(::google::protobuf::Arena* arena) const {
  HomeOfflineMsgExeBin* n = new HomeOfflineMsgExeBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeOfflineMsgExeBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeOfflineMsgExeBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && msg_ != NULL) {
    delete msg_;
  }
  msg_ = NULL;
  exe_times_ = 0u;
  _internal_metadata_.Clear();
}

bool HomeOfflineMsgExeBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeOfflineMsgExeBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.HomeOfflineMsgBin msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 exe_times = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exe_times_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeOfflineMsgExeBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeOfflineMsgExeBin)
  return false;
#undef DO_
}

void HomeOfflineMsgExeBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeOfflineMsgExeBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.HomeOfflineMsgBin msg = 1;
  if (this->has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_, output);
  }

  // uint32 exe_times = 2;
  if (this->exe_times() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->exe_times(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeOfflineMsgExeBin)
}

::google::protobuf::uint8* HomeOfflineMsgExeBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeOfflineMsgExeBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.HomeOfflineMsgBin msg = 1;
  if (this->has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_, deterministic, target);
  }

  // uint32 exe_times = 2;
  if (this->exe_times() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->exe_times(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeOfflineMsgExeBin)
  return target;
}

size_t HomeOfflineMsgExeBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeOfflineMsgExeBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.HomeOfflineMsgBin msg = 1;
  if (this->has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_);
  }

  // uint32 exe_times = 2;
  if (this->exe_times() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exe_times());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeOfflineMsgExeBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeOfflineMsgExeBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeOfflineMsgExeBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeOfflineMsgExeBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeOfflineMsgExeBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeOfflineMsgExeBin)
    MergeFrom(*source);
  }
}

void HomeOfflineMsgExeBin::MergeFrom(const HomeOfflineMsgExeBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeOfflineMsgExeBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msg()) {
    mutable_msg()->::proto::HomeOfflineMsgBin::MergeFrom(from.msg());
  }
  if (from.exe_times() != 0) {
    set_exe_times(from.exe_times());
  }
}

void HomeOfflineMsgExeBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeOfflineMsgExeBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeOfflineMsgExeBin::CopyFrom(const HomeOfflineMsgExeBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeOfflineMsgExeBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeOfflineMsgExeBin::IsInitialized() const {
  return true;
}

void HomeOfflineMsgExeBin::Swap(HomeOfflineMsgExeBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeOfflineMsgExeBin::InternalSwap(HomeOfflineMsgExeBin* other) {
  using std::swap;
  swap(msg_, other->msg_);
  swap(exe_times_, other->exe_times_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeOfflineMsgExeBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeOfflineMsgExeBin

// .proto.HomeOfflineMsgBin msg = 1;
bool HomeOfflineMsgExeBin::has_msg() const {
  return this != internal_default_instance() && msg_ != NULL;
}
void HomeOfflineMsgExeBin::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}
const ::proto::HomeOfflineMsgBin& HomeOfflineMsgExeBin::msg() const {
  const ::proto::HomeOfflineMsgBin* p = msg_;
  // @@protoc_insertion_point(field_get:proto.HomeOfflineMsgExeBin.msg)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeOfflineMsgBin*>(
      &::proto::_HomeOfflineMsgBin_default_instance_);
}
::proto::HomeOfflineMsgBin* HomeOfflineMsgExeBin::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::proto::HomeOfflineMsgBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeOfflineMsgExeBin.msg)
  return msg_;
}
::proto::HomeOfflineMsgBin* HomeOfflineMsgExeBin::release_msg() {
  // @@protoc_insertion_point(field_release:proto.HomeOfflineMsgExeBin.msg)
  
  ::proto::HomeOfflineMsgBin* temp = msg_;
  msg_ = NULL;
  return temp;
}
void HomeOfflineMsgExeBin::set_allocated_msg(::proto::HomeOfflineMsgBin* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeOfflineMsgExeBin.msg)
}

// uint32 exe_times = 2;
void HomeOfflineMsgExeBin::clear_exe_times() {
  exe_times_ = 0u;
}
::google::protobuf::uint32 HomeOfflineMsgExeBin::exe_times() const {
  // @@protoc_insertion_point(field_get:proto.HomeOfflineMsgExeBin.exe_times)
  return exe_times_;
}
void HomeOfflineMsgExeBin::set_exe_times(::google::protobuf::uint32 value) {
  
  exe_times_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeOfflineMsgExeBin.exe_times)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeOfflineMsgCompBin::kIndexFieldNumber;
const int HomeOfflineMsgCompBin::kNextOfflineMsgListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeOfflineMsgCompBin::HomeOfflineMsgCompBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeOfflineMsgCompBin)
}
HomeOfflineMsgCompBin::HomeOfflineMsgCompBin(const HomeOfflineMsgCompBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      next_offline_msg_list_(from.next_offline_msg_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:proto.HomeOfflineMsgCompBin)
}

void HomeOfflineMsgCompBin::SharedCtor() {
  index_ = 0u;
  _cached_size_ = 0;
}

HomeOfflineMsgCompBin::~HomeOfflineMsgCompBin() {
  // @@protoc_insertion_point(destructor:proto.HomeOfflineMsgCompBin)
  SharedDtor();
}

void HomeOfflineMsgCompBin::SharedDtor() {
}

void HomeOfflineMsgCompBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeOfflineMsgCompBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeOfflineMsgCompBin& HomeOfflineMsgCompBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeOfflineMsgCompBin* HomeOfflineMsgCompBin::New(::google::protobuf::Arena* arena) const {
  HomeOfflineMsgCompBin* n = new HomeOfflineMsgCompBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeOfflineMsgCompBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeOfflineMsgCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  next_offline_msg_list_.Clear();
  index_ = 0u;
  _internal_metadata_.Clear();
}

bool HomeOfflineMsgCompBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeOfflineMsgCompBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomeOfflineMsgExeBin next_offline_msg_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_next_offline_msg_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeOfflineMsgCompBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeOfflineMsgCompBin)
  return false;
#undef DO_
}

void HomeOfflineMsgCompBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeOfflineMsgCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  // repeated .proto.HomeOfflineMsgExeBin next_offline_msg_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->next_offline_msg_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->next_offline_msg_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeOfflineMsgCompBin)
}

::google::protobuf::uint8* HomeOfflineMsgCompBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeOfflineMsgCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  // repeated .proto.HomeOfflineMsgExeBin next_offline_msg_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->next_offline_msg_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->next_offline_msg_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeOfflineMsgCompBin)
  return target;
}

size_t HomeOfflineMsgCompBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeOfflineMsgCompBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.HomeOfflineMsgExeBin next_offline_msg_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->next_offline_msg_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->next_offline_msg_list(static_cast<int>(i)));
    }
  }

  // uint32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeOfflineMsgCompBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeOfflineMsgCompBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeOfflineMsgCompBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeOfflineMsgCompBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeOfflineMsgCompBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeOfflineMsgCompBin)
    MergeFrom(*source);
  }
}

void HomeOfflineMsgCompBin::MergeFrom(const HomeOfflineMsgCompBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeOfflineMsgCompBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  next_offline_msg_list_.MergeFrom(from.next_offline_msg_list_);
  if (from.index() != 0) {
    set_index(from.index());
  }
}

void HomeOfflineMsgCompBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeOfflineMsgCompBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeOfflineMsgCompBin::CopyFrom(const HomeOfflineMsgCompBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeOfflineMsgCompBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeOfflineMsgCompBin::IsInitialized() const {
  return true;
}

void HomeOfflineMsgCompBin::Swap(HomeOfflineMsgCompBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeOfflineMsgCompBin::InternalSwap(HomeOfflineMsgCompBin* other) {
  using std::swap;
  next_offline_msg_list_.InternalSwap(&other->next_offline_msg_list_);
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeOfflineMsgCompBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeOfflineMsgCompBin

// uint32 index = 1;
void HomeOfflineMsgCompBin::clear_index() {
  index_ = 0u;
}
::google::protobuf::uint32 HomeOfflineMsgCompBin::index() const {
  // @@protoc_insertion_point(field_get:proto.HomeOfflineMsgCompBin.index)
  return index_;
}
void HomeOfflineMsgCompBin::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeOfflineMsgCompBin.index)
}

// repeated .proto.HomeOfflineMsgExeBin next_offline_msg_list = 2;
int HomeOfflineMsgCompBin::next_offline_msg_list_size() const {
  return next_offline_msg_list_.size();
}
void HomeOfflineMsgCompBin::clear_next_offline_msg_list() {
  next_offline_msg_list_.Clear();
}
const ::proto::HomeOfflineMsgExeBin& HomeOfflineMsgCompBin::next_offline_msg_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeOfflineMsgCompBin.next_offline_msg_list)
  return next_offline_msg_list_.Get(index);
}
::proto::HomeOfflineMsgExeBin* HomeOfflineMsgCompBin::mutable_next_offline_msg_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeOfflineMsgCompBin.next_offline_msg_list)
  return next_offline_msg_list_.Mutable(index);
}
::proto::HomeOfflineMsgExeBin* HomeOfflineMsgCompBin::add_next_offline_msg_list() {
  // @@protoc_insertion_point(field_add:proto.HomeOfflineMsgCompBin.next_offline_msg_list)
  return next_offline_msg_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeOfflineMsgExeBin >*
HomeOfflineMsgCompBin::mutable_next_offline_msg_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeOfflineMsgCompBin.next_offline_msg_list)
  return &next_offline_msg_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeOfflineMsgExeBin >&
HomeOfflineMsgCompBin::next_offline_msg_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeOfflineMsgCompBin.next_offline_msg_list)
  return next_offline_msg_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeFurnitureMakeBin::kFurnitureMakeSlotsBinListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeFurnitureMakeBin::HomeFurnitureMakeBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeFurnitureMakeBin)
}
HomeFurnitureMakeBin::HomeFurnitureMakeBin(const HomeFurnitureMakeBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      furniture_make_slots_bin_list_(from.furniture_make_slots_bin_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.HomeFurnitureMakeBin)
}

void HomeFurnitureMakeBin::SharedCtor() {
  _cached_size_ = 0;
}

HomeFurnitureMakeBin::~HomeFurnitureMakeBin() {
  // @@protoc_insertion_point(destructor:proto.HomeFurnitureMakeBin)
  SharedDtor();
}

void HomeFurnitureMakeBin::SharedDtor() {
}

void HomeFurnitureMakeBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeFurnitureMakeBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeFurnitureMakeBin& HomeFurnitureMakeBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeFurnitureMakeBin* HomeFurnitureMakeBin::New(::google::protobuf::Arena* arena) const {
  HomeFurnitureMakeBin* n = new HomeFurnitureMakeBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeFurnitureMakeBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeFurnitureMakeBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  furniture_make_slots_bin_list_.Clear();
  _internal_metadata_.Clear();
}

bool HomeFurnitureMakeBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeFurnitureMakeBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.FurnitureMakeSlotsBin furniture_make_slots_bin_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_furniture_make_slots_bin_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeFurnitureMakeBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeFurnitureMakeBin)
  return false;
#undef DO_
}

void HomeFurnitureMakeBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeFurnitureMakeBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.FurnitureMakeSlotsBin furniture_make_slots_bin_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->furniture_make_slots_bin_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->furniture_make_slots_bin_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeFurnitureMakeBin)
}

::google::protobuf::uint8* HomeFurnitureMakeBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeFurnitureMakeBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.FurnitureMakeSlotsBin furniture_make_slots_bin_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->furniture_make_slots_bin_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->furniture_make_slots_bin_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeFurnitureMakeBin)
  return target;
}

size_t HomeFurnitureMakeBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeFurnitureMakeBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.FurnitureMakeSlotsBin furniture_make_slots_bin_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->furniture_make_slots_bin_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->furniture_make_slots_bin_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeFurnitureMakeBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeFurnitureMakeBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeFurnitureMakeBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeFurnitureMakeBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeFurnitureMakeBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeFurnitureMakeBin)
    MergeFrom(*source);
  }
}

void HomeFurnitureMakeBin::MergeFrom(const HomeFurnitureMakeBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeFurnitureMakeBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  furniture_make_slots_bin_list_.MergeFrom(from.furniture_make_slots_bin_list_);
}

void HomeFurnitureMakeBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeFurnitureMakeBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeFurnitureMakeBin::CopyFrom(const HomeFurnitureMakeBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeFurnitureMakeBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeFurnitureMakeBin::IsInitialized() const {
  return true;
}

void HomeFurnitureMakeBin::Swap(HomeFurnitureMakeBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeFurnitureMakeBin::InternalSwap(HomeFurnitureMakeBin* other) {
  using std::swap;
  furniture_make_slots_bin_list_.InternalSwap(&other->furniture_make_slots_bin_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeFurnitureMakeBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeFurnitureMakeBin

// repeated .proto.FurnitureMakeSlotsBin furniture_make_slots_bin_list = 1;
int HomeFurnitureMakeBin::furniture_make_slots_bin_list_size() const {
  return furniture_make_slots_bin_list_.size();
}
void HomeFurnitureMakeBin::clear_furniture_make_slots_bin_list() {
  furniture_make_slots_bin_list_.Clear();
}
const ::proto::FurnitureMakeSlotsBin& HomeFurnitureMakeBin::furniture_make_slots_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureMakeBin.furniture_make_slots_bin_list)
  return furniture_make_slots_bin_list_.Get(index);
}
::proto::FurnitureMakeSlotsBin* HomeFurnitureMakeBin::mutable_furniture_make_slots_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeFurnitureMakeBin.furniture_make_slots_bin_list)
  return furniture_make_slots_bin_list_.Mutable(index);
}
::proto::FurnitureMakeSlotsBin* HomeFurnitureMakeBin::add_furniture_make_slots_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomeFurnitureMakeBin.furniture_make_slots_bin_list)
  return furniture_make_slots_bin_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::FurnitureMakeSlotsBin >*
HomeFurnitureMakeBin::mutable_furniture_make_slots_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeFurnitureMakeBin.furniture_make_slots_bin_list)
  return &furniture_make_slots_bin_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::FurnitureMakeSlotsBin >&
HomeFurnitureMakeBin::furniture_make_slots_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeFurnitureMakeBin.furniture_make_slots_bin_list)
  return furniture_make_slots_bin_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeLimitedShopPoolRecordBin::kPoolIdFieldNumber;
const int HomeLimitedShopPoolRecordBin::kGoodsIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeLimitedShopPoolRecordBin::HomeLimitedShopPoolRecordBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeLimitedShopPoolRecordBin)
}
HomeLimitedShopPoolRecordBin::HomeLimitedShopPoolRecordBin(const HomeLimitedShopPoolRecordBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      goods_id_list_(from.goods_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pool_id_ = from.pool_id_;
  // @@protoc_insertion_point(copy_constructor:proto.HomeLimitedShopPoolRecordBin)
}

void HomeLimitedShopPoolRecordBin::SharedCtor() {
  pool_id_ = 0u;
  _cached_size_ = 0;
}

HomeLimitedShopPoolRecordBin::~HomeLimitedShopPoolRecordBin() {
  // @@protoc_insertion_point(destructor:proto.HomeLimitedShopPoolRecordBin)
  SharedDtor();
}

void HomeLimitedShopPoolRecordBin::SharedDtor() {
}

void HomeLimitedShopPoolRecordBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeLimitedShopPoolRecordBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeLimitedShopPoolRecordBin& HomeLimitedShopPoolRecordBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeLimitedShopPoolRecordBin* HomeLimitedShopPoolRecordBin::New(::google::protobuf::Arena* arena) const {
  HomeLimitedShopPoolRecordBin* n = new HomeLimitedShopPoolRecordBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeLimitedShopPoolRecordBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeLimitedShopPoolRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  goods_id_list_.Clear();
  pool_id_ = 0u;
  _internal_metadata_.Clear();
}

bool HomeLimitedShopPoolRecordBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeLimitedShopPoolRecordBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 pool_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pool_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 goods_id_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_goods_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_goods_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeLimitedShopPoolRecordBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeLimitedShopPoolRecordBin)
  return false;
#undef DO_
}

void HomeLimitedShopPoolRecordBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeLimitedShopPoolRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pool_id = 1;
  if (this->pool_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pool_id(), output);
  }

  // repeated uint32 goods_id_list = 2;
  if (this->goods_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _goods_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->goods_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->goods_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeLimitedShopPoolRecordBin)
}

::google::protobuf::uint8* HomeLimitedShopPoolRecordBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeLimitedShopPoolRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pool_id = 1;
  if (this->pool_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pool_id(), target);
  }

  // repeated uint32 goods_id_list = 2;
  if (this->goods_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _goods_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->goods_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeLimitedShopPoolRecordBin)
  return target;
}

size_t HomeLimitedShopPoolRecordBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeLimitedShopPoolRecordBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 goods_id_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->goods_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _goods_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 pool_id = 1;
  if (this->pool_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pool_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeLimitedShopPoolRecordBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeLimitedShopPoolRecordBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeLimitedShopPoolRecordBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeLimitedShopPoolRecordBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeLimitedShopPoolRecordBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeLimitedShopPoolRecordBin)
    MergeFrom(*source);
  }
}

void HomeLimitedShopPoolRecordBin::MergeFrom(const HomeLimitedShopPoolRecordBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeLimitedShopPoolRecordBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  goods_id_list_.MergeFrom(from.goods_id_list_);
  if (from.pool_id() != 0) {
    set_pool_id(from.pool_id());
  }
}

void HomeLimitedShopPoolRecordBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeLimitedShopPoolRecordBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeLimitedShopPoolRecordBin::CopyFrom(const HomeLimitedShopPoolRecordBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeLimitedShopPoolRecordBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeLimitedShopPoolRecordBin::IsInitialized() const {
  return true;
}

void HomeLimitedShopPoolRecordBin::Swap(HomeLimitedShopPoolRecordBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeLimitedShopPoolRecordBin::InternalSwap(HomeLimitedShopPoolRecordBin* other) {
  using std::swap;
  goods_id_list_.InternalSwap(&other->goods_id_list_);
  swap(pool_id_, other->pool_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeLimitedShopPoolRecordBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeLimitedShopPoolRecordBin

// uint32 pool_id = 1;
void HomeLimitedShopPoolRecordBin::clear_pool_id() {
  pool_id_ = 0u;
}
::google::protobuf::uint32 HomeLimitedShopPoolRecordBin::pool_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeLimitedShopPoolRecordBin.pool_id)
  return pool_id_;
}
void HomeLimitedShopPoolRecordBin::set_pool_id(::google::protobuf::uint32 value) {
  
  pool_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeLimitedShopPoolRecordBin.pool_id)
}

// repeated uint32 goods_id_list = 2;
int HomeLimitedShopPoolRecordBin::goods_id_list_size() const {
  return goods_id_list_.size();
}
void HomeLimitedShopPoolRecordBin::clear_goods_id_list() {
  goods_id_list_.Clear();
}
::google::protobuf::uint32 HomeLimitedShopPoolRecordBin::goods_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeLimitedShopPoolRecordBin.goods_id_list)
  return goods_id_list_.Get(index);
}
void HomeLimitedShopPoolRecordBin::set_goods_id_list(int index, ::google::protobuf::uint32 value) {
  goods_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.HomeLimitedShopPoolRecordBin.goods_id_list)
}
void HomeLimitedShopPoolRecordBin::add_goods_id_list(::google::protobuf::uint32 value) {
  goods_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.HomeLimitedShopPoolRecordBin.goods_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
HomeLimitedShopPoolRecordBin::goods_id_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeLimitedShopPoolRecordBin.goods_id_list)
  return goods_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
HomeLimitedShopPoolRecordBin::mutable_goods_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeLimitedShopPoolRecordBin.goods_id_list)
  return &goods_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeLimitedShopGoodsInfoBin::kGoodsIdFieldNumber;
const int HomeLimitedShopGoodsInfoBin::kBuyNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeLimitedShopGoodsInfoBin::HomeLimitedShopGoodsInfoBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeLimitedShopGoodsInfoBin)
}
HomeLimitedShopGoodsInfoBin::HomeLimitedShopGoodsInfoBin(const HomeLimitedShopGoodsInfoBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&goods_id_, &from.goods_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&buy_num_) -
    reinterpret_cast<char*>(&goods_id_)) + sizeof(buy_num_));
  // @@protoc_insertion_point(copy_constructor:proto.HomeLimitedShopGoodsInfoBin)
}

void HomeLimitedShopGoodsInfoBin::SharedCtor() {
  ::memset(&goods_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&buy_num_) -
      reinterpret_cast<char*>(&goods_id_)) + sizeof(buy_num_));
  _cached_size_ = 0;
}

HomeLimitedShopGoodsInfoBin::~HomeLimitedShopGoodsInfoBin() {
  // @@protoc_insertion_point(destructor:proto.HomeLimitedShopGoodsInfoBin)
  SharedDtor();
}

void HomeLimitedShopGoodsInfoBin::SharedDtor() {
}

void HomeLimitedShopGoodsInfoBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeLimitedShopGoodsInfoBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeLimitedShopGoodsInfoBin& HomeLimitedShopGoodsInfoBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeLimitedShopGoodsInfoBin* HomeLimitedShopGoodsInfoBin::New(::google::protobuf::Arena* arena) const {
  HomeLimitedShopGoodsInfoBin* n = new HomeLimitedShopGoodsInfoBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeLimitedShopGoodsInfoBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeLimitedShopGoodsInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&goods_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&buy_num_) -
      reinterpret_cast<char*>(&goods_id_)) + sizeof(buy_num_));
  _internal_metadata_.Clear();
}

bool HomeLimitedShopGoodsInfoBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeLimitedShopGoodsInfoBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 goods_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goods_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 buy_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buy_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeLimitedShopGoodsInfoBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeLimitedShopGoodsInfoBin)
  return false;
#undef DO_
}

void HomeLimitedShopGoodsInfoBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeLimitedShopGoodsInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 goods_id = 1;
  if (this->goods_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->goods_id(), output);
  }

  // uint32 buy_num = 2;
  if (this->buy_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->buy_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeLimitedShopGoodsInfoBin)
}

::google::protobuf::uint8* HomeLimitedShopGoodsInfoBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeLimitedShopGoodsInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 goods_id = 1;
  if (this->goods_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->goods_id(), target);
  }

  // uint32 buy_num = 2;
  if (this->buy_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->buy_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeLimitedShopGoodsInfoBin)
  return target;
}

size_t HomeLimitedShopGoodsInfoBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeLimitedShopGoodsInfoBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 goods_id = 1;
  if (this->goods_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->goods_id());
  }

  // uint32 buy_num = 2;
  if (this->buy_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->buy_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeLimitedShopGoodsInfoBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeLimitedShopGoodsInfoBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeLimitedShopGoodsInfoBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeLimitedShopGoodsInfoBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeLimitedShopGoodsInfoBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeLimitedShopGoodsInfoBin)
    MergeFrom(*source);
  }
}

void HomeLimitedShopGoodsInfoBin::MergeFrom(const HomeLimitedShopGoodsInfoBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeLimitedShopGoodsInfoBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.goods_id() != 0) {
    set_goods_id(from.goods_id());
  }
  if (from.buy_num() != 0) {
    set_buy_num(from.buy_num());
  }
}

void HomeLimitedShopGoodsInfoBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeLimitedShopGoodsInfoBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeLimitedShopGoodsInfoBin::CopyFrom(const HomeLimitedShopGoodsInfoBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeLimitedShopGoodsInfoBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeLimitedShopGoodsInfoBin::IsInitialized() const {
  return true;
}

void HomeLimitedShopGoodsInfoBin::Swap(HomeLimitedShopGoodsInfoBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeLimitedShopGoodsInfoBin::InternalSwap(HomeLimitedShopGoodsInfoBin* other) {
  using std::swap;
  swap(goods_id_, other->goods_id_);
  swap(buy_num_, other->buy_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeLimitedShopGoodsInfoBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeLimitedShopGoodsInfoBin

// uint32 goods_id = 1;
void HomeLimitedShopGoodsInfoBin::clear_goods_id() {
  goods_id_ = 0u;
}
::google::protobuf::uint32 HomeLimitedShopGoodsInfoBin::goods_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeLimitedShopGoodsInfoBin.goods_id)
  return goods_id_;
}
void HomeLimitedShopGoodsInfoBin::set_goods_id(::google::protobuf::uint32 value) {
  
  goods_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeLimitedShopGoodsInfoBin.goods_id)
}

// uint32 buy_num = 2;
void HomeLimitedShopGoodsInfoBin::clear_buy_num() {
  buy_num_ = 0u;
}
::google::protobuf::uint32 HomeLimitedShopGoodsInfoBin::buy_num() const {
  // @@protoc_insertion_point(field_get:proto.HomeLimitedShopGoodsInfoBin.buy_num)
  return buy_num_;
}
void HomeLimitedShopGoodsInfoBin::set_buy_num(::google::protobuf::uint32 value) {
  
  buy_num_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeLimitedShopGoodsInfoBin.buy_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeLimitedShopNPCPosBin::kModuleIdFieldNumber;
const int HomeLimitedShopNPCPosBin::kSceneIdFieldNumber;
const int HomeLimitedShopNPCPosBin::kBlockIdFieldNumber;
const int HomeLimitedShopNPCPosBin::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeLimitedShopNPCPosBin::HomeLimitedShopNPCPosBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeLimitedShopNPCPosBin)
}
HomeLimitedShopNPCPosBin::HomeLimitedShopNPCPosBin(const HomeLimitedShopNPCPosBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&module_id_, &from.module_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&module_id_)) + sizeof(index_));
  // @@protoc_insertion_point(copy_constructor:proto.HomeLimitedShopNPCPosBin)
}

void HomeLimitedShopNPCPosBin::SharedCtor() {
  ::memset(&module_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&module_id_)) + sizeof(index_));
  _cached_size_ = 0;
}

HomeLimitedShopNPCPosBin::~HomeLimitedShopNPCPosBin() {
  // @@protoc_insertion_point(destructor:proto.HomeLimitedShopNPCPosBin)
  SharedDtor();
}

void HomeLimitedShopNPCPosBin::SharedDtor() {
}

void HomeLimitedShopNPCPosBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeLimitedShopNPCPosBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeLimitedShopNPCPosBin& HomeLimitedShopNPCPosBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeLimitedShopNPCPosBin* HomeLimitedShopNPCPosBin::New(::google::protobuf::Arena* arena) const {
  HomeLimitedShopNPCPosBin* n = new HomeLimitedShopNPCPosBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeLimitedShopNPCPosBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeLimitedShopNPCPosBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&module_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&module_id_)) + sizeof(index_));
  _internal_metadata_.Clear();
}

bool HomeLimitedShopNPCPosBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeLimitedShopNPCPosBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 module_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &module_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 block_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &block_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 index = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeLimitedShopNPCPosBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeLimitedShopNPCPosBin)
  return false;
#undef DO_
}

void HomeLimitedShopNPCPosBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeLimitedShopNPCPosBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->module_id(), output);
  }

  // uint32 scene_id = 4;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->scene_id(), output);
  }

  // uint32 block_id = 5;
  if (this->block_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->block_id(), output);
  }

  // uint32 index = 6;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeLimitedShopNPCPosBin)
}

::google::protobuf::uint8* HomeLimitedShopNPCPosBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeLimitedShopNPCPosBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->module_id(), target);
  }

  // uint32 scene_id = 4;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->scene_id(), target);
  }

  // uint32 block_id = 5;
  if (this->block_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->block_id(), target);
  }

  // uint32 index = 6;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->index(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeLimitedShopNPCPosBin)
  return target;
}

size_t HomeLimitedShopNPCPosBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeLimitedShopNPCPosBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->module_id());
  }

  // uint32 scene_id = 4;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 block_id = 5;
  if (this->block_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->block_id());
  }

  // uint32 index = 6;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeLimitedShopNPCPosBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeLimitedShopNPCPosBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeLimitedShopNPCPosBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeLimitedShopNPCPosBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeLimitedShopNPCPosBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeLimitedShopNPCPosBin)
    MergeFrom(*source);
  }
}

void HomeLimitedShopNPCPosBin::MergeFrom(const HomeLimitedShopNPCPosBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeLimitedShopNPCPosBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.module_id() != 0) {
    set_module_id(from.module_id());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.block_id() != 0) {
    set_block_id(from.block_id());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
}

void HomeLimitedShopNPCPosBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeLimitedShopNPCPosBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeLimitedShopNPCPosBin::CopyFrom(const HomeLimitedShopNPCPosBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeLimitedShopNPCPosBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeLimitedShopNPCPosBin::IsInitialized() const {
  return true;
}

void HomeLimitedShopNPCPosBin::Swap(HomeLimitedShopNPCPosBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeLimitedShopNPCPosBin::InternalSwap(HomeLimitedShopNPCPosBin* other) {
  using std::swap;
  swap(module_id_, other->module_id_);
  swap(scene_id_, other->scene_id_);
  swap(block_id_, other->block_id_);
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeLimitedShopNPCPosBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeLimitedShopNPCPosBin

// uint32 module_id = 1;
void HomeLimitedShopNPCPosBin::clear_module_id() {
  module_id_ = 0u;
}
::google::protobuf::uint32 HomeLimitedShopNPCPosBin::module_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeLimitedShopNPCPosBin.module_id)
  return module_id_;
}
void HomeLimitedShopNPCPosBin::set_module_id(::google::protobuf::uint32 value) {
  
  module_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeLimitedShopNPCPosBin.module_id)
}

// uint32 scene_id = 4;
void HomeLimitedShopNPCPosBin::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 HomeLimitedShopNPCPosBin::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeLimitedShopNPCPosBin.scene_id)
  return scene_id_;
}
void HomeLimitedShopNPCPosBin::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeLimitedShopNPCPosBin.scene_id)
}

// uint32 block_id = 5;
void HomeLimitedShopNPCPosBin::clear_block_id() {
  block_id_ = 0u;
}
::google::protobuf::uint32 HomeLimitedShopNPCPosBin::block_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeLimitedShopNPCPosBin.block_id)
  return block_id_;
}
void HomeLimitedShopNPCPosBin::set_block_id(::google::protobuf::uint32 value) {
  
  block_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeLimitedShopNPCPosBin.block_id)
}

// uint32 index = 6;
void HomeLimitedShopNPCPosBin::clear_index() {
  index_ = 0u;
}
::google::protobuf::uint32 HomeLimitedShopNPCPosBin::index() const {
  // @@protoc_insertion_point(field_get:proto.HomeLimitedShopNPCPosBin.index)
  return index_;
}
void HomeLimitedShopNPCPosBin::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeLimitedShopNPCPosBin.index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeLimitedShopBin::kLastRefreshTimeFieldNumber;
const int HomeLimitedShopBin::kPoolRecordBinListFieldNumber;
const int HomeLimitedShopBin::kGoodsInfoBinListFieldNumber;
const int HomeLimitedShopBin::kNpcPosBinListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeLimitedShopBin::HomeLimitedShopBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeLimitedShopBin)
}
HomeLimitedShopBin::HomeLimitedShopBin(const HomeLimitedShopBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pool_record_bin_list_(from.pool_record_bin_list_),
      goods_info_bin_list_(from.goods_info_bin_list_),
      npc_pos_bin_list_(from.npc_pos_bin_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  last_refresh_time_ = from.last_refresh_time_;
  // @@protoc_insertion_point(copy_constructor:proto.HomeLimitedShopBin)
}

void HomeLimitedShopBin::SharedCtor() {
  last_refresh_time_ = 0u;
  _cached_size_ = 0;
}

HomeLimitedShopBin::~HomeLimitedShopBin() {
  // @@protoc_insertion_point(destructor:proto.HomeLimitedShopBin)
  SharedDtor();
}

void HomeLimitedShopBin::SharedDtor() {
}

void HomeLimitedShopBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeLimitedShopBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeLimitedShopBin& HomeLimitedShopBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeLimitedShopBin* HomeLimitedShopBin::New(::google::protobuf::Arena* arena) const {
  HomeLimitedShopBin* n = new HomeLimitedShopBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeLimitedShopBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeLimitedShopBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pool_record_bin_list_.Clear();
  goods_info_bin_list_.Clear();
  npc_pos_bin_list_.Clear();
  last_refresh_time_ = 0u;
  _internal_metadata_.Clear();
}

bool HomeLimitedShopBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeLimitedShopBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 last_refresh_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_refresh_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomeLimitedShopPoolRecordBin pool_record_bin_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pool_record_bin_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomeLimitedShopGoodsInfoBin goods_info_bin_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goods_info_bin_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomeLimitedShopNPCPosBin npc_pos_bin_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_npc_pos_bin_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeLimitedShopBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeLimitedShopBin)
  return false;
#undef DO_
}

void HomeLimitedShopBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeLimitedShopBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 last_refresh_time = 1;
  if (this->last_refresh_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->last_refresh_time(), output);
  }

  // repeated .proto.HomeLimitedShopPoolRecordBin pool_record_bin_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pool_record_bin_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->pool_record_bin_list(static_cast<int>(i)), output);
  }

  // repeated .proto.HomeLimitedShopGoodsInfoBin goods_info_bin_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->goods_info_bin_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->goods_info_bin_list(static_cast<int>(i)), output);
  }

  // repeated .proto.HomeLimitedShopNPCPosBin npc_pos_bin_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->npc_pos_bin_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->npc_pos_bin_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeLimitedShopBin)
}

::google::protobuf::uint8* HomeLimitedShopBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeLimitedShopBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 last_refresh_time = 1;
  if (this->last_refresh_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->last_refresh_time(), target);
  }

  // repeated .proto.HomeLimitedShopPoolRecordBin pool_record_bin_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pool_record_bin_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->pool_record_bin_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.HomeLimitedShopGoodsInfoBin goods_info_bin_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->goods_info_bin_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->goods_info_bin_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.HomeLimitedShopNPCPosBin npc_pos_bin_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->npc_pos_bin_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->npc_pos_bin_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeLimitedShopBin)
  return target;
}

size_t HomeLimitedShopBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeLimitedShopBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.HomeLimitedShopPoolRecordBin pool_record_bin_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->pool_record_bin_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pool_record_bin_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.HomeLimitedShopGoodsInfoBin goods_info_bin_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->goods_info_bin_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->goods_info_bin_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.HomeLimitedShopNPCPosBin npc_pos_bin_list = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->npc_pos_bin_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->npc_pos_bin_list(static_cast<int>(i)));
    }
  }

  // uint32 last_refresh_time = 1;
  if (this->last_refresh_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_refresh_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeLimitedShopBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeLimitedShopBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeLimitedShopBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeLimitedShopBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeLimitedShopBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeLimitedShopBin)
    MergeFrom(*source);
  }
}

void HomeLimitedShopBin::MergeFrom(const HomeLimitedShopBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeLimitedShopBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pool_record_bin_list_.MergeFrom(from.pool_record_bin_list_);
  goods_info_bin_list_.MergeFrom(from.goods_info_bin_list_);
  npc_pos_bin_list_.MergeFrom(from.npc_pos_bin_list_);
  if (from.last_refresh_time() != 0) {
    set_last_refresh_time(from.last_refresh_time());
  }
}

void HomeLimitedShopBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeLimitedShopBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeLimitedShopBin::CopyFrom(const HomeLimitedShopBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeLimitedShopBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeLimitedShopBin::IsInitialized() const {
  return true;
}

void HomeLimitedShopBin::Swap(HomeLimitedShopBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeLimitedShopBin::InternalSwap(HomeLimitedShopBin* other) {
  using std::swap;
  pool_record_bin_list_.InternalSwap(&other->pool_record_bin_list_);
  goods_info_bin_list_.InternalSwap(&other->goods_info_bin_list_);
  npc_pos_bin_list_.InternalSwap(&other->npc_pos_bin_list_);
  swap(last_refresh_time_, other->last_refresh_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeLimitedShopBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeLimitedShopBin

// uint32 last_refresh_time = 1;
void HomeLimitedShopBin::clear_last_refresh_time() {
  last_refresh_time_ = 0u;
}
::google::protobuf::uint32 HomeLimitedShopBin::last_refresh_time() const {
  // @@protoc_insertion_point(field_get:proto.HomeLimitedShopBin.last_refresh_time)
  return last_refresh_time_;
}
void HomeLimitedShopBin::set_last_refresh_time(::google::protobuf::uint32 value) {
  
  last_refresh_time_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeLimitedShopBin.last_refresh_time)
}

// repeated .proto.HomeLimitedShopPoolRecordBin pool_record_bin_list = 3;
int HomeLimitedShopBin::pool_record_bin_list_size() const {
  return pool_record_bin_list_.size();
}
void HomeLimitedShopBin::clear_pool_record_bin_list() {
  pool_record_bin_list_.Clear();
}
const ::proto::HomeLimitedShopPoolRecordBin& HomeLimitedShopBin::pool_record_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeLimitedShopBin.pool_record_bin_list)
  return pool_record_bin_list_.Get(index);
}
::proto::HomeLimitedShopPoolRecordBin* HomeLimitedShopBin::mutable_pool_record_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeLimitedShopBin.pool_record_bin_list)
  return pool_record_bin_list_.Mutable(index);
}
::proto::HomeLimitedShopPoolRecordBin* HomeLimitedShopBin::add_pool_record_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomeLimitedShopBin.pool_record_bin_list)
  return pool_record_bin_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeLimitedShopPoolRecordBin >*
HomeLimitedShopBin::mutable_pool_record_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeLimitedShopBin.pool_record_bin_list)
  return &pool_record_bin_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeLimitedShopPoolRecordBin >&
HomeLimitedShopBin::pool_record_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeLimitedShopBin.pool_record_bin_list)
  return pool_record_bin_list_;
}

// repeated .proto.HomeLimitedShopGoodsInfoBin goods_info_bin_list = 4;
int HomeLimitedShopBin::goods_info_bin_list_size() const {
  return goods_info_bin_list_.size();
}
void HomeLimitedShopBin::clear_goods_info_bin_list() {
  goods_info_bin_list_.Clear();
}
const ::proto::HomeLimitedShopGoodsInfoBin& HomeLimitedShopBin::goods_info_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeLimitedShopBin.goods_info_bin_list)
  return goods_info_bin_list_.Get(index);
}
::proto::HomeLimitedShopGoodsInfoBin* HomeLimitedShopBin::mutable_goods_info_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeLimitedShopBin.goods_info_bin_list)
  return goods_info_bin_list_.Mutable(index);
}
::proto::HomeLimitedShopGoodsInfoBin* HomeLimitedShopBin::add_goods_info_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomeLimitedShopBin.goods_info_bin_list)
  return goods_info_bin_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeLimitedShopGoodsInfoBin >*
HomeLimitedShopBin::mutable_goods_info_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeLimitedShopBin.goods_info_bin_list)
  return &goods_info_bin_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeLimitedShopGoodsInfoBin >&
HomeLimitedShopBin::goods_info_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeLimitedShopBin.goods_info_bin_list)
  return goods_info_bin_list_;
}

// repeated .proto.HomeLimitedShopNPCPosBin npc_pos_bin_list = 5;
int HomeLimitedShopBin::npc_pos_bin_list_size() const {
  return npc_pos_bin_list_.size();
}
void HomeLimitedShopBin::clear_npc_pos_bin_list() {
  npc_pos_bin_list_.Clear();
}
const ::proto::HomeLimitedShopNPCPosBin& HomeLimitedShopBin::npc_pos_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeLimitedShopBin.npc_pos_bin_list)
  return npc_pos_bin_list_.Get(index);
}
::proto::HomeLimitedShopNPCPosBin* HomeLimitedShopBin::mutable_npc_pos_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeLimitedShopBin.npc_pos_bin_list)
  return npc_pos_bin_list_.Mutable(index);
}
::proto::HomeLimitedShopNPCPosBin* HomeLimitedShopBin::add_npc_pos_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomeLimitedShopBin.npc_pos_bin_list)
  return npc_pos_bin_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeLimitedShopNPCPosBin >*
HomeLimitedShopBin::mutable_npc_pos_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeLimitedShopBin.npc_pos_bin_list)
  return &npc_pos_bin_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeLimitedShopNPCPosBin >&
HomeLimitedShopBin::npc_pos_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeLimitedShopBin.npc_pos_bin_list)
  return npc_pos_bin_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomePlantSubFieldBin::kIndexFieldNumber;
const int HomePlantSubFieldBin::kSeedIdFieldNumber;
const int HomePlantSubFieldBin::kGrowTimeFieldNumber;
const int HomePlantSubFieldBin::kLastUpdateTimeFieldNumber;
const int HomePlantSubFieldBin::kGatherIndexListFieldNumber;
const int HomePlantSubFieldBin::kHomeGatherIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomePlantSubFieldBin::HomePlantSubFieldBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomePlantSubFieldBin)
}
HomePlantSubFieldBin::HomePlantSubFieldBin(const HomePlantSubFieldBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      gather_index_list_(from.gather_index_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&home_gather_id_) -
    reinterpret_cast<char*>(&index_)) + sizeof(home_gather_id_));
  // @@protoc_insertion_point(copy_constructor:proto.HomePlantSubFieldBin)
}

void HomePlantSubFieldBin::SharedCtor() {
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&home_gather_id_) -
      reinterpret_cast<char*>(&index_)) + sizeof(home_gather_id_));
  _cached_size_ = 0;
}

HomePlantSubFieldBin::~HomePlantSubFieldBin() {
  // @@protoc_insertion_point(destructor:proto.HomePlantSubFieldBin)
  SharedDtor();
}

void HomePlantSubFieldBin::SharedDtor() {
}

void HomePlantSubFieldBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomePlantSubFieldBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomePlantSubFieldBin& HomePlantSubFieldBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomePlantSubFieldBin* HomePlantSubFieldBin::New(::google::protobuf::Arena* arena) const {
  HomePlantSubFieldBin* n = new HomePlantSubFieldBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomePlantSubFieldBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomePlantSubFieldBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gather_index_list_.Clear();
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&home_gather_id_) -
      reinterpret_cast<char*>(&index_)) + sizeof(home_gather_id_));
  _internal_metadata_.Clear();
}

bool HomePlantSubFieldBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomePlantSubFieldBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 seed_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seed_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 grow_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grow_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 last_update_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_update_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 gather_index_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_gather_index_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_gather_index_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 home_gather_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &home_gather_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomePlantSubFieldBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomePlantSubFieldBin)
  return false;
#undef DO_
}

void HomePlantSubFieldBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomePlantSubFieldBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  // uint32 seed_id = 2;
  if (this->seed_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->seed_id(), output);
  }

  // uint32 grow_time = 3;
  if (this->grow_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->grow_time(), output);
  }

  // uint32 last_update_time = 4;
  if (this->last_update_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->last_update_time(), output);
  }

  // repeated uint32 gather_index_list = 5;
  if (this->gather_index_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _gather_index_list_cached_byte_size_));
  }
  for (int i = 0, n = this->gather_index_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->gather_index_list(i), output);
  }

  // uint32 home_gather_id = 6;
  if (this->home_gather_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->home_gather_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomePlantSubFieldBin)
}

::google::protobuf::uint8* HomePlantSubFieldBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomePlantSubFieldBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  // uint32 seed_id = 2;
  if (this->seed_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->seed_id(), target);
  }

  // uint32 grow_time = 3;
  if (this->grow_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->grow_time(), target);
  }

  // uint32 last_update_time = 4;
  if (this->last_update_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->last_update_time(), target);
  }

  // repeated uint32 gather_index_list = 5;
  if (this->gather_index_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _gather_index_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->gather_index_list_, target);
  }

  // uint32 home_gather_id = 6;
  if (this->home_gather_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->home_gather_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomePlantSubFieldBin)
  return target;
}

size_t HomePlantSubFieldBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomePlantSubFieldBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 gather_index_list = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->gather_index_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _gather_index_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  // uint32 seed_id = 2;
  if (this->seed_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seed_id());
  }

  // uint32 grow_time = 3;
  if (this->grow_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->grow_time());
  }

  // uint32 last_update_time = 4;
  if (this->last_update_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_update_time());
  }

  // uint32 home_gather_id = 6;
  if (this->home_gather_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->home_gather_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomePlantSubFieldBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomePlantSubFieldBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomePlantSubFieldBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomePlantSubFieldBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomePlantSubFieldBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomePlantSubFieldBin)
    MergeFrom(*source);
  }
}

void HomePlantSubFieldBin::MergeFrom(const HomePlantSubFieldBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomePlantSubFieldBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gather_index_list_.MergeFrom(from.gather_index_list_);
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.seed_id() != 0) {
    set_seed_id(from.seed_id());
  }
  if (from.grow_time() != 0) {
    set_grow_time(from.grow_time());
  }
  if (from.last_update_time() != 0) {
    set_last_update_time(from.last_update_time());
  }
  if (from.home_gather_id() != 0) {
    set_home_gather_id(from.home_gather_id());
  }
}

void HomePlantSubFieldBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomePlantSubFieldBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomePlantSubFieldBin::CopyFrom(const HomePlantSubFieldBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomePlantSubFieldBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomePlantSubFieldBin::IsInitialized() const {
  return true;
}

void HomePlantSubFieldBin::Swap(HomePlantSubFieldBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomePlantSubFieldBin::InternalSwap(HomePlantSubFieldBin* other) {
  using std::swap;
  gather_index_list_.InternalSwap(&other->gather_index_list_);
  swap(index_, other->index_);
  swap(seed_id_, other->seed_id_);
  swap(grow_time_, other->grow_time_);
  swap(last_update_time_, other->last_update_time_);
  swap(home_gather_id_, other->home_gather_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomePlantSubFieldBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomePlantSubFieldBin

// uint32 index = 1;
void HomePlantSubFieldBin::clear_index() {
  index_ = 0u;
}
::google::protobuf::uint32 HomePlantSubFieldBin::index() const {
  // @@protoc_insertion_point(field_get:proto.HomePlantSubFieldBin.index)
  return index_;
}
void HomePlantSubFieldBin::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.HomePlantSubFieldBin.index)
}

// uint32 seed_id = 2;
void HomePlantSubFieldBin::clear_seed_id() {
  seed_id_ = 0u;
}
::google::protobuf::uint32 HomePlantSubFieldBin::seed_id() const {
  // @@protoc_insertion_point(field_get:proto.HomePlantSubFieldBin.seed_id)
  return seed_id_;
}
void HomePlantSubFieldBin::set_seed_id(::google::protobuf::uint32 value) {
  
  seed_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomePlantSubFieldBin.seed_id)
}

// uint32 grow_time = 3;
void HomePlantSubFieldBin::clear_grow_time() {
  grow_time_ = 0u;
}
::google::protobuf::uint32 HomePlantSubFieldBin::grow_time() const {
  // @@protoc_insertion_point(field_get:proto.HomePlantSubFieldBin.grow_time)
  return grow_time_;
}
void HomePlantSubFieldBin::set_grow_time(::google::protobuf::uint32 value) {
  
  grow_time_ = value;
  // @@protoc_insertion_point(field_set:proto.HomePlantSubFieldBin.grow_time)
}

// uint32 last_update_time = 4;
void HomePlantSubFieldBin::clear_last_update_time() {
  last_update_time_ = 0u;
}
::google::protobuf::uint32 HomePlantSubFieldBin::last_update_time() const {
  // @@protoc_insertion_point(field_get:proto.HomePlantSubFieldBin.last_update_time)
  return last_update_time_;
}
void HomePlantSubFieldBin::set_last_update_time(::google::protobuf::uint32 value) {
  
  last_update_time_ = value;
  // @@protoc_insertion_point(field_set:proto.HomePlantSubFieldBin.last_update_time)
}

// repeated uint32 gather_index_list = 5;
int HomePlantSubFieldBin::gather_index_list_size() const {
  return gather_index_list_.size();
}
void HomePlantSubFieldBin::clear_gather_index_list() {
  gather_index_list_.Clear();
}
::google::protobuf::uint32 HomePlantSubFieldBin::gather_index_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomePlantSubFieldBin.gather_index_list)
  return gather_index_list_.Get(index);
}
void HomePlantSubFieldBin::set_gather_index_list(int index, ::google::protobuf::uint32 value) {
  gather_index_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.HomePlantSubFieldBin.gather_index_list)
}
void HomePlantSubFieldBin::add_gather_index_list(::google::protobuf::uint32 value) {
  gather_index_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.HomePlantSubFieldBin.gather_index_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
HomePlantSubFieldBin::gather_index_list() const {
  // @@protoc_insertion_point(field_list:proto.HomePlantSubFieldBin.gather_index_list)
  return gather_index_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
HomePlantSubFieldBin::mutable_gather_index_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomePlantSubFieldBin.gather_index_list)
  return &gather_index_list_;
}

// uint32 home_gather_id = 6;
void HomePlantSubFieldBin::clear_home_gather_id() {
  home_gather_id_ = 0u;
}
::google::protobuf::uint32 HomePlantSubFieldBin::home_gather_id() const {
  // @@protoc_insertion_point(field_get:proto.HomePlantSubFieldBin.home_gather_id)
  return home_gather_id_;
}
void HomePlantSubFieldBin::set_home_gather_id(::google::protobuf::uint32 value) {
  
  home_gather_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomePlantSubFieldBin.home_gather_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomePlantFieldBin::kModuleIdFieldNumber;
const int HomePlantFieldBin::kSceneIdFieldNumber;
const int HomePlantFieldBin::kGuidFieldNumber;
const int HomePlantFieldBin::kFurnitureIdFieldNumber;
const int HomePlantFieldBin::kSubFieldBinListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomePlantFieldBin::HomePlantFieldBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomePlantFieldBin)
}
HomePlantFieldBin::HomePlantFieldBin(const HomePlantFieldBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sub_field_bin_list_(from.sub_field_bin_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&module_id_, &from.module_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&furniture_id_) -
    reinterpret_cast<char*>(&module_id_)) + sizeof(furniture_id_));
  // @@protoc_insertion_point(copy_constructor:proto.HomePlantFieldBin)
}

void HomePlantFieldBin::SharedCtor() {
  ::memset(&module_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&furniture_id_) -
      reinterpret_cast<char*>(&module_id_)) + sizeof(furniture_id_));
  _cached_size_ = 0;
}

HomePlantFieldBin::~HomePlantFieldBin() {
  // @@protoc_insertion_point(destructor:proto.HomePlantFieldBin)
  SharedDtor();
}

void HomePlantFieldBin::SharedDtor() {
}

void HomePlantFieldBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomePlantFieldBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomePlantFieldBin& HomePlantFieldBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomePlantFieldBin* HomePlantFieldBin::New(::google::protobuf::Arena* arena) const {
  HomePlantFieldBin* n = new HomePlantFieldBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomePlantFieldBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomePlantFieldBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sub_field_bin_list_.Clear();
  ::memset(&module_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&furniture_id_) -
      reinterpret_cast<char*>(&module_id_)) + sizeof(furniture_id_));
  _internal_metadata_.Clear();
}

bool HomePlantFieldBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomePlantFieldBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 module_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &module_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 furniture_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &furniture_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomePlantSubFieldBin sub_field_bin_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sub_field_bin_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomePlantFieldBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomePlantFieldBin)
  return false;
#undef DO_
}

void HomePlantFieldBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomePlantFieldBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->module_id(), output);
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->scene_id(), output);
  }

  // uint32 guid = 3;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->guid(), output);
  }

  // uint32 furniture_id = 4;
  if (this->furniture_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->furniture_id(), output);
  }

  // repeated .proto.HomePlantSubFieldBin sub_field_bin_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sub_field_bin_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->sub_field_bin_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomePlantFieldBin)
}

::google::protobuf::uint8* HomePlantFieldBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomePlantFieldBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->module_id(), target);
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->scene_id(), target);
  }

  // uint32 guid = 3;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->guid(), target);
  }

  // uint32 furniture_id = 4;
  if (this->furniture_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->furniture_id(), target);
  }

  // repeated .proto.HomePlantSubFieldBin sub_field_bin_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sub_field_bin_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->sub_field_bin_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomePlantFieldBin)
  return target;
}

size_t HomePlantFieldBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomePlantFieldBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.HomePlantSubFieldBin sub_field_bin_list = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->sub_field_bin_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sub_field_bin_list(static_cast<int>(i)));
    }
  }

  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->module_id());
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 guid = 3;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->guid());
  }

  // uint32 furniture_id = 4;
  if (this->furniture_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->furniture_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomePlantFieldBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomePlantFieldBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomePlantFieldBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomePlantFieldBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomePlantFieldBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomePlantFieldBin)
    MergeFrom(*source);
  }
}

void HomePlantFieldBin::MergeFrom(const HomePlantFieldBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomePlantFieldBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sub_field_bin_list_.MergeFrom(from.sub_field_bin_list_);
  if (from.module_id() != 0) {
    set_module_id(from.module_id());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.furniture_id() != 0) {
    set_furniture_id(from.furniture_id());
  }
}

void HomePlantFieldBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomePlantFieldBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomePlantFieldBin::CopyFrom(const HomePlantFieldBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomePlantFieldBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomePlantFieldBin::IsInitialized() const {
  return true;
}

void HomePlantFieldBin::Swap(HomePlantFieldBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomePlantFieldBin::InternalSwap(HomePlantFieldBin* other) {
  using std::swap;
  sub_field_bin_list_.InternalSwap(&other->sub_field_bin_list_);
  swap(module_id_, other->module_id_);
  swap(scene_id_, other->scene_id_);
  swap(guid_, other->guid_);
  swap(furniture_id_, other->furniture_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomePlantFieldBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomePlantFieldBin

// uint32 module_id = 1;
void HomePlantFieldBin::clear_module_id() {
  module_id_ = 0u;
}
::google::protobuf::uint32 HomePlantFieldBin::module_id() const {
  // @@protoc_insertion_point(field_get:proto.HomePlantFieldBin.module_id)
  return module_id_;
}
void HomePlantFieldBin::set_module_id(::google::protobuf::uint32 value) {
  
  module_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomePlantFieldBin.module_id)
}

// uint32 scene_id = 2;
void HomePlantFieldBin::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 HomePlantFieldBin::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.HomePlantFieldBin.scene_id)
  return scene_id_;
}
void HomePlantFieldBin::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomePlantFieldBin.scene_id)
}

// uint32 guid = 3;
void HomePlantFieldBin::clear_guid() {
  guid_ = 0u;
}
::google::protobuf::uint32 HomePlantFieldBin::guid() const {
  // @@protoc_insertion_point(field_get:proto.HomePlantFieldBin.guid)
  return guid_;
}
void HomePlantFieldBin::set_guid(::google::protobuf::uint32 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.HomePlantFieldBin.guid)
}

// uint32 furniture_id = 4;
void HomePlantFieldBin::clear_furniture_id() {
  furniture_id_ = 0u;
}
::google::protobuf::uint32 HomePlantFieldBin::furniture_id() const {
  // @@protoc_insertion_point(field_get:proto.HomePlantFieldBin.furniture_id)
  return furniture_id_;
}
void HomePlantFieldBin::set_furniture_id(::google::protobuf::uint32 value) {
  
  furniture_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomePlantFieldBin.furniture_id)
}

// repeated .proto.HomePlantSubFieldBin sub_field_bin_list = 5;
int HomePlantFieldBin::sub_field_bin_list_size() const {
  return sub_field_bin_list_.size();
}
void HomePlantFieldBin::clear_sub_field_bin_list() {
  sub_field_bin_list_.Clear();
}
const ::proto::HomePlantSubFieldBin& HomePlantFieldBin::sub_field_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomePlantFieldBin.sub_field_bin_list)
  return sub_field_bin_list_.Get(index);
}
::proto::HomePlantSubFieldBin* HomePlantFieldBin::mutable_sub_field_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomePlantFieldBin.sub_field_bin_list)
  return sub_field_bin_list_.Mutable(index);
}
::proto::HomePlantSubFieldBin* HomePlantFieldBin::add_sub_field_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomePlantFieldBin.sub_field_bin_list)
  return sub_field_bin_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomePlantSubFieldBin >*
HomePlantFieldBin::mutable_sub_field_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomePlantFieldBin.sub_field_bin_list)
  return &sub_field_bin_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomePlantSubFieldBin >&
HomePlantFieldBin::sub_field_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomePlantFieldBin.sub_field_bin_list)
  return sub_field_bin_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomePlantBin::kFieldBinListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomePlantBin::HomePlantBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomePlantBin)
}
HomePlantBin::HomePlantBin(const HomePlantBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      field_bin_list_(from.field_bin_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.HomePlantBin)
}

void HomePlantBin::SharedCtor() {
  _cached_size_ = 0;
}

HomePlantBin::~HomePlantBin() {
  // @@protoc_insertion_point(destructor:proto.HomePlantBin)
  SharedDtor();
}

void HomePlantBin::SharedDtor() {
}

void HomePlantBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomePlantBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomePlantBin& HomePlantBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomePlantBin* HomePlantBin::New(::google::protobuf::Arena* arena) const {
  HomePlantBin* n = new HomePlantBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomePlantBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomePlantBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_bin_list_.Clear();
  _internal_metadata_.Clear();
}

bool HomePlantBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomePlantBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.HomePlantFieldBin field_bin_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_field_bin_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomePlantBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomePlantBin)
  return false;
#undef DO_
}

void HomePlantBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomePlantBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.HomePlantFieldBin field_bin_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->field_bin_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->field_bin_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomePlantBin)
}

::google::protobuf::uint8* HomePlantBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomePlantBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.HomePlantFieldBin field_bin_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->field_bin_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->field_bin_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomePlantBin)
  return target;
}

size_t HomePlantBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomePlantBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.HomePlantFieldBin field_bin_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->field_bin_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->field_bin_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomePlantBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomePlantBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomePlantBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomePlantBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomePlantBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomePlantBin)
    MergeFrom(*source);
  }
}

void HomePlantBin::MergeFrom(const HomePlantBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomePlantBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  field_bin_list_.MergeFrom(from.field_bin_list_);
}

void HomePlantBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomePlantBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomePlantBin::CopyFrom(const HomePlantBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomePlantBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomePlantBin::IsInitialized() const {
  return true;
}

void HomePlantBin::Swap(HomePlantBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomePlantBin::InternalSwap(HomePlantBin* other) {
  using std::swap;
  field_bin_list_.InternalSwap(&other->field_bin_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomePlantBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomePlantBin

// repeated .proto.HomePlantFieldBin field_bin_list = 1;
int HomePlantBin::field_bin_list_size() const {
  return field_bin_list_.size();
}
void HomePlantBin::clear_field_bin_list() {
  field_bin_list_.Clear();
}
const ::proto::HomePlantFieldBin& HomePlantBin::field_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomePlantBin.field_bin_list)
  return field_bin_list_.Get(index);
}
::proto::HomePlantFieldBin* HomePlantBin::mutable_field_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomePlantBin.field_bin_list)
  return field_bin_list_.Mutable(index);
}
::proto::HomePlantFieldBin* HomePlantBin::add_field_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomePlantBin.field_bin_list)
  return field_bin_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomePlantFieldBin >*
HomePlantBin::mutable_field_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomePlantBin.field_bin_list)
  return &field_bin_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomePlantFieldBin >&
HomePlantBin::field_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomePlantBin.field_bin_list)
  return field_bin_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeFishpondFarmingBin::kSceneIdFieldNumber;
const int HomeFishpondFarmingBin::kFishpondGuidFieldNumber;
const int HomeFishpondFarmingBin::kFurnitureIdFieldNumber;
const int HomeFishpondFarmingBin::kFishIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeFishpondFarmingBin::HomeFishpondFarmingBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeFishpondFarmingBin)
}
HomeFishpondFarmingBin::HomeFishpondFarmingBin(const HomeFishpondFarmingBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fish_id_list_(from.fish_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&furniture_id_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(furniture_id_));
  // @@protoc_insertion_point(copy_constructor:proto.HomeFishpondFarmingBin)
}

void HomeFishpondFarmingBin::SharedCtor() {
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&furniture_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(furniture_id_));
  _cached_size_ = 0;
}

HomeFishpondFarmingBin::~HomeFishpondFarmingBin() {
  // @@protoc_insertion_point(destructor:proto.HomeFishpondFarmingBin)
  SharedDtor();
}

void HomeFishpondFarmingBin::SharedDtor() {
}

void HomeFishpondFarmingBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeFishpondFarmingBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeFishpondFarmingBin& HomeFishpondFarmingBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeFishpondFarmingBin* HomeFishpondFarmingBin::New(::google::protobuf::Arena* arena) const {
  HomeFishpondFarmingBin* n = new HomeFishpondFarmingBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeFishpondFarmingBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeFishpondFarmingBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fish_id_list_.Clear();
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&furniture_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(furniture_id_));
  _internal_metadata_.Clear();
}

bool HomeFishpondFarmingBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeFishpondFarmingBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 fishpond_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fishpond_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 furniture_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &furniture_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 fish_id_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_fish_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_fish_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeFishpondFarmingBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeFishpondFarmingBin)
  return false;
#undef DO_
}

void HomeFishpondFarmingBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeFishpondFarmingBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // uint32 fishpond_guid = 2;
  if (this->fishpond_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->fishpond_guid(), output);
  }

  // uint32 furniture_id = 3;
  if (this->furniture_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->furniture_id(), output);
  }

  // repeated uint32 fish_id_list = 4;
  if (this->fish_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _fish_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->fish_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->fish_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeFishpondFarmingBin)
}

::google::protobuf::uint8* HomeFishpondFarmingBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeFishpondFarmingBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // uint32 fishpond_guid = 2;
  if (this->fishpond_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->fishpond_guid(), target);
  }

  // uint32 furniture_id = 3;
  if (this->furniture_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->furniture_id(), target);
  }

  // repeated uint32 fish_id_list = 4;
  if (this->fish_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _fish_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->fish_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeFishpondFarmingBin)
  return target;
}

size_t HomeFishpondFarmingBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeFishpondFarmingBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 fish_id_list = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->fish_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _fish_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 fishpond_guid = 2;
  if (this->fishpond_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fishpond_guid());
  }

  // uint32 furniture_id = 3;
  if (this->furniture_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->furniture_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeFishpondFarmingBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeFishpondFarmingBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeFishpondFarmingBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeFishpondFarmingBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeFishpondFarmingBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeFishpondFarmingBin)
    MergeFrom(*source);
  }
}

void HomeFishpondFarmingBin::MergeFrom(const HomeFishpondFarmingBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeFishpondFarmingBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fish_id_list_.MergeFrom(from.fish_id_list_);
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.fishpond_guid() != 0) {
    set_fishpond_guid(from.fishpond_guid());
  }
  if (from.furniture_id() != 0) {
    set_furniture_id(from.furniture_id());
  }
}

void HomeFishpondFarmingBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeFishpondFarmingBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeFishpondFarmingBin::CopyFrom(const HomeFishpondFarmingBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeFishpondFarmingBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeFishpondFarmingBin::IsInitialized() const {
  return true;
}

void HomeFishpondFarmingBin::Swap(HomeFishpondFarmingBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeFishpondFarmingBin::InternalSwap(HomeFishpondFarmingBin* other) {
  using std::swap;
  fish_id_list_.InternalSwap(&other->fish_id_list_);
  swap(scene_id_, other->scene_id_);
  swap(fishpond_guid_, other->fishpond_guid_);
  swap(furniture_id_, other->furniture_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeFishpondFarmingBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeFishpondFarmingBin

// uint32 scene_id = 1;
void HomeFishpondFarmingBin::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 HomeFishpondFarmingBin::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeFishpondFarmingBin.scene_id)
  return scene_id_;
}
void HomeFishpondFarmingBin::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeFishpondFarmingBin.scene_id)
}

// uint32 fishpond_guid = 2;
void HomeFishpondFarmingBin::clear_fishpond_guid() {
  fishpond_guid_ = 0u;
}
::google::protobuf::uint32 HomeFishpondFarmingBin::fishpond_guid() const {
  // @@protoc_insertion_point(field_get:proto.HomeFishpondFarmingBin.fishpond_guid)
  return fishpond_guid_;
}
void HomeFishpondFarmingBin::set_fishpond_guid(::google::protobuf::uint32 value) {
  
  fishpond_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeFishpondFarmingBin.fishpond_guid)
}

// uint32 furniture_id = 3;
void HomeFishpondFarmingBin::clear_furniture_id() {
  furniture_id_ = 0u;
}
::google::protobuf::uint32 HomeFishpondFarmingBin::furniture_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeFishpondFarmingBin.furniture_id)
  return furniture_id_;
}
void HomeFishpondFarmingBin::set_furniture_id(::google::protobuf::uint32 value) {
  
  furniture_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeFishpondFarmingBin.furniture_id)
}

// repeated uint32 fish_id_list = 4;
int HomeFishpondFarmingBin::fish_id_list_size() const {
  return fish_id_list_.size();
}
void HomeFishpondFarmingBin::clear_fish_id_list() {
  fish_id_list_.Clear();
}
::google::protobuf::uint32 HomeFishpondFarmingBin::fish_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeFishpondFarmingBin.fish_id_list)
  return fish_id_list_.Get(index);
}
void HomeFishpondFarmingBin::set_fish_id_list(int index, ::google::protobuf::uint32 value) {
  fish_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.HomeFishpondFarmingBin.fish_id_list)
}
void HomeFishpondFarmingBin::add_fish_id_list(::google::protobuf::uint32 value) {
  fish_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.HomeFishpondFarmingBin.fish_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
HomeFishpondFarmingBin::fish_id_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeFishpondFarmingBin.fish_id_list)
  return fish_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
HomeFishpondFarmingBin::mutable_fish_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeFishpondFarmingBin.fish_id_list)
  return &fish_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeScenePointFishFarmingBin::kSceneIdFieldNumber;
const int HomeScenePointFishFarmingBin::kLocalEntityIdFieldNumber;
const int HomeScenePointFishFarmingBin::kFishIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeScenePointFishFarmingBin::HomeScenePointFishFarmingBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeScenePointFishFarmingBin)
}
HomeScenePointFishFarmingBin::HomeScenePointFishFarmingBin(const HomeScenePointFishFarmingBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fish_id_list_(from.fish_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&local_entity_id_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(local_entity_id_));
  // @@protoc_insertion_point(copy_constructor:proto.HomeScenePointFishFarmingBin)
}

void HomeScenePointFishFarmingBin::SharedCtor() {
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&local_entity_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(local_entity_id_));
  _cached_size_ = 0;
}

HomeScenePointFishFarmingBin::~HomeScenePointFishFarmingBin() {
  // @@protoc_insertion_point(destructor:proto.HomeScenePointFishFarmingBin)
  SharedDtor();
}

void HomeScenePointFishFarmingBin::SharedDtor() {
}

void HomeScenePointFishFarmingBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeScenePointFishFarmingBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeScenePointFishFarmingBin& HomeScenePointFishFarmingBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeScenePointFishFarmingBin* HomeScenePointFishFarmingBin::New(::google::protobuf::Arena* arena) const {
  HomeScenePointFishFarmingBin* n = new HomeScenePointFishFarmingBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeScenePointFishFarmingBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeScenePointFishFarmingBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fish_id_list_.Clear();
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&local_entity_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(local_entity_id_));
  _internal_metadata_.Clear();
}

bool HomeScenePointFishFarmingBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeScenePointFishFarmingBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 local_entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &local_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 fish_id_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_fish_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_fish_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeScenePointFishFarmingBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeScenePointFishFarmingBin)
  return false;
#undef DO_
}

void HomeScenePointFishFarmingBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeScenePointFishFarmingBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // uint32 local_entity_id = 2;
  if (this->local_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->local_entity_id(), output);
  }

  // repeated uint32 fish_id_list = 4;
  if (this->fish_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _fish_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->fish_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->fish_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeScenePointFishFarmingBin)
}

::google::protobuf::uint8* HomeScenePointFishFarmingBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeScenePointFishFarmingBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // uint32 local_entity_id = 2;
  if (this->local_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->local_entity_id(), target);
  }

  // repeated uint32 fish_id_list = 4;
  if (this->fish_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _fish_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->fish_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeScenePointFishFarmingBin)
  return target;
}

size_t HomeScenePointFishFarmingBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeScenePointFishFarmingBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 fish_id_list = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->fish_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _fish_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 local_entity_id = 2;
  if (this->local_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->local_entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeScenePointFishFarmingBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeScenePointFishFarmingBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeScenePointFishFarmingBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeScenePointFishFarmingBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeScenePointFishFarmingBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeScenePointFishFarmingBin)
    MergeFrom(*source);
  }
}

void HomeScenePointFishFarmingBin::MergeFrom(const HomeScenePointFishFarmingBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeScenePointFishFarmingBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fish_id_list_.MergeFrom(from.fish_id_list_);
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.local_entity_id() != 0) {
    set_local_entity_id(from.local_entity_id());
  }
}

void HomeScenePointFishFarmingBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeScenePointFishFarmingBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeScenePointFishFarmingBin::CopyFrom(const HomeScenePointFishFarmingBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeScenePointFishFarmingBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeScenePointFishFarmingBin::IsInitialized() const {
  return true;
}

void HomeScenePointFishFarmingBin::Swap(HomeScenePointFishFarmingBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeScenePointFishFarmingBin::InternalSwap(HomeScenePointFishFarmingBin* other) {
  using std::swap;
  fish_id_list_.InternalSwap(&other->fish_id_list_);
  swap(scene_id_, other->scene_id_);
  swap(local_entity_id_, other->local_entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeScenePointFishFarmingBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeScenePointFishFarmingBin

// uint32 scene_id = 1;
void HomeScenePointFishFarmingBin::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 HomeScenePointFishFarmingBin::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeScenePointFishFarmingBin.scene_id)
  return scene_id_;
}
void HomeScenePointFishFarmingBin::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeScenePointFishFarmingBin.scene_id)
}

// uint32 local_entity_id = 2;
void HomeScenePointFishFarmingBin::clear_local_entity_id() {
  local_entity_id_ = 0u;
}
::google::protobuf::uint32 HomeScenePointFishFarmingBin::local_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeScenePointFishFarmingBin.local_entity_id)
  return local_entity_id_;
}
void HomeScenePointFishFarmingBin::set_local_entity_id(::google::protobuf::uint32 value) {
  
  local_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeScenePointFishFarmingBin.local_entity_id)
}

// repeated uint32 fish_id_list = 4;
int HomeScenePointFishFarmingBin::fish_id_list_size() const {
  return fish_id_list_.size();
}
void HomeScenePointFishFarmingBin::clear_fish_id_list() {
  fish_id_list_.Clear();
}
::google::protobuf::uint32 HomeScenePointFishFarmingBin::fish_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeScenePointFishFarmingBin.fish_id_list)
  return fish_id_list_.Get(index);
}
void HomeScenePointFishFarmingBin::set_fish_id_list(int index, ::google::protobuf::uint32 value) {
  fish_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.HomeScenePointFishFarmingBin.fish_id_list)
}
void HomeScenePointFishFarmingBin::add_fish_id_list(::google::protobuf::uint32 value) {
  fish_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.HomeScenePointFishFarmingBin.fish_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
HomeScenePointFishFarmingBin::fish_id_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeScenePointFishFarmingBin.fish_id_list)
  return fish_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
HomeScenePointFishFarmingBin::mutable_fish_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeScenePointFishFarmingBin.fish_id_list)
  return &fish_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeModuleFishFarmingBin::kModuleIdFieldNumber;
const int HomeModuleFishFarmingBin::kFishpondFarmingBinListFieldNumber;
const int HomeModuleFishFarmingBin::kScenePointFishFarmingBinListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeModuleFishFarmingBin::HomeModuleFishFarmingBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeModuleFishFarmingBin)
}
HomeModuleFishFarmingBin::HomeModuleFishFarmingBin(const HomeModuleFishFarmingBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fishpond_farming_bin_list_(from.fishpond_farming_bin_list_),
      scene_point_fish_farming_bin_list_(from.scene_point_fish_farming_bin_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  module_id_ = from.module_id_;
  // @@protoc_insertion_point(copy_constructor:proto.HomeModuleFishFarmingBin)
}

void HomeModuleFishFarmingBin::SharedCtor() {
  module_id_ = 0u;
  _cached_size_ = 0;
}

HomeModuleFishFarmingBin::~HomeModuleFishFarmingBin() {
  // @@protoc_insertion_point(destructor:proto.HomeModuleFishFarmingBin)
  SharedDtor();
}

void HomeModuleFishFarmingBin::SharedDtor() {
}

void HomeModuleFishFarmingBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeModuleFishFarmingBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeModuleFishFarmingBin& HomeModuleFishFarmingBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeModuleFishFarmingBin* HomeModuleFishFarmingBin::New(::google::protobuf::Arena* arena) const {
  HomeModuleFishFarmingBin* n = new HomeModuleFishFarmingBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeModuleFishFarmingBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeModuleFishFarmingBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fishpond_farming_bin_list_.Clear();
  scene_point_fish_farming_bin_list_.Clear();
  module_id_ = 0u;
  _internal_metadata_.Clear();
}

bool HomeModuleFishFarmingBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeModuleFishFarmingBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 module_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &module_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomeFishpondFarmingBin fishpond_farming_bin_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fishpond_farming_bin_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomeScenePointFishFarmingBin scene_point_fish_farming_bin_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_scene_point_fish_farming_bin_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeModuleFishFarmingBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeModuleFishFarmingBin)
  return false;
#undef DO_
}

void HomeModuleFishFarmingBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeModuleFishFarmingBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->module_id(), output);
  }

  // repeated .proto.HomeFishpondFarmingBin fishpond_farming_bin_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fishpond_farming_bin_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->fishpond_farming_bin_list(static_cast<int>(i)), output);
  }

  // repeated .proto.HomeScenePointFishFarmingBin scene_point_fish_farming_bin_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->scene_point_fish_farming_bin_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->scene_point_fish_farming_bin_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeModuleFishFarmingBin)
}

::google::protobuf::uint8* HomeModuleFishFarmingBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeModuleFishFarmingBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->module_id(), target);
  }

  // repeated .proto.HomeFishpondFarmingBin fishpond_farming_bin_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fishpond_farming_bin_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->fishpond_farming_bin_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.HomeScenePointFishFarmingBin scene_point_fish_farming_bin_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->scene_point_fish_farming_bin_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->scene_point_fish_farming_bin_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeModuleFishFarmingBin)
  return target;
}

size_t HomeModuleFishFarmingBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeModuleFishFarmingBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.HomeFishpondFarmingBin fishpond_farming_bin_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->fishpond_farming_bin_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fishpond_farming_bin_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.HomeScenePointFishFarmingBin scene_point_fish_farming_bin_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->scene_point_fish_farming_bin_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->scene_point_fish_farming_bin_list(static_cast<int>(i)));
    }
  }

  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->module_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeModuleFishFarmingBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeModuleFishFarmingBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeModuleFishFarmingBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeModuleFishFarmingBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeModuleFishFarmingBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeModuleFishFarmingBin)
    MergeFrom(*source);
  }
}

void HomeModuleFishFarmingBin::MergeFrom(const HomeModuleFishFarmingBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeModuleFishFarmingBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fishpond_farming_bin_list_.MergeFrom(from.fishpond_farming_bin_list_);
  scene_point_fish_farming_bin_list_.MergeFrom(from.scene_point_fish_farming_bin_list_);
  if (from.module_id() != 0) {
    set_module_id(from.module_id());
  }
}

void HomeModuleFishFarmingBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeModuleFishFarmingBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeModuleFishFarmingBin::CopyFrom(const HomeModuleFishFarmingBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeModuleFishFarmingBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeModuleFishFarmingBin::IsInitialized() const {
  return true;
}

void HomeModuleFishFarmingBin::Swap(HomeModuleFishFarmingBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeModuleFishFarmingBin::InternalSwap(HomeModuleFishFarmingBin* other) {
  using std::swap;
  fishpond_farming_bin_list_.InternalSwap(&other->fishpond_farming_bin_list_);
  scene_point_fish_farming_bin_list_.InternalSwap(&other->scene_point_fish_farming_bin_list_);
  swap(module_id_, other->module_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeModuleFishFarmingBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeModuleFishFarmingBin

// uint32 module_id = 1;
void HomeModuleFishFarmingBin::clear_module_id() {
  module_id_ = 0u;
}
::google::protobuf::uint32 HomeModuleFishFarmingBin::module_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeModuleFishFarmingBin.module_id)
  return module_id_;
}
void HomeModuleFishFarmingBin::set_module_id(::google::protobuf::uint32 value) {
  
  module_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeModuleFishFarmingBin.module_id)
}

// repeated .proto.HomeFishpondFarmingBin fishpond_farming_bin_list = 2;
int HomeModuleFishFarmingBin::fishpond_farming_bin_list_size() const {
  return fishpond_farming_bin_list_.size();
}
void HomeModuleFishFarmingBin::clear_fishpond_farming_bin_list() {
  fishpond_farming_bin_list_.Clear();
}
const ::proto::HomeFishpondFarmingBin& HomeModuleFishFarmingBin::fishpond_farming_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeModuleFishFarmingBin.fishpond_farming_bin_list)
  return fishpond_farming_bin_list_.Get(index);
}
::proto::HomeFishpondFarmingBin* HomeModuleFishFarmingBin::mutable_fishpond_farming_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeModuleFishFarmingBin.fishpond_farming_bin_list)
  return fishpond_farming_bin_list_.Mutable(index);
}
::proto::HomeFishpondFarmingBin* HomeModuleFishFarmingBin::add_fishpond_farming_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomeModuleFishFarmingBin.fishpond_farming_bin_list)
  return fishpond_farming_bin_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeFishpondFarmingBin >*
HomeModuleFishFarmingBin::mutable_fishpond_farming_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeModuleFishFarmingBin.fishpond_farming_bin_list)
  return &fishpond_farming_bin_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeFishpondFarmingBin >&
HomeModuleFishFarmingBin::fishpond_farming_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeModuleFishFarmingBin.fishpond_farming_bin_list)
  return fishpond_farming_bin_list_;
}

// repeated .proto.HomeScenePointFishFarmingBin scene_point_fish_farming_bin_list = 3;
int HomeModuleFishFarmingBin::scene_point_fish_farming_bin_list_size() const {
  return scene_point_fish_farming_bin_list_.size();
}
void HomeModuleFishFarmingBin::clear_scene_point_fish_farming_bin_list() {
  scene_point_fish_farming_bin_list_.Clear();
}
const ::proto::HomeScenePointFishFarmingBin& HomeModuleFishFarmingBin::scene_point_fish_farming_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeModuleFishFarmingBin.scene_point_fish_farming_bin_list)
  return scene_point_fish_farming_bin_list_.Get(index);
}
::proto::HomeScenePointFishFarmingBin* HomeModuleFishFarmingBin::mutable_scene_point_fish_farming_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeModuleFishFarmingBin.scene_point_fish_farming_bin_list)
  return scene_point_fish_farming_bin_list_.Mutable(index);
}
::proto::HomeScenePointFishFarmingBin* HomeModuleFishFarmingBin::add_scene_point_fish_farming_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomeModuleFishFarmingBin.scene_point_fish_farming_bin_list)
  return scene_point_fish_farming_bin_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeScenePointFishFarmingBin >*
HomeModuleFishFarmingBin::mutable_scene_point_fish_farming_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeModuleFishFarmingBin.scene_point_fish_farming_bin_list)
  return &scene_point_fish_farming_bin_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeScenePointFishFarmingBin >&
HomeModuleFishFarmingBin::scene_point_fish_farming_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeModuleFishFarmingBin.scene_point_fish_farming_bin_list)
  return scene_point_fish_farming_bin_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeFishFarmingBin::kModuleFishFarmingBinListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeFishFarmingBin::HomeFishFarmingBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeFishFarmingBin)
}
HomeFishFarmingBin::HomeFishFarmingBin(const HomeFishFarmingBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      module_fish_farming_bin_list_(from.module_fish_farming_bin_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.HomeFishFarmingBin)
}

void HomeFishFarmingBin::SharedCtor() {
  _cached_size_ = 0;
}

HomeFishFarmingBin::~HomeFishFarmingBin() {
  // @@protoc_insertion_point(destructor:proto.HomeFishFarmingBin)
  SharedDtor();
}

void HomeFishFarmingBin::SharedDtor() {
}

void HomeFishFarmingBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeFishFarmingBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeFishFarmingBin& HomeFishFarmingBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeFishFarmingBin* HomeFishFarmingBin::New(::google::protobuf::Arena* arena) const {
  HomeFishFarmingBin* n = new HomeFishFarmingBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeFishFarmingBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeFishFarmingBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  module_fish_farming_bin_list_.Clear();
  _internal_metadata_.Clear();
}

bool HomeFishFarmingBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeFishFarmingBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.HomeModuleFishFarmingBin module_fish_farming_bin_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_module_fish_farming_bin_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeFishFarmingBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeFishFarmingBin)
  return false;
#undef DO_
}

void HomeFishFarmingBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeFishFarmingBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.HomeModuleFishFarmingBin module_fish_farming_bin_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->module_fish_farming_bin_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->module_fish_farming_bin_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeFishFarmingBin)
}

::google::protobuf::uint8* HomeFishFarmingBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeFishFarmingBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.HomeModuleFishFarmingBin module_fish_farming_bin_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->module_fish_farming_bin_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->module_fish_farming_bin_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeFishFarmingBin)
  return target;
}

size_t HomeFishFarmingBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeFishFarmingBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.HomeModuleFishFarmingBin module_fish_farming_bin_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->module_fish_farming_bin_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->module_fish_farming_bin_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeFishFarmingBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeFishFarmingBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeFishFarmingBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeFishFarmingBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeFishFarmingBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeFishFarmingBin)
    MergeFrom(*source);
  }
}

void HomeFishFarmingBin::MergeFrom(const HomeFishFarmingBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeFishFarmingBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  module_fish_farming_bin_list_.MergeFrom(from.module_fish_farming_bin_list_);
}

void HomeFishFarmingBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeFishFarmingBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeFishFarmingBin::CopyFrom(const HomeFishFarmingBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeFishFarmingBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeFishFarmingBin::IsInitialized() const {
  return true;
}

void HomeFishFarmingBin::Swap(HomeFishFarmingBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeFishFarmingBin::InternalSwap(HomeFishFarmingBin* other) {
  using std::swap;
  module_fish_farming_bin_list_.InternalSwap(&other->module_fish_farming_bin_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeFishFarmingBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeFishFarmingBin

// repeated .proto.HomeModuleFishFarmingBin module_fish_farming_bin_list = 1;
int HomeFishFarmingBin::module_fish_farming_bin_list_size() const {
  return module_fish_farming_bin_list_.size();
}
void HomeFishFarmingBin::clear_module_fish_farming_bin_list() {
  module_fish_farming_bin_list_.Clear();
}
const ::proto::HomeModuleFishFarmingBin& HomeFishFarmingBin::module_fish_farming_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeFishFarmingBin.module_fish_farming_bin_list)
  return module_fish_farming_bin_list_.Get(index);
}
::proto::HomeModuleFishFarmingBin* HomeFishFarmingBin::mutable_module_fish_farming_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeFishFarmingBin.module_fish_farming_bin_list)
  return module_fish_farming_bin_list_.Mutable(index);
}
::proto::HomeModuleFishFarmingBin* HomeFishFarmingBin::add_module_fish_farming_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomeFishFarmingBin.module_fish_farming_bin_list)
  return module_fish_farming_bin_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeModuleFishFarmingBin >*
HomeFishFarmingBin::mutable_module_fish_farming_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeFishFarmingBin.module_fish_farming_bin_list)
  return &module_fish_farming_bin_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeModuleFishFarmingBin >&
HomeFishFarmingBin::module_fish_farming_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeFishFarmingBin.module_fish_farming_bin_list)
  return module_fish_farming_bin_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeCustomFurnitureNodeInfoBin::kParentIndexFieldNumber;
const int HomeCustomFurnitureNodeInfoBin::kFurnitureIdFieldNumber;
const int HomeCustomFurnitureNodeInfoBin::kSlotIdentifierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeCustomFurnitureNodeInfoBin::HomeCustomFurnitureNodeInfoBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeCustomFurnitureNodeInfoBin)
}
HomeCustomFurnitureNodeInfoBin::HomeCustomFurnitureNodeInfoBin(const HomeCustomFurnitureNodeInfoBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  slot_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.slot_identifier().size() > 0) {
    slot_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.slot_identifier_);
  }
  ::memcpy(&parent_index_, &from.parent_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&furniture_id_) -
    reinterpret_cast<char*>(&parent_index_)) + sizeof(furniture_id_));
  // @@protoc_insertion_point(copy_constructor:proto.HomeCustomFurnitureNodeInfoBin)
}

void HomeCustomFurnitureNodeInfoBin::SharedCtor() {
  slot_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&parent_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&furniture_id_) -
      reinterpret_cast<char*>(&parent_index_)) + sizeof(furniture_id_));
  _cached_size_ = 0;
}

HomeCustomFurnitureNodeInfoBin::~HomeCustomFurnitureNodeInfoBin() {
  // @@protoc_insertion_point(destructor:proto.HomeCustomFurnitureNodeInfoBin)
  SharedDtor();
}

void HomeCustomFurnitureNodeInfoBin::SharedDtor() {
  slot_identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HomeCustomFurnitureNodeInfoBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeCustomFurnitureNodeInfoBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeCustomFurnitureNodeInfoBin& HomeCustomFurnitureNodeInfoBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeCustomFurnitureNodeInfoBin* HomeCustomFurnitureNodeInfoBin::New(::google::protobuf::Arena* arena) const {
  HomeCustomFurnitureNodeInfoBin* n = new HomeCustomFurnitureNodeInfoBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeCustomFurnitureNodeInfoBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeCustomFurnitureNodeInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slot_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&parent_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&furniture_id_) -
      reinterpret_cast<char*>(&parent_index_)) + sizeof(furniture_id_));
  _internal_metadata_.Clear();
}

bool HomeCustomFurnitureNodeInfoBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeCustomFurnitureNodeInfoBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 parent_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &parent_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 furniture_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &furniture_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string slot_identifier = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_slot_identifier()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->slot_identifier().data(), static_cast<int>(this->slot_identifier().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.HomeCustomFurnitureNodeInfoBin.slot_identifier"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeCustomFurnitureNodeInfoBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeCustomFurnitureNodeInfoBin)
  return false;
#undef DO_
}

void HomeCustomFurnitureNodeInfoBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeCustomFurnitureNodeInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 parent_index = 1;
  if (this->parent_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->parent_index(), output);
  }

  // uint32 furniture_id = 2;
  if (this->furniture_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->furniture_id(), output);
  }

  // string slot_identifier = 3;
  if (this->slot_identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->slot_identifier().data(), static_cast<int>(this->slot_identifier().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.HomeCustomFurnitureNodeInfoBin.slot_identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->slot_identifier(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeCustomFurnitureNodeInfoBin)
}

::google::protobuf::uint8* HomeCustomFurnitureNodeInfoBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeCustomFurnitureNodeInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 parent_index = 1;
  if (this->parent_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->parent_index(), target);
  }

  // uint32 furniture_id = 2;
  if (this->furniture_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->furniture_id(), target);
  }

  // string slot_identifier = 3;
  if (this->slot_identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->slot_identifier().data(), static_cast<int>(this->slot_identifier().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.HomeCustomFurnitureNodeInfoBin.slot_identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->slot_identifier(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeCustomFurnitureNodeInfoBin)
  return target;
}

size_t HomeCustomFurnitureNodeInfoBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeCustomFurnitureNodeInfoBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string slot_identifier = 3;
  if (this->slot_identifier().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->slot_identifier());
  }

  // int32 parent_index = 1;
  if (this->parent_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->parent_index());
  }

  // uint32 furniture_id = 2;
  if (this->furniture_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->furniture_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeCustomFurnitureNodeInfoBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeCustomFurnitureNodeInfoBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeCustomFurnitureNodeInfoBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeCustomFurnitureNodeInfoBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeCustomFurnitureNodeInfoBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeCustomFurnitureNodeInfoBin)
    MergeFrom(*source);
  }
}

void HomeCustomFurnitureNodeInfoBin::MergeFrom(const HomeCustomFurnitureNodeInfoBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeCustomFurnitureNodeInfoBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.slot_identifier().size() > 0) {

    slot_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.slot_identifier_);
  }
  if (from.parent_index() != 0) {
    set_parent_index(from.parent_index());
  }
  if (from.furniture_id() != 0) {
    set_furniture_id(from.furniture_id());
  }
}

void HomeCustomFurnitureNodeInfoBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeCustomFurnitureNodeInfoBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeCustomFurnitureNodeInfoBin::CopyFrom(const HomeCustomFurnitureNodeInfoBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeCustomFurnitureNodeInfoBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeCustomFurnitureNodeInfoBin::IsInitialized() const {
  return true;
}

void HomeCustomFurnitureNodeInfoBin::Swap(HomeCustomFurnitureNodeInfoBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeCustomFurnitureNodeInfoBin::InternalSwap(HomeCustomFurnitureNodeInfoBin* other) {
  using std::swap;
  slot_identifier_.Swap(&other->slot_identifier_);
  swap(parent_index_, other->parent_index_);
  swap(furniture_id_, other->furniture_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeCustomFurnitureNodeInfoBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeCustomFurnitureNodeInfoBin

// int32 parent_index = 1;
void HomeCustomFurnitureNodeInfoBin::clear_parent_index() {
  parent_index_ = 0;
}
::google::protobuf::int32 HomeCustomFurnitureNodeInfoBin::parent_index() const {
  // @@protoc_insertion_point(field_get:proto.HomeCustomFurnitureNodeInfoBin.parent_index)
  return parent_index_;
}
void HomeCustomFurnitureNodeInfoBin::set_parent_index(::google::protobuf::int32 value) {
  
  parent_index_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeCustomFurnitureNodeInfoBin.parent_index)
}

// uint32 furniture_id = 2;
void HomeCustomFurnitureNodeInfoBin::clear_furniture_id() {
  furniture_id_ = 0u;
}
::google::protobuf::uint32 HomeCustomFurnitureNodeInfoBin::furniture_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeCustomFurnitureNodeInfoBin.furniture_id)
  return furniture_id_;
}
void HomeCustomFurnitureNodeInfoBin::set_furniture_id(::google::protobuf::uint32 value) {
  
  furniture_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeCustomFurnitureNodeInfoBin.furniture_id)
}

// string slot_identifier = 3;
void HomeCustomFurnitureNodeInfoBin::clear_slot_identifier() {
  slot_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HomeCustomFurnitureNodeInfoBin::slot_identifier() const {
  // @@protoc_insertion_point(field_get:proto.HomeCustomFurnitureNodeInfoBin.slot_identifier)
  return slot_identifier_.GetNoArena();
}
void HomeCustomFurnitureNodeInfoBin::set_slot_identifier(const ::std::string& value) {
  
  slot_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.HomeCustomFurnitureNodeInfoBin.slot_identifier)
}
#if LANG_CXX11
void HomeCustomFurnitureNodeInfoBin::set_slot_identifier(::std::string&& value) {
  
  slot_identifier_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.HomeCustomFurnitureNodeInfoBin.slot_identifier)
}
#endif
void HomeCustomFurnitureNodeInfoBin::set_slot_identifier(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  slot_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.HomeCustomFurnitureNodeInfoBin.slot_identifier)
}
void HomeCustomFurnitureNodeInfoBin::set_slot_identifier(const char* value, size_t size) {
  
  slot_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.HomeCustomFurnitureNodeInfoBin.slot_identifier)
}
::std::string* HomeCustomFurnitureNodeInfoBin::mutable_slot_identifier() {
  
  // @@protoc_insertion_point(field_mutable:proto.HomeCustomFurnitureNodeInfoBin.slot_identifier)
  return slot_identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HomeCustomFurnitureNodeInfoBin::release_slot_identifier() {
  // @@protoc_insertion_point(field_release:proto.HomeCustomFurnitureNodeInfoBin.slot_identifier)
  
  return slot_identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HomeCustomFurnitureNodeInfoBin::set_allocated_slot_identifier(::std::string* slot_identifier) {
  if (slot_identifier != NULL) {
    
  } else {
    
  }
  slot_identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), slot_identifier);
  // @@protoc_insertion_point(field_set_allocated:proto.HomeCustomFurnitureNodeInfoBin.slot_identifier)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeOneCustomFurnitureBin::kSceneIdFieldNumber;
const int HomeOneCustomFurnitureBin::kGuidFieldNumber;
const int HomeOneCustomFurnitureBin::kFurnitureIdFieldNumber;
const int HomeOneCustomFurnitureBin::kSubFurnitureListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeOneCustomFurnitureBin::HomeOneCustomFurnitureBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeOneCustomFurnitureBin)
}
HomeOneCustomFurnitureBin::HomeOneCustomFurnitureBin(const HomeOneCustomFurnitureBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sub_furniture_list_(from.sub_furniture_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&furniture_id_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(furniture_id_));
  // @@protoc_insertion_point(copy_constructor:proto.HomeOneCustomFurnitureBin)
}

void HomeOneCustomFurnitureBin::SharedCtor() {
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&furniture_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(furniture_id_));
  _cached_size_ = 0;
}

HomeOneCustomFurnitureBin::~HomeOneCustomFurnitureBin() {
  // @@protoc_insertion_point(destructor:proto.HomeOneCustomFurnitureBin)
  SharedDtor();
}

void HomeOneCustomFurnitureBin::SharedDtor() {
}

void HomeOneCustomFurnitureBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeOneCustomFurnitureBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeOneCustomFurnitureBin& HomeOneCustomFurnitureBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeOneCustomFurnitureBin* HomeOneCustomFurnitureBin::New(::google::protobuf::Arena* arena) const {
  HomeOneCustomFurnitureBin* n = new HomeOneCustomFurnitureBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeOneCustomFurnitureBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeOneCustomFurnitureBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sub_furniture_list_.Clear();
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&furniture_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(furniture_id_));
  _internal_metadata_.Clear();
}

bool HomeOneCustomFurnitureBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeOneCustomFurnitureBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 furniture_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &furniture_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomeCustomFurnitureNodeInfoBin sub_furniture_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sub_furniture_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeOneCustomFurnitureBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeOneCustomFurnitureBin)
  return false;
#undef DO_
}

void HomeOneCustomFurnitureBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeOneCustomFurnitureBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // uint32 guid = 2;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->guid(), output);
  }

  // uint32 furniture_id = 3;
  if (this->furniture_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->furniture_id(), output);
  }

  // repeated .proto.HomeCustomFurnitureNodeInfoBin sub_furniture_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sub_furniture_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->sub_furniture_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeOneCustomFurnitureBin)
}

::google::protobuf::uint8* HomeOneCustomFurnitureBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeOneCustomFurnitureBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // uint32 guid = 2;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->guid(), target);
  }

  // uint32 furniture_id = 3;
  if (this->furniture_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->furniture_id(), target);
  }

  // repeated .proto.HomeCustomFurnitureNodeInfoBin sub_furniture_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sub_furniture_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->sub_furniture_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeOneCustomFurnitureBin)
  return target;
}

size_t HomeOneCustomFurnitureBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeOneCustomFurnitureBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.HomeCustomFurnitureNodeInfoBin sub_furniture_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->sub_furniture_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sub_furniture_list(static_cast<int>(i)));
    }
  }

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 guid = 2;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->guid());
  }

  // uint32 furniture_id = 3;
  if (this->furniture_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->furniture_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeOneCustomFurnitureBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeOneCustomFurnitureBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeOneCustomFurnitureBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeOneCustomFurnitureBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeOneCustomFurnitureBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeOneCustomFurnitureBin)
    MergeFrom(*source);
  }
}

void HomeOneCustomFurnitureBin::MergeFrom(const HomeOneCustomFurnitureBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeOneCustomFurnitureBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sub_furniture_list_.MergeFrom(from.sub_furniture_list_);
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.furniture_id() != 0) {
    set_furniture_id(from.furniture_id());
  }
}

void HomeOneCustomFurnitureBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeOneCustomFurnitureBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeOneCustomFurnitureBin::CopyFrom(const HomeOneCustomFurnitureBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeOneCustomFurnitureBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeOneCustomFurnitureBin::IsInitialized() const {
  return true;
}

void HomeOneCustomFurnitureBin::Swap(HomeOneCustomFurnitureBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeOneCustomFurnitureBin::InternalSwap(HomeOneCustomFurnitureBin* other) {
  using std::swap;
  sub_furniture_list_.InternalSwap(&other->sub_furniture_list_);
  swap(scene_id_, other->scene_id_);
  swap(guid_, other->guid_);
  swap(furniture_id_, other->furniture_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeOneCustomFurnitureBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeOneCustomFurnitureBin

// uint32 scene_id = 1;
void HomeOneCustomFurnitureBin::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 HomeOneCustomFurnitureBin::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeOneCustomFurnitureBin.scene_id)
  return scene_id_;
}
void HomeOneCustomFurnitureBin::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeOneCustomFurnitureBin.scene_id)
}

// uint32 guid = 2;
void HomeOneCustomFurnitureBin::clear_guid() {
  guid_ = 0u;
}
::google::protobuf::uint32 HomeOneCustomFurnitureBin::guid() const {
  // @@protoc_insertion_point(field_get:proto.HomeOneCustomFurnitureBin.guid)
  return guid_;
}
void HomeOneCustomFurnitureBin::set_guid(::google::protobuf::uint32 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeOneCustomFurnitureBin.guid)
}

// uint32 furniture_id = 3;
void HomeOneCustomFurnitureBin::clear_furniture_id() {
  furniture_id_ = 0u;
}
::google::protobuf::uint32 HomeOneCustomFurnitureBin::furniture_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeOneCustomFurnitureBin.furniture_id)
  return furniture_id_;
}
void HomeOneCustomFurnitureBin::set_furniture_id(::google::protobuf::uint32 value) {
  
  furniture_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeOneCustomFurnitureBin.furniture_id)
}

// repeated .proto.HomeCustomFurnitureNodeInfoBin sub_furniture_list = 4;
int HomeOneCustomFurnitureBin::sub_furniture_list_size() const {
  return sub_furniture_list_.size();
}
void HomeOneCustomFurnitureBin::clear_sub_furniture_list() {
  sub_furniture_list_.Clear();
}
const ::proto::HomeCustomFurnitureNodeInfoBin& HomeOneCustomFurnitureBin::sub_furniture_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeOneCustomFurnitureBin.sub_furniture_list)
  return sub_furniture_list_.Get(index);
}
::proto::HomeCustomFurnitureNodeInfoBin* HomeOneCustomFurnitureBin::mutable_sub_furniture_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeOneCustomFurnitureBin.sub_furniture_list)
  return sub_furniture_list_.Mutable(index);
}
::proto::HomeCustomFurnitureNodeInfoBin* HomeOneCustomFurnitureBin::add_sub_furniture_list() {
  // @@protoc_insertion_point(field_add:proto.HomeOneCustomFurnitureBin.sub_furniture_list)
  return sub_furniture_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeCustomFurnitureNodeInfoBin >*
HomeOneCustomFurnitureBin::mutable_sub_furniture_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeOneCustomFurnitureBin.sub_furniture_list)
  return &sub_furniture_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeCustomFurnitureNodeInfoBin >&
HomeOneCustomFurnitureBin::sub_furniture_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeOneCustomFurnitureBin.sub_furniture_list)
  return sub_furniture_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeModuleCustomFurnitureBin::kModuleIdFieldNumber;
const int HomeModuleCustomFurnitureBin::kCustomFurnitureBinListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeModuleCustomFurnitureBin::HomeModuleCustomFurnitureBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeModuleCustomFurnitureBin)
}
HomeModuleCustomFurnitureBin::HomeModuleCustomFurnitureBin(const HomeModuleCustomFurnitureBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      custom_furniture_bin_list_(from.custom_furniture_bin_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  module_id_ = from.module_id_;
  // @@protoc_insertion_point(copy_constructor:proto.HomeModuleCustomFurnitureBin)
}

void HomeModuleCustomFurnitureBin::SharedCtor() {
  module_id_ = 0u;
  _cached_size_ = 0;
}

HomeModuleCustomFurnitureBin::~HomeModuleCustomFurnitureBin() {
  // @@protoc_insertion_point(destructor:proto.HomeModuleCustomFurnitureBin)
  SharedDtor();
}

void HomeModuleCustomFurnitureBin::SharedDtor() {
}

void HomeModuleCustomFurnitureBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeModuleCustomFurnitureBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeModuleCustomFurnitureBin& HomeModuleCustomFurnitureBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeModuleCustomFurnitureBin* HomeModuleCustomFurnitureBin::New(::google::protobuf::Arena* arena) const {
  HomeModuleCustomFurnitureBin* n = new HomeModuleCustomFurnitureBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeModuleCustomFurnitureBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeModuleCustomFurnitureBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  custom_furniture_bin_list_.Clear();
  module_id_ = 0u;
  _internal_metadata_.Clear();
}

bool HomeModuleCustomFurnitureBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeModuleCustomFurnitureBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 module_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &module_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomeOneCustomFurnitureBin custom_furniture_bin_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_custom_furniture_bin_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeModuleCustomFurnitureBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeModuleCustomFurnitureBin)
  return false;
#undef DO_
}

void HomeModuleCustomFurnitureBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeModuleCustomFurnitureBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->module_id(), output);
  }

  // repeated .proto.HomeOneCustomFurnitureBin custom_furniture_bin_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->custom_furniture_bin_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->custom_furniture_bin_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeModuleCustomFurnitureBin)
}

::google::protobuf::uint8* HomeModuleCustomFurnitureBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeModuleCustomFurnitureBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->module_id(), target);
  }

  // repeated .proto.HomeOneCustomFurnitureBin custom_furniture_bin_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->custom_furniture_bin_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->custom_furniture_bin_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeModuleCustomFurnitureBin)
  return target;
}

size_t HomeModuleCustomFurnitureBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeModuleCustomFurnitureBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.HomeOneCustomFurnitureBin custom_furniture_bin_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->custom_furniture_bin_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->custom_furniture_bin_list(static_cast<int>(i)));
    }
  }

  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->module_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeModuleCustomFurnitureBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeModuleCustomFurnitureBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeModuleCustomFurnitureBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeModuleCustomFurnitureBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeModuleCustomFurnitureBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeModuleCustomFurnitureBin)
    MergeFrom(*source);
  }
}

void HomeModuleCustomFurnitureBin::MergeFrom(const HomeModuleCustomFurnitureBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeModuleCustomFurnitureBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  custom_furniture_bin_list_.MergeFrom(from.custom_furniture_bin_list_);
  if (from.module_id() != 0) {
    set_module_id(from.module_id());
  }
}

void HomeModuleCustomFurnitureBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeModuleCustomFurnitureBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeModuleCustomFurnitureBin::CopyFrom(const HomeModuleCustomFurnitureBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeModuleCustomFurnitureBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeModuleCustomFurnitureBin::IsInitialized() const {
  return true;
}

void HomeModuleCustomFurnitureBin::Swap(HomeModuleCustomFurnitureBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeModuleCustomFurnitureBin::InternalSwap(HomeModuleCustomFurnitureBin* other) {
  using std::swap;
  custom_furniture_bin_list_.InternalSwap(&other->custom_furniture_bin_list_);
  swap(module_id_, other->module_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeModuleCustomFurnitureBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeModuleCustomFurnitureBin

// uint32 module_id = 1;
void HomeModuleCustomFurnitureBin::clear_module_id() {
  module_id_ = 0u;
}
::google::protobuf::uint32 HomeModuleCustomFurnitureBin::module_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeModuleCustomFurnitureBin.module_id)
  return module_id_;
}
void HomeModuleCustomFurnitureBin::set_module_id(::google::protobuf::uint32 value) {
  
  module_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeModuleCustomFurnitureBin.module_id)
}

// repeated .proto.HomeOneCustomFurnitureBin custom_furniture_bin_list = 2;
int HomeModuleCustomFurnitureBin::custom_furniture_bin_list_size() const {
  return custom_furniture_bin_list_.size();
}
void HomeModuleCustomFurnitureBin::clear_custom_furniture_bin_list() {
  custom_furniture_bin_list_.Clear();
}
const ::proto::HomeOneCustomFurnitureBin& HomeModuleCustomFurnitureBin::custom_furniture_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeModuleCustomFurnitureBin.custom_furniture_bin_list)
  return custom_furniture_bin_list_.Get(index);
}
::proto::HomeOneCustomFurnitureBin* HomeModuleCustomFurnitureBin::mutable_custom_furniture_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeModuleCustomFurnitureBin.custom_furniture_bin_list)
  return custom_furniture_bin_list_.Mutable(index);
}
::proto::HomeOneCustomFurnitureBin* HomeModuleCustomFurnitureBin::add_custom_furniture_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomeModuleCustomFurnitureBin.custom_furniture_bin_list)
  return custom_furniture_bin_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeOneCustomFurnitureBin >*
HomeModuleCustomFurnitureBin::mutable_custom_furniture_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeModuleCustomFurnitureBin.custom_furniture_bin_list)
  return &custom_furniture_bin_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeOneCustomFurnitureBin >&
HomeModuleCustomFurnitureBin::custom_furniture_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeModuleCustomFurnitureBin.custom_furniture_bin_list)
  return custom_furniture_bin_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeCustomFurnitureBin::kModuleCustomFurnitureBinListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeCustomFurnitureBin::HomeCustomFurnitureBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeCustomFurnitureBin)
}
HomeCustomFurnitureBin::HomeCustomFurnitureBin(const HomeCustomFurnitureBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      module_custom_furniture_bin_list_(from.module_custom_furniture_bin_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.HomeCustomFurnitureBin)
}

void HomeCustomFurnitureBin::SharedCtor() {
  _cached_size_ = 0;
}

HomeCustomFurnitureBin::~HomeCustomFurnitureBin() {
  // @@protoc_insertion_point(destructor:proto.HomeCustomFurnitureBin)
  SharedDtor();
}

void HomeCustomFurnitureBin::SharedDtor() {
}

void HomeCustomFurnitureBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeCustomFurnitureBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeCustomFurnitureBin& HomeCustomFurnitureBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeCustomFurnitureBin* HomeCustomFurnitureBin::New(::google::protobuf::Arena* arena) const {
  HomeCustomFurnitureBin* n = new HomeCustomFurnitureBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeCustomFurnitureBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeCustomFurnitureBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  module_custom_furniture_bin_list_.Clear();
  _internal_metadata_.Clear();
}

bool HomeCustomFurnitureBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeCustomFurnitureBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.HomeModuleCustomFurnitureBin module_custom_furniture_bin_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_module_custom_furniture_bin_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeCustomFurnitureBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeCustomFurnitureBin)
  return false;
#undef DO_
}

void HomeCustomFurnitureBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeCustomFurnitureBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.HomeModuleCustomFurnitureBin module_custom_furniture_bin_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->module_custom_furniture_bin_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->module_custom_furniture_bin_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeCustomFurnitureBin)
}

::google::protobuf::uint8* HomeCustomFurnitureBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeCustomFurnitureBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.HomeModuleCustomFurnitureBin module_custom_furniture_bin_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->module_custom_furniture_bin_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->module_custom_furniture_bin_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeCustomFurnitureBin)
  return target;
}

size_t HomeCustomFurnitureBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeCustomFurnitureBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.HomeModuleCustomFurnitureBin module_custom_furniture_bin_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->module_custom_furniture_bin_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->module_custom_furniture_bin_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeCustomFurnitureBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeCustomFurnitureBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeCustomFurnitureBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeCustomFurnitureBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeCustomFurnitureBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeCustomFurnitureBin)
    MergeFrom(*source);
  }
}

void HomeCustomFurnitureBin::MergeFrom(const HomeCustomFurnitureBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeCustomFurnitureBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  module_custom_furniture_bin_list_.MergeFrom(from.module_custom_furniture_bin_list_);
}

void HomeCustomFurnitureBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeCustomFurnitureBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeCustomFurnitureBin::CopyFrom(const HomeCustomFurnitureBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeCustomFurnitureBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeCustomFurnitureBin::IsInitialized() const {
  return true;
}

void HomeCustomFurnitureBin::Swap(HomeCustomFurnitureBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeCustomFurnitureBin::InternalSwap(HomeCustomFurnitureBin* other) {
  using std::swap;
  module_custom_furniture_bin_list_.InternalSwap(&other->module_custom_furniture_bin_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeCustomFurnitureBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeCustomFurnitureBin

// repeated .proto.HomeModuleCustomFurnitureBin module_custom_furniture_bin_list = 1;
int HomeCustomFurnitureBin::module_custom_furniture_bin_list_size() const {
  return module_custom_furniture_bin_list_.size();
}
void HomeCustomFurnitureBin::clear_module_custom_furniture_bin_list() {
  module_custom_furniture_bin_list_.Clear();
}
const ::proto::HomeModuleCustomFurnitureBin& HomeCustomFurnitureBin::module_custom_furniture_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeCustomFurnitureBin.module_custom_furniture_bin_list)
  return module_custom_furniture_bin_list_.Get(index);
}
::proto::HomeModuleCustomFurnitureBin* HomeCustomFurnitureBin::mutable_module_custom_furniture_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeCustomFurnitureBin.module_custom_furniture_bin_list)
  return module_custom_furniture_bin_list_.Mutable(index);
}
::proto::HomeModuleCustomFurnitureBin* HomeCustomFurnitureBin::add_module_custom_furniture_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomeCustomFurnitureBin.module_custom_furniture_bin_list)
  return module_custom_furniture_bin_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeModuleCustomFurnitureBin >*
HomeCustomFurnitureBin::mutable_module_custom_furniture_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeCustomFurnitureBin.module_custom_furniture_bin_list)
  return &module_custom_furniture_bin_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeModuleCustomFurnitureBin >&
HomeCustomFurnitureBin::module_custom_furniture_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeCustomFurnitureBin.module_custom_furniture_bin_list)
  return module_custom_furniture_bin_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeOnePictureFrameBin::kSceneIdFieldNumber;
const int HomeOnePictureFrameBin::kGuidFieldNumber;
const int HomeOnePictureFrameBin::kFurnitureIdFieldNumber;
const int HomeOnePictureFrameBin::kPictureIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeOnePictureFrameBin::HomeOnePictureFrameBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeOnePictureFrameBin)
}
HomeOnePictureFrameBin::HomeOnePictureFrameBin(const HomeOnePictureFrameBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&picture_id_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(picture_id_));
  // @@protoc_insertion_point(copy_constructor:proto.HomeOnePictureFrameBin)
}

void HomeOnePictureFrameBin::SharedCtor() {
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&picture_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(picture_id_));
  _cached_size_ = 0;
}

HomeOnePictureFrameBin::~HomeOnePictureFrameBin() {
  // @@protoc_insertion_point(destructor:proto.HomeOnePictureFrameBin)
  SharedDtor();
}

void HomeOnePictureFrameBin::SharedDtor() {
}

void HomeOnePictureFrameBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeOnePictureFrameBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeOnePictureFrameBin& HomeOnePictureFrameBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeOnePictureFrameBin* HomeOnePictureFrameBin::New(::google::protobuf::Arena* arena) const {
  HomeOnePictureFrameBin* n = new HomeOnePictureFrameBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeOnePictureFrameBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeOnePictureFrameBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&picture_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(picture_id_));
  _internal_metadata_.Clear();
}

bool HomeOnePictureFrameBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeOnePictureFrameBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 furniture_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &furniture_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 picture_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &picture_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeOnePictureFrameBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeOnePictureFrameBin)
  return false;
#undef DO_
}

void HomeOnePictureFrameBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeOnePictureFrameBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // uint32 guid = 2;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->guid(), output);
  }

  // uint32 furniture_id = 3;
  if (this->furniture_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->furniture_id(), output);
  }

  // uint32 picture_id = 4;
  if (this->picture_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->picture_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeOnePictureFrameBin)
}

::google::protobuf::uint8* HomeOnePictureFrameBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeOnePictureFrameBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // uint32 guid = 2;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->guid(), target);
  }

  // uint32 furniture_id = 3;
  if (this->furniture_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->furniture_id(), target);
  }

  // uint32 picture_id = 4;
  if (this->picture_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->picture_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeOnePictureFrameBin)
  return target;
}

size_t HomeOnePictureFrameBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeOnePictureFrameBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 guid = 2;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->guid());
  }

  // uint32 furniture_id = 3;
  if (this->furniture_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->furniture_id());
  }

  // uint32 picture_id = 4;
  if (this->picture_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->picture_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeOnePictureFrameBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeOnePictureFrameBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeOnePictureFrameBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeOnePictureFrameBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeOnePictureFrameBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeOnePictureFrameBin)
    MergeFrom(*source);
  }
}

void HomeOnePictureFrameBin::MergeFrom(const HomeOnePictureFrameBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeOnePictureFrameBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.furniture_id() != 0) {
    set_furniture_id(from.furniture_id());
  }
  if (from.picture_id() != 0) {
    set_picture_id(from.picture_id());
  }
}

void HomeOnePictureFrameBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeOnePictureFrameBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeOnePictureFrameBin::CopyFrom(const HomeOnePictureFrameBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeOnePictureFrameBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeOnePictureFrameBin::IsInitialized() const {
  return true;
}

void HomeOnePictureFrameBin::Swap(HomeOnePictureFrameBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeOnePictureFrameBin::InternalSwap(HomeOnePictureFrameBin* other) {
  using std::swap;
  swap(scene_id_, other->scene_id_);
  swap(guid_, other->guid_);
  swap(furniture_id_, other->furniture_id_);
  swap(picture_id_, other->picture_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeOnePictureFrameBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeOnePictureFrameBin

// uint32 scene_id = 1;
void HomeOnePictureFrameBin::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 HomeOnePictureFrameBin::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeOnePictureFrameBin.scene_id)
  return scene_id_;
}
void HomeOnePictureFrameBin::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeOnePictureFrameBin.scene_id)
}

// uint32 guid = 2;
void HomeOnePictureFrameBin::clear_guid() {
  guid_ = 0u;
}
::google::protobuf::uint32 HomeOnePictureFrameBin::guid() const {
  // @@protoc_insertion_point(field_get:proto.HomeOnePictureFrameBin.guid)
  return guid_;
}
void HomeOnePictureFrameBin::set_guid(::google::protobuf::uint32 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeOnePictureFrameBin.guid)
}

// uint32 furniture_id = 3;
void HomeOnePictureFrameBin::clear_furniture_id() {
  furniture_id_ = 0u;
}
::google::protobuf::uint32 HomeOnePictureFrameBin::furniture_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeOnePictureFrameBin.furniture_id)
  return furniture_id_;
}
void HomeOnePictureFrameBin::set_furniture_id(::google::protobuf::uint32 value) {
  
  furniture_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeOnePictureFrameBin.furniture_id)
}

// uint32 picture_id = 4;
void HomeOnePictureFrameBin::clear_picture_id() {
  picture_id_ = 0u;
}
::google::protobuf::uint32 HomeOnePictureFrameBin::picture_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeOnePictureFrameBin.picture_id)
  return picture_id_;
}
void HomeOnePictureFrameBin::set_picture_id(::google::protobuf::uint32 value) {
  
  picture_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeOnePictureFrameBin.picture_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeModulePictureFrameBin::kModuleIdFieldNumber;
const int HomeModulePictureFrameBin::kPictureFrameBinListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeModulePictureFrameBin::HomeModulePictureFrameBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeModulePictureFrameBin)
}
HomeModulePictureFrameBin::HomeModulePictureFrameBin(const HomeModulePictureFrameBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      picture_frame_bin_list_(from.picture_frame_bin_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  module_id_ = from.module_id_;
  // @@protoc_insertion_point(copy_constructor:proto.HomeModulePictureFrameBin)
}

void HomeModulePictureFrameBin::SharedCtor() {
  module_id_ = 0u;
  _cached_size_ = 0;
}

HomeModulePictureFrameBin::~HomeModulePictureFrameBin() {
  // @@protoc_insertion_point(destructor:proto.HomeModulePictureFrameBin)
  SharedDtor();
}

void HomeModulePictureFrameBin::SharedDtor() {
}

void HomeModulePictureFrameBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeModulePictureFrameBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeModulePictureFrameBin& HomeModulePictureFrameBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeModulePictureFrameBin* HomeModulePictureFrameBin::New(::google::protobuf::Arena* arena) const {
  HomeModulePictureFrameBin* n = new HomeModulePictureFrameBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeModulePictureFrameBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeModulePictureFrameBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  picture_frame_bin_list_.Clear();
  module_id_ = 0u;
  _internal_metadata_.Clear();
}

bool HomeModulePictureFrameBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeModulePictureFrameBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 module_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &module_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomeOnePictureFrameBin picture_frame_bin_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_picture_frame_bin_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeModulePictureFrameBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeModulePictureFrameBin)
  return false;
#undef DO_
}

void HomeModulePictureFrameBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeModulePictureFrameBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->module_id(), output);
  }

  // repeated .proto.HomeOnePictureFrameBin picture_frame_bin_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->picture_frame_bin_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->picture_frame_bin_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeModulePictureFrameBin)
}

::google::protobuf::uint8* HomeModulePictureFrameBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeModulePictureFrameBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->module_id(), target);
  }

  // repeated .proto.HomeOnePictureFrameBin picture_frame_bin_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->picture_frame_bin_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->picture_frame_bin_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeModulePictureFrameBin)
  return target;
}

size_t HomeModulePictureFrameBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeModulePictureFrameBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.HomeOnePictureFrameBin picture_frame_bin_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->picture_frame_bin_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->picture_frame_bin_list(static_cast<int>(i)));
    }
  }

  // uint32 module_id = 1;
  if (this->module_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->module_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeModulePictureFrameBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeModulePictureFrameBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeModulePictureFrameBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeModulePictureFrameBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeModulePictureFrameBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeModulePictureFrameBin)
    MergeFrom(*source);
  }
}

void HomeModulePictureFrameBin::MergeFrom(const HomeModulePictureFrameBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeModulePictureFrameBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  picture_frame_bin_list_.MergeFrom(from.picture_frame_bin_list_);
  if (from.module_id() != 0) {
    set_module_id(from.module_id());
  }
}

void HomeModulePictureFrameBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeModulePictureFrameBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeModulePictureFrameBin::CopyFrom(const HomeModulePictureFrameBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeModulePictureFrameBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeModulePictureFrameBin::IsInitialized() const {
  return true;
}

void HomeModulePictureFrameBin::Swap(HomeModulePictureFrameBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeModulePictureFrameBin::InternalSwap(HomeModulePictureFrameBin* other) {
  using std::swap;
  picture_frame_bin_list_.InternalSwap(&other->picture_frame_bin_list_);
  swap(module_id_, other->module_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeModulePictureFrameBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeModulePictureFrameBin

// uint32 module_id = 1;
void HomeModulePictureFrameBin::clear_module_id() {
  module_id_ = 0u;
}
::google::protobuf::uint32 HomeModulePictureFrameBin::module_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeModulePictureFrameBin.module_id)
  return module_id_;
}
void HomeModulePictureFrameBin::set_module_id(::google::protobuf::uint32 value) {
  
  module_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeModulePictureFrameBin.module_id)
}

// repeated .proto.HomeOnePictureFrameBin picture_frame_bin_list = 2;
int HomeModulePictureFrameBin::picture_frame_bin_list_size() const {
  return picture_frame_bin_list_.size();
}
void HomeModulePictureFrameBin::clear_picture_frame_bin_list() {
  picture_frame_bin_list_.Clear();
}
const ::proto::HomeOnePictureFrameBin& HomeModulePictureFrameBin::picture_frame_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeModulePictureFrameBin.picture_frame_bin_list)
  return picture_frame_bin_list_.Get(index);
}
::proto::HomeOnePictureFrameBin* HomeModulePictureFrameBin::mutable_picture_frame_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeModulePictureFrameBin.picture_frame_bin_list)
  return picture_frame_bin_list_.Mutable(index);
}
::proto::HomeOnePictureFrameBin* HomeModulePictureFrameBin::add_picture_frame_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomeModulePictureFrameBin.picture_frame_bin_list)
  return picture_frame_bin_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeOnePictureFrameBin >*
HomeModulePictureFrameBin::mutable_picture_frame_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeModulePictureFrameBin.picture_frame_bin_list)
  return &picture_frame_bin_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeOnePictureFrameBin >&
HomeModulePictureFrameBin::picture_frame_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeModulePictureFrameBin.picture_frame_bin_list)
  return picture_frame_bin_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomePictureFrameBin::kModulePictureFrameBinListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomePictureFrameBin::HomePictureFrameBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomePictureFrameBin)
}
HomePictureFrameBin::HomePictureFrameBin(const HomePictureFrameBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      module_picture_frame_bin_list_(from.module_picture_frame_bin_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.HomePictureFrameBin)
}

void HomePictureFrameBin::SharedCtor() {
  _cached_size_ = 0;
}

HomePictureFrameBin::~HomePictureFrameBin() {
  // @@protoc_insertion_point(destructor:proto.HomePictureFrameBin)
  SharedDtor();
}

void HomePictureFrameBin::SharedDtor() {
}

void HomePictureFrameBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomePictureFrameBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomePictureFrameBin& HomePictureFrameBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomePictureFrameBin* HomePictureFrameBin::New(::google::protobuf::Arena* arena) const {
  HomePictureFrameBin* n = new HomePictureFrameBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomePictureFrameBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomePictureFrameBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  module_picture_frame_bin_list_.Clear();
  _internal_metadata_.Clear();
}

bool HomePictureFrameBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomePictureFrameBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.HomeModulePictureFrameBin module_picture_frame_bin_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_module_picture_frame_bin_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomePictureFrameBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomePictureFrameBin)
  return false;
#undef DO_
}

void HomePictureFrameBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomePictureFrameBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.HomeModulePictureFrameBin module_picture_frame_bin_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->module_picture_frame_bin_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->module_picture_frame_bin_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomePictureFrameBin)
}

::google::protobuf::uint8* HomePictureFrameBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomePictureFrameBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.HomeModulePictureFrameBin module_picture_frame_bin_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->module_picture_frame_bin_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->module_picture_frame_bin_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomePictureFrameBin)
  return target;
}

size_t HomePictureFrameBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomePictureFrameBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.HomeModulePictureFrameBin module_picture_frame_bin_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->module_picture_frame_bin_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->module_picture_frame_bin_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomePictureFrameBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomePictureFrameBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomePictureFrameBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomePictureFrameBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomePictureFrameBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomePictureFrameBin)
    MergeFrom(*source);
  }
}

void HomePictureFrameBin::MergeFrom(const HomePictureFrameBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomePictureFrameBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  module_picture_frame_bin_list_.MergeFrom(from.module_picture_frame_bin_list_);
}

void HomePictureFrameBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomePictureFrameBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomePictureFrameBin::CopyFrom(const HomePictureFrameBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomePictureFrameBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomePictureFrameBin::IsInitialized() const {
  return true;
}

void HomePictureFrameBin::Swap(HomePictureFrameBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomePictureFrameBin::InternalSwap(HomePictureFrameBin* other) {
  using std::swap;
  module_picture_frame_bin_list_.InternalSwap(&other->module_picture_frame_bin_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomePictureFrameBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomePictureFrameBin

// repeated .proto.HomeModulePictureFrameBin module_picture_frame_bin_list = 1;
int HomePictureFrameBin::module_picture_frame_bin_list_size() const {
  return module_picture_frame_bin_list_.size();
}
void HomePictureFrameBin::clear_module_picture_frame_bin_list() {
  module_picture_frame_bin_list_.Clear();
}
const ::proto::HomeModulePictureFrameBin& HomePictureFrameBin::module_picture_frame_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomePictureFrameBin.module_picture_frame_bin_list)
  return module_picture_frame_bin_list_.Get(index);
}
::proto::HomeModulePictureFrameBin* HomePictureFrameBin::mutable_module_picture_frame_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomePictureFrameBin.module_picture_frame_bin_list)
  return module_picture_frame_bin_list_.Mutable(index);
}
::proto::HomeModulePictureFrameBin* HomePictureFrameBin::add_module_picture_frame_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomePictureFrameBin.module_picture_frame_bin_list)
  return module_picture_frame_bin_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeModulePictureFrameBin >*
HomePictureFrameBin::mutable_module_picture_frame_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomePictureFrameBin.module_picture_frame_bin_list)
  return &module_picture_frame_bin_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeModulePictureFrameBin >&
HomePictureFrameBin::module_picture_frame_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomePictureFrameBin.module_picture_frame_bin_list)
  return module_picture_frame_bin_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeGroupPlayerInfoBin::kUidFieldNumber;
const int HomeGroupPlayerInfoBin::kNicknameFieldNumber;
const int HomeGroupPlayerInfoBin::kPlayerLevelFieldNumber;
const int HomeGroupPlayerInfoBin::kProfilePictureFieldNumber;
const int HomeGroupPlayerInfoBin::kOnlineIdFieldNumber;
const int HomeGroupPlayerInfoBin::kPsnIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeGroupPlayerInfoBin::HomeGroupPlayerInfoBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeGroupPlayerInfoBin)
}
HomeGroupPlayerInfoBin::HomeGroupPlayerInfoBin(const HomeGroupPlayerInfoBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  online_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.online_id().size() > 0) {
    online_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_id_);
  }
  psn_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.psn_id().size() > 0) {
    psn_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psn_id_);
  }
  if (from.has_profile_picture()) {
    profile_picture_ = new ::proto::ProfilePictureBin(*from.profile_picture_);
  } else {
    profile_picture_ = NULL;
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&player_level_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(player_level_));
  // @@protoc_insertion_point(copy_constructor:proto.HomeGroupPlayerInfoBin)
}

void HomeGroupPlayerInfoBin::SharedCtor() {
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psn_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&profile_picture_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_level_) -
      reinterpret_cast<char*>(&profile_picture_)) + sizeof(player_level_));
  _cached_size_ = 0;
}

HomeGroupPlayerInfoBin::~HomeGroupPlayerInfoBin() {
  // @@protoc_insertion_point(destructor:proto.HomeGroupPlayerInfoBin)
  SharedDtor();
}

void HomeGroupPlayerInfoBin::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psn_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete profile_picture_;
}

void HomeGroupPlayerInfoBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeGroupPlayerInfoBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeGroupPlayerInfoBin& HomeGroupPlayerInfoBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeGroupPlayerInfoBin* HomeGroupPlayerInfoBin::New(::google::protobuf::Arena* arena) const {
  HomeGroupPlayerInfoBin* n = new HomeGroupPlayerInfoBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeGroupPlayerInfoBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeGroupPlayerInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psn_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && profile_picture_ != NULL) {
    delete profile_picture_;
  }
  profile_picture_ = NULL;
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_level_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(player_level_));
  _internal_metadata_.Clear();
}

bool HomeGroupPlayerInfoBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeGroupPlayerInfoBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nickname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.HomeGroupPlayerInfoBin.nickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 player_level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ProfilePictureBin profile_picture = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_profile_picture()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string online_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_online_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->online_id().data(), static_cast<int>(this->online_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.HomeGroupPlayerInfoBin.online_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string psn_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_psn_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->psn_id().data(), static_cast<int>(this->psn_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.HomeGroupPlayerInfoBin.psn_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeGroupPlayerInfoBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeGroupPlayerInfoBin)
  return false;
#undef DO_
}

void HomeGroupPlayerInfoBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeGroupPlayerInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // string nickname = 2;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.HomeGroupPlayerInfoBin.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nickname(), output);
  }

  // uint32 player_level = 3;
  if (this->player_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->player_level(), output);
  }

  // .proto.ProfilePictureBin profile_picture = 4;
  if (this->has_profile_picture()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->profile_picture_, output);
  }

  // string online_id = 5;
  if (this->online_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->online_id().data(), static_cast<int>(this->online_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.HomeGroupPlayerInfoBin.online_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->online_id(), output);
  }

  // string psn_id = 6;
  if (this->psn_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->psn_id().data(), static_cast<int>(this->psn_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.HomeGroupPlayerInfoBin.psn_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->psn_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeGroupPlayerInfoBin)
}

::google::protobuf::uint8* HomeGroupPlayerInfoBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeGroupPlayerInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // string nickname = 2;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.HomeGroupPlayerInfoBin.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nickname(), target);
  }

  // uint32 player_level = 3;
  if (this->player_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->player_level(), target);
  }

  // .proto.ProfilePictureBin profile_picture = 4;
  if (this->has_profile_picture()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->profile_picture_, deterministic, target);
  }

  // string online_id = 5;
  if (this->online_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->online_id().data(), static_cast<int>(this->online_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.HomeGroupPlayerInfoBin.online_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->online_id(), target);
  }

  // string psn_id = 6;
  if (this->psn_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->psn_id().data(), static_cast<int>(this->psn_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.HomeGroupPlayerInfoBin.psn_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->psn_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeGroupPlayerInfoBin)
  return target;
}

size_t HomeGroupPlayerInfoBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeGroupPlayerInfoBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string nickname = 2;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  // string online_id = 5;
  if (this->online_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->online_id());
  }

  // string psn_id = 6;
  if (this->psn_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->psn_id());
  }

  // .proto.ProfilePictureBin profile_picture = 4;
  if (this->has_profile_picture()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->profile_picture_);
  }

  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 player_level = 3;
  if (this->player_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeGroupPlayerInfoBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeGroupPlayerInfoBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeGroupPlayerInfoBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeGroupPlayerInfoBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeGroupPlayerInfoBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeGroupPlayerInfoBin)
    MergeFrom(*source);
  }
}

void HomeGroupPlayerInfoBin::MergeFrom(const HomeGroupPlayerInfoBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeGroupPlayerInfoBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.online_id().size() > 0) {

    online_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_id_);
  }
  if (from.psn_id().size() > 0) {

    psn_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psn_id_);
  }
  if (from.has_profile_picture()) {
    mutable_profile_picture()->::proto::ProfilePictureBin::MergeFrom(from.profile_picture());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.player_level() != 0) {
    set_player_level(from.player_level());
  }
}

void HomeGroupPlayerInfoBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeGroupPlayerInfoBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeGroupPlayerInfoBin::CopyFrom(const HomeGroupPlayerInfoBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeGroupPlayerInfoBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeGroupPlayerInfoBin::IsInitialized() const {
  return true;
}

void HomeGroupPlayerInfoBin::Swap(HomeGroupPlayerInfoBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeGroupPlayerInfoBin::InternalSwap(HomeGroupPlayerInfoBin* other) {
  using std::swap;
  nickname_.Swap(&other->nickname_);
  online_id_.Swap(&other->online_id_);
  psn_id_.Swap(&other->psn_id_);
  swap(profile_picture_, other->profile_picture_);
  swap(uid_, other->uid_);
  swap(player_level_, other->player_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeGroupPlayerInfoBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeGroupPlayerInfoBin

// uint32 uid = 1;
void HomeGroupPlayerInfoBin::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 HomeGroupPlayerInfoBin::uid() const {
  // @@protoc_insertion_point(field_get:proto.HomeGroupPlayerInfoBin.uid)
  return uid_;
}
void HomeGroupPlayerInfoBin::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeGroupPlayerInfoBin.uid)
}

// string nickname = 2;
void HomeGroupPlayerInfoBin::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HomeGroupPlayerInfoBin::nickname() const {
  // @@protoc_insertion_point(field_get:proto.HomeGroupPlayerInfoBin.nickname)
  return nickname_.GetNoArena();
}
void HomeGroupPlayerInfoBin::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.HomeGroupPlayerInfoBin.nickname)
}
#if LANG_CXX11
void HomeGroupPlayerInfoBin::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.HomeGroupPlayerInfoBin.nickname)
}
#endif
void HomeGroupPlayerInfoBin::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.HomeGroupPlayerInfoBin.nickname)
}
void HomeGroupPlayerInfoBin::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.HomeGroupPlayerInfoBin.nickname)
}
::std::string* HomeGroupPlayerInfoBin::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.HomeGroupPlayerInfoBin.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HomeGroupPlayerInfoBin::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.HomeGroupPlayerInfoBin.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HomeGroupPlayerInfoBin::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.HomeGroupPlayerInfoBin.nickname)
}

// uint32 player_level = 3;
void HomeGroupPlayerInfoBin::clear_player_level() {
  player_level_ = 0u;
}
::google::protobuf::uint32 HomeGroupPlayerInfoBin::player_level() const {
  // @@protoc_insertion_point(field_get:proto.HomeGroupPlayerInfoBin.player_level)
  return player_level_;
}
void HomeGroupPlayerInfoBin::set_player_level(::google::protobuf::uint32 value) {
  
  player_level_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeGroupPlayerInfoBin.player_level)
}

// .proto.ProfilePictureBin profile_picture = 4;
bool HomeGroupPlayerInfoBin::has_profile_picture() const {
  return this != internal_default_instance() && profile_picture_ != NULL;
}
void HomeGroupPlayerInfoBin::clear_profile_picture() {
  if (GetArenaNoVirtual() == NULL && profile_picture_ != NULL) delete profile_picture_;
  profile_picture_ = NULL;
}
const ::proto::ProfilePictureBin& HomeGroupPlayerInfoBin::profile_picture() const {
  const ::proto::ProfilePictureBin* p = profile_picture_;
  // @@protoc_insertion_point(field_get:proto.HomeGroupPlayerInfoBin.profile_picture)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ProfilePictureBin*>(
      &::proto::_ProfilePictureBin_default_instance_);
}
::proto::ProfilePictureBin* HomeGroupPlayerInfoBin::mutable_profile_picture() {
  
  if (profile_picture_ == NULL) {
    profile_picture_ = new ::proto::ProfilePictureBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeGroupPlayerInfoBin.profile_picture)
  return profile_picture_;
}
::proto::ProfilePictureBin* HomeGroupPlayerInfoBin::release_profile_picture() {
  // @@protoc_insertion_point(field_release:proto.HomeGroupPlayerInfoBin.profile_picture)
  
  ::proto::ProfilePictureBin* temp = profile_picture_;
  profile_picture_ = NULL;
  return temp;
}
void HomeGroupPlayerInfoBin::set_allocated_profile_picture(::proto::ProfilePictureBin* profile_picture) {
  delete profile_picture_;
  profile_picture_ = profile_picture;
  if (profile_picture) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeGroupPlayerInfoBin.profile_picture)
}

// string online_id = 5;
void HomeGroupPlayerInfoBin::clear_online_id() {
  online_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HomeGroupPlayerInfoBin::online_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeGroupPlayerInfoBin.online_id)
  return online_id_.GetNoArena();
}
void HomeGroupPlayerInfoBin::set_online_id(const ::std::string& value) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.HomeGroupPlayerInfoBin.online_id)
}
#if LANG_CXX11
void HomeGroupPlayerInfoBin::set_online_id(::std::string&& value) {
  
  online_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.HomeGroupPlayerInfoBin.online_id)
}
#endif
void HomeGroupPlayerInfoBin::set_online_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.HomeGroupPlayerInfoBin.online_id)
}
void HomeGroupPlayerInfoBin::set_online_id(const char* value, size_t size) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.HomeGroupPlayerInfoBin.online_id)
}
::std::string* HomeGroupPlayerInfoBin::mutable_online_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.HomeGroupPlayerInfoBin.online_id)
  return online_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HomeGroupPlayerInfoBin::release_online_id() {
  // @@protoc_insertion_point(field_release:proto.HomeGroupPlayerInfoBin.online_id)
  
  return online_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HomeGroupPlayerInfoBin::set_allocated_online_id(::std::string* online_id) {
  if (online_id != NULL) {
    
  } else {
    
  }
  online_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), online_id);
  // @@protoc_insertion_point(field_set_allocated:proto.HomeGroupPlayerInfoBin.online_id)
}

// string psn_id = 6;
void HomeGroupPlayerInfoBin::clear_psn_id() {
  psn_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HomeGroupPlayerInfoBin::psn_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeGroupPlayerInfoBin.psn_id)
  return psn_id_.GetNoArena();
}
void HomeGroupPlayerInfoBin::set_psn_id(const ::std::string& value) {
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.HomeGroupPlayerInfoBin.psn_id)
}
#if LANG_CXX11
void HomeGroupPlayerInfoBin::set_psn_id(::std::string&& value) {
  
  psn_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.HomeGroupPlayerInfoBin.psn_id)
}
#endif
void HomeGroupPlayerInfoBin::set_psn_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.HomeGroupPlayerInfoBin.psn_id)
}
void HomeGroupPlayerInfoBin::set_psn_id(const char* value, size_t size) {
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.HomeGroupPlayerInfoBin.psn_id)
}
::std::string* HomeGroupPlayerInfoBin::mutable_psn_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.HomeGroupPlayerInfoBin.psn_id)
  return psn_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HomeGroupPlayerInfoBin::release_psn_id() {
  // @@protoc_insertion_point(field_release:proto.HomeGroupPlayerInfoBin.psn_id)
  
  return psn_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HomeGroupPlayerInfoBin::set_allocated_psn_id(::std::string* psn_id) {
  if (psn_id != NULL) {
    
  } else {
    
  }
  psn_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), psn_id);
  // @@protoc_insertion_point(field_set_allocated:proto.HomeGroupPlayerInfoBin.psn_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeRacingGalleryRecordBin::kUseTimeFieldNumber;
const int HomeRacingGalleryRecordBin::kPlayerInfoFieldNumber;
const int HomeRacingGalleryRecordBin::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeRacingGalleryRecordBin::HomeRacingGalleryRecordBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeRacingGalleryRecordBin)
}
HomeRacingGalleryRecordBin::HomeRacingGalleryRecordBin(const HomeRacingGalleryRecordBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_player_info()) {
    player_info_ = new ::proto::HomeGroupPlayerInfoBin(*from.player_info_);
  } else {
    player_info_ = NULL;
  }
  ::memcpy(&use_time_, &from.use_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&use_time_)) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:proto.HomeRacingGalleryRecordBin)
}

void HomeRacingGalleryRecordBin::SharedCtor() {
  ::memset(&player_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&player_info_)) + sizeof(timestamp_));
  _cached_size_ = 0;
}

HomeRacingGalleryRecordBin::~HomeRacingGalleryRecordBin() {
  // @@protoc_insertion_point(destructor:proto.HomeRacingGalleryRecordBin)
  SharedDtor();
}

void HomeRacingGalleryRecordBin::SharedDtor() {
  if (this != internal_default_instance()) delete player_info_;
}

void HomeRacingGalleryRecordBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeRacingGalleryRecordBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeRacingGalleryRecordBin& HomeRacingGalleryRecordBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeRacingGalleryRecordBin* HomeRacingGalleryRecordBin::New(::google::protobuf::Arena* arena) const {
  HomeRacingGalleryRecordBin* n = new HomeRacingGalleryRecordBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeRacingGalleryRecordBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeRacingGalleryRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && player_info_ != NULL) {
    delete player_info_;
  }
  player_info_ = NULL;
  ::memset(&use_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&use_time_)) + sizeof(timestamp_));
  _internal_metadata_.Clear();
}

bool HomeRacingGalleryRecordBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeRacingGalleryRecordBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 use_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &use_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.HomeGroupPlayerInfoBin player_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_player_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeRacingGalleryRecordBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeRacingGalleryRecordBin)
  return false;
#undef DO_
}

void HomeRacingGalleryRecordBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeRacingGalleryRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 use_time = 1;
  if (this->use_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->use_time(), output);
  }

  // .proto.HomeGroupPlayerInfoBin player_info = 2;
  if (this->has_player_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->player_info_, output);
  }

  // uint32 timestamp = 3;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeRacingGalleryRecordBin)
}

::google::protobuf::uint8* HomeRacingGalleryRecordBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeRacingGalleryRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 use_time = 1;
  if (this->use_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->use_time(), target);
  }

  // .proto.HomeGroupPlayerInfoBin player_info = 2;
  if (this->has_player_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->player_info_, deterministic, target);
  }

  // uint32 timestamp = 3;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeRacingGalleryRecordBin)
  return target;
}

size_t HomeRacingGalleryRecordBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeRacingGalleryRecordBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.HomeGroupPlayerInfoBin player_info = 2;
  if (this->has_player_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->player_info_);
  }

  // uint32 use_time = 1;
  if (this->use_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->use_time());
  }

  // uint32 timestamp = 3;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeRacingGalleryRecordBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeRacingGalleryRecordBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeRacingGalleryRecordBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeRacingGalleryRecordBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeRacingGalleryRecordBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeRacingGalleryRecordBin)
    MergeFrom(*source);
  }
}

void HomeRacingGalleryRecordBin::MergeFrom(const HomeRacingGalleryRecordBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeRacingGalleryRecordBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_player_info()) {
    mutable_player_info()->::proto::HomeGroupPlayerInfoBin::MergeFrom(from.player_info());
  }
  if (from.use_time() != 0) {
    set_use_time(from.use_time());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void HomeRacingGalleryRecordBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeRacingGalleryRecordBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeRacingGalleryRecordBin::CopyFrom(const HomeRacingGalleryRecordBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeRacingGalleryRecordBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeRacingGalleryRecordBin::IsInitialized() const {
  return true;
}

void HomeRacingGalleryRecordBin::Swap(HomeRacingGalleryRecordBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeRacingGalleryRecordBin::InternalSwap(HomeRacingGalleryRecordBin* other) {
  using std::swap;
  swap(player_info_, other->player_info_);
  swap(use_time_, other->use_time_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeRacingGalleryRecordBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeRacingGalleryRecordBin

// uint32 use_time = 1;
void HomeRacingGalleryRecordBin::clear_use_time() {
  use_time_ = 0u;
}
::google::protobuf::uint32 HomeRacingGalleryRecordBin::use_time() const {
  // @@protoc_insertion_point(field_get:proto.HomeRacingGalleryRecordBin.use_time)
  return use_time_;
}
void HomeRacingGalleryRecordBin::set_use_time(::google::protobuf::uint32 value) {
  
  use_time_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeRacingGalleryRecordBin.use_time)
}

// .proto.HomeGroupPlayerInfoBin player_info = 2;
bool HomeRacingGalleryRecordBin::has_player_info() const {
  return this != internal_default_instance() && player_info_ != NULL;
}
void HomeRacingGalleryRecordBin::clear_player_info() {
  if (GetArenaNoVirtual() == NULL && player_info_ != NULL) delete player_info_;
  player_info_ = NULL;
}
const ::proto::HomeGroupPlayerInfoBin& HomeRacingGalleryRecordBin::player_info() const {
  const ::proto::HomeGroupPlayerInfoBin* p = player_info_;
  // @@protoc_insertion_point(field_get:proto.HomeRacingGalleryRecordBin.player_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeGroupPlayerInfoBin*>(
      &::proto::_HomeGroupPlayerInfoBin_default_instance_);
}
::proto::HomeGroupPlayerInfoBin* HomeRacingGalleryRecordBin::mutable_player_info() {
  
  if (player_info_ == NULL) {
    player_info_ = new ::proto::HomeGroupPlayerInfoBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeRacingGalleryRecordBin.player_info)
  return player_info_;
}
::proto::HomeGroupPlayerInfoBin* HomeRacingGalleryRecordBin::release_player_info() {
  // @@protoc_insertion_point(field_release:proto.HomeRacingGalleryRecordBin.player_info)
  
  ::proto::HomeGroupPlayerInfoBin* temp = player_info_;
  player_info_ = NULL;
  return temp;
}
void HomeRacingGalleryRecordBin::set_allocated_player_info(::proto::HomeGroupPlayerInfoBin* player_info) {
  delete player_info_;
  player_info_ = player_info;
  if (player_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeRacingGalleryRecordBin.player_info)
}

// uint32 timestamp = 3;
void HomeRacingGalleryRecordBin::clear_timestamp() {
  timestamp_ = 0u;
}
::google::protobuf::uint32 HomeRacingGalleryRecordBin::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.HomeRacingGalleryRecordBin.timestamp)
  return timestamp_;
}
void HomeRacingGalleryRecordBin::set_timestamp(::google::protobuf::uint32 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeRacingGalleryRecordBin.timestamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeRacingRecordBin::kRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeRacingRecordBin::HomeRacingRecordBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeRacingRecordBin)
}
HomeRacingRecordBin::HomeRacingRecordBin(const HomeRacingRecordBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      record_list_(from.record_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.HomeRacingRecordBin)
}

void HomeRacingRecordBin::SharedCtor() {
  _cached_size_ = 0;
}

HomeRacingRecordBin::~HomeRacingRecordBin() {
  // @@protoc_insertion_point(destructor:proto.HomeRacingRecordBin)
  SharedDtor();
}

void HomeRacingRecordBin::SharedDtor() {
}

void HomeRacingRecordBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeRacingRecordBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeRacingRecordBin& HomeRacingRecordBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeRacingRecordBin* HomeRacingRecordBin::New(::google::protobuf::Arena* arena) const {
  HomeRacingRecordBin* n = new HomeRacingRecordBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeRacingRecordBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeRacingRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_list_.Clear();
  _internal_metadata_.Clear();
}

bool HomeRacingRecordBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeRacingRecordBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.HomeRacingGalleryRecordBin record_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeRacingRecordBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeRacingRecordBin)
  return false;
#undef DO_
}

void HomeRacingRecordBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeRacingRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.HomeRacingGalleryRecordBin record_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->record_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeRacingRecordBin)
}

::google::protobuf::uint8* HomeRacingRecordBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeRacingRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.HomeRacingGalleryRecordBin record_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->record_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeRacingRecordBin)
  return target;
}

size_t HomeRacingRecordBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeRacingRecordBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.HomeRacingGalleryRecordBin record_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->record_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeRacingRecordBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeRacingRecordBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeRacingRecordBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeRacingRecordBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeRacingRecordBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeRacingRecordBin)
    MergeFrom(*source);
  }
}

void HomeRacingRecordBin::MergeFrom(const HomeRacingRecordBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeRacingRecordBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  record_list_.MergeFrom(from.record_list_);
}

void HomeRacingRecordBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeRacingRecordBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeRacingRecordBin::CopyFrom(const HomeRacingRecordBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeRacingRecordBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeRacingRecordBin::IsInitialized() const {
  return true;
}

void HomeRacingRecordBin::Swap(HomeRacingRecordBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeRacingRecordBin::InternalSwap(HomeRacingRecordBin* other) {
  using std::swap;
  record_list_.InternalSwap(&other->record_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeRacingRecordBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeRacingRecordBin

// repeated .proto.HomeRacingGalleryRecordBin record_list = 1;
int HomeRacingRecordBin::record_list_size() const {
  return record_list_.size();
}
void HomeRacingRecordBin::clear_record_list() {
  record_list_.Clear();
}
const ::proto::HomeRacingGalleryRecordBin& HomeRacingRecordBin::record_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeRacingRecordBin.record_list)
  return record_list_.Get(index);
}
::proto::HomeRacingGalleryRecordBin* HomeRacingRecordBin::mutable_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeRacingRecordBin.record_list)
  return record_list_.Mutable(index);
}
::proto::HomeRacingGalleryRecordBin* HomeRacingRecordBin::add_record_list() {
  // @@protoc_insertion_point(field_add:proto.HomeRacingRecordBin.record_list)
  return record_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeRacingGalleryRecordBin >*
HomeRacingRecordBin::mutable_record_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeRacingRecordBin.record_list)
  return &record_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeRacingGalleryRecordBin >&
HomeRacingRecordBin::record_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeRacingRecordBin.record_list)
  return record_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeBalloonGalleryRecordBin::kScoreFieldNumber;
const int HomeBalloonGalleryRecordBin::kHitCountFieldNumber;
const int HomeBalloonGalleryRecordBin::kPlayerInfoFieldNumber;
const int HomeBalloonGalleryRecordBin::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeBalloonGalleryRecordBin::HomeBalloonGalleryRecordBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeBalloonGalleryRecordBin)
}
HomeBalloonGalleryRecordBin::HomeBalloonGalleryRecordBin(const HomeBalloonGalleryRecordBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_player_info()) {
    player_info_ = new ::proto::HomeGroupPlayerInfoBin(*from.player_info_);
  } else {
    player_info_ = NULL;
  }
  ::memcpy(&score_, &from.score_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&score_)) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:proto.HomeBalloonGalleryRecordBin)
}

void HomeBalloonGalleryRecordBin::SharedCtor() {
  ::memset(&player_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&player_info_)) + sizeof(timestamp_));
  _cached_size_ = 0;
}

HomeBalloonGalleryRecordBin::~HomeBalloonGalleryRecordBin() {
  // @@protoc_insertion_point(destructor:proto.HomeBalloonGalleryRecordBin)
  SharedDtor();
}

void HomeBalloonGalleryRecordBin::SharedDtor() {
  if (this != internal_default_instance()) delete player_info_;
}

void HomeBalloonGalleryRecordBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeBalloonGalleryRecordBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeBalloonGalleryRecordBin& HomeBalloonGalleryRecordBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeBalloonGalleryRecordBin* HomeBalloonGalleryRecordBin::New(::google::protobuf::Arena* arena) const {
  HomeBalloonGalleryRecordBin* n = new HomeBalloonGalleryRecordBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeBalloonGalleryRecordBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeBalloonGalleryRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && player_info_ != NULL) {
    delete player_info_;
  }
  player_info_ = NULL;
  ::memset(&score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&score_)) + sizeof(timestamp_));
  _internal_metadata_.Clear();
}

bool HomeBalloonGalleryRecordBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeBalloonGalleryRecordBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 score = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hit_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hit_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.HomeGroupPlayerInfoBin player_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_player_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 timestamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeBalloonGalleryRecordBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeBalloonGalleryRecordBin)
  return false;
#undef DO_
}

void HomeBalloonGalleryRecordBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeBalloonGalleryRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 score = 1;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->score(), output);
  }

  // uint32 hit_count = 2;
  if (this->hit_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hit_count(), output);
  }

  // .proto.HomeGroupPlayerInfoBin player_info = 3;
  if (this->has_player_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->player_info_, output);
  }

  // uint32 timestamp = 4;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeBalloonGalleryRecordBin)
}

::google::protobuf::uint8* HomeBalloonGalleryRecordBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeBalloonGalleryRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 score = 1;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->score(), target);
  }

  // uint32 hit_count = 2;
  if (this->hit_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hit_count(), target);
  }

  // .proto.HomeGroupPlayerInfoBin player_info = 3;
  if (this->has_player_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->player_info_, deterministic, target);
  }

  // uint32 timestamp = 4;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeBalloonGalleryRecordBin)
  return target;
}

size_t HomeBalloonGalleryRecordBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeBalloonGalleryRecordBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.HomeGroupPlayerInfoBin player_info = 3;
  if (this->has_player_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->player_info_);
  }

  // uint32 score = 1;
  if (this->score() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->score());
  }

  // uint32 hit_count = 2;
  if (this->hit_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hit_count());
  }

  // uint32 timestamp = 4;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeBalloonGalleryRecordBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeBalloonGalleryRecordBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeBalloonGalleryRecordBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeBalloonGalleryRecordBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeBalloonGalleryRecordBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeBalloonGalleryRecordBin)
    MergeFrom(*source);
  }
}

void HomeBalloonGalleryRecordBin::MergeFrom(const HomeBalloonGalleryRecordBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeBalloonGalleryRecordBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_player_info()) {
    mutable_player_info()->::proto::HomeGroupPlayerInfoBin::MergeFrom(from.player_info());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
  if (from.hit_count() != 0) {
    set_hit_count(from.hit_count());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void HomeBalloonGalleryRecordBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeBalloonGalleryRecordBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeBalloonGalleryRecordBin::CopyFrom(const HomeBalloonGalleryRecordBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeBalloonGalleryRecordBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeBalloonGalleryRecordBin::IsInitialized() const {
  return true;
}

void HomeBalloonGalleryRecordBin::Swap(HomeBalloonGalleryRecordBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeBalloonGalleryRecordBin::InternalSwap(HomeBalloonGalleryRecordBin* other) {
  using std::swap;
  swap(player_info_, other->player_info_);
  swap(score_, other->score_);
  swap(hit_count_, other->hit_count_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeBalloonGalleryRecordBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeBalloonGalleryRecordBin

// uint32 score = 1;
void HomeBalloonGalleryRecordBin::clear_score() {
  score_ = 0u;
}
::google::protobuf::uint32 HomeBalloonGalleryRecordBin::score() const {
  // @@protoc_insertion_point(field_get:proto.HomeBalloonGalleryRecordBin.score)
  return score_;
}
void HomeBalloonGalleryRecordBin::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBalloonGalleryRecordBin.score)
}

// uint32 hit_count = 2;
void HomeBalloonGalleryRecordBin::clear_hit_count() {
  hit_count_ = 0u;
}
::google::protobuf::uint32 HomeBalloonGalleryRecordBin::hit_count() const {
  // @@protoc_insertion_point(field_get:proto.HomeBalloonGalleryRecordBin.hit_count)
  return hit_count_;
}
void HomeBalloonGalleryRecordBin::set_hit_count(::google::protobuf::uint32 value) {
  
  hit_count_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBalloonGalleryRecordBin.hit_count)
}

// .proto.HomeGroupPlayerInfoBin player_info = 3;
bool HomeBalloonGalleryRecordBin::has_player_info() const {
  return this != internal_default_instance() && player_info_ != NULL;
}
void HomeBalloonGalleryRecordBin::clear_player_info() {
  if (GetArenaNoVirtual() == NULL && player_info_ != NULL) delete player_info_;
  player_info_ = NULL;
}
const ::proto::HomeGroupPlayerInfoBin& HomeBalloonGalleryRecordBin::player_info() const {
  const ::proto::HomeGroupPlayerInfoBin* p = player_info_;
  // @@protoc_insertion_point(field_get:proto.HomeBalloonGalleryRecordBin.player_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeGroupPlayerInfoBin*>(
      &::proto::_HomeGroupPlayerInfoBin_default_instance_);
}
::proto::HomeGroupPlayerInfoBin* HomeBalloonGalleryRecordBin::mutable_player_info() {
  
  if (player_info_ == NULL) {
    player_info_ = new ::proto::HomeGroupPlayerInfoBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeBalloonGalleryRecordBin.player_info)
  return player_info_;
}
::proto::HomeGroupPlayerInfoBin* HomeBalloonGalleryRecordBin::release_player_info() {
  // @@protoc_insertion_point(field_release:proto.HomeBalloonGalleryRecordBin.player_info)
  
  ::proto::HomeGroupPlayerInfoBin* temp = player_info_;
  player_info_ = NULL;
  return temp;
}
void HomeBalloonGalleryRecordBin::set_allocated_player_info(::proto::HomeGroupPlayerInfoBin* player_info) {
  delete player_info_;
  player_info_ = player_info;
  if (player_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeBalloonGalleryRecordBin.player_info)
}

// uint32 timestamp = 4;
void HomeBalloonGalleryRecordBin::clear_timestamp() {
  timestamp_ = 0u;
}
::google::protobuf::uint32 HomeBalloonGalleryRecordBin::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.HomeBalloonGalleryRecordBin.timestamp)
  return timestamp_;
}
void HomeBalloonGalleryRecordBin::set_timestamp(::google::protobuf::uint32 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBalloonGalleryRecordBin.timestamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeBalloonRecordBin::kRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeBalloonRecordBin::HomeBalloonRecordBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeBalloonRecordBin)
}
HomeBalloonRecordBin::HomeBalloonRecordBin(const HomeBalloonRecordBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      record_list_(from.record_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.HomeBalloonRecordBin)
}

void HomeBalloonRecordBin::SharedCtor() {
  _cached_size_ = 0;
}

HomeBalloonRecordBin::~HomeBalloonRecordBin() {
  // @@protoc_insertion_point(destructor:proto.HomeBalloonRecordBin)
  SharedDtor();
}

void HomeBalloonRecordBin::SharedDtor() {
}

void HomeBalloonRecordBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeBalloonRecordBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeBalloonRecordBin& HomeBalloonRecordBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeBalloonRecordBin* HomeBalloonRecordBin::New(::google::protobuf::Arena* arena) const {
  HomeBalloonRecordBin* n = new HomeBalloonRecordBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeBalloonRecordBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeBalloonRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_list_.Clear();
  _internal_metadata_.Clear();
}

bool HomeBalloonRecordBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeBalloonRecordBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.HomeBalloonGalleryRecordBin record_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeBalloonRecordBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeBalloonRecordBin)
  return false;
#undef DO_
}

void HomeBalloonRecordBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeBalloonRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.HomeBalloonGalleryRecordBin record_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->record_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeBalloonRecordBin)
}

::google::protobuf::uint8* HomeBalloonRecordBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeBalloonRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.HomeBalloonGalleryRecordBin record_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->record_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeBalloonRecordBin)
  return target;
}

size_t HomeBalloonRecordBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeBalloonRecordBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.HomeBalloonGalleryRecordBin record_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->record_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeBalloonRecordBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeBalloonRecordBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeBalloonRecordBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeBalloonRecordBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeBalloonRecordBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeBalloonRecordBin)
    MergeFrom(*source);
  }
}

void HomeBalloonRecordBin::MergeFrom(const HomeBalloonRecordBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeBalloonRecordBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  record_list_.MergeFrom(from.record_list_);
}

void HomeBalloonRecordBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeBalloonRecordBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeBalloonRecordBin::CopyFrom(const HomeBalloonRecordBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeBalloonRecordBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeBalloonRecordBin::IsInitialized() const {
  return true;
}

void HomeBalloonRecordBin::Swap(HomeBalloonRecordBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeBalloonRecordBin::InternalSwap(HomeBalloonRecordBin* other) {
  using std::swap;
  record_list_.InternalSwap(&other->record_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeBalloonRecordBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeBalloonRecordBin

// repeated .proto.HomeBalloonGalleryRecordBin record_list = 1;
int HomeBalloonRecordBin::record_list_size() const {
  return record_list_.size();
}
void HomeBalloonRecordBin::clear_record_list() {
  record_list_.Clear();
}
const ::proto::HomeBalloonGalleryRecordBin& HomeBalloonRecordBin::record_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeBalloonRecordBin.record_list)
  return record_list_.Get(index);
}
::proto::HomeBalloonGalleryRecordBin* HomeBalloonRecordBin::mutable_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeBalloonRecordBin.record_list)
  return record_list_.Mutable(index);
}
::proto::HomeBalloonGalleryRecordBin* HomeBalloonRecordBin::add_record_list() {
  // @@protoc_insertion_point(field_add:proto.HomeBalloonRecordBin.record_list)
  return record_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeBalloonGalleryRecordBin >*
HomeBalloonRecordBin::mutable_record_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeBalloonRecordBin.record_list)
  return &record_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeBalloonGalleryRecordBin >&
HomeBalloonRecordBin::record_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeBalloonRecordBin.record_list)
  return record_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeStakePlayRecordBin::kTimestampFieldNumber;
const int HomeStakePlayRecordBin::kEngagedPlayerInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeStakePlayRecordBin::HomeStakePlayRecordBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeStakePlayRecordBin)
}
HomeStakePlayRecordBin::HomeStakePlayRecordBin(const HomeStakePlayRecordBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      engaged_player_info_list_(from.engaged_player_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:proto.HomeStakePlayRecordBin)
}

void HomeStakePlayRecordBin::SharedCtor() {
  timestamp_ = 0u;
  _cached_size_ = 0;
}

HomeStakePlayRecordBin::~HomeStakePlayRecordBin() {
  // @@protoc_insertion_point(destructor:proto.HomeStakePlayRecordBin)
  SharedDtor();
}

void HomeStakePlayRecordBin::SharedDtor() {
}

void HomeStakePlayRecordBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeStakePlayRecordBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeStakePlayRecordBin& HomeStakePlayRecordBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeStakePlayRecordBin* HomeStakePlayRecordBin::New(::google::protobuf::Arena* arena) const {
  HomeStakePlayRecordBin* n = new HomeStakePlayRecordBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeStakePlayRecordBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeStakePlayRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  engaged_player_info_list_.Clear();
  timestamp_ = 0u;
  _internal_metadata_.Clear();
}

bool HomeStakePlayRecordBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeStakePlayRecordBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomeGroupPlayerInfoBin engaged_player_info_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_engaged_player_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeStakePlayRecordBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeStakePlayRecordBin)
  return false;
#undef DO_
}

void HomeStakePlayRecordBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeStakePlayRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->timestamp(), output);
  }

  // repeated .proto.HomeGroupPlayerInfoBin engaged_player_info_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->engaged_player_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->engaged_player_info_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeStakePlayRecordBin)
}

::google::protobuf::uint8* HomeStakePlayRecordBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeStakePlayRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->timestamp(), target);
  }

  // repeated .proto.HomeGroupPlayerInfoBin engaged_player_info_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->engaged_player_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->engaged_player_info_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeStakePlayRecordBin)
  return target;
}

size_t HomeStakePlayRecordBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeStakePlayRecordBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.HomeGroupPlayerInfoBin engaged_player_info_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->engaged_player_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->engaged_player_info_list(static_cast<int>(i)));
    }
  }

  // uint32 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeStakePlayRecordBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeStakePlayRecordBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeStakePlayRecordBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeStakePlayRecordBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeStakePlayRecordBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeStakePlayRecordBin)
    MergeFrom(*source);
  }
}

void HomeStakePlayRecordBin::MergeFrom(const HomeStakePlayRecordBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeStakePlayRecordBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  engaged_player_info_list_.MergeFrom(from.engaged_player_info_list_);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void HomeStakePlayRecordBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeStakePlayRecordBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeStakePlayRecordBin::CopyFrom(const HomeStakePlayRecordBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeStakePlayRecordBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeStakePlayRecordBin::IsInitialized() const {
  return true;
}

void HomeStakePlayRecordBin::Swap(HomeStakePlayRecordBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeStakePlayRecordBin::InternalSwap(HomeStakePlayRecordBin* other) {
  using std::swap;
  engaged_player_info_list_.InternalSwap(&other->engaged_player_info_list_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeStakePlayRecordBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeStakePlayRecordBin

// uint32 timestamp = 1;
void HomeStakePlayRecordBin::clear_timestamp() {
  timestamp_ = 0u;
}
::google::protobuf::uint32 HomeStakePlayRecordBin::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.HomeStakePlayRecordBin.timestamp)
  return timestamp_;
}
void HomeStakePlayRecordBin::set_timestamp(::google::protobuf::uint32 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeStakePlayRecordBin.timestamp)
}

// repeated .proto.HomeGroupPlayerInfoBin engaged_player_info_list = 2;
int HomeStakePlayRecordBin::engaged_player_info_list_size() const {
  return engaged_player_info_list_.size();
}
void HomeStakePlayRecordBin::clear_engaged_player_info_list() {
  engaged_player_info_list_.Clear();
}
const ::proto::HomeGroupPlayerInfoBin& HomeStakePlayRecordBin::engaged_player_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeStakePlayRecordBin.engaged_player_info_list)
  return engaged_player_info_list_.Get(index);
}
::proto::HomeGroupPlayerInfoBin* HomeStakePlayRecordBin::mutable_engaged_player_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeStakePlayRecordBin.engaged_player_info_list)
  return engaged_player_info_list_.Mutable(index);
}
::proto::HomeGroupPlayerInfoBin* HomeStakePlayRecordBin::add_engaged_player_info_list() {
  // @@protoc_insertion_point(field_add:proto.HomeStakePlayRecordBin.engaged_player_info_list)
  return engaged_player_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeGroupPlayerInfoBin >*
HomeStakePlayRecordBin::mutable_engaged_player_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeStakePlayRecordBin.engaged_player_info_list)
  return &engaged_player_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeGroupPlayerInfoBin >&
HomeStakePlayRecordBin::engaged_player_info_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeStakePlayRecordBin.engaged_player_info_list)
  return engaged_player_info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeStakeRecordBin::kRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeStakeRecordBin::HomeStakeRecordBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeStakeRecordBin)
}
HomeStakeRecordBin::HomeStakeRecordBin(const HomeStakeRecordBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      record_list_(from.record_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.HomeStakeRecordBin)
}

void HomeStakeRecordBin::SharedCtor() {
  _cached_size_ = 0;
}

HomeStakeRecordBin::~HomeStakeRecordBin() {
  // @@protoc_insertion_point(destructor:proto.HomeStakeRecordBin)
  SharedDtor();
}

void HomeStakeRecordBin::SharedDtor() {
}

void HomeStakeRecordBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeStakeRecordBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeStakeRecordBin& HomeStakeRecordBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeStakeRecordBin* HomeStakeRecordBin::New(::google::protobuf::Arena* arena) const {
  HomeStakeRecordBin* n = new HomeStakeRecordBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeStakeRecordBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeStakeRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_list_.Clear();
  _internal_metadata_.Clear();
}

bool HomeStakeRecordBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeStakeRecordBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.HomeStakePlayRecordBin record_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeStakeRecordBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeStakeRecordBin)
  return false;
#undef DO_
}

void HomeStakeRecordBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeStakeRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.HomeStakePlayRecordBin record_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->record_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeStakeRecordBin)
}

::google::protobuf::uint8* HomeStakeRecordBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeStakeRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.HomeStakePlayRecordBin record_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->record_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeStakeRecordBin)
  return target;
}

size_t HomeStakeRecordBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeStakeRecordBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.HomeStakePlayRecordBin record_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->record_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeStakeRecordBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeStakeRecordBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeStakeRecordBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeStakeRecordBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeStakeRecordBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeStakeRecordBin)
    MergeFrom(*source);
  }
}

void HomeStakeRecordBin::MergeFrom(const HomeStakeRecordBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeStakeRecordBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  record_list_.MergeFrom(from.record_list_);
}

void HomeStakeRecordBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeStakeRecordBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeStakeRecordBin::CopyFrom(const HomeStakeRecordBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeStakeRecordBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeStakeRecordBin::IsInitialized() const {
  return true;
}

void HomeStakeRecordBin::Swap(HomeStakeRecordBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeStakeRecordBin::InternalSwap(HomeStakeRecordBin* other) {
  using std::swap;
  record_list_.InternalSwap(&other->record_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeStakeRecordBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeStakeRecordBin

// repeated .proto.HomeStakePlayRecordBin record_list = 1;
int HomeStakeRecordBin::record_list_size() const {
  return record_list_.size();
}
void HomeStakeRecordBin::clear_record_list() {
  record_list_.Clear();
}
const ::proto::HomeStakePlayRecordBin& HomeStakeRecordBin::record_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeStakeRecordBin.record_list)
  return record_list_.Get(index);
}
::proto::HomeStakePlayRecordBin* HomeStakeRecordBin::mutable_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeStakeRecordBin.record_list)
  return record_list_.Mutable(index);
}
::proto::HomeStakePlayRecordBin* HomeStakeRecordBin::add_record_list() {
  // @@protoc_insertion_point(field_add:proto.HomeStakeRecordBin.record_list)
  return record_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeStakePlayRecordBin >*
HomeStakeRecordBin::mutable_record_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeStakeRecordBin.record_list)
  return &record_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeStakePlayRecordBin >&
HomeStakeRecordBin::record_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeStakeRecordBin.record_list)
  return record_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeSeekFurniturePlayerScoreBin::kPlayerInfoFieldNumber;
const int HomeSeekFurniturePlayerScoreBin::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeSeekFurniturePlayerScoreBin::HomeSeekFurniturePlayerScoreBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeSeekFurniturePlayerScoreBin)
}
HomeSeekFurniturePlayerScoreBin::HomeSeekFurniturePlayerScoreBin(const HomeSeekFurniturePlayerScoreBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_player_info()) {
    player_info_ = new ::proto::HomeGroupPlayerInfoBin(*from.player_info_);
  } else {
    player_info_ = NULL;
  }
  score_ = from.score_;
  // @@protoc_insertion_point(copy_constructor:proto.HomeSeekFurniturePlayerScoreBin)
}

void HomeSeekFurniturePlayerScoreBin::SharedCtor() {
  ::memset(&player_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&player_info_)) + sizeof(score_));
  _cached_size_ = 0;
}

HomeSeekFurniturePlayerScoreBin::~HomeSeekFurniturePlayerScoreBin() {
  // @@protoc_insertion_point(destructor:proto.HomeSeekFurniturePlayerScoreBin)
  SharedDtor();
}

void HomeSeekFurniturePlayerScoreBin::SharedDtor() {
  if (this != internal_default_instance()) delete player_info_;
}

void HomeSeekFurniturePlayerScoreBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeSeekFurniturePlayerScoreBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeSeekFurniturePlayerScoreBin& HomeSeekFurniturePlayerScoreBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeSeekFurniturePlayerScoreBin* HomeSeekFurniturePlayerScoreBin::New(::google::protobuf::Arena* arena) const {
  HomeSeekFurniturePlayerScoreBin* n = new HomeSeekFurniturePlayerScoreBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeSeekFurniturePlayerScoreBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeSeekFurniturePlayerScoreBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && player_info_ != NULL) {
    delete player_info_;
  }
  player_info_ = NULL;
  score_ = 0u;
  _internal_metadata_.Clear();
}

bool HomeSeekFurniturePlayerScoreBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeSeekFurniturePlayerScoreBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.HomeGroupPlayerInfoBin player_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_player_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 score = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeSeekFurniturePlayerScoreBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeSeekFurniturePlayerScoreBin)
  return false;
#undef DO_
}

void HomeSeekFurniturePlayerScoreBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeSeekFurniturePlayerScoreBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.HomeGroupPlayerInfoBin player_info = 1;
  if (this->has_player_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_info_, output);
  }

  // uint32 score = 2;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->score(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeSeekFurniturePlayerScoreBin)
}

::google::protobuf::uint8* HomeSeekFurniturePlayerScoreBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeSeekFurniturePlayerScoreBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.HomeGroupPlayerInfoBin player_info = 1;
  if (this->has_player_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->player_info_, deterministic, target);
  }

  // uint32 score = 2;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->score(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeSeekFurniturePlayerScoreBin)
  return target;
}

size_t HomeSeekFurniturePlayerScoreBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeSeekFurniturePlayerScoreBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.HomeGroupPlayerInfoBin player_info = 1;
  if (this->has_player_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->player_info_);
  }

  // uint32 score = 2;
  if (this->score() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->score());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeSeekFurniturePlayerScoreBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeSeekFurniturePlayerScoreBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeSeekFurniturePlayerScoreBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeSeekFurniturePlayerScoreBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeSeekFurniturePlayerScoreBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeSeekFurniturePlayerScoreBin)
    MergeFrom(*source);
  }
}

void HomeSeekFurniturePlayerScoreBin::MergeFrom(const HomeSeekFurniturePlayerScoreBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeSeekFurniturePlayerScoreBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_player_info()) {
    mutable_player_info()->::proto::HomeGroupPlayerInfoBin::MergeFrom(from.player_info());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
}

void HomeSeekFurniturePlayerScoreBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeSeekFurniturePlayerScoreBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeSeekFurniturePlayerScoreBin::CopyFrom(const HomeSeekFurniturePlayerScoreBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeSeekFurniturePlayerScoreBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeSeekFurniturePlayerScoreBin::IsInitialized() const {
  return true;
}

void HomeSeekFurniturePlayerScoreBin::Swap(HomeSeekFurniturePlayerScoreBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeSeekFurniturePlayerScoreBin::InternalSwap(HomeSeekFurniturePlayerScoreBin* other) {
  using std::swap;
  swap(player_info_, other->player_info_);
  swap(score_, other->score_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeSeekFurniturePlayerScoreBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeSeekFurniturePlayerScoreBin

// .proto.HomeGroupPlayerInfoBin player_info = 1;
bool HomeSeekFurniturePlayerScoreBin::has_player_info() const {
  return this != internal_default_instance() && player_info_ != NULL;
}
void HomeSeekFurniturePlayerScoreBin::clear_player_info() {
  if (GetArenaNoVirtual() == NULL && player_info_ != NULL) delete player_info_;
  player_info_ = NULL;
}
const ::proto::HomeGroupPlayerInfoBin& HomeSeekFurniturePlayerScoreBin::player_info() const {
  const ::proto::HomeGroupPlayerInfoBin* p = player_info_;
  // @@protoc_insertion_point(field_get:proto.HomeSeekFurniturePlayerScoreBin.player_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeGroupPlayerInfoBin*>(
      &::proto::_HomeGroupPlayerInfoBin_default_instance_);
}
::proto::HomeGroupPlayerInfoBin* HomeSeekFurniturePlayerScoreBin::mutable_player_info() {
  
  if (player_info_ == NULL) {
    player_info_ = new ::proto::HomeGroupPlayerInfoBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeSeekFurniturePlayerScoreBin.player_info)
  return player_info_;
}
::proto::HomeGroupPlayerInfoBin* HomeSeekFurniturePlayerScoreBin::release_player_info() {
  // @@protoc_insertion_point(field_release:proto.HomeSeekFurniturePlayerScoreBin.player_info)
  
  ::proto::HomeGroupPlayerInfoBin* temp = player_info_;
  player_info_ = NULL;
  return temp;
}
void HomeSeekFurniturePlayerScoreBin::set_allocated_player_info(::proto::HomeGroupPlayerInfoBin* player_info) {
  delete player_info_;
  player_info_ = player_info;
  if (player_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeSeekFurniturePlayerScoreBin.player_info)
}

// uint32 score = 2;
void HomeSeekFurniturePlayerScoreBin::clear_score() {
  score_ = 0u;
}
::google::protobuf::uint32 HomeSeekFurniturePlayerScoreBin::score() const {
  // @@protoc_insertion_point(field_get:proto.HomeSeekFurniturePlayerScoreBin.score)
  return score_;
}
void HomeSeekFurniturePlayerScoreBin::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeSeekFurniturePlayerScoreBin.score)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeSeekFurnitureOneRecordBin::kTimestampFieldNumber;
const int HomeSeekFurnitureOneRecordBin::kEngagedPlayerScoreListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeSeekFurnitureOneRecordBin::HomeSeekFurnitureOneRecordBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeSeekFurnitureOneRecordBin)
}
HomeSeekFurnitureOneRecordBin::HomeSeekFurnitureOneRecordBin(const HomeSeekFurnitureOneRecordBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      engaged_player_score_list_(from.engaged_player_score_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:proto.HomeSeekFurnitureOneRecordBin)
}

void HomeSeekFurnitureOneRecordBin::SharedCtor() {
  timestamp_ = 0u;
  _cached_size_ = 0;
}

HomeSeekFurnitureOneRecordBin::~HomeSeekFurnitureOneRecordBin() {
  // @@protoc_insertion_point(destructor:proto.HomeSeekFurnitureOneRecordBin)
  SharedDtor();
}

void HomeSeekFurnitureOneRecordBin::SharedDtor() {
}

void HomeSeekFurnitureOneRecordBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeSeekFurnitureOneRecordBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeSeekFurnitureOneRecordBin& HomeSeekFurnitureOneRecordBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeSeekFurnitureOneRecordBin* HomeSeekFurnitureOneRecordBin::New(::google::protobuf::Arena* arena) const {
  HomeSeekFurnitureOneRecordBin* n = new HomeSeekFurnitureOneRecordBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeSeekFurnitureOneRecordBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeSeekFurnitureOneRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  engaged_player_score_list_.Clear();
  timestamp_ = 0u;
  _internal_metadata_.Clear();
}

bool HomeSeekFurnitureOneRecordBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeSeekFurnitureOneRecordBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.HomeSeekFurniturePlayerScoreBin engaged_player_score_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_engaged_player_score_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeSeekFurnitureOneRecordBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeSeekFurnitureOneRecordBin)
  return false;
#undef DO_
}

void HomeSeekFurnitureOneRecordBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeSeekFurnitureOneRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->timestamp(), output);
  }

  // repeated .proto.HomeSeekFurniturePlayerScoreBin engaged_player_score_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->engaged_player_score_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->engaged_player_score_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeSeekFurnitureOneRecordBin)
}

::google::protobuf::uint8* HomeSeekFurnitureOneRecordBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeSeekFurnitureOneRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->timestamp(), target);
  }

  // repeated .proto.HomeSeekFurniturePlayerScoreBin engaged_player_score_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->engaged_player_score_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->engaged_player_score_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeSeekFurnitureOneRecordBin)
  return target;
}

size_t HomeSeekFurnitureOneRecordBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeSeekFurnitureOneRecordBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.HomeSeekFurniturePlayerScoreBin engaged_player_score_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->engaged_player_score_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->engaged_player_score_list(static_cast<int>(i)));
    }
  }

  // uint32 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeSeekFurnitureOneRecordBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeSeekFurnitureOneRecordBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeSeekFurnitureOneRecordBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeSeekFurnitureOneRecordBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeSeekFurnitureOneRecordBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeSeekFurnitureOneRecordBin)
    MergeFrom(*source);
  }
}

void HomeSeekFurnitureOneRecordBin::MergeFrom(const HomeSeekFurnitureOneRecordBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeSeekFurnitureOneRecordBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  engaged_player_score_list_.MergeFrom(from.engaged_player_score_list_);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void HomeSeekFurnitureOneRecordBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeSeekFurnitureOneRecordBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeSeekFurnitureOneRecordBin::CopyFrom(const HomeSeekFurnitureOneRecordBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeSeekFurnitureOneRecordBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeSeekFurnitureOneRecordBin::IsInitialized() const {
  return true;
}

void HomeSeekFurnitureOneRecordBin::Swap(HomeSeekFurnitureOneRecordBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeSeekFurnitureOneRecordBin::InternalSwap(HomeSeekFurnitureOneRecordBin* other) {
  using std::swap;
  engaged_player_score_list_.InternalSwap(&other->engaged_player_score_list_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeSeekFurnitureOneRecordBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeSeekFurnitureOneRecordBin

// uint32 timestamp = 1;
void HomeSeekFurnitureOneRecordBin::clear_timestamp() {
  timestamp_ = 0u;
}
::google::protobuf::uint32 HomeSeekFurnitureOneRecordBin::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.HomeSeekFurnitureOneRecordBin.timestamp)
  return timestamp_;
}
void HomeSeekFurnitureOneRecordBin::set_timestamp(::google::protobuf::uint32 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeSeekFurnitureOneRecordBin.timestamp)
}

// repeated .proto.HomeSeekFurniturePlayerScoreBin engaged_player_score_list = 2;
int HomeSeekFurnitureOneRecordBin::engaged_player_score_list_size() const {
  return engaged_player_score_list_.size();
}
void HomeSeekFurnitureOneRecordBin::clear_engaged_player_score_list() {
  engaged_player_score_list_.Clear();
}
const ::proto::HomeSeekFurniturePlayerScoreBin& HomeSeekFurnitureOneRecordBin::engaged_player_score_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeSeekFurnitureOneRecordBin.engaged_player_score_list)
  return engaged_player_score_list_.Get(index);
}
::proto::HomeSeekFurniturePlayerScoreBin* HomeSeekFurnitureOneRecordBin::mutable_engaged_player_score_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeSeekFurnitureOneRecordBin.engaged_player_score_list)
  return engaged_player_score_list_.Mutable(index);
}
::proto::HomeSeekFurniturePlayerScoreBin* HomeSeekFurnitureOneRecordBin::add_engaged_player_score_list() {
  // @@protoc_insertion_point(field_add:proto.HomeSeekFurnitureOneRecordBin.engaged_player_score_list)
  return engaged_player_score_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeSeekFurniturePlayerScoreBin >*
HomeSeekFurnitureOneRecordBin::mutable_engaged_player_score_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeSeekFurnitureOneRecordBin.engaged_player_score_list)
  return &engaged_player_score_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeSeekFurniturePlayerScoreBin >&
HomeSeekFurnitureOneRecordBin::engaged_player_score_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeSeekFurnitureOneRecordBin.engaged_player_score_list)
  return engaged_player_score_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeSeekFurnitureAllRecordBin::kRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeSeekFurnitureAllRecordBin::HomeSeekFurnitureAllRecordBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeSeekFurnitureAllRecordBin)
}
HomeSeekFurnitureAllRecordBin::HomeSeekFurnitureAllRecordBin(const HomeSeekFurnitureAllRecordBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      record_list_(from.record_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.HomeSeekFurnitureAllRecordBin)
}

void HomeSeekFurnitureAllRecordBin::SharedCtor() {
  _cached_size_ = 0;
}

HomeSeekFurnitureAllRecordBin::~HomeSeekFurnitureAllRecordBin() {
  // @@protoc_insertion_point(destructor:proto.HomeSeekFurnitureAllRecordBin)
  SharedDtor();
}

void HomeSeekFurnitureAllRecordBin::SharedDtor() {
}

void HomeSeekFurnitureAllRecordBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeSeekFurnitureAllRecordBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeSeekFurnitureAllRecordBin& HomeSeekFurnitureAllRecordBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeSeekFurnitureAllRecordBin* HomeSeekFurnitureAllRecordBin::New(::google::protobuf::Arena* arena) const {
  HomeSeekFurnitureAllRecordBin* n = new HomeSeekFurnitureAllRecordBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeSeekFurnitureAllRecordBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeSeekFurnitureAllRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_list_.Clear();
  _internal_metadata_.Clear();
}

bool HomeSeekFurnitureAllRecordBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeSeekFurnitureAllRecordBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.HomeSeekFurnitureOneRecordBin record_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeSeekFurnitureAllRecordBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeSeekFurnitureAllRecordBin)
  return false;
#undef DO_
}

void HomeSeekFurnitureAllRecordBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeSeekFurnitureAllRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.HomeSeekFurnitureOneRecordBin record_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->record_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeSeekFurnitureAllRecordBin)
}

::google::protobuf::uint8* HomeSeekFurnitureAllRecordBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeSeekFurnitureAllRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.HomeSeekFurnitureOneRecordBin record_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->record_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeSeekFurnitureAllRecordBin)
  return target;
}

size_t HomeSeekFurnitureAllRecordBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeSeekFurnitureAllRecordBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.HomeSeekFurnitureOneRecordBin record_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->record_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeSeekFurnitureAllRecordBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeSeekFurnitureAllRecordBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeSeekFurnitureAllRecordBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeSeekFurnitureAllRecordBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeSeekFurnitureAllRecordBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeSeekFurnitureAllRecordBin)
    MergeFrom(*source);
  }
}

void HomeSeekFurnitureAllRecordBin::MergeFrom(const HomeSeekFurnitureAllRecordBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeSeekFurnitureAllRecordBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  record_list_.MergeFrom(from.record_list_);
}

void HomeSeekFurnitureAllRecordBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeSeekFurnitureAllRecordBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeSeekFurnitureAllRecordBin::CopyFrom(const HomeSeekFurnitureAllRecordBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeSeekFurnitureAllRecordBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeSeekFurnitureAllRecordBin::IsInitialized() const {
  return true;
}

void HomeSeekFurnitureAllRecordBin::Swap(HomeSeekFurnitureAllRecordBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeSeekFurnitureAllRecordBin::InternalSwap(HomeSeekFurnitureAllRecordBin* other) {
  using std::swap;
  record_list_.InternalSwap(&other->record_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeSeekFurnitureAllRecordBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeSeekFurnitureAllRecordBin

// repeated .proto.HomeSeekFurnitureOneRecordBin record_list = 1;
int HomeSeekFurnitureAllRecordBin::record_list_size() const {
  return record_list_.size();
}
void HomeSeekFurnitureAllRecordBin::clear_record_list() {
  record_list_.Clear();
}
const ::proto::HomeSeekFurnitureOneRecordBin& HomeSeekFurnitureAllRecordBin::record_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeSeekFurnitureAllRecordBin.record_list)
  return record_list_.Get(index);
}
::proto::HomeSeekFurnitureOneRecordBin* HomeSeekFurnitureAllRecordBin::mutable_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeSeekFurnitureAllRecordBin.record_list)
  return record_list_.Mutable(index);
}
::proto::HomeSeekFurnitureOneRecordBin* HomeSeekFurnitureAllRecordBin::add_record_list() {
  // @@protoc_insertion_point(field_add:proto.HomeSeekFurnitureAllRecordBin.record_list)
  return record_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::HomeSeekFurnitureOneRecordBin >*
HomeSeekFurnitureAllRecordBin::mutable_record_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeSeekFurnitureAllRecordBin.record_list)
  return &record_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::HomeSeekFurnitureOneRecordBin >&
HomeSeekFurnitureAllRecordBin::record_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeSeekFurnitureAllRecordBin.record_list)
  return record_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeGroupRecordBin::kRacingGalleryInfoBinFieldNumber;
const int HomeGroupRecordBin::kBalloonGalleryInfoBinFieldNumber;
const int HomeGroupRecordBin::kStakePlayInfoBinFieldNumber;
const int HomeGroupRecordBin::kSeekFurniturePlayInfoBinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeGroupRecordBin::HomeGroupRecordBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeGroupRecordBin)
}
HomeGroupRecordBin::HomeGroupRecordBin(const HomeGroupRecordBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_detail();
  switch (from.detail_case()) {
    case kRacingGalleryInfoBin: {
      mutable_racing_gallery_info_bin()->::proto::HomeRacingRecordBin::MergeFrom(from.racing_gallery_info_bin());
      break;
    }
    case kBalloonGalleryInfoBin: {
      mutable_balloon_gallery_info_bin()->::proto::HomeBalloonRecordBin::MergeFrom(from.balloon_gallery_info_bin());
      break;
    }
    case kStakePlayInfoBin: {
      mutable_stake_play_info_bin()->::proto::HomeStakeRecordBin::MergeFrom(from.stake_play_info_bin());
      break;
    }
    case kSeekFurniturePlayInfoBin: {
      mutable_seek_furniture_play_info_bin()->::proto::HomeSeekFurnitureAllRecordBin::MergeFrom(from.seek_furniture_play_info_bin());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.HomeGroupRecordBin)
}

void HomeGroupRecordBin::SharedCtor() {
  clear_has_detail();
  _cached_size_ = 0;
}

HomeGroupRecordBin::~HomeGroupRecordBin() {
  // @@protoc_insertion_point(destructor:proto.HomeGroupRecordBin)
  SharedDtor();
}

void HomeGroupRecordBin::SharedDtor() {
  if (has_detail()) {
    clear_detail();
  }
}

void HomeGroupRecordBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeGroupRecordBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeGroupRecordBin& HomeGroupRecordBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeGroupRecordBin* HomeGroupRecordBin::New(::google::protobuf::Arena* arena) const {
  HomeGroupRecordBin* n = new HomeGroupRecordBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeGroupRecordBin::clear_detail() {
// @@protoc_insertion_point(one_of_clear_start:proto.HomeGroupRecordBin)
  switch (detail_case()) {
    case kRacingGalleryInfoBin: {
      delete detail_.racing_gallery_info_bin_;
      break;
    }
    case kBalloonGalleryInfoBin: {
      delete detail_.balloon_gallery_info_bin_;
      break;
    }
    case kStakePlayInfoBin: {
      delete detail_.stake_play_info_bin_;
      break;
    }
    case kSeekFurniturePlayInfoBin: {
      delete detail_.seek_furniture_play_info_bin_;
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DETAIL_NOT_SET;
}


void HomeGroupRecordBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeGroupRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_detail();
  _internal_metadata_.Clear();
}

bool HomeGroupRecordBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeGroupRecordBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.HomeRacingRecordBin racing_gallery_info_bin = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_racing_gallery_info_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.HomeBalloonRecordBin balloon_gallery_info_bin = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_balloon_gallery_info_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.HomeStakeRecordBin stake_play_info_bin = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stake_play_info_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.HomeSeekFurnitureAllRecordBin seek_furniture_play_info_bin = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_seek_furniture_play_info_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeGroupRecordBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeGroupRecordBin)
  return false;
#undef DO_
}

void HomeGroupRecordBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeGroupRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.HomeRacingRecordBin racing_gallery_info_bin = 11;
  if (has_racing_gallery_info_bin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *detail_.racing_gallery_info_bin_, output);
  }

  // .proto.HomeBalloonRecordBin balloon_gallery_info_bin = 12;
  if (has_balloon_gallery_info_bin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *detail_.balloon_gallery_info_bin_, output);
  }

  // .proto.HomeStakeRecordBin stake_play_info_bin = 13;
  if (has_stake_play_info_bin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *detail_.stake_play_info_bin_, output);
  }

  // .proto.HomeSeekFurnitureAllRecordBin seek_furniture_play_info_bin = 14;
  if (has_seek_furniture_play_info_bin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *detail_.seek_furniture_play_info_bin_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeGroupRecordBin)
}

::google::protobuf::uint8* HomeGroupRecordBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeGroupRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.HomeRacingRecordBin racing_gallery_info_bin = 11;
  if (has_racing_gallery_info_bin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *detail_.racing_gallery_info_bin_, deterministic, target);
  }

  // .proto.HomeBalloonRecordBin balloon_gallery_info_bin = 12;
  if (has_balloon_gallery_info_bin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *detail_.balloon_gallery_info_bin_, deterministic, target);
  }

  // .proto.HomeStakeRecordBin stake_play_info_bin = 13;
  if (has_stake_play_info_bin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *detail_.stake_play_info_bin_, deterministic, target);
  }

  // .proto.HomeSeekFurnitureAllRecordBin seek_furniture_play_info_bin = 14;
  if (has_seek_furniture_play_info_bin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *detail_.seek_furniture_play_info_bin_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeGroupRecordBin)
  return target;
}

size_t HomeGroupRecordBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeGroupRecordBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (detail_case()) {
    // .proto.HomeRacingRecordBin racing_gallery_info_bin = 11;
    case kRacingGalleryInfoBin: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.racing_gallery_info_bin_);
      break;
    }
    // .proto.HomeBalloonRecordBin balloon_gallery_info_bin = 12;
    case kBalloonGalleryInfoBin: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.balloon_gallery_info_bin_);
      break;
    }
    // .proto.HomeStakeRecordBin stake_play_info_bin = 13;
    case kStakePlayInfoBin: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.stake_play_info_bin_);
      break;
    }
    // .proto.HomeSeekFurnitureAllRecordBin seek_furniture_play_info_bin = 14;
    case kSeekFurniturePlayInfoBin: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.seek_furniture_play_info_bin_);
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeGroupRecordBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeGroupRecordBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeGroupRecordBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeGroupRecordBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeGroupRecordBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeGroupRecordBin)
    MergeFrom(*source);
  }
}

void HomeGroupRecordBin::MergeFrom(const HomeGroupRecordBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeGroupRecordBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.detail_case()) {
    case kRacingGalleryInfoBin: {
      mutable_racing_gallery_info_bin()->::proto::HomeRacingRecordBin::MergeFrom(from.racing_gallery_info_bin());
      break;
    }
    case kBalloonGalleryInfoBin: {
      mutable_balloon_gallery_info_bin()->::proto::HomeBalloonRecordBin::MergeFrom(from.balloon_gallery_info_bin());
      break;
    }
    case kStakePlayInfoBin: {
      mutable_stake_play_info_bin()->::proto::HomeStakeRecordBin::MergeFrom(from.stake_play_info_bin());
      break;
    }
    case kSeekFurniturePlayInfoBin: {
      mutable_seek_furniture_play_info_bin()->::proto::HomeSeekFurnitureAllRecordBin::MergeFrom(from.seek_furniture_play_info_bin());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
}

void HomeGroupRecordBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeGroupRecordBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeGroupRecordBin::CopyFrom(const HomeGroupRecordBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeGroupRecordBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeGroupRecordBin::IsInitialized() const {
  return true;
}

void HomeGroupRecordBin::Swap(HomeGroupRecordBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeGroupRecordBin::InternalSwap(HomeGroupRecordBin* other) {
  using std::swap;
  swap(detail_, other->detail_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeGroupRecordBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeGroupRecordBin

// .proto.HomeRacingRecordBin racing_gallery_info_bin = 11;
bool HomeGroupRecordBin::has_racing_gallery_info_bin() const {
  return detail_case() == kRacingGalleryInfoBin;
}
void HomeGroupRecordBin::set_has_racing_gallery_info_bin() {
  _oneof_case_[0] = kRacingGalleryInfoBin;
}
void HomeGroupRecordBin::clear_racing_gallery_info_bin() {
  if (has_racing_gallery_info_bin()) {
    delete detail_.racing_gallery_info_bin_;
    clear_has_detail();
  }
}
 const ::proto::HomeRacingRecordBin& HomeGroupRecordBin::racing_gallery_info_bin() const {
  // @@protoc_insertion_point(field_get:proto.HomeGroupRecordBin.racing_gallery_info_bin)
  return has_racing_gallery_info_bin()
      ? *detail_.racing_gallery_info_bin_
      : ::proto::HomeRacingRecordBin::default_instance();
}
::proto::HomeRacingRecordBin* HomeGroupRecordBin::mutable_racing_gallery_info_bin() {
  if (!has_racing_gallery_info_bin()) {
    clear_detail();
    set_has_racing_gallery_info_bin();
    detail_.racing_gallery_info_bin_ = new ::proto::HomeRacingRecordBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeGroupRecordBin.racing_gallery_info_bin)
  return detail_.racing_gallery_info_bin_;
}
::proto::HomeRacingRecordBin* HomeGroupRecordBin::release_racing_gallery_info_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeGroupRecordBin.racing_gallery_info_bin)
  if (has_racing_gallery_info_bin()) {
    clear_has_detail();
    ::proto::HomeRacingRecordBin* temp = detail_.racing_gallery_info_bin_;
    detail_.racing_gallery_info_bin_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void HomeGroupRecordBin::set_allocated_racing_gallery_info_bin(::proto::HomeRacingRecordBin* racing_gallery_info_bin) {
  clear_detail();
  if (racing_gallery_info_bin) {
    set_has_racing_gallery_info_bin();
    detail_.racing_gallery_info_bin_ = racing_gallery_info_bin;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeGroupRecordBin.racing_gallery_info_bin)
}

// .proto.HomeBalloonRecordBin balloon_gallery_info_bin = 12;
bool HomeGroupRecordBin::has_balloon_gallery_info_bin() const {
  return detail_case() == kBalloonGalleryInfoBin;
}
void HomeGroupRecordBin::set_has_balloon_gallery_info_bin() {
  _oneof_case_[0] = kBalloonGalleryInfoBin;
}
void HomeGroupRecordBin::clear_balloon_gallery_info_bin() {
  if (has_balloon_gallery_info_bin()) {
    delete detail_.balloon_gallery_info_bin_;
    clear_has_detail();
  }
}
 const ::proto::HomeBalloonRecordBin& HomeGroupRecordBin::balloon_gallery_info_bin() const {
  // @@protoc_insertion_point(field_get:proto.HomeGroupRecordBin.balloon_gallery_info_bin)
  return has_balloon_gallery_info_bin()
      ? *detail_.balloon_gallery_info_bin_
      : ::proto::HomeBalloonRecordBin::default_instance();
}
::proto::HomeBalloonRecordBin* HomeGroupRecordBin::mutable_balloon_gallery_info_bin() {
  if (!has_balloon_gallery_info_bin()) {
    clear_detail();
    set_has_balloon_gallery_info_bin();
    detail_.balloon_gallery_info_bin_ = new ::proto::HomeBalloonRecordBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeGroupRecordBin.balloon_gallery_info_bin)
  return detail_.balloon_gallery_info_bin_;
}
::proto::HomeBalloonRecordBin* HomeGroupRecordBin::release_balloon_gallery_info_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeGroupRecordBin.balloon_gallery_info_bin)
  if (has_balloon_gallery_info_bin()) {
    clear_has_detail();
    ::proto::HomeBalloonRecordBin* temp = detail_.balloon_gallery_info_bin_;
    detail_.balloon_gallery_info_bin_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void HomeGroupRecordBin::set_allocated_balloon_gallery_info_bin(::proto::HomeBalloonRecordBin* balloon_gallery_info_bin) {
  clear_detail();
  if (balloon_gallery_info_bin) {
    set_has_balloon_gallery_info_bin();
    detail_.balloon_gallery_info_bin_ = balloon_gallery_info_bin;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeGroupRecordBin.balloon_gallery_info_bin)
}

// .proto.HomeStakeRecordBin stake_play_info_bin = 13;
bool HomeGroupRecordBin::has_stake_play_info_bin() const {
  return detail_case() == kStakePlayInfoBin;
}
void HomeGroupRecordBin::set_has_stake_play_info_bin() {
  _oneof_case_[0] = kStakePlayInfoBin;
}
void HomeGroupRecordBin::clear_stake_play_info_bin() {
  if (has_stake_play_info_bin()) {
    delete detail_.stake_play_info_bin_;
    clear_has_detail();
  }
}
 const ::proto::HomeStakeRecordBin& HomeGroupRecordBin::stake_play_info_bin() const {
  // @@protoc_insertion_point(field_get:proto.HomeGroupRecordBin.stake_play_info_bin)
  return has_stake_play_info_bin()
      ? *detail_.stake_play_info_bin_
      : ::proto::HomeStakeRecordBin::default_instance();
}
::proto::HomeStakeRecordBin* HomeGroupRecordBin::mutable_stake_play_info_bin() {
  if (!has_stake_play_info_bin()) {
    clear_detail();
    set_has_stake_play_info_bin();
    detail_.stake_play_info_bin_ = new ::proto::HomeStakeRecordBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeGroupRecordBin.stake_play_info_bin)
  return detail_.stake_play_info_bin_;
}
::proto::HomeStakeRecordBin* HomeGroupRecordBin::release_stake_play_info_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeGroupRecordBin.stake_play_info_bin)
  if (has_stake_play_info_bin()) {
    clear_has_detail();
    ::proto::HomeStakeRecordBin* temp = detail_.stake_play_info_bin_;
    detail_.stake_play_info_bin_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void HomeGroupRecordBin::set_allocated_stake_play_info_bin(::proto::HomeStakeRecordBin* stake_play_info_bin) {
  clear_detail();
  if (stake_play_info_bin) {
    set_has_stake_play_info_bin();
    detail_.stake_play_info_bin_ = stake_play_info_bin;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeGroupRecordBin.stake_play_info_bin)
}

// .proto.HomeSeekFurnitureAllRecordBin seek_furniture_play_info_bin = 14;
bool HomeGroupRecordBin::has_seek_furniture_play_info_bin() const {
  return detail_case() == kSeekFurniturePlayInfoBin;
}
void HomeGroupRecordBin::set_has_seek_furniture_play_info_bin() {
  _oneof_case_[0] = kSeekFurniturePlayInfoBin;
}
void HomeGroupRecordBin::clear_seek_furniture_play_info_bin() {
  if (has_seek_furniture_play_info_bin()) {
    delete detail_.seek_furniture_play_info_bin_;
    clear_has_detail();
  }
}
 const ::proto::HomeSeekFurnitureAllRecordBin& HomeGroupRecordBin::seek_furniture_play_info_bin() const {
  // @@protoc_insertion_point(field_get:proto.HomeGroupRecordBin.seek_furniture_play_info_bin)
  return has_seek_furniture_play_info_bin()
      ? *detail_.seek_furniture_play_info_bin_
      : ::proto::HomeSeekFurnitureAllRecordBin::default_instance();
}
::proto::HomeSeekFurnitureAllRecordBin* HomeGroupRecordBin::mutable_seek_furniture_play_info_bin() {
  if (!has_seek_furniture_play_info_bin()) {
    clear_detail();
    set_has_seek_furniture_play_info_bin();
    detail_.seek_furniture_play_info_bin_ = new ::proto::HomeSeekFurnitureAllRecordBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeGroupRecordBin.seek_furniture_play_info_bin)
  return detail_.seek_furniture_play_info_bin_;
}
::proto::HomeSeekFurnitureAllRecordBin* HomeGroupRecordBin::release_seek_furniture_play_info_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeGroupRecordBin.seek_furniture_play_info_bin)
  if (has_seek_furniture_play_info_bin()) {
    clear_has_detail();
    ::proto::HomeSeekFurnitureAllRecordBin* temp = detail_.seek_furniture_play_info_bin_;
    detail_.seek_furniture_play_info_bin_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void HomeGroupRecordBin::set_allocated_seek_furniture_play_info_bin(::proto::HomeSeekFurnitureAllRecordBin* seek_furniture_play_info_bin) {
  clear_detail();
  if (seek_furniture_play_info_bin) {
    set_has_seek_furniture_play_info_bin();
    detail_.seek_furniture_play_info_bin_ = seek_furniture_play_info_bin;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeGroupRecordBin.seek_furniture_play_info_bin)
}

bool HomeGroupRecordBin::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
void HomeGroupRecordBin::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
HomeGroupRecordBin::DetailCase HomeGroupRecordBin::detail_case() const {
  return HomeGroupRecordBin::DetailCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

HomeGroupRecordCompBin::HomeGroupRecordCompBin_GroupRecordMapBinEntry::HomeGroupRecordCompBin_GroupRecordMapBinEntry() {}
HomeGroupRecordCompBin::HomeGroupRecordCompBin_GroupRecordMapBinEntry::HomeGroupRecordCompBin_GroupRecordMapBinEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata HomeGroupRecordCompBin::HomeGroupRecordCompBin_GroupRecordMapBinEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[45];
}
void HomeGroupRecordCompBin::HomeGroupRecordCompBin_GroupRecordMapBinEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void HomeGroupRecordCompBin::HomeGroupRecordCompBin_GroupRecordMapBinEntry::MergeFrom(const HomeGroupRecordCompBin_GroupRecordMapBinEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeGroupRecordCompBin::kGroupRecordMapBinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeGroupRecordCompBin::HomeGroupRecordCompBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeGroupRecordCompBin)
}
HomeGroupRecordCompBin::HomeGroupRecordCompBin(const HomeGroupRecordCompBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_record_map_bin_.MergeFrom(from.group_record_map_bin_);
  // @@protoc_insertion_point(copy_constructor:proto.HomeGroupRecordCompBin)
}

void HomeGroupRecordCompBin::SharedCtor() {
  _cached_size_ = 0;
}

HomeGroupRecordCompBin::~HomeGroupRecordCompBin() {
  // @@protoc_insertion_point(destructor:proto.HomeGroupRecordCompBin)
  SharedDtor();
}

void HomeGroupRecordCompBin::SharedDtor() {
}

void HomeGroupRecordCompBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeGroupRecordCompBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeGroupRecordCompBin& HomeGroupRecordCompBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeGroupRecordCompBin* HomeGroupRecordCompBin::New(::google::protobuf::Arena* arena) const {
  HomeGroupRecordCompBin* n = new HomeGroupRecordCompBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeGroupRecordCompBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeGroupRecordCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_record_map_bin_.Clear();
  _internal_metadata_.Clear();
}

bool HomeGroupRecordCompBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeGroupRecordCompBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, .proto.HomeGroupRecordBin> group_record_map_bin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          HomeGroupRecordCompBin_GroupRecordMapBinEntry::Parser< ::google::protobuf::internal::MapField<
              HomeGroupRecordCompBin_GroupRecordMapBinEntry,
              ::google::protobuf::uint32, ::proto::HomeGroupRecordBin,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::HomeGroupRecordBin > > parser(&group_record_map_bin_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeGroupRecordCompBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeGroupRecordCompBin)
  return false;
#undef DO_
}

void HomeGroupRecordCompBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeGroupRecordCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .proto.HomeGroupRecordBin> group_record_map_bin = 1;
  if (!this->group_record_map_bin().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::HomeGroupRecordBin >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->group_record_map_bin().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->group_record_map_bin().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::HomeGroupRecordBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::HomeGroupRecordBin >::const_iterator
          it = this->group_record_map_bin().begin();
          it != this->group_record_map_bin().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<HomeGroupRecordCompBin_GroupRecordMapBinEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(group_record_map_bin_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<HomeGroupRecordCompBin_GroupRecordMapBinEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::HomeGroupRecordBin >::const_iterator
          it = this->group_record_map_bin().begin();
          it != this->group_record_map_bin().end(); ++it) {
        entry.reset(group_record_map_bin_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeGroupRecordCompBin)
}

::google::protobuf::uint8* HomeGroupRecordCompBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeGroupRecordCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .proto.HomeGroupRecordBin> group_record_map_bin = 1;
  if (!this->group_record_map_bin().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::HomeGroupRecordBin >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->group_record_map_bin().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->group_record_map_bin().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::HomeGroupRecordBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::HomeGroupRecordBin >::const_iterator
          it = this->group_record_map_bin().begin();
          it != this->group_record_map_bin().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<HomeGroupRecordCompBin_GroupRecordMapBinEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(group_record_map_bin_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<HomeGroupRecordCompBin_GroupRecordMapBinEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::HomeGroupRecordBin >::const_iterator
          it = this->group_record_map_bin().begin();
          it != this->group_record_map_bin().end(); ++it) {
        entry.reset(group_record_map_bin_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeGroupRecordCompBin)
  return target;
}

size_t HomeGroupRecordCompBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeGroupRecordCompBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, .proto.HomeGroupRecordBin> group_record_map_bin = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->group_record_map_bin_size());
  {
    ::google::protobuf::scoped_ptr<HomeGroupRecordCompBin_GroupRecordMapBinEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::HomeGroupRecordBin >::const_iterator
        it = this->group_record_map_bin().begin();
        it != this->group_record_map_bin().end(); ++it) {
      entry.reset(group_record_map_bin_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeGroupRecordCompBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeGroupRecordCompBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeGroupRecordCompBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeGroupRecordCompBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeGroupRecordCompBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeGroupRecordCompBin)
    MergeFrom(*source);
  }
}

void HomeGroupRecordCompBin::MergeFrom(const HomeGroupRecordCompBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeGroupRecordCompBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  group_record_map_bin_.MergeFrom(from.group_record_map_bin_);
}

void HomeGroupRecordCompBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeGroupRecordCompBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeGroupRecordCompBin::CopyFrom(const HomeGroupRecordCompBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeGroupRecordCompBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeGroupRecordCompBin::IsInitialized() const {
  return true;
}

void HomeGroupRecordCompBin::Swap(HomeGroupRecordCompBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeGroupRecordCompBin::InternalSwap(HomeGroupRecordCompBin* other) {
  using std::swap;
  group_record_map_bin_.Swap(&other->group_record_map_bin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeGroupRecordCompBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeGroupRecordCompBin

// map<uint32, .proto.HomeGroupRecordBin> group_record_map_bin = 1;
int HomeGroupRecordCompBin::group_record_map_bin_size() const {
  return group_record_map_bin_.size();
}
void HomeGroupRecordCompBin::clear_group_record_map_bin() {
  group_record_map_bin_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::HomeGroupRecordBin >&
HomeGroupRecordCompBin::group_record_map_bin() const {
  // @@protoc_insertion_point(field_map:proto.HomeGroupRecordCompBin.group_record_map_bin)
  return group_record_map_bin_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::HomeGroupRecordBin >*
HomeGroupRecordCompBin::mutable_group_record_map_bin() {
  // @@protoc_insertion_point(field_mutable_map:proto.HomeGroupRecordCompBin.group_record_map_bin)
  return group_record_map_bin_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeBlueprintCompBin::kIsAllowFriendCopyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeBlueprintCompBin::HomeBlueprintCompBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeBlueprintCompBin)
}
HomeBlueprintCompBin::HomeBlueprintCompBin(const HomeBlueprintCompBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_allow_friend_copy_ = from.is_allow_friend_copy_;
  // @@protoc_insertion_point(copy_constructor:proto.HomeBlueprintCompBin)
}

void HomeBlueprintCompBin::SharedCtor() {
  is_allow_friend_copy_ = false;
  _cached_size_ = 0;
}

HomeBlueprintCompBin::~HomeBlueprintCompBin() {
  // @@protoc_insertion_point(destructor:proto.HomeBlueprintCompBin)
  SharedDtor();
}

void HomeBlueprintCompBin::SharedDtor() {
}

void HomeBlueprintCompBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeBlueprintCompBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeBlueprintCompBin& HomeBlueprintCompBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeBlueprintCompBin* HomeBlueprintCompBin::New(::google::protobuf::Arena* arena) const {
  HomeBlueprintCompBin* n = new HomeBlueprintCompBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeBlueprintCompBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeBlueprintCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_allow_friend_copy_ = false;
  _internal_metadata_.Clear();
}

bool HomeBlueprintCompBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeBlueprintCompBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_allow_friend_copy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_allow_friend_copy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeBlueprintCompBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeBlueprintCompBin)
  return false;
#undef DO_
}

void HomeBlueprintCompBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeBlueprintCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_allow_friend_copy = 1;
  if (this->is_allow_friend_copy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_allow_friend_copy(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeBlueprintCompBin)
}

::google::protobuf::uint8* HomeBlueprintCompBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeBlueprintCompBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_allow_friend_copy = 1;
  if (this->is_allow_friend_copy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_allow_friend_copy(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeBlueprintCompBin)
  return target;
}

size_t HomeBlueprintCompBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeBlueprintCompBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_allow_friend_copy = 1;
  if (this->is_allow_friend_copy() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeBlueprintCompBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeBlueprintCompBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeBlueprintCompBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeBlueprintCompBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeBlueprintCompBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeBlueprintCompBin)
    MergeFrom(*source);
  }
}

void HomeBlueprintCompBin::MergeFrom(const HomeBlueprintCompBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeBlueprintCompBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_allow_friend_copy() != 0) {
    set_is_allow_friend_copy(from.is_allow_friend_copy());
  }
}

void HomeBlueprintCompBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeBlueprintCompBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeBlueprintCompBin::CopyFrom(const HomeBlueprintCompBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeBlueprintCompBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeBlueprintCompBin::IsInitialized() const {
  return true;
}

void HomeBlueprintCompBin::Swap(HomeBlueprintCompBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeBlueprintCompBin::InternalSwap(HomeBlueprintCompBin* other) {
  using std::swap;
  swap(is_allow_friend_copy_, other->is_allow_friend_copy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeBlueprintCompBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeBlueprintCompBin

// bool is_allow_friend_copy = 1;
void HomeBlueprintCompBin::clear_is_allow_friend_copy() {
  is_allow_friend_copy_ = false;
}
bool HomeBlueprintCompBin::is_allow_friend_copy() const {
  // @@protoc_insertion_point(field_get:proto.HomeBlueprintCompBin.is_allow_friend_copy)
  return is_allow_friend_copy_;
}
void HomeBlueprintCompBin::set_is_allow_friend_copy(bool value) {
  
  is_allow_friend_copy_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBlueprintCompBin.is_allow_friend_copy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeDataBin::kBasicBinFieldNumber;
const int HomeDataBin::kSceneBinFieldNumber;
const int HomeDataBin::kOfflineMsgBinFieldNumber;
const int HomeDataBin::kFurnitureMakeBinFieldNumber;
const int HomeDataBin::kLimitedShopBinFieldNumber;
const int HomeDataBin::kPlantBinFieldNumber;
const int HomeDataBin::kFishFarmingBinFieldNumber;
const int HomeDataBin::kCustomFurnitureBinFieldNumber;
const int HomeDataBin::kPictureFrameBinFieldNumber;
const int HomeDataBin::kGroupRecordBinFieldNumber;
const int HomeDataBin::kBlueprintBinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeDataBin::HomeDataBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeDataBin)
}
HomeDataBin::HomeDataBin(const HomeDataBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basic_bin()) {
    basic_bin_ = new ::proto::HomeBasicCompBin(*from.basic_bin_);
  } else {
    basic_bin_ = NULL;
  }
  if (from.has_scene_bin()) {
    scene_bin_ = new ::proto::HomeSceneCompBin(*from.scene_bin_);
  } else {
    scene_bin_ = NULL;
  }
  if (from.has_offline_msg_bin()) {
    offline_msg_bin_ = new ::proto::HomeOfflineMsgCompBin(*from.offline_msg_bin_);
  } else {
    offline_msg_bin_ = NULL;
  }
  if (from.has_furniture_make_bin()) {
    furniture_make_bin_ = new ::proto::HomeFurnitureMakeBin(*from.furniture_make_bin_);
  } else {
    furniture_make_bin_ = NULL;
  }
  if (from.has_limited_shop_bin()) {
    limited_shop_bin_ = new ::proto::HomeLimitedShopBin(*from.limited_shop_bin_);
  } else {
    limited_shop_bin_ = NULL;
  }
  if (from.has_plant_bin()) {
    plant_bin_ = new ::proto::HomePlantBin(*from.plant_bin_);
  } else {
    plant_bin_ = NULL;
  }
  if (from.has_fish_farming_bin()) {
    fish_farming_bin_ = new ::proto::HomeFishFarmingBin(*from.fish_farming_bin_);
  } else {
    fish_farming_bin_ = NULL;
  }
  if (from.has_custom_furniture_bin()) {
    custom_furniture_bin_ = new ::proto::HomeCustomFurnitureBin(*from.custom_furniture_bin_);
  } else {
    custom_furniture_bin_ = NULL;
  }
  if (from.has_picture_frame_bin()) {
    picture_frame_bin_ = new ::proto::HomePictureFrameBin(*from.picture_frame_bin_);
  } else {
    picture_frame_bin_ = NULL;
  }
  if (from.has_group_record_bin()) {
    group_record_bin_ = new ::proto::HomeGroupRecordCompBin(*from.group_record_bin_);
  } else {
    group_record_bin_ = NULL;
  }
  if (from.has_blueprint_bin()) {
    blueprint_bin_ = new ::proto::HomeBlueprintCompBin(*from.blueprint_bin_);
  } else {
    blueprint_bin_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.HomeDataBin)
}

void HomeDataBin::SharedCtor() {
  ::memset(&basic_bin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&blueprint_bin_) -
      reinterpret_cast<char*>(&basic_bin_)) + sizeof(blueprint_bin_));
  _cached_size_ = 0;
}

HomeDataBin::~HomeDataBin() {
  // @@protoc_insertion_point(destructor:proto.HomeDataBin)
  SharedDtor();
}

void HomeDataBin::SharedDtor() {
  if (this != internal_default_instance()) delete basic_bin_;
  if (this != internal_default_instance()) delete scene_bin_;
  if (this != internal_default_instance()) delete offline_msg_bin_;
  if (this != internal_default_instance()) delete furniture_make_bin_;
  if (this != internal_default_instance()) delete limited_shop_bin_;
  if (this != internal_default_instance()) delete plant_bin_;
  if (this != internal_default_instance()) delete fish_farming_bin_;
  if (this != internal_default_instance()) delete custom_furniture_bin_;
  if (this != internal_default_instance()) delete picture_frame_bin_;
  if (this != internal_default_instance()) delete group_record_bin_;
  if (this != internal_default_instance()) delete blueprint_bin_;
}

void HomeDataBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeDataBin::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeDataBin& HomeDataBin::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeDataBin* HomeDataBin::New(::google::protobuf::Arena* arena) const {
  HomeDataBin* n = new HomeDataBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeDataBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeDataBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && basic_bin_ != NULL) {
    delete basic_bin_;
  }
  basic_bin_ = NULL;
  if (GetArenaNoVirtual() == NULL && scene_bin_ != NULL) {
    delete scene_bin_;
  }
  scene_bin_ = NULL;
  if (GetArenaNoVirtual() == NULL && offline_msg_bin_ != NULL) {
    delete offline_msg_bin_;
  }
  offline_msg_bin_ = NULL;
  if (GetArenaNoVirtual() == NULL && furniture_make_bin_ != NULL) {
    delete furniture_make_bin_;
  }
  furniture_make_bin_ = NULL;
  if (GetArenaNoVirtual() == NULL && limited_shop_bin_ != NULL) {
    delete limited_shop_bin_;
  }
  limited_shop_bin_ = NULL;
  if (GetArenaNoVirtual() == NULL && plant_bin_ != NULL) {
    delete plant_bin_;
  }
  plant_bin_ = NULL;
  if (GetArenaNoVirtual() == NULL && fish_farming_bin_ != NULL) {
    delete fish_farming_bin_;
  }
  fish_farming_bin_ = NULL;
  if (GetArenaNoVirtual() == NULL && custom_furniture_bin_ != NULL) {
    delete custom_furniture_bin_;
  }
  custom_furniture_bin_ = NULL;
  if (GetArenaNoVirtual() == NULL && picture_frame_bin_ != NULL) {
    delete picture_frame_bin_;
  }
  picture_frame_bin_ = NULL;
  if (GetArenaNoVirtual() == NULL && group_record_bin_ != NULL) {
    delete group_record_bin_;
  }
  group_record_bin_ = NULL;
  if (GetArenaNoVirtual() == NULL && blueprint_bin_ != NULL) {
    delete blueprint_bin_;
  }
  blueprint_bin_ = NULL;
  _internal_metadata_.Clear();
}

bool HomeDataBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeDataBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.HomeBasicCompBin basic_bin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.HomeSceneCompBin scene_bin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_scene_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.HomeOfflineMsgCompBin offline_msg_bin = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_offline_msg_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.HomeFurnitureMakeBin furniture_make_bin = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_furniture_make_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.HomeLimitedShopBin limited_shop_bin = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_limited_shop_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.HomePlantBin plant_bin = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_plant_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.HomeFishFarmingBin fish_farming_bin = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fish_farming_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.HomeCustomFurnitureBin custom_furniture_bin = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_custom_furniture_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.HomePictureFrameBin picture_frame_bin = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_picture_frame_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.HomeGroupRecordCompBin group_record_bin = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_group_record_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.HomeBlueprintCompBin blueprint_bin = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_blueprint_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeDataBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeDataBin)
  return false;
#undef DO_
}

void HomeDataBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeDataBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.HomeBasicCompBin basic_bin = 1;
  if (this->has_basic_bin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->basic_bin_, output);
  }

  // .proto.HomeSceneCompBin scene_bin = 2;
  if (this->has_scene_bin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->scene_bin_, output);
  }

  // .proto.HomeOfflineMsgCompBin offline_msg_bin = 3;
  if (this->has_offline_msg_bin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->offline_msg_bin_, output);
  }

  // .proto.HomeFurnitureMakeBin furniture_make_bin = 4;
  if (this->has_furniture_make_bin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->furniture_make_bin_, output);
  }

  // .proto.HomeLimitedShopBin limited_shop_bin = 5;
  if (this->has_limited_shop_bin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->limited_shop_bin_, output);
  }

  // .proto.HomePlantBin plant_bin = 6;
  if (this->has_plant_bin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->plant_bin_, output);
  }

  // .proto.HomeFishFarmingBin fish_farming_bin = 7;
  if (this->has_fish_farming_bin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->fish_farming_bin_, output);
  }

  // .proto.HomeCustomFurnitureBin custom_furniture_bin = 8;
  if (this->has_custom_furniture_bin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->custom_furniture_bin_, output);
  }

  // .proto.HomePictureFrameBin picture_frame_bin = 9;
  if (this->has_picture_frame_bin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->picture_frame_bin_, output);
  }

  // .proto.HomeGroupRecordCompBin group_record_bin = 10;
  if (this->has_group_record_bin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->group_record_bin_, output);
  }

  // .proto.HomeBlueprintCompBin blueprint_bin = 11;
  if (this->has_blueprint_bin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->blueprint_bin_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeDataBin)
}

::google::protobuf::uint8* HomeDataBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeDataBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.HomeBasicCompBin basic_bin = 1;
  if (this->has_basic_bin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->basic_bin_, deterministic, target);
  }

  // .proto.HomeSceneCompBin scene_bin = 2;
  if (this->has_scene_bin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->scene_bin_, deterministic, target);
  }

  // .proto.HomeOfflineMsgCompBin offline_msg_bin = 3;
  if (this->has_offline_msg_bin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->offline_msg_bin_, deterministic, target);
  }

  // .proto.HomeFurnitureMakeBin furniture_make_bin = 4;
  if (this->has_furniture_make_bin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->furniture_make_bin_, deterministic, target);
  }

  // .proto.HomeLimitedShopBin limited_shop_bin = 5;
  if (this->has_limited_shop_bin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->limited_shop_bin_, deterministic, target);
  }

  // .proto.HomePlantBin plant_bin = 6;
  if (this->has_plant_bin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->plant_bin_, deterministic, target);
  }

  // .proto.HomeFishFarmingBin fish_farming_bin = 7;
  if (this->has_fish_farming_bin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->fish_farming_bin_, deterministic, target);
  }

  // .proto.HomeCustomFurnitureBin custom_furniture_bin = 8;
  if (this->has_custom_furniture_bin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->custom_furniture_bin_, deterministic, target);
  }

  // .proto.HomePictureFrameBin picture_frame_bin = 9;
  if (this->has_picture_frame_bin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->picture_frame_bin_, deterministic, target);
  }

  // .proto.HomeGroupRecordCompBin group_record_bin = 10;
  if (this->has_group_record_bin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->group_record_bin_, deterministic, target);
  }

  // .proto.HomeBlueprintCompBin blueprint_bin = 11;
  if (this->has_blueprint_bin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->blueprint_bin_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeDataBin)
  return target;
}

size_t HomeDataBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeDataBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.HomeBasicCompBin basic_bin = 1;
  if (this->has_basic_bin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->basic_bin_);
  }

  // .proto.HomeSceneCompBin scene_bin = 2;
  if (this->has_scene_bin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->scene_bin_);
  }

  // .proto.HomeOfflineMsgCompBin offline_msg_bin = 3;
  if (this->has_offline_msg_bin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->offline_msg_bin_);
  }

  // .proto.HomeFurnitureMakeBin furniture_make_bin = 4;
  if (this->has_furniture_make_bin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->furniture_make_bin_);
  }

  // .proto.HomeLimitedShopBin limited_shop_bin = 5;
  if (this->has_limited_shop_bin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->limited_shop_bin_);
  }

  // .proto.HomePlantBin plant_bin = 6;
  if (this->has_plant_bin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->plant_bin_);
  }

  // .proto.HomeFishFarmingBin fish_farming_bin = 7;
  if (this->has_fish_farming_bin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->fish_farming_bin_);
  }

  // .proto.HomeCustomFurnitureBin custom_furniture_bin = 8;
  if (this->has_custom_furniture_bin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->custom_furniture_bin_);
  }

  // .proto.HomePictureFrameBin picture_frame_bin = 9;
  if (this->has_picture_frame_bin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->picture_frame_bin_);
  }

  // .proto.HomeGroupRecordCompBin group_record_bin = 10;
  if (this->has_group_record_bin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->group_record_bin_);
  }

  // .proto.HomeBlueprintCompBin blueprint_bin = 11;
  if (this->has_blueprint_bin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->blueprint_bin_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeDataBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeDataBin)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeDataBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeDataBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeDataBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeDataBin)
    MergeFrom(*source);
  }
}

void HomeDataBin::MergeFrom(const HomeDataBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeDataBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_basic_bin()) {
    mutable_basic_bin()->::proto::HomeBasicCompBin::MergeFrom(from.basic_bin());
  }
  if (from.has_scene_bin()) {
    mutable_scene_bin()->::proto::HomeSceneCompBin::MergeFrom(from.scene_bin());
  }
  if (from.has_offline_msg_bin()) {
    mutable_offline_msg_bin()->::proto::HomeOfflineMsgCompBin::MergeFrom(from.offline_msg_bin());
  }
  if (from.has_furniture_make_bin()) {
    mutable_furniture_make_bin()->::proto::HomeFurnitureMakeBin::MergeFrom(from.furniture_make_bin());
  }
  if (from.has_limited_shop_bin()) {
    mutable_limited_shop_bin()->::proto::HomeLimitedShopBin::MergeFrom(from.limited_shop_bin());
  }
  if (from.has_plant_bin()) {
    mutable_plant_bin()->::proto::HomePlantBin::MergeFrom(from.plant_bin());
  }
  if (from.has_fish_farming_bin()) {
    mutable_fish_farming_bin()->::proto::HomeFishFarmingBin::MergeFrom(from.fish_farming_bin());
  }
  if (from.has_custom_furniture_bin()) {
    mutable_custom_furniture_bin()->::proto::HomeCustomFurnitureBin::MergeFrom(from.custom_furniture_bin());
  }
  if (from.has_picture_frame_bin()) {
    mutable_picture_frame_bin()->::proto::HomePictureFrameBin::MergeFrom(from.picture_frame_bin());
  }
  if (from.has_group_record_bin()) {
    mutable_group_record_bin()->::proto::HomeGroupRecordCompBin::MergeFrom(from.group_record_bin());
  }
  if (from.has_blueprint_bin()) {
    mutable_blueprint_bin()->::proto::HomeBlueprintCompBin::MergeFrom(from.blueprint_bin());
  }
}

void HomeDataBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeDataBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeDataBin::CopyFrom(const HomeDataBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeDataBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeDataBin::IsInitialized() const {
  return true;
}

void HomeDataBin::Swap(HomeDataBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeDataBin::InternalSwap(HomeDataBin* other) {
  using std::swap;
  swap(basic_bin_, other->basic_bin_);
  swap(scene_bin_, other->scene_bin_);
  swap(offline_msg_bin_, other->offline_msg_bin_);
  swap(furniture_make_bin_, other->furniture_make_bin_);
  swap(limited_shop_bin_, other->limited_shop_bin_);
  swap(plant_bin_, other->plant_bin_);
  swap(fish_farming_bin_, other->fish_farming_bin_);
  swap(custom_furniture_bin_, other->custom_furniture_bin_);
  swap(picture_frame_bin_, other->picture_frame_bin_);
  swap(group_record_bin_, other->group_record_bin_);
  swap(blueprint_bin_, other->blueprint_bin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeDataBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeDataBin

// .proto.HomeBasicCompBin basic_bin = 1;
bool HomeDataBin::has_basic_bin() const {
  return this != internal_default_instance() && basic_bin_ != NULL;
}
void HomeDataBin::clear_basic_bin() {
  if (GetArenaNoVirtual() == NULL && basic_bin_ != NULL) delete basic_bin_;
  basic_bin_ = NULL;
}
const ::proto::HomeBasicCompBin& HomeDataBin::basic_bin() const {
  const ::proto::HomeBasicCompBin* p = basic_bin_;
  // @@protoc_insertion_point(field_get:proto.HomeDataBin.basic_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeBasicCompBin*>(
      &::proto::_HomeBasicCompBin_default_instance_);
}
::proto::HomeBasicCompBin* HomeDataBin::mutable_basic_bin() {
  
  if (basic_bin_ == NULL) {
    basic_bin_ = new ::proto::HomeBasicCompBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeDataBin.basic_bin)
  return basic_bin_;
}
::proto::HomeBasicCompBin* HomeDataBin::release_basic_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeDataBin.basic_bin)
  
  ::proto::HomeBasicCompBin* temp = basic_bin_;
  basic_bin_ = NULL;
  return temp;
}
void HomeDataBin::set_allocated_basic_bin(::proto::HomeBasicCompBin* basic_bin) {
  delete basic_bin_;
  basic_bin_ = basic_bin;
  if (basic_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeDataBin.basic_bin)
}

// .proto.HomeSceneCompBin scene_bin = 2;
bool HomeDataBin::has_scene_bin() const {
  return this != internal_default_instance() && scene_bin_ != NULL;
}
void HomeDataBin::clear_scene_bin() {
  if (GetArenaNoVirtual() == NULL && scene_bin_ != NULL) delete scene_bin_;
  scene_bin_ = NULL;
}
const ::proto::HomeSceneCompBin& HomeDataBin::scene_bin() const {
  const ::proto::HomeSceneCompBin* p = scene_bin_;
  // @@protoc_insertion_point(field_get:proto.HomeDataBin.scene_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeSceneCompBin*>(
      &::proto::_HomeSceneCompBin_default_instance_);
}
::proto::HomeSceneCompBin* HomeDataBin::mutable_scene_bin() {
  
  if (scene_bin_ == NULL) {
    scene_bin_ = new ::proto::HomeSceneCompBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeDataBin.scene_bin)
  return scene_bin_;
}
::proto::HomeSceneCompBin* HomeDataBin::release_scene_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeDataBin.scene_bin)
  
  ::proto::HomeSceneCompBin* temp = scene_bin_;
  scene_bin_ = NULL;
  return temp;
}
void HomeDataBin::set_allocated_scene_bin(::proto::HomeSceneCompBin* scene_bin) {
  delete scene_bin_;
  scene_bin_ = scene_bin;
  if (scene_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeDataBin.scene_bin)
}

// .proto.HomeOfflineMsgCompBin offline_msg_bin = 3;
bool HomeDataBin::has_offline_msg_bin() const {
  return this != internal_default_instance() && offline_msg_bin_ != NULL;
}
void HomeDataBin::clear_offline_msg_bin() {
  if (GetArenaNoVirtual() == NULL && offline_msg_bin_ != NULL) delete offline_msg_bin_;
  offline_msg_bin_ = NULL;
}
const ::proto::HomeOfflineMsgCompBin& HomeDataBin::offline_msg_bin() const {
  const ::proto::HomeOfflineMsgCompBin* p = offline_msg_bin_;
  // @@protoc_insertion_point(field_get:proto.HomeDataBin.offline_msg_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeOfflineMsgCompBin*>(
      &::proto::_HomeOfflineMsgCompBin_default_instance_);
}
::proto::HomeOfflineMsgCompBin* HomeDataBin::mutable_offline_msg_bin() {
  
  if (offline_msg_bin_ == NULL) {
    offline_msg_bin_ = new ::proto::HomeOfflineMsgCompBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeDataBin.offline_msg_bin)
  return offline_msg_bin_;
}
::proto::HomeOfflineMsgCompBin* HomeDataBin::release_offline_msg_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeDataBin.offline_msg_bin)
  
  ::proto::HomeOfflineMsgCompBin* temp = offline_msg_bin_;
  offline_msg_bin_ = NULL;
  return temp;
}
void HomeDataBin::set_allocated_offline_msg_bin(::proto::HomeOfflineMsgCompBin* offline_msg_bin) {
  delete offline_msg_bin_;
  offline_msg_bin_ = offline_msg_bin;
  if (offline_msg_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeDataBin.offline_msg_bin)
}

// .proto.HomeFurnitureMakeBin furniture_make_bin = 4;
bool HomeDataBin::has_furniture_make_bin() const {
  return this != internal_default_instance() && furniture_make_bin_ != NULL;
}
void HomeDataBin::clear_furniture_make_bin() {
  if (GetArenaNoVirtual() == NULL && furniture_make_bin_ != NULL) delete furniture_make_bin_;
  furniture_make_bin_ = NULL;
}
const ::proto::HomeFurnitureMakeBin& HomeDataBin::furniture_make_bin() const {
  const ::proto::HomeFurnitureMakeBin* p = furniture_make_bin_;
  // @@protoc_insertion_point(field_get:proto.HomeDataBin.furniture_make_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeFurnitureMakeBin*>(
      &::proto::_HomeFurnitureMakeBin_default_instance_);
}
::proto::HomeFurnitureMakeBin* HomeDataBin::mutable_furniture_make_bin() {
  
  if (furniture_make_bin_ == NULL) {
    furniture_make_bin_ = new ::proto::HomeFurnitureMakeBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeDataBin.furniture_make_bin)
  return furniture_make_bin_;
}
::proto::HomeFurnitureMakeBin* HomeDataBin::release_furniture_make_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeDataBin.furniture_make_bin)
  
  ::proto::HomeFurnitureMakeBin* temp = furniture_make_bin_;
  furniture_make_bin_ = NULL;
  return temp;
}
void HomeDataBin::set_allocated_furniture_make_bin(::proto::HomeFurnitureMakeBin* furniture_make_bin) {
  delete furniture_make_bin_;
  furniture_make_bin_ = furniture_make_bin;
  if (furniture_make_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeDataBin.furniture_make_bin)
}

// .proto.HomeLimitedShopBin limited_shop_bin = 5;
bool HomeDataBin::has_limited_shop_bin() const {
  return this != internal_default_instance() && limited_shop_bin_ != NULL;
}
void HomeDataBin::clear_limited_shop_bin() {
  if (GetArenaNoVirtual() == NULL && limited_shop_bin_ != NULL) delete limited_shop_bin_;
  limited_shop_bin_ = NULL;
}
const ::proto::HomeLimitedShopBin& HomeDataBin::limited_shop_bin() const {
  const ::proto::HomeLimitedShopBin* p = limited_shop_bin_;
  // @@protoc_insertion_point(field_get:proto.HomeDataBin.limited_shop_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeLimitedShopBin*>(
      &::proto::_HomeLimitedShopBin_default_instance_);
}
::proto::HomeLimitedShopBin* HomeDataBin::mutable_limited_shop_bin() {
  
  if (limited_shop_bin_ == NULL) {
    limited_shop_bin_ = new ::proto::HomeLimitedShopBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeDataBin.limited_shop_bin)
  return limited_shop_bin_;
}
::proto::HomeLimitedShopBin* HomeDataBin::release_limited_shop_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeDataBin.limited_shop_bin)
  
  ::proto::HomeLimitedShopBin* temp = limited_shop_bin_;
  limited_shop_bin_ = NULL;
  return temp;
}
void HomeDataBin::set_allocated_limited_shop_bin(::proto::HomeLimitedShopBin* limited_shop_bin) {
  delete limited_shop_bin_;
  limited_shop_bin_ = limited_shop_bin;
  if (limited_shop_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeDataBin.limited_shop_bin)
}

// .proto.HomePlantBin plant_bin = 6;
bool HomeDataBin::has_plant_bin() const {
  return this != internal_default_instance() && plant_bin_ != NULL;
}
void HomeDataBin::clear_plant_bin() {
  if (GetArenaNoVirtual() == NULL && plant_bin_ != NULL) delete plant_bin_;
  plant_bin_ = NULL;
}
const ::proto::HomePlantBin& HomeDataBin::plant_bin() const {
  const ::proto::HomePlantBin* p = plant_bin_;
  // @@protoc_insertion_point(field_get:proto.HomeDataBin.plant_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomePlantBin*>(
      &::proto::_HomePlantBin_default_instance_);
}
::proto::HomePlantBin* HomeDataBin::mutable_plant_bin() {
  
  if (plant_bin_ == NULL) {
    plant_bin_ = new ::proto::HomePlantBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeDataBin.plant_bin)
  return plant_bin_;
}
::proto::HomePlantBin* HomeDataBin::release_plant_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeDataBin.plant_bin)
  
  ::proto::HomePlantBin* temp = plant_bin_;
  plant_bin_ = NULL;
  return temp;
}
void HomeDataBin::set_allocated_plant_bin(::proto::HomePlantBin* plant_bin) {
  delete plant_bin_;
  plant_bin_ = plant_bin;
  if (plant_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeDataBin.plant_bin)
}

// .proto.HomeFishFarmingBin fish_farming_bin = 7;
bool HomeDataBin::has_fish_farming_bin() const {
  return this != internal_default_instance() && fish_farming_bin_ != NULL;
}
void HomeDataBin::clear_fish_farming_bin() {
  if (GetArenaNoVirtual() == NULL && fish_farming_bin_ != NULL) delete fish_farming_bin_;
  fish_farming_bin_ = NULL;
}
const ::proto::HomeFishFarmingBin& HomeDataBin::fish_farming_bin() const {
  const ::proto::HomeFishFarmingBin* p = fish_farming_bin_;
  // @@protoc_insertion_point(field_get:proto.HomeDataBin.fish_farming_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeFishFarmingBin*>(
      &::proto::_HomeFishFarmingBin_default_instance_);
}
::proto::HomeFishFarmingBin* HomeDataBin::mutable_fish_farming_bin() {
  
  if (fish_farming_bin_ == NULL) {
    fish_farming_bin_ = new ::proto::HomeFishFarmingBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeDataBin.fish_farming_bin)
  return fish_farming_bin_;
}
::proto::HomeFishFarmingBin* HomeDataBin::release_fish_farming_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeDataBin.fish_farming_bin)
  
  ::proto::HomeFishFarmingBin* temp = fish_farming_bin_;
  fish_farming_bin_ = NULL;
  return temp;
}
void HomeDataBin::set_allocated_fish_farming_bin(::proto::HomeFishFarmingBin* fish_farming_bin) {
  delete fish_farming_bin_;
  fish_farming_bin_ = fish_farming_bin;
  if (fish_farming_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeDataBin.fish_farming_bin)
}

// .proto.HomeCustomFurnitureBin custom_furniture_bin = 8;
bool HomeDataBin::has_custom_furniture_bin() const {
  return this != internal_default_instance() && custom_furniture_bin_ != NULL;
}
void HomeDataBin::clear_custom_furniture_bin() {
  if (GetArenaNoVirtual() == NULL && custom_furniture_bin_ != NULL) delete custom_furniture_bin_;
  custom_furniture_bin_ = NULL;
}
const ::proto::HomeCustomFurnitureBin& HomeDataBin::custom_furniture_bin() const {
  const ::proto::HomeCustomFurnitureBin* p = custom_furniture_bin_;
  // @@protoc_insertion_point(field_get:proto.HomeDataBin.custom_furniture_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeCustomFurnitureBin*>(
      &::proto::_HomeCustomFurnitureBin_default_instance_);
}
::proto::HomeCustomFurnitureBin* HomeDataBin::mutable_custom_furniture_bin() {
  
  if (custom_furniture_bin_ == NULL) {
    custom_furniture_bin_ = new ::proto::HomeCustomFurnitureBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeDataBin.custom_furniture_bin)
  return custom_furniture_bin_;
}
::proto::HomeCustomFurnitureBin* HomeDataBin::release_custom_furniture_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeDataBin.custom_furniture_bin)
  
  ::proto::HomeCustomFurnitureBin* temp = custom_furniture_bin_;
  custom_furniture_bin_ = NULL;
  return temp;
}
void HomeDataBin::set_allocated_custom_furniture_bin(::proto::HomeCustomFurnitureBin* custom_furniture_bin) {
  delete custom_furniture_bin_;
  custom_furniture_bin_ = custom_furniture_bin;
  if (custom_furniture_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeDataBin.custom_furniture_bin)
}

// .proto.HomePictureFrameBin picture_frame_bin = 9;
bool HomeDataBin::has_picture_frame_bin() const {
  return this != internal_default_instance() && picture_frame_bin_ != NULL;
}
void HomeDataBin::clear_picture_frame_bin() {
  if (GetArenaNoVirtual() == NULL && picture_frame_bin_ != NULL) delete picture_frame_bin_;
  picture_frame_bin_ = NULL;
}
const ::proto::HomePictureFrameBin& HomeDataBin::picture_frame_bin() const {
  const ::proto::HomePictureFrameBin* p = picture_frame_bin_;
  // @@protoc_insertion_point(field_get:proto.HomeDataBin.picture_frame_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomePictureFrameBin*>(
      &::proto::_HomePictureFrameBin_default_instance_);
}
::proto::HomePictureFrameBin* HomeDataBin::mutable_picture_frame_bin() {
  
  if (picture_frame_bin_ == NULL) {
    picture_frame_bin_ = new ::proto::HomePictureFrameBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeDataBin.picture_frame_bin)
  return picture_frame_bin_;
}
::proto::HomePictureFrameBin* HomeDataBin::release_picture_frame_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeDataBin.picture_frame_bin)
  
  ::proto::HomePictureFrameBin* temp = picture_frame_bin_;
  picture_frame_bin_ = NULL;
  return temp;
}
void HomeDataBin::set_allocated_picture_frame_bin(::proto::HomePictureFrameBin* picture_frame_bin) {
  delete picture_frame_bin_;
  picture_frame_bin_ = picture_frame_bin;
  if (picture_frame_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeDataBin.picture_frame_bin)
}

// .proto.HomeGroupRecordCompBin group_record_bin = 10;
bool HomeDataBin::has_group_record_bin() const {
  return this != internal_default_instance() && group_record_bin_ != NULL;
}
void HomeDataBin::clear_group_record_bin() {
  if (GetArenaNoVirtual() == NULL && group_record_bin_ != NULL) delete group_record_bin_;
  group_record_bin_ = NULL;
}
const ::proto::HomeGroupRecordCompBin& HomeDataBin::group_record_bin() const {
  const ::proto::HomeGroupRecordCompBin* p = group_record_bin_;
  // @@protoc_insertion_point(field_get:proto.HomeDataBin.group_record_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeGroupRecordCompBin*>(
      &::proto::_HomeGroupRecordCompBin_default_instance_);
}
::proto::HomeGroupRecordCompBin* HomeDataBin::mutable_group_record_bin() {
  
  if (group_record_bin_ == NULL) {
    group_record_bin_ = new ::proto::HomeGroupRecordCompBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeDataBin.group_record_bin)
  return group_record_bin_;
}
::proto::HomeGroupRecordCompBin* HomeDataBin::release_group_record_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeDataBin.group_record_bin)
  
  ::proto::HomeGroupRecordCompBin* temp = group_record_bin_;
  group_record_bin_ = NULL;
  return temp;
}
void HomeDataBin::set_allocated_group_record_bin(::proto::HomeGroupRecordCompBin* group_record_bin) {
  delete group_record_bin_;
  group_record_bin_ = group_record_bin;
  if (group_record_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeDataBin.group_record_bin)
}

// .proto.HomeBlueprintCompBin blueprint_bin = 11;
bool HomeDataBin::has_blueprint_bin() const {
  return this != internal_default_instance() && blueprint_bin_ != NULL;
}
void HomeDataBin::clear_blueprint_bin() {
  if (GetArenaNoVirtual() == NULL && blueprint_bin_ != NULL) delete blueprint_bin_;
  blueprint_bin_ = NULL;
}
const ::proto::HomeBlueprintCompBin& HomeDataBin::blueprint_bin() const {
  const ::proto::HomeBlueprintCompBin* p = blueprint_bin_;
  // @@protoc_insertion_point(field_get:proto.HomeDataBin.blueprint_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeBlueprintCompBin*>(
      &::proto::_HomeBlueprintCompBin_default_instance_);
}
::proto::HomeBlueprintCompBin* HomeDataBin::mutable_blueprint_bin() {
  
  if (blueprint_bin_ == NULL) {
    blueprint_bin_ = new ::proto::HomeBlueprintCompBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeDataBin.blueprint_bin)
  return blueprint_bin_;
}
::proto::HomeBlueprintCompBin* HomeDataBin::release_blueprint_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeDataBin.blueprint_bin)
  
  ::proto::HomeBlueprintCompBin* temp = blueprint_bin_;
  blueprint_bin_ = NULL;
  return temp;
}
void HomeDataBin::set_allocated_blueprint_bin(::proto::HomeBlueprintCompBin* blueprint_bin) {
  delete blueprint_bin_;
  blueprint_bin_ = blueprint_bin;
  if (blueprint_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeDataBin.blueprint_bin)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeData::kUidFieldNumber;
const int HomeData::kDataVersionFieldNumber;
const int HomeData::kBinDataFieldNumber;
const int HomeData::kBlockEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeData::HomeData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HomeData)
}
HomeData::HomeData(const HomeData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bin_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bin_data().size() > 0) {
    bin_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bin_data_);
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&block_end_time_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(block_end_time_));
  // @@protoc_insertion_point(copy_constructor:proto.HomeData)
}

void HomeData::SharedCtor() {
  bin_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&block_end_time_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(block_end_time_));
  _cached_size_ = 0;
}

HomeData::~HomeData() {
  // @@protoc_insertion_point(destructor:proto.HomeData)
  SharedDtor();
}

void HomeData::SharedDtor() {
  bin_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HomeData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeData::descriptor() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomeData& HomeData::default_instance() {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::InitDefaults();
  return *internal_default_instance();
}

HomeData* HomeData::New(::google::protobuf::Arena* arena) const {
  HomeData* n = new HomeData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HomeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bin_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&block_end_time_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(block_end_time_));
  _internal_metadata_.Clear();
}

bool HomeData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HomeData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes bin_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bin_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 block_end_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &block_end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HomeData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HomeData)
  return false;
#undef DO_
}

void HomeData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HomeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // uint32 data_version = 2;
  if (this->data_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->data_version(), output);
  }

  // bytes bin_data = 3;
  if (this->bin_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->bin_data(), output);
  }

  // int32 block_end_time = 4;
  if (this->block_end_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->block_end_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HomeData)
}

::google::protobuf::uint8* HomeData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HomeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // uint32 data_version = 2;
  if (this->data_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->data_version(), target);
  }

  // bytes bin_data = 3;
  if (this->bin_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->bin_data(), target);
  }

  // int32 block_end_time = 4;
  if (this->block_end_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->block_end_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HomeData)
  return target;
}

size_t HomeData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HomeData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes bin_data = 3;
  if (this->bin_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bin_data());
  }

  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 data_version = 2;
  if (this->data_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_version());
  }

  // int32 block_end_time = 4;
  if (this->block_end_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->block_end_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HomeData)
  GOOGLE_DCHECK_NE(&from, this);
  const HomeData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HomeData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HomeData)
    MergeFrom(*source);
  }
}

void HomeData::MergeFrom(const HomeData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HomeData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bin_data().size() > 0) {

    bin_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bin_data_);
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.data_version() != 0) {
    set_data_version(from.data_version());
  }
  if (from.block_end_time() != 0) {
    set_block_end_time(from.block_end_time());
  }
}

void HomeData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HomeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeData::CopyFrom(const HomeData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HomeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomeData::IsInitialized() const {
  return true;
}

void HomeData::Swap(HomeData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeData::InternalSwap(HomeData* other) {
  using std::swap;
  bin_data_.Swap(&other->bin_data_);
  swap(uid_, other->uid_);
  swap(data_version_, other->data_version_);
  swap(block_end_time_, other->block_end_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeData::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2ehome_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2ehome_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeData

// uint32 uid = 1;
void HomeData::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 HomeData::uid() const {
  // @@protoc_insertion_point(field_get:proto.HomeData.uid)
  return uid_;
}
void HomeData::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeData.uid)
}

// uint32 data_version = 2;
void HomeData::clear_data_version() {
  data_version_ = 0u;
}
::google::protobuf::uint32 HomeData::data_version() const {
  // @@protoc_insertion_point(field_get:proto.HomeData.data_version)
  return data_version_;
}
void HomeData::set_data_version(::google::protobuf::uint32 value) {
  
  data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeData.data_version)
}

// bytes bin_data = 3;
void HomeData::clear_bin_data() {
  bin_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HomeData::bin_data() const {
  // @@protoc_insertion_point(field_get:proto.HomeData.bin_data)
  return bin_data_.GetNoArena();
}
void HomeData::set_bin_data(const ::std::string& value) {
  
  bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.HomeData.bin_data)
}
#if LANG_CXX11
void HomeData::set_bin_data(::std::string&& value) {
  
  bin_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.HomeData.bin_data)
}
#endif
void HomeData::set_bin_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.HomeData.bin_data)
}
void HomeData::set_bin_data(const void* value, size_t size) {
  
  bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.HomeData.bin_data)
}
::std::string* HomeData::mutable_bin_data() {
  
  // @@protoc_insertion_point(field_mutable:proto.HomeData.bin_data)
  return bin_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HomeData::release_bin_data() {
  // @@protoc_insertion_point(field_release:proto.HomeData.bin_data)
  
  return bin_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HomeData::set_allocated_bin_data(::std::string* bin_data) {
  if (bin_data != NULL) {
    
  } else {
    
  }
  bin_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bin_data);
  // @@protoc_insertion_point(field_set_allocated:proto.HomeData.bin_data)
}

// int32 block_end_time = 4;
void HomeData::clear_block_end_time() {
  block_end_time_ = 0;
}
::google::protobuf::int32 HomeData::block_end_time() const {
  // @@protoc_insertion_point(field_get:proto.HomeData.block_end_time)
  return block_end_time_;
}
void HomeData::set_block_end_time(::google::protobuf::int32 value) {
  
  block_end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeData.block_end_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
